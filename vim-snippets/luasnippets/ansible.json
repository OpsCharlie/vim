{
  "add_host": {
    "prefix": "add_host",
    "description": "Add a host (and alternatively a group) to the ansible-playbook in-memory inventory",
    "body": [
      "ansible.builtin.add_host:",
      "\tname: ${1:}",
      "\t#groups: ${2:}"
    ],
    "luasnip": {
      "priority": -50
    }
  },
  "apt": {
    "prefix": "apt",
    "description": "Manages apt-packages",
    "body": [
      "ansible.builtin.apt:",
      "\t#allow_change_held_packages: ${1:false}",
      "\t#allow_downgrade: ${2:false}",
      "\t#allow_unauthenticated: ${3:false}",
      "\t#autoclean: ${4:false}",
      "\t#autoremove: ${5:false}",
      "\t#cache_valid_time: ${6:0}",
      "\t#clean: ${7:false}",
      "\t#deb: ${8:}",
      "\t#default_release: ${9:}",
      "\t#dpkg_options: ${10:force-confdef,force-confold}",
      "\t#fail_on_autoremove: ${11:false}",
      "\t#force: ${12:false}",
      "\t#force_apt_get: ${13:false}",
      "\t#install_recommends: ${14:}",
      "\t#lock_timeout: ${15:60}",
      "\t#name: ${16:}",
      "\t#only_upgrade: ${17:false}",
      "\t#policy_rc_d: ${18:}",
      "\t#purge: ${19:false}",
      "\t#state: ${20:absent|build-dep|latest|#present|fixed}",
      "\t#update_cache: ${21:}",
      "\t#update_cache_retries: ${22:5}",
      "\t#update_cache_retry_max_delay: ${23:12}",
      "\t#upgrade: ${24:dist|full|#no|safe|yes}"
    ]
  },
  "apt_key": {
    "prefix": "apt_key",
    "description": "Add or remove an apt key",
    "body": [
      "ansible.builtin.apt_key:",
      "\t#data: ${1:}",
      "\t#file: ${2:}",
      "\t#id: ${3:}",
      "\t#keyring: ${4:}",
      "\t#keyserver: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#url: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "apt_repository": {
    "prefix": "apt_repository",
    "description": "Add and remove APT repositories",
    "body": [
      "ansible.builtin.apt_repository:",
      "\trepo: ${1:}",
      "\t#codename: ${2:}",
      "\t#filename: ${3:}",
      "\t#install_python_apt: ${4:true}",
      "\t#mode: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#update_cache: ${7:true}",
      "\t#update_cache_retries: ${8:5}",
      "\t#update_cache_retry_max_delay: ${9:12}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "assemble": {
    "prefix": "assemble",
    "description": "Assemble configuration files from fragments",
    "body": [
      "ansible.builtin.assemble:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#decrypt: ${5:true}",
      "\t#delimiter: ${6:}",
      "\t#group: ${7:}",
      "\t#ignore_hidden: ${8:false}",
      "\t#mode: ${9:}",
      "\t#owner: ${10:}",
      "\t#regexp: ${11:}",
      "\t#remote_src: ${12:true}",
      "\t#selevel: ${13:}",
      "\t#serole: ${14:}",
      "\t#setype: ${15:}",
      "\t#seuser: ${16:}",
      "\t#unsafe_writes: ${17:false}",
      "\t#validate: ${18:}"
    ]
  },
  "assert": {
    "prefix": "assert",
    "description": "Asserts given expressions are true",
    "body": [
      "ansible.builtin.assert:",
      "\tthat: ${1:}",
      "\t#fail_msg: ${2:}",
      "\t#quiet: ${3:false}",
      "\t#success_msg: ${4:}"
    ]
  },
  "async_status": {
    "prefix": "async_status",
    "description": "Obtain status of asynchronous task",
    "body": [
      "ansible.builtin.async_status:",
      "\tjid: ${1:}",
      "\t#mode: ${2:cleanup|#status}"
    ]
  },
  "blockinfile": {
    "prefix": "blockinfile",
    "description": "Insert/update/remove a text block surrounded by marker lines",
    "body": [
      "ansible.builtin.blockinfile:",
      "\tpath: ${1:}",
      "\t#append_newline: ${2:false}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#block: ${5:\"\"}",
      "\t#create: ${6:false}",
      "\t#group: ${7:}",
      "\t#insertafter: ${8:#EOF|*regex*}",
      "\t#insertbefore: ${9:BOF|*regex*}",
      "\t#marker: \\${10:# {mark\\} ANSIBLE MANAGED BLOCK\\}",
      "\t#marker_begin: ${11:BEGIN}",
      "\t#marker_end: ${12:END}",
      "\t#mode: ${13:}",
      "\t#owner: ${14:}",
      "\t#prepend_newline: ${15:false}",
      "\t#selevel: ${16:}",
      "\t#serole: ${17:}",
      "\t#setype: ${18:}",
      "\t#seuser: ${19:}",
      "\t#state: ${20:absent|#present}",
      "\t#unsafe_writes: ${21:false}",
      "\t#validate: ${22:}"
    ]
  },
  "copy": {
    "prefix": "copy",
    "description": "Copy files to remote locations",
    "body": [
      "ansible.builtin.copy:",
      "\tdest: ${1:}",
      "\t#attributes: ${2:}",
      "\t#backup: ${3:false}",
      "\t#checksum: ${4:}",
      "\t#content: ${5:}",
      "\t#decrypt: ${6:true}",
      "\t#directory_mode: ${7:}",
      "\t#follow: ${8:false}",
      "\t#force: ${9:true}",
      "\t#group: ${10:}",
      "\t#local_follow: ${11:true}",
      "\t#mode: ${12:}",
      "\t#owner: ${13:}",
      "\t#remote_src: ${14:false}",
      "\t#selevel: ${15:}",
      "\t#serole: ${16:}",
      "\t#setype: ${17:}",
      "\t#seuser: ${18:}",
      "\t#src: ${19:}",
      "\t#unsafe_writes: ${20:false}",
      "\t#validate: ${21:}"
    ]
  },
  "cron": {
    "prefix": "cron",
    "description": "Manage cron.d and crontab entries",
    "body": [
      "ansible.builtin.cron:",
      "\tname: ${1:}",
      "\t#backup: ${2:false}",
      "\t#cron_file: ${3:}",
      "\t#day: ${4:*}",
      "\t#disabled: ${5:false}",
      "\t#env: ${6:false}",
      "\t#hour: ${7:*}",
      "\t#insertafter: ${8:}",
      "\t#insertbefore: ${9:}",
      "\t#job: ${10:}",
      "\t#minute: ${11:*}",
      "\t#month: ${12:*}",
      "\t#special_time: ${13:annually|daily|hourly|monthly|reboot|weekly|yearly}",
      "\t#state: ${14:absent|#present}",
      "\t#user: ${15:}",
      "\t#weekday: ${16:*}"
    ]
  },
  "deb822_repository": {
    "prefix": "deb822_repository",
    "description": "Add and remove deb822 formatted repositories",
    "body": [
      "ansible.builtin.deb822_repository:",
      "\tname: ${1:}",
      "\t#allow_downgrade_to_insecure: ${2:}",
      "\t#allow_insecure: ${3:}",
      "\t#allow_weak: ${4:}",
      "\t#architectures: ${5:}",
      "\t#by_hash: ${6:}",
      "\t#check_date: ${7:}",
      "\t#check_valid_until: ${8:}",
      "\t#components: ${9:}",
      "\t#date_max_future: ${10:}",
      "\t#enabled: ${11:}",
      "\t#inrelease_path: ${12:}",
      "\t#languages: ${13:}",
      "\t#mode: ${14:0644}",
      "\t#pdiffs: ${15:}",
      "\t#signed_by: ${16:}",
      "\t#state: ${17:absent|#present}",
      "\t#suites: ${18:}",
      "\t#targets: ${19:}",
      "\t#trusted: ${20:}",
      "\t#types: ${21:['#deb', 'deb-src']}",
      "\t#uris: ${22:}"
    ]
  },
  "debconf": {
    "prefix": "debconf",
    "description": "Configure a .deb package",
    "body": [
      "ansible.builtin.debconf:",
      "\tname: ${1:}",
      "\t#question: ${2:}",
      "\t#unseen: ${3:false}",
      "\t#value: ${4:}",
      "\t#vtype: ${5:boolean|error|multiselect|note|password|seen|select|string|text|title}"
    ]
  },
  "debug": {
    "prefix": "debug",
    "description": "Print statements during execution",
    "body": [
      "ansible.builtin.debug:",
      "\t#msg: ${1:Hello world!}",
      "\t#var: ${2:}",
      "\t#verbosity: ${3:0}"
    ]
  },
  "dnf": {
    "prefix": "dnf",
    "description": "Manages packages with the I(dnf) package manager",
    "body": [
      "ansible.builtin.dnf:",
      "\t#allow_downgrade: ${1:false}",
      "\t#allowerasing: ${2:false}",
      "\t#autoremove: ${3:false}",
      "\t#bugfix: ${4:false}",
      "\t#cacheonly: ${5:false}",
      "\t#conf_file: ${6:}",
      "\t#disable_excludes: ${7:}",
      "\t#disable_gpg_check: ${8:false}",
      "\t#disable_plugin: ${9:[]}",
      "\t#disablerepo: ${10:[]}",
      "\t#download_dir: ${11:}",
      "\t#download_only: ${12:false}",
      "\t#enable_plugin: ${13:[]}",
      "\t#enablerepo: ${14:[]}",
      "\t#exclude: ${15:[]}",
      "\t#install_repoquery: ${16:true}",
      "\t#install_weak_deps: ${17:true}",
      "\t#installroot: ${18:/}",
      "\t#list: ${19:}",
      "\t#lock_timeout: ${20:30}",
      "\t#name: ${21:[]}",
      "\t#nobest: ${22:false}",
      "\t#releasever: ${23:}",
      "\t#security: ${24:false}",
      "\t#skip_broken: ${25:false}",
      "\t#sslverify: ${26:true}",
      "\t#state: ${27:absent|present|installed|removed|latest}",
      "\t#update_cache: ${28:false}",
      "\t#update_only: ${29:false}",
      "\t#use_backend: ${30:#auto|dnf4|dnf5}",
      "\t#validate_certs: ${31:true}"
    ]
  },
  "dnf5": {
    "prefix": "dnf5",
    "description": "Manages packages with the I(dnf5) package manager",
    "body": [
      "ansible.builtin.dnf5:",
      "\t#allow_downgrade: ${1:false}",
      "\t#allowerasing: ${2:false}",
      "\t#autoremove: ${3:false}",
      "\t#bugfix: ${4:false}",
      "\t#cacheonly: ${5:false}",
      "\t#conf_file: ${6:}",
      "\t#disable_excludes: ${7:}",
      "\t#disable_gpg_check: ${8:false}",
      "\t#disable_plugin: ${9:[]}",
      "\t#disablerepo: ${10:[]}",
      "\t#download_dir: ${11:}",
      "\t#download_only: ${12:false}",
      "\t#enable_plugin: ${13:[]}",
      "\t#enablerepo: ${14:[]}",
      "\t#exclude: ${15:[]}",
      "\t#install_repoquery: ${16:true}",
      "\t#install_weak_deps: ${17:true}",
      "\t#installroot: ${18:/}",
      "\t#list: ${19:}",
      "\t#lock_timeout: ${20:30}",
      "\t#name: ${21:[]}",
      "\t#nobest: ${22:false}",
      "\t#releasever: ${23:}",
      "\t#security: ${24:false}",
      "\t#skip_broken: ${25:false}",
      "\t#sslverify: ${26:true}",
      "\t#state: ${27:absent|present|installed|removed|latest}",
      "\t#update_cache: ${28:false}",
      "\t#update_only: ${29:false}",
      "\t#validate_certs: ${30:true}"
    ]
  },
  "dpkg_selections": {
    "prefix": "dpkg_selections",
    "description": "Dpkg package selection selections",
    "body": [
      "ansible.builtin.dpkg_selections:",
      "\tname: ${1:}",
      "\tselection: ${2:install|hold|deinstall|purge}"
    ]
  },
  "expect": {
    "prefix": "expect",
    "description": "Executes a command and responds to prompts",
    "body": [
      "ansible.builtin.expect:",
      "\tcommand: ${1:}",
      "\tresponses: ${2:}",
      "\t#chdir: ${3:}",
      "\t#creates: ${4:}",
      "\t#echo: ${5:false}",
      "\t#removes: ${6:}",
      "\t#timeout: ${7:30}"
    ]
  },
  "fail": {
    "prefix": "fail",
    "description": "Fail with custom message",
    "body": [
      "ansible.builtin.fail:",
      "\t#msg: ${1:Failed as requested from task}"
    ]
  },
  "fetch": {
    "prefix": "fetch",
    "description": "Fetch files from remote nodes",
    "body": [
      "ansible.builtin.fetch:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#fail_on_missing: ${3:true}",
      "\t#flat: ${4:false}",
      "\t#validate_checksum: ${5:true}"
    ]
  },
  "file": {
    "prefix": "file",
    "description": "Manage files and file properties",
    "body": [
      "ansible.builtin.file:",
      "\tpath: ${1:}",
      "\t#access_time: ${2:}",
      "\t#access_time_format: ${3:%Y%m%d%H%M.%S}",
      "\t#attributes: ${4:}",
      "\t#follow: ${5:true}",
      "\t#force: ${6:false}",
      "\t#group: ${7:}",
      "\t#mode: ${8:}",
      "\t#modification_time: ${9:}",
      "\t#modification_time_format: ${10:%Y%m%d%H%M.%S}",
      "\t#owner: ${11:}",
      "\t#recurse: ${12:false}",
      "\t#selevel: ${13:}",
      "\t#serole: ${14:}",
      "\t#setype: ${15:}",
      "\t#seuser: ${16:}",
      "\t#src: ${17:}",
      "\t#state: ${18:absent|directory|file|hard|link|touch}",
      "\t#unsafe_writes: ${19:false}"
    ]
  },
  "find": {
    "prefix": "find",
    "description": "Return a list of files based on specific criteria",
    "body": [
      "ansible.builtin.find:",
      "\tpaths: ${1:}",
      "\t#age: ${2:}",
      "\t#age_stamp: ${3:atime|ctime|#mtime}",
      "\t#contains: ${4:}",
      "\t#depth: ${5:}",
      "\t#exact_mode: ${6:true}",
      "\t#excludes: ${7:}",
      "\t#file_type: ${8:any|directory|#file|link}",
      "\t#follow: ${9:false}",
      "\t#get_checksum: ${10:false}",
      "\t#hidden: ${11:false}",
      "\t#mode: ${12:}",
      "\t#patterns: ${13:[]}",
      "\t#read_whole_file: ${14:false}",
      "\t#recurse: ${15:false}",
      "\t#size: ${16:}",
      "\t#use_regex: ${17:false}"
    ]
  },
  "gather_facts": {
    "prefix": "gather_facts",
    "description": "Gathers facts about remote hosts",
    "body": [
      "ansible.builtin.gather_facts:",
      "\t#parallel: ${1:}"
    ]
  },
  "get_url": {
    "prefix": "get_url",
    "description": "Downloads files from HTTP, HTTPS, or FTP to node",
    "body": [
      "ansible.builtin.get_url:",
      "\tdest: ${1:}",
      "\turl: ${2:}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#checksum: ${5:\"\"}",
      "\t#ciphers: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#decompress: ${9:true}",
      "\t#force: ${10:false}",
      "\t#force_basic_auth: ${11:false}",
      "\t#group: ${12:}",
      "\t#headers: ${13:}",
      "\t#http_agent: ${14:ansible-httpget}",
      "\t#mode: ${15:}",
      "\t#owner: ${16:}",
      "\t#selevel: ${17:}",
      "\t#serole: ${18:}",
      "\t#setype: ${19:}",
      "\t#seuser: ${20:}",
      "\t#timeout: ${21:10}",
      "\t#tmp_dest: ${22:}",
      "\t#unredirected_headers: ${23:[]}",
      "\t#unsafe_writes: ${24:false}",
      "\t#url_password: ${25:}",
      "\t#url_username: ${26:}",
      "\t#use_gssapi: ${27:false}",
      "\t#use_netrc: ${28:true}",
      "\t#use_proxy: ${29:true}",
      "\t#validate_certs: ${30:true}"
    ]
  },
  "getent": {
    "prefix": "getent",
    "description": "A wrapper to the unix getent utility",
    "body": [
      "ansible.builtin.getent:",
      "\tdatabase: ${1:}",
      "\t#fail_key: ${2:true}",
      "\t#key: ${3:}",
      "\t#service: ${4:}",
      "\t#split: ${5:}"
    ]
  },
  "git": {
    "prefix": "git",
    "description": "Deploy software (or files) from git checkouts",
    "body": [
      "ansible.builtin.git:",
      "\tdest: ${1:}",
      "\trepo: ${2:}",
      "\t#accept_hostkey: ${3:false}",
      "\t#accept_newhostkey: ${4:false}",
      "\t#archive: ${5:}",
      "\t#archive_prefix: ${6:}",
      "\t#bare: ${7:false}",
      "\t#clone: ${8:true}",
      "\t#depth: ${9:}",
      "\t#executable: ${10:}",
      "\t#force: ${11:false}",
      "\t#gpg_whitelist: ${12:[]}",
      "\t#key_file: ${13:}",
      "\t#recursive: ${14:true}",
      "\t#reference: ${15:}",
      "\t#refspec: ${16:}",
      "\t#remote: ${17:origin}",
      "\t#separate_git_dir: ${18:}",
      "\t#single_branch: ${19:false}",
      "\t#ssh_opts: ${20:}",
      "\t#track_submodules: ${21:false}",
      "\t#umask: ${22:}",
      "\t#update: ${23:true}",
      "\t#verify_commit: ${24:false}",
      "\t#version: ${25:HEAD}"
    ]
  },
  "group": {
    "prefix": "group",
    "description": "Add or remove groups",
    "body": [
      "ansible.builtin.group:",
      "\tname: ${1:}",
      "\t#force: ${2:false}",
      "\t#gid: ${3:}",
      "\t#local: ${4:false}",
      "\t#non_unique: ${5:false}",
      "\t#state: ${6:absent|#present}",
      "\t#system: ${7:false}"
    ]
  },
  "group_by": {
    "prefix": "group_by",
    "description": "Create Ansible groups based on facts",
    "body": [
      "ansible.builtin.group_by:",
      "\tkey: ${1:}",
      "\t#parents: ${2:all}"
    ]
  },
  "hostname": {
    "prefix": "hostname",
    "description": "Manage hostname",
    "body": [
      "ansible.builtin.hostname:",
      "\tname: ${1:}",
      "\t#use: ${2:alpine|debian|freebsd|generic|macos|macosx|darwin|openbsd|openrc|redhat|sles|solaris|systemd}"
    ]
  },
  "import_playbook": {
    "prefix": "import_playbook",
    "description": "Import a playbook",
    "body": [
      "ansible.builtin.import_playbook:",
      "\t#free-form: ${1:}"
    ]
  },
  "import_role": {
    "prefix": "import_role",
    "description": "Import a role into a play",
    "body": [
      "ansible.builtin.import_role:",
      "\tname: ${1:}",
      "\t#allow_duplicates: ${2:true}",
      "\t#defaults_from: ${3:main}",
      "\t#handlers_from: ${4:main}",
      "\t#rolespec_validate: ${5:true}",
      "\t#tasks_from: ${6:main}",
      "\t#vars_from: ${7:main}"
    ]
  },
  "import_tasks": {
    "prefix": "import_tasks",
    "description": "Import a task list",
    "body": [
      "ansible.builtin.import_tasks:",
      "\t#file: ${1:}",
      "\t#free-form: ${2:}"
    ]
  },
  "include_role": {
    "prefix": "include_role",
    "description": "Load and execute a role",
    "body": [
      "ansible.builtin.include_role:",
      "\tname: ${1:}",
      "\t#allow_duplicates: ${2:true}",
      "\t#apply: ${3:}",
      "\t#defaults_from: ${4:main}",
      "\t#handlers_from: ${5:main}",
      "\t#public: ${6:false}",
      "\t#rolespec_validate: ${7:true}",
      "\t#tasks_from: ${8:main}",
      "\t#vars_from: ${9:main}"
    ]
  },
  "include_tasks": {
    "prefix": "include_tasks",
    "description": "Dynamically include a task list",
    "body": [
      "ansible.builtin.include_tasks:",
      "\t#apply: ${1:}",
      "\t#file: ${2:}",
      "\t#free-form: ${3:}"
    ]
  },
  "include_vars": {
    "prefix": "include_vars",
    "description": "Load variables from files, dynamically within a task",
    "body": [
      "ansible.builtin.include_vars:",
      "\t#depth: ${1:0}",
      "\t#dir: ${2:}",
      "\t#extensions: ${3:['json', 'yaml', 'yml']}",
      "\t#file: ${4:}",
      "\t#files_matching: ${5:}",
      "\t#free-form: ${6:}",
      "\t#hash_behaviour: ${7:replace|merge}",
      "\t#ignore_files: ${8:}",
      "\t#ignore_unknown_extensions: ${9:false}",
      "\t#name: ${10:}"
    ]
  },
  "iptables": {
    "prefix": "iptables",
    "description": "Modify iptables rules",
    "body": [
      "ansible.builtin.iptables:",
      "\t#action: ${1:#append|insert}",
      "\t#chain: ${2:}",
      "\t#chain_management: ${3:false}",
      "\t#comment: ${4:}",
      "\t#ctstate: ${5:[]}",
      "\t#destination: ${6:}",
      "\t#destination_port: ${7:}",
      "\t#destination_ports: ${8:[]}",
      "\t#dst_range: ${9:}",
      "\t#flush: ${10:false}",
      "\t#fragment: ${11:}",
      "\t#gateway: ${12:}",
      "\t#gid_owner: ${13:}",
      "\t#goto: ${14:}",
      "\t#icmp_type: ${15:}",
      "\t#in_interface: ${16:}",
      "\t#ip_version: ${17:#ipv4|ipv6}",
      "\t#jump: ${18:}",
      "\t#limit: ${19:}",
      "\t#limit_burst: ${20:}",
      "\t#log_level: ${21:0|1|2|3|4|5|6|7|emerg|alert|crit|error|warning|notice|info|debug}",
      "\t#log_prefix: ${22:}",
      "\t#match: ${23:[]}",
      "\t#match_set: ${24:}",
      "\t#match_set_flags: ${25:src|dst|src,dst|dst,src}",
      "\t#numeric: ${26:false}",
      "\t#out_interface: ${27:}",
      "\t#policy: ${28:ACCEPT|DROP|QUEUE|RETURN}",
      "\t#protocol: ${29:}",
      "\t#reject_with: ${30:}",
      "\t#rule_num: ${31:}",
      "\t#set_counters: ${32:}",
      "\t#set_dscp_mark: ${33:}",
      "\t#set_dscp_mark_class: ${34:}",
      "\t#source: ${35:}",
      "\t#source_port: ${36:}",
      "\t#src_range: ${37:}",
      "\t#state: ${38:absent|#present}",
      "\t#syn: ${39:#ignore|match|negate}",
      "\t#table: ${40:#filter|nat|mangle|raw|security}",
      "\t#tcp_flags: ${41:}",
      "\t#to_destination: ${42:}",
      "\t#to_ports: ${43:}",
      "\t#to_source: ${44:}",
      "\t#uid_owner: ${45:}",
      "\t#wait: ${46:}"
    ]
  },
  "known_hosts": {
    "prefix": "known_hosts",
    "description": "Add or remove a host from the C(known_hosts) file",
    "body": [
      "ansible.builtin.known_hosts:",
      "\tname: ${1:}",
      "\t#hash_host: ${2:false}",
      "\t#key: ${3:}",
      "\t#path: ${4:~/.ssh/known_hosts}",
      "\t#state: ${5:absent|#present}"
    ]
  },
  "lineinfile": {
    "prefix": "lineinfile",
    "description": "Manage lines in text files",
    "body": [
      "ansible.builtin.lineinfile:",
      "\tpath: ${1:}",
      "\t#attributes: ${2:}",
      "\t#backrefs: ${3:false}",
      "\t#backup: ${4:false}",
      "\t#create: ${5:false}",
      "\t#firstmatch: ${6:false}",
      "\t#group: ${7:}",
      "\t#insertafter: ${8:#EOF|*regex*}",
      "\t#insertbefore: ${9:BOF|*regex*}",
      "\t#line: ${10:}",
      "\t#mode: ${11:}",
      "\t#others: ${12:}",
      "\t#owner: ${13:}",
      "\t#regexp: ${14:}",
      "\t#search_string: ${15:}",
      "\t#selevel: ${16:}",
      "\t#serole: ${17:}",
      "\t#setype: ${18:}",
      "\t#seuser: ${19:}",
      "\t#state: ${20:absent|#present}",
      "\t#unsafe_writes: ${21:false}",
      "\t#validate: ${22:}"
    ]
  },
  "meta": {
    "prefix": "meta",
    "description": "Execute Ansible 'actions'",
    "body": [
      "ansible.builtin.meta:",
      "\t${1:free_form: clear_facts|clear_host_errors|end_host|end_play|flush_handlers|noop|refresh_inventory|reset_connection|end_batch}"
    ]
  },
  "package": {
    "prefix": "package",
    "description": "Generic OS package manager",
    "body": [
      "ansible.builtin.package:",
      "\tname: ${1:}",
      "\tstate: ${2:}",
      "\t#use: ${3:auto}"
    ]
  },
  "package_facts": {
    "prefix": "package_facts",
    "description": "Package information as facts",
    "body": [
      "ansible.builtin.package_facts:",
      "\t#manager: ${1:['#auto', 'rpm', 'apt', 'portage', 'pkg', 'pacman', 'apk', 'pkg_info']}",
      "\t#strategy: ${2:#first|all}"
    ]
  },
  "pause": {
    "prefix": "pause",
    "description": "Pause playbook execution",
    "body": [
      "ansible.builtin.pause:",
      "\t#echo: ${1:true}",
      "\t#minutes: ${2:}",
      "\t#prompt: ${3:}",
      "\t#seconds: ${4:}"
    ]
  },
  "ping": {
    "prefix": "ping",
    "description": "Try to connect to host, verify a usable python and return V(pong) on success",
    "body": [
      "ansible.builtin.ping:",
      "\t#data: ${1:pong}"
    ]
  },
  "pip": {
    "prefix": "pip",
    "description": "Manages Python library dependencies",
    "body": [
      "ansible.builtin.pip:",
      "\t#chdir: ${1:}",
      "\t#editable: ${2:false}",
      "\t#executable: ${3:}",
      "\t#extra_args: ${4:}",
      "\t#name: ${5:}",
      "\t#requirements: ${6:}",
      "\t#state: ${7:absent|forcereinstall|latest|#present}",
      "\t#umask: ${8:}",
      "\t#version: ${9:}",
      "\t#virtualenv: ${10:}",
      "\t#virtualenv_command: ${11:virtualenv}",
      "\t#virtualenv_python: ${12:}",
      "\t#virtualenv_site_packages: ${13:false}"
    ]
  },
  "raw": {
    "prefix": "raw",
    "description": "Executes a low-down and dirty command",
    "body": [
      "ansible.builtin.raw:",
      "\t${1:free_form: }",
      "\t#executable: ${2:}"
    ]
  },
  "reboot": {
    "prefix": "reboot",
    "description": "Reboot a machine",
    "body": [
      "ansible.builtin.reboot:",
      "\t#boot_time_command: ${1:cat /proc/sys/kernel/random/boot_id}",
      "\t#connect_timeout: ${2:}",
      "\t#msg: ${3:Reboot initiated by Ansible}",
      "\t#post_reboot_delay: ${4:0}",
      "\t#pre_reboot_delay: ${5:0}",
      "\t#reboot_command: ${6:[determined based on target OS]}",
      "\t#reboot_timeout: ${7:600}",
      "\t#search_paths: ${8:['/sbin', '/bin', '/usr/sbin', '/usr/bin', '/usr/local/sbin']}",
      "\t#test_command: ${9:whoami}"
    ]
  },
  "replace": {
    "prefix": "replace",
    "description": "Replace all instances of a particular string in a file using a back-referenced regular expression",
    "body": [
      "ansible.builtin.replace:",
      "\tpath: ${1:}",
      "\tregexp: ${2:}",
      "\t#after: ${3:}",
      "\t#attributes: ${4:}",
      "\t#backup: ${5:false}",
      "\t#before: ${6:}",
      "\t#encoding: ${7:utf-8}",
      "\t#group: ${8:}",
      "\t#mode: ${9:}",
      "\t#others: ${10:}",
      "\t#owner: ${11:}",
      "\t#replace: ${12:\"\"}",
      "\t#selevel: ${13:}",
      "\t#serole: ${14:}",
      "\t#setype: ${15:}",
      "\t#seuser: ${16:}",
      "\t#unsafe_writes: ${17:false}",
      "\t#validate: ${18:}"
    ]
  },
  "rpm_key": {
    "prefix": "rpm_key",
    "description": "Adds or removes a gpg key from the rpm db",
    "body": [
      "ansible.builtin.rpm_key:",
      "\tkey: ${1:}",
      "\t#fingerprint: ${2:}",
      "\t#state: ${3:absent|#present}",
      "\t#validate_certs: ${4:true}"
    ]
  },
  "script": {
    "prefix": "script",
    "description": "Runs a local script on a remote node after transferring it",
    "body": [
      "ansible.builtin.script:",
      "\t#chdir: ${1:}",
      "\t#cmd: ${2:}",
      "\t#creates: ${3:}",
      "\t#decrypt: ${4:true}",
      "\t#executable: ${5:}",
      "\t#${6:free_form: }",
      "\t#removes: ${7:}"
    ]
  },
  "service": {
    "prefix": "service",
    "description": "Manage services",
    "body": [
      "ansible.builtin.service:",
      "\tname: ${1:}",
      "\t#arguments: ${2:\"\"}",
      "\t#enabled: ${3:}",
      "\t#pattern: ${4:}",
      "\t#runlevel: ${5:default}",
      "\t#sleep: ${6:}",
      "\t#state: ${7:reloaded|restarted|started|stopped}",
      "\t#use: ${8:auto}"
    ]
  },
  "service_facts": {
    "prefix": "service_facts",
    "description": "Return service state information as fact data",
    "body": "ansible.builtin.service_facts:"
  },
  "set_fact": {
    "prefix": "set_fact",
    "description": "Set host variable(s) and fact(s).",
    "body": [
      "ansible.builtin.set_fact:",
      "\tkey_value: ${1:}",
      "\t#cacheable: ${2:false}"
    ]
  },
  "set_stats": {
    "prefix": "set_stats",
    "description": "Define and display stats for the current ansible run",
    "body": [
      "ansible.builtin.set_stats:",
      "\tdata: ${1:}",
      "\t#aggregate: ${2:true}",
      "\t#per_host: ${3:false}"
    ]
  },
  "setup": {
    "prefix": "setup",
    "description": "Gathers facts about remote hosts",
    "body": [
      "ansible.builtin.setup:",
      "\t#fact_path: ${1:/etc/ansible/facts.d}",
      "\t#filter: ${2:[]}",
      "\t#gather_subset: ${3:all}",
      "\t#gather_timeout: ${4:10}"
    ]
  },
  "shell": {
    "prefix": "shell",
    "description": "Execute shell commands on targets",
    "body": [
      "ansible.builtin.shell:",
      "\t#chdir: ${1:}",
      "\t#cmd: ${2:}",
      "\t#creates: ${3:}",
      "\t#executable: ${4:}",
      "\t#${5:free_form: }",
      "\t#removes: ${6:}",
      "\t#stdin: ${7:}",
      "\t#stdin_add_newline: ${8:true}"
    ]
  },
  "slurp": {
    "prefix": "slurp",
    "description": "Slurps a file from remote nodes",
    "body": [
      "ansible.builtin.slurp:",
      "\tsrc: ${1:}"
    ]
  },
  "stat": {
    "prefix": "stat",
    "description": "Retrieve file or file system status",
    "body": [
      "ansible.builtin.stat:",
      "\tpath: ${1:}",
      "\t#checksum_algorithm: ${2:md5|#sha1|sha224|sha256|sha384|sha512}",
      "\t#follow: ${3:false}",
      "\t#get_attributes: ${4:true}",
      "\t#get_checksum: ${5:true}",
      "\t#get_mime: ${6:true}"
    ]
  },
  "subversion": {
    "prefix": "subversion",
    "description": "Deploys a subversion repository",
    "body": [
      "ansible.builtin.subversion:",
      "\trepo: ${1:}",
      "\t#checkout: ${2:true}",
      "\t#dest: ${3:}",
      "\t#executable: ${4:}",
      "\t#export: ${5:false}",
      "\t#force: ${6:false}",
      "\t#in_place: ${7:false}",
      "\t#password: ${8:}",
      "\t#revision: ${9:HEAD}",
      "\t#switch: ${10:true}",
      "\t#update: ${11:true}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:false}"
    ]
  },
  "systemd_service": {
    "prefix": "systemd_service",
    "description": "Manage systemd units",
    "body": [
      "ansible.builtin.systemd_service:",
      "\t#daemon_reexec: ${1:false}",
      "\t#daemon_reload: ${2:false}",
      "\t#enabled: ${3:}",
      "\t#force: ${4:}",
      "\t#masked: ${5:}",
      "\t#name: ${6:}",
      "\t#no_block: ${7:false}",
      "\t#scope: ${8:#system|user|global}",
      "\t#state: ${9:reloaded|restarted|started|stopped}"
    ]
  },
  "sysvinit": {
    "prefix": "sysvinit",
    "description": "Manage SysV services.",
    "body": [
      "ansible.builtin.sysvinit:",
      "\tname: ${1:}",
      "\t#arguments: ${2:}",
      "\t#daemonize: ${3:false}",
      "\t#enabled: ${4:}",
      "\t#pattern: ${5:}",
      "\t#runlevels: ${6:}",
      "\t#sleep: ${7:1}",
      "\t#state: ${8:started|stopped|restarted|reloaded}"
    ]
  },
  "tempfile": {
    "prefix": "tempfile",
    "description": "Creates temporary files and directories",
    "body": [
      "ansible.builtin.tempfile:",
      "\t#path: ${1:}",
      "\t#prefix: ${2:ansible.}",
      "\t#state: ${3:directory|#file}",
      "\t#suffix: ${4:\"\"}"
    ]
  },
  "template": {
    "prefix": "template",
    "description": "Template a file out to a target host",
    "body": [
      "ansible.builtin.template:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#block_end_string: ${5:%\\}}",
      "\t#block_start_string: \\${6:{%\\}",
      "\t#comment_end_string: ${7:}",
      "\t#comment_start_string: ${8:}",
      "\t#follow: ${9:false}",
      "\t#force: ${10:true}",
      "\t#group: ${11:}",
      "\t#lstrip_blocks: ${12:false}",
      "\t#mode: ${13:}",
      "\t#newline_sequence: ${14:#\\n|\\r|\\r\\n}",
      "\t#output_encoding: ${15:utf-8}",
      "\t#owner: ${16:}",
      "\t#selevel: ${17:}",
      "\t#serole: ${18:}",
      "\t#setype: ${19:}",
      "\t#seuser: ${20:}",
      "\t#trim_blocks: ${21:true}",
      "\t#unsafe_writes: ${22:false}",
      "\t#validate: ${23:}",
      "\t#variable_end_string: ${24:\\}\\}}",
      "\t#variable_start_string: \\${25:{{\\}"
    ]
  },
  "unarchive": {
    "prefix": "unarchive",
    "description": "Unpacks an archive after (optionally) copying it from the local machine",
    "body": [
      "ansible.builtin.unarchive:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#attributes: ${3:}",
      "\t#copy: ${4:true}",
      "\t#creates: ${5:}",
      "\t#decrypt: ${6:true}",
      "\t#exclude: ${7:[]}",
      "\t#extra_opts: ${8:[]}",
      "\t#group: ${9:}",
      "\t#include: ${10:[]}",
      "\t#io_buffer_size: ${11:65536}",
      "\t#keep_newer: ${12:false}",
      "\t#list_files: ${13:false}",
      "\t#mode: ${14:}",
      "\t#owner: ${15:}",
      "\t#remote_src: ${16:false}",
      "\t#selevel: ${17:}",
      "\t#serole: ${18:}",
      "\t#setype: ${19:}",
      "\t#seuser: ${20:}",
      "\t#unsafe_writes: ${21:false}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "uri": {
    "prefix": "uri",
    "description": "Interacts with webservices",
    "body": [
      "ansible.builtin.uri:",
      "\turl: ${1:}",
      "\t#attributes: ${2:}",
      "\t#body: ${3:}",
      "\t#body_format: ${4:form-urlencoded|json|#raw|form-multipart}",
      "\t#ca_path: ${5:}",
      "\t#ciphers: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#creates: ${9:}",
      "\t#decompress: ${10:true}",
      "\t#dest: ${11:}",
      "\t#follow_redirects: ${12:all|no|none|#safe|urllib2|yes}",
      "\t#force: ${13:false}",
      "\t#force_basic_auth: ${14:false}",
      "\t#group: ${15:}",
      "\t#headers: ${16:{\\}}",
      "\t#http_agent: ${17:ansible-httpget}",
      "\t#method: ${18:GET}",
      "\t#mode: ${19:}",
      "\t#owner: ${20:}",
      "\t#remote_src: ${21:false}",
      "\t#removes: ${22:}",
      "\t#return_content: ${23:false}",
      "\t#selevel: ${24:}",
      "\t#serole: ${25:}",
      "\t#setype: ${26:}",
      "\t#seuser: ${27:}",
      "\t#src: ${28:}",
      "\t#status_code: ${29:[200]}",
      "\t#timeout: ${30:30}",
      "\t#unix_socket: ${31:}",
      "\t#unredirected_headers: ${32:[]}",
      "\t#unsafe_writes: ${33:false}",
      "\t#url_password: ${34:}",
      "\t#url_username: ${35:}",
      "\t#use_gssapi: ${36:false}",
      "\t#use_netrc: ${37:true}",
      "\t#use_proxy: ${38:true}",
      "\t#validate_certs: ${39:true}"
    ]
  },
  "validate_argument_spec": {
    "prefix": "validate_argument_spec",
    "description": "Validate role argument specs.",
    "body": [
      "ansible.builtin.validate_argument_spec:",
      "\targument_spec: ${1:}",
      "\t#provided_arguments: ${2:}"
    ]
  },
  "wait_for": {
    "prefix": "wait_for",
    "description": "Waits for a condition before continuing",
    "body": [
      "ansible.builtin.wait_for:",
      "\t#active_connection_states: ${1:['ESTABLISHED', 'FIN_WAIT1', 'FIN_WAIT2', 'SYN_RECV', 'SYN_SENT', 'TIME_WAIT']}",
      "\t#connect_timeout: ${2:5}",
      "\t#delay: ${3:0}",
      "\t#exclude_hosts: ${4:}",
      "\t#host: ${5:127.0.0.1}",
      "\t#msg: ${6:}",
      "\t#path: ${7:}",
      "\t#port: ${8:}",
      "\t#search_regex: ${9:}",
      "\t#sleep: ${10:1}",
      "\t#state: ${11:absent|drained|present|#started|stopped}",
      "\t#timeout: ${12:300}"
    ]
  },
  "wait_for_connection": {
    "prefix": "wait_for_connection",
    "description": "Waits until remote system is reachable/usable",
    "body": [
      "ansible.builtin.wait_for_connection:",
      "\t#connect_timeout: ${1:5}",
      "\t#delay: ${2:0}",
      "\t#sleep: ${3:1}",
      "\t#timeout: ${4:600}"
    ]
  },
  "yum": {
    "prefix": "yum",
    "description": "Manages packages with the I(yum) package manager",
    "body": [
      "ansible.builtin.yum:",
      "\t#allow_downgrade: ${1:false}",
      "\t#autoremove: ${2:false}",
      "\t#bugfix: ${3:false}",
      "\t#cacheonly: ${4:false}",
      "\t#conf_file: ${5:}",
      "\t#disable_excludes: ${6:}",
      "\t#disable_gpg_check: ${7:false}",
      "\t#disable_plugin: ${8:[]}",
      "\t#disablerepo: ${9:[]}",
      "\t#download_dir: ${10:}",
      "\t#download_only: ${11:false}",
      "\t#enable_plugin: ${12:[]}",
      "\t#enablerepo: ${13:[]}",
      "\t#exclude: ${14:[]}",
      "\t#install_repoquery: ${15:true}",
      "\t#install_weak_deps: ${16:true}",
      "\t#installroot: ${17:/}",
      "\t#list: ${18:}",
      "\t#lock_timeout: ${19:30}",
      "\t#name: ${20:[]}",
      "\t#releasever: ${21:}",
      "\t#security: ${22:false}",
      "\t#skip_broken: ${23:false}",
      "\t#sslverify: ${24:true}",
      "\t#state: ${25:absent|installed|latest|present|removed}",
      "\t#update_cache: ${26:false}",
      "\t#update_only: ${27:false}",
      "\t#use_backend: ${28:#auto|yum|yum4|dnf|dnf4|dnf5}",
      "\t#validate_certs: ${29:true}"
    ]
  },
  "yum_repository": {
    "prefix": "yum_repository",
    "description": "Add or remove YUM repositories",
    "body": [
      "ansible.builtin.yum_repository:",
      "\tname: ${1:}",
      "\t#async: ${2:}",
      "\t#attributes: ${3:}",
      "\t#bandwidth: ${4:}",
      "\t#baseurl: ${5:}",
      "\t#cost: ${6:}",
      "\t#deltarpm_metadata_percentage: ${7:}",
      "\t#deltarpm_percentage: ${8:}",
      "\t#description: ${9:}",
      "\t#enabled: ${10:}",
      "\t#enablegroups: ${11:}",
      "\t#exclude: ${12:}",
      "\t#failovermethod: ${13:roundrobin|priority}",
      "\t#file: ${14:}",
      "\t#gpgcakey: ${15:}",
      "\t#gpgcheck: ${16:}",
      "\t#gpgkey: ${17:}",
      "\t#group: ${18:}",
      "\t#http_caching: ${19:all|packages|none}",
      "\t#include: ${20:}",
      "\t#includepkgs: ${21:}",
      "\t#ip_resolve: ${22:4|6|IPv4|IPv6|whatever}",
      "\t#keepalive: ${23:}",
      "\t#keepcache: ${24:0|1}",
      "\t#metadata_expire: ${25:}",
      "\t#metadata_expire_filter: ${26:never|read-only:past|read-only:present|read-only:future}",
      "\t#metalink: ${27:}",
      "\t#mirrorlist: ${28:}",
      "\t#mirrorlist_expire: ${29:}",
      "\t#mode: ${30:}",
      "\t#module_hotfixes: ${31:}",
      "\t#owner: ${32:}",
      "\t#password: ${33:}",
      "\t#priority: ${34:}",
      "\t#protect: ${35:}",
      "\t#proxy: ${36:}",
      "\t#proxy_password: ${37:}",
      "\t#proxy_username: ${38:}",
      "\t#repo_gpgcheck: ${39:}",
      "\t#reposdir: ${40:/etc/yum.repos.d}",
      "\t#retries: ${41:}",
      "\t#s3_enabled: ${42:}",
      "\t#selevel: ${43:}",
      "\t#serole: ${44:}",
      "\t#setype: ${45:}",
      "\t#seuser: ${46:}",
      "\t#skip_if_unavailable: ${47:}",
      "\t#ssl_check_cert_permissions: ${48:}",
      "\t#sslcacert: ${49:}",
      "\t#sslclientcert: ${50:}",
      "\t#sslclientkey: ${51:}",
      "\t#sslverify: ${52:}",
      "\t#state: ${53:absent|#present}",
      "\t#throttle: ${54:}",
      "\t#timeout: ${55:}",
      "\t#ui_repoid_vars: ${56:}",
      "\t#unsafe_writes: ${57:false}",
      "\t#username: ${58:}"
    ]
  },
  "ec2_metadata_facts": {
    "prefix": "ec2_metadata_facts",
    "description": "Gathers facts (instance metadata) about remote hosts within EC2",
    "body": "amazon.aws.ec2_metadata_facts:"
  },
  "grpc_config": {
    "prefix": "grpc_config",
    "description": "Fetch configuration/state data from gRPC enabled target hosts.",
    "body": [
      "ansible.netcommon.grpc_config:",
      "\t#backup: ${1:false}",
      "\t#backup_options: ${2:}",
      "\t#config: ${3:}",
      "\t#state: ${4:}"
    ]
  },
  "grpc_get": {
    "prefix": "grpc_get",
    "description": "Fetch configuration/state data from gRPC enabled target hosts.",
    "body": [
      "ansible.netcommon.grpc_get:",
      "\t#command: ${1:}",
      "\t#data_type: ${2:}",
      "\t#display: ${3:}",
      "\t#section: ${4:}"
    ]
  },
  "network_resource": {
    "prefix": "network_resource",
    "description": "Manage resource modules",
    "body": [
      "ansible.netcommon.network_resource:",
      "\t#config: ${1:}",
      "\t#name: ${2:}",
      "\t#os_name: ${3:}",
      "\t#running_config: ${4:}",
      "\t#state: ${5:}"
    ]
  },
  "restconf_config": {
    "prefix": "restconf_config",
    "description": "Handles create, update, read and delete of configuration data on RESTCONF enabled devices.",
    "body": [
      "ansible.netcommon.restconf_config:",
      "\tpath: ${1:}",
      "\t#content: ${2:}",
      "\t#format: ${3:#json|xml}",
      "\t#method: ${4:#post|put|patch|delete}"
    ]
  },
  "restconf_get": {
    "prefix": "restconf_get",
    "description": "Fetch configuration/state data from RESTCONF enabled devices.",
    "body": [
      "ansible.netcommon.restconf_get:",
      "\tpath: ${1:}",
      "\t#content: ${2:config|nonconfig|all}",
      "\t#output: ${3:#json|xml}"
    ]
  },
  "telnet": {
    "prefix": "telnet",
    "description": "Executes a low-down and dirty telnet command",
    "body": [
      "ansible.netcommon.telnet:",
      "\tcommand: ${1:}",
      "\t#crlf: ${2:false}",
      "\t#host: ${3:remote_addr}",
      "\t#login_prompt: ${4:login: }",
      "\t#password: ${5:}",
      "\t#password_prompt: ${6:Password: }",
      "\t#pause: ${7:1}",
      "\t#port: ${8:23}",
      "\t#prompts: ${9:['\\$']}",
      "\t#send_newline: ${10:false}",
      "\t#timeout: ${11:120}",
      "\t#user: ${12:remote_user}"
    ]
  },
  "acl": {
    "prefix": "acl",
    "description": "Set and retrieve file ACL information.",
    "body": [
      "ansible.posix.acl:",
      "\tpath: ${1:}",
      "\t#default: ${2:false}",
      "\t#entity: ${3:\"\"}",
      "\t#entry: ${4:}",
      "\t#etype: ${5:group|mask|other|user}",
      "\t#follow: ${6:true}",
      "\t#permissions: ${7:}",
      "\t#recalculate_mask: ${8:#default|mask|no_mask}",
      "\t#recursive: ${9:false}",
      "\t#state: ${10:absent|present|#query}",
      "\t#use_nfsv4_acls: ${11:false}"
    ]
  },
  "at": {
    "prefix": "at",
    "description": "Schedule the execution of a command or script file via the at command",
    "body": [
      "ansible.posix.at:",
      "\t#command: ${1:}",
      "\t#count: ${2:}",
      "\t#script_file: ${3:}",
      "\t#state: ${4:absent|#present}",
      "\t#unique: ${5:false}",
      "\t#units: ${6:minutes|hours|days|weeks}"
    ]
  },
  "authorized_key": {
    "prefix": "authorized_key",
    "description": "Adds or removes an SSH authorized key",
    "body": [
      "ansible.posix.authorized_key:",
      "\tkey: ${1:}",
      "\tuser: ${2:}",
      "\t#comment: ${3:}",
      "\t#exclusive: ${4:false}",
      "\t#follow: ${5:false}",
      "\t#key_options: ${6:}",
      "\t#manage_dir: ${7:true}",
      "\t#path: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "firewalld": {
    "prefix": "firewalld",
    "description": "Manage arbitrary ports/services with firewalld",
    "body": [
      "ansible.posix.firewalld:",
      "\tstate: ${1:absent|disabled|enabled|present}",
      "\t#icmp_block: ${2:}",
      "\t#icmp_block_inversion: ${3:}",
      "\t#immediate: ${4:false}",
      "\t#interface: ${5:}",
      "\t#masquerade: ${6:}",
      "\t#offline: ${7:}",
      "\t#permanent: ${8:}",
      "\t#port: ${9:}",
      "\t#port_forward: ${10:}",
      "\t#protocol: ${11:}",
      "\t#rich_rule: ${12:}",
      "\t#service: ${13:}",
      "\t#source: ${14:}",
      "\t#target: ${15:default|ACCEPT|DROP|%%REJECT%%}",
      "\t#timeout: ${16:0}",
      "\t#zone: ${17:}"
    ]
  },
  "firewalld_info": {
    "prefix": "firewalld_info",
    "description": "Gather information about firewalld",
    "body": [
      "ansible.posix.firewalld_info:",
      "\t#active_zones: ${1:false}",
      "\t#zones: ${2:}"
    ]
  },
  "mount": {
    "prefix": "mount",
    "description": "Control active and configured mount points",
    "body": [
      "ansible.posix.mount:",
      "\tpath: ${1:}",
      "\tstate: ${2:absent|absent_from_fstab|mounted|present|unmounted|remounted|ephemeral}",
      "\t#backup: ${3:false}",
      "\t#boot: ${4:true}",
      "\t#dump: ${5:0}",
      "\t#fstab: ${6:}",
      "\t#fstype: ${7:}",
      "\t#opts: ${8:}",
      "\t#passno: ${9:0}",
      "\t#src: ${10:}"
    ]
  },
  "patch": {
    "prefix": "patch",
    "description": "Apply patch files using the GNU patch tool",
    "body": [
      "ansible.posix.patch:",
      "\tsrc: ${1:}",
      "\t#backup: ${2:false}",
      "\t#basedir: ${3:}",
      "\t#binary: ${4:false}",
      "\t#dest: ${5:}",
      "\t#ignore_whitespace: ${6:false}",
      "\t#remote_src: ${7:false}",
      "\t#state: ${8:absent|#present}",
      "\t#strip: ${9:0}"
    ]
  },
  "rhel_facts": {
    "prefix": "rhel_facts",
    "description": "Facts module to set or override RHEL specific facts.",
    "body": "ansible.posix.rhel_facts:"
  },
  "rhel_rpm_ostree": {
    "prefix": "rhel_rpm_ostree",
    "description": "Ensure packages exist in a RHEL for Edge rpm-ostree based system",
    "body": [
      "ansible.posix.rhel_rpm_ostree:",
      "\t#name: ${1:[]}",
      "\t#state: ${2:absent|installed|latest|present|removed}"
    ]
  },
  "rpm_ostree_upgrade": {
    "prefix": "rpm_ostree_upgrade",
    "description": "Manage rpm-ostree upgrade transactions",
    "body": [
      "ansible.posix.rpm_ostree_upgrade:",
      "\t#allow_downgrade: ${1:false}",
      "\t#cache_only: ${2:false}",
      "\t#os: ${3:\"\"}",
      "\t#peer: ${4:false}"
    ]
  },
  "seboolean": {
    "prefix": "seboolean",
    "description": "Toggles SELinux booleans",
    "body": [
      "ansible.posix.seboolean:",
      "\tname: ${1:}",
      "\tstate: ${2:}",
      "\t#ignore_selinux_state: ${3:false}",
      "\t#persistent: ${4:false}"
    ]
  },
  "selinux": {
    "prefix": "selinux",
    "description": "Change policy and state of SELinux",
    "body": [
      "ansible.posix.selinux:",
      "\tstate: ${1:disabled|enforcing|permissive}",
      "\t#configfile: ${2:/etc/selinux/config}",
      "\t#policy: ${3:}",
      "\t#update_kernel_param: ${4:false}"
    ]
  },
  "synchronize": {
    "prefix": "synchronize",
    "description": "A wrapper around rsync to make common tasks in your playbooks quick and easy",
    "body": [
      "ansible.posix.synchronize:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#archive: ${3:true}",
      "\t#checksum: ${4:false}",
      "\t#compress: ${5:true}",
      "\t#copy_links: ${6:false}",
      "\t#delay_updates: ${7:true}",
      "\t#delete: ${8:false}",
      "\t#dest_port: ${9:}",
      "\t#dirs: ${10:false}",
      "\t#existing_only: ${11:false}",
      "\t#group: ${12:}",
      "\t#link_dest: ${13:}",
      "\t#links: ${14:}",
      "\t#mode: ${15:pull|#push}",
      "\t#owner: ${16:}",
      "\t#partial: ${17:false}",
      "\t#perms: ${18:}",
      "\t#private_key: ${19:}",
      "\t#recursive: ${20:}",
      "\t#rsync_opts: ${21:}",
      "\t#rsync_path: ${22:}",
      "\t#rsync_timeout: ${23:0}",
      "\t#set_remote_user: ${24:true}",
      "\t#ssh_connection_multiplexing: ${25:false}",
      "\t#times: ${26:}",
      "\t#use_ssh_args: ${27:false}",
      "\t#verify_host: ${28:false}"
    ]
  },
  "sysctl": {
    "prefix": "sysctl",
    "description": "Manage entries in sysctl.conf.",
    "body": [
      "ansible.posix.sysctl:",
      "\tname: ${1:}",
      "\t#ignoreerrors: ${2:false}",
      "\t#reload: ${3:true}",
      "\t#state: ${4:#present|absent}",
      "\t#sysctl_file: ${5:/etc/sysctl.conf}",
      "\t#sysctl_set: ${6:false}",
      "\t#value: ${7:}"
    ]
  },
  "cli_parse": {
    "prefix": "cli_parse",
    "description": "Parse cli output or text using a variety of parsers",
    "body": [
      "ansible.utils.cli_parse:",
      "\tparser: ${1:}",
      "\t#command: ${2:}",
      "\t#set_fact: ${3:}",
      "\t#text: ${4:}"
    ]
  },
  "fact_diff": {
    "prefix": "fact_diff",
    "description": "Find the difference between currently set facts",
    "body": [
      "ansible.utils.fact_diff:",
      "\tafter: ${1:}",
      "\tbefore: ${2:}",
      "\t#plugin: ${3:{\\}}"
    ]
  },
  "update_fact": {
    "prefix": "update_fact",
    "description": "Update currently set facts",
    "body": [
      "ansible.utils.update_fact:",
      "\tupdates: ${1:}"
    ]
  },
  "validate": {
    "prefix": "validate",
    "description": "Validate data with provided criteria",
    "body": [
      "ansible.utils.validate:",
      "\tcriteria: ${1:}",
      "\tdata: ${2:}",
      "\t#engine: ${3:ansible.utils.jsonschema}"
    ]
  },
  "win_acl": {
    "prefix": "win_acl",
    "description": "Set file/directory/registry/certificate permissions for a system user or group",
    "body": [
      "ansible.windows.win_acl:",
      "\tpath: ${1:}",
      "\trights: ${2:}",
      "\ttype: ${3:allow|deny}",
      "\tuser: ${4:}",
      "\t#follow: ${5:false}",
      "\t#inherit: ${6:ContainerInherit|ObjectInherit}",
      "\t#propagation: ${7:InheritOnly|#None|NoPropagateInherit}",
      "\t#state: ${8:absent|#present}"
    ]
  },
  "win_acl_inheritance": {
    "prefix": "win_acl_inheritance",
    "description": "Change ACL inheritance",
    "body": [
      "ansible.windows.win_acl_inheritance:",
      "\tpath: ${1:}",
      "\t#reorganize: ${2:false}",
      "\t#state: ${3:#absent|present}"
    ]
  },
  "win_certificate_store": {
    "prefix": "win_certificate_store",
    "description": "Manages the certificate store",
    "body": [
      "ansible.windows.win_certificate_store:",
      "\t#file_type: ${1:#der|pem|pkcs12}",
      "\t#key_exportable: ${2:true}",
      "\t#key_storage: ${3:#default|machine|user}",
      "\t#password: ${4:}",
      "\t#path: ${5:}",
      "\t#state: ${6:absent|exported|#present}",
      "\t#store_location: ${7:LocalMachine}",
      "\t#store_name: ${8:My}",
      "\t#store_type: ${9:#system|service}",
      "\t#thumbprint: ${10:}"
    ]
  },
  "win_command": {
    "prefix": "win_command",
    "description": "Executes a command on a remote Windows node",
    "body": [
      "ansible.windows.win_command:",
      "\t#_raw_params: ${1:}",
      "\t#argv: ${2:}",
      "\t#chdir: ${3:}",
      "\t#cmd: ${4:}",
      "\t#creates: ${5:}",
      "\t#output_encoding_override: ${6:}",
      "\t#removes: ${7:}",
      "\t#stdin: ${8:}"
    ]
  },
  "win_copy": {
    "prefix": "win_copy",
    "description": "Copies files to remote locations on windows hosts",
    "body": [
      "ansible.windows.win_copy:",
      "\tdest: ${1:}",
      "\t#backup: ${2:false}",
      "\t#content: ${3:}",
      "\t#decrypt: ${4:true}",
      "\t#force: ${5:true}",
      "\t#local_follow: ${6:true}",
      "\t#remote_src: ${7:false}",
      "\t#src: ${8:}"
    ]
  },
  "win_dns_client": {
    "prefix": "win_dns_client",
    "description": "Configures DNS lookup on Windows hosts",
    "body": [
      "ansible.windows.win_dns_client:",
      "\tadapter_names: ${1:}",
      "\tdns_servers: ${2:}"
    ]
  },
  "win_dsc": {
    "prefix": "win_dsc",
    "description": "Invokes a PowerShell DSC configuration",
    "body": [
      "ansible.windows.win_dsc:",
      "\t${1:free_form: }",
      "\tresource_name: ${2:}",
      "\t#module_version: ${3:latest}"
    ]
  },
  "win_environment": {
    "prefix": "win_environment",
    "description": "Modify environment variables on windows hosts",
    "body": [
      "ansible.windows.win_environment:",
      "\tlevel: ${1:machine|process|user}",
      "\t#name: ${2:}",
      "\t#state: ${3:absent|present}",
      "\t#value: ${4:}",
      "\t#variables: ${5:}"
    ]
  },
  "win_feature": {
    "prefix": "win_feature",
    "description": "Installs and uninstalls Windows Features on Windows Server",
    "body": [
      "ansible.windows.win_feature:",
      "\tname: ${1:}",
      "\t#include_management_tools: ${2:false}",
      "\t#include_sub_features: ${3:false}",
      "\t#source: ${4:}",
      "\t#state: ${5:absent|#present}"
    ]
  },
  "win_file": {
    "prefix": "win_file",
    "description": "Creates, touches or removes files or directories",
    "body": [
      "ansible.windows.win_file:",
      "\tpath: ${1:}",
      "\t#state: ${2:absent|directory|file|touch}"
    ]
  },
  "win_find": {
    "prefix": "win_find",
    "description": "Return a list of files based on specific criteria",
    "body": [
      "ansible.windows.win_find:",
      "\tpaths: ${1:}",
      "\t#age: ${2:}",
      "\t#age_stamp: ${3:atime|ctime|#mtime}",
      "\t#checksum_algorithm: ${4:md5|#sha1|sha256|sha384|sha512}",
      "\t#depth: ${5:}",
      "\t#file_type: ${6:directory|#file}",
      "\t#follow: ${7:false}",
      "\t#get_checksum: ${8:true}",
      "\t#hidden: ${9:false}",
      "\t#patterns: ${10:}",
      "\t#recurse: ${11:false}",
      "\t#size: ${12:}",
      "\t#use_regex: ${13:false}"
    ]
  },
  "win_get_url": {
    "prefix": "win_get_url",
    "description": "Downloads file from HTTP, HTTPS, or FTP to node",
    "body": [
      "ansible.windows.win_get_url:",
      "\tdest: ${1:}",
      "\turl: ${2:}",
      "\t#checksum: ${3:}",
      "\t#checksum_algorithm: ${4:md5|#sha1|sha256|sha384|sha512}",
      "\t#checksum_url: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_cert_password: ${7:}",
      "\t#follow_redirects: ${8:all|none|#safe}",
      "\t#force: ${9:true}",
      "\t#force_basic_auth: ${10:false}",
      "\t#headers: ${11:}",
      "\t#http_agent: ${12:ansible-httpget}",
      "\t#maximum_redirection: ${13:50}",
      "\t#proxy_password: ${14:}",
      "\t#proxy_url: ${15:}",
      "\t#proxy_use_default_credential: ${16:false}",
      "\t#proxy_username: ${17:}",
      "\t#url_method: ${18:}",
      "\t#url_password: ${19:}",
      "\t#url_timeout: ${20:30}",
      "\t#url_username: ${21:}",
      "\t#use_default_credential: ${22:false}",
      "\t#use_proxy: ${23:true}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "win_group": {
    "prefix": "win_group",
    "description": "Add and remove local groups",
    "body": [
      "ansible.windows.win_group:",
      "\tname: ${1:}",
      "\t#description: ${2:}",
      "\t#state: ${3:absent|#present}"
    ]
  },
  "win_group_membership": {
    "prefix": "win_group_membership",
    "description": "Manage Windows local group membership",
    "body": [
      "ansible.windows.win_group_membership:",
      "\tmembers: ${1:}",
      "\tname: ${2:}",
      "\t#state: ${3:absent|#present|pure}"
    ]
  },
  "win_hostname": {
    "prefix": "win_hostname",
    "description": "Manages local Windows computer name",
    "body": [
      "ansible.windows.win_hostname:",
      "\tname: ${1:}"
    ]
  },
  "win_optional_feature": {
    "prefix": "win_optional_feature",
    "description": "Manage optional Windows features",
    "body": [
      "ansible.windows.win_optional_feature:",
      "\tname: ${1:}",
      "\t#include_parent: ${2:false}",
      "\t#source: ${3:}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_owner": {
    "prefix": "win_owner",
    "description": "Set owner",
    "body": [
      "ansible.windows.win_owner:",
      "\tpath: ${1:}",
      "\tuser: ${2:}",
      "\t#recurse: ${3:false}"
    ]
  },
  "win_package": {
    "prefix": "win_package",
    "description": "Installs/uninstalls an installable package",
    "body": [
      "ansible.windows.win_package:",
      "\t#arguments: ${1:}",
      "\t#chdir: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_cert_password: ${4:}",
      "\t#creates_path: ${5:}",
      "\t#creates_service: ${6:}",
      "\t#creates_version: ${7:}",
      "\t#expected_return_code: ${8:[0, 3010]}",
      "\t#follow_redirects: ${9:all|none|#safe}",
      "\t#force_basic_auth: ${10:false}",
      "\t#headers: ${11:}",
      "\t#http_agent: ${12:ansible-httpget}",
      "\t#log_path: ${13:}",
      "\t#maximum_redirection: ${14:50}",
      "\t#path: ${15:}",
      "\t#product_id: ${16:}",
      "\t#provider: ${17:#auto|msi|msix|msp|registry}",
      "\t#proxy_password: ${18:}",
      "\t#proxy_url: ${19:}",
      "\t#proxy_use_default_credential: ${20:false}",
      "\t#proxy_username: ${21:}",
      "\t#state: ${22:absent|#present}",
      "\t#url_method: ${23:}",
      "\t#url_password: ${24:}",
      "\t#url_timeout: ${25:30}",
      "\t#url_username: ${26:}",
      "\t#use_default_credential: ${27:false}",
      "\t#use_proxy: ${28:true}",
      "\t#validate_certs: ${29:true}",
      "\t#wait_for_children: ${30:false}"
    ]
  },
  "win_path": {
    "prefix": "win_path",
    "description": "Manage Windows path environment variables",
    "body": [
      "ansible.windows.win_path:",
      "\telements: ${1:}",
      "\t#name: ${2:PATH}",
      "\t#scope: ${3:#machine|user}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_ping": {
    "prefix": "win_ping",
    "description": "A windows version of the classic ping module",
    "body": [
      "ansible.windows.win_ping:",
      "\t#data: ${1:pong}"
    ]
  },
  "win_powershell": {
    "prefix": "win_powershell",
    "description": "Run PowerShell scripts",
    "body": [
      "ansible.windows.win_powershell:",
      "\tscript: ${1:}",
      "\t#arguments: ${2:}",
      "\t#chdir: ${3:}",
      "\t#creates: ${4:}",
      "\t#depth: ${5:2}",
      "\t#error_action: ${6:silently_continue|#continue|stop}",
      "\t#executable: ${7:}",
      "\t#parameters: ${8:}",
      "\t#removes: ${9:}"
    ]
  },
  "win_reboot": {
    "prefix": "win_reboot",
    "description": "Reboot a windows machine",
    "body": [
      "ansible.windows.win_reboot:",
      "\t#boot_time_command: ${1:(Get-CimInstance -ClassName Win32_OperatingSystem -Property LastBootUpTime).LastBootUpTime.ToFileTime()}",
      "\t#connect_timeout: ${2:5}",
      "\t#msg: ${3:Reboot initiated by Ansible}",
      "\t#post_reboot_delay: ${4:0}",
      "\t#pre_reboot_delay: ${5:2}",
      "\t#reboot_timeout: ${6:600}",
      "\t#test_command: ${7:}"
    ]
  },
  "win_reg_stat": {
    "prefix": "win_reg_stat",
    "description": "Get information about Windows registry keys",
    "body": [
      "ansible.windows.win_reg_stat:",
      "\tpath: ${1:}",
      "\t#name: ${2:}"
    ]
  },
  "win_regedit": {
    "prefix": "win_regedit",
    "description": "Add, change, or remove registry keys and values",
    "body": [
      "ansible.windows.win_regedit:",
      "\tpath: ${1:}",
      "\t#data: ${2:}",
      "\t#delete_key: ${3:true}",
      "\t#hive: ${4:}",
      "\t#name: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#type: ${7:none|binary|dword|expandstring|multistring|#string|qword}"
    ]
  },
  "win_service": {
    "prefix": "win_service",
    "description": "Manage and query Windows services",
    "body": [
      "ansible.windows.win_service:",
      "\tname: ${1:}",
      "\t#dependencies: ${2:}",
      "\t#dependency_action: ${3:add|remove|#set}",
      "\t#description: ${4:}",
      "\t#desktop_interact: ${5:false}",
      "\t#display_name: ${6:}",
      "\t#error_control: ${7:critical|ignore|normal|severe}",
      "\t#failure_actions: ${8:}",
      "\t#failure_actions_on_non_crash_failure: ${9:}",
      "\t#failure_command: ${10:}",
      "\t#failure_reboot_msg: ${11:}",
      "\t#failure_reset_period_sec: ${12:}",
      "\t#force_dependent_services: ${13:false}",
      "\t#load_order_group: ${14:}",
      "\t#password: ${15:}",
      "\t#path: ${16:}",
      "\t#pre_shutdown_timeout_ms: ${17:}",
      "\t#required_privileges: ${18:}",
      "\t#service_type: ${19:user_own_process|user_share_process|win32_own_process|win32_share_process}",
      "\t#sid_info: ${20:none|restricted|unrestricted}",
      "\t#start_mode: ${21:auto|delayed|disabled|manual}",
      "\t#state: ${22:absent|paused|started|stopped|restarted}",
      "\t#update_password: ${23:always|on_create}",
      "\t#username: ${24:}"
    ]
  },
  "win_service_info": {
    "prefix": "win_service_info",
    "description": "Gather information about Windows services",
    "body": [
      "ansible.windows.win_service_info:",
      "\t#name: ${1:}"
    ]
  },
  "win_share": {
    "prefix": "win_share",
    "description": "Manage Windows shares",
    "body": [
      "ansible.windows.win_share:",
      "\tname: ${1:}",
      "\tpath: ${2:}",
      "\t#caching_mode: ${3:BranchCache|Documents|#Manual|None|Programs|Unknown}",
      "\t#change: ${4:}",
      "\t#deny: ${5:}",
      "\t#description: ${6:}",
      "\t#encrypt: ${7:false}",
      "\t#full: ${8:}",
      "\t#list: ${9:false}",
      "\t#read: ${10:}",
      "\t#rule_action: ${11:#set|add}",
      "\t#scope_name: ${12:}",
      "\t#state: ${13:absent|#present}"
    ]
  },
  "win_shell": {
    "prefix": "win_shell",
    "description": "Execute shell commands on target hosts",
    "body": [
      "ansible.windows.win_shell:",
      "\t${1:free_form: }",
      "\t#chdir: ${2:}",
      "\t#creates: ${3:}",
      "\t#executable: ${4:}",
      "\t#no_profile: ${5:false}",
      "\t#output_encoding_override: ${6:}",
      "\t#removes: ${7:}",
      "\t#stdin: ${8:}"
    ]
  },
  "win_stat": {
    "prefix": "win_stat",
    "description": "Get information about Windows files",
    "body": [
      "ansible.windows.win_stat:",
      "\tpath: ${1:}",
      "\t#checksum_algorithm: ${2:md5|#sha1|sha256|sha384|sha512}",
      "\t#follow: ${3:false}",
      "\t#get_checksum: ${4:true}",
      "\t#get_size: ${5:true}"
    ]
  },
  "win_tempfile": {
    "prefix": "win_tempfile",
    "description": "Creates temporary files and directories",
    "body": [
      "ansible.windows.win_tempfile:",
      "\t#path: ${1:%TEMP%}",
      "\t#prefix: ${2:ansible.}",
      "\t#state: ${3:directory|#file}",
      "\t#suffix: ${4:}"
    ]
  },
  "win_template": {
    "prefix": "win_template",
    "description": "Template a file out to a remote server",
    "body": [
      "ansible.windows.win_template:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#backup: ${3:false}",
      "\t#block_end_string: ${4:%\\}}",
      "\t#block_start_string: \\${5:{%\\}",
      "\t#force: ${6:true}",
      "\t#lstrip_blocks: ${7:false}",
      "\t#newline_sequence: ${8:\\n|\\r|#\\r\\n}",
      "\t#output_encoding: ${9:utf-8}",
      "\t#trim_blocks: ${10:true}",
      "\t#variable_end_string: ${11:\\}\\}}",
      "\t#variable_start_string: \\${12:{{\\}"
    ]
  },
  "win_updates": {
    "prefix": "win_updates",
    "description": "Download and install Windows updates",
    "body": [
      "ansible.windows.win_updates:",
      "\t#_operation: ${1:#start|cancel|poll}",
      "\t#_operation_options: ${2:}",
      "\t#accept_list: ${3:}",
      "\t#category_names: ${4:['CriticalUpdates', 'SecurityUpdates', 'UpdateRollups']}",
      "\t#log_path: ${5:}",
      "\t#reboot: ${6:false}",
      "\t#reboot_timeout: ${7:1200}",
      "\t#reject_list: ${8:}",
      "\t#server_selection: ${9:#default|managed_server|windows_update}",
      "\t#skip_optional: ${10:false}",
      "\t#state: ${11:#installed|searched|downloaded}"
    ]
  },
  "win_uri": {
    "prefix": "win_uri",
    "description": "Interacts with webservices",
    "body": [
      "ansible.windows.win_uri:",
      "\turl: ${1:}",
      "\t#body: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_cert_password: ${4:}",
      "\t#content_type: ${5:}",
      "\t#creates: ${6:}",
      "\t#dest: ${7:}",
      "\t#follow_redirects: ${8:all|none|#safe}",
      "\t#force_basic_auth: ${9:false}",
      "\t#headers: ${10:}",
      "\t#http_agent: ${11:ansible-httpget}",
      "\t#maximum_redirection: ${12:50}",
      "\t#proxy_password: ${13:}",
      "\t#proxy_url: ${14:}",
      "\t#proxy_use_default_credential: ${15:false}",
      "\t#proxy_username: ${16:}",
      "\t#removes: ${17:}",
      "\t#return_content: ${18:false}",
      "\t#status_code: ${19:[200]}",
      "\t#url_method: ${20:GET}",
      "\t#url_password: ${21:}",
      "\t#url_timeout: ${22:30}",
      "\t#url_username: ${23:}",
      "\t#use_default_credential: ${24:false}",
      "\t#use_proxy: ${25:true}",
      "\t#validate_certs: ${26:true}"
    ]
  },
  "win_user": {
    "prefix": "win_user",
    "description": "Manages local Windows user accounts",
    "body": [
      "ansible.windows.win_user:",
      "\tname: ${1:}",
      "\t#account_disabled: ${2:}",
      "\t#account_locked: ${3:}",
      "\t#description: ${4:}",
      "\t#fullname: ${5:}",
      "\t#groups: ${6:}",
      "\t#groups_action: ${7:add|#replace|remove}",
      "\t#home_directory: ${8:}",
      "\t#login_script: ${9:}",
      "\t#password: ${10:}",
      "\t#password_expired: ${11:}",
      "\t#password_never_expires: ${12:}",
      "\t#profile: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#update_password: ${15:#always|on_create}",
      "\t#user_cannot_change_password: ${16:}"
    ]
  },
  "win_user_right": {
    "prefix": "win_user_right",
    "description": "Manage Windows User Rights",
    "body": [
      "ansible.windows.win_user_right:",
      "\tname: ${1:}",
      "\tusers: ${2:}",
      "\t#action: ${3:add|remove|#set}"
    ]
  },
  "win_wait_for": {
    "prefix": "win_wait_for",
    "description": "Waits for a condition before continuing",
    "body": [
      "ansible.windows.win_wait_for:",
      "\t#connect_timeout: ${1:5}",
      "\t#delay: ${2:}",
      "\t#exclude_hosts: ${3:}",
      "\t#host: ${4:127.0.0.1}",
      "\t#path: ${5:}",
      "\t#port: ${6:}",
      "\t#regex: ${7:}",
      "\t#sleep: ${8:1}",
      "\t#state: ${9:absent|drained|present|#started|stopped}",
      "\t#timeout: ${10:300}"
    ]
  },
  "win_whoami": {
    "prefix": "win_whoami",
    "description": "Get information about the current user and process",
    "body": "ansible.windows.win_whoami:"
  },
  "eos_acl_interfaces": {
    "prefix": "eos_acl_interfaces",
    "description": "ACL interfaces resource module",
    "body": [
      "arista.eos.eos_acl_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "eos_acls": {
    "prefix": "eos_acls",
    "description": "ACLs resource module",
    "body": [
      "arista.eos.eos_acls:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_banner": {
    "prefix": "eos_banner",
    "description": "Manage multiline banners on Arista EOS devices",
    "body": [
      "arista.eos.eos_banner:",
      "\tbanner: ${1:login|motd}",
      "\t#state: ${2:#present|absent}",
      "\t#text: ${3:}"
    ]
  },
  "eos_bgp_address_family": {
    "prefix": "eos_bgp_address_family",
    "description": "Manages BGP address family resource module",
    "body": [
      "arista.eos.eos_bgp_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_bgp_global": {
    "prefix": "eos_bgp_global",
    "description": "Manages BGP global resource module",
    "body": [
      "arista.eos.eos_bgp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|purged|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_command": {
    "prefix": "eos_command",
    "description": "Run arbitrary commands on an Arista EOS device",
    "body": [
      "arista.eos.eos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "eos_config": {
    "prefix": "eos_config",
    "description": "Manage Arista EOS configuration sections",
    "body": [
      "arista.eos.eos_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#defaults: ${5:false}",
      "\t#diff_against: ${6:startup|running|intended|#session|validate_config}",
      "\t#diff_ignore_lines: ${7:}",
      "\t#intended_config: ${8:}",
      "\t#lines: ${9:}",
      "\t#match: ${10:#line|strict|exact|none}",
      "\t#parents: ${11:}",
      "\t#replace: ${12:#line|block|config}",
      "\t#running_config: ${13:}",
      "\t#save_when: ${14:always|#never|modified|changed}",
      "\t#src: ${15:}"
    ]
  },
  "eos_eapi": {
    "prefix": "eos_eapi",
    "description": "Manage and configure Arista EOS eAPI.",
    "body": [
      "arista.eos.eos_eapi:",
      "\t#config: ${1:}",
      "\t#http: ${2:}",
      "\t#http_port: ${3:}",
      "\t#https: ${4:}",
      "\t#https_port: ${5:}",
      "\t#local_http: ${6:}",
      "\t#local_http_port: ${7:}",
      "\t#socket: ${8:}",
      "\t#state: ${9:#started|stopped}",
      "\t#timeout: ${10:30}",
      "\t#vrf: ${11:default}"
    ]
  },
  "eos_facts": {
    "prefix": "eos_facts",
    "description": "Collect facts from remote devices running Arista EOS",
    "body": [
      "arista.eos.eos_facts:",
      "\t#available_network_resources: ${1:false}",
      "\t#gather_network_resources: ${2:}",
      "\t#gather_subset: ${3:min}"
    ]
  },
  "eos_hostname": {
    "prefix": "eos_hostname",
    "description": "Manages hostname resource module",
    "body": [
      "arista.eos.eos_hostname:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_interfaces": {
    "prefix": "eos_interfaces",
    "description": "Interfaces resource module",
    "body": [
      "arista.eos.eos_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|rendered|gathered}"
    ]
  },
  "eos_l2_interfaces": {
    "prefix": "eos_l2_interfaces",
    "description": "L2 interfaces resource module",
    "body": [
      "arista.eos.eos_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|rendered|gathered}"
    ]
  },
  "eos_l3_interfaces": {
    "prefix": "eos_l3_interfaces",
    "description": "L3 interfaces resource module",
    "body": [
      "arista.eos.eos_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "eos_lacp": {
    "prefix": "eos_lacp",
    "description": "LACP resource module",
    "body": [
      "arista.eos.eos_lacp:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|parsed|rendered|gathered}"
    ]
  },
  "eos_lacp_interfaces": {
    "prefix": "eos_lacp_interfaces",
    "description": "LACP interfaces resource module",
    "body": [
      "arista.eos.eos_lacp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|rendered|gathered}"
    ]
  },
  "eos_lag_interfaces": {
    "prefix": "eos_lag_interfaces",
    "description": "LAG interfaces resource module",
    "body": [
      "arista.eos.eos_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "eos_lldp": {
    "prefix": "eos_lldp",
    "description": "Manage LLDP configuration on Arista EOS network devices",
    "body": [
      "arista.eos.eos_lldp:",
      "\t#state: ${1:#present|absent|enabled|disabled}"
    ]
  },
  "eos_lldp_global": {
    "prefix": "eos_lldp_global",
    "description": "LLDP resource module",
    "body": [
      "arista.eos.eos_lldp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|rendered|gathered|parsed}"
    ]
  },
  "eos_lldp_interfaces": {
    "prefix": "eos_lldp_interfaces",
    "description": "LLDP interfaces resource module",
    "body": [
      "arista.eos.eos_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "eos_logging_global": {
    "prefix": "eos_logging_global",
    "description": "Manages logging resource module",
    "body": [
      "arista.eos.eos_logging_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_ntp_global": {
    "prefix": "eos_ntp_global",
    "description": "Manages ntp resource module",
    "body": [
      "arista.eos.eos_ntp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_ospf_interfaces": {
    "prefix": "eos_ospf_interfaces",
    "description": "OSPF Interfaces Resource Module.",
    "body": [
      "arista.eos.eos_ospf_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "eos_ospfv2": {
    "prefix": "eos_ospfv2",
    "description": "OSPFv2 resource module",
    "body": [
      "arista.eos.eos_ospfv2:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_ospfv3": {
    "prefix": "eos_ospfv3",
    "description": "OSPFv3 resource module",
    "body": [
      "arista.eos.eos_ospfv3:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_prefix_lists": {
    "prefix": "eos_prefix_lists",
    "description": "Manages Prefix lists resource module",
    "body": [
      "arista.eos.eos_prefix_lists:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_route_maps": {
    "prefix": "eos_route_maps",
    "description": "Manages Route Maps resource module",
    "body": [
      "arista.eos.eos_route_maps:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_snmp_server": {
    "prefix": "eos_snmp_server",
    "description": "Manages snmp_server resource module",
    "body": [
      "arista.eos.eos_snmp_server:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_static_routes": {
    "prefix": "eos_static_routes",
    "description": "Static routes resource module",
    "body": [
      "arista.eos.eos_static_routes:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "eos_system": {
    "prefix": "eos_system",
    "description": "Manage the system attributes on Arista EOS devices",
    "body": [
      "arista.eos.eos_system:",
      "\t#domain_list: ${1:}",
      "\t#domain_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#lookup_source: ${4:}",
      "\t#name_servers: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "eos_user": {
    "prefix": "eos_user",
    "description": "Manage the collection of local users on EOS devices",
    "body": [
      "arista.eos.eos_user:",
      "\t#aggregate: ${1:}",
      "\t#configured_password: ${2:}",
      "\t#name: ${3:}",
      "\t#nopassword: ${4:}",
      "\t#privilege: ${5:}",
      "\t#purge: ${6:false}",
      "\t#role: ${7:}",
      "\t#sshkey: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#update_password: ${10:on_create|#always}"
    ]
  },
  "eos_vlans": {
    "prefix": "eos_vlans",
    "description": "VLANs resource module",
    "body": [
      "arista.eos.eos_vlans:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "eos_vrf": {
    "prefix": "eos_vrf",
    "description": "Manage VRFs on Arista EOS network devices",
    "body": [
      "arista.eos.eos_vrf:",
      "\t#aggregate: ${1:}",
      "\t#associated_interfaces: ${2:}",
      "\t#delay: ${3:10}",
      "\t#interfaces: ${4:}",
      "\t#name: ${5:}",
      "\t#purge: ${6:false}",
      "\t#rd: ${7:}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "cp_mgmt_access_layers": {
    "prefix": "cp_mgmt_access_layers",
    "description": "Manages ACCESS LAYERS resource module",
    "body": [
      "check_point.mgmt.cp_mgmt_access_layers:",
      "\t#config: ${1:}",
      "\t#state: ${2:merged|replaced|gathered|deleted}"
    ]
  },
  "cp_mgmt_hosts": {
    "prefix": "cp_mgmt_hosts",
    "description": "Manages HOSTS resource module",
    "body": [
      "check_point.mgmt.cp_mgmt_hosts:",
      "\t#config: ${1:}",
      "\t#state: ${2:merged|replaced|gathered|deleted}"
    ]
  },
  "cp_mgmt_threat_layers": {
    "prefix": "cp_mgmt_threat_layers",
    "description": "Manages THREAT LAYERS resource module",
    "body": [
      "check_point.mgmt.cp_mgmt_threat_layers:",
      "\t#config: ${1:}",
      "\t#state: ${2:merged|replaced|gathered|deleted}"
    ]
  },
  "cp_mgmt_threat_rules": {
    "prefix": "cp_mgmt_threat_rules",
    "description": "Manages THREAT RULES resource module",
    "body": [
      "check_point.mgmt.cp_mgmt_threat_rules:",
      "\t#config: ${1:}",
      "\t#state: ${2:merged|replaced|gathered|deleted}"
    ]
  },
  "win_chocolatey": {
    "prefix": "win_chocolatey",
    "description": "Manage packages using chocolatey",
    "body": [
      "chocolatey.chocolatey.win_chocolatey:",
      "\tname: ${1:}",
      "\t#allow_empty_checksums: ${2:false}",
      "\t#allow_multiple: ${3:false}",
      "\t#allow_prerelease: ${4:false}",
      "\t#architecture: ${5:#default|x86}",
      "\t#bootstrap_script: ${6:}",
      "\t#bootstrap_tls_version: ${7:['tls11', '#tls12', '#tls13']}",
      "\t#checksum: ${8:}",
      "\t#checksum64: ${9:}",
      "\t#checksum_type: ${10:md5|sha1|sha256|sha512}",
      "\t#checksum_type64: ${11:md5|sha1|sha256|sha512}",
      "\t#choco_args: ${12:}",
      "\t#force: ${13:false}",
      "\t#ignore_checksums: ${14:false}",
      "\t#ignore_dependencies: ${15:false}",
      "\t#install_args: ${16:}",
      "\t#override_args: ${17:false}",
      "\t#package_params: ${18:}",
      "\t#pinned: ${19:}",
      "\t#proxy_password: ${20:}",
      "\t#proxy_url: ${21:}",
      "\t#proxy_username: ${22:}",
      "\t#remove_dependencies: ${23:false}",
      "\t#skip_scripts: ${24:false}",
      "\t#source: ${25:}",
      "\t#source_password: ${26:}",
      "\t#source_username: ${27:}",
      "\t#state: ${28:absent|downgrade|upgrade|latest|#present|reinstalled}",
      "\t#timeout: ${29:2700}",
      "\t#validate_certs: ${30:true}",
      "\t#version: ${31:}"
    ]
  },
  "win_chocolatey_config": {
    "prefix": "win_chocolatey_config",
    "description": "Manages Chocolatey config settings",
    "body": [
      "chocolatey.chocolatey.win_chocolatey_config:",
      "\tname: ${1:}",
      "\t#state: ${2:absent|#present}",
      "\t#value: ${3:}"
    ]
  },
  "win_chocolatey_facts": {
    "prefix": "win_chocolatey_facts",
    "description": "Create a facts collection for Chocolatey",
    "body": [
      "chocolatey.chocolatey.win_chocolatey_facts:",
      "\t#filter: ${1:all}"
    ]
  },
  "win_chocolatey_feature": {
    "prefix": "win_chocolatey_feature",
    "description": "Manages Chocolatey features",
    "body": [
      "chocolatey.chocolatey.win_chocolatey_feature:",
      "\tname: ${1:}",
      "\t#state: ${2:disabled|#enabled}"
    ]
  },
  "win_chocolatey_source": {
    "prefix": "win_chocolatey_source",
    "description": "Manages Chocolatey sources",
    "body": [
      "chocolatey.chocolatey.win_chocolatey_source:",
      "\tname: ${1:}",
      "\t#admin_only: ${2:}",
      "\t#allow_self_service: ${3:}",
      "\t#bypass_proxy: ${4:}",
      "\t#certificate: ${5:}",
      "\t#certificate_password: ${6:}",
      "\t#priority: ${7:}",
      "\t#source: ${8:}",
      "\t#source_password: ${9:}",
      "\t#source_username: ${10:}",
      "\t#state: ${11:absent|disabled|#present}",
      "\t#update_password: ${12:#always|on_create}"
    ]
  },
  "aci_aaa_custom_privilege": {
    "prefix": "aci_aaa_custom_privilege",
    "description": "Manage AAA RBAC Custom Privileges (aaa:RbacClassPriv)",
    "body": [
      "cisco.aci.aci_aaa_custom_privilege:",
      "\t#certificate_name: ${1:}",
      "\t#description: ${2:}",
      "\t#host: ${3:}",
      "\t#name: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#read_privilege: ${11:custom-privilege-1|custom-privilege-2|custom-privilege-3|custom-privilege-4|custom-privilege-5|custom-privilege-6|custom-privilege-7|custom-privilege-8|custom-privilege-9|custom-privilege-10|custom-privilege-11|custom-privilege-12|custom-privilege-13|custom-privilege-14|custom-privilege-15|custom-privilege-16|custom-privilege-17|custom-privilege-18|custom-privilege-19|custom-privilege-20|custom-privilege-21|custom-privilege-22}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}",
      "\t#write_privilege: ${18:custom-privilege-1|custom-privilege-2|custom-privilege-3|custom-privilege-4|custom-privilege-5|custom-privilege-6|custom-privilege-7|custom-privilege-8|custom-privilege-9|custom-privilege-10|custom-privilege-11|custom-privilege-12|custom-privilege-13|custom-privilege-14|custom-privilege-15|custom-privilege-16|custom-privilege-17|custom-privilege-18|custom-privilege-19|custom-privilege-20|custom-privilege-21|custom-privilege-22}"
    ]
  },
  "aci_aaa_domain": {
    "prefix": "aci_aaa_domain",
    "description": "Manage AAA domains (aaa:Domain)",
    "body": [
      "cisco.aci.aci_aaa_domain:",
      "\t#certificate_name: ${1:}",
      "\t#description: ${2:}",
      "\t#host: ${3:}",
      "\t#name: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#restricted_rbac_domain: ${11:False|True}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_aaa_role": {
    "prefix": "aci_aaa_role",
    "description": "Manage AAA roles (aaa:Role)",
    "body": [
      "cisco.aci.aci_aaa_role:",
      "\t#certificate_name: ${1:}",
      "\t#description: ${2:}",
      "\t#host: ${3:}",
      "\t#name: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#privileges: ${11:admin|aaa|tenant-connectivity|tenant-protocol|vmm-policy|tenant-ext-connectivity|tenant-ext-protocol|tenant-qos|tenant-security|tenant-network-profile|tenant-epg|fabric-connectivity|fabric-protocol|fabric-equipment|access-connectivity|access-protocol|access-equipment|access-qos|nw-svc-params|ops|nw-svc-policy|site-admin|site-policy|config-manager|custom-privilege-1|custom-privilege-2|custom-privilege-3|custom-privilege-4|custom-privilege-5|custom-privilege-6|custom-privilege-7|custom-privilege-8|custom-privilege-9|custom-privilege-10|custom-privilege-11|custom-privilege-12|custom-privilege-13|custom-privilege-14|custom-privilege-15|custom-privilege-16|custom-privilege-17|custom-privilege-18|custom-privilege-19|custom-privilege-20|custom-privilege-21|custom-privilege-22|custom-port-privilege}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_aaa_ssh_auth": {
    "prefix": "aci_aaa_ssh_auth",
    "description": "Manage AAA SSH auth (aaaSshAuth) objects.",
    "body": [
      "cisco.aci.aci_aaa_ssh_auth:",
      "\taaa_user: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#auth_name: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#data: ${5:}",
      "\t#host: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_aaa_user": {
    "prefix": "aci_aaa_user",
    "description": "Manage AAA users (aaa:User)",
    "body": [
      "cisco.aci.aci_aaa_user:",
      "\t#aaa_password: ${1:}",
      "\t#aaa_password_lifetime: ${2:}",
      "\t#aaa_password_update_required: ${3:}",
      "\t#aaa_user: ${4:}",
      "\t#annotation: ${5:orchestrator:ansible}",
      "\t#certificate_name: ${6:}",
      "\t#clear_password_history: ${7:}",
      "\t#description: ${8:}",
      "\t#email: ${9:}",
      "\t#enabled: ${10:}",
      "\t#expiration: ${11:}",
      "\t#expires: ${12:}",
      "\t#first_name: ${13:}",
      "\t#host: ${14:}",
      "\t#last_name: ${15:}",
      "\t#name_alias: ${16:}",
      "\t#output_level: ${17:debug|info|#normal}",
      "\t#output_path: ${18:}",
      "\t#owner_key: ${19:}",
      "\t#owner_tag: ${20:}",
      "\t#password: ${21:}",
      "\t#phone: ${22:}",
      "\t#port: ${23:}",
      "\t#private_key: ${24:}",
      "\t#state: ${25:absent|#present|query}",
      "\t#timeout: ${26:}",
      "\t#use_proxy: ${27:}",
      "\t#use_ssl: ${28:}",
      "\t#username: ${29:}",
      "\t#validate_certs: ${30:}"
    ]
  },
  "aci_aaa_user_certificate": {
    "prefix": "aci_aaa_user_certificate",
    "description": "Manage AAA user certificates (aaa:UserCert)",
    "body": [
      "cisco.aci.aci_aaa_user_certificate:",
      "\taaa_user: ${1:}",
      "\t#aaa_user_type: ${2:appuser|#user}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate: ${4:}",
      "\t#certificate_name: ${5:}",
      "\t#host: ${6:}",
      "\t#name: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_aaa_user_domain": {
    "prefix": "aci_aaa_user_domain",
    "description": "Manage AAA user domains (aaa:UserDomain)",
    "body": [
      "cisco.aci.aci_aaa_user_domain:",
      "\t#aaa_user: ${1:}",
      "\t#aaa_user_type: ${2:appuser|#user}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_aaa_user_role": {
    "prefix": "aci_aaa_user_role",
    "description": "Manage AAA user roles (aaa:UserRole)",
    "body": [
      "cisco.aci.aci_aaa_user_role:",
      "\t#aaa_user: ${1:}",
      "\t#aaa_user_type: ${2:appuser|#user}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#domain_name: ${5:}",
      "\t#host: ${6:}",
      "\t#name: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#privilege_type: ${16:read|write}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_access_port_block_to_access_port": {
    "prefix": "aci_access_port_block_to_access_port",
    "description": "Manage port blocks of Fabric interface policy leaf profile interface selectors (infra:HPortS, infra:PortBlk)",
    "body": [
      "cisco.aci.aci_access_port_block_to_access_port:",
      "\t#access_port_selector: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#from_card: ${4:}",
      "\t#from_port: ${5:}",
      "\t#host: ${6:}",
      "\t#interface_profile: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#port_blk: ${12:}",
      "\t#port_blk_description: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#to_card: ${17:}",
      "\t#to_port: ${18:}",
      "\t#type: ${19:fex|#leaf}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_access_port_to_interface_policy_leaf_profile": {
    "prefix": "aci_access_port_to_interface_policy_leaf_profile",
    "description": "Manage Fabric interface policy leaf profile interface selectors (infra:HPortS, infra:RsAccBaseGrp, infra:PortBlk)",
    "body": [
      "cisco.aci.aci_access_port_to_interface_policy_leaf_profile:",
      "\t#access_port_selector: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#fex_id: ${5:}",
      "\t#fex_profile: ${6:}",
      "\t#from_card: ${7:}",
      "\t#from_port: ${8:}",
      "\t#host: ${9:}",
      "\t#interface_profile: ${10:}",
      "\t#interface_type: ${11:breakout|fex|port_channel|#switch_port|vpc|fex_port_channel|fex_vpc|fex_profile}",
      "\t#leaf_port_blk_description: ${12:}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#owner_key: ${15:}",
      "\t#owner_tag: ${16:}",
      "\t#password: ${17:}",
      "\t#policy_group: ${18:}",
      "\t#port: ${19:}",
      "\t#port_blk: ${20:}",
      "\t#private_key: ${21:}",
      "\t#state: ${22:absent|#present|query}",
      "\t#timeout: ${23:}",
      "\t#to_card: ${24:}",
      "\t#to_port: ${25:}",
      "\t#type: ${26:fex|#leaf}",
      "\t#use_proxy: ${27:}",
      "\t#use_ssl: ${28:}",
      "\t#username: ${29:}",
      "\t#validate_certs: ${30:}"
    ]
  },
  "aci_access_span_dst_group": {
    "prefix": "aci_access_span_dst_group",
    "description": "Manage Access SPAN destination groups (span:DestGrp)",
    "body": [
      "cisco.aci.aci_access_span_dst_group:",
      "\t#access_interface: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#destination_epg: ${5:}",
      "\t#destination_group: ${6:}",
      "\t#host: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_access_span_filter_group": {
    "prefix": "aci_access_span_filter_group",
    "description": "Manage Access SPAN filter groups (span:FilterGrp)",
    "body": [
      "cisco.aci.aci_access_span_filter_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#filter_group: ${3:}",
      "\t#host: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#state: ${11:absent|#present|query}",
      "\t#timeout: ${12:}",
      "\t#use_proxy: ${13:}",
      "\t#use_ssl: ${14:}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:}"
    ]
  },
  "aci_access_span_filter_group_entry": {
    "prefix": "aci_access_span_filter_group_entry",
    "description": "Manage Access SPAN filter group entries (span:FilterEntry)",
    "body": [
      "cisco.aci.aci_access_span_filter_group_entry:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#destination_ip: ${3:}",
      "\t#filter_group: ${4:}",
      "\t#first_dest_port: ${5:}",
      "\t#first_src_port: ${6:}",
      "\t#host: ${7:}",
      "\t#ip_protocol: ${8:eigrp|egp|icmp|icmpv6|igmp|igp|l2tp|ospfigp|pim|tcp|udp|unspecified}",
      "\t#last_dest_port: ${9:}",
      "\t#last_src_port: ${10:}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#source_ip: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_access_span_src_group": {
    "prefix": "aci_access_span_src_group",
    "description": "Manage Access SPAN source groups (span:SrcGrp)",
    "body": [
      "cisco.aci.aci_access_span_src_group:",
      "\t#admin_state: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#destination_group: ${5:}",
      "\t#filter_group: ${6:}",
      "\t#host: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#source_group: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_access_span_src_group_src": {
    "prefix": "aci_access_span_src_group_src",
    "description": "Manage Access SPAN sources (span:Src)",
    "body": [
      "cisco.aci.aci_access_span_src_group_src:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#direction: ${4:incoming|outgoing|both}",
      "\t#drop_packets: ${5:}",
      "\t#epg: ${6:}",
      "\t#filter_group: ${7:}",
      "\t#host: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#routed_outside: ${17:}",
      "\t#source: ${18:}",
      "\t#source_group: ${19:}",
      "\t#state: ${20:absent|#present|query}",
      "\t#timeout: ${21:}",
      "\t#use_proxy: ${22:}",
      "\t#use_ssl: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "aci_access_span_src_group_src_path": {
    "prefix": "aci_access_span_src_group_src_path",
    "description": "Manage Access SPAN source paths (span:RsSrcToPathEp)",
    "body": [
      "cisco.aci.aci_access_span_src_group_src_path:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#nodes: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#path_ep: ${8:}",
      "\t#pod: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#source: ${12:}",
      "\t#source_group: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_access_sub_port_block_to_access_port": {
    "prefix": "aci_access_sub_port_block_to_access_port",
    "description": "Manage sub port blocks of Fabric interface policy leaf profile interface selectors (infra:HPortS, infra:SubPortBlk)",
    "body": [
      "cisco.aci.aci_access_sub_port_block_to_access_port:",
      "\t#access_port_selector: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#from_card: ${4:}",
      "\t#from_port: ${5:}",
      "\t#from_sub_port: ${6:}",
      "\t#host: ${7:}",
      "\t#leaf_interface_profile: ${8:}",
      "\t#leaf_port_blk: ${9:}",
      "\t#leaf_port_blk_description: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#to_card: ${18:}",
      "\t#to_port: ${19:}",
      "\t#to_sub_port: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_aep": {
    "prefix": "aci_aep",
    "description": "Manage attachable Access Entity Profile (AEP) objects (infra:AttEntityP, infra:ProvAcc)",
    "body": [
      "cisco.aci.aci_aep:",
      "\t#aep: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#infra_vlan: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_aep_to_domain": {
    "prefix": "aci_aep_to_domain",
    "description": "Bind AEPs to Physical or Virtual Domains (infra:RsDomP)",
    "body": [
      "cisco.aci.aci_aep_to_domain:",
      "\t#aep: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#domain: ${4:}",
      "\t#domain_type: ${5:fc|l2dom|l3dom|phys|vmm}",
      "\t#host: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}",
      "\t#vm_provider: ${18:cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware}"
    ]
  },
  "aci_aep_to_epg": {
    "prefix": "aci_aep_to_epg",
    "description": "Bind EPG to AEP (infra:RsFuncToEpg).",
    "body": [
      "cisco.aci.aci_aep_to_epg:",
      "\t#aep: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#ap: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#encap: ${5:}",
      "\t#epg: ${6:}",
      "\t#host: ${7:}",
      "\t#interface_mode: ${8:802.1p|access|native|regular|tagged|trunk|untagged}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#primary_encap: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_ap": {
    "prefix": "aci_ap",
    "description": "Manage top level Application Profile (AP) objects (fv:Ap)",
    "body": [
      "cisco.aci.aci_ap:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#monitoring_policy: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_bd": {
    "prefix": "aci_bd",
    "description": "Manage Bridge Domains (BD) objects (fv:BD)",
    "body": [
      "cisco.aci.aci_bd:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#arp_flooding: ${2:}",
      "\t#bd: ${3:}",
      "\t#bd_type: ${4:ethernet|fc}",
      "\t#certificate_name: ${5:}",
      "\t#description: ${6:}",
      "\t#enable_multicast: ${7:}",
      "\t#enable_routing: ${8:}",
      "\t#endpoint_clear: ${9:}",
      "\t#endpoint_move_detect: ${10:default|garp}",
      "\t#endpoint_retention_action: ${11:inherit|resolve}",
      "\t#endpoint_retention_policy: ${12:}",
      "\t#host: ${13:}",
      "\t#igmp_snoop_policy: ${14:}",
      "\t#ip_learning: ${15:}",
      "\t#ipv6_l3_unknown_multicast: ${16:flood|opt-flood}",
      "\t#ipv6_nd_policy: ${17:}",
      "\t#l2_unknown_unicast: ${18:proxy|flood}",
      "\t#l3_unknown_multicast: ${19:flood|opt-flood}",
      "\t#limit_ip_learn: ${20:}",
      "\t#mac_address: ${21:}",
      "\t#multi_dest: ${22:bd-flood|drop|encap-flood}",
      "\t#name_alias: ${23:}",
      "\t#output_level: ${24:debug|info|#normal}",
      "\t#output_path: ${25:}",
      "\t#owner_key: ${26:}",
      "\t#owner_tag: ${27:}",
      "\t#password: ${28:}",
      "\t#port: ${29:}",
      "\t#private_key: ${30:}",
      "\t#route_profile: ${31:}",
      "\t#route_profile_l3out: ${32:}",
      "\t#state: ${33:absent|#present|query}",
      "\t#tenant: ${34:}",
      "\t#timeout: ${35:}",
      "\t#use_proxy: ${36:}",
      "\t#use_ssl: ${37:}",
      "\t#username: ${38:}",
      "\t#validate_certs: ${39:}",
      "\t#vrf: ${40:}"
    ]
  },
  "aci_bd_dhcp_label": {
    "prefix": "aci_bd_dhcp_label",
    "description": "Manage DHCP Labels (dhcp:Lbl)",
    "body": [
      "cisco.aci.aci_bd_dhcp_label:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bd: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#dhcp_label: ${5:}",
      "\t#dhcp_option: ${6:}",
      "\t#host: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#scope: ${15:#infra|tenant}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_bd_subnet": {
    "prefix": "aci_bd_subnet",
    "description": "Manage Subnets (fv:Subnet)",
    "body": [
      "cisco.aci.aci_bd_subnet:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bd: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#enable_vip: ${5:}",
      "\t#gateway: ${6:}",
      "\t#host: ${7:}",
      "\t#ip_data_plane_learning: ${8:enabled|disabled}",
      "\t#mask: ${9:}",
      "\t#name_alias: ${10:}",
      "\t#nd_prefix_policy: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#preferred: ${16:}",
      "\t#private_key: ${17:}",
      "\t#route_profile: ${18:}",
      "\t#route_profile_l3_out: ${19:}",
      "\t#scope: ${20:private|public|shared}",
      "\t#state: ${21:absent|#present|query}",
      "\t#subnet_control: ${22:nd_ra|no_gw|querier_ip|unspecified}",
      "\t#subnet_name: ${23:}",
      "\t#tenant: ${24:}",
      "\t#timeout: ${25:}",
      "\t#use_proxy: ${26:}",
      "\t#use_ssl: ${27:}",
      "\t#username: ${28:}",
      "\t#validate_certs: ${29:}"
    ]
  },
  "aci_bd_to_l3out": {
    "prefix": "aci_bd_to_l3out",
    "description": "Bind Bridge Domain to L3 Out (fv:RsBDToOut)",
    "body": [
      "cisco.aci.aci_bd_to_l3out:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bd: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#host: ${4:}",
      "\t#l3out: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#state: ${11:absent|#present|query}",
      "\t#tenant: ${12:}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_bgp_best_path_policy": {
    "prefix": "aci_bgp_best_path_policy",
    "description": "Manage BGP Best Path policy (bgp:BestPathCtrlPol)",
    "body": [
      "cisco.aci.aci_bgp_best_path_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#best_path_control: ${2:enable|disable}",
      "\t#bgp_best_path_policy: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_bgp_rr_asn": {
    "prefix": "aci_bgp_rr_asn",
    "description": "Manage BGP Route Reflector ASN.",
    "body": [
      "cisco.aci.aci_bgp_rr_asn:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#asn: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#host: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:}",
      "\t#private_key: ${9:}",
      "\t#state: ${10:absent|#present|query}",
      "\t#timeout: ${11:}",
      "\t#use_proxy: ${12:}",
      "\t#use_ssl: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:}"
    ]
  },
  "aci_bgp_rr_node": {
    "prefix": "aci_bgp_rr_node",
    "description": "Manage BGP Route Reflector objects.",
    "body": [
      "cisco.aci.aci_bgp_rr_node:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#node_id: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#pod_id: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_bgp_timers_policy": {
    "prefix": "aci_bgp_timers_policy",
    "description": "Manage BGP timers policy (bgp:CtxPol)",
    "body": [
      "cisco.aci.aci_bgp_timers_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bgp_timers_policy: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#graceful_restart_controls: ${5:helper|complete}",
      "\t#hold_interval: ${6:}",
      "\t#host: ${7:}",
      "\t#keepalive_interval: ${8:}",
      "\t#max_as_limit: ${9:}",
      "\t#name_alias: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#owner_key: ${13:}",
      "\t#owner_tag: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#private_key: ${17:}",
      "\t#stale_interval: ${18:}",
      "\t#state: ${19:absent|#present|query}",
      "\t#tenant: ${20:}",
      "\t#timeout: ${21:}",
      "\t#use_proxy: ${22:}",
      "\t#use_ssl: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "aci_bulk_static_binding_to_epg": {
    "prefix": "aci_bulk_static_binding_to_epg",
    "description": "Bind static paths to EPGs (fv:RsPathAtt)",
    "body": [
      "cisco.aci.aci_bulk_static_binding_to_epg:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#deploy_immediacy: ${4:immediate|lazy}",
      "\t#description: ${5:}",
      "\t#encap_id: ${6:}",
      "\t#epg: ${7:}",
      "\t#host: ${8:}",
      "\t#interface_configs: ${9:}",
      "\t#interface_mode: ${10:802.1p|access|native|regular|tagged|trunk|untagged}",
      "\t#interface_type: ${11:fex|port_channel|#switch_port|vpc|fex_port_channel|fex_vpc}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#primary_encap_id: ${16:}",
      "\t#private_key: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#tenant: ${19:}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_cloud_ap": {
    "prefix": "aci_cloud_ap",
    "description": "Manage Cloud Application Profile (AP) (cloud:App)",
    "body": [
      "cisco.aci.aci_cloud_ap:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#tenant: ${14:}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_cloud_aws_provider": {
    "prefix": "aci_cloud_aws_provider",
    "description": "Manage Cloud AWS Provider (cloud:AwsProvider)",
    "body": [
      "cisco.aci.aci_cloud_aws_provider:",
      "\t#access_key_id: ${1:}",
      "\t#account_id: ${2:}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#host: ${5:}",
      "\t#is_account_in_org: ${6:}",
      "\t#is_trusted: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#secret_access_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_cloud_bgp_asn": {
    "prefix": "aci_cloud_bgp_asn",
    "description": "Manage Cloud APIC BGP Autonomous System Profile (cloud:BgpAsP)",
    "body": [
      "cisco.aci.aci_cloud_bgp_asn:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#asn: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_cloud_cidr": {
    "prefix": "aci_cloud_cidr",
    "description": "Manage CIDR under Cloud Context Profile (cloud:Cidr)",
    "body": [
      "cisco.aci.aci_cloud_cidr:",
      "\tcloud_context_profile: ${1:}",
      "\ttenant: ${2:}",
      "\t#address: ${3:}",
      "\t#annotation: ${4:orchestrator:ansible}",
      "\t#certificate_name: ${5:}",
      "\t#description: ${6:}",
      "\t#host: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_cloud_ctx_profile": {
    "prefix": "aci_cloud_ctx_profile",
    "description": "Manage Cloud Context Profile (cloud:CtxProfile)",
    "body": [
      "cisco.aci.aci_cloud_ctx_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#cloud: ${3:aws|azure}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#primary_cidr: ${14:}",
      "\t#private_key: ${15:}",
      "\t#region: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}",
      "\t#vrf: ${24:}"
    ]
  },
  "aci_cloud_epg": {
    "prefix": "aci_cloud_epg",
    "description": "Manage Cloud EPG (cloud:EPg)",
    "body": [
      "cisco.aci.aci_cloud_epg:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#tenant: ${13:}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}",
      "\t#vrf: ${19:}"
    ]
  },
  "aci_cloud_epg_selector": {
    "prefix": "aci_cloud_epg_selector",
    "description": "Manage Cloud Endpoint Selector (cloud:EPSelector)",
    "body": [
      "cisco.aci.aci_cloud_epg_selector:",
      "\tap: ${1:}",
      "\tepg: ${2:}",
      "\ttenant: ${3:}",
      "\t#annotation: ${4:orchestrator:ansible}",
      "\t#certificate_name: ${5:}",
      "\t#description: ${6:}",
      "\t#expressions: ${7:}",
      "\t#host: ${8:}",
      "\t#name: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_cloud_external_epg": {
    "prefix": "aci_cloud_external_epg",
    "description": "Manage Cloud External EPG (cloud:ExtEPg)",
    "body": [
      "cisco.aci.aci_cloud_external_epg:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#route_reachability: ${12:inter-site|internet|unspecified}",
      "\t#state: ${13:absent|#present|query}",
      "\t#tenant: ${14:}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}",
      "\t#vrf: ${20:}"
    ]
  },
  "aci_cloud_external_epg_selector": {
    "prefix": "aci_cloud_external_epg_selector",
    "description": "Manage Cloud Endpoint Selector for External EPGs (cloud:ExtEPSelector)",
    "body": [
      "cisco.aci.aci_cloud_external_epg_selector:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#cloud_external_epg: ${4:}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#subnet: ${15:}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_cloud_provider": {
    "prefix": "aci_cloud_provider",
    "description": "Query Cloud Provider information (cloud:ProvP)",
    "body": [
      "cisco.aci.aci_cloud_provider:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#output_level: ${4:debug|info|#normal}",
      "\t#output_path: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:}",
      "\t#private_key: ${8:}",
      "\t#state: ${9:#query}",
      "\t#timeout: ${10:}",
      "\t#use_proxy: ${11:}",
      "\t#use_ssl: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:}"
    ]
  },
  "aci_cloud_region": {
    "prefix": "aci_cloud_region",
    "description": "Manage Cloud Providers Region (cloud:Region)",
    "body": [
      "cisco.aci.aci_cloud_region:",
      "\tcloud: ${1:aws|azure}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#host: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:}",
      "\t#private_key: ${9:}",
      "\t#region: ${10:}",
      "\t#state: ${11:#query}",
      "\t#timeout: ${12:}",
      "\t#use_proxy: ${13:}",
      "\t#use_ssl: ${14:}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:}"
    ]
  },
  "aci_cloud_subnet": {
    "prefix": "aci_cloud_subnet",
    "description": "Manage Cloud Subnet (cloud:Subnet)",
    "body": [
      "cisco.aci.aci_cloud_subnet:",
      "\tcidr: ${1:}",
      "\tcloud_context_profile: ${2:}",
      "\ttenant: ${3:}",
      "\t#address: ${4:}",
      "\t#annotation: ${5:orchestrator:ansible}",
      "\t#availability_zone: ${6:}",
      "\t#certificate_name: ${7:}",
      "\t#description: ${8:}",
      "\t#host: ${9:}",
      "\t#name: ${10:}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}",
      "\t#vnet_gateway: ${23:false}"
    ]
  },
  "aci_cloud_vpn_gateway": {
    "prefix": "aci_cloud_vpn_gateway",
    "description": "Manage cloudRouterP in Cloud Context Profile (cloud:cloudRouterP)",
    "body": [
      "cisco.aci.aci_cloud_vpn_gateway:",
      "\tcloud_context_profile: ${1:}",
      "\ttenant: ${2:}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#host: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|present|#query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_cloud_zone": {
    "prefix": "aci_cloud_zone",
    "description": "Manage Cloud Availability Zone (cloud:Zone)",
    "body": [
      "cisco.aci.aci_cloud_zone:",
      "\tcloud: ${1:aws|azure}",
      "\tregion: ${2:}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:#query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_config_export_policy": {
    "prefix": "aci_config_export_policy",
    "description": "Manage Configuration Export Policy (config:ExportP)",
    "body": [
      "cisco.aci.aci_config_export_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#export_destination: ${4:}",
      "\t#format: ${5:json|xml}",
      "\t#host: ${6:}",
      "\t#name: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#scheduler: ${13:}",
      "\t#snapshot: ${14:}",
      "\t#start_now: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#target_dn: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_config_rollback": {
    "prefix": "aci_config_rollback",
    "description": "Provides rollback and rollback preview functionality (config:ImportP)",
    "body": [
      "cisco.aci.aci_config_rollback:",
      "\tsnapshot: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#compare_export_policy: ${4:}",
      "\t#compare_snapshot: ${5:}",
      "\t#description: ${6:}",
      "\t#export_policy: ${7:}",
      "\t#fail_on_decrypt: ${8:}",
      "\t#host: ${9:}",
      "\t#import_mode: ${10:atomic|best-effort}",
      "\t#import_policy: ${11:}",
      "\t#import_type: ${12:merge|replace}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#private_key: ${17:}",
      "\t#state: ${18:preview|#rollback}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_config_snapshot": {
    "prefix": "aci_config_snapshot",
    "description": "Manage Config Snapshots (config:Snapshot, config:ExportP)",
    "body": [
      "cisco.aci.aci_config_snapshot:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#export_policy: ${4:}",
      "\t#format: ${5:json|xml}",
      "\t#host: ${6:}",
      "\t#include_secure: ${7:}",
      "\t#max_count: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#snapshot: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_contract": {
    "prefix": "aci_contract",
    "description": "Manage contract resources (vz:BrCP)",
    "body": [
      "cisco.aci.aci_contract:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#contract: ${3:}",
      "\t#description: ${4:}",
      "\t#dscp: ${5:AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#priority: ${14:level1|level2|level3|unspecified}",
      "\t#private_key: ${15:}",
      "\t#scope: ${16:application-profile|context|global|tenant}",
      "\t#state: ${17:absent|#present|query}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_contract_export": {
    "prefix": "aci_contract_export",
    "description": "Manage contract interfaces (vz:CPIf)",
    "body": [
      "cisco.aci.aci_contract_export:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#contract: ${3:}",
      "\t#description: ${4:}",
      "\t#destination_tenant: ${5:}",
      "\t#host: ${6:}",
      "\t#name: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_contract_subject": {
    "prefix": "aci_contract_subject",
    "description": "Manage initial Contract Subjects (vz:Subj)",
    "body": [
      "cisco.aci.aci_contract_subject:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#apply_both_direction: ${2:#both|one-way}",
      "\t#certificate_name: ${3:}",
      "\t#consumer_match: ${4:all|at_least_one|at_most_one|none}",
      "\t#contract: ${5:}",
      "\t#description: ${6:}",
      "\t#dscp: ${7:AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified}",
      "\t#dscp_consumer_to_provider: ${8:AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified}",
      "\t#dscp_provider_to_consumer: ${9:AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified}",
      "\t#host: ${10:}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#priority: ${16:level1|level2|level3|unspecified}",
      "\t#priority_consumer_to_provider: ${17:level1|level2|level3|unspecified}",
      "\t#priority_provider_to_consumer: ${18:level1|level2|level3|unspecified}",
      "\t#private_key: ${19:}",
      "\t#provider_match: ${20:all|at_least_one|at_most_one|none}",
      "\t#reverse_filter: ${21:}",
      "\t#state: ${22:absent|#present|query}",
      "\t#subject: ${23:}",
      "\t#tenant: ${24:}",
      "\t#timeout: ${25:}",
      "\t#use_proxy: ${26:}",
      "\t#use_ssl: ${27:}",
      "\t#username: ${28:}",
      "\t#validate_certs: ${29:}"
    ]
  },
  "aci_contract_subject_to_filter": {
    "prefix": "aci_contract_subject_to_filter",
    "description": "Bind Contract Subjects to Filters (vz:RsSubjFiltAtt)",
    "body": [
      "cisco.aci.aci_contract_subject_to_filter:",
      "\t#action: ${1:deny|permit}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#contract: ${4:}",
      "\t#direction: ${5:#both|consumer_to_provider|provider_to_consumer}",
      "\t#directives: ${6:log|no_stats|none}",
      "\t#filter: ${7:}",
      "\t#host: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#priority_override: ${13:default|level1|level2|level3}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#subject: ${16:}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_contract_subject_to_service_graph": {
    "prefix": "aci_contract_subject_to_service_graph",
    "description": "Bind contract subject to service graph (vz:RsSubjGraphAtt).",
    "body": [
      "cisco.aci.aci_contract_subject_to_service_graph:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#contract: ${3:}",
      "\t#host: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:}",
      "\t#private_key: ${9:}",
      "\t#service_graph: ${10:}",
      "\t#state: ${11:absent|#present|query}",
      "\t#subject: ${12:}",
      "\t#tenant: ${13:}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_dhcp_relay": {
    "prefix": "aci_dhcp_relay",
    "description": "Manage DHCP relay policies.",
    "body": [
      "cisco.aci.aci_dhcp_relay:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#state: ${11:absent|#present|query}",
      "\t#tenant: ${12:}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_dhcp_relay_provider": {
    "prefix": "aci_dhcp_relay_provider",
    "description": "Manage DHCP relay policy providers.",
    "body": [
      "cisco.aci.aci_dhcp_relay_provider:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#anp: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#dhcp_server_addr: ${4:}",
      "\t#dn: ${5:}",
      "\t#epg: ${6:}",
      "\t#epg_type: ${7:epg|l2_external|l3_external|dn}",
      "\t#external_epg: ${8:}",
      "\t#host: ${9:}",
      "\t#l2out_name: ${10:}",
      "\t#l3out_name: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#provider_tenant: ${17:}",
      "\t#relay_policy: ${18:}",
      "\t#state: ${19:absent|#present|query}",
      "\t#tenant: ${20:}",
      "\t#timeout: ${21:}",
      "\t#use_proxy: ${22:}",
      "\t#use_ssl: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "aci_dns_domain": {
    "prefix": "aci_dns_domain",
    "description": "Manage DNS Provider (dnsDomain) objects.",
    "body": [
      "cisco.aci.aci_dns_domain:",
      "\tdns_profile: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#default: ${4:}",
      "\t#domain: ${5:}",
      "\t#host: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_dns_profile": {
    "prefix": "aci_dns_profile",
    "description": "Manage DNS Profile (dnsProfile) objects.",
    "body": [
      "cisco.aci.aci_dns_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#dns_profile: ${3:}",
      "\t#host: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:}",
      "\t#private_key: ${9:}",
      "\t#state: ${10:absent|#present|query}",
      "\t#timeout: ${11:}",
      "\t#use_proxy: ${12:}",
      "\t#use_ssl: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:}"
    ]
  },
  "aci_dns_provider": {
    "prefix": "aci_dns_provider",
    "description": "Manage DNS Provider (dnsProv) objects.",
    "body": [
      "cisco.aci.aci_dns_provider:",
      "\tdns_profile: ${1:}",
      "\t#address: ${2:}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#host: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#preferred: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_domain": {
    "prefix": "aci_domain",
    "description": "Manage physical, virtual, bridged, routed or FC domain profiles (phys:DomP, vmm:DomP, l2ext:DomP, l3ext:DomP, fc:DomP)",
    "body": [
      "cisco.aci.aci_domain:",
      "\tdomain_type: ${1:fc|l2dom|l3dom|phys|vmm}",
      "\t#access_mode: ${2:read-only|read-write}",
      "\t#add_infra_pg: ${3:}",
      "\t#annotation: ${4:orchestrator:ansible}",
      "\t#certificate_name: ${5:}",
      "\t#domain: ${6:}",
      "\t#dscp: ${7:AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified}",
      "\t#enable_vm_folder: ${8:}",
      "\t#encap_mode: ${9:unknown|vlan|vxlan}",
      "\t#host: ${10:}",
      "\t#multicast_address: ${11:}",
      "\t#name_alias: ${12:}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#owner_key: ${15:}",
      "\t#owner_tag: ${16:}",
      "\t#password: ${17:}",
      "\t#port: ${18:}",
      "\t#private_key: ${19:}",
      "\t#state: ${20:absent|#present|query}",
      "\t#tag_collection: ${21:}",
      "\t#timeout: ${22:}",
      "\t#use_proxy: ${23:}",
      "\t#use_ssl: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}",
      "\t#vm_provider: ${27:cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware}",
      "\t#vswitch: ${28:avs|default|dvs|unknown}"
    ]
  },
  "aci_domain_to_encap_pool": {
    "prefix": "aci_domain_to_encap_pool",
    "description": "Bind Domain to Encap Pools (infra:RsVlanNs)",
    "body": [
      "cisco.aci.aci_domain_to_encap_pool:",
      "\tdomain_type: ${1:fc|l2dom|l3dom|phys|vmm}",
      "\tpool_type: ${2:vlan|vsan|vxlan}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#domain: ${5:}",
      "\t#host: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#pool: ${10:}",
      "\t#pool_allocation_mode: ${11:dynamic|static}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}",
      "\t#vm_provider: ${20:cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware}"
    ]
  },
  "aci_domain_to_vlan_pool": {
    "prefix": "aci_domain_to_vlan_pool",
    "description": "Bind Domain to VLAN Pools (infra:RsVlanNs)",
    "body": [
      "cisco.aci.aci_domain_to_vlan_pool:",
      "\tdomain_type: ${1:fc|l2dom|l3dom|phys|vmm}",
      "\tpool_allocation_mode: ${2:dynamic|static}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#domain: ${5:}",
      "\t#host: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#pool: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}",
      "\t#vm_provider: ${19:cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware}"
    ]
  },
  "aci_encap_pool": {
    "prefix": "aci_encap_pool",
    "description": "Manage encap pools (fvns:VlanInstP, fvns:VxlanInstP, fvns:VsanInstP)",
    "body": [
      "cisco.aci.aci_encap_pool:",
      "\tpool_type: ${1:vlan|vsan|vxlan}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#pool: ${12:}",
      "\t#pool_allocation_mode: ${13:dynamic|static}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_encap_pool_range": {
    "prefix": "aci_encap_pool_range",
    "description": "Manage encap ranges assigned to pools (fvns:EncapBlk, fvns:VsanEncapBlk)",
    "body": [
      "cisco.aci.aci_encap_pool_range:",
      "\tpool_type: ${1:vlan|vxlan|vsan}",
      "\t#allocation_mode: ${2:dynamic|inherit|static}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#pool: ${11:}",
      "\t#pool_allocation_mode: ${12:dynamic|static}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#range_end: ${15:}",
      "\t#range_name: ${16:}",
      "\t#range_start: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_epg": {
    "prefix": "aci_epg",
    "description": "Manage End Point Groups (EPG) objects (fv:AEPg)",
    "body": [
      "cisco.aci.aci_epg:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#bd: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#custom_qos_policy: ${5:}",
      "\t#description: ${6:}",
      "\t#epg: ${7:}",
      "\t#fwd_control: ${8:none|proxy-arp}",
      "\t#host: ${9:}",
      "\t#intra_epg_isolation: ${10:enforced|unenforced}",
      "\t#monitoring_policy: ${11:}",
      "\t#name_alias: ${12:}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#preferred_group: ${17:}",
      "\t#priority: ${18:level1|level2|level3|unspecified}",
      "\t#private_key: ${19:}",
      "\t#state: ${20:absent|#present|query}",
      "\t#tenant: ${21:}",
      "\t#timeout: ${22:}",
      "\t#use_proxy: ${23:}",
      "\t#use_ssl: ${24:}",
      "\t#useg: ${25:yes|no}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}"
    ]
  },
  "aci_epg_monitoring_policy": {
    "prefix": "aci_epg_monitoring_policy",
    "description": "Manage monitoring policies (mon:EPGPol)",
    "body": [
      "cisco.aci.aci_epg_monitoring_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#monitoring_policy: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#tenant: ${15:}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_epg_subnet": {
    "prefix": "aci_epg_subnet",
    "description": "Manage EPG Subnets (fv:Subnet)",
    "body": [
      "cisco.aci.aci_epg_subnet:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#enable_vip: ${5:}",
      "\t#epg: ${6:}",
      "\t#gateway: ${7:}",
      "\t#host: ${8:}",
      "\t#ip_data_plane_learning: ${9:enabled|disabled}",
      "\t#mask: ${10:}",
      "\t#name_alias: ${11:}",
      "\t#nd_prefix_policy: ${12:}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#preferred: ${17:}",
      "\t#private_key: ${18:}",
      "\t#route_profile: ${19:}",
      "\t#route_profile_l3out: ${20:}",
      "\t#scope: ${21:private|public|shared}",
      "\t#state: ${22:absent|#present|query}",
      "\t#subnet_control: ${23:nd_ra_prefix|no_default_gateway|querier_ip|unspecified}",
      "\t#subnet_name: ${24:}",
      "\t#tenant: ${25:}",
      "\t#timeout: ${26:}",
      "\t#use_proxy: ${27:}",
      "\t#use_ssl: ${28:}",
      "\t#username: ${29:}",
      "\t#validate_certs: ${30:}"
    ]
  },
  "aci_epg_to_contract": {
    "prefix": "aci_epg_to_contract",
    "description": "Bind EPGs to Contracts (fv:RsCons, fv:RsProv)",
    "body": [
      "cisco.aci.aci_epg_to_contract:",
      "\tcontract_type: ${1:consumer|provider}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#ap: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#contract: ${5:}",
      "\t#contract_label: ${6:}",
      "\t#epg: ${7:}",
      "\t#host: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#priority: ${13:level1|level2|level3|level4|level5|level6|unspecified}",
      "\t#private_key: ${14:}",
      "\t#provider_match: ${15:all|at_least_one|at_most_one|none}",
      "\t#state: ${16:absent|#present|query}",
      "\t#subject_label: ${17:}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_epg_to_contract_interface": {
    "prefix": "aci_epg_to_contract_interface",
    "description": "Bind EPGs to Consumed Contracts Interface (fv:RsConsIf).",
    "body": [
      "cisco.aci.aci_epg_to_contract_interface:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#contract_interface: ${4:}",
      "\t#epg: ${5:}",
      "\t#host: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#priority: ${11:level1|level2|level3|level4|level5|level6|unspecified}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#tenant: ${14:}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_epg_to_contract_master": {
    "prefix": "aci_epg_to_contract_master",
    "description": "Manage End Point Group (EPG) contract master relationships (fv:RsSecInherited)",
    "body": [
      "cisco.aci.aci_epg_to_contract_master:",
      "\tap: ${1:}",
      "\tepg: ${2:}",
      "\ttenant: ${3:}",
      "\t#annotation: ${4:orchestrator:ansible}",
      "\t#certificate_name: ${5:}",
      "\t#contract_master_ap: ${6:}",
      "\t#contract_master_epg: ${7:}",
      "\t#host: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_epg_to_domain": {
    "prefix": "aci_epg_to_domain",
    "description": "Bind EPGs to Domains (fv:RsDomAtt)",
    "body": [
      "cisco.aci.aci_epg_to_domain:",
      "\t#allow_useg: ${1:encap|useg}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#ap: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#custom_epg_name: ${5:}",
      "\t#delimiter: ${6:||~|!|@|^|+|=}",
      "\t#deploy_immediacy: ${7:immediate|lazy}",
      "\t#domain: ${8:}",
      "\t#domain_type: ${9:l2dom|phys|vmm}",
      "\t#encap: ${10:}",
      "\t#encap_mode: ${11:auto|vlan|vxlan}",
      "\t#enhanced_lag_policy: ${12:}",
      "\t#epg: ${13:}",
      "\t#forged_transmits: ${14:accept|#reject}",
      "\t#host: ${15:}",
      "\t#mac_changes: ${16:accept|#reject}",
      "\t#netflow: ${17:}",
      "\t#number_of_ports: ${18:}",
      "\t#output_level: ${19:debug|info|#normal}",
      "\t#output_path: ${20:}",
      "\t#password: ${21:}",
      "\t#port: ${22:}",
      "\t#port_allocation: ${23:elastic|fixed}",
      "\t#port_binding: ${24:dynamic|ephemeral|static}",
      "\t#primary_encap: ${25:}",
      "\t#private_key: ${26:}",
      "\t#promiscuous: ${27:accept|#reject}",
      "\t#resolution_immediacy: ${28:immediate|lazy|pre-provision}",
      "\t#state: ${29:absent|#present|query}",
      "\t#switching_mode: ${30:AVE|#native}",
      "\t#tenant: ${31:}",
      "\t#timeout: ${32:}",
      "\t#untagged_vlan: ${33:}",
      "\t#use_proxy: ${34:}",
      "\t#use_ssl: ${35:}",
      "\t#username: ${36:}",
      "\t#validate_certs: ${37:}",
      "\t#vm_provider: ${38:cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware}",
      "\t#vmm_uplink_active: ${39:}",
      "\t#vmm_uplink_standby: ${40:}"
    ]
  },
  "aci_esg": {
    "prefix": "aci_esg",
    "description": "Manage Endpoint Security Groups (ESGs) objects (fv:ESg)",
    "body": [
      "cisco.aci.aci_esg:",
      "\t#admin_state: ${1:False|True}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#ap: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#esg: ${6:}",
      "\t#host: ${7:}",
      "\t#intra_esg_isolation: ${8:enforced|unenforced}",
      "\t#name_alias: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#preferred_group_member: ${14:exclude|include}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}",
      "\t#vrf: ${23:}"
    ]
  },
  "aci_esg_contract_master": {
    "prefix": "aci_esg_contract_master",
    "description": "Manage ESG contract master relationships (fv:RsSecInherited)",
    "body": [
      "cisco.aci.aci_esg_contract_master:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#contract_master_ap: ${4:}",
      "\t#contract_master_esg: ${5:}",
      "\t#esg: ${6:}",
      "\t#host: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#tenant: ${15:}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_esg_epg_selector": {
    "prefix": "aci_esg_epg_selector",
    "description": "Manage ESG - EPG Selectors (fv:fvEPgSelector)",
    "body": [
      "cisco.aci.aci_esg_epg_selector:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#epg: ${5:}",
      "\t#epg_ap: ${6:}",
      "\t#esg: ${7:}",
      "\t#host: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_esg_ip_subnet_selector": {
    "prefix": "aci_esg_ip_subnet_selector",
    "description": "Manage ESG IP Subnet selector(fv:EPSelector)",
    "body": [
      "cisco.aci.aci_esg_ip_subnet_selector:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#esg: ${5:}",
      "\t#host: ${6:}",
      "\t#ip: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#tenant: ${15:}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_esg_tag_selector": {
    "prefix": "aci_esg_tag_selector",
    "description": "Manage ESG Tag Selectors (fv:TagSelector)",
    "body": [
      "cisco.aci.aci_esg_tag_selector:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#esg: ${5:}",
      "\t#host: ${6:}",
      "\t#match_value: ${7:}",
      "\t#name: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#operator: ${10:contains|equals|regex}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_fabric_interface_policy_group": {
    "prefix": "aci_fabric_interface_policy_group",
    "description": "Manage Fabric Interface Policy Groups (fabric:LePortPGrp, fabric:SpPortPGrp)",
    "body": [
      "cisco.aci.aci_fabric_interface_policy_group:",
      "\ttype: ${1:leaf|spine}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#dwdm_policy: ${5:}",
      "\t#host: ${6:}",
      "\t#l3_interface_policy: ${7:}",
      "\t#link_flap_policy: ${8:}",
      "\t#link_level_policy: ${9:}",
      "\t#macsec_policy: ${10:}",
      "\t#monitoring_policy: ${11:}",
      "\t#name: ${12:}",
      "\t#name_alias: ${13:}",
      "\t#output_level: ${14:debug|info|#normal}",
      "\t#output_path: ${15:}",
      "\t#owner_key: ${16:}",
      "\t#owner_tag: ${17:}",
      "\t#password: ${18:}",
      "\t#port: ${19:}",
      "\t#private_key: ${20:}",
      "\t#state: ${21:absent|#present|query}",
      "\t#timeout: ${22:}",
      "\t#transceiver_policy_tdn: ${23:}",
      "\t#use_proxy: ${24:}",
      "\t#use_ssl: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}"
    ]
  },
  "aci_fabric_leaf_profile": {
    "prefix": "aci_fabric_leaf_profile",
    "description": "Manage fabric leaf profiles (fabric:LeafP).",
    "body": [
      "cisco.aci.aci_fabric_leaf_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_fabric_leaf_switch_assoc": {
    "prefix": "aci_fabric_leaf_switch_assoc",
    "description": "Manage leaf switch bindings to profiles and policy groups (fabric:LeafS and fabric:RsLeNodePGrp).",
    "body": [
      "cisco.aci.aci_fabric_leaf_switch_assoc:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#policy_group: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#profile: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_fabric_node": {
    "prefix": "aci_fabric_node",
    "description": "Manage Fabric Node Members (fabric:NodeIdentP)",
    "body": [
      "cisco.aci.aci_fabric_node:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#node_id: ${6:}",
      "\t#node_type: ${7:tier_2|remote|virtual|unspecified}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#pod_id: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#remote_leaf_pool_id: ${14:}",
      "\t#role: ${15:leaf|spine|unspecified}",
      "\t#serial: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#switch: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_fabric_node_control": {
    "prefix": "aci_fabric_node_control",
    "description": "Manage Fabric Node Controls (fabric:NodeControl)",
    "body": [
      "cisco.aci.aci_fabric_node_control:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#enable_dom: ${4:}",
      "\t#feature_selection: ${5:analytics|netflow|telemetry}",
      "\t#host: ${6:}",
      "\t#name: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_fabric_pod_policy_group": {
    "prefix": "aci_fabric_pod_policy_group",
    "description": "Manage Fabric Pod Policy Groups (fabric:PodPGrp)",
    "body": [
      "cisco.aci.aci_fabric_pod_policy_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bgp_rr_policy: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#coop_group_policy: ${4:}",
      "\t#date_time_policy: ${5:}",
      "\t#host: ${6:}",
      "\t#isis_policy: ${7:}",
      "\t#macsec_policy: ${8:}",
      "\t#management_access_policy: ${9:}",
      "\t#name: ${10:}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#owner_key: ${14:}",
      "\t#owner_tag: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:}",
      "\t#private_key: ${18:}",
      "\t#snmp_policy: ${19:}",
      "\t#state: ${20:absent|#present|query}",
      "\t#timeout: ${21:}",
      "\t#use_proxy: ${22:}",
      "\t#use_ssl: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "aci_fabric_pod_selector": {
    "prefix": "aci_fabric_pod_selector",
    "description": "Manage Fabric Pod Selectors (fabric:PodS)",
    "body": [
      "cisco.aci.aci_fabric_pod_selector:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#blocks: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#pod_profile: ${13:}",
      "\t#policy_group: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#type: ${19:all|range}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_fabric_scheduler": {
    "prefix": "aci_fabric_scheduler",
    "description": "This module creates ACI schedulers (trig:SchedP)",
    "body": [
      "cisco.aci.aci_fabric_scheduler:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#concurCap: ${3:}",
      "\t#date: ${4:}",
      "\t#day: ${5:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday|even-day|odd-day|#every-day}",
      "\t#description: ${6:}",
      "\t#host: ${7:}",
      "\t#hour: ${8:}",
      "\t#maxTime: ${9:}",
      "\t#minute: ${10:}",
      "\t#name: ${11:}",
      "\t#name_alias: ${12:}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#owner_key: ${15:}",
      "\t#owner_tag: ${16:}",
      "\t#password: ${17:}",
      "\t#port: ${18:}",
      "\t#private_key: ${19:}",
      "\t#recurring: ${20:}",
      "\t#state: ${21:absent|#present|query}",
      "\t#timeout: ${22:}",
      "\t#use_proxy: ${23:}",
      "\t#use_ssl: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}",
      "\t#windowname: ${27:}"
    ]
  },
  "aci_fabric_span_dst_group": {
    "prefix": "aci_fabric_span_dst_group",
    "description": "Manage Fabric SPAN destination groups (span:DestGrp)",
    "body": [
      "cisco.aci.aci_fabric_span_dst_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#destination_epg: ${4:}",
      "\t#destination_group: ${5:}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_fabric_span_src_group": {
    "prefix": "aci_fabric_span_src_group",
    "description": "Manage Fabric SPAN source groups (span:SrcGrp)",
    "body": [
      "cisco.aci.aci_fabric_span_src_group:",
      "\t#admin_state: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#destination_group: ${5:}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#source_group: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_fabric_span_src_group_src": {
    "prefix": "aci_fabric_span_src_group_src",
    "description": "Manage Fabric SPAN sources (span:Src)",
    "body": [
      "cisco.aci.aci_fabric_span_src_group_src:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bd: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#direction: ${5:incoming|outgoing|both}",
      "\t#drop_packets: ${6:}",
      "\t#host: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#source: ${16:}",
      "\t#source_group: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}",
      "\t#vrf: ${24:}"
    ]
  },
  "aci_fabric_span_src_group_src_node": {
    "prefix": "aci_fabric_span_src_group_src_node",
    "description": "Manage Fabric SPAN source nodes (span:RsSrcToNode)",
    "body": [
      "cisco.aci.aci_fabric_span_src_group_src_node:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#node: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#pod: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#source: ${11:}",
      "\t#source_group: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_fabric_span_src_group_src_path": {
    "prefix": "aci_fabric_span_src_group_src_path",
    "description": "Manage Fabric SPAN source paths (span:RsSrcToPathEp)",
    "body": [
      "cisco.aci.aci_fabric_span_src_group_src_path:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#node: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#path_ep: ${8:}",
      "\t#pod: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#source: ${12:}",
      "\t#source_group: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_fabric_spine_profile": {
    "prefix": "aci_fabric_spine_profile",
    "description": "Manage fabric spine profiles (fabric:SpineP).",
    "body": [
      "cisco.aci.aci_fabric_spine_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_fabric_spine_switch_assoc": {
    "prefix": "aci_fabric_spine_switch_assoc",
    "description": "Manage spine switch bindings to profiles and policy groups (fabric:SpineS and fabric:RsSpNodePGrp).",
    "body": [
      "cisco.aci.aci_fabric_spine_switch_assoc:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#policy_group: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#profile: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_fabric_switch_block": {
    "prefix": "aci_fabric_switch_block",
    "description": "Manage switch blocks (fabric:NodeBlk).",
    "body": [
      "cisco.aci.aci_fabric_switch_block:",
      "\tswitch_type: ${1:leaf|spine}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#association: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#from_node: ${6:}",
      "\t#host: ${7:}",
      "\t#name: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#profile: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#to_node: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_fabric_switch_policy_group": {
    "prefix": "aci_fabric_switch_policy_group",
    "description": "Manage Fabric Switch Policy Group objects.",
    "body": [
      "cisco.aci.aci_fabric_switch_policy_group:",
      "\tswitch_type: ${1:leaf|spine}",
      "\t#analytics_cluster: ${2:}",
      "\t#analytics_name: ${3:}",
      "\t#annotation: ${4:orchestrator:ansible}",
      "\t#certificate_name: ${5:}",
      "\t#core_export_policy: ${6:}",
      "\t#description: ${7:}",
      "\t#host: ${8:}",
      "\t#inventory_policy: ${9:}",
      "\t#monitoring_policy: ${10:}",
      "\t#name: ${11:}",
      "\t#node_control_policy: ${12:}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#power_redundancy_policy: ${17:}",
      "\t#private_key: ${18:}",
      "\t#state: ${19:absent|#present|query}",
      "\t#tech_support_export_policy: ${20:}",
      "\t#timeout: ${21:}",
      "\t#twamp_responder_policy: ${22:}",
      "\t#twamp_server_policy: ${23:}",
      "\t#use_proxy: ${24:}",
      "\t#use_ssl: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}"
    ]
  },
  "aci_fabric_wide_settings": {
    "prefix": "aci_fabric_wide_settings",
    "description": "Manage Fabric Wide Settings (infra:SetPol)",
    "body": [
      "cisco.aci.aci_fabric_wide_settings:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#disable_remote_ep_learning: ${3:}",
      "\t#enforce_domain_validation: ${4:}",
      "\t#enforce_epg_vlan_validation: ${5:}",
      "\t#enforce_subnet_check: ${6:}",
      "\t#host: ${7:}",
      "\t#leaf_opflex_client_auth: ${8:}",
      "\t#leaf_ssl_opflex: ${9:}",
      "\t#opflex_ssl_versions: ${10:tls_v1.0|tls_v1.1|tls_v1.2}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#owner_key: ${13:}",
      "\t#owner_tag: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#private_key: ${17:}",
      "\t#reallocate_gipo: ${18:}",
      "\t#restrict_infra_vlan_traffic: ${19:}",
      "\t#spine_opflex_client_auth: ${20:}",
      "\t#spine_ssl_opflex: ${21:}",
      "\t#state: ${22:#present|query}",
      "\t#timeout: ${23:}",
      "\t#use_proxy: ${24:}",
      "\t#use_ssl: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}"
    ]
  },
  "aci_file_remote_path": {
    "prefix": "aci_file_remote_path",
    "description": "Manage Import/Export File Remote Paths (file:RemotePath)",
    "body": [
      "cisco.aci.aci_file_remote_path:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#auth_type: ${2:password|ssh_key}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#management_epg: ${6:}",
      "\t#name: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#remote_host: ${13:}",
      "\t#remote_password: ${14:}",
      "\t#remote_path: ${15:}",
      "\t#remote_port: ${16:}",
      "\t#remote_protocol: ${17:ftp|scp|sftp}",
      "\t#remote_ssh_key: ${18:}",
      "\t#remote_ssh_passphrase: ${19:}",
      "\t#remote_user: ${20:}",
      "\t#state: ${21:absent|#present|query}",
      "\t#timeout: ${22:}",
      "\t#use_proxy: ${23:}",
      "\t#use_ssl: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}"
    ]
  },
  "aci_filter": {
    "prefix": "aci_filter",
    "description": "Manages top level filter objects (vz:Filter)",
    "body": [
      "cisco.aci.aci_filter:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#filter: ${4:}",
      "\t#host: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#tenant: ${15:}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_filter_entry": {
    "prefix": "aci_filter_entry",
    "description": "Manage filter entries (vz:Entry)",
    "body": [
      "cisco.aci.aci_filter_entry:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#arp_flag: ${2:arp_reply|arp_request|unspecified}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#destination_port: ${5:}",
      "\t#destination_port_end: ${6:}",
      "\t#destination_port_start: ${7:}",
      "\t#entry: ${8:}",
      "\t#ether_type: ${9:arp|fcoe|ip|ipv4|ipv6|mac_security|mpls_ucast|trill|unspecified}",
      "\t#filter: ${10:}",
      "\t#host: ${11:}",
      "\t#icmp6_msg_type: ${12:dst_unreachable|echo_request|echo_reply|neighbor_advertisement|neighbor_solicitation|redirect|time_exceeded|unspecified}",
      "\t#icmp_msg_type: ${13:dst_unreachable|echo|echo_reply|src_quench|time_exceeded|unspecified}",
      "\t#ip_protocol: ${14:eigrp|egp|icmp|icmpv6|igmp|igp|l2tp|ospfigp|pim|tcp|udp|unspecified}",
      "\t#match_only_fragments: ${15:}",
      "\t#name_alias: ${16:}",
      "\t#output_level: ${17:debug|info|#normal}",
      "\t#output_path: ${18:}",
      "\t#password: ${19:}",
      "\t#port: ${20:}",
      "\t#private_key: ${21:}",
      "\t#source_port: ${22:}",
      "\t#source_port_end: ${23:}",
      "\t#source_port_start: ${24:}",
      "\t#state: ${25:absent|#present|query}",
      "\t#stateful: ${26:}",
      "\t#tcp_flags: ${27:acknowledgment|established|finish|reset|synchronize|unspecified}",
      "\t#tenant: ${28:}",
      "\t#timeout: ${29:}",
      "\t#use_proxy: ${30:}",
      "\t#use_ssl: ${31:}",
      "\t#username: ${32:}",
      "\t#validate_certs: ${33:}"
    ]
  },
  "aci_firmware_group": {
    "prefix": "aci_firmware_group",
    "description": "Manage firmware groups (firmware:FwGrp)",
    "body": [
      "cisco.aci.aci_firmware_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#group: ${4:}",
      "\t#host: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#policy: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#type_group: ${17:all|all_in_pod|range}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_firmware_group_node": {
    "prefix": "aci_firmware_group_node",
    "description": "Manage firmware group nodes (fabric:NodeBlk)",
    "body": [
      "cisco.aci.aci_firmware_group_node:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#group: ${3:}",
      "\t#host: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#node: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_firmware_policy": {
    "prefix": "aci_firmware_policy",
    "description": "Manage firmware policies (firmware:FwP)",
    "body": [
      "cisco.aci.aci_firmware_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#effective_on_reboot: ${4:}",
      "\t#host: ${5:}",
      "\t#ignore_compat: ${6:}",
      "\t#name: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#sr_upgrade: ${16:}",
      "\t#sr_version: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}",
      "\t#version: ${24:}",
      "\t#version_check_override: ${25:trigger|trigger_immediate|triggered|untriggered}"
    ]
  },
  "aci_firmware_source": {
    "prefix": "aci_firmware_source",
    "description": "Manage firmware image sources (firmware:OSource)",
    "body": [
      "cisco.aci.aci_firmware_source:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#name_alias: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#polling_interval: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#source: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#url: ${14:}",
      "\t#url_password: ${15:}",
      "\t#url_protocol: ${16:http|local|#scp|usbkey}",
      "\t#url_username: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_igmp_interface_policy": {
    "prefix": "aci_igmp_interface_policy",
    "description": "Manage IGMP Interface Policies (igmp:IfPol)",
    "body": [
      "cisco.aci.aci_igmp_interface_policy:",
      "\t#allow_v3_asm: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#fast_leave: ${5:}",
      "\t#group_timeout: ${6:}",
      "\t#host: ${7:}",
      "\t#igmp_version: ${8:v2|v3}",
      "\t#last_member_count: ${9:}",
      "\t#last_member_response: ${10:}",
      "\t#name: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#owner_key: ${14:}",
      "\t#owner_tag: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:}",
      "\t#private_key: ${18:}",
      "\t#querier_timeout: ${19:}",
      "\t#query_interval: ${20:}",
      "\t#query_response_interval: ${21:}",
      "\t#report_link_local_groups: ${22:}",
      "\t#robustness_variable: ${23:}",
      "\t#startup_query_count: ${24:}",
      "\t#startup_query_interval: ${25:}",
      "\t#state: ${26:absent|#present|query}",
      "\t#tenant: ${27:}",
      "\t#timeout: ${28:}",
      "\t#use_proxy: ${29:}",
      "\t#use_ssl: ${30:}",
      "\t#username: ${31:}",
      "\t#validate_certs: ${32:}"
    ]
  },
  "aci_interface_blacklist": {
    "prefix": "aci_interface_blacklist",
    "description": "Enabling or Disabling physical interfaces.",
    "body": [
      "cisco.aci.aci_interface_blacklist:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#fex_id: ${3:}",
      "\t#host: ${4:}",
      "\t#interface: ${5:}",
      "\t#node_id: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#pod_id: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_interface_config": {
    "prefix": "aci_interface_config",
    "description": "Manage Interface Configuration of Access (infra:PortConfig) and Fabric (fabric:PortConfig) Ports is only supported for ACI 5.2(7)+",
    "body": [
      "cisco.aci.aci_interface_config:",
      "\t#admin_state: ${1:up|down}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#breakout: ${3:100g-2x|100g-4x|10g-4x|25g-4x|50g-8x}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#interface: ${7:}",
      "\t#interface_type: ${8:#switch_port|pc_or_vpc|fc|fc_port_channel|leaf_fabric|spine_access|spine_fabric}",
      "\t#node: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#pc_member: ${15:}",
      "\t#policy_group: ${16:}",
      "\t#port: ${17:}",
      "\t#port_type: ${18:#access|fabric}",
      "\t#private_key: ${19:}",
      "\t#role: ${20:leaf|spine}",
      "\t#state: ${21:absent|#present|query}",
      "\t#timeout: ${22:}",
      "\t#use_proxy: ${23:}",
      "\t#use_ssl: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}"
    ]
  },
  "aci_interface_description": {
    "prefix": "aci_interface_description",
    "description": "Setting and removing description on physical interfaces.",
    "body": [
      "cisco.aci.aci_interface_description:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#fex_id: ${4:}",
      "\t#host: ${5:}",
      "\t#interface: ${6:}",
      "\t#node_id: ${7:}",
      "\t#node_type: ${8:leaf|spine}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#pod_id: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_interface_policy_cdp": {
    "prefix": "aci_interface_policy_cdp",
    "description": "Manage CDP interface policies (cdp:IfPol)",
    "body": [
      "cisco.aci.aci_interface_policy_cdp:",
      "\t#admin_state: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#cdp_policy: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_interface_policy_fc": {
    "prefix": "aci_interface_policy_fc",
    "description": "Manage Fibre Channel interface policies (fc:IfPol)",
    "body": [
      "cisco.aci.aci_interface_policy_fc:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#auto_max_speed: ${2:2G|4G|8G|16G|32G}",
      "\t#buffer_credits: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#fc_policy: ${6:}",
      "\t#fill_pattern: ${7:arbff|idle}",
      "\t#host: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#port_mode: ${16:f|np}",
      "\t#private_key: ${17:}",
      "\t#speed: ${18:auto|unknown|2G|4G|8G|16G|32G}",
      "\t#state: ${19:absent|#present|query}",
      "\t#timeout: ${20:}",
      "\t#trunk_mode: ${21:auto|trunk-off|trunk-on|un-init}",
      "\t#use_proxy: ${22:}",
      "\t#use_ssl: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "aci_interface_policy_l2": {
    "prefix": "aci_interface_policy_l2",
    "description": "Manage Layer 2 interface policies (l2:IfPol)",
    "body": [
      "cisco.aci.aci_interface_policy_l2:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#l2_policy: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#qinq: ${14:core|disabled|edge}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}",
      "\t#vepa: ${21:}",
      "\t#vlan_scope: ${22:global|portlocal}"
    ]
  },
  "aci_interface_policy_leaf_breakout_port_group": {
    "prefix": "aci_interface_policy_leaf_breakout_port_group",
    "description": "Manage fabric interface policy leaf breakout port group (infra:BrkoutPortGrp)",
    "body": [
      "cisco.aci.aci_interface_policy_leaf_breakout_port_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#breakout_map: ${2:}",
      "\t#breakout_port_group: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_interface_policy_leaf_fc_policy_group": {
    "prefix": "aci_interface_policy_leaf_fc_policy_group",
    "description": "Manage Fibre Channel (FC) interface policy groups (infra:FcAccBndlGrp, infra:FcAccPortGrp)",
    "body": [
      "cisco.aci.aci_interface_policy_leaf_fc_policy_group:",
      "\tlag_type: ${1:port|port_channel}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#attached_entity_profile: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#fibre_channel_interface_policy: ${6:}",
      "\t#host: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#policy_group: ${14:}",
      "\t#port: ${15:}",
      "\t#port_channel_policy: ${16:}",
      "\t#private_key: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_interface_policy_leaf_policy_group": {
    "prefix": "aci_interface_policy_leaf_policy_group",
    "description": "Manage fabric interface policy leaf policy groups (infra:AccBndlGrp, infra:AccPortGrp)",
    "body": [
      "cisco.aci.aci_interface_policy_leaf_policy_group:",
      "\tlag_type: ${1:leaf|link|node}",
      "\t#aep: ${2:}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#cdp_policy: ${4:}",
      "\t#certificate_name: ${5:}",
      "\t#copp_policy: ${6:}",
      "\t#description: ${7:}",
      "\t#dwdm: ${8:}",
      "\t#egress_data_plane_policing_policy: ${9:}",
      "\t#fibre_channel_interface_policy: ${10:}",
      "\t#host: ${11:}",
      "\t#ingress_data_plane_policing_policy: ${12:}",
      "\t#l2_interface_policy: ${13:}",
      "\t#link_flap_policy: ${14:}",
      "\t#link_level_flow_control: ${15:}",
      "\t#link_level_policy: ${16:}",
      "\t#lldp_policy: ${17:}",
      "\t#mac_sec_interface_policy: ${18:}",
      "\t#mcp_policy: ${19:}",
      "\t#monitoring_policy: ${20:}",
      "\t#name_alias: ${21:}",
      "\t#output_level: ${22:debug|info|#normal}",
      "\t#output_path: ${23:}",
      "\t#owner_key: ${24:}",
      "\t#owner_tag: ${25:}",
      "\t#password: ${26:}",
      "\t#poe_interface_policy: ${27:}",
      "\t#policy_group: ${28:}",
      "\t#port: ${29:}",
      "\t#port_authentication: ${30:}",
      "\t#port_channel_policy: ${31:}",
      "\t#port_security_policy: ${32:}",
      "\t#priority_flow_control_policy: ${33:}",
      "\t#private_key: ${34:}",
      "\t#slow_drain_policy: ${35:}",
      "\t#state: ${36:absent|#present|query}",
      "\t#storm_control_interface_policy: ${37:}",
      "\t#stp_interface_policy: ${38:}",
      "\t#sync_e_interface_policy: ${39:}",
      "\t#timeout: ${40:}",
      "\t#transceiver_policy: ${41:}",
      "\t#use_proxy: ${42:}",
      "\t#use_ssl: ${43:}",
      "\t#username: ${44:}",
      "\t#validate_certs: ${45:}"
    ]
  },
  "aci_interface_policy_leaf_profile": {
    "prefix": "aci_interface_policy_leaf_profile",
    "description": "Manage fabric interface policy leaf profiles (infra:AccPortP)",
    "body": [
      "cisco.aci.aci_interface_policy_leaf_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#interface_profile: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#timeout: ${15:}",
      "\t#type: ${16:fex|#leaf}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_interface_policy_leaf_profile_fex_policy_group": {
    "prefix": "aci_interface_policy_leaf_profile_fex_policy_group",
    "description": "Manage leaf interface profiles fex policy group (infra:FexBndlGrp)",
    "body": [
      "cisco.aci.aci_interface_policy_leaf_profile_fex_policy_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#fex_profile: ${3:}",
      "\t#host: ${4:}",
      "\t#name: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_interface_policy_link_level": {
    "prefix": "aci_interface_policy_link_level",
    "description": "Manage Link Level interface policies (fabric:HIfPol)",
    "body": [
      "cisco.aci.aci_interface_policy_link_level:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#auto_negotiation: ${2:true}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#forwarding_error_correction: ${5:#inherit|kp-fec|cl91-rs-fec|cl74-fc-fec|disable-fec|ieee-rs-fec|cons16-rs-fec}",
      "\t#host: ${6:}",
      "\t#link_debounce_interval: ${7:100}",
      "\t#link_level_policy: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#speed: ${16:100M|1G|10G|25G|40G|50G|100G|200G|400G|#inherit}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_interface_policy_lldp": {
    "prefix": "aci_interface_policy_lldp",
    "description": "Manage LLDP interface policies (lldp:IfPol)",
    "body": [
      "cisco.aci.aci_interface_policy_lldp:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#lldp_policy: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#receive_state: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#transmit_state: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_interface_policy_mcp": {
    "prefix": "aci_interface_policy_mcp",
    "description": "Manage MCP interface policies (mcp:IfPol)",
    "body": [
      "cisco.aci.aci_interface_policy_mcp:",
      "\t#admin_state: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#grace_period: ${5:}",
      "\t#grace_period_millisec: ${6:}",
      "\t#host: ${7:}",
      "\t#init_delay_time: ${8:}",
      "\t#mcp: ${9:}",
      "\t#mcp_mode: ${10:non_strict|strict}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#owner_key: ${14:}",
      "\t#owner_tag: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:}",
      "\t#private_key: ${18:}",
      "\t#state: ${19:absent|#present|query}",
      "\t#timeout: ${20:}",
      "\t#tx_frequence: ${21:}",
      "\t#tx_frequence_millisec: ${22:}",
      "\t#use_proxy: ${23:}",
      "\t#use_ssl: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}"
    ]
  },
  "aci_interface_policy_ospf": {
    "prefix": "aci_interface_policy_ospf",
    "description": "Manage OSPF interface policies (ospf:IfPol)",
    "body": [
      "cisco.aci.aci_interface_policy_ospf:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#controls: ${3:advert-subnet|bfd|mtu-ignore|passive|unspecified}",
      "\t#cost: ${4:}",
      "\t#dead_interval: ${5:}",
      "\t#description: ${6:}",
      "\t#hello_interval: ${7:}",
      "\t#host: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#network_type: ${10:bcast|p2p|unspecified}",
      "\t#ospf: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#owner_key: ${14:}",
      "\t#owner_tag: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:}",
      "\t#prefix_suppression: ${18:inherit|enable|disable}",
      "\t#priority: ${19:}",
      "\t#private_key: ${20:}",
      "\t#retransmit_interval: ${21:}",
      "\t#state: ${22:absent|#present|query}",
      "\t#tenant: ${23:}",
      "\t#timeout: ${24:}",
      "\t#transmit_delay: ${25:}",
      "\t#use_proxy: ${26:}",
      "\t#use_ssl: ${27:}",
      "\t#username: ${28:}",
      "\t#validate_certs: ${29:}"
    ]
  },
  "aci_interface_policy_port_channel": {
    "prefix": "aci_interface_policy_port_channel",
    "description": "Manage port channel interface policies (lacp:LagPol)",
    "body": [
      "cisco.aci.aci_interface_policy_port_channel:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#fast_select: ${4:}",
      "\t#graceful_convergence: ${5:}",
      "\t#host: ${6:}",
      "\t#load_defer: ${7:}",
      "\t#max_links: ${8:}",
      "\t#min_links: ${9:}",
      "\t#mode: ${10:active|mac-pin|mac-pin-nicload|off|passive}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#owner_key: ${14:}",
      "\t#owner_tag: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:}",
      "\t#port_channel: ${18:}",
      "\t#private_key: ${19:}",
      "\t#state: ${20:absent|#present|query}",
      "\t#suspend_individual: ${21:}",
      "\t#symmetric_hash: ${22:}",
      "\t#timeout: ${23:}",
      "\t#use_proxy: ${24:}",
      "\t#use_ssl: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}"
    ]
  },
  "aci_interface_policy_port_security": {
    "prefix": "aci_interface_policy_port_security",
    "description": "Manage port security (l2:PortSecurityPol)",
    "body": [
      "cisco.aci.aci_interface_policy_port_security:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#max_end_points: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#port_security: ${13:}",
      "\t#port_security_timeout: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_interface_policy_spanning_tree": {
    "prefix": "aci_interface_policy_spanning_tree",
    "description": "Manage spanning tree interface policies (stp:IfPol)",
    "body": [
      "cisco.aci.aci_interface_policy_spanning_tree:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bpdu_filter: ${2:false}",
      "\t#bpdu_guard: ${3:false}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#stp_policy: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_interface_policy_spine_policy_group": {
    "prefix": "aci_interface_policy_spine_policy_group",
    "description": "Manage spine access interface policy groups (infra:SpAccPortGrp)",
    "body": [
      "cisco.aci.aci_interface_policy_spine_policy_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#attached_entity_profile: ${2:}",
      "\t#cdp_policy: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#link_flap_policy: ${7:}",
      "\t#link_level_policy: ${8:}",
      "\t#mac_sec_policy: ${9:}",
      "\t#name_alias: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#owner_key: ${13:}",
      "\t#owner_tag: ${14:}",
      "\t#password: ${15:}",
      "\t#policy_group: ${16:}",
      "\t#port: ${17:}",
      "\t#private_key: ${18:}",
      "\t#state: ${19:absent|#present|query}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_interface_selector_to_switch_policy_leaf_profile": {
    "prefix": "aci_interface_selector_to_switch_policy_leaf_profile",
    "description": "Bind interface selector profiles to switch policy leaf profiles (infra:RsAccPortP)",
    "body": [
      "cisco.aci.aci_interface_selector_to_switch_policy_leaf_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#interface_selector: ${4:}",
      "\t#leaf_profile: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#state: ${11:absent|#present|query}",
      "\t#timeout: ${12:}",
      "\t#use_proxy: ${13:}",
      "\t#use_ssl: ${14:}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:}"
    ]
  },
  "aci_l2out": {
    "prefix": "aci_l2out",
    "description": "Manage Layer2 Out (L2Out) objects.",
    "body": [
      "cisco.aci.aci_l2out:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bd: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#domain: ${5:}",
      "\t#host: ${6:}",
      "\t#l2out: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}",
      "\t#vlan: ${23:}"
    ]
  },
  "aci_l2out_extepg": {
    "prefix": "aci_l2out_extepg",
    "description": "Manage External Network Instance (L2Out External EPG) objects (l2extInstP).",
    "body": [
      "cisco.aci.aci_l2out_extepg:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#extepg: ${4:}",
      "\t#host: ${5:}",
      "\t#l2out: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#preferred_group: ${11:}",
      "\t#private_key: ${12:}",
      "\t#qos_class: ${13:level1|level2|level3|level4|level5|level6|Unspecified}",
      "\t#state: ${14:absent|#present|query}",
      "\t#tenant: ${15:}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_l2out_extepg_to_contract": {
    "prefix": "aci_l2out_extepg_to_contract",
    "description": "Bind Contracts to L2 External End Point Groups (EPGs)",
    "body": [
      "cisco.aci.aci_l2out_extepg_to_contract:",
      "\tcontract_type: ${1:consumer|provider}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#contract: ${4:}",
      "\t#extepg: ${5:}",
      "\t#host: ${6:}",
      "\t#l2out: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#priority: ${12:level1|level2|level3|unspecified}",
      "\t#private_key: ${13:}",
      "\t#provider_match: ${14:all|at_least_one|at_most_one|none}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_l2out_logical_interface_path": {
    "prefix": "aci_l2out_logical_interface_path",
    "description": "Manage Layer 2 Outside (L2Out) logical interface path (l2extRsPathL2OutAtt)",
    "body": [
      "cisco.aci.aci_l2out_logical_interface_path:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#interface: ${4:}",
      "\t#interface_profile: ${5:}",
      "\t#interface_type: ${6:#switch_port|port_channel|vpc}",
      "\t#l2out: ${7:}",
      "\t#leaves: ${8:}",
      "\t#node_profile: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#password: ${12:}",
      "\t#pod_id: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_l2out_logical_interface_profile": {
    "prefix": "aci_l2out_logical_interface_profile",
    "description": "Manage Layer 2 Outside (L2Out) interface profiles (l2ext:LIfP)",
    "body": [
      "cisco.aci.aci_l2out_logical_interface_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#interface_profile: ${4:}",
      "\t#l2out: ${5:}",
      "\t#node_profile: ${6:default}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#tenant: ${15:}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_l2out_logical_node_profile": {
    "prefix": "aci_l2out_logical_node_profile",
    "description": "Manage Layer 2 Outside (L2Out) logical node profiles (l2ext:LNodeP)",
    "body": [
      "cisco.aci.aci_l2out_logical_node_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#l2out: ${4:}",
      "\t#node_profile: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#tenant: ${14:}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_l3out": {
    "prefix": "aci_l3out",
    "description": "Manage Layer 3 Outside (L3Out) objects (l3ext:Out)",
    "body": [
      "cisco.aci.aci_l3out:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#asn: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#domain: ${5:}",
      "\t#dscp: ${6:AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified}",
      "\t#host: ${7:}",
      "\t#l3out: ${8:}",
      "\t#l3protocol: ${9:bgp|eigrp|ospf|pim|static}",
      "\t#mpls: ${10:no|yes}",
      "\t#name_alias: ${11:}",
      "\t#ospf: ${12:}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#owner_key: ${15:}",
      "\t#owner_tag: ${16:}",
      "\t#password: ${17:}",
      "\t#port: ${18:}",
      "\t#private_key: ${19:}",
      "\t#route_control: ${20:export|import}",
      "\t#state: ${21:absent|#present|query}",
      "\t#tenant: ${22:}",
      "\t#timeout: ${23:}",
      "\t#use_proxy: ${24:}",
      "\t#use_ssl: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}",
      "\t#vrf: ${28:}"
    ]
  },
  "aci_l3out_bgp_peer": {
    "prefix": "aci_l3out_bgp_peer",
    "description": "Manage Layer 3 Outside (L3Out) BGP Peers (bgp:PeerP)",
    "body": [
      "cisco.aci.aci_l3out_bgp_peer:",
      "\t#address_type_controls: ${1:af-ucast|af-mcast}",
      "\t#admin_state: ${2:enabled|disabled}",
      "\t#allow_self_as_count: ${3:}",
      "\t#annotation: ${4:orchestrator:ansible}",
      "\t#bgp_controls: ${5:send-com|send-ext-com|allow-self-as|as-override|dis-peer-as-check|nh-self}",
      "\t#certificate_name: ${6:}",
      "\t#host: ${7:}",
      "\t#interface_profile: ${8:}",
      "\t#l3out: ${9:}",
      "\t#local_as_number: ${10:}",
      "\t#local_as_number_config: ${11:dual-as|no-prepend|none|replace-as}",
      "\t#node_id: ${12:}",
      "\t#node_profile: ${13:}",
      "\t#output_level: ${14:debug|info|#normal}",
      "\t#output_path: ${15:}",
      "\t#password: ${16:}",
      "\t#path_ep: ${17:}",
      "\t#peer_controls: ${18:bfd|dis-conn-check}",
      "\t#peer_ip: ${19:}",
      "\t#pod_id: ${20:}",
      "\t#port: ${21:}",
      "\t#private_asn_controls: ${22:remove-exclusive|remove-all|replace-as}",
      "\t#private_key: ${23:}",
      "\t#remote_asn: ${24:}",
      "\t#route_control_profiles: ${25:}",
      "\t#state: ${26:absent|#present|query}",
      "\t#tenant: ${27:}",
      "\t#timeout: ${28:}",
      "\t#ttl: ${29:}",
      "\t#use_proxy: ${30:}",
      "\t#use_ssl: ${31:}",
      "\t#username: ${32:}",
      "\t#validate_certs: ${33:}",
      "\t#weight: ${34:}"
    ]
  },
  "aci_l3out_bgp_protocol_profile": {
    "prefix": "aci_l3out_bgp_protocol_profile",
    "description": "Manage BGP Protocol Profile (bgp:ProtP)",
    "body": [
      "cisco.aci.aci_l3out_bgp_protocol_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bgp_best_path_policy: ${2:}",
      "\t#bgp_timers_policy: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#host: ${5:}",
      "\t#l3out: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#node_profile: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_l3out_extepg": {
    "prefix": "aci_l3out_extepg",
    "description": "Manage External Network Instance Profile (ExtEpg) objects (l3extInstP:instP)",
    "body": [
      "cisco.aci.aci_l3out_extepg:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#contract_exception_tag: ${3:}",
      "\t#description: ${4:}",
      "\t#dscp: ${5:AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified}",
      "\t#extepg: ${6:}",
      "\t#host: ${7:}",
      "\t#intra_ext_epg_isolation: ${8:enforced|unenforced}",
      "\t#l3out: ${9:}",
      "\t#name_alias: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#preferred_group: ${15:}",
      "\t#private_key: ${16:}",
      "\t#qos_class: ${17:level1|level2|#level3|level4|level5|level6|unspecified}",
      "\t#route_control_profiles: ${18:}",
      "\t#state: ${19:absent|#present|query}",
      "\t#tenant: ${20:}",
      "\t#timeout: ${21:}",
      "\t#use_proxy: ${22:}",
      "\t#use_ssl: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "aci_l3out_extepg_to_contract": {
    "prefix": "aci_l3out_extepg_to_contract",
    "description": "Bind Contracts to External End Point Groups (EPGs)",
    "body": [
      "cisco.aci.aci_l3out_extepg_to_contract:",
      "\tcontract_type: ${1:consumer|provider}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#contract: ${4:}",
      "\t#extepg: ${5:}",
      "\t#host: ${6:}",
      "\t#l3out: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#priority: ${12:level1|level2|level3|unspecified}",
      "\t#private_key: ${13:}",
      "\t#provider_match: ${14:all|at_least_one|at_most_one|none}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_l3out_extsubnet": {
    "prefix": "aci_l3out_extsubnet",
    "description": "Manage External Subnet objects (l3extSubnet:extsubnet)",
    "body": [
      "cisco.aci.aci_l3out_extsubnet:",
      "\textepg: ${1:}",
      "\tl3out: ${2:}",
      "\ttenant: ${3:}",
      "\t#aggregate: ${4:export-rtctrl|import-rtctrl|shared-rtctrl}",
      "\t#annotation: ${5:orchestrator:ansible}",
      "\t#certificate_name: ${6:}",
      "\t#description: ${7:}",
      "\t#host: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#network: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#scope: ${16:export-rtctrl|import-rtctrl|import-security|shared-rtctrl|shared-security}",
      "\t#state: ${17:absent|#present|query}",
      "\t#subnet_name: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_l3out_interface": {
    "prefix": "aci_l3out_interface",
    "description": "Manage Layer 3 Outside (L3Out) interfaces (l3ext:RsPathL3OutAtt)",
    "body": [
      "cisco.aci.aci_l3out_interface:",
      "\tinterface_profile: ${1:}",
      "\tl3out: ${2:}",
      "\tnode_profile: ${3:}",
      "\ttenant: ${4:}",
      "\t#address: ${5:}",
      "\t#annotation: ${6:orchestrator:ansible}",
      "\t#auto_state: ${7:enabled|disabled}",
      "\t#certificate_name: ${8:}",
      "\t#encap: ${9:}",
      "\t#host: ${10:}",
      "\t#interface_type: ${11:l3-port|sub-interface|ext-svi}",
      "\t#ipv6_dad: ${12:enabled|disabled}",
      "\t#mode: ${13:regular|native|untagged}",
      "\t#mtu: ${14:}",
      "\t#node_id: ${15:}",
      "\t#output_level: ${16:debug|info|#normal}",
      "\t#output_path: ${17:}",
      "\t#password: ${18:}",
      "\t#path_ep: ${19:}",
      "\t#pod_id: ${20:}",
      "\t#port: ${21:}",
      "\t#private_key: ${22:}",
      "\t#state: ${23:absent|#present|query}",
      "\t#timeout: ${24:}",
      "\t#use_proxy: ${25:}",
      "\t#use_ssl: ${26:}",
      "\t#username: ${27:}",
      "\t#validate_certs: ${28:}"
    ]
  },
  "aci_l3out_interface_secondary_ip": {
    "prefix": "aci_l3out_interface_secondary_ip",
    "description": "Manage Layer 3 Outside (L3Out) interface secondary IP addresses (l3ext:Ip).",
    "body": [
      "cisco.aci.aci_l3out_interface_secondary_ip:",
      "\t#address: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#host: ${4:}",
      "\t#interface_profile: ${5:}",
      "\t#ipv6_dad: ${6:enabled|disabled}",
      "\t#l3out: ${7:}",
      "\t#node_id: ${8:}",
      "\t#node_profile: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#password: ${12:}",
      "\t#path_ep: ${13:}",
      "\t#pod_id: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#side: ${17:A|B}",
      "\t#state: ${18:absent|#present|query}",
      "\t#tenant: ${19:}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_l3out_logical_interface_profile": {
    "prefix": "aci_l3out_logical_interface_profile",
    "description": "Manage Layer 3 Outside (L3Out) logical interface profiles (l3ext:LIfP)",
    "body": [
      "cisco.aci.aci_l3out_logical_interface_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#egress_dpp_policy: ${4:\"\"}",
      "\t#host: ${5:}",
      "\t#ingress_dpp_policy: ${6:\"\"}",
      "\t#interface_profile: ${7:}",
      "\t#l3out: ${8:}",
      "\t#nd_policy: ${9:\"\"}",
      "\t#node_profile: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#owner_key: ${13:}",
      "\t#owner_tag: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#private_key: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#tenant: ${19:}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_l3out_logical_interface_profile_ospf_policy": {
    "prefix": "aci_l3out_logical_interface_profile_ospf_policy",
    "description": "Manage Layer 3 Outside (L3Out) logical interface profile (l3ext:LIfP) OSPF policy (ospfIfP)",
    "body": [
      "cisco.aci.aci_l3out_logical_interface_profile_ospf_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#interface_profile: ${4:}",
      "\t#l3out: ${5:}",
      "\t#node_profile: ${6:}",
      "\t#ospf_auth_key: ${7:}",
      "\t#ospf_auth_type: ${8:default|simple|md5}",
      "\t#ospf_policy: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_l3out_logical_interface_vpc_member": {
    "prefix": "aci_l3out_logical_interface_vpc_member",
    "description": "Manage Member Node objects (l3ext:Member)",
    "body": [
      "cisco.aci.aci_l3out_logical_interface_vpc_member:",
      "\t#address: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#interface_profile: ${6:}",
      "\t#ipv6_dad: ${7:enabled|disabled}",
      "\t#l3out: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#node_id: ${10:}",
      "\t#node_profile: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#path_dn: ${15:}",
      "\t#path_ep: ${16:}",
      "\t#pod_id: ${17:}",
      "\t#port: ${18:}",
      "\t#private_key: ${19:}",
      "\t#side: ${20:A|B}",
      "\t#state: ${21:absent|#present|query}",
      "\t#tenant: ${22:}",
      "\t#timeout: ${23:}",
      "\t#use_proxy: ${24:}",
      "\t#use_ssl: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}"
    ]
  },
  "aci_l3out_logical_node": {
    "prefix": "aci_l3out_logical_node",
    "description": "Manage Layer 3 Outside (L3Out) logical node profile nodes (l3ext:RsNodeL3OutAtt)",
    "body": [
      "cisco.aci.aci_l3out_logical_node:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#l3out: ${4:}",
      "\t#loopback_address: ${5:}",
      "\t#node_id: ${6:}",
      "\t#node_profile: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#pod_id: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#router_id: ${14:}",
      "\t#router_id_as_loopback: ${15:#yes|no}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_l3out_logical_node_profile": {
    "prefix": "aci_l3out_logical_node_profile",
    "description": "Manage Layer 3 Outside (L3Out) logical node profiles (l3ext:LNodeP)",
    "body": [
      "cisco.aci.aci_l3out_logical_node_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#dscp: ${4:AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified}",
      "\t#host: ${5:}",
      "\t#l3out: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#node_profile: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_l3out_route_tag_policy": {
    "prefix": "aci_l3out_route_tag_policy",
    "description": "Manage route tag policies (l3ext:RouteTagPol)",
    "body": [
      "cisco.aci.aci_l3out_route_tag_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#rtp: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#tag: ${15:}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_l3out_static_routes": {
    "prefix": "aci_l3out_static_routes",
    "description": "Manage Static routes object (l3ext:ipRouteP)",
    "body": [
      "cisco.aci.aci_l3out_static_routes:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bfd: ${2:bfd|unspecified}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#l3out: ${6:}",
      "\t#logical_node: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#node_id: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#password: ${12:}",
      "\t#pod_id: ${13:}",
      "\t#port: ${14:}",
      "\t#preference: ${15:}",
      "\t#prefix: ${16:}",
      "\t#private_key: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#tenant: ${19:}",
      "\t#timeout: ${20:}",
      "\t#track_policy: ${21:}",
      "\t#use_proxy: ${22:}",
      "\t#use_ssl: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "aci_l3out_static_routes_nexthop": {
    "prefix": "aci_l3out_static_routes_nexthop",
    "description": "Manage nexthops for static routes (ip:NexthopP)",
    "body": [
      "cisco.aci.aci_l3out_static_routes_nexthop:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#l3out: ${4:}",
      "\t#nexthop: ${5:}",
      "\t#node_id: ${6:}",
      "\t#node_profile: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#pod_id: ${11:}",
      "\t#port: ${12:}",
      "\t#prefix: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_maintenance_group": {
    "prefix": "aci_maintenance_group",
    "description": "This creates an ACI maintenance group (maint:MaintGrp)",
    "body": [
      "cisco.aci.aci_maintenance_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#firmware_nodes_type: ${4:c_apic_patch|catalog|config|controller|controller_patch|plugin|plugin_package|switch|switch_patch|vpod}",
      "\t#group: ${5:}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#policy: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#type_group: ${18:all|all_in_pod|range}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_maintenance_group_node": {
    "prefix": "aci_maintenance_group_node",
    "description": "Manage maintenance group nodes (fabric:NodeBlk)",
    "body": [
      "cisco.aci.aci_maintenance_group_node:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#group: ${3:}",
      "\t#host: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#node: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_maintenance_policy": {
    "prefix": "aci_maintenance_policy",
    "description": "Manage firmware maintenance policies (maint:MaintP)",
    "body": [
      "cisco.aci.aci_maintenance_policy:",
      "\t#admin_state: ${1:triggered|untriggered}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#download_state: ${5:triggered|untriggered}",
      "\t#graceful: ${6:}",
      "\t#host: ${7:}",
      "\t#ignore_compat: ${8:}",
      "\t#name: ${9:}",
      "\t#name_alias: ${10:}",
      "\t#notify_condition: ${11:notify_always_between_sets|notify_never|notify_only_on_failures}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#run_mode: ${17:pause_always_between_sets|pause_only_on_failures|pause_never|pauseOnlyOnFailures|pauseNever}",
      "\t#scheduler: ${18:}",
      "\t#smu_operation: ${19:smu_install|smu_uninstall}",
      "\t#smu_operation_flags: ${20:smu_reload_immediate|smu_reload_skip}",
      "\t#sr_upgrade: ${21:}",
      "\t#sr_version: ${22:}",
      "\t#state: ${23:absent|#present|query}",
      "\t#timeout: ${24:}",
      "\t#use_proxy: ${25:}",
      "\t#use_ssl: ${26:}",
      "\t#username: ${27:}",
      "\t#validate_certs: ${28:}",
      "\t#version: ${29:}",
      "\t#version_check_override: ${30:trigger|trigger_immediate|triggered|untriggered}"
    ]
  },
  "aci_match_as_path_regex_term": {
    "prefix": "aci_match_as_path_regex_term",
    "description": "Manage Match Regular Expression AS-Path Term (rtctrl:MatchAsPathRegexTerm)",
    "body": [
      "cisco.aci.aci_match_as_path_regex_term:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#match_as_path_regex_term: ${5:}",
      "\t#match_rule: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#regex: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_match_community_factor": {
    "prefix": "aci_match_community_factor",
    "description": "Manage Match Community Factor (rtctrl:MatchCommFactor)",
    "body": [
      "cisco.aci.aci_match_community_factor:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#community: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#match_community_term: ${6:}",
      "\t#match_rule: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#scope: ${16:transitive|non-transitive}",
      "\t#state: ${17:absent|#present|query}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_match_community_regex_term": {
    "prefix": "aci_match_community_regex_term",
    "description": "Manage Match Regular Expression Community Term (rtctrl:MatchCommRegexTerm)",
    "body": [
      "cisco.aci.aci_match_community_regex_term:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#community_type: ${3:extended|#regular}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#match_community_regex_term: ${6:}",
      "\t#match_rule: ${7:}",
      "\t#name_alias: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#regex: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_match_community_term": {
    "prefix": "aci_match_community_term",
    "description": "Manage Match Community Term (rtctrl:MatchCommTerm)",
    "body": [
      "cisco.aci.aci_match_community_term:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#match_community_term: ${5:}",
      "\t#match_rule: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_match_route_destination": {
    "prefix": "aci_match_route_destination",
    "description": "Manage Match action rule term based on the Route Destination. (rtctrl:MatchRtDest)",
    "body": [
      "cisco.aci.aci_match_route_destination:",
      "\t#aggregate: ${1:no|yes}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#from_prefix_length: ${5:}",
      "\t#host: ${6:}",
      "\t#ip: ${7:}",
      "\t#match_rule: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#to_prefix_length: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_match_rule": {
    "prefix": "aci_match_rule",
    "description": "Manage Match Rule (rtcrtl:SubjP)",
    "body": [
      "cisco.aci.aci_match_rule:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#match_rule: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#tenant: ${15:}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_node_mgmt_epg": {
    "prefix": "aci_node_mgmt_epg",
    "description": "In band or Out of band management EPGs",
    "body": [
      "cisco.aci.aci_node_mgmt_epg:",
      "\ttype: ${1:in_band|out_of_band}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#bd: ${3:}",
      "\t#certificate_name: ${4:}",
      "\t#encap: ${5:}",
      "\t#epg: ${6:}",
      "\t#host: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_ntp_policy": {
    "prefix": "aci_ntp_policy",
    "description": "Manage NTP policies.",
    "body": [
      "cisco.aci.aci_ntp_policy:",
      "\t#admin_state: ${1:disabled|enabled}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#auth_state: ${3:disabled|enabled}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#master_mode: ${7:disabled|enabled}",
      "\t#name: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#server_state: ${16:disabled|enabled}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_ntp_server": {
    "prefix": "aci_ntp_server",
    "description": "Manage NTP servers.",
    "body": [
      "cisco.aci.aci_ntp_server:",
      "\tntp_policy: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#epg_name: ${5:}",
      "\t#epg_type: ${6:inb|oob}",
      "\t#host: ${7:}",
      "\t#max_poll: ${8:}",
      "\t#min_poll: ${9:}",
      "\t#ntp_server: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#owner_key: ${13:}",
      "\t#owner_tag: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#preferred: ${17:}",
      "\t#private_key: ${18:}",
      "\t#state: ${19:absent|#present|query}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_rest": {
    "prefix": "aci_rest",
    "description": "Direct access to the Cisco APIC REST API",
    "body": [
      "cisco.aci.aci_rest:",
      "\tpath: ${1:}",
      "\t#certificate_name: ${2:}",
      "\t#content: ${3:}",
      "\t#host: ${4:}",
      "\t#method: ${5:delete|#get|post}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#rsp_subtree_preserve: ${11:false}",
      "\t#src: ${12:}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_route_control_context": {
    "prefix": "aci_route_control_context",
    "description": "Manage Route Control Context (rtcrtl:CtxP)",
    "body": [
      "cisco.aci.aci_route_control_context:",
      "\t#action: ${1:deny|permit}",
      "\t#action_rule: ${2:}",
      "\t#annotation: ${3:orchestrator:ansible}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#l3out: ${7:}",
      "\t#match_rule: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#order: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#owner_key: ${13:}",
      "\t#owner_tag: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#private_key: ${17:}",
      "\t#route_control_context: ${18:}",
      "\t#route_control_profile: ${19:}",
      "\t#state: ${20:absent|#present|query}",
      "\t#tenant: ${21:}",
      "\t#timeout: ${22:}",
      "\t#use_proxy: ${23:}",
      "\t#use_ssl: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}"
    ]
  },
  "aci_route_control_profile": {
    "prefix": "aci_route_control_profile",
    "description": "Manage Route Control Profile (rtcrtl:Profile)",
    "body": [
      "cisco.aci.aci_route_control_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#auto_continue: ${2:#no|yes}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#l3out: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#policy_type: ${13:#combinable|global}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#route_control_profile: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_snmp_client": {
    "prefix": "aci_snmp_client",
    "description": "Manage SNMP clients (snmp:ClientP).",
    "body": [
      "cisco.aci.aci_snmp_client:",
      "\t#address: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#client_group: ${4:}",
      "\t#client_name: ${5:}",
      "\t#host: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#policy: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_snmp_client_group": {
    "prefix": "aci_snmp_client_group",
    "description": "Manage SNMP client groups (snmp:ClientGrpP).",
    "body": [
      "cisco.aci.aci_snmp_client_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#client_group: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#mgmt_epg: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#policy: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_snmp_community_policy": {
    "prefix": "aci_snmp_community_policy",
    "description": "Manage SNMP community policies (snmp:CommunityP).",
    "body": [
      "cisco.aci.aci_snmp_community_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#community: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#policy: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_snmp_policy": {
    "prefix": "aci_snmp_policy",
    "description": "Manage Syslog groups (snmp:Pol).",
    "body": [
      "cisco.aci.aci_snmp_policy:",
      "\t#admin_state: ${1:enabled|disabled}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#contact: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#location: ${7:}",
      "\t#name: ${8:}",
      "\t#output_level: ${9:debug|info|#normal}",
      "\t#output_path: ${10:}",
      "\t#owner_key: ${11:}",
      "\t#owner_tag: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_snmp_user": {
    "prefix": "aci_snmp_user",
    "description": "Manage SNMP v3 Users (snmp:UserP).",
    "body": [
      "cisco.aci.aci_snmp_user:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#auth_key: ${2:}",
      "\t#auth_type: ${3:hmac-md5-96|hmac-sha1-96|hmac-sha2-224|hmac-sha2-256|hmac-sha2-384|hmac-sha2-512}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#host: ${6:}",
      "\t#name: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#policy: ${11:}",
      "\t#port: ${12:}",
      "\t#privacy_key: ${13:}",
      "\t#privacy_type: ${14:aes-128|des|none}",
      "\t#private_key: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_static_binding_to_epg": {
    "prefix": "aci_static_binding_to_epg",
    "description": "Bind static paths to EPGs (fv:RsPathAtt)",
    "body": [
      "cisco.aci.aci_static_binding_to_epg:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#ap: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#deploy_immediacy: ${4:immediate|lazy}",
      "\t#description: ${5:}",
      "\t#encap_id: ${6:}",
      "\t#epg: ${7:}",
      "\t#extpaths: ${8:}",
      "\t#host: ${9:}",
      "\t#interface: ${10:}",
      "\t#interface_mode: ${11:802.1p|access|native|regular|tagged|trunk|untagged}",
      "\t#interface_type: ${12:fex|port_channel|#switch_port|vpc|fex_port_channel|fex_vpc}",
      "\t#leafs: ${13:}",
      "\t#output_level: ${14:debug|info|#normal}",
      "\t#output_path: ${15:}",
      "\t#password: ${16:}",
      "\t#pod_id: ${17:}",
      "\t#port: ${18:}",
      "\t#primary_encap_id: ${19:}",
      "\t#private_key: ${20:}",
      "\t#state: ${21:absent|#present|query}",
      "\t#tenant: ${22:}",
      "\t#timeout: ${23:}",
      "\t#use_proxy: ${24:}",
      "\t#use_ssl: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}"
    ]
  },
  "aci_static_node_mgmt_address": {
    "prefix": "aci_static_node_mgmt_address",
    "description": "In band or Out of band management IP address",
    "body": [
      "cisco.aci.aci_static_node_mgmt_address:",
      "\ttype: ${1:in_band|out_of_band}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#epg: ${4:}",
      "\t#host: ${5:}",
      "\t#ipv4_address: ${6:}",
      "\t#ipv4_gw: ${7:}",
      "\t#ipv6_address: ${8:}",
      "\t#ipv6_gw: ${9:}",
      "\t#node_id: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#password: ${13:}",
      "\t#pod_id: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_switch_leaf_selector": {
    "prefix": "aci_switch_leaf_selector",
    "description": "Bind leaf selectors to switch policy leaf profiles (infra:LeafS, infra:NodeBlk, infra:RsAccNodePGrep)",
    "body": [
      "cisco.aci.aci_switch_leaf_selector:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#from: ${4:}",
      "\t#host: ${5:}",
      "\t#leaf: ${6:}",
      "\t#leaf_node_blk: ${7:}",
      "\t#leaf_node_blk_description: ${8:}",
      "\t#leaf_profile: ${9:}",
      "\t#name_alias: ${10:}",
      "\t#output_level: ${11:debug|info|#normal}",
      "\t#output_path: ${12:}",
      "\t#owner_key: ${13:}",
      "\t#owner_tag: ${14:}",
      "\t#password: ${15:}",
      "\t#policy_group: ${16:}",
      "\t#port: ${17:}",
      "\t#private_key: ${18:}",
      "\t#state: ${19:absent|#present|query}",
      "\t#timeout: ${20:}",
      "\t#to: ${21:}",
      "\t#use_proxy: ${22:}",
      "\t#use_ssl: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "aci_switch_policy_leaf_profile": {
    "prefix": "aci_switch_policy_leaf_profile",
    "description": "Manage switch policy leaf profiles (infra:NodeP)",
    "body": [
      "cisco.aci.aci_switch_policy_leaf_profile:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#leaf_profile: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_switch_policy_vpc_protection_group": {
    "prefix": "aci_switch_policy_vpc_protection_group",
    "description": "Manage switch policy explicit vPC protection groups (fabric:ExplicitGEp, fabric:NodePEp).",
    "body": [
      "cisco.aci.aci_switch_policy_vpc_protection_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#host: ${3:}",
      "\t#name_alias: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:}",
      "\t#private_key: ${9:}",
      "\t#protection_group: ${10:}",
      "\t#protection_group_id: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#switch_1_id: ${13:}",
      "\t#switch_2_id: ${14:}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}",
      "\t#vpc_domain_policy: ${20:}"
    ]
  },
  "aci_syslog_group": {
    "prefix": "aci_syslog_group",
    "description": "Manage Syslog groups (syslog:Group, syslog:Console, syslog:File and syslog:Prof).",
    "body": [
      "cisco.aci.aci_syslog_group:",
      "\t#admin_state: ${1:enabled|disabled}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#console_log_severity: ${4:alerts|critical|debugging|emergencies|error|information|notifications|warnings}",
      "\t#console_logging: ${5:enabled|disabled}",
      "\t#format: ${6:aci|nxos}",
      "\t#host: ${7:}",
      "\t#include_ms: ${8:}",
      "\t#include_time_zone: ${9:}",
      "\t#local_file_log_severity: ${10:alerts|critical|debugging|emergencies|error|information|notifications|warnings}",
      "\t#local_file_logging: ${11:enabled|disabled}",
      "\t#name: ${12:}",
      "\t#output_level: ${13:debug|info|#normal}",
      "\t#output_path: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:}",
      "\t#private_key: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_syslog_remote_dest": {
    "prefix": "aci_syslog_remote_dest",
    "description": "Manage Syslog Remote Destinations (syslog:RemoteDest).",
    "body": [
      "cisco.aci.aci_syslog_remote_dest:",
      "\t#admin_state: ${1:enabled|disabled}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#destination: ${5:}",
      "\t#facility: ${6:local0|local1|local2|local3|local4|local5|local6|local7}",
      "\t#format: ${7:aci|nxos}",
      "\t#group: ${8:}",
      "\t#host: ${9:}",
      "\t#mgmt_epg: ${10:}",
      "\t#name: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#severity: ${17:alerts|critical|debugging|emergencies|error|information|notifications|warnings}",
      "\t#state: ${18:absent|#present|query}",
      "\t#syslog_port: ${19:}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_syslog_source": {
    "prefix": "aci_syslog_source",
    "description": "Manage Syslog Source objects (syslog:Src)",
    "body": [
      "cisco.aci.aci_syslog_source:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#destination_group: ${3:}",
      "\t#host: ${4:}",
      "\t#include: ${5:audit|events|faults|session}",
      "\t#min_severity: ${6:alerts|critical|debugging|emergencies|errors|information|notifications|warnings}",
      "\t#name: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_system": {
    "prefix": "aci_system",
    "description": "Query the ACI system information (top:System)",
    "body": [
      "cisco.aci.aci_system:",
      "\t#certificate_name: ${1:}",
      "\t#host: ${2:}",
      "\t#id: ${3:}",
      "\t#output_level: ${4:debug|info|#normal}",
      "\t#output_path: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:}",
      "\t#private_key: ${8:}",
      "\t#state: ${9:#query}",
      "\t#timeout: ${10:}",
      "\t#use_proxy: ${11:}",
      "\t#use_ssl: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:}"
    ]
  },
  "aci_system_banner": {
    "prefix": "aci_system_banner",
    "description": "Manages Alias and Banners (aaa:PreLoginBanner)",
    "body": [
      "cisco.aci.aci_system_banner:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#application_banner: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#controller_banner: ${4:}",
      "\t#description: ${5:}",
      "\t#gui_alias: ${6:}",
      "\t#gui_banner: ${7:}",
      "\t#host: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#severity: ${17:critical|info|major|minor|warning}",
      "\t#state: ${18:#present|query}",
      "\t#switch_banner: ${19:}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "aci_system_endpoint_controls": {
    "prefix": "aci_system_endpoint_controls",
    "description": "Manage System Endpoint Controls (ep:IpAgingP, ep:ControlP, and ep:LoopProtectP)",
    "body": [
      "cisco.aci.aci_system_endpoint_controls:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#ep_loop_protection: ${3:}",
      "\t#host: ${4:}",
      "\t#ip_aging: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#roque_ep_control: ${13:}",
      "\t#state: ${14:#present|query}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_system_global_aes_passphrase_encryption": {
    "prefix": "aci_system_global_aes_passphrase_encryption",
    "description": "Manage Global AES Passphrase Encryption Settings (pki:ExportEncryptionKey)",
    "body": [
      "cisco.aci.aci_system_global_aes_passphrase_encryption:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#enable: ${3:}",
      "\t#host: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#owner_key: ${7:}",
      "\t#owner_tag: ${8:}",
      "\t#passphrase: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_taboo_contract": {
    "prefix": "aci_taboo_contract",
    "description": "Manage taboo contracts (vz:BrCP)",
    "body": [
      "cisco.aci.aci_taboo_contract:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#scope: ${13:application-profile|context|global|tenant}",
      "\t#state: ${14:absent|#present|query}",
      "\t#taboo_contract: ${15:}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_tag": {
    "prefix": "aci_tag",
    "description": "Tagging of ACI objects",
    "body": [
      "cisco.aci.aci_tag:",
      "\ttag_type: ${1:annotation|instance|tag}",
      "\t#certificate_name: ${2:}",
      "\t#dn: ${3:}",
      "\t#host: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:}",
      "\t#private_key: ${9:}",
      "\t#state: ${10:absent|#present|query}",
      "\t#tag_key: ${11:}",
      "\t#tag_value: ${12:\"\"}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_tenant": {
    "prefix": "aci_tenant",
    "description": "Manage tenants (fv:Tenant)",
    "body": [
      "cisco.aci.aci_tenant:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:}",
      "\t#private_key: ${12:}",
      "\t#state: ${13:absent|#present|query}",
      "\t#tenant: ${14:}",
      "\t#timeout: ${15:}",
      "\t#use_proxy: ${16:}",
      "\t#use_ssl: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "aci_tenant_action_rule_profile": {
    "prefix": "aci_tenant_action_rule_profile",
    "description": "Manage action rule profiles (rtctrl:AttrP)",
    "body": [
      "cisco.aci.aci_tenant_action_rule_profile:",
      "\t#action_rule: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#host: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:}",
      "\t#private_key: ${11:}",
      "\t#state: ${12:absent|#present|query}",
      "\t#tenant: ${13:}",
      "\t#timeout: ${14:}",
      "\t#use_proxy: ${15:}",
      "\t#use_ssl: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:}"
    ]
  },
  "aci_tenant_ep_retention_policy": {
    "prefix": "aci_tenant_ep_retention_policy",
    "description": "Manage End Point (EP) retention protocol policies (fv:EpRetPol)",
    "body": [
      "cisco.aci.aci_tenant_ep_retention_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#bounce_age: ${2:}",
      "\t#bounce_trigger: ${3:coop|flood}",
      "\t#certificate_name: ${4:}",
      "\t#description: ${5:}",
      "\t#epr_policy: ${6:}",
      "\t#hold_interval: ${7:}",
      "\t#host: ${8:}",
      "\t#local_ep_interval: ${9:}",
      "\t#move_frequency: ${10:}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#owner_key: ${14:}",
      "\t#owner_tag: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:}",
      "\t#private_key: ${18:}",
      "\t#remote_ep_interval: ${19:}",
      "\t#state: ${20:absent|#present|query}",
      "\t#tenant: ${21:}",
      "\t#timeout: ${22:}",
      "\t#use_proxy: ${23:}",
      "\t#use_ssl: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}"
    ]
  },
  "aci_tenant_span_dst_group": {
    "prefix": "aci_tenant_span_dst_group",
    "description": "Manage SPAN destination groups (span:DestGrp)",
    "body": [
      "cisco.aci.aci_tenant_span_dst_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#destination_epg: ${4:}",
      "\t#destination_group: ${5:}",
      "\t#destination_ip: ${6:}",
      "\t#dscp: ${7:CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|unspecified}",
      "\t#flow_id: ${8:}",
      "\t#host: ${9:}",
      "\t#mtu: ${10:}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#owner_key: ${14:}",
      "\t#owner_tag: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:}",
      "\t#private_key: ${18:}",
      "\t#source_ip: ${19:}",
      "\t#span_version: ${20:version_1|version_2}",
      "\t#state: ${21:absent|#present|query}",
      "\t#tenant: ${22:}",
      "\t#timeout: ${23:}",
      "\t#ttl: ${24:}",
      "\t#use_proxy: ${25:}",
      "\t#use_ssl: ${26:}",
      "\t#username: ${27:}",
      "\t#validate_certs: ${28:}",
      "\t#version_enforced: ${29:}"
    ]
  },
  "aci_tenant_span_src_group": {
    "prefix": "aci_tenant_span_src_group",
    "description": "Manage SPAN source groups (span:SrcGrp)",
    "body": [
      "cisco.aci.aci_tenant_span_src_group:",
      "\t#admin_state: ${1:}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#description: ${4:}",
      "\t#dst_group: ${5:}",
      "\t#host: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#src_group: ${15:}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_tenant_span_src_group_src": {
    "prefix": "aci_tenant_span_src_group_src",
    "description": "Manage SPAN source group sources (span:Src)",
    "body": [
      "cisco.aci.aci_tenant_span_src_group_src:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#direction: ${4:incoming|outgoing|both}",
      "\t#host: ${5:}",
      "\t#name: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#src_ap: ${14:}",
      "\t#src_epg: ${15:}",
      "\t#src_group: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#tenant: ${18:}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}"
    ]
  },
  "aci_tenant_span_src_group_to_dst_group": {
    "prefix": "aci_tenant_span_src_group_to_dst_group",
    "description": "Bind SPAN source groups to destination groups (span:SpanLbl)",
    "body": [
      "cisco.aci.aci_tenant_span_src_group_to_dst_group:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#dst_group: ${4:}",
      "\t#host: ${5:}",
      "\t#name_alias: ${6:}",
      "\t#output_level: ${7:debug|info|#normal}",
      "\t#output_path: ${8:}",
      "\t#owner_key: ${9:}",
      "\t#owner_tag: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:}",
      "\t#private_key: ${13:}",
      "\t#src_group: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#tenant: ${16:}",
      "\t#timeout: ${17:}",
      "\t#use_proxy: ${18:}",
      "\t#use_ssl: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "aci_vlan_pool": {
    "prefix": "aci_vlan_pool",
    "description": "Manage VLAN pools (fvns:VlanInstP)",
    "body": [
      "cisco.aci.aci_vlan_pool:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#name_alias: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#owner_key: ${8:}",
      "\t#owner_tag: ${9:}",
      "\t#password: ${10:}",
      "\t#pool: ${11:}",
      "\t#pool_allocation_mode: ${12:dynamic|static}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#state: ${15:absent|#present|query}",
      "\t#timeout: ${16:}",
      "\t#use_proxy: ${17:}",
      "\t#use_ssl: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "aci_vlan_pool_encap_block": {
    "prefix": "aci_vlan_pool_encap_block",
    "description": "Manage encap blocks assigned to VLAN pools (fvns:EncapBlk)",
    "body": [
      "cisco.aci.aci_vlan_pool_encap_block:",
      "\t#allocation_mode: ${1:dynamic|inherit|static}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#block_end: ${3:}",
      "\t#block_name: ${4:}",
      "\t#block_start: ${5:}",
      "\t#certificate_name: ${6:}",
      "\t#description: ${7:}",
      "\t#host: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#password: ${12:}",
      "\t#pool: ${13:}",
      "\t#pool_allocation_mode: ${14:dynamic|static}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "aci_vmm_controller": {
    "prefix": "aci_vmm_controller",
    "description": "Manage VMM Controller for virtual domains profiles (vmm:CtrlrP)",
    "body": [
      "cisco.aci.aci_vmm_controller:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#controller_hostname: ${3:}",
      "\t#credentials: ${4:}",
      "\t#datacenter: ${5:}",
      "\t#domain: ${6:}",
      "\t#dvs_version: ${7:unmanaged|5.1|5.5|6.0|6.5|6.6|7.0|8.0}",
      "\t#host: ${8:}",
      "\t#inband_management_epg: ${9:}",
      "\t#name: ${10:}",
      "\t#name_alias: ${11:}",
      "\t#output_level: ${12:debug|info|#normal}",
      "\t#output_path: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#stats_collection: ${18:enabled|#disabled}",
      "\t#timeout: ${19:}",
      "\t#use_proxy: ${20:}",
      "\t#use_ssl: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:}",
      "\t#vm_provider: ${24:cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware}"
    ]
  },
  "aci_vmm_credential": {
    "prefix": "aci_vmm_credential",
    "description": "Manage virtual domain credential profiles (vmm:UsrAccP)",
    "body": [
      "cisco.aci.aci_vmm_credential:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#credential_password: ${3:}",
      "\t#credential_username: ${4:}",
      "\t#description: ${5:}",
      "\t#domain: ${6:}",
      "\t#host: ${7:}",
      "\t#name: ${8:}",
      "\t#name_alias: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#private_key: ${16:}",
      "\t#state: ${17:absent|#present|query}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}",
      "\t#vm_provider: ${23:cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware}"
    ]
  },
  "aci_vmm_uplink": {
    "prefix": "aci_vmm_uplink",
    "description": "Manage VMM uplinks (vmm:UplinkP)",
    "body": [
      "cisco.aci.aci_vmm_uplink:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#domain: ${3:}",
      "\t#host: ${4:}",
      "\t#output_level: ${5:debug|info|#normal}",
      "\t#output_path: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:}",
      "\t#private_key: ${9:}",
      "\t#state: ${10:absent|#present|query}",
      "\t#timeout: ${11:}",
      "\t#uplink_id: ${12:}",
      "\t#uplink_name: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "aci_vmm_uplink_container": {
    "prefix": "aci_vmm_uplink_container",
    "description": "Manage VMM uplink containers (vmm:UplinkPCont)",
    "body": [
      "cisco.aci.aci_vmm_uplink_container:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#domain: ${3:}",
      "\t#host: ${4:}",
      "\t#num_of_uplinks: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#state: ${11:absent|#present|query}",
      "\t#timeout: ${12:}",
      "\t#use_proxy: ${13:}",
      "\t#use_ssl: ${14:}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:}"
    ]
  },
  "aci_vmm_vswitch_policy": {
    "prefix": "aci_vmm_vswitch_policy",
    "description": "Manage vSwitch policy for VMware virtual domains profiles (vmm:DomP)",
    "body": [
      "cisco.aci.aci_vmm_vswitch_policy:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#cdp_policy: ${2:}",
      "\t#certificate_name: ${3:}",
      "\t#domain: ${4:}",
      "\t#enhanced_lag: ${5:}",
      "\t#host: ${6:}",
      "\t#lldp_policy: ${7:}",
      "\t#mtu_policy: ${8:}",
      "\t#netflow_exporter: ${9:}",
      "\t#output_level: ${10:debug|info|#normal}",
      "\t#output_path: ${11:}",
      "\t#owner_key: ${12:}",
      "\t#owner_tag: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#port_channel_policy: ${16:}",
      "\t#private_key: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#stp_policy: ${19:}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}",
      "\t#vm_provider: ${25:cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware}"
    ]
  },
  "aci_vrf": {
    "prefix": "aci_vrf",
    "description": "Manage contexts or VRFs (fv:Ctx)",
    "body": [
      "cisco.aci.aci_vrf:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#ip_data_plane_learning: ${5:enabled|disabled}",
      "\t#match_type: ${6:all|at_least_one|at_most_one|none}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#policy_control_direction: ${13:egress|ingress}",
      "\t#policy_control_preference: ${14:enforced|unenforced}",
      "\t#port: ${15:}",
      "\t#preferred_group: ${16:enabled|disabled}",
      "\t#private_key: ${17:}",
      "\t#state: ${18:absent|#present|query}",
      "\t#tenant: ${19:}",
      "\t#timeout: ${20:}",
      "\t#use_proxy: ${21:}",
      "\t#use_ssl: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}",
      "\t#vrf: ${25:}"
    ]
  },
  "aci_vrf_leak_internal_subnet": {
    "prefix": "aci_vrf_leak_internal_subnet",
    "description": "Manage VRF leaking of subnets (fv:leakInternalSubnet)",
    "body": [
      "cisco.aci.aci_vrf_leak_internal_subnet:",
      "\t#annotation: ${1:orchestrator:ansible}",
      "\t#certificate_name: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#ip: ${5:}",
      "\t#leak_to: ${6:}",
      "\t#name_alias: ${7:}",
      "\t#output_level: ${8:debug|info|#normal}",
      "\t#output_path: ${9:}",
      "\t#owner_key: ${10:}",
      "\t#owner_tag: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#private_key: ${14:}",
      "\t#scope: ${15:public|#private|shared}",
      "\t#state: ${16:absent|#present|query}",
      "\t#tenant: ${17:}",
      "\t#timeout: ${18:}",
      "\t#use_proxy: ${19:}",
      "\t#use_ssl: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}",
      "\t#vrf: ${23:}"
    ]
  },
  "aci_vzany_to_contract": {
    "prefix": "aci_vzany_to_contract",
    "description": "Attach contracts to vzAny (vz:RsAnyToProv, vz:RsAnyToCons, vz:RsAnyToConsIf)",
    "body": [
      "cisco.aci.aci_vzany_to_contract:",
      "\ttype: ${1:provider|consumer|interface}",
      "\t#annotation: ${2:orchestrator:ansible}",
      "\t#certificate_name: ${3:}",
      "\t#contract: ${4:}",
      "\t#host: ${5:}",
      "\t#output_level: ${6:debug|info|#normal}",
      "\t#output_path: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#private_key: ${10:}",
      "\t#state: ${11:absent|#present|query}",
      "\t#tenant: ${12:}",
      "\t#timeout: ${13:}",
      "\t#use_proxy: ${14:}",
      "\t#use_ssl: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}",
      "\t#vrf: ${18:}"
    ]
  },
  "asa_acls": {
    "prefix": "asa_acls",
    "description": "Access-Lists resource module",
    "body": [
      "cisco.asa.asa_acls:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "asa_command": {
    "prefix": "asa_command",
    "description": "Run arbitrary commands on Cisco ASA devices",
    "body": [
      "cisco.asa.asa_command:",
      "\tcommands: ${1:}",
      "\t#context: ${2:}",
      "\t#interval: ${3:1}",
      "\t#match: ${4:any|#all}",
      "\t#passwords: ${5:}",
      "\t#retries: ${6:10}",
      "\t#wait_for: ${7:}"
    ]
  },
  "asa_config": {
    "prefix": "asa_config",
    "description": "Manage configuration sections on Cisco ASA devices",
    "body": [
      "cisco.asa.asa_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#config: ${5:}",
      "\t#context: ${6:}",
      "\t#defaults: ${7:false}",
      "\t#lines: ${8:}",
      "\t#match: ${9:#line|strict|exact|none}",
      "\t#parents: ${10:}",
      "\t#passwords: ${11:}",
      "\t#replace: ${12:#line|block}",
      "\t#save: ${13:false}",
      "\t#save_when: ${14:always|#never|modified|changed}",
      "\t#src: ${15:}"
    ]
  },
  "asa_facts": {
    "prefix": "asa_facts",
    "description": "Collect facts from remote devices running Cisco ASA",
    "body": [
      "cisco.asa.asa_facts:",
      "\t#context: ${1:}",
      "\t#gather_network_resources: ${2:}",
      "\t#gather_subset: ${3:!config}",
      "\t#passwords: ${4:}"
    ]
  },
  "asa_ogs": {
    "prefix": "asa_ogs",
    "description": "Object Group resource module",
    "body": [
      "cisco.asa.asa_ogs:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "accesspoint_configuration_details_by_task_id_info": {
    "prefix": "accesspoint_configuration_details_by_task_id_info",
    "description": "Information module for Accesspoint Configuration Details By Task Id",
    "body": [
      "cisco.dnac.accesspoint_configuration_details_by_task_id_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#task_id: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "app_policy_default_info": {
    "prefix": "app_policy_default_info",
    "description": "Information module for App Policy Default",
    "body": [
      "cisco.dnac.app_policy_default_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "app_policy_info": {
    "prefix": "app_policy_info",
    "description": "Information module for App Policy",
    "body": [
      "cisco.dnac.app_policy_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#policyScope: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "app_policy_intent_create": {
    "prefix": "app_policy_intent_create",
    "description": "Resource module for App Policy Intent Create",
    "body": [
      "cisco.dnac.app_policy_intent_create:",
      "\tdnac_host: ${1:}",
      "\t#createList: ${2:}",
      "\t#deleteList: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#updateList: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "app_policy_queuing_profile": {
    "prefix": "app_policy_queuing_profile",
    "description": "Resource module for App Policy Queuing Profile",
    "body": [
      "cisco.dnac.app_policy_queuing_profile:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "app_policy_queuing_profile_count_info": {
    "prefix": "app_policy_queuing_profile_count_info",
    "description": "Information module for App Policy Queuing Profile Count",
    "body": [
      "cisco.dnac.app_policy_queuing_profile_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "app_policy_queuing_profile_info": {
    "prefix": "app_policy_queuing_profile_info",
    "description": "Information module for App Policy Queuing Profile",
    "body": [
      "cisco.dnac.app_policy_queuing_profile_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#name: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "application_sets": {
    "prefix": "application_sets",
    "description": "Resource module for Application Sets",
    "body": [
      "cisco.dnac.application_sets:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "application_sets_count_info": {
    "prefix": "application_sets_count_info",
    "description": "Information module for Application Sets Count",
    "body": [
      "cisco.dnac.application_sets_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "application_sets_info": {
    "prefix": "application_sets_info",
    "description": "Information module for Application Sets",
    "body": [
      "cisco.dnac.application_sets_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#limit: ${9:}",
      "\t#name: ${10:}",
      "\t#offset: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "applications": {
    "prefix": "applications",
    "description": "Resource module for Applications",
    "body": [
      "cisco.dnac.applications:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "applications_count_info": {
    "prefix": "applications_count_info",
    "description": "Information module for Applications Count",
    "body": [
      "cisco.dnac.applications_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "applications_health_info": {
    "prefix": "applications_health_info",
    "description": "Information module for Applications Health",
    "body": [
      "cisco.dnac.applications_health_info:",
      "\tdnac_host: ${1:}",
      "\t#applicationHealth: ${2:}",
      "\t#applicationName: ${3:}",
      "\t#deviceId: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#endTime: ${11:}",
      "\t#headers: ${12:}",
      "\t#limit: ${13:}",
      "\t#macAddress: ${14:}",
      "\t#offset: ${15:}",
      "\t#siteId: ${16:}",
      "\t#startTime: ${17:}",
      "\t#validate_response_schema: ${18:true}"
    ]
  },
  "applications_info": {
    "prefix": "applications_info",
    "description": "Information module for Applications",
    "body": [
      "cisco.dnac.applications_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#limit: ${9:}",
      "\t#name: ${10:}",
      "\t#offset: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "assign_device_to_site": {
    "prefix": "assign_device_to_site",
    "description": "Resource module for Assign Device To Site",
    "body": [
      "cisco.dnac.assign_device_to_site:",
      "\tdnac_host: ${1:}",
      "\t#device: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#siteId: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "associate_site_to_network_profile": {
    "prefix": "associate_site_to_network_profile",
    "description": "Resource module for Associate Site To Network Profile",
    "body": [
      "cisco.dnac.associate_site_to_network_profile:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#networkProfileId: ${8:}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "authentication_import_certificate": {
    "prefix": "authentication_import_certificate",
    "description": "Resource module for Authentication Import Certificate",
    "body": [
      "cisco.dnac.authentication_import_certificate:",
      "\tdnac_host: ${1:}",
      "\t#certFilePath: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#listOfUsers: ${9:}",
      "\t#pkFilePath: ${10:}",
      "\t#pkPassword: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "authentication_import_certificate_p12": {
    "prefix": "authentication_import_certificate_p12",
    "description": "Resource module for Authentication Import Certificate P12",
    "body": [
      "cisco.dnac.authentication_import_certificate_p12:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#listOfUsers: ${8:}",
      "\t#p12FilePath: ${9:}",
      "\t#p12Password: ${10:}",
      "\t#pkPassword: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "authentication_policy_servers_info": {
    "prefix": "authentication_policy_servers_info",
    "description": "Information module for Authentication Policy Servers",
    "body": [
      "cisco.dnac.authentication_policy_servers_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#isIseEnabled: ${9:}",
      "\t#role: ${10:}",
      "\t#state_: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "buildings_planned_access_points_info": {
    "prefix": "buildings_planned_access_points_info",
    "description": "Information module for Buildings Planned Access Points",
    "body": [
      "cisco.dnac.buildings_planned_access_points_info:",
      "\tdnac_host: ${1:}",
      "\t#buildingId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#radios: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "business_sda_hostonboarding_ssid_ippool": {
    "prefix": "business_sda_hostonboarding_ssid_ippool",
    "description": "Resource module for Business Sda Hostonboarding Ssid Ippool",
    "body": [
      "cisco.dnac.business_sda_hostonboarding_ssid_ippool:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#scalableGroupName: ${9:}",
      "\t#siteNameHierarchy: ${10:}",
      "\t#ssidNames: ${11:}",
      "\t#validate_response_schema: ${12:true}",
      "\t#vlanName: ${13:}"
    ]
  },
  "business_sda_hostonboarding_ssid_ippool_info": {
    "prefix": "business_sda_hostonboarding_ssid_ippool_info",
    "description": "Information module for Business Sda Hostonboarding Ssid Ippool",
    "body": [
      "cisco.dnac.business_sda_hostonboarding_ssid_ippool_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}",
      "\t#vlanName: ${11:}"
    ]
  },
  "business_sda_virtual_network_summary_info": {
    "prefix": "business_sda_virtual_network_summary_info",
    "description": "Information module for Business Sda Virtual Network Summary",
    "body": [
      "cisco.dnac.business_sda_virtual_network_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "business_sda_wireless_controller_create": {
    "prefix": "business_sda_wireless_controller_create",
    "description": "Resource module for Business Sda Wireless Controller Create",
    "body": [
      "cisco.dnac.business_sda_wireless_controller_create:",
      "\tdnac_host: ${1:}",
      "\t#deviceName: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "business_sda_wireless_controller_delete": {
    "prefix": "business_sda_wireless_controller_delete",
    "description": "Resource module for Business Sda Wireless Controller Delete",
    "body": [
      "cisco.dnac.business_sda_wireless_controller_delete:",
      "\tdnac_host: ${1:}",
      "\t#deviceIPAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "cli_credential": {
    "prefix": "cli_credential",
    "description": "Resource module for Cli Credential",
    "body": [
      "cisco.dnac.cli_credential:",
      "\tdnac_host: ${1:}",
      "\t#comments: ${2:}",
      "\t#credentialType: ${3:}",
      "\t#description: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#enablePassword: ${11:}",
      "\t#id: ${12:}",
      "\t#instanceTenantId: ${13:}",
      "\t#instanceUuid: ${14:}",
      "\t#password: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_response_schema: ${17:true}"
    ]
  },
  "client_detail_info": {
    "prefix": "client_detail_info",
    "description": "Information module for Client Detail",
    "body": [
      "cisco.dnac.client_detail_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#macAddress: ${9:}",
      "\t#timestamp: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "client_enrichment_details_info": {
    "prefix": "client_enrichment_details_info",
    "description": "Information module for Client Enrichment Details",
    "body": [
      "cisco.dnac.client_enrichment_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "client_health_info": {
    "prefix": "client_health_info",
    "description": "Information module for Client Health",
    "body": [
      "cisco.dnac.client_health_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#timestamp: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "client_proximity_info": {
    "prefix": "client_proximity_info",
    "description": "Information module for Client Proximity",
    "body": [
      "cisco.dnac.client_proximity_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#number_days: ${9:}",
      "\t#time_resolution: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "command_runner_run_command": {
    "prefix": "command_runner_run_command",
    "description": "Resource module for Command Runner Run Command",
    "body": [
      "cisco.dnac.command_runner_run_command:",
      "\tdnac_host: ${1:}",
      "\t#commands: ${2:}",
      "\t#description: ${3:}",
      "\t#deviceUuids: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#name: ${11:}",
      "\t#timeout: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "compliance_check_run": {
    "prefix": "compliance_check_run",
    "description": "Resource module for Compliance Check Run",
    "body": [
      "cisco.dnac.compliance_check_run:",
      "\tdnac_host: ${1:}",
      "\t#categories: ${2:}",
      "\t#deviceUuids: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#triggerFull: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "compliance_device_by_id_info": {
    "prefix": "compliance_device_by_id_info",
    "description": "Information module for Compliance Device By Id",
    "body": [
      "cisco.dnac.compliance_device_by_id_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#complianceType: ${3:}",
      "\t#deviceUuid: ${4:}",
      "\t#diffList: ${5:}",
      "\t#dnac_debug: ${6:false}",
      "\t#dnac_password: ${7:}",
      "\t#dnac_port: ${8:443}",
      "\t#dnac_username: ${9:admin}",
      "\t#dnac_verify: ${10:true}",
      "\t#dnac_version: ${11:2.3.5.3}",
      "\t#headers: ${12:}",
      "\t#key: ${13:}",
      "\t#validate_response_schema: ${14:true}",
      "\t#value: ${15:}"
    ]
  },
  "compliance_device_details_count_info": {
    "prefix": "compliance_device_details_count_info",
    "description": "Information module for Compliance Device Details Count",
    "body": [
      "cisco.dnac.compliance_device_details_count_info:",
      "\tdnac_host: ${1:}",
      "\t#complianceStatus: ${2:}",
      "\t#complianceType: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#headers: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "compliance_device_details_info": {
    "prefix": "compliance_device_details_info",
    "description": "Information module for Compliance Device Details",
    "body": [
      "cisco.dnac.compliance_device_details_info:",
      "\tdnac_host: ${1:}",
      "\t#complianceStatus: ${2:}",
      "\t#complianceType: ${3:}",
      "\t#deviceUuid: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#headers: ${11:}",
      "\t#limit: ${12:}",
      "\t#offset: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "compliance_device_info": {
    "prefix": "compliance_device_info",
    "description": "Information module for Compliance Device",
    "body": [
      "cisco.dnac.compliance_device_info:",
      "\tdnac_host: ${1:}",
      "\t#complianceStatus: ${2:}",
      "\t#deviceUuid: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#headers: ${10:}",
      "\t#limit: ${11:}",
      "\t#offset: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "compliance_device_status_count_info": {
    "prefix": "compliance_device_status_count_info",
    "description": "Information module for Compliance Device Status Count",
    "body": [
      "cisco.dnac.compliance_device_status_count_info:",
      "\tdnac_host: ${1:}",
      "\t#complianceStatus: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "configuration_template": {
    "prefix": "configuration_template",
    "description": "Resource module for Configuration Template",
    "body": [
      "cisco.dnac.configuration_template:",
      "\tdnac_host: ${1:}",
      "\t#author: ${2:}",
      "\t#composite: ${3:}",
      "\t#containingTemplates: ${4:}",
      "\t#createTime: ${5:}",
      "\t#customParamsOrder: ${6:}",
      "\t#description: ${7:}",
      "\t#deviceTypes: ${8:}",
      "\t#dnac_debug: ${9:false}",
      "\t#dnac_password: ${10:}",
      "\t#dnac_port: ${11:443}",
      "\t#dnac_username: ${12:admin}",
      "\t#dnac_verify: ${13:true}",
      "\t#dnac_version: ${14:2.3.5.3}",
      "\t#failurePolicy: ${15:}",
      "\t#id: ${16:}",
      "\t#language: ${17:}",
      "\t#lastUpdateTime: ${18:}",
      "\t#latestVersionTime: ${19:}",
      "\t#name: ${20:}",
      "\t#parentTemplateId: ${21:}",
      "\t#projectId: ${22:}",
      "\t#projectName: ${23:}",
      "\t#rollbackTemplateContent: ${24:}",
      "\t#rollbackTemplateParams: ${25:}",
      "\t#softwareType: ${26:}",
      "\t#softwareVariant: ${27:}",
      "\t#softwareVersion: ${28:}",
      "\t#tags: ${29:}",
      "\t#templateContent: ${30:}",
      "\t#templateId: ${31:}",
      "\t#templateParams: ${32:}",
      "\t#validate_response_schema: ${33:true}",
      "\t#validationErrors: ${34:}",
      "\t#version: ${35:}"
    ]
  },
  "configuration_template_clone": {
    "prefix": "configuration_template_clone",
    "description": "Resource module for Configuration Template Clone",
    "body": [
      "cisco.dnac.configuration_template_clone:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#name: ${8:}",
      "\t#projectId: ${9:}",
      "\t#templateId: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "configuration_template_create": {
    "prefix": "configuration_template_create",
    "description": "Resource module for Configuration Template Create",
    "body": [
      "cisco.dnac.configuration_template_create:",
      "\tdnac_host: ${1:}",
      "\t#author: ${2:}",
      "\t#composite: ${3:}",
      "\t#containingTemplates: ${4:}",
      "\t#createTime: ${5:}",
      "\t#customParamsOrder: ${6:}",
      "\t#description: ${7:}",
      "\t#deviceTypes: ${8:}",
      "\t#dnac_debug: ${9:false}",
      "\t#dnac_password: ${10:}",
      "\t#dnac_port: ${11:443}",
      "\t#dnac_username: ${12:admin}",
      "\t#dnac_verify: ${13:true}",
      "\t#dnac_version: ${14:2.3.5.3}",
      "\t#failurePolicy: ${15:}",
      "\t#id: ${16:}",
      "\t#language: ${17:}",
      "\t#lastUpdateTime: ${18:}",
      "\t#latestVersionTime: ${19:}",
      "\t#name: ${20:}",
      "\t#parentTemplateId: ${21:}",
      "\t#projectId: ${22:}",
      "\t#projectName: ${23:}",
      "\t#rollbackTemplateContent: ${24:}",
      "\t#rollbackTemplateParams: ${25:}",
      "\t#softwareType: ${26:}",
      "\t#softwareVariant: ${27:}",
      "\t#softwareVersion: ${28:}",
      "\t#tags: ${29:}",
      "\t#templateContent: ${30:}",
      "\t#templateParams: ${31:}",
      "\t#validate_response_schema: ${32:true}",
      "\t#validationErrors: ${33:}",
      "\t#version: ${34:}"
    ]
  },
  "configuration_template_deploy": {
    "prefix": "configuration_template_deploy",
    "description": "Resource module for Configuration Template Deploy",
    "body": [
      "cisco.dnac.configuration_template_deploy:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#forcePushTemplate: ${8:}",
      "\t#isComposite: ${9:}",
      "\t#mainTemplateId: ${10:}",
      "\t#memberTemplateDeploymentInfo: ${11:}",
      "\t#targetInfo: ${12:}",
      "\t#templateId: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "configuration_template_deploy_status_info": {
    "prefix": "configuration_template_deploy_status_info",
    "description": "Information module for Configuration Template Deploy Status",
    "body": [
      "cisco.dnac.configuration_template_deploy_status_info:",
      "\tdnac_host: ${1:}",
      "\t#deploymentId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "configuration_template_deploy_v2": {
    "prefix": "configuration_template_deploy_v2",
    "description": "Resource module for Configuration Template Deploy V2",
    "body": [
      "cisco.dnac.configuration_template_deploy_v2:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#forcePushTemplate: ${8:}",
      "\t#isComposite: ${9:}",
      "\t#mainTemplateId: ${10:}",
      "\t#memberTemplateDeploymentInfo: ${11:}",
      "\t#targetInfo: ${12:}",
      "\t#templateId: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "configuration_template_export_project": {
    "prefix": "configuration_template_export_project",
    "description": "Resource module for Configuration Template Export Project",
    "body": [
      "cisco.dnac.configuration_template_export_project:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "configuration_template_export_template": {
    "prefix": "configuration_template_export_template",
    "description": "Resource module for Configuration Template Export Template",
    "body": [
      "cisco.dnac.configuration_template_export_template:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "configuration_template_import_project": {
    "prefix": "configuration_template_import_project",
    "description": "Resource module for Configuration Template Import Project",
    "body": [
      "cisco.dnac.configuration_template_import_project:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#doVersion: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "configuration_template_import_template": {
    "prefix": "configuration_template_import_template",
    "description": "Resource module for Configuration Template Import Template",
    "body": [
      "cisco.dnac.configuration_template_import_template:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#doVersion: ${8:}",
      "\t#payload: ${9:}",
      "\t#projectName: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "configuration_template_info": {
    "prefix": "configuration_template_info",
    "description": "Information module for Configuration Template",
    "body": [
      "cisco.dnac.configuration_template_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#filterConflictingTemplates: ${8:}",
      "\t#headers: ${9:}",
      "\t#latestVersion: ${10:}",
      "\t#productFamily: ${11:}",
      "\t#productSeries: ${12:}",
      "\t#productType: ${13:}",
      "\t#projectId: ${14:}",
      "\t#projectNames: ${15:}",
      "\t#softwareType: ${16:}",
      "\t#softwareVersion: ${17:}",
      "\t#sortOrder: ${18:}",
      "\t#tags: ${19:}",
      "\t#templateId: ${20:}",
      "\t#unCommitted: ${21:}",
      "\t#validate_response_schema: ${22:true}"
    ]
  },
  "configuration_template_project": {
    "prefix": "configuration_template_project",
    "description": "Resource module for Configuration Template Project",
    "body": [
      "cisco.dnac.configuration_template_project:",
      "\tdnac_host: ${1:}",
      "\t#createTime: ${2:}",
      "\t#description: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#id: ${10:}",
      "\t#lastUpdateTime: ${11:}",
      "\t#name: ${12:}",
      "\t#projectId: ${13:}",
      "\t#tags: ${14:}",
      "\t#templates: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "configuration_template_project_info": {
    "prefix": "configuration_template_project_info",
    "description": "Information module for Configuration Template Project",
    "body": [
      "cisco.dnac.configuration_template_project_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#name: ${9:}",
      "\t#projectId: ${10:}",
      "\t#sortOrder: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "configuration_template_version_create": {
    "prefix": "configuration_template_version_create",
    "description": "Resource module for Configuration Template Version Create",
    "body": [
      "cisco.dnac.configuration_template_version_create:",
      "\tdnac_host: ${1:}",
      "\t#comments: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#templateId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "configuration_template_version_info": {
    "prefix": "configuration_template_version_info",
    "description": "Information module for Configuration Template Version",
    "body": [
      "cisco.dnac.configuration_template_version_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#templateId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "credential_to_site_by_siteid_create_v2": {
    "prefix": "credential_to_site_by_siteid_create_v2",
    "description": "Resource module for Credential To Site By Siteid Create V2",
    "body": [
      "cisco.dnac.credential_to_site_by_siteid_create_v2:",
      "\tdnac_host: ${1:}",
      "\t#cliId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#httpRead: ${9:}",
      "\t#httpWrite: ${10:}",
      "\t#siteId: ${11:}",
      "\t#snmpV2ReadId: ${12:}",
      "\t#snmpV2WriteId: ${13:}",
      "\t#snmpV3Id: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "device_configurations_export": {
    "prefix": "device_configurations_export",
    "description": "Resource module for Device Configurations Export",
    "body": [
      "cisco.dnac.device_configurations_export:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#password: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "device_credential_create": {
    "prefix": "device_credential_create",
    "description": "Resource module for Device Credential Create",
    "body": [
      "cisco.dnac.device_credential_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#settings: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_credential_delete": {
    "prefix": "device_credential_delete",
    "description": "Resource module for Device Credential Delete",
    "body": [
      "cisco.dnac.device_credential_delete:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_credential_info": {
    "prefix": "device_credential_info",
    "description": "Information module for Device Credential",
    "body": [
      "cisco.dnac.device_credential_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "device_credential_intent": {
    "prefix": "device_credential_intent",
    "description": "Resource module for Global Device Credentials and Assigning Credentials to sites.",
    "body": [
      "cisco.dnac.device_credential_intent:",
      "\tconfig: ${1:}",
      "\tdnac_host: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_log: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.2.3.3}",
      "\t#state: ${10:#merged|deleted}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "device_credential_update": {
    "prefix": "device_credential_update",
    "description": "Resource module for Device Credential Update",
    "body": [
      "cisco.dnac.device_credential_update:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#settings: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_details_info": {
    "prefix": "device_details_info",
    "description": "Information module for Device Details",
    "body": [
      "cisco.dnac.device_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#identifier: ${9:}",
      "\t#searchBy: ${10:}",
      "\t#timestamp: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "device_enrichment_details_info": {
    "prefix": "device_enrichment_details_info",
    "description": "Information module for Device Enrichment Details",
    "body": [
      "cisco.dnac.device_enrichment_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_family_identifiers_details_info": {
    "prefix": "device_family_identifiers_details_info",
    "description": "Information module for Device Family Identifiers Details",
    "body": [
      "cisco.dnac.device_family_identifiers_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_health_info": {
    "prefix": "device_health_info",
    "description": "Information module for Device Health",
    "body": [
      "cisco.dnac.device_health_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceRole: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#endTime: ${9:}",
      "\t#headers: ${10:}",
      "\t#health: ${11:}",
      "\t#limit: ${12:}",
      "\t#offset: ${13:}",
      "\t#siteId: ${14:}",
      "\t#startTime: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "device_interface_by_ip_info": {
    "prefix": "device_interface_by_ip_info",
    "description": "Information module for Device Interface By Ip",
    "body": [
      "cisco.dnac.device_interface_by_ip_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#ipAddress: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "device_interface_count_info": {
    "prefix": "device_interface_count_info",
    "description": "Information module for Device Interface Count",
    "body": [
      "cisco.dnac.device_interface_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_interface_info": {
    "prefix": "device_interface_info",
    "description": "Information module for Device Interface",
    "body": [
      "cisco.dnac.device_interface_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#lastInputTime: ${10:}",
      "\t#lastOutputTime: ${11:}",
      "\t#limit: ${12:}",
      "\t#offset: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "device_interface_isis_info": {
    "prefix": "device_interface_isis_info",
    "description": "Information module for Device Interface Isis",
    "body": [
      "cisco.dnac.device_interface_isis_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_interface_ospf_info": {
    "prefix": "device_interface_ospf_info",
    "description": "Information module for Device Interface Ospf",
    "body": [
      "cisco.dnac.device_interface_ospf_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_reboot_apreboot": {
    "prefix": "device_reboot_apreboot",
    "description": "Resource module for Device Reboot Apreboot",
    "body": [
      "cisco.dnac.device_reboot_apreboot:",
      "\tdnac_host: ${1:}",
      "\t#apMacAddresses: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_reboot_apreboot_info": {
    "prefix": "device_reboot_apreboot_info",
    "description": "Information module for Device Reboot Apreboot",
    "body": [
      "cisco.dnac.device_reboot_apreboot_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#parentTaskId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "device_replacement": {
    "prefix": "device_replacement",
    "description": "Resource module for Device Replacement",
    "body": [
      "cisco.dnac.device_replacement:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "device_replacement_count_info": {
    "prefix": "device_replacement_count_info",
    "description": "Information module for Device Replacement Count",
    "body": [
      "cisco.dnac.device_replacement_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#replacementStatus: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "device_replacement_deploy": {
    "prefix": "device_replacement_deploy",
    "description": "Resource module for Device Replacement Deploy",
    "body": [
      "cisco.dnac.device_replacement_deploy:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#faultyDeviceSerialNumber: ${8:}",
      "\t#replacementDeviceSerialNumber: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "device_replacement_info": {
    "prefix": "device_replacement_info",
    "description": "Information module for Device Replacement",
    "body": [
      "cisco.dnac.device_replacement_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#family: ${8:}",
      "\t#faultyDeviceName: ${9:}",
      "\t#faultyDevicePlatform: ${10:}",
      "\t#faultyDeviceSerialNumber: ${11:}",
      "\t#headers: ${12:}",
      "\t#limit: ${13:}",
      "\t#offset: ${14:}",
      "\t#replacementDevicePlatform: ${15:}",
      "\t#replacementDeviceSerialNumber: ${16:}",
      "\t#replacementStatus: ${17:}",
      "\t#sortBy: ${18:}",
      "\t#sortOrder: ${19:}",
      "\t#validate_response_schema: ${20:true}"
    ]
  },
  "disassociate_site_to_network_profile": {
    "prefix": "disassociate_site_to_network_profile",
    "description": "Resource module for Disassociate Site To Network Profile",
    "body": [
      "cisco.dnac.disassociate_site_to_network_profile:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#networkProfileId: ${8:}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "disasterrecovery_system_operationstatus_info": {
    "prefix": "disasterrecovery_system_operationstatus_info",
    "description": "Information module for Disasterrecovery System Operationstatus",
    "body": [
      "cisco.dnac.disasterrecovery_system_operationstatus_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "disasterrecovery_system_status_info": {
    "prefix": "disasterrecovery_system_status_info",
    "description": "Information module for Disasterrecovery System Status",
    "body": [
      "cisco.dnac.disasterrecovery_system_status_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "discovery": {
    "prefix": "discovery",
    "description": "Resource module for Discovery",
    "body": [
      "cisco.dnac.discovery:",
      "\tdnac_host: ${1:}",
      "\t#attributeInfo: ${2:}",
      "\t#cdpLevel: ${3:}",
      "\t#deviceIds: ${4:}",
      "\t#discoveryCondition: ${5:}",
      "\t#discoveryStatus: ${6:}",
      "\t#discoveryType: ${7:}",
      "\t#dnac_debug: ${8:false}",
      "\t#dnac_password: ${9:}",
      "\t#dnac_port: ${10:443}",
      "\t#dnac_username: ${11:admin}",
      "\t#dnac_verify: ${12:true}",
      "\t#dnac_version: ${13:2.3.5.3}",
      "\t#enablePasswordList: ${14:}",
      "\t#globalCredentialIdList: ${15:}",
      "\t#httpReadCredential: ${16:}",
      "\t#httpWriteCredential: ${17:}",
      "\t#id: ${18:}",
      "\t#ipAddressList: ${19:}",
      "\t#ipFilterList: ${20:}",
      "\t#isAutoCdp: ${21:}",
      "\t#lldpLevel: ${22:}",
      "\t#name: ${23:}",
      "\t#netconfPort: ${24:}",
      "\t#numDevices: ${25:}",
      "\t#parentDiscoveryId: ${26:}",
      "\t#passwordList: ${27:}",
      "\t#preferredMgmtIPMethod: ${28:}",
      "\t#protocolOrder: ${29:}",
      "\t#retry: ${30:}",
      "\t#retryCount: ${31:}",
      "\t#snmpAuthPassphrase: ${32:}",
      "\t#snmpAuthProtocol: ${33:}",
      "\t#snmpMode: ${34:}",
      "\t#snmpPrivPassphrase: ${35:}",
      "\t#snmpPrivProtocol: ${36:}",
      "\t#snmpROCommunity: ${37:}",
      "\t#snmpROCommunityDesc: ${38:}",
      "\t#snmpRWCommunity: ${39:}",
      "\t#snmpRWCommunityDesc: ${40:}",
      "\t#snmpRoCommunity: ${41:}",
      "\t#snmpRoCommunityDesc: ${42:}",
      "\t#snmpRwCommunity: ${43:}",
      "\t#snmpRwCommunityDesc: ${44:}",
      "\t#snmpUserName: ${45:}",
      "\t#snmpVersion: ${46:}",
      "\t#timeOut: ${47:}",
      "\t#timeout: ${48:}",
      "\t#updateMgmtIp: ${49:}",
      "\t#userNameList: ${50:}",
      "\t#validate_response_schema: ${51:true}"
    ]
  },
  "discovery_count_info": {
    "prefix": "discovery_count_info",
    "description": "Information module for Discovery Count",
    "body": [
      "cisco.dnac.discovery_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "discovery_device_count_info": {
    "prefix": "discovery_device_count_info",
    "description": "Information module for Discovery Device Count",
    "body": [
      "cisco.dnac.discovery_device_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#taskId: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "discovery_device_info": {
    "prefix": "discovery_device_info",
    "description": "Information module for Discovery Device",
    "body": [
      "cisco.dnac.discovery_device_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#taskId: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "discovery_device_range_info": {
    "prefix": "discovery_device_range_info",
    "description": "Information module for Discovery Device Range",
    "body": [
      "cisco.dnac.discovery_device_range_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#recordsToReturn: ${10:}",
      "\t#startIndex: ${11:}",
      "\t#taskId: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "discovery_info": {
    "prefix": "discovery_info",
    "description": "Information module for Discovery",
    "body": [
      "cisco.dnac.discovery_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "discovery_job_info": {
    "prefix": "discovery_job_info",
    "description": "Information module for Discovery Job",
    "body": [
      "cisco.dnac.discovery_job_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#ipAddress: ${10:}",
      "\t#limit: ${11:}",
      "\t#name: ${12:}",
      "\t#offset: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "discovery_range_delete": {
    "prefix": "discovery_range_delete",
    "description": "Resource module for Discovery Range Delete",
    "body": [
      "cisco.dnac.discovery_range_delete:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#recordsToDelete: ${8:}",
      "\t#startIndex: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "discovery_range_info": {
    "prefix": "discovery_range_info",
    "description": "Information module for Discovery Range",
    "body": [
      "cisco.dnac.discovery_range_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#recordsToReturn: ${9:}",
      "\t#startIndex: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "discovery_summary_info": {
    "prefix": "discovery_summary_info",
    "description": "Information module for Discovery Summary",
    "body": [
      "cisco.dnac.discovery_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#cliStatus: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#httpStatus: ${10:}",
      "\t#id: ${11:}",
      "\t#ipAddress: ${12:}",
      "\t#netconfStatus: ${13:}",
      "\t#pingStatus: ${14:}",
      "\t#snmpStatus: ${15:}",
      "\t#sortBy: ${16:}",
      "\t#sortOrder: ${17:}",
      "\t#taskId: ${18:}",
      "\t#validate_response_schema: ${19:true}"
    ]
  },
  "dna_command_runner_keywords_info": {
    "prefix": "dna_command_runner_keywords_info",
    "description": "Information module for Dna Command Runner Keywords",
    "body": [
      "cisco.dnac.dna_command_runner_keywords_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "dnac_packages_info": {
    "prefix": "dnac_packages_info",
    "description": "Information module for Dnac Packages",
    "body": [
      "cisco.dnac.dnac_packages_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "dnacaap_management_execution_status_info": {
    "prefix": "dnacaap_management_execution_status_info",
    "description": "Information module for Dnacaap Management Execution Status",
    "body": [
      "cisco.dnac.dnacaap_management_execution_status_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#executionId: ${8:}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "endpoint_analytics_profiling_rules": {
    "prefix": "endpoint_analytics_profiling_rules",
    "description": "Resource module for Endpoint Analytics Profiling Rules",
    "body": [
      "cisco.dnac.endpoint_analytics_profiling_rules:",
      "\tdnac_host: ${1:}",
      "\t#clusterId: ${2:}",
      "\t#conditionGroups: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#isDeleted: ${10:}",
      "\t#lastModifiedBy: ${11:}",
      "\t#lastModifiedOn: ${12:}",
      "\t#pluginId: ${13:}",
      "\t#rejected: ${14:}",
      "\t#result: ${15:}",
      "\t#ruleId: ${16:}",
      "\t#ruleName: ${17:}",
      "\t#rulePriority: ${18:}",
      "\t#ruleType: ${19:}",
      "\t#ruleVersion: ${20:}",
      "\t#sourcePriority: ${21:}",
      "\t#usedAttributes: ${22:}",
      "\t#validate_response_schema: ${23:true}"
    ]
  },
  "endpoint_analytics_profiling_rules_info": {
    "prefix": "endpoint_analytics_profiling_rules_info",
    "description": "Information module for Endpoint Analytics Profiling Rules",
    "body": [
      "cisco.dnac.endpoint_analytics_profiling_rules_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#includeDeleted: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#order: ${12:}",
      "\t#ruleId: ${13:}",
      "\t#ruleType: ${14:}",
      "\t#sortBy: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "eox_status_device_info": {
    "prefix": "eox_status_device_info",
    "description": "Information module for Eox Status Device",
    "body": [
      "cisco.dnac.eox_status_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "eox_status_summary_info": {
    "prefix": "eox_status_summary_info",
    "description": "Information module for Eox Status Summary",
    "body": [
      "cisco.dnac.eox_status_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "event_api_status_info": {
    "prefix": "event_api_status_info",
    "description": "Information module for Event Api Status",
    "body": [
      "cisco.dnac.event_api_status_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#executionId: ${8:}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "event_artifact_count_info": {
    "prefix": "event_artifact_count_info",
    "description": "Information module for Event Artifact Count",
    "body": [
      "cisco.dnac.event_artifact_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "event_artifact_info": {
    "prefix": "event_artifact_info",
    "description": "Information module for Event Artifact",
    "body": [
      "cisco.dnac.event_artifact_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#eventIds: ${8:}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#order: ${12:}",
      "\t#search: ${13:}",
      "\t#sortBy: ${14:}",
      "\t#tags: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "event_config_connector_types_info": {
    "prefix": "event_config_connector_types_info",
    "description": "Information module for Event Config Connector Types",
    "body": [
      "cisco.dnac.event_config_connector_types_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "event_count_info": {
    "prefix": "event_count_info",
    "description": "Information module for Event Count",
    "body": [
      "cisco.dnac.event_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#eventId: ${8:}",
      "\t#headers: ${9:}",
      "\t#tags: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "event_email_config": {
    "prefix": "event_email_config",
    "description": "Resource module for Event Email Config",
    "body": [
      "cisco.dnac.event_email_config:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#emailConfigId: ${8:}",
      "\t#fromEmail: ${9:}",
      "\t#primarySMTPConfig: ${10:}",
      "\t#secondarySMTPConfig: ${11:}",
      "\t#subject: ${12:}",
      "\t#toEmail: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "event_email_config_create": {
    "prefix": "event_email_config_create",
    "description": "Resource module for Event Email Config Create",
    "body": [
      "cisco.dnac.event_email_config_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#emailConfigId: ${8:}",
      "\t#fromEmail: ${9:}",
      "\t#primarySMTPConfig: ${10:}",
      "\t#secondarySMTPConfig: ${11:}",
      "\t#subject: ${12:}",
      "\t#toEmail: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "event_email_config_info": {
    "prefix": "event_email_config_info",
    "description": "Information module for Event Email Config",
    "body": [
      "cisco.dnac.event_email_config_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "event_email_config_update": {
    "prefix": "event_email_config_update",
    "description": "Resource module for Event Email Config Update",
    "body": [
      "cisco.dnac.event_email_config_update:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#emailConfigId: ${8:}",
      "\t#fromEmail: ${9:}",
      "\t#primarySMTPConfig: ${10:}",
      "\t#secondarySMTPConfig: ${11:}",
      "\t#subject: ${12:}",
      "\t#toEmail: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "event_info": {
    "prefix": "event_info",
    "description": "Information module for Event",
    "body": [
      "cisco.dnac.event_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#eventId: ${8:}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#order: ${12:}",
      "\t#sortBy: ${13:}",
      "\t#tags: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "event_series_audit_logs_info": {
    "prefix": "event_series_audit_logs_info",
    "description": "Information module for Event Series Audit Logs",
    "body": [
      "cisco.dnac.event_series_audit_logs_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#context: ${3:}",
      "\t#description: ${4:}",
      "\t#deviceId: ${5:}",
      "\t#dnac_debug: ${6:false}",
      "\t#dnac_password: ${7:}",
      "\t#dnac_port: ${8:443}",
      "\t#dnac_username: ${9:admin}",
      "\t#dnac_verify: ${10:true}",
      "\t#dnac_version: ${11:2.3.5.3}",
      "\t#domain: ${12:}",
      "\t#endTime: ${13:}",
      "\t#eventHierarchy: ${14:}",
      "\t#eventId: ${15:}",
      "\t#headers: ${16:}",
      "\t#instanceId: ${17:}",
      "\t#isSystemEvents: ${18:}",
      "\t#limit: ${19:}",
      "\t#name: ${20:}",
      "\t#offset: ${21:}",
      "\t#order: ${22:}",
      "\t#parentInstanceId: ${23:}",
      "\t#severity: ${24:}",
      "\t#siteId: ${25:}",
      "\t#sortBy: ${26:}",
      "\t#source: ${27:}",
      "\t#startTime: ${28:}",
      "\t#subDomain: ${29:}",
      "\t#userId: ${30:}",
      "\t#validate_response_schema: ${31:true}"
    ]
  },
  "event_series_audit_logs_parent_records_info": {
    "prefix": "event_series_audit_logs_parent_records_info",
    "description": "Information module for Event Series Audit Logs Parent Records",
    "body": [
      "cisco.dnac.event_series_audit_logs_parent_records_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#context: ${3:}",
      "\t#description: ${4:}",
      "\t#deviceId: ${5:}",
      "\t#dnac_debug: ${6:false}",
      "\t#dnac_password: ${7:}",
      "\t#dnac_port: ${8:443}",
      "\t#dnac_username: ${9:admin}",
      "\t#dnac_verify: ${10:true}",
      "\t#dnac_version: ${11:2.3.5.3}",
      "\t#domain: ${12:}",
      "\t#endTime: ${13:}",
      "\t#eventHierarchy: ${14:}",
      "\t#eventId: ${15:}",
      "\t#headers: ${16:}",
      "\t#instanceId: ${17:}",
      "\t#isSystemEvents: ${18:}",
      "\t#limit: ${19:}",
      "\t#name: ${20:}",
      "\t#offset: ${21:}",
      "\t#order: ${22:}",
      "\t#severity: ${23:}",
      "\t#siteId: ${24:}",
      "\t#sortBy: ${25:}",
      "\t#source: ${26:}",
      "\t#startTime: ${27:}",
      "\t#subDomain: ${28:}",
      "\t#userId: ${29:}",
      "\t#validate_response_schema: ${30:true}"
    ]
  },
  "event_series_audit_logs_summary_info": {
    "prefix": "event_series_audit_logs_summary_info",
    "description": "Information module for Event Series Audit Logs Summary",
    "body": [
      "cisco.dnac.event_series_audit_logs_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#context: ${3:}",
      "\t#description: ${4:}",
      "\t#deviceId: ${5:}",
      "\t#dnac_debug: ${6:false}",
      "\t#dnac_password: ${7:}",
      "\t#dnac_port: ${8:443}",
      "\t#dnac_username: ${9:admin}",
      "\t#dnac_verify: ${10:true}",
      "\t#dnac_version: ${11:2.3.5.3}",
      "\t#domain: ${12:}",
      "\t#endTime: ${13:}",
      "\t#eventHierarchy: ${14:}",
      "\t#eventId: ${15:}",
      "\t#headers: ${16:}",
      "\t#instanceId: ${17:}",
      "\t#isParentOnly: ${18:}",
      "\t#isSystemEvents: ${19:}",
      "\t#name: ${20:}",
      "\t#parentInstanceId: ${21:}",
      "\t#severity: ${22:}",
      "\t#siteId: ${23:}",
      "\t#source: ${24:}",
      "\t#startTime: ${25:}",
      "\t#subDomain: ${26:}",
      "\t#userId: ${27:}",
      "\t#validate_response_schema: ${28:true}"
    ]
  },
  "event_series_count_info": {
    "prefix": "event_series_count_info",
    "description": "Information module for Event Series Count",
    "body": [
      "cisco.dnac.event_series_count_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#domain: ${9:}",
      "\t#endTime: ${10:}",
      "\t#eventIds: ${11:}",
      "\t#headers: ${12:}",
      "\t#severity: ${13:}",
      "\t#source: ${14:}",
      "\t#startTime: ${15:}",
      "\t#subDomain: ${16:}",
      "\t#type: ${17:}",
      "\t#validate_response_schema: ${18:true}"
    ]
  },
  "event_series_info": {
    "prefix": "event_series_info",
    "description": "Information module for Event Series",
    "body": [
      "cisco.dnac.event_series_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#domain: ${9:}",
      "\t#endTime: ${10:}",
      "\t#eventIds: ${11:}",
      "\t#headers: ${12:}",
      "\t#limit: ${13:}",
      "\t#namespace: ${14:}",
      "\t#offset: ${15:}",
      "\t#order: ${16:}",
      "\t#severity: ${17:}",
      "\t#siteId: ${18:}",
      "\t#sortBy: ${19:}",
      "\t#source: ${20:}",
      "\t#startTime: ${21:}",
      "\t#subDomain: ${22:}",
      "\t#tags: ${23:}",
      "\t#type: ${24:}",
      "\t#validate_response_schema: ${25:true}"
    ]
  },
  "event_snmp_config_info": {
    "prefix": "event_snmp_config_info",
    "description": "Information module for Event Snmp Config",
    "body": [
      "cisco.dnac.event_snmp_config_info:",
      "\tdnac_host: ${1:}",
      "\t#configId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#order: ${12:}",
      "\t#sortBy: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "event_subscription": {
    "prefix": "event_subscription",
    "description": "Resource module for Event Subscription",
    "body": [
      "cisco.dnac.event_subscription:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#subscriptions: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "event_subscription_count_info": {
    "prefix": "event_subscription_count_info",
    "description": "Information module for Event Subscription Count",
    "body": [
      "cisco.dnac.event_subscription_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#eventIds: ${8:}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "event_subscription_details_email_info": {
    "prefix": "event_subscription_details_email_info",
    "description": "Information module for Event Subscription Details Email",
    "body": [
      "cisco.dnac.event_subscription_details_email_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#instanceId: ${9:}",
      "\t#limit: ${10:}",
      "\t#name: ${11:}",
      "\t#offset: ${12:}",
      "\t#order: ${13:}",
      "\t#sortBy: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "event_subscription_details_rest_info": {
    "prefix": "event_subscription_details_rest_info",
    "description": "Information module for Event Subscription Details Rest",
    "body": [
      "cisco.dnac.event_subscription_details_rest_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#instanceId: ${9:}",
      "\t#limit: ${10:}",
      "\t#name: ${11:}",
      "\t#offset: ${12:}",
      "\t#order: ${13:}",
      "\t#sortBy: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "event_subscription_details_syslog_info": {
    "prefix": "event_subscription_details_syslog_info",
    "description": "Information module for Event Subscription Details Syslog",
    "body": [
      "cisco.dnac.event_subscription_details_syslog_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#instanceId: ${9:}",
      "\t#limit: ${10:}",
      "\t#name: ${11:}",
      "\t#offset: ${12:}",
      "\t#order: ${13:}",
      "\t#sortBy: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "event_subscription_email": {
    "prefix": "event_subscription_email",
    "description": "Resource module for Event Subscription Email",
    "body": [
      "cisco.dnac.event_subscription_email:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "event_subscription_email_info": {
    "prefix": "event_subscription_email_info",
    "description": "Information module for Event Subscription Email",
    "body": [
      "cisco.dnac.event_subscription_email_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#domain: ${9:}",
      "\t#eventIds: ${10:}",
      "\t#headers: ${11:}",
      "\t#limit: ${12:}",
      "\t#name: ${13:}",
      "\t#offset: ${14:}",
      "\t#order: ${15:}",
      "\t#sortBy: ${16:}",
      "\t#subDomain: ${17:}",
      "\t#type: ${18:}",
      "\t#validate_response_schema: ${19:true}"
    ]
  },
  "event_subscription_info": {
    "prefix": "event_subscription_info",
    "description": "Information module for Event Subscription",
    "body": [
      "cisco.dnac.event_subscription_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#eventIds: ${8:}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#order: ${12:}",
      "\t#sortBy: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "event_subscription_rest": {
    "prefix": "event_subscription_rest",
    "description": "Resource module for Event Subscription Rest",
    "body": [
      "cisco.dnac.event_subscription_rest:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "event_subscription_rest_info": {
    "prefix": "event_subscription_rest_info",
    "description": "Information module for Event Subscription Rest",
    "body": [
      "cisco.dnac.event_subscription_rest_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#domain: ${9:}",
      "\t#eventIds: ${10:}",
      "\t#headers: ${11:}",
      "\t#limit: ${12:}",
      "\t#name: ${13:}",
      "\t#offset: ${14:}",
      "\t#order: ${15:}",
      "\t#sortBy: ${16:}",
      "\t#subDomain: ${17:}",
      "\t#type: ${18:}",
      "\t#validate_response_schema: ${19:true}"
    ]
  },
  "event_subscription_syslog": {
    "prefix": "event_subscription_syslog",
    "description": "Resource module for Event Subscription Syslog",
    "body": [
      "cisco.dnac.event_subscription_syslog:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "event_subscription_syslog_info": {
    "prefix": "event_subscription_syslog_info",
    "description": "Information module for Event Subscription Syslog",
    "body": [
      "cisco.dnac.event_subscription_syslog_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#domain: ${9:}",
      "\t#eventIds: ${10:}",
      "\t#headers: ${11:}",
      "\t#limit: ${12:}",
      "\t#name: ${13:}",
      "\t#offset: ${14:}",
      "\t#order: ${15:}",
      "\t#sortBy: ${16:}",
      "\t#subDomain: ${17:}",
      "\t#type: ${18:}",
      "\t#validate_response_schema: ${19:true}"
    ]
  },
  "event_syslog_config": {
    "prefix": "event_syslog_config",
    "description": "Resource module for Event Syslog Config",
    "body": [
      "cisco.dnac.event_syslog_config:",
      "\tdnac_host: ${1:}",
      "\t#configId: ${2:}",
      "\t#description: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#host: ${10:}",
      "\t#name: ${11:}",
      "\t#port: ${12:}",
      "\t#protocol: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "event_syslog_config_info": {
    "prefix": "event_syslog_config_info",
    "description": "Information module for Event Syslog Config",
    "body": [
      "cisco.dnac.event_syslog_config_info:",
      "\tdnac_host: ${1:}",
      "\t#configId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#name: ${11:}",
      "\t#offset: ${12:}",
      "\t#order: ${13:}",
      "\t#protocol: ${14:}",
      "\t#sortBy: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "event_webhook_create": {
    "prefix": "event_webhook_create",
    "description": "Resource module for Event Webhook Create",
    "body": [
      "cisco.dnac.event_webhook_create:",
      "\tdnac_host: ${1:}",
      "\t#description: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#method: ${10:}",
      "\t#name: ${11:}",
      "\t#trustCert: ${12:}",
      "\t#url: ${13:}",
      "\t#validate_response_schema: ${14:true}",
      "\t#webhookId: ${15:}"
    ]
  },
  "event_webhook_update": {
    "prefix": "event_webhook_update",
    "description": "Resource module for Event Webhook Update",
    "body": [
      "cisco.dnac.event_webhook_update:",
      "\tdnac_host: ${1:}",
      "\t#description: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#method: ${10:}",
      "\t#name: ${11:}",
      "\t#trustCert: ${12:}",
      "\t#url: ${13:}",
      "\t#validate_response_schema: ${14:true}",
      "\t#webhookId: ${15:}"
    ]
  },
  "execute_suggested_actions_commands": {
    "prefix": "execute_suggested_actions_commands",
    "description": "Resource module for Execute Suggested Actions Commands",
    "body": [
      "cisco.dnac.execute_suggested_actions_commands:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#entity_type: ${8:}",
      "\t#entity_value: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "file_import": {
    "prefix": "file_import",
    "description": "Resource module for File Import",
    "body": [
      "cisco.dnac.file_import:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#filePath: ${8:}",
      "\t#nameSpace: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "file_info": {
    "prefix": "file_info",
    "description": "Information module for File",
    "body": [
      "cisco.dnac.file_info:",
      "\tdnac_host: ${1:}",
      "\t#dirPath: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#fileId: ${9:}",
      "\t#filename: ${10:}",
      "\t#headers: ${11:}",
      "\t#saveFile: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "file_namespace_files_info": {
    "prefix": "file_namespace_files_info",
    "description": "Information module for File Namespace Files",
    "body": [
      "cisco.dnac.file_namespace_files_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#nameSpace: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "file_namespaces_info": {
    "prefix": "file_namespaces_info",
    "description": "Information module for File Namespaces",
    "body": [
      "cisco.dnac.file_namespaces_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "global_credential_delete": {
    "prefix": "global_credential_delete",
    "description": "Resource module for Global Credential Delete",
    "body": [
      "cisco.dnac.global_credential_delete:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#globalCredentialId: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "global_credential_info": {
    "prefix": "global_credential_info",
    "description": "Information module for Global Credential",
    "body": [
      "cisco.dnac.global_credential_info:",
      "\tdnac_host: ${1:}",
      "\t#credentialSubType: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#id: ${10:}",
      "\t#order: ${11:}",
      "\t#sortBy: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "global_credential_update": {
    "prefix": "global_credential_update",
    "description": "Resource module for Global Credential Update",
    "body": [
      "cisco.dnac.global_credential_update:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#globalCredentialId: ${8:}",
      "\t#siteUuids: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "global_credential_v2": {
    "prefix": "global_credential_v2",
    "description": "Resource module for Global Credential V2",
    "body": [
      "cisco.dnac.global_credential_v2:",
      "\tdnac_host: ${1:}",
      "\t#cliCredential: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#httpsRead: ${9:}",
      "\t#httpsWrite: ${10:}",
      "\t#id: ${11:}",
      "\t#snmpV2cRead: ${12:}",
      "\t#snmpV2cWrite: ${13:}",
      "\t#snmpV3: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "global_credential_v2_info": {
    "prefix": "global_credential_v2_info",
    "description": "Information module for Global Credential V2",
    "body": [
      "cisco.dnac.global_credential_v2_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "global_pool": {
    "prefix": "global_pool",
    "description": "Resource module for Global Pool",
    "body": [
      "cisco.dnac.global_pool:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#settings: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "global_pool_info": {
    "prefix": "global_pool_info",
    "description": "Information module for Global Pool",
    "body": [
      "cisco.dnac.global_pool_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#limit: ${9:}",
      "\t#offset: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "golden_image_create": {
    "prefix": "golden_image_create",
    "description": "Resource module for Golden Image Create",
    "body": [
      "cisco.dnac.golden_image_create:",
      "\tdnac_host: ${1:}",
      "\t#deviceFamilyIdentifier: ${2:}",
      "\t#deviceRole: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#imageId: ${10:}",
      "\t#siteId: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "golden_tag_image_delete": {
    "prefix": "golden_tag_image_delete",
    "description": "Resource module for Golden Tag Image Delete",
    "body": [
      "cisco.dnac.golden_tag_image_delete:",
      "\tdnac_host: ${1:}",
      "\t#deviceFamilyIdentifier: ${2:}",
      "\t#deviceRole: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#imageId: ${10:}",
      "\t#siteId: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "golden_tag_image_details_info": {
    "prefix": "golden_tag_image_details_info",
    "description": "Information module for Golden Tag Image Details",
    "body": [
      "cisco.dnac.golden_tag_image_details_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceFamilyIdentifier: ${2:}",
      "\t#deviceRole: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#headers: ${10:}",
      "\t#imageId: ${11:}",
      "\t#siteId: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "http_read_credential": {
    "prefix": "http_read_credential",
    "description": "Resource module for Http Read Credential",
    "body": [
      "cisco.dnac.http_read_credential:",
      "\tdnac_host: ${1:}",
      "\t#comments: ${2:}",
      "\t#credentialType: ${3:}",
      "\t#description: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#id: ${11:}",
      "\t#instanceTenantId: ${12:}",
      "\t#instanceUuid: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#secure: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_response_schema: ${18:true}"
    ]
  },
  "http_write_credential": {
    "prefix": "http_write_credential",
    "description": "Resource module for Http Write Credential",
    "body": [
      "cisco.dnac.http_write_credential:",
      "\tdnac_host: ${1:}",
      "\t#comments: ${2:}",
      "\t#credentialType: ${3:}",
      "\t#description: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#id: ${11:}",
      "\t#instanceTenantId: ${12:}",
      "\t#instanceUuid: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#secure: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_response_schema: ${18:true}"
    ]
  },
  "integration_settings_instances_itsm": {
    "prefix": "integration_settings_instances_itsm",
    "description": "Resource module for Integration Settings Instances Itsm",
    "body": [
      "cisco.dnac.integration_settings_instances_itsm:",
      "\tdnac_host: ${1:}",
      "\t#data: ${2:}",
      "\t#description: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#dypName: ${10:}",
      "\t#instanceId: ${11:}",
      "\t#name: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "integration_settings_instances_itsm_info": {
    "prefix": "integration_settings_instances_itsm_info",
    "description": "Information module for Integration Settings Instances Itsm",
    "body": [
      "cisco.dnac.integration_settings_instances_itsm_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#instanceId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "interface_info": {
    "prefix": "interface_info",
    "description": "Information module for Interface",
    "body": [
      "cisco.dnac.interface_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#interfaceUuid: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "interface_network_device_detail_info": {
    "prefix": "interface_network_device_detail_info",
    "description": "Information module for Interface Network Device Detail",
    "body": [
      "cisco.dnac.interface_network_device_detail_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#name: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "interface_network_device_info": {
    "prefix": "interface_network_device_info",
    "description": "Information module for Interface Network Device",
    "body": [
      "cisco.dnac.interface_network_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "interface_network_device_range_info": {
    "prefix": "interface_network_device_range_info",
    "description": "Information module for Interface Network Device Range",
    "body": [
      "cisco.dnac.interface_network_device_range_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#recordsToReturn: ${10:}",
      "\t#startIndex: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "interface_operation_create": {
    "prefix": "interface_operation_create",
    "description": "Resource module for Interface Operation Create",
    "body": [
      "cisco.dnac.interface_operation_create:",
      "\tdnac_host: ${1:}",
      "\t#deploymentMode: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#interfaceUuid: ${9:}",
      "\t#operation: ${10:}",
      "\t#payload: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "interface_update": {
    "prefix": "interface_update",
    "description": "Resource module for Interface Update",
    "body": [
      "cisco.dnac.interface_update:",
      "\tdnac_host: ${1:}",
      "\t#adminStatus: ${2:}",
      "\t#deploymentMode: ${3:}",
      "\t#description: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#interfaceUuid: ${11:}",
      "\t#validate_response_schema: ${12:true}",
      "\t#vlanId: ${13:}",
      "\t#voiceVlanId: ${14:}"
    ]
  },
  "inventory_intent": {
    "prefix": "inventory_intent",
    "description": "Resource module for Network Device",
    "body": [
      "cisco.dnac.inventory_intent:",
      "\tconfig: ${1:}",
      "\tdnac_host: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_log: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.2.3.3}",
      "\t#state: ${10:#merged|deleted}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "issues_enrichment_details_info": {
    "prefix": "issues_enrichment_details_info",
    "description": "Information module for Issues Enrichment Details",
    "body": [
      "cisco.dnac.issues_enrichment_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "issues_info": {
    "prefix": "issues_info",
    "description": "Information module for Issues",
    "body": [
      "cisco.dnac.issues_info:",
      "\tdnac_host: ${1:}",
      "\t#aiDriven: ${2:}",
      "\t#deviceId: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#endTime: ${10:}",
      "\t#headers: ${11:}",
      "\t#issueStatus: ${12:}",
      "\t#macAddress: ${13:}",
      "\t#priority: ${14:}",
      "\t#siteId: ${15:}",
      "\t#startTime: ${16:}",
      "\t#validate_response_schema: ${17:true}"
    ]
  },
  "itsm_cmdb_sync_status_info": {
    "prefix": "itsm_cmdb_sync_status_info",
    "description": "Information module for Itsm Cmdb Sync Status",
    "body": [
      "cisco.dnac.itsm_cmdb_sync_status_info:",
      "\tdnac_host: ${1:}",
      "\t#date: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#status: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "itsm_integration_events_failed_info": {
    "prefix": "itsm_integration_events_failed_info",
    "description": "Information module for Itsm Integration Events Failed",
    "body": [
      "cisco.dnac.itsm_integration_events_failed_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#instanceId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "itsm_integration_events_retry": {
    "prefix": "itsm_integration_events_retry",
    "description": "Resource module for Itsm Integration Events Retry",
    "body": [
      "cisco.dnac.itsm_integration_events_retry:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "lan_automation_count_info": {
    "prefix": "lan_automation_count_info",
    "description": "Information module for Lan Automation Count",
    "body": [
      "cisco.dnac.lan_automation_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "lan_automation_create": {
    "prefix": "lan_automation_create",
    "description": "Resource module for Lan Automation Create",
    "body": [
      "cisco.dnac.lan_automation_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "lan_automation_delete": {
    "prefix": "lan_automation_delete",
    "description": "Resource module for Lan Automation Delete",
    "body": [
      "cisco.dnac.lan_automation_delete:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "lan_automation_log_by_serial_number_info": {
    "prefix": "lan_automation_log_by_serial_number_info",
    "description": "Information module for Lan Automation Log By Serial Number",
    "body": [
      "cisco.dnac.lan_automation_log_by_serial_number_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#logLevel: ${10:}",
      "\t#serialNumber: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "lan_automation_log_info": {
    "prefix": "lan_automation_log_info",
    "description": "Information module for Lan Automation Log",
    "body": [
      "cisco.dnac.lan_automation_log_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "lan_automation_status_info": {
    "prefix": "lan_automation_status_info",
    "description": "Information module for Lan Automation Status",
    "body": [
      "cisco.dnac.lan_automation_status_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "license_device_count_info": {
    "prefix": "license_device_count_info",
    "description": "Information module for License Device Count",
    "body": [
      "cisco.dnac.license_device_count_info:",
      "\tdnac_host: ${1:}",
      "\t#device_type: ${2:}",
      "\t#dna_level: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#headers: ${10:}",
      "\t#registration_status: ${11:}",
      "\t#smart_account_id: ${12:}",
      "\t#validate_response_schema: ${13:true}",
      "\t#virtual_account_name: ${14:}"
    ]
  },
  "license_device_deregistration": {
    "prefix": "license_device_deregistration",
    "description": "Resource module for License Device Deregistration",
    "body": [
      "cisco.dnac.license_device_deregistration:",
      "\tdnac_host: ${1:}",
      "\t#device_uuids: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "license_device_license_details_info": {
    "prefix": "license_device_license_details_info",
    "description": "Information module for License Device License Details",
    "body": [
      "cisco.dnac.license_device_license_details_info:",
      "\tdnac_host: ${1:}",
      "\t#device_uuid: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "license_device_license_summary_info": {
    "prefix": "license_device_license_summary_info",
    "description": "Information module for License Device License Summary",
    "body": [
      "cisco.dnac.license_device_license_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#device_type: ${2:}",
      "\t#device_uuid: ${3:}",
      "\t#dna_level: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#headers: ${11:}",
      "\t#limit: ${12:}",
      "\t#order: ${13:}",
      "\t#page_number: ${14:}",
      "\t#registration_status: ${15:}",
      "\t#smart_account_id: ${16:}",
      "\t#sort_by: ${17:}",
      "\t#validate_response_schema: ${18:true}",
      "\t#virtual_account_name: ${19:}"
    ]
  },
  "license_device_registration": {
    "prefix": "license_device_registration",
    "description": "Resource module for License Device Registration",
    "body": [
      "cisco.dnac.license_device_registration:",
      "\tdnac_host: ${1:}",
      "\t#device_uuids: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#validate_response_schema: ${9:true}",
      "\t#virtual_account_name: ${10:}"
    ]
  },
  "license_smart_account_details_info": {
    "prefix": "license_smart_account_details_info",
    "description": "Information module for License Smart Account Details",
    "body": [
      "cisco.dnac.license_smart_account_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "license_term_details_info": {
    "prefix": "license_term_details_info",
    "description": "Information module for License Term Details",
    "body": [
      "cisco.dnac.license_term_details_info:",
      "\tdnac_host: ${1:}",
      "\t#device_type: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#smart_account_id: ${10:}",
      "\t#validate_response_schema: ${11:true}",
      "\t#virtual_account_name: ${12:}"
    ]
  },
  "license_usage_details_info": {
    "prefix": "license_usage_details_info",
    "description": "Information module for License Usage Details",
    "body": [
      "cisco.dnac.license_usage_details_info:",
      "\tdnac_host: ${1:}",
      "\t#device_type: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#smart_account_id: ${10:}",
      "\t#validate_response_schema: ${11:true}",
      "\t#virtual_account_name: ${12:}"
    ]
  },
  "license_virtual_account_change": {
    "prefix": "license_virtual_account_change",
    "description": "Resource module for License Virtual Account Change",
    "body": [
      "cisco.dnac.license_virtual_account_change:",
      "\tdnac_host: ${1:}",
      "\t#device_uuids: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#smart_account_id: ${9:}",
      "\t#validate_response_schema: ${10:true}",
      "\t#virtual_account_name: ${11:}"
    ]
  },
  "license_virtual_account_details_info": {
    "prefix": "license_virtual_account_details_info",
    "description": "Information module for License Virtual Account Details",
    "body": [
      "cisco.dnac.license_virtual_account_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#smart_account_id: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "netconf_credential": {
    "prefix": "netconf_credential",
    "description": "Resource module for Netconf Credential",
    "body": [
      "cisco.dnac.netconf_credential:",
      "\tdnac_host: ${1:}",
      "\t#comments: ${2:}",
      "\t#credentialType: ${3:}",
      "\t#description: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#id: ${11:}",
      "\t#instanceTenantId: ${12:}",
      "\t#instanceUuid: ${13:}",
      "\t#netconfPort: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "network_create": {
    "prefix": "network_create",
    "description": "Resource module for Network Create",
    "body": [
      "cisco.dnac.network_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#settings: ${9:}",
      "\t#siteId: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_by_ip_info": {
    "prefix": "network_device_by_ip_info",
    "description": "Information module for Network Device By Ip",
    "body": [
      "cisco.dnac.network_device_by_ip_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#ipAddress: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_by_serial_number_info": {
    "prefix": "network_device_by_serial_number_info",
    "description": "Information module for Network Device By Serial Number",
    "body": [
      "cisco.dnac.network_device_by_serial_number_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#serialNumber: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_chassis_details_info": {
    "prefix": "network_device_chassis_details_info",
    "description": "Information module for Network Device Chassis Details",
    "body": [
      "cisco.dnac.network_device_chassis_details_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_config_count_info": {
    "prefix": "network_device_config_count_info",
    "description": "Information module for Network Device Config Count",
    "body": [
      "cisco.dnac.network_device_config_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "network_device_config_info": {
    "prefix": "network_device_config_info",
    "description": "Information module for Network Device Config",
    "body": [
      "cisco.dnac.network_device_config_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#networkDeviceId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_count_info": {
    "prefix": "network_device_count_info",
    "description": "Information module for Network Device Count",
    "body": [
      "cisco.dnac.network_device_count_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_custom_prompt": {
    "prefix": "network_device_custom_prompt",
    "description": "Resource module for Network Device Custom Prompt",
    "body": [
      "cisco.dnac.network_device_custom_prompt:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#passwordPrompt: ${8:}",
      "\t#usernamePrompt: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_custom_prompt_info": {
    "prefix": "network_device_custom_prompt_info",
    "description": "Information module for Network Device Custom Prompt Info",
    "body": [
      "cisco.dnac.network_device_custom_prompt_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "network_device_equipment_info": {
    "prefix": "network_device_equipment_info",
    "description": "Information module for Network Device Equipment",
    "body": [
      "cisco.dnac.network_device_equipment_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceUuid: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#type: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_export": {
    "prefix": "network_device_export",
    "description": "Resource module for Network Device Export",
    "body": [
      "cisco.dnac.network_device_export:",
      "\tdnac_host: ${1:}",
      "\t#deviceUuids: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#id: ${9:}",
      "\t#operationEnum: ${10:}",
      "\t#parameters: ${11:}",
      "\t#password: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "network_device_functional_capability_info": {
    "prefix": "network_device_functional_capability_info",
    "description": "Information module for Network Device Functional Capability",
    "body": [
      "cisco.dnac.network_device_functional_capability_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#functionName: ${9:}",
      "\t#headers: ${10:}",
      "\t#id: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "network_device_global_polling_interval_info": {
    "prefix": "network_device_global_polling_interval_info",
    "description": "Information module for Network Device Global Polling Interval",
    "body": [
      "cisco.dnac.network_device_global_polling_interval_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "network_device_interface_neighbor_info": {
    "prefix": "network_device_interface_neighbor_info",
    "description": "Information module for Network Device Interface Neighbor",
    "body": [
      "cisco.dnac.network_device_interface_neighbor_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceUuid: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#interfaceUuid: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_interface_poe_info": {
    "prefix": "network_device_interface_poe_info",
    "description": "Information module for Network Device Interface Poe",
    "body": [
      "cisco.dnac.network_device_interface_poe_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceUuid: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#interfaceNameList: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_inventory_insight_link_mismatch_info": {
    "prefix": "network_device_inventory_insight_link_mismatch_info",
    "description": "Information module for Network Device Inventory Insight Link Mismatch",
    "body": [
      "cisco.dnac.network_device_inventory_insight_link_mismatch_info:",
      "\tdnac_host: ${1:}",
      "\t#category: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#order: ${12:}",
      "\t#siteId: ${13:}",
      "\t#sortBy: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "network_device_lexicographically_sorted_info": {
    "prefix": "network_device_lexicographically_sorted_info",
    "description": "Information module for Network Device Lexicographically Sorted",
    "body": [
      "cisco.dnac.network_device_lexicographically_sorted_info:",
      "\tdnac_host: ${1:}",
      "\t#associatedWlcIp: ${2:}",
      "\t#collectionInterval: ${3:}",
      "\t#collectionStatus: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#errorCode: ${11:}",
      "\t#family: ${12:}",
      "\t#headers: ${13:}",
      "\t#hostname: ${14:}",
      "\t#limit: ${15:}",
      "\t#macAddress: ${16:}",
      "\t#managementIpAddress: ${17:}",
      "\t#offset: ${18:}",
      "\t#platformId: ${19:}",
      "\t#reachabilityFailureReason: ${20:}",
      "\t#reachabilityStatus: ${21:}",
      "\t#role: ${22:}",
      "\t#roleSource: ${23:}",
      "\t#serialNumber: ${24:}",
      "\t#series: ${25:}",
      "\t#softwareType: ${26:}",
      "\t#softwareVersion: ${27:}",
      "\t#type: ${28:}",
      "\t#upTime: ${29:}",
      "\t#validate_response_schema: ${30:true}",
      "\t#vrfName: ${31:}"
    ]
  },
  "network_device_linecard_details_info": {
    "prefix": "network_device_linecard_details_info",
    "description": "Information module for Network Device Linecard Details",
    "body": [
      "cisco.dnac.network_device_linecard_details_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceUuid: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_meraki_organization_info": {
    "prefix": "network_device_meraki_organization_info",
    "description": "Information module for Network Device Meraki Organization",
    "body": [
      "cisco.dnac.network_device_meraki_organization_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_module_count_info": {
    "prefix": "network_device_module_count_info",
    "description": "Information module for Network Device Module Count",
    "body": [
      "cisco.dnac.network_device_module_count_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#nameList: ${10:}",
      "\t#operationalStateCodeList: ${11:}",
      "\t#partNumberList: ${12:}",
      "\t#validate_response_schema: ${13:true}",
      "\t#vendorEquipmentTypeList: ${14:}"
    ]
  },
  "network_device_module_info": {
    "prefix": "network_device_module_info",
    "description": "Information module for Network Device Module",
    "body": [
      "cisco.dnac.network_device_module_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#id: ${10:}",
      "\t#limit: ${11:}",
      "\t#nameList: ${12:}",
      "\t#offset: ${13:}",
      "\t#operationalStateCodeList: ${14:}",
      "\t#partNumberList: ${15:}",
      "\t#validate_response_schema: ${16:true}",
      "\t#vendorEquipmentTypeList: ${17:}"
    ]
  },
  "network_device_poe_info": {
    "prefix": "network_device_poe_info",
    "description": "Information module for Network Device Poe",
    "body": [
      "cisco.dnac.network_device_poe_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceUuid: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_polling_interval_info": {
    "prefix": "network_device_polling_interval_info",
    "description": "Information module for Network Device Polling Interval",
    "body": [
      "cisco.dnac.network_device_polling_interval_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_range_info": {
    "prefix": "network_device_range_info",
    "description": "Information module for Network Device Range",
    "body": [
      "cisco.dnac.network_device_range_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#recordsToReturn: ${9:}",
      "\t#startIndex: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_register_for_wsa_info": {
    "prefix": "network_device_register_for_wsa_info",
    "description": "Information module for Network Device Register For Wsa",
    "body": [
      "cisco.dnac.network_device_register_for_wsa_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#macaddress: ${9:}",
      "\t#serialNumber: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_stack_details_info": {
    "prefix": "network_device_stack_details_info",
    "description": "Information module for Network Device Stack Details",
    "body": [
      "cisco.dnac.network_device_stack_details_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_summary_info": {
    "prefix": "network_device_summary_info",
    "description": "Information module for Network Device Summary",
    "body": [
      "cisco.dnac.network_device_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_supervisor_card_details_info": {
    "prefix": "network_device_supervisor_card_details_info",
    "description": "Information module for Network Device Supervisor Card Details",
    "body": [
      "cisco.dnac.network_device_supervisor_card_details_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceUuid: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_sync": {
    "prefix": "network_device_sync",
    "description": "Resource module for Network Device Sync",
    "body": [
      "cisco.dnac.network_device_sync:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#forceSync: ${8:}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_update_role": {
    "prefix": "network_device_update_role",
    "description": "Resource module for Network Device Update Role",
    "body": [
      "cisco.dnac.network_device_update_role:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#role: ${9:}",
      "\t#roleSource: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_user_defined_field": {
    "prefix": "network_device_user_defined_field",
    "description": "Resource module for Network Device User Defined Field",
    "body": [
      "cisco.dnac.network_device_user_defined_field:",
      "\tdnac_host: ${1:}",
      "\t#description: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#id: ${9:}",
      "\t#name: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_user_defined_field_info": {
    "prefix": "network_device_user_defined_field_info",
    "description": "Information module for Network Device User Defined Field",
    "body": [
      "cisco.dnac.network_device_user_defined_field_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#name: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_vlan_info": {
    "prefix": "network_device_vlan_info",
    "description": "Information module for Network Device Vlan",
    "body": [
      "cisco.dnac.network_device_vlan_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#interfaceType: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_device_wireless_lan_info": {
    "prefix": "network_device_wireless_lan_info",
    "description": "Information module for Network Device Wireless Lan",
    "body": [
      "cisco.dnac.network_device_wireless_lan_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_device_with_snmp_v3_des_info": {
    "prefix": "network_device_with_snmp_v3_des_info",
    "description": "Information module for Network Device With Snmp V3 Des",
    "body": [
      "cisco.dnac.network_device_with_snmp_v3_des_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#limit: ${9:}",
      "\t#offset: ${10:}",
      "\t#order: ${11:}",
      "\t#siteId: ${12:}",
      "\t#sortBy: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "network_settings_intent": {
    "prefix": "network_settings_intent",
    "description": "Resource module for IP Address pools and network functions",
    "body": [
      "cisco.dnac.network_settings_intent:",
      "\tconfig: ${1:}",
      "\tdnac_host: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_log: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.2.3.3}",
      "\t#state: ${10:#merged|deleted}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "network_update": {
    "prefix": "network_update",
    "description": "Resource module for Network Update",
    "body": [
      "cisco.dnac.network_update:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#settings: ${8:}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_v2": {
    "prefix": "network_v2",
    "description": "Resource module for Network V2",
    "body": [
      "cisco.dnac.network_v2:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#settings: ${8:}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "network_v2_info": {
    "prefix": "network_v2_info",
    "description": "Information module for Network V2",
    "body": [
      "cisco.dnac.network_v2_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "nfv_profile": {
    "prefix": "nfv_profile",
    "description": "Resource module for Nfv Profile",
    "body": [
      "cisco.dnac.nfv_profile:",
      "\tdnac_host: ${1:}",
      "\t#device: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#id: ${9:}",
      "\t#name: ${10:}",
      "\t#profileName: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "nfv_profile_info": {
    "prefix": "nfv_profile_info",
    "description": "Information module for Nfv Profile",
    "body": [
      "cisco.dnac.nfv_profile_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#limit: ${10:}",
      "\t#name: ${11:}",
      "\t#offset: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "nfv_provision": {
    "prefix": "nfv_provision",
    "description": "Resource module for Nfv Provision",
    "body": [
      "cisco.dnac.nfv_provision:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#provisioning: ${9:}",
      "\t#siteProfile: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "nfv_provision_detail_info": {
    "prefix": "nfv_provision_detail_info",
    "description": "Information module for Nfv Provision Detail",
    "body": [
      "cisco.dnac.nfv_provision_detail_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceIp: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "nfv_provision_details": {
    "prefix": "nfv_provision_details",
    "description": "Resource module for Nfv Provision Details",
    "body": [
      "cisco.dnac.nfv_provision_details:",
      "\tdnac_host: ${1:}",
      "\t#device_ip: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "path_trace": {
    "prefix": "path_trace",
    "description": "Resource module for Path Trace",
    "body": [
      "cisco.dnac.path_trace:",
      "\tdnac_host: ${1:}",
      "\t#controlPath: ${2:}",
      "\t#destIP: ${3:}",
      "\t#destPort: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#flowAnalysisId: ${11:}",
      "\t#inclusions: ${12:}",
      "\t#periodicRefresh: ${13:}",
      "\t#protocol: ${14:}",
      "\t#sourceIP: ${15:}",
      "\t#sourcePort: ${16:}",
      "\t#validate_response_schema: ${17:true}"
    ]
  },
  "path_trace_info": {
    "prefix": "path_trace_info",
    "description": "Information module for Path Trace",
    "body": [
      "cisco.dnac.path_trace_info:",
      "\tdnac_host: ${1:}",
      "\t#destIP: ${2:}",
      "\t#destPort: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#flowAnalysisId: ${10:}",
      "\t#gtCreateTime: ${11:}",
      "\t#headers: ${12:}",
      "\t#lastUpdateTime: ${13:}",
      "\t#limit: ${14:}",
      "\t#ltCreateTime: ${15:}",
      "\t#offset: ${16:}",
      "\t#order: ${17:}",
      "\t#periodicRefresh: ${18:}",
      "\t#protocol: ${19:}",
      "\t#sortBy: ${20:}",
      "\t#sourceIP: ${21:}",
      "\t#sourcePort: ${22:}",
      "\t#status: ${23:}",
      "\t#taskId: ${24:}",
      "\t#validate_response_schema: ${25:true}"
    ]
  },
  "planned_access_points_info": {
    "prefix": "planned_access_points_info",
    "description": "Information module for Planned Access Points",
    "body": [
      "cisco.dnac.planned_access_points_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#floorId: ${8:}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#radios: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "platform_nodes_configuration_summary_info": {
    "prefix": "platform_nodes_configuration_summary_info",
    "description": "Information module for Platform Nodes Configuration Summary",
    "body": [
      "cisco.dnac.platform_nodes_configuration_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "platform_release_summary_info": {
    "prefix": "platform_release_summary_info",
    "description": "Information module for Platform Release Summary",
    "body": [
      "cisco.dnac.platform_release_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "pnp_device": {
    "prefix": "pnp_device",
    "description": "Resource module for Pnp Device",
    "body": [
      "cisco.dnac.pnp_device:",
      "\tdnac_host: ${1:}",
      "\t#_id: ${2:}",
      "\t#deviceInfo: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#id: ${10:}",
      "\t#runSummaryList: ${11:}",
      "\t#systemResetWorkflow: ${12:}",
      "\t#systemWorkflow: ${13:}",
      "\t#tenantId: ${14:}",
      "\t#validate_response_schema: ${15:true}",
      "\t#version: ${16:}",
      "\t#workflow: ${17:}",
      "\t#workflowParameters: ${18:}"
    ]
  },
  "pnp_device_authorize": {
    "prefix": "pnp_device_authorize",
    "description": "Resource module for Pnp Device Authorize",
    "body": [
      "cisco.dnac.pnp_device_authorize:",
      "\tdnac_host: ${1:}",
      "\t#deviceIdList: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "pnp_device_claim": {
    "prefix": "pnp_device_claim",
    "description": "Resource module for Pnp Device Claim",
    "body": [
      "cisco.dnac.pnp_device_claim:",
      "\tdnac_host: ${1:}",
      "\t#configFileUrl: ${2:}",
      "\t#configId: ${3:}",
      "\t#deviceClaimList: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#fileServiceId: ${11:}",
      "\t#imageId: ${12:}",
      "\t#imageUrl: ${13:}",
      "\t#populateInventory: ${14:}",
      "\t#projectId: ${15:}",
      "\t#validate_response_schema: ${16:true}",
      "\t#workflowId: ${17:}"
    ]
  },
  "pnp_device_claim_to_site": {
    "prefix": "pnp_device_claim_to_site",
    "description": "Resource module for Pnp Device Claim To Site",
    "body": [
      "cisco.dnac.pnp_device_claim_to_site:",
      "\tdnac_host: ${1:}",
      "\t#configInfo: ${2:}",
      "\t#deviceId: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#gateway: ${10:}",
      "\t#imageInfo: ${11:}",
      "\t#interfaceName: ${12:}",
      "\t#rfProfile: ${13:}",
      "\t#sensorProfile: ${14:}",
      "\t#siteId: ${15:}",
      "\t#staticIP: ${16:}",
      "\t#subnetMask: ${17:}",
      "\t#type: ${18:}",
      "\t#validate_response_schema: ${19:true}",
      "\t#vlanID: ${20:}"
    ]
  },
  "pnp_device_config_preview": {
    "prefix": "pnp_device_config_preview",
    "description": "Resource module for Pnp Device Config Preview",
    "body": [
      "cisco.dnac.pnp_device_config_preview:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#siteId: ${9:}",
      "\t#type: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "pnp_device_count_info": {
    "prefix": "pnp_device_count_info",
    "description": "Information module for Pnp Device Count",
    "body": [
      "cisco.dnac.pnp_device_count_info:",
      "\tdnac_host: ${1:}",
      "\t#cmState: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#lastContact: ${10:}",
      "\t#name: ${11:}",
      "\t#onbState: ${12:}",
      "\t#pid: ${13:}",
      "\t#projectId: ${14:}",
      "\t#projectName: ${15:}",
      "\t#serialNumber: ${16:}",
      "\t#smartAccountId: ${17:}",
      "\t#source: ${18:}",
      "\t#state_: ${19:}",
      "\t#validate_response_schema: ${20:true}",
      "\t#virtualAccountId: ${21:}",
      "\t#workflowId: ${22:}",
      "\t#workflowName: ${23:}"
    ]
  },
  "pnp_device_history_info": {
    "prefix": "pnp_device_history_info",
    "description": "Information module for Pnp Device History",
    "body": [
      "cisco.dnac.pnp_device_history_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#serialNumber: ${9:}",
      "\t#sort: ${10:}",
      "\t#sortOrder: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "pnp_device_import": {
    "prefix": "pnp_device_import",
    "description": "Resource module for Pnp Device Import",
    "body": [
      "cisco.dnac.pnp_device_import:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "pnp_device_info": {
    "prefix": "pnp_device_info",
    "description": "Information module for Pnp Device",
    "body": [
      "cisco.dnac.pnp_device_info:",
      "\tdnac_host: ${1:}",
      "\t#cmState: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#hostname: ${10:}",
      "\t#id: ${11:}",
      "\t#lastContact: ${12:}",
      "\t#limit: ${13:}",
      "\t#macAddress: ${14:}",
      "\t#name: ${15:}",
      "\t#offset: ${16:}",
      "\t#onbState: ${17:}",
      "\t#pid: ${18:}",
      "\t#projectId: ${19:}",
      "\t#projectName: ${20:}",
      "\t#serialNumber: ${21:}",
      "\t#siteName: ${22:}",
      "\t#smartAccountId: ${23:}",
      "\t#sort: ${24:}",
      "\t#sortOrder: ${25:}",
      "\t#source: ${26:}",
      "\t#state_: ${27:}",
      "\t#validate_response_schema: ${28:true}",
      "\t#virtualAccountId: ${29:}",
      "\t#workflowId: ${30:}",
      "\t#workflowName: ${31:}"
    ]
  },
  "pnp_device_reset": {
    "prefix": "pnp_device_reset",
    "description": "Resource module for Pnp Device Reset",
    "body": [
      "cisco.dnac.pnp_device_reset:",
      "\tdnac_host: ${1:}",
      "\t#deviceResetList: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#projectId: ${9:}",
      "\t#validate_response_schema: ${10:true}",
      "\t#workflowId: ${11:}"
    ]
  },
  "pnp_device_unclaim": {
    "prefix": "pnp_device_unclaim",
    "description": "Resource module for Pnp Device Unclaim",
    "body": [
      "cisco.dnac.pnp_device_unclaim:",
      "\tdnac_host: ${1:}",
      "\t#deviceIdList: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "pnp_global_settings": {
    "prefix": "pnp_global_settings",
    "description": "Resource module for Pnp Global Settings",
    "body": [
      "cisco.dnac.pnp_global_settings:",
      "\tdnac_host: ${1:}",
      "\t#_id: ${2:}",
      "\t#aaaCredentials: ${3:}",
      "\t#acceptEula: ${4:}",
      "\t#defaultProfile: ${5:}",
      "\t#dnac_debug: ${6:false}",
      "\t#dnac_password: ${7:}",
      "\t#dnac_port: ${8:443}",
      "\t#dnac_username: ${9:admin}",
      "\t#dnac_verify: ${10:true}",
      "\t#dnac_version: ${11:2.3.5.3}",
      "\t#savaMappingList: ${12:}",
      "\t#taskTimeOuts: ${13:}",
      "\t#tenantId: ${14:}",
      "\t#validate_response_schema: ${15:true}",
      "\t#version: ${16:}"
    ]
  },
  "pnp_global_settings_info": {
    "prefix": "pnp_global_settings_info",
    "description": "Information module for Pnp Global Settings",
    "body": [
      "cisco.dnac.pnp_global_settings_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "pnp_intent": {
    "prefix": "pnp_intent",
    "description": "Resource module for Site and PnP related functions",
    "body": [
      "cisco.dnac.pnp_intent:",
      "\tconfig: ${1:}",
      "\tdnac_host: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_log: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.2.3.3}",
      "\t#state: ${10:#merged|deleted}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "pnp_server_profile_update": {
    "prefix": "pnp_server_profile_update",
    "description": "Resource module for Pnp Server Profile Update",
    "body": [
      "cisco.dnac.pnp_server_profile_update:",
      "\tdnac_host: ${1:}",
      "\t#autoSyncPeriod: ${2:}",
      "\t#ccoUser: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#expiry: ${10:}",
      "\t#lastSync: ${11:}",
      "\t#profile: ${12:}",
      "\t#smartAccountId: ${13:}",
      "\t#syncResult: ${14:}",
      "\t#syncResultStr: ${15:}",
      "\t#syncStartTime: ${16:}",
      "\t#syncStatus: ${17:}",
      "\t#tenantId: ${18:}",
      "\t#token: ${19:}",
      "\t#validate_response_schema: ${20:true}",
      "\t#virtualAccountId: ${21:}"
    ]
  },
  "pnp_smart_account_domains_info": {
    "prefix": "pnp_smart_account_domains_info",
    "description": "Information module for Pnp Smart Account Domains",
    "body": [
      "cisco.dnac.pnp_smart_account_domains_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "pnp_virtual_account_add": {
    "prefix": "pnp_virtual_account_add",
    "description": "Resource module for Pnp Virtual Account Add",
    "body": [
      "cisco.dnac.pnp_virtual_account_add:",
      "\tdnac_host: ${1:}",
      "\t#autoSyncPeriod: ${2:}",
      "\t#ccoUser: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#expiry: ${10:}",
      "\t#lastSync: ${11:}",
      "\t#profile: ${12:}",
      "\t#smartAccountId: ${13:}",
      "\t#syncResult: ${14:}",
      "\t#syncResultStr: ${15:}",
      "\t#syncStartTime: ${16:}",
      "\t#syncStatus: ${17:}",
      "\t#tenantId: ${18:}",
      "\t#token: ${19:}",
      "\t#validate_response_schema: ${20:true}",
      "\t#virtualAccountId: ${21:}"
    ]
  },
  "pnp_virtual_account_deregister": {
    "prefix": "pnp_virtual_account_deregister",
    "description": "Resource module for Pnp Virtual Account Deregister",
    "body": [
      "cisco.dnac.pnp_virtual_account_deregister:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#domain: ${8:}",
      "\t#name: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "pnp_virtual_account_devices_sync": {
    "prefix": "pnp_virtual_account_devices_sync",
    "description": "Resource module for Pnp Virtual Account Devices Sync",
    "body": [
      "cisco.dnac.pnp_virtual_account_devices_sync:",
      "\tdnac_host: ${1:}",
      "\t#autoSyncPeriod: ${2:}",
      "\t#ccoUser: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#expiry: ${10:}",
      "\t#lastSync: ${11:}",
      "\t#profile: ${12:}",
      "\t#smartAccountId: ${13:}",
      "\t#syncResult: ${14:}",
      "\t#syncResultStr: ${15:}",
      "\t#syncStartTime: ${16:}",
      "\t#syncStatus: ${17:}",
      "\t#tenantId: ${18:}",
      "\t#token: ${19:}",
      "\t#validate_response_schema: ${20:true}",
      "\t#virtualAccountId: ${21:}"
    ]
  },
  "pnp_virtual_account_sync_result_info": {
    "prefix": "pnp_virtual_account_sync_result_info",
    "description": "Information module for Pnp Virtual Account Sync Result",
    "body": [
      "cisco.dnac.pnp_virtual_account_sync_result_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#domain: ${8:}",
      "\t#headers: ${9:}",
      "\t#name: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "pnp_virtual_accounts_info": {
    "prefix": "pnp_virtual_accounts_info",
    "description": "Information module for Pnp Virtual Accounts",
    "body": [
      "cisco.dnac.pnp_virtual_accounts_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#domain: ${8:}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "pnp_workflow": {
    "prefix": "pnp_workflow",
    "description": "Resource module for Pnp Workflow",
    "body": [
      "cisco.dnac.pnp_workflow:",
      "\tdnac_host: ${1:}",
      "\t#_id: ${2:}",
      "\t#addToInventory: ${3:}",
      "\t#addedOn: ${4:}",
      "\t#configId: ${5:}",
      "\t#currTaskIdx: ${6:}",
      "\t#description: ${7:}",
      "\t#dnac_debug: ${8:false}",
      "\t#dnac_password: ${9:}",
      "\t#dnac_port: ${10:443}",
      "\t#dnac_username: ${11:admin}",
      "\t#dnac_verify: ${12:true}",
      "\t#dnac_version: ${13:2.3.5.3}",
      "\t#endTime: ${14:}",
      "\t#execTime: ${15:}",
      "\t#id: ${16:}",
      "\t#imageId: ${17:}",
      "\t#instanceType: ${18:}",
      "\t#lastupdateOn: ${19:}",
      "\t#name: ${20:}",
      "\t#startTime: ${21:}",
      "\t#state_: ${22:}",
      "\t#tasks: ${23:}",
      "\t#tenantId: ${24:}",
      "\t#type: ${25:}",
      "\t#useState: ${26:}",
      "\t#validate_response_schema: ${27:true}",
      "\t#version: ${28:}"
    ]
  },
  "pnp_workflow_count_info": {
    "prefix": "pnp_workflow_count_info",
    "description": "Information module for Pnp Workflow Count",
    "body": [
      "cisco.dnac.pnp_workflow_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#name: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "pnp_workflow_info": {
    "prefix": "pnp_workflow_info",
    "description": "Information module for Pnp Workflow",
    "body": [
      "cisco.dnac.pnp_workflow_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#limit: ${10:}",
      "\t#name: ${11:}",
      "\t#offset: ${12:}",
      "\t#sort: ${13:}",
      "\t#sortOrder: ${14:}",
      "\t#type: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "profiling_rules_count_info": {
    "prefix": "profiling_rules_count_info",
    "description": "Information module for Profiling Rules Count",
    "body": [
      "cisco.dnac.profiling_rules_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#includeDeleted: ${9:}",
      "\t#ruleType: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "profiling_rules_in_bulk_create": {
    "prefix": "profiling_rules_in_bulk_create",
    "description": "Resource module for Profiling Rules In Bulk Create",
    "body": [
      "cisco.dnac.profiling_rules_in_bulk_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#profilingRules: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "projects_details_info": {
    "prefix": "projects_details_info",
    "description": "Information module for Projects Details",
    "body": [
      "cisco.dnac.projects_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#limit: ${10:}",
      "\t#name: ${11:}",
      "\t#offset: ${12:}",
      "\t#sortOrder: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "qos_device_interface": {
    "prefix": "qos_device_interface",
    "description": "Resource module for Qos Device Interface",
    "body": [
      "cisco.dnac.qos_device_interface:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "qos_device_interface_info": {
    "prefix": "qos_device_interface_info",
    "description": "Information module for Qos Device Interface",
    "body": [
      "cisco.dnac.qos_device_interface_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#networkDeviceId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "qos_device_interface_info_count_info": {
    "prefix": "qos_device_interface_info_count_info",
    "description": "Information module for Qos Device Interface Info Count",
    "body": [
      "cisco.dnac.qos_device_interface_info_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "reports": {
    "prefix": "reports",
    "description": "Resource module for Reports",
    "body": [
      "cisco.dnac.reports:",
      "\tdnac_host: ${1:}",
      "\t#deliveries: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#name: ${9:}",
      "\t#reportId: ${10:}",
      "\t#schedule: ${11:}",
      "\t#tags: ${12:}",
      "\t#validate_response_schema: ${13:true}",
      "\t#view: ${14:}",
      "\t#viewGroupId: ${15:}",
      "\t#viewGroupVersion: ${16:}"
    ]
  },
  "reports_executions_info": {
    "prefix": "reports_executions_info",
    "description": "Information module for Reports Executions",
    "body": [
      "cisco.dnac.reports_executions_info:",
      "\tdnac_host: ${1:}",
      "\t#dirPath: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#executionId: ${9:}",
      "\t#filename: ${10:}",
      "\t#headers: ${11:}",
      "\t#reportId: ${12:}",
      "\t#saveFile: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "reports_info": {
    "prefix": "reports_info",
    "description": "Information module for Reports",
    "body": [
      "cisco.dnac.reports_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#reportId: ${9:}",
      "\t#validate_response_schema: ${10:true}",
      "\t#viewGroupId: ${11:}",
      "\t#viewId: ${12:}"
    ]
  },
  "reports_view_group_info": {
    "prefix": "reports_view_group_info",
    "description": "Information module for Reports View Group",
    "body": [
      "cisco.dnac.reports_view_group_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}",
      "\t#viewGroupId: ${10:}"
    ]
  },
  "reports_view_group_view_info": {
    "prefix": "reports_view_group_view_info",
    "description": "Information module for Reports View Group View",
    "body": [
      "cisco.dnac.reports_view_group_view_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}",
      "\t#viewGroupId: ${10:}",
      "\t#viewId: ${11:}"
    ]
  },
  "reserve_ip_subpool": {
    "prefix": "reserve_ip_subpool",
    "description": "Resource module for Reserve Ip Subpool",
    "body": [
      "cisco.dnac.reserve_ip_subpool:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#ipv4DhcpServers: ${9:}",
      "\t#ipv4DnsServers: ${10:}",
      "\t#ipv4GateWay: ${11:}",
      "\t#ipv4GlobalPool: ${12:}",
      "\t#ipv4Prefix: ${13:}",
      "\t#ipv4PrefixLength: ${14:}",
      "\t#ipv4Subnet: ${15:}",
      "\t#ipv4TotalHost: ${16:}",
      "\t#ipv6AddressSpace: ${17:}",
      "\t#ipv6DhcpServers: ${18:}",
      "\t#ipv6DnsServers: ${19:}",
      "\t#ipv6GateWay: ${20:}",
      "\t#ipv6GlobalPool: ${21:}",
      "\t#ipv6Prefix: ${22:}",
      "\t#ipv6PrefixLength: ${23:}",
      "\t#ipv6Subnet: ${24:}",
      "\t#ipv6TotalHost: ${25:}",
      "\t#name: ${26:}",
      "\t#siteId: ${27:}",
      "\t#slaacSupport: ${28:}",
      "\t#type: ${29:}",
      "\t#validate_response_schema: ${30:true}"
    ]
  },
  "reserve_ip_subpool_create": {
    "prefix": "reserve_ip_subpool_create",
    "description": "Resource module for Reserve Ip Subpool Create",
    "body": [
      "cisco.dnac.reserve_ip_subpool_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#ipv4DhcpServers: ${8:}",
      "\t#ipv4DnsServers: ${9:}",
      "\t#ipv4GateWay: ${10:}",
      "\t#ipv4GlobalPool: ${11:}",
      "\t#ipv4Prefix: ${12:}",
      "\t#ipv4PrefixLength: ${13:}",
      "\t#ipv4Subnet: ${14:}",
      "\t#ipv4TotalHost: ${15:}",
      "\t#ipv6AddressSpace: ${16:}",
      "\t#ipv6DhcpServers: ${17:}",
      "\t#ipv6DnsServers: ${18:}",
      "\t#ipv6GateWay: ${19:}",
      "\t#ipv6GlobalPool: ${20:}",
      "\t#ipv6Prefix: ${21:}",
      "\t#ipv6PrefixLength: ${22:}",
      "\t#ipv6Subnet: ${23:}",
      "\t#ipv6TotalHost: ${24:}",
      "\t#name: ${25:}",
      "\t#siteId: ${26:}",
      "\t#slaacSupport: ${27:}",
      "\t#type: ${28:}",
      "\t#validate_response_schema: ${29:true}"
    ]
  },
  "reserve_ip_subpool_delete": {
    "prefix": "reserve_ip_subpool_delete",
    "description": "Resource module for Reserve Ip Subpool Delete",
    "body": [
      "cisco.dnac.reserve_ip_subpool_delete:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "reserve_ip_subpool_info": {
    "prefix": "reserve_ip_subpool_info",
    "description": "Information module for Reserve Ip Subpool",
    "body": [
      "cisco.dnac.reserve_ip_subpool_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#limit: ${9:}",
      "\t#offset: ${10:}",
      "\t#siteId: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "reserve_ip_subpool_update": {
    "prefix": "reserve_ip_subpool_update",
    "description": "Resource module for Reserve Ip Subpool Update",
    "body": [
      "cisco.dnac.reserve_ip_subpool_update:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#ipv4DhcpServers: ${9:}",
      "\t#ipv4DnsServers: ${10:}",
      "\t#ipv4GateWay: ${11:}",
      "\t#ipv6AddressSpace: ${12:}",
      "\t#ipv6DhcpServers: ${13:}",
      "\t#ipv6DnsServers: ${14:}",
      "\t#ipv6GateWay: ${15:}",
      "\t#ipv6GlobalPool: ${16:}",
      "\t#ipv6Prefix: ${17:}",
      "\t#ipv6PrefixLength: ${18:}",
      "\t#ipv6Subnet: ${19:}",
      "\t#ipv6TotalHost: ${20:}",
      "\t#name: ${21:}",
      "\t#siteId: ${22:}",
      "\t#slaacSupport: ${23:}",
      "\t#validate_response_schema: ${24:true}"
    ]
  },
  "role_permissions_info": {
    "prefix": "role_permissions_info",
    "description": "Information module for Role Permissions",
    "body": [
      "cisco.dnac.role_permissions_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "roles_info": {
    "prefix": "roles_info",
    "description": "Information module for Roles",
    "body": [
      "cisco.dnac.roles_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "sda_count_info": {
    "prefix": "sda_count_info",
    "description": "Information module for Sda Count",
    "body": [
      "cisco.dnac.sda_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "sda_device_info": {
    "prefix": "sda_device_info",
    "description": "Information module for Sda Device",
    "body": [
      "cisco.dnac.sda_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_device_role_info": {
    "prefix": "sda_device_role_info",
    "description": "Information module for Sda Device Role",
    "body": [
      "cisco.dnac.sda_device_role_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_fabric": {
    "prefix": "sda_fabric",
    "description": "Resource module for Sda Fabric",
    "body": [
      "cisco.dnac.sda_fabric:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#fabricName: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "sda_fabric_authentication_profile": {
    "prefix": "sda_fabric_authentication_profile",
    "description": "Resource module for Sda Fabric Authentication Profile",
    "body": [
      "cisco.dnac.sda_fabric_authentication_profile:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_fabric_authentication_profile_info": {
    "prefix": "sda_fabric_authentication_profile_info",
    "description": "Information module for Sda Fabric Authentication Profile",
    "body": [
      "cisco.dnac.sda_fabric_authentication_profile_info:",
      "\tdnac_host: ${1:}",
      "\t#authenticateTemplateName: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#siteNameHierarchy: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "sda_fabric_border_device": {
    "prefix": "sda_fabric_border_device",
    "description": "Resource module for Sda Fabric Border Device",
    "body": [
      "cisco.dnac.sda_fabric_border_device:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_fabric_border_device_info": {
    "prefix": "sda_fabric_border_device_info",
    "description": "Information module for Sda Fabric Border Device",
    "body": [
      "cisco.dnac.sda_fabric_border_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_fabric_control_plane_device": {
    "prefix": "sda_fabric_control_plane_device",
    "description": "Resource module for Sda Fabric Control Plane Device",
    "body": [
      "cisco.dnac.sda_fabric_control_plane_device:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#routeDistributionProtocol: ${9:}",
      "\t#siteNameHierarchy: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "sda_fabric_control_plane_device_info": {
    "prefix": "sda_fabric_control_plane_device_info",
    "description": "Information module for Sda Fabric Control Plane Device",
    "body": [
      "cisco.dnac.sda_fabric_control_plane_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_fabric_edge_device": {
    "prefix": "sda_fabric_edge_device",
    "description": "Resource module for Sda Fabric Edge Device",
    "body": [
      "cisco.dnac.sda_fabric_edge_device:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_fabric_edge_device_info": {
    "prefix": "sda_fabric_edge_device_info",
    "description": "Information module for Sda Fabric Edge Device",
    "body": [
      "cisco.dnac.sda_fabric_edge_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_fabric_info": {
    "prefix": "sda_fabric_info",
    "description": "Information module for Sda Fabric",
    "body": [
      "cisco.dnac.sda_fabric_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#fabricName: ${8:}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_fabric_site": {
    "prefix": "sda_fabric_site",
    "description": "Resource module for Sda Fabric Site",
    "body": [
      "cisco.dnac.sda_fabric_site:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#fabricName: ${8:}",
      "\t#fabricType: ${9:}",
      "\t#siteNameHierarchy: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "sda_fabric_site_info": {
    "prefix": "sda_fabric_site_info",
    "description": "Information module for Sda Fabric Site",
    "body": [
      "cisco.dnac.sda_fabric_site_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_multicast": {
    "prefix": "sda_multicast",
    "description": "Resource module for Sda Multicast",
    "body": [
      "cisco.dnac.sda_multicast:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#multicastMethod: ${8:}",
      "\t#multicastType: ${9:}",
      "\t#multicastVnInfo: ${10:}",
      "\t#siteNameHierarchy: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "sda_multicast_info": {
    "prefix": "sda_multicast_info",
    "description": "Information module for Sda Multicast",
    "body": [
      "cisco.dnac.sda_multicast_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_port_assignment_for_access_point": {
    "prefix": "sda_port_assignment_for_access_point",
    "description": "Resource module for Sda Port Assignment For Access Point",
    "body": [
      "cisco.dnac.sda_port_assignment_for_access_point:",
      "\tdnac_host: ${1:}",
      "\t#authenticateTemplateName: ${2:}",
      "\t#dataIpAddressPoolName: ${3:}",
      "\t#deviceManagementIpAddress: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#interfaceDescription: ${11:}",
      "\t#interfaceName: ${12:}",
      "\t#siteNameHierarchy: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "sda_port_assignment_for_access_point_info": {
    "prefix": "sda_port_assignment_for_access_point_info",
    "description": "Information module for Sda Port Assignment For Access Point",
    "body": [
      "cisco.dnac.sda_port_assignment_for_access_point_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#interfaceName: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "sda_port_assignment_for_user_device": {
    "prefix": "sda_port_assignment_for_user_device",
    "description": "Resource module for Sda Port Assignment For User Device",
    "body": [
      "cisco.dnac.sda_port_assignment_for_user_device:",
      "\tdnac_host: ${1:}",
      "\t#authenticateTemplateName: ${2:}",
      "\t#dataIpAddressPoolName: ${3:}",
      "\t#deviceManagementIpAddress: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#interfaceDescription: ${11:}",
      "\t#interfaceName: ${12:}",
      "\t#interfaceNames: ${13:}",
      "\t#scalableGroupName: ${14:}",
      "\t#siteNameHierarchy: ${15:}",
      "\t#validate_response_schema: ${16:true}",
      "\t#voiceIpAddressPoolName: ${17:}"
    ]
  },
  "sda_port_assignment_for_user_device_info": {
    "prefix": "sda_port_assignment_for_user_device_info",
    "description": "Information module for Sda Port Assignment For User Device",
    "body": [
      "cisco.dnac.sda_port_assignment_for_user_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#interfaceName: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "sda_provision_device": {
    "prefix": "sda_provision_device",
    "description": "Resource module for Sda Provision Device",
    "body": [
      "cisco.dnac.sda_provision_device:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_provision_device_info": {
    "prefix": "sda_provision_device_info",
    "description": "Information module for Sda Provision Device",
    "body": [
      "cisco.dnac.sda_provision_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceManagementIpAddress: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sda_virtual_network": {
    "prefix": "sda_virtual_network",
    "description": "Resource module for Sda Virtual Network",
    "body": [
      "cisco.dnac.sda_virtual_network:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#siteNameHierarchy: ${8:}",
      "\t#validate_response_schema: ${9:true}",
      "\t#virtualNetworkName: ${10:}"
    ]
  },
  "sda_virtual_network_info": {
    "prefix": "sda_virtual_network_info",
    "description": "Information module for Sda Virtual Network",
    "body": [
      "cisco.dnac.sda_virtual_network_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteNameHierarchy: ${9:}",
      "\t#validate_response_schema: ${10:true}",
      "\t#virtualNetworkName: ${11:}"
    ]
  },
  "sda_virtual_network_ip_pool": {
    "prefix": "sda_virtual_network_ip_pool",
    "description": "Resource module for Sda Virtual Network Ip Pool",
    "body": [
      "cisco.dnac.sda_virtual_network_ip_pool:",
      "\tdnac_host: ${1:}",
      "\t#autoGenerateVlanName: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#ipPoolName: ${9:}",
      "\t#isBridgeModeVm: ${10:}",
      "\t#isCommonPool: ${11:}",
      "\t#isIpDirectedBroadcast: ${12:}",
      "\t#isL2FloodingEnabled: ${13:}",
      "\t#isLayer2Only: ${14:}",
      "\t#isThisCriticalPool: ${15:}",
      "\t#isWirelessPool: ${16:}",
      "\t#poolType: ${17:}",
      "\t#scalableGroupName: ${18:}",
      "\t#siteNameHierarchy: ${19:}",
      "\t#trafficType: ${20:}",
      "\t#validate_response_schema: ${21:true}",
      "\t#virtualNetworkName: ${22:}",
      "\t#vlanId: ${23:}",
      "\t#vlanName: ${24:}"
    ]
  },
  "sda_virtual_network_ip_pool_info": {
    "prefix": "sda_virtual_network_ip_pool_info",
    "description": "Information module for Sda Virtual Network Ip Pool",
    "body": [
      "cisco.dnac.sda_virtual_network_ip_pool_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#ipPoolName: ${9:}",
      "\t#siteNameHierarchy: ${10:}",
      "\t#validate_response_schema: ${11:true}",
      "\t#virtualNetworkName: ${12:}"
    ]
  },
  "sda_virtual_network_v2": {
    "prefix": "sda_virtual_network_v2",
    "description": "Resource module for Sda Virtual Network V2",
    "body": [
      "cisco.dnac.sda_virtual_network_v2:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#isGuestVirtualNetwork: ${8:}",
      "\t#scalableGroupNames: ${9:}",
      "\t#vManageVpnId: ${10:}",
      "\t#validate_response_schema: ${11:true}",
      "\t#virtualNetworkName: ${12:}"
    ]
  },
  "sda_virtual_network_v2_info": {
    "prefix": "sda_virtual_network_v2_info",
    "description": "Information module for Sda Virtual Network V2",
    "body": [
      "cisco.dnac.sda_virtual_network_v2_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}",
      "\t#virtualNetworkName: ${10:}"
    ]
  },
  "security_advisories_devices_info": {
    "prefix": "security_advisories_devices_info",
    "description": "Information module for Security Advisories Devices",
    "body": [
      "cisco.dnac.security_advisories_devices_info:",
      "\tdnac_host: ${1:}",
      "\t#advisoryId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "security_advisories_ids_per_device_info": {
    "prefix": "security_advisories_ids_per_device_info",
    "description": "Information module for Security Advisories Ids Per Device",
    "body": [
      "cisco.dnac.security_advisories_ids_per_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "security_advisories_info": {
    "prefix": "security_advisories_info",
    "description": "Information module for Security Advisories",
    "body": [
      "cisco.dnac.security_advisories_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "security_advisories_per_device_info": {
    "prefix": "security_advisories_per_device_info",
    "description": "Information module for Security Advisories Per Device",
    "body": [
      "cisco.dnac.security_advisories_per_device_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "security_advisories_summary_info": {
    "prefix": "security_advisories_summary_info",
    "description": "Information module for Security Advisories Summary",
    "body": [
      "cisco.dnac.security_advisories_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "sensor": {
    "prefix": "sensor",
    "description": "Resource module for Sensor",
    "body": [
      "cisco.dnac.sensor:",
      "\tdnac_host: ${1:}",
      "\t#apCoverage: ${2:}",
      "\t#connection: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#modelVersion: ${10:}",
      "\t#name: ${11:}",
      "\t#ssids: ${12:}",
      "\t#templateName: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "sensor_info": {
    "prefix": "sensor_info",
    "description": "Information module for Sensor",
    "body": [
      "cisco.dnac.sensor_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sensor_test_run": {
    "prefix": "sensor_test_run",
    "description": "Resource module for Sensor Test Run",
    "body": [
      "cisco.dnac.sensor_test_run:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#templateName: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "sensor_test_template_duplicate": {
    "prefix": "sensor_test_template_duplicate",
    "description": "Resource module for Sensor Test Template Duplicate",
    "body": [
      "cisco.dnac.sensor_test_template_duplicate:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#newTemplateName: ${8:}",
      "\t#templateName: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "sensor_test_template_edit": {
    "prefix": "sensor_test_template_edit",
    "description": "Resource module for Sensor Test Template Edit",
    "body": [
      "cisco.dnac.sensor_test_template_edit:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#locationInfoList: ${8:}",
      "\t#schedule: ${9:}",
      "\t#templateName: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "service_provider_create": {
    "prefix": "service_provider_create",
    "description": "Resource module for Service Provider Create",
    "body": [
      "cisco.dnac.service_provider_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#settings: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "service_provider_info": {
    "prefix": "service_provider_info",
    "description": "Information module for Service Provider",
    "body": [
      "cisco.dnac.service_provider_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "service_provider_profile_delete": {
    "prefix": "service_provider_profile_delete",
    "description": "Resource module for Service Provider Profile Delete",
    "body": [
      "cisco.dnac.service_provider_profile_delete:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#spProfileName: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "service_provider_update": {
    "prefix": "service_provider_update",
    "description": "Resource module for Service Provider Update",
    "body": [
      "cisco.dnac.service_provider_update:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#settings: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "service_provider_v2": {
    "prefix": "service_provider_v2",
    "description": "Resource module for Service Provider V2",
    "body": [
      "cisco.dnac.service_provider_v2:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#settings: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "service_provider_v2_info": {
    "prefix": "service_provider_v2_info",
    "description": "Information module for Service Provider V2",
    "body": [
      "cisco.dnac.service_provider_v2_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "site_assign_credential": {
    "prefix": "site_assign_credential",
    "description": "Resource module for Site Assign Credential",
    "body": [
      "cisco.dnac.site_assign_credential:",
      "\tdnac_host: ${1:}",
      "\t#cliId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#httpRead: ${10:}",
      "\t#httpWrite: ${11:}",
      "\t#siteId: ${12:}",
      "\t#snmpV2ReadId: ${13:}",
      "\t#snmpV2WriteId: ${14:}",
      "\t#snmpV3Id: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "site_assign_device": {
    "prefix": "site_assign_device",
    "description": "Resource module for Site Assign Device",
    "body": [
      "cisco.dnac.site_assign_device:",
      "\tdnac_host: ${1:}",
      "\t#device: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "site_count_info": {
    "prefix": "site_count_info",
    "description": "Information module for Site Count",
    "body": [
      "cisco.dnac.site_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#siteId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "site_create": {
    "prefix": "site_create",
    "description": "Resource module for Site Create",
    "body": [
      "cisco.dnac.site_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#site: ${9:}",
      "\t#type: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "site_delete": {
    "prefix": "site_delete",
    "description": "Resource module for Site Delete",
    "body": [
      "cisco.dnac.site_delete:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#siteId: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "site_design_floormap": {
    "prefix": "site_design_floormap",
    "description": "Resource module for Site Design Floormap",
    "body": [
      "cisco.dnac.site_design_floormap:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#floorId: ${8:}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "site_design_floormap_info": {
    "prefix": "site_design_floormap_info",
    "description": "Information module for Site Design Floormap",
    "body": [
      "cisco.dnac.site_design_floormap_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#floorId: ${8:}",
      "\t#headers: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "site_health_info": {
    "prefix": "site_health_info",
    "description": "Information module for Site Health",
    "body": [
      "cisco.dnac.site_health_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#limit: ${9:}",
      "\t#offset: ${10:}",
      "\t#siteType: ${11:}",
      "\t#timestamp: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "site_info": {
    "prefix": "site_info",
    "description": "Information module for Site",
    "body": [
      "cisco.dnac.site_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#limit: ${9:}",
      "\t#name: ${10:}",
      "\t#offset: ${11:}",
      "\t#siteId: ${12:}",
      "\t#type: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "site_intent": {
    "prefix": "site_intent",
    "description": "Resource module for Site operations",
    "body": [
      "cisco.dnac.site_intent:",
      "\tconfig: ${1:}",
      "\tdnac_host: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_log: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.2.3.3}",
      "\t#state: ${10:#merged|deleted}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "site_membership_info": {
    "prefix": "site_membership_info",
    "description": "Information module for Site Membership",
    "body": [
      "cisco.dnac.site_membership_info:",
      "\tdnac_host: ${1:}",
      "\t#deviceFamily: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#serialNumber: ${12:}",
      "\t#siteId: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "site_update": {
    "prefix": "site_update",
    "description": "Resource module for Site Update",
    "body": [
      "cisco.dnac.site_update:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#site: ${9:}",
      "\t#siteId: ${10:}",
      "\t#type: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "snmp_properties": {
    "prefix": "snmp_properties",
    "description": "Resource module for Snmp Properties",
    "body": [
      "cisco.dnac.snmp_properties:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "snmp_properties_info": {
    "prefix": "snmp_properties_info",
    "description": "Information module for Snmp Properties",
    "body": [
      "cisco.dnac.snmp_properties_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "snmpv2_read_community_credential": {
    "prefix": "snmpv2_read_community_credential",
    "description": "Resource module for Snmpv2 Read Community Credential",
    "body": [
      "cisco.dnac.snmpv2_read_community_credential:",
      "\tdnac_host: ${1:}",
      "\t#comments: ${2:}",
      "\t#credentialType: ${3:}",
      "\t#description: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#instanceUuid: ${11:}",
      "\t#readCommunity: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "snmpv2_write_community_credential": {
    "prefix": "snmpv2_write_community_credential",
    "description": "Resource module for Snmpv2 Write Community Credential",
    "body": [
      "cisco.dnac.snmpv2_write_community_credential:",
      "\tdnac_host: ${1:}",
      "\t#comments: ${2:}",
      "\t#credentialType: ${3:}",
      "\t#description: ${4:}",
      "\t#dnac_debug: ${5:false}",
      "\t#dnac_password: ${6:}",
      "\t#dnac_port: ${7:443}",
      "\t#dnac_username: ${8:admin}",
      "\t#dnac_verify: ${9:true}",
      "\t#dnac_version: ${10:2.3.5.3}",
      "\t#instanceUuid: ${11:}",
      "\t#validate_response_schema: ${12:true}",
      "\t#writeCommunity: ${13:}"
    ]
  },
  "snmpv3_credential": {
    "prefix": "snmpv3_credential",
    "description": "Resource module for Snmpv3 Credential",
    "body": [
      "cisco.dnac.snmpv3_credential:",
      "\tdnac_host: ${1:}",
      "\t#authPassword: ${2:}",
      "\t#authType: ${3:}",
      "\t#comments: ${4:}",
      "\t#credentialType: ${5:}",
      "\t#description: ${6:}",
      "\t#dnac_debug: ${7:false}",
      "\t#dnac_password: ${8:}",
      "\t#dnac_port: ${9:443}",
      "\t#dnac_username: ${10:admin}",
      "\t#dnac_verify: ${11:true}",
      "\t#dnac_version: ${12:2.3.5.3}",
      "\t#id: ${13:}",
      "\t#instanceTenantId: ${14:}",
      "\t#instanceUuid: ${15:}",
      "\t#privacyPassword: ${16:}",
      "\t#privacyType: ${17:}",
      "\t#snmpMode: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_response_schema: ${20:true}"
    ]
  },
  "sp_profile_delete_v2": {
    "prefix": "sp_profile_delete_v2",
    "description": "Resource module for Sp Profile Delete V2",
    "body": [
      "cisco.dnac.sp_profile_delete_v2:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#spProfileName: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "swim_image_details_info": {
    "prefix": "swim_image_details_info",
    "description": "Information module for Swim Image Details",
    "body": [
      "cisco.dnac.swim_image_details_info:",
      "\tdnac_host: ${1:}",
      "\t#applicationType: ${2:}",
      "\t#createdTime: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#family: ${10:}",
      "\t#headers: ${11:}",
      "\t#imageIntegrityStatus: ${12:}",
      "\t#imageName: ${13:}",
      "\t#imageSeries: ${14:}",
      "\t#imageSizeGreaterThan: ${15:}",
      "\t#imageSizeLesserThan: ${16:}",
      "\t#imageUuid: ${17:}",
      "\t#isCCOLatest: ${18:}",
      "\t#isCCORecommended: ${19:}",
      "\t#isTaggedGolden: ${20:}",
      "\t#limit: ${21:}",
      "\t#name: ${22:}",
      "\t#offset: ${23:}",
      "\t#sortBy: ${24:}",
      "\t#sortOrder: ${25:}",
      "\t#validate_response_schema: ${26:true}",
      "\t#version: ${27:}"
    ]
  },
  "swim_import_local": {
    "prefix": "swim_import_local",
    "description": "Resource module for Swim Import Local",
    "body": [
      "cisco.dnac.swim_import_local:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#filePath: ${8:}",
      "\t#isThirdParty: ${9:}",
      "\t#thirdPartyApplicationType: ${10:}",
      "\t#thirdPartyImageFamily: ${11:}",
      "\t#thirdPartyVendor: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "swim_import_via_url": {
    "prefix": "swim_import_via_url",
    "description": "Resource module for Swim Import Via Url",
    "body": [
      "cisco.dnac.swim_import_via_url:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#scheduleAt: ${9:}",
      "\t#scheduleDesc: ${10:}",
      "\t#scheduleOrigin: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "swim_intent": {
    "prefix": "swim_intent",
    "description": "Intent module for SWIM related functions",
    "body": [
      "cisco.dnac.swim_intent:",
      "\tconfig: ${1:}",
      "\tdnac_host: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_log: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.2.3.3}",
      "\t#state: ${10:#merged}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "swim_trigger_activation": {
    "prefix": "swim_trigger_activation",
    "description": "Resource module for Swim Trigger Activation",
    "body": [
      "cisco.dnac.swim_trigger_activation:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#payload: ${9:}",
      "\t#scheduleValidate: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "swim_trigger_distribution": {
    "prefix": "swim_trigger_distribution",
    "description": "Resource module for Swim Trigger Distribution",
    "body": [
      "cisco.dnac.swim_trigger_distribution:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "syslog_config_create": {
    "prefix": "syslog_config_create",
    "description": "Resource module for Syslog Config Create",
    "body": [
      "cisco.dnac.syslog_config_create:",
      "\tdnac_host: ${1:}",
      "\t#configId: ${2:}",
      "\t#description: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#host: ${10:}",
      "\t#name: ${11:}",
      "\t#port: ${12:}",
      "\t#protocol: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "syslog_config_update": {
    "prefix": "syslog_config_update",
    "description": "Resource module for Syslog Config Update",
    "body": [
      "cisco.dnac.syslog_config_update:",
      "\tdnac_host: ${1:}",
      "\t#configId: ${2:}",
      "\t#description: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#host: ${10:}",
      "\t#name: ${11:}",
      "\t#port: ${12:}",
      "\t#protocol: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "system_health_count_info": {
    "prefix": "system_health_count_info",
    "description": "Information module for System Health Count",
    "body": [
      "cisco.dnac.system_health_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#domain: ${8:}",
      "\t#headers: ${9:}",
      "\t#subdomain: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "system_health_info": {
    "prefix": "system_health_info",
    "description": "Information module for System Health",
    "body": [
      "cisco.dnac.system_health_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#domain: ${8:}",
      "\t#headers: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#subdomain: ${12:}",
      "\t#summary: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "system_performance_historical_info": {
    "prefix": "system_performance_historical_info",
    "description": "Information module for System Performance Historical",
    "body": [
      "cisco.dnac.system_performance_historical_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#endTime: ${8:}",
      "\t#headers: ${9:}",
      "\t#kpi: ${10:}",
      "\t#startTime: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "system_performance_info": {
    "prefix": "system_performance_info",
    "description": "Information module for System Performance",
    "body": [
      "cisco.dnac.system_performance_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#endTime: ${8:}",
      "\t#function: ${9:}",
      "\t#headers: ${10:}",
      "\t#kpi: ${11:}",
      "\t#startTime: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "tag": {
    "prefix": "tag",
    "description": "Resource module for Tag",
    "body": [
      "cisco.dnac.tag:",
      "\tdnac_host: ${1:}",
      "\t#description: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#dynamicRules: ${9:}",
      "\t#id: ${10:}",
      "\t#instanceTenantId: ${11:}",
      "\t#name: ${12:}",
      "\t#systemTag: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "tag_count_info": {
    "prefix": "tag_count_info",
    "description": "Information module for Tag Count",
    "body": [
      "cisco.dnac.tag_count_info:",
      "\tdnac_host: ${1:}",
      "\t#attributeName: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#headers: ${9:}",
      "\t#level: ${10:}",
      "\t#name: ${11:}",
      "\t#nameSpace: ${12:}",
      "\t#size: ${13:}",
      "\t#systemTag: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "tag_info": {
    "prefix": "tag_info",
    "description": "Information module for Tag",
    "body": [
      "cisco.dnac.tag_info:",
      "\tdnac_host: ${1:}",
      "\t#additionalInfo_attributes: ${2:}",
      "\t#additionalInfo_nameSpace: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#field: ${10:}",
      "\t#headers: ${11:}",
      "\t#id: ${12:}",
      "\t#level: ${13:}",
      "\t#limit: ${14:}",
      "\t#name: ${15:}",
      "\t#offset: ${16:}",
      "\t#order: ${17:}",
      "\t#size: ${18:}",
      "\t#sortBy: ${19:}",
      "\t#systemTag: ${20:}",
      "\t#validate_response_schema: ${21:true}"
    ]
  },
  "tag_member": {
    "prefix": "tag_member",
    "description": "Resource module for Tag Member",
    "body": [
      "cisco.dnac.tag_member:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#id: ${8:}",
      "\t#memberId: ${9:}",
      "\t#object: ${10:}",
      "\t#payload: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "tag_member_count_info": {
    "prefix": "tag_member_count_info",
    "description": "Information module for Tag Member Count",
    "body": [
      "cisco.dnac.tag_member_count_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#level: ${10:}",
      "\t#memberAssociationType: ${11:}",
      "\t#memberType: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "tag_member_info": {
    "prefix": "tag_member_info",
    "description": "Information module for Tag Member",
    "body": [
      "cisco.dnac.tag_member_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#id: ${9:}",
      "\t#level: ${10:}",
      "\t#limit: ${11:}",
      "\t#memberAssociationType: ${12:}",
      "\t#memberType: ${13:}",
      "\t#offset: ${14:}",
      "\t#validate_response_schema: ${15:true}"
    ]
  },
  "tag_member_type_info": {
    "prefix": "tag_member_type_info",
    "description": "Information module for Tag Member Type",
    "body": [
      "cisco.dnac.tag_member_type_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "tag_membership": {
    "prefix": "tag_membership",
    "description": "Resource module for Tag Membership",
    "body": [
      "cisco.dnac.tag_membership:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#memberToTags: ${8:}",
      "\t#memberType: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "task_count_info": {
    "prefix": "task_count_info",
    "description": "Information module for Task Count",
    "body": [
      "cisco.dnac.task_count_info:",
      "\tdnac_host: ${1:}",
      "\t#data: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#endTime: ${9:}",
      "\t#errorCode: ${10:}",
      "\t#failureReason: ${11:}",
      "\t#headers: ${12:}",
      "\t#isError: ${13:}",
      "\t#parentId: ${14:}",
      "\t#progress: ${15:}",
      "\t#serviceType: ${16:}",
      "\t#startTime: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_response_schema: ${19:true}"
    ]
  },
  "task_info": {
    "prefix": "task_info",
    "description": "Information module for Task",
    "body": [
      "cisco.dnac.task_info:",
      "\tdnac_host: ${1:}",
      "\t#data: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#endTime: ${9:}",
      "\t#errorCode: ${10:}",
      "\t#failureReason: ${11:}",
      "\t#headers: ${12:}",
      "\t#isError: ${13:}",
      "\t#limit: ${14:}",
      "\t#offset: ${15:}",
      "\t#order: ${16:}",
      "\t#parentId: ${17:}",
      "\t#progress: ${18:}",
      "\t#serviceType: ${19:}",
      "\t#sortBy: ${20:}",
      "\t#startTime: ${21:}",
      "\t#taskId: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_response_schema: ${24:true}"
    ]
  },
  "task_operation_info": {
    "prefix": "task_operation_info",
    "description": "Information module for Task Operation",
    "body": [
      "cisco.dnac.task_operation_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#limit: ${9:}",
      "\t#offset: ${10:}",
      "\t#operationId: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "task_tree_info": {
    "prefix": "task_tree_info",
    "description": "Information module for Task Tree",
    "body": [
      "cisco.dnac.task_tree_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#taskId: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "template_intent": {
    "prefix": "template_intent",
    "description": "Resource module for Template functions",
    "body": [
      "cisco.dnac.template_intent:",
      "\tconfig: ${1:}",
      "\tdnac_host: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_log: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.2.3.3}",
      "\t#state: ${10:#merged|deleted}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "template_preview": {
    "prefix": "template_preview",
    "description": "Resource module for Template Preview",
    "body": [
      "cisco.dnac.template_preview:",
      "\tdnac_host: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#params: ${9:}",
      "\t#resourceParams: ${10:}",
      "\t#templateId: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "templates_details_info": {
    "prefix": "templates_details_info",
    "description": "Information module for Templates Details",
    "body": [
      "cisco.dnac.templates_details_info:",
      "\tdnac_host: ${1:}",
      "\t#allTemplateAttributes: ${2:}",
      "\t#dnac_debug: ${3:false}",
      "\t#dnac_password: ${4:}",
      "\t#dnac_port: ${5:443}",
      "\t#dnac_username: ${6:admin}",
      "\t#dnac_verify: ${7:true}",
      "\t#dnac_version: ${8:2.3.5.3}",
      "\t#filterConflictingTemplates: ${9:}",
      "\t#headers: ${10:}",
      "\t#id: ${11:}",
      "\t#includeVersionDetails: ${12:}",
      "\t#limit: ${13:}",
      "\t#name: ${14:}",
      "\t#offset: ${15:}",
      "\t#productFamily: ${16:}",
      "\t#productSeries: ${17:}",
      "\t#productType: ${18:}",
      "\t#projectId: ${19:}",
      "\t#projectName: ${20:}",
      "\t#softwareType: ${21:}",
      "\t#softwareVersion: ${22:}",
      "\t#sortOrder: ${23:}",
      "\t#tags: ${24:}",
      "\t#unCommitted: ${25:}",
      "\t#validate_response_schema: ${26:true}"
    ]
  },
  "threat_detail": {
    "prefix": "threat_detail",
    "description": "Resource module for Threat Detail",
    "body": [
      "cisco.dnac.threat_detail:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#endTime: ${8:}",
      "\t#isNewThreat: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#siteId: ${12:}",
      "\t#startTime: ${13:}",
      "\t#threatLevel: ${14:}",
      "\t#threatType: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "threat_detail_count": {
    "prefix": "threat_detail_count",
    "description": "Resource module for Threat Detail Count",
    "body": [
      "cisco.dnac.threat_detail_count:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#endTime: ${8:}",
      "\t#isNewThreat: ${9:}",
      "\t#limit: ${10:}",
      "\t#offset: ${11:}",
      "\t#siteId: ${12:}",
      "\t#startTime: ${13:}",
      "\t#threatLevel: ${14:}",
      "\t#threatType: ${15:}",
      "\t#validate_response_schema: ${16:true}"
    ]
  },
  "threat_summary": {
    "prefix": "threat_summary",
    "description": "Resource module for Threat Summary",
    "body": [
      "cisco.dnac.threat_summary:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#endTime: ${8:}",
      "\t#siteId: ${9:}",
      "\t#startTime: ${10:}",
      "\t#threatLevel: ${11:}",
      "\t#threatType: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "topology_layer_2_info": {
    "prefix": "topology_layer_2_info",
    "description": "Information module for Topology Layer 2",
    "body": [
      "cisco.dnac.topology_layer_2_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}",
      "\t#vlanID: ${10:}"
    ]
  },
  "topology_layer_3_info": {
    "prefix": "topology_layer_3_info",
    "description": "Information module for Topology Layer 3",
    "body": [
      "cisco.dnac.topology_layer_3_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#topologyType: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "topology_network_health_info": {
    "prefix": "topology_network_health_info",
    "description": "Information module for Topology Network Health",
    "body": [
      "cisco.dnac.topology_network_health_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#timestamp: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "topology_physical_info": {
    "prefix": "topology_physical_info",
    "description": "Information module for Topology Physical",
    "body": [
      "cisco.dnac.topology_physical_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#nodeType: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "topology_site_info": {
    "prefix": "topology_site_info",
    "description": "Information module for Topology Site",
    "body": [
      "cisco.dnac.topology_site_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "topology_vlan_details_info": {
    "prefix": "topology_vlan_details_info",
    "description": "Information module for Topology Vlan Details",
    "body": [
      "cisco.dnac.topology_vlan_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "transit_peer_network": {
    "prefix": "transit_peer_network",
    "description": "Resource module for Transit Peer Network",
    "body": [
      "cisco.dnac.transit_peer_network:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#ipTransitSettings: ${8:}",
      "\t#sdaTransitSettings: ${9:}",
      "\t#transitPeerNetworkName: ${10:}",
      "\t#transitPeerNetworkType: ${11:}",
      "\t#validate_response_schema: ${12:true}"
    ]
  },
  "transit_peer_network_info": {
    "prefix": "transit_peer_network_info",
    "description": "Information module for Transit Peer Network",
    "body": [
      "cisco.dnac.transit_peer_network_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#transitPeerNetworkName: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "user_enrichment_details_info": {
    "prefix": "user_enrichment_details_info",
    "description": "Information module for User Enrichment Details",
    "body": [
      "cisco.dnac.user_enrichment_details_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "users_external_servers_info": {
    "prefix": "users_external_servers_info",
    "description": "Information module for Users External Servers",
    "body": [
      "cisco.dnac.users_external_servers_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#invokeSource: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "wireless_accespoint_configuration": {
    "prefix": "wireless_accespoint_configuration",
    "description": "Resource module for Wireless Accespoint Configuration",
    "body": [
      "cisco.dnac.wireless_accespoint_configuration:",
      "\tdnac_host: ${1:}",
      "\t#adminStatus: ${2:}",
      "\t#apHeight: ${3:}",
      "\t#apList: ${4:}",
      "\t#apMode: ${5:}",
      "\t#configureAdminStatus: ${6:}",
      "\t#configureApHeight: ${7:}",
      "\t#configureApMode: ${8:}",
      "\t#configureFailoverPriority: ${9:}",
      "\t#configureHAController: ${10:}",
      "\t#configureLedBrightnessLevel: ${11:}",
      "\t#configureLedStatus: ${12:}",
      "\t#configureLocation: ${13:}",
      "\t#dnac_debug: ${14:false}",
      "\t#dnac_password: ${15:}",
      "\t#dnac_port: ${16:443}",
      "\t#dnac_username: ${17:admin}",
      "\t#dnac_verify: ${18:true}",
      "\t#dnac_version: ${19:2.3.5.3}",
      "\t#failoverPriority: ${20:}",
      "\t#ledBrightnessLevel: ${21:}",
      "\t#ledStatus: ${22:}",
      "\t#location: ${23:}",
      "\t#primaryControllerName: ${24:}",
      "\t#primaryIpAddress: ${25:}",
      "\t#radioConfigurations: ${26:}",
      "\t#secondaryControllerName: ${27:}",
      "\t#secondaryIpAddress: ${28:}",
      "\t#tertiaryControllerName: ${29:}",
      "\t#tertiaryIpAddress: ${30:}",
      "\t#validate_response_schema: ${31:true}"
    ]
  },
  "wireless_accesspoint_configuration_summary_info": {
    "prefix": "wireless_accesspoint_configuration_summary_info",
    "description": "Information module for Wireless Accesspoint Configuration Summary",
    "body": [
      "cisco.dnac.wireless_accesspoint_configuration_summary_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#key: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "wireless_dynamic_interface": {
    "prefix": "wireless_dynamic_interface",
    "description": "Resource module for Wireless Dynamic Interface",
    "body": [
      "cisco.dnac.wireless_dynamic_interface:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#interfaceName: ${9:}",
      "\t#validate_response_schema: ${10:true}",
      "\t#vlanId: ${11:}"
    ]
  },
  "wireless_dynamic_interface_info": {
    "prefix": "wireless_dynamic_interface_info",
    "description": "Information module for Wireless Dynamic Interface",
    "body": [
      "cisco.dnac.wireless_dynamic_interface_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#interface_name: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "wireless_enterprise_ssid": {
    "prefix": "wireless_enterprise_ssid",
    "description": "Resource module for Wireless Enterprise Ssid",
    "body": [
      "cisco.dnac.wireless_enterprise_ssid:",
      "\tdnac_host: ${1:}",
      "\t#basicServiceSetClientIdleTimeout: ${2:}",
      "\t#clientExclusionTimeout: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#enableBasicServiceSetMaxIdle: ${10:}",
      "\t#enableBroadcastSSID: ${11:}",
      "\t#enableClientExclusion: ${12:}",
      "\t#enableDirectedMulticastService: ${13:}",
      "\t#enableFastLane: ${14:}",
      "\t#enableMACFiltering: ${15:}",
      "\t#enableNeighborList: ${16:}",
      "\t#enableSessionTimeOut: ${17:}",
      "\t#fastTransition: ${18:}",
      "\t#mfpClientProtection: ${19:}",
      "\t#name: ${20:}",
      "\t#nasOptions: ${21:}",
      "\t#passphrase: ${22:}",
      "\t#radioPolicy: ${23:}",
      "\t#securityLevel: ${24:}",
      "\t#sessionTimeOut: ${25:}",
      "\t#ssidName: ${26:}",
      "\t#trafficType: ${27:}",
      "\t#validate_response_schema: ${28:true}"
    ]
  },
  "wireless_enterprise_ssid_info": {
    "prefix": "wireless_enterprise_ssid_info",
    "description": "Information module for Wireless Enterprise Ssid",
    "body": [
      "cisco.dnac.wireless_enterprise_ssid_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#ssidName: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "wireless_profile": {
    "prefix": "wireless_profile",
    "description": "Resource module for Wireless Profile",
    "body": [
      "cisco.dnac.wireless_profile:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#profileDetails: ${8:}",
      "\t#validate_response_schema: ${9:true}",
      "\t#wirelessProfileName: ${10:}"
    ]
  },
  "wireless_profile_info": {
    "prefix": "wireless_profile_info",
    "description": "Information module for Wireless Profile",
    "body": [
      "cisco.dnac.wireless_profile_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#profileName: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "wireless_provision_access_point": {
    "prefix": "wireless_provision_access_point",
    "description": "Resource module for Wireless Provision Access Point",
    "body": [
      "cisco.dnac.wireless_provision_access_point:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "wireless_provision_device_create": {
    "prefix": "wireless_provision_device_create",
    "description": "Resource module for Wireless Provision Device Create",
    "body": [
      "cisco.dnac.wireless_provision_device_create:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "wireless_provision_device_update": {
    "prefix": "wireless_provision_device_update",
    "description": "Resource module for Wireless Provision Device Update",
    "body": [
      "cisco.dnac.wireless_provision_device_update:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#payload: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "wireless_provision_ssid_create_provision": {
    "prefix": "wireless_provision_ssid_create_provision",
    "description": "Resource module for Wireless Provision Ssid Create Provision",
    "body": [
      "cisco.dnac.wireless_provision_ssid_create_provision:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#enableFabric: ${8:}",
      "\t#flexConnect: ${9:}",
      "\t#headers: ${10:}",
      "\t#managedAPLocations: ${11:}",
      "\t#ssidDetails: ${12:}",
      "\t#ssidType: ${13:}",
      "\t#validate_response_schema: ${14:true}"
    ]
  },
  "wireless_provision_ssid_delete_reprovision": {
    "prefix": "wireless_provision_ssid_delete_reprovision",
    "description": "Resource module for Wireless Provision Ssid Delete Reprovision",
    "body": [
      "cisco.dnac.wireless_provision_ssid_delete_reprovision:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#managedAPLocations: ${9:}",
      "\t#ssidName: ${10:}",
      "\t#validate_response_schema: ${11:true}"
    ]
  },
  "wireless_psk_override": {
    "prefix": "wireless_psk_override",
    "description": "Resource module for Wireless Psk Override",
    "body": [
      "cisco.dnac.wireless_psk_override:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#payload: ${8:}",
      "\t#validate_response_schema: ${9:true}"
    ]
  },
  "wireless_rf_profile": {
    "prefix": "wireless_rf_profile",
    "description": "Resource module for Wireless Rf Profile",
    "body": [
      "cisco.dnac.wireless_rf_profile:",
      "\tdnac_host: ${1:}",
      "\t#channelWidth: ${2:}",
      "\t#defaultRfProfile: ${3:}",
      "\t#dnac_debug: ${4:false}",
      "\t#dnac_password: ${5:}",
      "\t#dnac_port: ${6:443}",
      "\t#dnac_username: ${7:admin}",
      "\t#dnac_verify: ${8:true}",
      "\t#dnac_version: ${9:2.3.5.3}",
      "\t#enableBrownField: ${10:}",
      "\t#enableCustom: ${11:}",
      "\t#enableRadioTypeA: ${12:}",
      "\t#enableRadioTypeB: ${13:}",
      "\t#enableRadioTypeC: ${14:}",
      "\t#name: ${15:}",
      "\t#radioTypeAProperties: ${16:}",
      "\t#radioTypeBProperties: ${17:}",
      "\t#radioTypeCProperties: ${18:}",
      "\t#rfProfileName: ${19:}",
      "\t#validate_response_schema: ${20:true}"
    ]
  },
  "wireless_rf_profile_info": {
    "prefix": "wireless_rf_profile_info",
    "description": "Information module for Wireless Rf Profile",
    "body": [
      "cisco.dnac.wireless_rf_profile_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#headers: ${8:}",
      "\t#rf_profile_name: ${9:}",
      "\t#validate_response_schema: ${10:true}"
    ]
  },
  "wireless_sensor_test_results_info": {
    "prefix": "wireless_sensor_test_results_info",
    "description": "Information module for Wireless Sensor Test Results",
    "body": [
      "cisco.dnac.wireless_sensor_test_results_info:",
      "\tdnac_host: ${1:}",
      "\t#dnac_debug: ${2:false}",
      "\t#dnac_password: ${3:}",
      "\t#dnac_port: ${4:443}",
      "\t#dnac_username: ${5:admin}",
      "\t#dnac_verify: ${6:true}",
      "\t#dnac_version: ${7:2.3.5.3}",
      "\t#endTime: ${8:}",
      "\t#headers: ${9:}",
      "\t#siteId: ${10:}",
      "\t#startTime: ${11:}",
      "\t#testFailureBy: ${12:}",
      "\t#validate_response_schema: ${13:true}"
    ]
  },
  "ios_acl_interfaces": {
    "prefix": "ios_acl_interfaces",
    "description": "Resource module to configure ACL interfaces.",
    "body": [
      "cisco.ios.ios_acl_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "ios_acls": {
    "prefix": "ios_acls",
    "description": "Resource module to configure ACLs.",
    "body": [
      "cisco.ios.ios_acls:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "ios_banner": {
    "prefix": "ios_banner",
    "description": "Module to configure multiline banners.",
    "body": [
      "cisco.ios.ios_banner:",
      "\tbanner: ${1:login|motd|exec|incoming|slip-ppp}",
      "\t#multiline_delimiter: ${2:@}",
      "\t#state: ${3:#present|absent}",
      "\t#text: ${4:}"
    ]
  },
  "ios_bgp_address_family": {
    "prefix": "ios_bgp_address_family",
    "description": "Resource module to configure BGP Address family.",
    "body": [
      "cisco.ios.ios_bgp_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "ios_bgp_global": {
    "prefix": "ios_bgp_global",
    "description": "Resource module to configure BGP.",
    "body": [
      "cisco.ios.ios_bgp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|purged|gathered|rendered|parsed}"
    ]
  },
  "ios_command": {
    "prefix": "ios_command",
    "description": "Module to run commands on remote devices.",
    "body": [
      "cisco.ios.ios_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:9}",
      "\t#wait_for: ${5:}"
    ]
  },
  "ios_config": {
    "prefix": "ios_config",
    "description": "Module to manage configuration sections.",
    "body": [
      "cisco.ios.ios_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#defaults: ${5:false}",
      "\t#diff_against: ${6:running|startup|intended}",
      "\t#diff_ignore_lines: ${7:}",
      "\t#intended_config: ${8:}",
      "\t#lines: ${9:}",
      "\t#match: ${10:#line|strict|exact|none}",
      "\t#multiline_delimiter: ${11:@}",
      "\t#parents: ${12:}",
      "\t#replace: ${13:#line|block}",
      "\t#running_config: ${14:}",
      "\t#save_when: ${15:always|#never|modified|changed}",
      "\t#src: ${16:}"
    ]
  },
  "ios_evpn_evi": {
    "prefix": "ios_evpn_evi",
    "description": "Resource module to configure L2VPN EVPN EVI.",
    "body": [
      "cisco.ios.ios_evpn_evi:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "ios_evpn_global": {
    "prefix": "ios_evpn_global",
    "description": "Resource module to configure L2VPN EVPN.",
    "body": [
      "cisco.ios.ios_evpn_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "ios_facts": {
    "prefix": "ios_facts",
    "description": "Module to collect facts from remote devices.",
    "body": [
      "cisco.ios.ios_facts:",
      "\t#available_network_resources: ${1:false}",
      "\t#gather_network_resources: ${2:}",
      "\t#gather_subset: ${3:min}"
    ]
  },
  "ios_hostname": {
    "prefix": "ios_hostname",
    "description": "Resource module to configure hostname.",
    "body": [
      "cisco.ios.ios_hostname:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "ios_interfaces": {
    "prefix": "ios_interfaces",
    "description": "Resource module to configure interfaces.",
    "body": [
      "cisco.ios.ios_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|purged|parsed}"
    ]
  },
  "ios_l2_interfaces": {
    "prefix": "ios_l2_interfaces",
    "description": "Resource module to configure L2 interfaces.",
    "body": [
      "cisco.ios.ios_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "ios_l3_interfaces": {
    "prefix": "ios_l3_interfaces",
    "description": "Resource module to configure L3 interfaces.",
    "body": [
      "cisco.ios.ios_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "ios_lacp": {
    "prefix": "ios_lacp",
    "description": "Resource module to configure LACP.",
    "body": [
      "cisco.ios.ios_lacp:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|parsed|gathered}"
    ]
  },
  "ios_lacp_interfaces": {
    "prefix": "ios_lacp_interfaces",
    "description": "Resource module to configure LACP interfaces.",
    "body": [
      "cisco.ios.ios_lacp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "ios_lag_interfaces": {
    "prefix": "ios_lag_interfaces",
    "description": "Resource module to configure LAG interfaces.",
    "body": [
      "cisco.ios.ios_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|parsed|gathered}"
    ]
  },
  "ios_lldp_global": {
    "prefix": "ios_lldp_global",
    "description": "Resource module to configure LLDP.",
    "body": [
      "cisco.ios.ios_lldp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "ios_lldp_interfaces": {
    "prefix": "ios_lldp_interfaces",
    "description": "Resource module to configure LLDP interfaces.",
    "body": [
      "cisco.ios.ios_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "ios_logging_global": {
    "prefix": "ios_logging_global",
    "description": "Resource module to configure logging.",
    "body": [
      "cisco.ios.ios_logging_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "ios_ntp_global": {
    "prefix": "ios_ntp_global",
    "description": "Resource module to configure NTP.",
    "body": [
      "cisco.ios.ios_ntp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "ios_ospf_interfaces": {
    "prefix": "ios_ospf_interfaces",
    "description": "Resource module to configure OSPF interfaces.",
    "body": [
      "cisco.ios.ios_ospf_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "ios_ospfv2": {
    "prefix": "ios_ospfv2",
    "description": "Resource module to configure OSPFv2.",
    "body": [
      "cisco.ios.ios_ospfv2:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "ios_ospfv3": {
    "prefix": "ios_ospfv3",
    "description": "Resource module to configure OSPFv3.",
    "body": [
      "cisco.ios.ios_ospfv3:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "ios_ping": {
    "prefix": "ios_ping",
    "description": "Tests reachability using ping from IOS switch.",
    "body": [
      "cisco.ios.ios_ping:",
      "\tdest: ${1:}",
      "\t#afi: ${2:#ip|ipv6}",
      "\t#count: ${3:}",
      "\t#df_bit: ${4:false}",
      "\t#egress: ${5:}",
      "\t#ingress: ${6:}",
      "\t#size: ${7:}",
      "\t#source: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#timeout: ${10:}",
      "\t#vrf: ${11:}"
    ]
  },
  "ios_prefix_lists": {
    "prefix": "ios_prefix_lists",
    "description": "Resource module to configure prefix lists.",
    "body": [
      "cisco.ios.ios_prefix_lists:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "ios_route_maps": {
    "prefix": "ios_route_maps",
    "description": "Resource module to configure route maps.",
    "body": [
      "cisco.ios.ios_route_maps:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "ios_service": {
    "prefix": "ios_service",
    "description": "Resource module to configure service.",
    "body": [
      "cisco.ios.ios_service:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "ios_snmp_server": {
    "prefix": "ios_snmp_server",
    "description": "Resource module to configure snmp server.",
    "body": [
      "cisco.ios.ios_snmp_server:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "ios_static_routes": {
    "prefix": "ios_static_routes",
    "description": "Resource module to configure static routes.",
    "body": [
      "cisco.ios.ios_static_routes:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "ios_system": {
    "prefix": "ios_system",
    "description": "Module to manage the system attributes.",
    "body": [
      "cisco.ios.ios_system:",
      "\t#domain_name: ${1:}",
      "\t#domain_search: ${2:}",
      "\t#hostname: ${3:}",
      "\t#lookup_enabled: ${4:}",
      "\t#lookup_source: ${5:}",
      "\t#name_servers: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "ios_user": {
    "prefix": "ios_user",
    "description": "Module to manage the aggregates of local users.",
    "body": [
      "cisco.ios.ios_user:",
      "\t#aggregate: ${1:}",
      "\t#configured_password: ${2:}",
      "\t#hashed_password: ${3:}",
      "\t#name: ${4:}",
      "\t#nopassword: ${5:}",
      "\t#password_type: ${6:#secret|password}",
      "\t#privilege: ${7:}",
      "\t#purge: ${8:false}",
      "\t#sshkey: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#update_password: ${11:on_create|#always}",
      "\t#view: ${12:}"
    ]
  },
  "ios_vlans": {
    "prefix": "ios_vlans",
    "description": "Resource module to configure VLANs.",
    "body": [
      "cisco.ios.ios_vlans:",
      "\t#config: ${1:}",
      "\t#configuration: ${2:}",
      "\t#running_config: ${3:}",
      "\t#state: ${4:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "ios_vrf": {
    "prefix": "ios_vrf",
    "description": "Module to configure VRF definitions.",
    "body": [
      "cisco.ios.ios_vrf:",
      "\t#address_family: ${1:}",
      "\t#associated_interfaces: ${2:}",
      "\t#delay: ${3:10}",
      "\t#description: ${4:}",
      "\t#interfaces: ${5:}",
      "\t#name: ${6:}",
      "\t#purge: ${7:false}",
      "\t#rd: ${8:}",
      "\t#route_both: ${9:}",
      "\t#route_both_ipv4: ${10:}",
      "\t#route_both_ipv6: ${11:}",
      "\t#route_export: ${12:}",
      "\t#route_export_ipv4: ${13:}",
      "\t#route_export_ipv6: ${14:}",
      "\t#route_import: ${15:}",
      "\t#route_import_ipv4: ${16:}",
      "\t#route_import_ipv6: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#vrfs: ${19:}"
    ]
  },
  "ios_vxlan_vtep": {
    "prefix": "ios_vxlan_vtep",
    "description": "Resource module to configure VXLAN VTEP interface.",
    "body": [
      "cisco.ios.ios_vxlan_vtep:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "iosxr_acl_interfaces": {
    "prefix": "iosxr_acl_interfaces",
    "description": "Resource module to configure ACL interfaces.",
    "body": [
      "cisco.iosxr.iosxr_acl_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "iosxr_acls": {
    "prefix": "iosxr_acls",
    "description": "Resource module to configure ACLs.",
    "body": [
      "cisco.iosxr.iosxr_acls:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "iosxr_banner": {
    "prefix": "iosxr_banner",
    "description": "Module to configure multiline banners.",
    "body": [
      "cisco.iosxr.iosxr_banner:",
      "\tbanner: ${1:login|motd}",
      "\t#state: ${2:#present|absent}",
      "\t#text: ${3:}"
    ]
  },
  "iosxr_bgp_address_family": {
    "prefix": "iosxr_bgp_address_family",
    "description": "Resource module to configure BGP Address family.",
    "body": [
      "cisco.iosxr.iosxr_bgp_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "iosxr_bgp_global": {
    "prefix": "iosxr_bgp_global",
    "description": "Resource module to configure BGP.",
    "body": [
      "cisco.iosxr.iosxr_bgp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|replaced|gathered|rendered|parsed|purged|overridden}"
    ]
  },
  "iosxr_bgp_neighbor_address_family": {
    "prefix": "iosxr_bgp_neighbor_address_family",
    "description": "Resource module to configure BGP Neighbor Address family.",
    "body": [
      "cisco.iosxr.iosxr_bgp_neighbor_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "iosxr_bgp_templates": {
    "prefix": "iosxr_bgp_templates",
    "description": "Manages BGP templates resource module.",
    "body": [
      "cisco.iosxr.iosxr_bgp_templates:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "iosxr_command": {
    "prefix": "iosxr_command",
    "description": "Module to run commands on remote devices.",
    "body": [
      "cisco.iosxr.iosxr_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "iosxr_config": {
    "prefix": "iosxr_config",
    "description": "Module to manage configuration sections.",
    "body": [
      "cisco.iosxr.iosxr_config:",
      "\t#admin: ${1:false}",
      "\t#after: ${2:}",
      "\t#backup: ${3:false}",
      "\t#backup_options: ${4:}",
      "\t#before: ${5:}",
      "\t#comment: ${6:configured by iosxr_config}",
      "\t#config: ${7:}",
      "\t#disable_default_comment: ${8:false}",
      "\t#exclusive: ${9:false}",
      "\t#force: ${10:false}",
      "\t#label: ${11:}",
      "\t#lines: ${12:}",
      "\t#match: ${13:#line|strict|exact|none}",
      "\t#parents: ${14:}",
      "\t#replace: ${15:#line|block|config}",
      "\t#src: ${16:}"
    ]
  },
  "iosxr_facts": {
    "prefix": "iosxr_facts",
    "description": "Module to collect facts from remote devices.",
    "body": [
      "cisco.iosxr.iosxr_facts:",
      "\t#available_network_resources: ${1:false}",
      "\t#gather_network_resources: ${2:}",
      "\t#gather_subset: ${3:min}"
    ]
  },
  "iosxr_hostname": {
    "prefix": "iosxr_hostname",
    "description": "Resource module to configure hostname.",
    "body": [
      "cisco.iosxr.iosxr_hostname:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "iosxr_interfaces": {
    "prefix": "iosxr_interfaces",
    "description": "Resource module to configure interfaces.",
    "body": [
      "cisco.iosxr.iosxr_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|parsed|deleted|replaced|rendered|gathered|overridden}"
    ]
  },
  "iosxr_l2_interfaces": {
    "prefix": "iosxr_l2_interfaces",
    "description": "Resource Module to configure L2 interfaces.",
    "body": [
      "cisco.iosxr.iosxr_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "iosxr_l3_interfaces": {
    "prefix": "iosxr_l3_interfaces",
    "description": "Resource module to configure L3 interfaces.",
    "body": [
      "cisco.iosxr.iosxr_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|rendered|gathered}"
    ]
  },
  "iosxr_lacp": {
    "prefix": "iosxr_lacp",
    "description": "Resource module to configure LACP.",
    "body": [
      "cisco.iosxr.iosxr_lacp:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|parsed|rendered|gathered|overridden}"
    ]
  },
  "iosxr_lacp_interfaces": {
    "prefix": "iosxr_lacp_interfaces",
    "description": "Resource module to configure LACP interfaces.",
    "body": [
      "cisco.iosxr.iosxr_lacp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "iosxr_lag_interfaces": {
    "prefix": "iosxr_lag_interfaces",
    "description": "Resource module to configure LAG interfaces.",
    "body": [
      "cisco.iosxr.iosxr_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|rendered|gathered}"
    ]
  },
  "iosxr_lldp_global": {
    "prefix": "iosxr_lldp_global",
    "description": "Resource module to configure LLDP.",
    "body": [
      "cisco.iosxr.iosxr_lldp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|parsed|gathered|rendered|overridden}"
    ]
  },
  "iosxr_lldp_interfaces": {
    "prefix": "iosxr_lldp_interfaces",
    "description": "Resource module to configure LLDP interfaces.",
    "body": [
      "cisco.iosxr.iosxr_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|rendered|gathered}"
    ]
  },
  "iosxr_logging_global": {
    "prefix": "iosxr_logging_global",
    "description": "Resource module to configure logging.",
    "body": [
      "cisco.iosxr.iosxr_logging_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "iosxr_netconf": {
    "prefix": "iosxr_netconf",
    "description": "Configures NetConf sub-system service on Cisco IOS-XR devices",
    "body": [
      "cisco.iosxr.iosxr_netconf:",
      "\t#netconf_port: ${1:830}",
      "\t#netconf_vrf: ${2:default}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "iosxr_ntp_global": {
    "prefix": "iosxr_ntp_global",
    "description": "Resource module to configure NTP.",
    "body": [
      "cisco.iosxr.iosxr_ntp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "iosxr_ospf_interfaces": {
    "prefix": "iosxr_ospf_interfaces",
    "description": "Resource module to configure OSPF interfaces.",
    "body": [
      "cisco.iosxr.iosxr_ospf_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "iosxr_ospfv2": {
    "prefix": "iosxr_ospfv2",
    "description": "Resource module to configure OSPFv2.",
    "body": [
      "cisco.iosxr.iosxr_ospfv2:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|parsed|gathered|rendered|overridden}"
    ]
  },
  "iosxr_ospfv3": {
    "prefix": "iosxr_ospfv3",
    "description": "Resource module to configure OSPFv3.",
    "body": [
      "cisco.iosxr.iosxr_ospfv3:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "iosxr_ping": {
    "prefix": "iosxr_ping",
    "description": "Tests reachability using ping from IOSXR switch.",
    "body": [
      "cisco.iosxr.iosxr_ping:",
      "\tdest: ${1:}",
      "\t#afi: ${2:#ipv4|ipv6}",
      "\t#count: ${3:}",
      "\t#df_bit: ${4:false}",
      "\t#size: ${5:}",
      "\t#source: ${6:}",
      "\t#state: ${7:absent|#present}",
      "\t#sweep: ${8:false}",
      "\t#validate: ${9:false}",
      "\t#vrf: ${10:}"
    ]
  },
  "iosxr_prefix_lists": {
    "prefix": "iosxr_prefix_lists",
    "description": "Resource module to configure prefix lists.",
    "body": [
      "cisco.iosxr.iosxr_prefix_lists:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "iosxr_snmp_server": {
    "prefix": "iosxr_snmp_server",
    "description": "Resource module to configure snmp server.",
    "body": [
      "cisco.iosxr.iosxr_snmp_server:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "iosxr_static_routes": {
    "prefix": "iosxr_static_routes",
    "description": "Resource module to configure static routes.",
    "body": [
      "cisco.iosxr.iosxr_static_routes:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "iosxr_system": {
    "prefix": "iosxr_system",
    "description": "Module to manage the system attributes.",
    "body": [
      "cisco.iosxr.iosxr_system:",
      "\t#domain_name: ${1:}",
      "\t#domain_search: ${2:}",
      "\t#hostname: ${3:}",
      "\t#lookup_enabled: ${4:true}",
      "\t#lookup_source: ${5:}",
      "\t#name_servers: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#vrf: ${8:default}"
    ]
  },
  "iosxr_user": {
    "prefix": "iosxr_user",
    "description": "Module to manage the aggregates of local users.",
    "body": [
      "cisco.iosxr.iosxr_user:",
      "\t#admin: ${1:false}",
      "\t#aggregate: ${2:}",
      "\t#configured_password: ${3:}",
      "\t#group: ${4:}",
      "\t#groups: ${5:}",
      "\t#name: ${6:}",
      "\t#public_key: ${7:}",
      "\t#public_key_contents: ${8:}",
      "\t#purge: ${9:false}",
      "\t#state: ${10:#present|absent}",
      "\t#update_password: ${11:on_create|#always}"
    ]
  },
  "aci_bindings_info": {
    "prefix": "aci_bindings_info",
    "description": "Information module for ACI Bindings",
    "body": [
      "cisco.ise.aci_bindings_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filterBy: ${4:}",
      "\t#filterValue: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#page: ${13:}",
      "\t#size: ${14:}",
      "\t#sort: ${15:}",
      "\t#sortBy: ${16:}"
    ]
  },
  "aci_settings": {
    "prefix": "aci_settings",
    "description": "Resource module for ACI Settings",
    "body": [
      "cisco.ise.aci_settings:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#aci50: ${4:}",
      "\t#aci51: ${5:}",
      "\t#aciipaddress: ${6:}",
      "\t#acipassword: ${7:}",
      "\t#aciuserName: ${8:}",
      "\t#adminName: ${9:}",
      "\t#adminPassword: ${10:}",
      "\t#allSXPDomain: ${11:}",
      "\t#defaultSGtName: ${12:}",
      "\t#enableACI: ${13:}",
      "\t#enableDataPlane: ${14:}",
      "\t#enableElementsLimit: ${15:}",
      "\t#id: ${16:}",
      "\t#ipAddressHostName: ${17:}",
      "\t#ise_debug: ${18:false}",
      "\t#ise_single_request_timeout: ${19:60}",
      "\t#ise_uses_api_gateway: ${20:true}",
      "\t#ise_uses_csrf_token: ${21:false}",
      "\t#ise_verify: ${22:true}",
      "\t#ise_version: ${23:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${24:true}",
      "\t#l3RouteNetwork: ${25:}",
      "\t#maxNumIepgFromACI: ${26:}",
      "\t#maxNumSGtToACI: ${27:}",
      "\t#specificSXPDomain: ${28:}",
      "\t#specifixSXPDomainList: ${29:}",
      "\t#suffixToEpg: ${30:}",
      "\t#suffixToSGt: ${31:}",
      "\t#tenantName: ${32:}",
      "\t#untaggedPacketIepgName: ${33:}"
    ]
  },
  "aci_settings_info": {
    "prefix": "aci_settings_info",
    "description": "Information module for ACI Settings",
    "body": [
      "cisco.ise.aci_settings_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "aci_test_connectivity": {
    "prefix": "aci_test_connectivity",
    "description": "Resource module for ACI Test Connectivity",
    "body": [
      "cisco.ise.aci_test_connectivity:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "active_directory": {
    "prefix": "active_directory",
    "description": "Resource module for Active Directory",
    "body": [
      "cisco.ise.active_directory:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#adAttributes: ${4:}",
      "\t#adScopesNames: ${5:}",
      "\t#adgroups: ${6:}",
      "\t#advancedSettings: ${7:}",
      "\t#description: ${8:}",
      "\t#domain: ${9:}",
      "\t#enableDomainWhiteList: ${10:}",
      "\t#id: ${11:}",
      "\t#ise_debug: ${12:false}",
      "\t#ise_single_request_timeout: ${13:60}",
      "\t#ise_uses_api_gateway: ${14:true}",
      "\t#ise_uses_csrf_token: ${15:false}",
      "\t#ise_verify: ${16:true}",
      "\t#ise_version: ${17:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${18:true}",
      "\t#name: ${19:}"
    ]
  },
  "active_directory_add_groups": {
    "prefix": "active_directory_add_groups",
    "description": "Resource module for Active Directory Add Groups",
    "body": [
      "cisco.ise.active_directory_add_groups:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#adAttributes: ${4:}",
      "\t#adScopesNames: ${5:}",
      "\t#adgroups: ${6:}",
      "\t#advancedSettings: ${7:}",
      "\t#description: ${8:}",
      "\t#domain: ${9:}",
      "\t#enableDomainWhiteList: ${10:}",
      "\t#id: ${11:}",
      "\t#ise_debug: ${12:false}",
      "\t#ise_single_request_timeout: ${13:60}",
      "\t#ise_uses_api_gateway: ${14:true}",
      "\t#ise_uses_csrf_token: ${15:false}",
      "\t#ise_verify: ${16:true}",
      "\t#ise_version: ${17:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${18:true}",
      "\t#name: ${19:}"
    ]
  },
  "active_directory_groups_by_domain_info": {
    "prefix": "active_directory_groups_by_domain_info",
    "description": "Information module for Active Directory Groups By Domain",
    "body": [
      "cisco.ise.active_directory_groups_by_domain_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "active_directory_info": {
    "prefix": "active_directory_info",
    "description": "Information module for Active Directory",
    "body": [
      "cisco.ise.active_directory_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "active_directory_is_user_member_of_group_info": {
    "prefix": "active_directory_is_user_member_of_group_info",
    "description": "Information module for Active Directory Is User Member Of Group",
    "body": [
      "cisco.ise.active_directory_is_user_member_of_group_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "active_directory_join_domain": {
    "prefix": "active_directory_join_domain",
    "description": "Resource module for Active Directory Join Domain",
    "body": [
      "cisco.ise.active_directory_join_domain:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "active_directory_join_domain_with_all_nodes": {
    "prefix": "active_directory_join_domain_with_all_nodes",
    "description": "Resource module for Active Directory Join Domain With All Nodes",
    "body": [
      "cisco.ise.active_directory_join_domain_with_all_nodes:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "active_directory_leave_domain": {
    "prefix": "active_directory_leave_domain",
    "description": "Resource module for Active Directory Leave Domain",
    "body": [
      "cisco.ise.active_directory_leave_domain:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "active_directory_leave_domain_with_all_nodes": {
    "prefix": "active_directory_leave_domain_with_all_nodes",
    "description": "Resource module for Active Directory Leave Domain With All Nodes",
    "body": [
      "cisco.ise.active_directory_leave_domain_with_all_nodes:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "active_directory_trusted_domains_info": {
    "prefix": "active_directory_trusted_domains_info",
    "description": "Information module for Active Directory Trusted Domains",
    "body": [
      "cisco.ise.active_directory_trusted_domains_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "active_directory_user_groups_info": {
    "prefix": "active_directory_user_groups_info",
    "description": "Information module for Active Directory User Groups",
    "body": [
      "cisco.ise.active_directory_user_groups_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "admin_user_info": {
    "prefix": "admin_user_info",
    "description": "Information module for Admin User",
    "body": [
      "cisco.ise.admin_user_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "allowed_protocols": {
    "prefix": "allowed_protocols",
    "description": "Resource module for Allowed Protocols",
    "body": [
      "cisco.ise.allowed_protocols:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#allowChap: ${4:}",
      "\t#allowEapFast: ${5:}",
      "\t#allowEapMd5: ${6:}",
      "\t#allowEapTls: ${7:}",
      "\t#allowEapTtls: ${8:}",
      "\t#allowLeap: ${9:}",
      "\t#allowMsChapV1: ${10:}",
      "\t#allowMsChapV2: ${11:}",
      "\t#allowPapAscii: ${12:}",
      "\t#allowPeap: ${13:}",
      "\t#allowPreferredEapProtocol: ${14:}",
      "\t#allowTeap: ${15:}",
      "\t#allowWeakCiphersForEap: ${16:}",
      "\t#description: ${17:}",
      "\t#eapFast: ${18:}",
      "\t#eapTls: ${19:}",
      "\t#eapTlsLBit: ${20:}",
      "\t#eapTtls: ${21:}",
      "\t#id: ${22:}",
      "\t#ise_debug: ${23:false}",
      "\t#ise_single_request_timeout: ${24:60}",
      "\t#ise_uses_api_gateway: ${25:true}",
      "\t#ise_uses_csrf_token: ${26:false}",
      "\t#ise_verify: ${27:true}",
      "\t#ise_version: ${28:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${29:true}",
      "\t#name: ${30:}",
      "\t#peap: ${31:}",
      "\t#preferredEapProtocol: ${32:}",
      "\t#processHostLookup: ${33:}",
      "\t#requireMessageAuth: ${34:}",
      "\t#teap: ${35:}"
    ]
  },
  "allowed_protocols_info": {
    "prefix": "allowed_protocols_info",
    "description": "Information module for Allowed Protocols",
    "body": [
      "cisco.ise.allowed_protocols_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "anc_endpoint_apply": {
    "prefix": "anc_endpoint_apply",
    "description": "Resource module for ANC Endpoint Apply",
    "body": [
      "cisco.ise.anc_endpoint_apply:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "anc_endpoint_bulk_monitor_status_info": {
    "prefix": "anc_endpoint_bulk_monitor_status_info",
    "description": "Information module for ANC Endpoint Bulk Monitor Status",
    "body": [
      "cisco.ise.anc_endpoint_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "anc_endpoint_bulk_request": {
    "prefix": "anc_endpoint_bulk_request",
    "description": "Resource module for ANC Endpoint Bulk Request",
    "body": [
      "cisco.ise.anc_endpoint_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "anc_endpoint_clear": {
    "prefix": "anc_endpoint_clear",
    "description": "Resource module for ANC Endpoint Clear",
    "body": [
      "cisco.ise.anc_endpoint_clear:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "anc_endpoint_info": {
    "prefix": "anc_endpoint_info",
    "description": "Information module for ANC Endpoint",
    "body": [
      "cisco.ise.anc_endpoint_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "anc_policy": {
    "prefix": "anc_policy",
    "description": "Resource module for ANC Policy",
    "body": [
      "cisco.ise.anc_policy:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#actions: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}"
    ]
  },
  "anc_policy_bulk_monitor_status_info": {
    "prefix": "anc_policy_bulk_monitor_status_info",
    "description": "Information module for ANC Policy Bulk Monitor Status",
    "body": [
      "cisco.ise.anc_policy_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "anc_policy_bulk_request": {
    "prefix": "anc_policy_bulk_request",
    "description": "Resource module for ANC Policy Bulk Request",
    "body": [
      "cisco.ise.anc_policy_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "anc_policy_info": {
    "prefix": "anc_policy_info",
    "description": "Information module for ANC Policy",
    "body": [
      "cisco.ise.anc_policy_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sortasc: ${17:}",
      "\t#sortdsc: ${18:}"
    ]
  },
  "authorization_profile": {
    "prefix": "authorization_profile",
    "description": "Resource module for Authorization Profile",
    "body": [
      "cisco.ise.authorization_profile:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#accessType: ${4:}",
      "\t#acl: ${5:}",
      "\t#advancedAttributes: ${6:}",
      "\t#agentlessPosture: ${7:}",
      "\t#airespaceACL: ${8:}",
      "\t#airespaceIPv6ACL: ${9:}",
      "\t#asaVpn: ${10:}",
      "\t#authzProfileType: ${11:}",
      "\t#autoSmartPort: ${12:}",
      "\t#avcProfile: ${13:}",
      "\t#daclName: ${14:}",
      "\t#description: ${15:}",
      "\t#easywiredSessionCandidate: ${16:}",
      "\t#id: ${17:}",
      "\t#interfaceTemplate: ${18:}",
      "\t#ipv6ACLFilter: ${19:}",
      "\t#ipv6DaclName: ${20:}",
      "\t#ise_debug: ${21:false}",
      "\t#ise_single_request_timeout: ${22:60}",
      "\t#ise_uses_api_gateway: ${23:true}",
      "\t#ise_uses_csrf_token: ${24:false}",
      "\t#ise_verify: ${25:true}",
      "\t#ise_version: ${26:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${27:true}",
      "\t#macSecPolicy: ${28:}",
      "\t#name: ${29:}",
      "\t#neat: ${30:}",
      "\t#profileName: ${31:}",
      "\t#reauth: ${32:}",
      "\t#serviceTemplate: ${33:}",
      "\t#trackMovement: ${34:}",
      "\t#vlan: ${35:}",
      "\t#voiceDomainPermission: ${36:}",
      "\t#webAuth: ${37:}",
      "\t#webRedirection: ${38:}"
    ]
  },
  "authorization_profile_info": {
    "prefix": "authorization_profile_info",
    "description": "Information module for Authorization Profile",
    "body": [
      "cisco.ise.authorization_profile_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "backup_cancel": {
    "prefix": "backup_cancel",
    "description": "Resource module for Backup Cancel",
    "body": [
      "cisco.ise.backup_cancel:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "backup_config": {
    "prefix": "backup_config",
    "description": "Resource module for Backup Config",
    "body": [
      "cisco.ise.backup_config:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#backupEncryptionKey: ${4:}",
      "\t#backupName: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#repositoryName: ${13:}"
    ]
  },
  "backup_last_status_info": {
    "prefix": "backup_last_status_info",
    "description": "Information module for Backup Last Status",
    "body": [
      "cisco.ise.backup_last_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "backup_restore": {
    "prefix": "backup_restore",
    "description": "Resource module for Backup RESTore",
    "body": [
      "cisco.ise.backup_restore:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#backupEncryptionKey: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#repositoryName: ${12:}",
      "\t#restoreFile: ${13:}",
      "\t#restoreIncludeAdeos: ${14:}"
    ]
  },
  "backup_schedule_config": {
    "prefix": "backup_schedule_config",
    "description": "Resource module for Backup Schedule Config",
    "body": [
      "cisco.ise.backup_schedule_config:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#backupDescription: ${4:}",
      "\t#backupEncryptionKey: ${5:}",
      "\t#backupName: ${6:}",
      "\t#endDate: ${7:}",
      "\t#frequency: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#monthDay: ${16:}",
      "\t#repositoryName: ${17:}",
      "\t#startDate: ${18:}",
      "\t#status: ${19:}",
      "\t#time: ${20:}",
      "\t#weekDay: ${21:}"
    ]
  },
  "backup_schedule_config_update": {
    "prefix": "backup_schedule_config_update",
    "description": "Resource module for Backup Schedule Config Update",
    "body": [
      "cisco.ise.backup_schedule_config_update:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#backupDescription: ${4:}",
      "\t#backupEncryptionKey: ${5:}",
      "\t#backupName: ${6:}",
      "\t#endDate: ${7:}",
      "\t#frequency: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#monthDay: ${16:}",
      "\t#repositoryName: ${17:}",
      "\t#startDate: ${18:}",
      "\t#status: ${19:}",
      "\t#time: ${20:}",
      "\t#weekDay: ${21:}"
    ]
  },
  "bind_signed_certificate": {
    "prefix": "bind_signed_certificate",
    "description": "Resource module for Bind Signed Certificate",
    "body": [
      "cisco.ise.bind_signed_certificate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#admin: ${4:}",
      "\t#allowExtendedValidity: ${5:}",
      "\t#allowOutOfDateCert: ${6:}",
      "\t#allowReplacementOfCertificates: ${7:}",
      "\t#allowReplacementOfPortalGroupTag: ${8:}",
      "\t#data: ${9:}",
      "\t#eap: ${10:}",
      "\t#hostName: ${11:}",
      "\t#id: ${12:}",
      "\t#ims: ${13:}",
      "\t#ise_debug: ${14:false}",
      "\t#ise_single_request_timeout: ${15:60}",
      "\t#ise_uses_api_gateway: ${16:true}",
      "\t#ise_uses_csrf_token: ${17:false}",
      "\t#ise_verify: ${18:true}",
      "\t#ise_version: ${19:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${20:true}",
      "\t#name: ${21:}",
      "\t#portal: ${22:}",
      "\t#portalGroupTag: ${23:}",
      "\t#pxgrid: ${24:}",
      "\t#radius: ${25:}",
      "\t#saml: ${26:}",
      "\t#validateCertificateExtensions: ${27:}"
    ]
  },
  "byod_portal": {
    "prefix": "byod_portal",
    "description": "Resource module for BYOD Portal",
    "body": [
      "cisco.ise.byod_portal:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customizations: ${4:}",
      "\t#description: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#portalTestUrl: ${15:}",
      "\t#portalType: ${16:}",
      "\t#settings: ${17:}"
    ]
  },
  "byod_portal_info": {
    "prefix": "byod_portal_info",
    "description": "Information module for BYOD Portal",
    "body": [
      "cisco.ise.byod_portal_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "certificate_profile": {
    "prefix": "certificate_profile",
    "description": "Resource module for Certificate Profile",
    "body": [
      "cisco.ise.certificate_profile:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#allowedAsUserName: ${4:}",
      "\t#certificateAttributeName: ${5:}",
      "\t#description: ${6:}",
      "\t#externalIdentityStoreName: ${7:}",
      "\t#id: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#matchMode: ${16:}",
      "\t#name: ${17:}",
      "\t#usernameFrom: ${18:}"
    ]
  },
  "certificate_profile_info": {
    "prefix": "certificate_profile_info",
    "description": "Information module for Certificate Profile",
    "body": [
      "cisco.ise.certificate_profile_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "certificate_template_info": {
    "prefix": "certificate_template_info",
    "description": "Information module for Certificate Template",
    "body": [
      "cisco.ise.certificate_template_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "configuration": {
    "prefix": "configuration",
    "description": "Resource module for Configuration",
    "body": [
      "cisco.ise.configuration:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#enableEPO: ${4:}",
      "\t#enableRCM: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "configuration_info": {
    "prefix": "configuration_info",
    "description": "Information module for Configuration",
    "body": [
      "cisco.ise.configuration_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "connector_config": {
    "prefix": "connector_config",
    "description": "Resource module for Connector Config",
    "body": [
      "cisco.ise.connector_config:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalProperties: ${4:}",
      "\t#attributes: ${5:}",
      "\t#connectorName: ${6:}",
      "\t#connectorType: ${7:}",
      "\t#deltasyncSchedule: ${8:}",
      "\t#description: ${9:}",
      "\t#enabled: ${10:}",
      "\t#fullsyncSchedule: ${11:}",
      "\t#ise_debug: ${12:false}",
      "\t#ise_single_request_timeout: ${13:60}",
      "\t#ise_uses_api_gateway: ${14:true}",
      "\t#ise_uses_csrf_token: ${15:false}",
      "\t#ise_verify: ${16:true}",
      "\t#ise_version: ${17:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${18:true}",
      "\t#protocol: ${19:}",
      "\t#skipCertificateValidations: ${20:}",
      "\t#url: ${21:}"
    ]
  },
  "connector_config_info": {
    "prefix": "connector_config_info",
    "description": "Information module for Connector Config",
    "body": [
      "cisco.ise.connector_config_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#connectorName: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "csr_delete": {
    "prefix": "csr_delete",
    "description": "Resource module for CSR Delete",
    "body": [
      "cisco.ise.csr_delete:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostName: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "csr_export_info": {
    "prefix": "csr_export_info",
    "description": "Information module for CSR Export",
    "body": [
      "cisco.ise.csr_export_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#dirPath: ${4:}",
      "\t#filename: ${5:}",
      "\t#hostname: ${6:}",
      "\t#id: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#saveFile: ${15:}"
    ]
  },
  "csr_generate": {
    "prefix": "csr_generate",
    "description": "Resource module for CSR Generate",
    "body": [
      "cisco.ise.csr_generate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#allowWildCardCert: ${4:}",
      "\t#certificatePolicies: ${5:}",
      "\t#digestType: ${6:}",
      "\t#hostnames: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#keyLength: ${15:}",
      "\t#keyType: ${16:}",
      "\t#portalGroupTag: ${17:}",
      "\t#sanDNS: ${18:}",
      "\t#sanDir: ${19:}",
      "\t#sanIP: ${20:}",
      "\t#sanURI: ${21:}",
      "\t#subjectCity: ${22:}",
      "\t#subjectCommonName: ${23:}",
      "\t#subjectCountry: ${24:}",
      "\t#subjectOrg: ${25:}",
      "\t#subjectOrgUnit: ${26:}",
      "\t#subjectState: ${27:}",
      "\t#usedFor: ${28:}"
    ]
  },
  "csr_generate_intermediate_ca": {
    "prefix": "csr_generate_intermediate_ca",
    "description": "Resource module for CSR Generate Intermediate CA",
    "body": [
      "cisco.ise.csr_generate_intermediate_ca:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "csr_info": {
    "prefix": "csr_info",
    "description": "Information module for CSR",
    "body": [
      "cisco.ise.csr_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#hostName: ${6:}",
      "\t#id: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sort: ${17:}",
      "\t#sortBy: ${18:}"
    ]
  },
  "dataconnect_info": {
    "prefix": "dataconnect_info",
    "description": "Information module for Dataconnect Info",
    "body": [
      "cisco.ise.dataconnect_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "dataconnect_settings_info": {
    "prefix": "dataconnect_settings_info",
    "description": "Information module for Dataconnect Settings",
    "body": [
      "cisco.ise.dataconnect_settings_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "dataconnect_settings_password": {
    "prefix": "dataconnect_settings_password",
    "description": "Resource module for Dataconnect Settings Password",
    "body": [
      "cisco.ise.dataconnect_settings_password:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#password: ${11:}"
    ]
  },
  "dataconnect_settings_password_expiry": {
    "prefix": "dataconnect_settings_password_expiry",
    "description": "Resource module for Dataconnect Settings Password Expiry",
    "body": [
      "cisco.ise.dataconnect_settings_password_expiry:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#passwordExpiresInDays: ${11:}"
    ]
  },
  "dataconnect_settings_status": {
    "prefix": "dataconnect_settings_status",
    "description": "Resource module for Dataconnect Settings Status",
    "body": [
      "cisco.ise.dataconnect_settings_status:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#isEnabled: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "deployment_info": {
    "prefix": "deployment_info",
    "description": "Information module for Deployment",
    "body": [
      "cisco.ise.deployment_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#timeout: ${11:}"
    ]
  },
  "device_administration_authentication_reset_hitcount": {
    "prefix": "device_administration_authentication_reset_hitcount",
    "description": "Resource module for Device Administration Authentication Reset Hitcount",
    "body": [
      "cisco.ise.device_administration_authentication_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#policyId: ${11:}"
    ]
  },
  "device_administration_authentication_rules": {
    "prefix": "device_administration_authentication_rules",
    "description": "Resource module for Device Administration Authentication Rules",
    "body": [
      "cisco.ise.device_administration_authentication_rules:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#identitySourceId: ${5:}",
      "\t#identitySourceName: ${6:}",
      "\t#ifAuthFail: ${7:}",
      "\t#ifProcessFail: ${8:}",
      "\t#ifUserNotFound: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#link: ${17:}",
      "\t#policyId: ${18:}",
      "\t#rule: ${19:}"
    ]
  },
  "device_administration_authentication_rules_info": {
    "prefix": "device_administration_authentication_rules_info",
    "description": "Information module for Device Administration Authentication Rules",
    "body": [
      "cisco.ise.device_administration_authentication_rules_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#policyId: ${12:}"
    ]
  },
  "device_administration_authorization_reset_hitcount": {
    "prefix": "device_administration_authorization_reset_hitcount",
    "description": "Resource module for Device Administration Authorization Reset Hitcount",
    "body": [
      "cisco.ise.device_administration_authorization_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#policyId: ${11:}"
    ]
  },
  "device_administration_authorization_rules": {
    "prefix": "device_administration_authorization_rules",
    "description": "Resource module for Device Administration Authorization Rules",
    "body": [
      "cisco.ise.device_administration_authorization_rules:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#commands: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#link: ${13:}",
      "\t#policyId: ${14:}",
      "\t#profile: ${15:}",
      "\t#rule: ${16:}"
    ]
  },
  "device_administration_authorization_rules_info": {
    "prefix": "device_administration_authorization_rules_info",
    "description": "Information module for Device Administration Authorization Rules",
    "body": [
      "cisco.ise.device_administration_authorization_rules_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#policyId: ${12:}"
    ]
  },
  "device_administration_command_set_info": {
    "prefix": "device_administration_command_set_info",
    "description": "Information module for Device Administration Command Set",
    "body": [
      "cisco.ise.device_administration_command_set_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_conditions": {
    "prefix": "device_administration_conditions",
    "description": "Resource module for Device Administration Conditions",
    "body": [
      "cisco.ise.device_administration_conditions:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#attributeId: ${4:}",
      "\t#attributeName: ${5:}",
      "\t#attributeValue: ${6:}",
      "\t#children: ${7:}",
      "\t#conditionType: ${8:}",
      "\t#datesRange: ${9:}",
      "\t#datesRangeException: ${10:}",
      "\t#description: ${11:}",
      "\t#dictionaryName: ${12:}",
      "\t#dictionaryValue: ${13:}",
      "\t#hoursRange: ${14:}",
      "\t#hoursRangeException: ${15:}",
      "\t#id: ${16:}",
      "\t#isNegate: ${17:}",
      "\t#ise_debug: ${18:false}",
      "\t#ise_single_request_timeout: ${19:60}",
      "\t#ise_uses_api_gateway: ${20:true}",
      "\t#ise_uses_csrf_token: ${21:false}",
      "\t#ise_verify: ${22:true}",
      "\t#ise_version: ${23:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${24:true}",
      "\t#link: ${25:}",
      "\t#name: ${26:}",
      "\t#operator: ${27:}",
      "\t#weekDays: ${28:}",
      "\t#weekDaysException: ${29:}"
    ]
  },
  "device_administration_conditions_for_authentication_rule_info": {
    "prefix": "device_administration_conditions_for_authentication_rule_info",
    "description": "Information module for Device Administration Conditions For Authentication Rule",
    "body": [
      "cisco.ise.device_administration_conditions_for_authentication_rule_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_conditions_for_authorization_rule_info": {
    "prefix": "device_administration_conditions_for_authorization_rule_info",
    "description": "Information module for Device Administration Conditions For Authorization Rule",
    "body": [
      "cisco.ise.device_administration_conditions_for_authorization_rule_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_conditions_for_policy_set_info": {
    "prefix": "device_administration_conditions_for_policy_set_info",
    "description": "Information module for Device Administration Conditions For Policy Set",
    "body": [
      "cisco.ise.device_administration_conditions_for_policy_set_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_conditions_info": {
    "prefix": "device_administration_conditions_info",
    "description": "Information module for Device Administration Conditions",
    "body": [
      "cisco.ise.device_administration_conditions_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}"
    ]
  },
  "device_administration_dictionary_attributes_authentication_info": {
    "prefix": "device_administration_dictionary_attributes_authentication_info",
    "description": "Information module for Device Administration Dictionary Attributes Authentication",
    "body": [
      "cisco.ise.device_administration_dictionary_attributes_authentication_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_dictionary_attributes_authorization_info": {
    "prefix": "device_administration_dictionary_attributes_authorization_info",
    "description": "Information module for Device Administration Dictionary Attributes Authorization",
    "body": [
      "cisco.ise.device_administration_dictionary_attributes_authorization_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_dictionary_attributes_policy_set_info": {
    "prefix": "device_administration_dictionary_attributes_policy_set_info",
    "description": "Information module for Device Administration Dictionary Attributes Policy Set",
    "body": [
      "cisco.ise.device_administration_dictionary_attributes_policy_set_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_global_exception_rules": {
    "prefix": "device_administration_global_exception_rules",
    "description": "Resource module for Device Administration Global Exception Rules",
    "body": [
      "cisco.ise.device_administration_global_exception_rules:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#commands: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#link: ${13:}",
      "\t#profile: ${14:}",
      "\t#rule: ${15:}"
    ]
  },
  "device_administration_global_exception_rules_info": {
    "prefix": "device_administration_global_exception_rules_info",
    "description": "Information module for Device Administration Global Exception Rules",
    "body": [
      "cisco.ise.device_administration_global_exception_rules_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "device_administration_global_exception_rules_reset_hitcount": {
    "prefix": "device_administration_global_exception_rules_reset_hitcount",
    "description": "Resource module for Device Administration Global Exception Rules Reset Hitcount",
    "body": [
      "cisco.ise.device_administration_global_exception_rules_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_identity_stores_info": {
    "prefix": "device_administration_identity_stores_info",
    "description": "Information module for Device Administration Identity Stores",
    "body": [
      "cisco.ise.device_administration_identity_stores_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_local_exception_rules": {
    "prefix": "device_administration_local_exception_rules",
    "description": "Resource module for Device Administration Local Exception Rules",
    "body": [
      "cisco.ise.device_administration_local_exception_rules:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#commands: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#link: ${13:}",
      "\t#policyId: ${14:}",
      "\t#profile: ${15:}",
      "\t#rule: ${16:}"
    ]
  },
  "device_administration_local_exception_rules_info": {
    "prefix": "device_administration_local_exception_rules_info",
    "description": "Information module for Device Administration Local Exception Rules",
    "body": [
      "cisco.ise.device_administration_local_exception_rules_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#policyId: ${12:}"
    ]
  },
  "device_administration_local_exception_rules_reset_hitcount": {
    "prefix": "device_administration_local_exception_rules_reset_hitcount",
    "description": "Resource module for Device Administration Local Exception Rules Reset Hitcount",
    "body": [
      "cisco.ise.device_administration_local_exception_rules_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#policyId: ${11:}"
    ]
  },
  "device_administration_network_conditions": {
    "prefix": "device_administration_network_conditions",
    "description": "Resource module for Device Administration Network Conditions",
    "body": [
      "cisco.ise.device_administration_network_conditions:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#cliDnisList: ${4:}",
      "\t#conditionType: ${5:}",
      "\t#description: ${6:}",
      "\t#deviceGroupList: ${7:}",
      "\t#deviceList: ${8:}",
      "\t#id: ${9:}",
      "\t#ipAddrList: ${10:}",
      "\t#ise_debug: ${11:false}",
      "\t#ise_single_request_timeout: ${12:60}",
      "\t#ise_uses_api_gateway: ${13:true}",
      "\t#ise_uses_csrf_token: ${14:false}",
      "\t#ise_verify: ${15:true}",
      "\t#ise_version: ${16:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${17:true}",
      "\t#link: ${18:}",
      "\t#macAddrList: ${19:}",
      "\t#name: ${20:}"
    ]
  },
  "device_administration_network_conditions_info": {
    "prefix": "device_administration_network_conditions_info",
    "description": "Information module for Device Administration Network Conditions",
    "body": [
      "cisco.ise.device_administration_network_conditions_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "device_administration_policy_set": {
    "prefix": "device_administration_policy_set",
    "description": "Resource module for Device Administration Policy Set",
    "body": [
      "cisco.ise.device_administration_policy_set:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#condition: ${4:}",
      "\t#default: ${5:}",
      "\t#description: ${6:}",
      "\t#hitCounts: ${7:}",
      "\t#id: ${8:}",
      "\t#isProxy: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#link: ${17:}",
      "\t#name: ${18:}",
      "\t#rank: ${19:}",
      "\t#serviceName: ${20:}",
      "\t#state_: ${21:}"
    ]
  },
  "device_administration_policy_set_info": {
    "prefix": "device_administration_policy_set_info",
    "description": "Information module for Device Administration Policy Set",
    "body": [
      "cisco.ise.device_administration_policy_set_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "device_administration_policy_set_reset_hitcount": {
    "prefix": "device_administration_policy_set_reset_hitcount",
    "description": "Resource module for Device Administration Policy Set Reset Hitcount",
    "body": [
      "cisco.ise.device_administration_policy_set_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_profiles_info": {
    "prefix": "device_administration_profiles_info",
    "description": "Information module for Device Administration Profiles",
    "body": [
      "cisco.ise.device_administration_profiles_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_service_names_info": {
    "prefix": "device_administration_service_names_info",
    "description": "Information module for Device Administration Service Names",
    "body": [
      "cisco.ise.device_administration_service_names_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "device_administration_time_date_conditions": {
    "prefix": "device_administration_time_date_conditions",
    "description": "Resource module for Device Administration Time Date Conditions",
    "body": [
      "cisco.ise.device_administration_time_date_conditions:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#attributeId: ${4:}",
      "\t#attributeName: ${5:}",
      "\t#attributeValue: ${6:}",
      "\t#children: ${7:}",
      "\t#conditionType: ${8:}",
      "\t#datesRange: ${9:}",
      "\t#datesRangeException: ${10:}",
      "\t#description: ${11:}",
      "\t#dictionaryName: ${12:}",
      "\t#dictionaryValue: ${13:}",
      "\t#hoursRange: ${14:}",
      "\t#hoursRangeException: ${15:}",
      "\t#id: ${16:}",
      "\t#isNegate: ${17:}",
      "\t#ise_debug: ${18:false}",
      "\t#ise_single_request_timeout: ${19:60}",
      "\t#ise_uses_api_gateway: ${20:true}",
      "\t#ise_uses_csrf_token: ${21:false}",
      "\t#ise_verify: ${22:true}",
      "\t#ise_version: ${23:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${24:true}",
      "\t#link: ${25:}",
      "\t#name: ${26:}",
      "\t#operator: ${27:}",
      "\t#weekDays: ${28:}",
      "\t#weekDaysException: ${29:}"
    ]
  },
  "device_administration_time_date_conditions_info": {
    "prefix": "device_administration_time_date_conditions_info",
    "description": "Information module for Device Administration Time Date Conditions",
    "body": [
      "cisco.ise.device_administration_time_date_conditions_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "dictionary_references_info": {
    "prefix": "dictionary_references_info",
    "description": "Information module for Dictionary References Info",
    "body": [
      "cisco.ise.dictionary_references_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "downloadable_acl": {
    "prefix": "downloadable_acl",
    "description": "Resource module for Downloadable ACL",
    "body": [
      "cisco.ise.downloadable_acl:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#dacl: ${4:}",
      "\t#daclType: ${5:}",
      "\t#description: ${6:}",
      "\t#id: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#name: ${15:}"
    ]
  },
  "downloadable_acl_info": {
    "prefix": "downloadable_acl_info",
    "description": "Information module for Downloadable ACL",
    "body": [
      "cisco.ise.downloadable_acl_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#page: ${12:}",
      "\t#size: ${13:}"
    ]
  },
  "egress_matrix_cell": {
    "prefix": "egress_matrix_cell",
    "description": "Resource module for Egress Matrix Cell",
    "body": [
      "cisco.ise.egress_matrix_cell:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#defaultRule: ${4:}",
      "\t#description: ${5:}",
      "\t#destinationSGtId: ${6:}",
      "\t#id: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#matrixCellStatus: ${15:}",
      "\t#name: ${16:}",
      "\t#sgacls: ${17:}",
      "\t#sourceSGtId: ${18:}"
    ]
  },
  "egress_matrix_cell_bulk_monitor_status_info": {
    "prefix": "egress_matrix_cell_bulk_monitor_status_info",
    "description": "Information module for Egress Matrix Cell Bulk Monitor Status",
    "body": [
      "cisco.ise.egress_matrix_cell_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "egress_matrix_cell_bulk_request": {
    "prefix": "egress_matrix_cell_bulk_request",
    "description": "Resource module for Egress Matrix Cell Bulk Request",
    "body": [
      "cisco.ise.egress_matrix_cell_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "egress_matrix_cell_clear_all": {
    "prefix": "egress_matrix_cell_clear_all",
    "description": "Resource module for Egress Matrix Cell Clear All",
    "body": [
      "cisco.ise.egress_matrix_cell_clear_all:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "egress_matrix_cell_clone": {
    "prefix": "egress_matrix_cell_clone",
    "description": "Resource module for Egress Matrix Cell Clone",
    "body": [
      "cisco.ise.egress_matrix_cell_clone:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#dstSGtId: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#srcSGtId: ${13:}"
    ]
  },
  "egress_matrix_cell_info": {
    "prefix": "egress_matrix_cell_info",
    "description": "Information module for Egress Matrix Cell",
    "body": [
      "cisco.ise.egress_matrix_cell_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "egress_matrix_cell_set_all_status": {
    "prefix": "egress_matrix_cell_set_all_status",
    "description": "Resource module for Egress Matrix Cell Set All Status",
    "body": [
      "cisco.ise.egress_matrix_cell_set_all_status:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#status: ${11:}"
    ]
  },
  "endpoint_bulk_monitor_status_info": {
    "prefix": "endpoint_bulk_monitor_status_info",
    "description": "Information module for Endpoint Bulk Monitor Status",
    "body": [
      "cisco.ise.endpoint_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "endpoint_bulk_request": {
    "prefix": "endpoint_bulk_request",
    "description": "Resource module for Endpoint Bulk Request",
    "body": [
      "cisco.ise.endpoint_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "endpoint_certificate": {
    "prefix": "endpoint_certificate",
    "description": "Resource module for Endpoint Certificate",
    "body": [
      "cisco.ise.endpoint_certificate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#certTemplateName: ${4:}",
      "\t#certificateRequest: ${5:}",
      "\t#dirPath: ${6:}",
      "\t#filename: ${7:}",
      "\t#format: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#password: ${16:}",
      "\t#saveFile: ${17:}"
    ]
  },
  "endpoint_deregister": {
    "prefix": "endpoint_deregister",
    "description": "Resource module for Endpoint Deregister",
    "body": [
      "cisco.ise.endpoint_deregister:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "endpoint_get_rejected_endpoints_info": {
    "prefix": "endpoint_get_rejected_endpoints_info",
    "description": "Information module for Endpoint Get Rejected Endpoints",
    "body": [
      "cisco.ise.endpoint_get_rejected_endpoints_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "endpoint_group": {
    "prefix": "endpoint_group",
    "description": "Resource module for Endpoint Group",
    "body": [
      "cisco.ise.endpoint_group:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}",
      "\t#systemDefined: ${14:}"
    ]
  },
  "endpoint_group_info": {
    "prefix": "endpoint_group_info",
    "description": "Information module for Endpoint Group",
    "body": [
      "cisco.ise.endpoint_group_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sortasc: ${17:}",
      "\t#sortdsc: ${18:}"
    ]
  },
  "endpoint_info": {
    "prefix": "endpoint_info",
    "description": "Information module for Endpoint",
    "body": [
      "cisco.ise.endpoint_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sortasc: ${17:}",
      "\t#sortdsc: ${18:}"
    ]
  },
  "endpoint_register": {
    "prefix": "endpoint_register",
    "description": "Resource module for Endpoint Register",
    "body": [
      "cisco.ise.endpoint_register:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customAttributes: ${4:}",
      "\t#description: ${5:}",
      "\t#groupId: ${6:}",
      "\t#id: ${7:}",
      "\t#identityStore: ${8:}",
      "\t#identityStoreId: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#mac: ${17:}",
      "\t#mdmAttributes: ${18:}",
      "\t#name: ${19:}",
      "\t#portalUser: ${20:}",
      "\t#profileId: ${21:}",
      "\t#staticGroupAssignment: ${22:}",
      "\t#staticProfileAssignment: ${23:}"
    ]
  },
  "endpoint_release_rejected_endpoint": {
    "prefix": "endpoint_release_rejected_endpoint",
    "description": "Resource module for Endpoint Release Rejected Endpoint",
    "body": [
      "cisco.ise.endpoint_release_rejected_endpoint:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "external_radius_server": {
    "prefix": "external_radius_server",
    "description": "Resource module for External RADIUS Server",
    "body": [
      "cisco.ise.external_radius_server:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#accountingPort: ${4:}",
      "\t#authenticationPort: ${5:}",
      "\t#authenticatorKey: ${6:}",
      "\t#description: ${7:}",
      "\t#enableKeyWrap: ${8:}",
      "\t#encryptionKey: ${9:}",
      "\t#hostIP: ${10:}",
      "\t#id: ${11:}",
      "\t#ise_debug: ${12:false}",
      "\t#ise_single_request_timeout: ${13:60}",
      "\t#ise_uses_api_gateway: ${14:true}",
      "\t#ise_uses_csrf_token: ${15:false}",
      "\t#ise_verify: ${16:true}",
      "\t#ise_version: ${17:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${18:true}",
      "\t#keyInputFormat: ${19:}",
      "\t#name: ${20:}",
      "\t#proxyTimeout: ${21:}",
      "\t#retries: ${22:}",
      "\t#sharedSecret: ${23:}",
      "\t#timeout: ${24:}"
    ]
  },
  "external_radius_server_info": {
    "prefix": "external_radius_server_info",
    "description": "Information module for External RADIUS Server",
    "body": [
      "cisco.ise.external_radius_server_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "filter_policy": {
    "prefix": "filter_policy",
    "description": "Resource module for Filter Policy",
    "body": [
      "cisco.ise.filter_policy:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#domains: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#sgt: ${13:}",
      "\t#subnet: ${14:}",
      "\t#vn: ${15:}"
    ]
  },
  "filter_policy_info": {
    "prefix": "filter_policy_info",
    "description": "Information module for Filter Policy",
    "body": [
      "cisco.ise.filter_policy_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#page: ${12:}",
      "\t#size: ${13:}"
    ]
  },
  "guest_location_info": {
    "prefix": "guest_location_info",
    "description": "Information module for Guest Location",
    "body": [
      "cisco.ise.guest_location_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "guest_smtp_notification_settings": {
    "prefix": "guest_smtp_notification_settings",
    "description": "Resource module for Guest SMTP Notification Settings",
    "body": [
      "cisco.ise.guest_smtp_notification_settings:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#connectionTimeout: ${4:}",
      "\t#defaultFromAddress: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#notificationEnabled: ${14:}",
      "\t#password: ${15:}",
      "\t#smtpPort: ${16:}",
      "\t#smtpServer: ${17:}",
      "\t#useDefaultFromAddress: ${18:}",
      "\t#usePasswordAuthentication: ${19:}",
      "\t#useTLSorSSLEncryption: ${20:}",
      "\t#userName: ${21:}"
    ]
  },
  "guest_smtp_notification_settings_info": {
    "prefix": "guest_smtp_notification_settings_info",
    "description": "Information module for Guest SMTP Notification Settings",
    "body": [
      "cisco.ise.guest_smtp_notification_settings_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "guest_ssid": {
    "prefix": "guest_ssid",
    "description": "Resource module for Guest SSID",
    "body": [
      "cisco.ise.guest_ssid:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}"
    ]
  },
  "guest_ssid_info": {
    "prefix": "guest_ssid_info",
    "description": "Information module for Guest SSID",
    "body": [
      "cisco.ise.guest_ssid_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "guest_type": {
    "prefix": "guest_type",
    "description": "Resource module for Guest Type",
    "body": [
      "cisco.ise.guest_type:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#accessTime: ${4:}",
      "\t#description: ${5:}",
      "\t#expirationNotification: ${6:}",
      "\t#id: ${7:}",
      "\t#isDefaultType: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#loginOptions: ${16:}",
      "\t#name: ${17:}",
      "\t#sponsorGroups: ${18:}"
    ]
  },
  "guest_type_email": {
    "prefix": "guest_type_email",
    "description": "Resource module for Guest Type Email",
    "body": [
      "cisco.ise.guest_type_email:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "guest_type_info": {
    "prefix": "guest_type_info",
    "description": "Information module for Guest Type",
    "body": [
      "cisco.ise.guest_type_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "guest_type_sms": {
    "prefix": "guest_type_sms",
    "description": "Resource module for Guest Type SMS",
    "body": [
      "cisco.ise.guest_type_sms:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "guest_user": {
    "prefix": "guest_user",
    "description": "Resource module for Guest User",
    "body": [
      "cisco.ise.guest_user:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customFields: ${4:}",
      "\t#description: ${5:}",
      "\t#guestAccessInfo: ${6:}",
      "\t#guestInfo: ${7:}",
      "\t#guestType: ${8:}",
      "\t#id: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#name: ${17:}",
      "\t#portalId: ${18:}",
      "\t#reasonForVisit: ${19:}",
      "\t#sponsorUserId: ${20:}",
      "\t#sponsorUserName: ${21:}",
      "\t#status: ${22:}",
      "\t#statusReason: ${23:}"
    ]
  },
  "guest_user_approve": {
    "prefix": "guest_user_approve",
    "description": "Resource module for Guest User Approve",
    "body": [
      "cisco.ise.guest_user_approve:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "guest_user_bulk_monitor_status_info": {
    "prefix": "guest_user_bulk_monitor_status_info",
    "description": "Information module for Guest User Bulk Monitor Status",
    "body": [
      "cisco.ise.guest_user_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "guest_user_bulk_request": {
    "prefix": "guest_user_bulk_request",
    "description": "Resource module for Guest User Bulk Request",
    "body": [
      "cisco.ise.guest_user_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "guest_user_change_sponsor_password": {
    "prefix": "guest_user_change_sponsor_password",
    "description": "Resource module for Guest User Change Sponsor Password",
    "body": [
      "cisco.ise.guest_user_change_sponsor_password:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#portalId: ${12:}"
    ]
  },
  "guest_user_deny": {
    "prefix": "guest_user_deny",
    "description": "Resource module for Guest User Deny",
    "body": [
      "cisco.ise.guest_user_deny:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "guest_user_email": {
    "prefix": "guest_user_email",
    "description": "Resource module for Guest User Email",
    "body": [
      "cisco.ise.guest_user_email:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#portalId: ${13:}"
    ]
  },
  "guest_user_info": {
    "prefix": "guest_user_info",
    "description": "Information module for Guest User",
    "body": [
      "cisco.ise.guest_user_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sortasc: ${17:}",
      "\t#sortdsc: ${18:}"
    ]
  },
  "guest_user_reinstate": {
    "prefix": "guest_user_reinstate",
    "description": "Resource module for Guest User Reinstate",
    "body": [
      "cisco.ise.guest_user_reinstate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}"
    ]
  },
  "guest_user_reset_password": {
    "prefix": "guest_user_reset_password",
    "description": "Resource module for Guest User Reset Password",
    "body": [
      "cisco.ise.guest_user_reset_password:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "guest_user_sms": {
    "prefix": "guest_user_sms",
    "description": "Resource module for Guest User SMS",
    "body": [
      "cisco.ise.guest_user_sms:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#portalId: ${12:}"
    ]
  },
  "guest_user_suspend": {
    "prefix": "guest_user_suspend",
    "description": "Resource module for Guest User Suspend",
    "body": [
      "cisco.ise.guest_user_suspend:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#additionalData: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}"
    ]
  },
  "hotpatch_info": {
    "prefix": "hotpatch_info",
    "description": "Information module for Hotpatch",
    "body": [
      "cisco.ise.hotpatch_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "hotpatch_install": {
    "prefix": "hotpatch_install",
    "description": "Resource module for Hotpatch Install",
    "body": [
      "cisco.ise.hotpatch_install:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hotpatchName: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#repositoryName: ${12:}"
    ]
  },
  "hotpatch_rollback": {
    "prefix": "hotpatch_rollback",
    "description": "Resource module for Hotpatch Rollback",
    "body": [
      "cisco.ise.hotpatch_rollback:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hotpatchName: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#repositoryName: ${12:}"
    ]
  },
  "hotspot_portal": {
    "prefix": "hotspot_portal",
    "description": "Resource module for Hotspot Portal",
    "body": [
      "cisco.ise.hotspot_portal:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customizations: ${4:}",
      "\t#description: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#portalTestUrl: ${15:}",
      "\t#portalType: ${16:}",
      "\t#settings: ${17:}"
    ]
  },
  "hotspot_portal_info": {
    "prefix": "hotspot_portal_info",
    "description": "Information module for Hotspot Portal",
    "body": [
      "cisco.ise.hotspot_portal_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "id_store_sequence": {
    "prefix": "id_store_sequence",
    "description": "Resource module for Id Store Sequence",
    "body": [
      "cisco.ise.id_store_sequence:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#breakOnStoreFail: ${4:}",
      "\t#certificateAuthenticationProfile: ${5:}",
      "\t#description: ${6:}",
      "\t#id: ${7:}",
      "\t#idSeqItem: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#name: ${16:}",
      "\t#parent: ${17:}"
    ]
  },
  "id_store_sequence_info": {
    "prefix": "id_store_sequence_info",
    "description": "Information module for Id Store Sequence",
    "body": [
      "cisco.ise.id_store_sequence_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "internal_user": {
    "prefix": "internal_user",
    "description": "Resource module for Internal User",
    "body": [
      "cisco.ise.internal_user:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#changePassword: ${4:}",
      "\t#customAttributes: ${5:}",
      "\t#description: ${6:}",
      "\t#email: ${7:}",
      "\t#enablePassword: ${8:}",
      "\t#enabled: ${9:}",
      "\t#expiryDate: ${10:}",
      "\t#expiryDateEnabled: ${11:}",
      "\t#firstName: ${12:}",
      "\t#id: ${13:}",
      "\t#identityGroups: ${14:}",
      "\t#ise_debug: ${15:false}",
      "\t#ise_single_request_timeout: ${16:60}",
      "\t#ise_uses_api_gateway: ${17:true}",
      "\t#ise_uses_csrf_token: ${18:false}",
      "\t#ise_verify: ${19:true}",
      "\t#ise_version: ${20:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${21:true}",
      "\t#lastName: ${22:}",
      "\t#name: ${23:}",
      "\t#password: ${24:}",
      "\t#passwordIDStore: ${25:}"
    ]
  },
  "internal_user_info": {
    "prefix": "internal_user_info",
    "description": "Information module for Internal User",
    "body": [
      "cisco.ise.internal_user_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sortasc: ${17:}",
      "\t#sortdsc: ${18:}"
    ]
  },
  "ise_root_ca_regenerate": {
    "prefix": "ise_root_ca_regenerate",
    "description": "Resource module for Ise Root CA Regenerate",
    "body": [
      "cisco.ise.ise_root_ca_regenerate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#removeExistingISEIntermediateCSR: ${11:}"
    ]
  },
  "licensing_connection_type_info": {
    "prefix": "licensing_connection_type_info",
    "description": "Information module for Licensing Connection Type",
    "body": [
      "cisco.ise.licensing_connection_type_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "licensing_eval_license_info": {
    "prefix": "licensing_eval_license_info",
    "description": "Information module for Licensing Eval License",
    "body": [
      "cisco.ise.licensing_eval_license_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "licensing_feature_to_tier_mapping_info": {
    "prefix": "licensing_feature_to_tier_mapping_info",
    "description": "Information module for Licensing Feature To Tier Mapping",
    "body": [
      "cisco.ise.licensing_feature_to_tier_mapping_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "licensing_registration_create": {
    "prefix": "licensing_registration_create",
    "description": "Resource module for Licensing Registration Create",
    "body": [
      "cisco.ise.licensing_registration_create:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#connectionType: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#registrationType: ${12:}",
      "\t#ssmOnPremServer: ${13:}",
      "\t#tier: ${14:}",
      "\t#token: ${15:}"
    ]
  },
  "licensing_registration_info": {
    "prefix": "licensing_registration_info",
    "description": "Information module for Licensing Registration",
    "body": [
      "cisco.ise.licensing_registration_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "licensing_smart_state_create": {
    "prefix": "licensing_smart_state_create",
    "description": "Resource module for Licensing Smart State Create",
    "body": [
      "cisco.ise.licensing_smart_state_create:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "licensing_smart_state_info": {
    "prefix": "licensing_smart_state_info",
    "description": "Information module for Licensing Smart State",
    "body": [
      "cisco.ise.licensing_smart_state_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "licensing_tier_state_create": {
    "prefix": "licensing_tier_state_create",
    "description": "Resource module for Licensing Tier State Create",
    "body": [
      "cisco.ise.licensing_tier_state_create:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#payload: ${11:}"
    ]
  },
  "licensing_tier_state_info": {
    "prefix": "licensing_tier_state_info",
    "description": "Information module for Licensing Tier State",
    "body": [
      "cisco.ise.licensing_tier_state_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "mnt_account_status_info": {
    "prefix": "mnt_account_status_info",
    "description": "Information module for MNT Account Status",
    "body": [
      "cisco.ise.mnt_account_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#duration: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#mac: ${12:}"
    ]
  },
  "mnt_athentication_status_info": {
    "prefix": "mnt_athentication_status_info",
    "description": "Information module for Mnt Athentication Status",
    "body": [
      "cisco.ise.mnt_athentication_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#MAC: ${4:}",
      "\t#RECORDS: ${5:}",
      "\t#SECONDS: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}"
    ]
  },
  "mnt_authentication_status_info": {
    "prefix": "mnt_authentication_status_info",
    "description": "Information module for MNT Authentication Status",
    "body": [
      "cisco.ise.mnt_authentication_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#MAC: ${4:}",
      "\t#RECORDS: ${5:}",
      "\t#SECONDS: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}"
    ]
  },
  "mnt_failure_reasons_info": {
    "prefix": "mnt_failure_reasons_info",
    "description": "Information module for MNT Failure Reasons",
    "body": [
      "cisco.ise.mnt_failure_reasons_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "mnt_session_active_count_info": {
    "prefix": "mnt_session_active_count_info",
    "description": "Information module for MNT Session Active Count",
    "body": [
      "cisco.ise.mnt_session_active_count_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "mnt_session_active_list_info": {
    "prefix": "mnt_session_active_list_info",
    "description": "Information module for MNT Session Active List",
    "body": [
      "cisco.ise.mnt_session_active_list_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "mnt_session_auth_list_info": {
    "prefix": "mnt_session_auth_list_info",
    "description": "Information module for MNT Session Auth List",
    "body": [
      "cisco.ise.mnt_session_auth_list_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "mnt_session_by_ip_info": {
    "prefix": "mnt_session_by_ip_info",
    "description": "Information module for MNT Session By Ip",
    "body": [
      "cisco.ise.mnt_session_by_ip_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#endpoint_ipv4: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "mnt_session_by_mac_info": {
    "prefix": "mnt_session_by_mac_info",
    "description": "Information module for MNT Session By Mac",
    "body": [
      "cisco.ise.mnt_session_by_mac_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#mac: ${11:}"
    ]
  },
  "mnt_session_by_nas_ip_info": {
    "prefix": "mnt_session_by_nas_ip_info",
    "description": "Information module for MNT Session By Nas Ip",
    "body": [
      "cisco.ise.mnt_session_by_nas_ip_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#nas_ipv4: ${11:}"
    ]
  },
  "mnt_session_by_username_info": {
    "prefix": "mnt_session_by_username_info",
    "description": "Information module for MNT Session By Username",
    "body": [
      "cisco.ise.mnt_session_by_username_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#username: ${11:}"
    ]
  },
  "mnt_session_delete_all": {
    "prefix": "mnt_session_delete_all",
    "description": "Resource module for MNT Session Delete All",
    "body": [
      "cisco.ise.mnt_session_delete_all:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "mnt_session_disconnect_info": {
    "prefix": "mnt_session_disconnect_info",
    "description": "Information module for MNT Session Disconnect",
    "body": [
      "cisco.ise.mnt_session_disconnect_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#DISCONNECT_TYPE: ${4:}",
      "\t#ENDPOINT_IP: ${5:}",
      "\t#MAC: ${6:}",
      "\t#NAS_IPV4: ${7:}",
      "\t#PSN_NAME: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}"
    ]
  },
  "mnt_session_posture_count_info": {
    "prefix": "mnt_session_posture_count_info",
    "description": "Information module for MNT Session Posture Count",
    "body": [
      "cisco.ise.mnt_session_posture_count_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "mnt_session_profiler_count_info": {
    "prefix": "mnt_session_profiler_count_info",
    "description": "Information module for MNT Session Profiler Count",
    "body": [
      "cisco.ise.mnt_session_profiler_count_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "mnt_session_reauthentication_info": {
    "prefix": "mnt_session_reauthentication_info",
    "description": "Information module for MNT Session Reauthentication",
    "body": [
      "cisco.ise.mnt_session_reauthentication_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ENDPOINT_MAC: ${4:}",
      "\t#PSN_NAME: ${5:}",
      "\t#REAUTH_TYPE: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}"
    ]
  },
  "mnt_sessions_by_session_id_info": {
    "prefix": "mnt_sessions_by_session_id_info",
    "description": "Information module for MNT Sessions By Session Id",
    "body": [
      "cisco.ise.mnt_sessions_by_session_id_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#session_id: ${11:}"
    ]
  },
  "mnt_version_info": {
    "prefix": "mnt_version_info",
    "description": "Information module for MNT Version",
    "body": [
      "cisco.ise.mnt_version_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "my_device_portal": {
    "prefix": "my_device_portal",
    "description": "Resource module for My Device Portal",
    "body": [
      "cisco.ise.my_device_portal:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customizations: ${4:}",
      "\t#description: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#portalTestUrl: ${15:}",
      "\t#portalType: ${16:}",
      "\t#settings: ${17:}"
    ]
  },
  "my_device_portal_info": {
    "prefix": "my_device_portal_info",
    "description": "Information module for My Device Portal",
    "body": [
      "cisco.ise.my_device_portal_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "native_supplicant_profile": {
    "prefix": "native_supplicant_profile",
    "description": "Resource module for Native Supplicant Profile",
    "body": [
      "cisco.ise.native_supplicant_profile:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}",
      "\t#wirelessProfiles: ${14:}"
    ]
  },
  "native_supplicant_profile_info": {
    "prefix": "native_supplicant_profile_info",
    "description": "Information module for Native Supplicant Profile",
    "body": [
      "cisco.ise.native_supplicant_profile_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#page: ${12:}",
      "\t#size: ${13:}"
    ]
  },
  "network_access_authentication_rules": {
    "prefix": "network_access_authentication_rules",
    "description": "Resource module for Network Access Authentication Rules",
    "body": [
      "cisco.ise.network_access_authentication_rules:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#identitySourceId: ${5:}",
      "\t#identitySourceName: ${6:}",
      "\t#ifAuthFail: ${7:}",
      "\t#ifProcessFail: ${8:}",
      "\t#ifUserNotFound: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#link: ${17:}",
      "\t#policyId: ${18:}",
      "\t#rule: ${19:}"
    ]
  },
  "network_access_authentication_rules_info": {
    "prefix": "network_access_authentication_rules_info",
    "description": "Information module for Network Access Authentication Rules",
    "body": [
      "cisco.ise.network_access_authentication_rules_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#policyId: ${12:}"
    ]
  },
  "network_access_authentication_rules_reset_hitcount": {
    "prefix": "network_access_authentication_rules_reset_hitcount",
    "description": "Resource module for Network Access Authentication Rules Reset Hitcount",
    "body": [
      "cisco.ise.network_access_authentication_rules_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#policyId: ${11:}"
    ]
  },
  "network_access_authorization_rules": {
    "prefix": "network_access_authorization_rules",
    "description": "Resource module for Network Access Authorization Rules",
    "body": [
      "cisco.ise.network_access_authorization_rules:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#link: ${12:}",
      "\t#policyId: ${13:}",
      "\t#profile: ${14:}",
      "\t#rule: ${15:}",
      "\t#securityGroup: ${16:}"
    ]
  },
  "network_access_authorization_rules_info": {
    "prefix": "network_access_authorization_rules_info",
    "description": "Information module for Network Access Authorization Rules",
    "body": [
      "cisco.ise.network_access_authorization_rules_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#policyId: ${12:}"
    ]
  },
  "network_access_authorization_rules_reset_hitcount": {
    "prefix": "network_access_authorization_rules_reset_hitcount",
    "description": "Resource module for Network Access Authorization Rules Reset Hitcount",
    "body": [
      "cisco.ise.network_access_authorization_rules_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#policyId: ${11:}"
    ]
  },
  "network_access_conditions": {
    "prefix": "network_access_conditions",
    "description": "Resource module for Network Access Conditions",
    "body": [
      "cisco.ise.network_access_conditions:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#attributeId: ${4:}",
      "\t#attributeName: ${5:}",
      "\t#attributeValue: ${6:}",
      "\t#children: ${7:}",
      "\t#conditionType: ${8:}",
      "\t#datesRange: ${9:}",
      "\t#datesRangeException: ${10:}",
      "\t#description: ${11:}",
      "\t#dictionaryName: ${12:}",
      "\t#dictionaryValue: ${13:}",
      "\t#hoursRange: ${14:}",
      "\t#hoursRangeException: ${15:}",
      "\t#id: ${16:}",
      "\t#isNegate: ${17:}",
      "\t#ise_debug: ${18:false}",
      "\t#ise_single_request_timeout: ${19:60}",
      "\t#ise_uses_api_gateway: ${20:true}",
      "\t#ise_uses_csrf_token: ${21:false}",
      "\t#ise_verify: ${22:true}",
      "\t#ise_version: ${23:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${24:true}",
      "\t#link: ${25:}",
      "\t#name: ${26:}",
      "\t#operator: ${27:}",
      "\t#weekDays: ${28:}",
      "\t#weekDaysException: ${29:}"
    ]
  },
  "network_access_conditions_for_authentication_rule_info": {
    "prefix": "network_access_conditions_for_authentication_rule_info",
    "description": "Information module for Network Access Conditions For Authentication Rule",
    "body": [
      "cisco.ise.network_access_conditions_for_authentication_rule_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_conditions_for_authorization_rule_info": {
    "prefix": "network_access_conditions_for_authorization_rule_info",
    "description": "Information module for Network Access Conditions For Authorization Rule",
    "body": [
      "cisco.ise.network_access_conditions_for_authorization_rule_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_conditions_for_policy_set_info": {
    "prefix": "network_access_conditions_for_policy_set_info",
    "description": "Information module for Network Access Conditions For Policy Set",
    "body": [
      "cisco.ise.network_access_conditions_for_policy_set_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_conditions_info": {
    "prefix": "network_access_conditions_info",
    "description": "Information module for Network Access Conditions",
    "body": [
      "cisco.ise.network_access_conditions_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}"
    ]
  },
  "network_access_dictionary": {
    "prefix": "network_access_dictionary",
    "description": "Resource module for Network Access Dictionary",
    "body": [
      "cisco.ise.network_access_dictionary:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#dictionaryAttrType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#link: ${14:}",
      "\t#name: ${15:}",
      "\t#version: ${16:}"
    ]
  },
  "network_access_dictionary_attribute": {
    "prefix": "network_access_dictionary_attribute",
    "description": "Resource module for Network Access Dictionary Attribute",
    "body": [
      "cisco.ise.network_access_dictionary_attribute:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#allowedValues: ${4:}",
      "\t#dataType: ${5:}",
      "\t#description: ${6:}",
      "\t#dictionaryName: ${7:}",
      "\t#directionType: ${8:}",
      "\t#id: ${9:}",
      "\t#internalName: ${10:}",
      "\t#ise_debug: ${11:false}",
      "\t#ise_single_request_timeout: ${12:60}",
      "\t#ise_uses_api_gateway: ${13:true}",
      "\t#ise_uses_csrf_token: ${14:false}",
      "\t#ise_verify: ${15:true}",
      "\t#ise_version: ${16:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${17:true}",
      "\t#name: ${18:}"
    ]
  },
  "network_access_dictionary_attribute_info": {
    "prefix": "network_access_dictionary_attribute_info",
    "description": "Information module for Network Access Dictionary Attribute",
    "body": [
      "cisco.ise.network_access_dictionary_attribute_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#dictionaryName: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}"
    ]
  },
  "network_access_dictionary_attributes_authentication_info": {
    "prefix": "network_access_dictionary_attributes_authentication_info",
    "description": "Information module for Network Access Dictionary Attributes Authentication",
    "body": [
      "cisco.ise.network_access_dictionary_attributes_authentication_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_dictionary_attributes_authorization_info": {
    "prefix": "network_access_dictionary_attributes_authorization_info",
    "description": "Information module for Network Access Dictionary Attributes Authorization",
    "body": [
      "cisco.ise.network_access_dictionary_attributes_authorization_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_dictionary_attributes_policy_set_info": {
    "prefix": "network_access_dictionary_attributes_policy_set_info",
    "description": "Information module for Network Access Dictionary Attributes Policy Set",
    "body": [
      "cisco.ise.network_access_dictionary_attributes_policy_set_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_dictionary_info": {
    "prefix": "network_access_dictionary_info",
    "description": "Information module for Network Access Dictionary",
    "body": [
      "cisco.ise.network_access_dictionary_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#name: ${11:}"
    ]
  },
  "network_access_global_exception_rules": {
    "prefix": "network_access_global_exception_rules",
    "description": "Resource module for Network Access Global Exception Rules",
    "body": [
      "cisco.ise.network_access_global_exception_rules:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#link: ${12:}",
      "\t#profile: ${13:}",
      "\t#rule: ${14:}",
      "\t#securityGroup: ${15:}"
    ]
  },
  "network_access_global_exception_rules_info": {
    "prefix": "network_access_global_exception_rules_info",
    "description": "Information module for Network Access Global Exception Rules",
    "body": [
      "cisco.ise.network_access_global_exception_rules_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "network_access_global_exception_rules_reset_hitcount": {
    "prefix": "network_access_global_exception_rules_reset_hitcount",
    "description": "Resource module for Network Access Global Exception Rules Reset Hitcount",
    "body": [
      "cisco.ise.network_access_global_exception_rules_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_identity_stores_info": {
    "prefix": "network_access_identity_stores_info",
    "description": "Information module for Network Access Identity Stores",
    "body": [
      "cisco.ise.network_access_identity_stores_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_local_exception_rules": {
    "prefix": "network_access_local_exception_rules",
    "description": "Resource module for Network Access Local Exception Rules",
    "body": [
      "cisco.ise.network_access_local_exception_rules:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#link: ${12:}",
      "\t#policyId: ${13:}",
      "\t#profile: ${14:}",
      "\t#rule: ${15:}",
      "\t#securityGroup: ${16:}"
    ]
  },
  "network_access_local_exception_rules_info": {
    "prefix": "network_access_local_exception_rules_info",
    "description": "Information module for Network Access Local Exception Rules",
    "body": [
      "cisco.ise.network_access_local_exception_rules_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#policyId: ${12:}"
    ]
  },
  "network_access_local_exception_rules_reset_hitcounts": {
    "prefix": "network_access_local_exception_rules_reset_hitcounts",
    "description": "Resource module for Network Access Local Exception Rules Reset Hitcounts",
    "body": [
      "cisco.ise.network_access_local_exception_rules_reset_hitcounts:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#policyId: ${11:}"
    ]
  },
  "network_access_network_condition": {
    "prefix": "network_access_network_condition",
    "description": "Resource module for Network Access Network Condition",
    "body": [
      "cisco.ise.network_access_network_condition:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#cliDnisList: ${4:}",
      "\t#conditionType: ${5:}",
      "\t#description: ${6:}",
      "\t#deviceGroupList: ${7:}",
      "\t#deviceList: ${8:}",
      "\t#id: ${9:}",
      "\t#ipAddrList: ${10:}",
      "\t#ise_debug: ${11:false}",
      "\t#ise_single_request_timeout: ${12:60}",
      "\t#ise_uses_api_gateway: ${13:true}",
      "\t#ise_uses_csrf_token: ${14:false}",
      "\t#ise_verify: ${15:true}",
      "\t#ise_version: ${16:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${17:true}",
      "\t#link: ${18:}",
      "\t#macAddrList: ${19:}",
      "\t#name: ${20:}"
    ]
  },
  "network_access_network_condition_info": {
    "prefix": "network_access_network_condition_info",
    "description": "Information module for Network Access Network Condition",
    "body": [
      "cisco.ise.network_access_network_condition_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "network_access_policy_set": {
    "prefix": "network_access_policy_set",
    "description": "Resource module for Network Access Policy Set",
    "body": [
      "cisco.ise.network_access_policy_set:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#condition: ${4:}",
      "\t#default: ${5:}",
      "\t#description: ${6:}",
      "\t#hitCounts: ${7:}",
      "\t#id: ${8:}",
      "\t#isProxy: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#link: ${17:}",
      "\t#name: ${18:}",
      "\t#rank: ${19:}",
      "\t#serviceName: ${20:}",
      "\t#state_: ${21:}"
    ]
  },
  "network_access_policy_set_info": {
    "prefix": "network_access_policy_set_info",
    "description": "Information module for Network Access Policy Set",
    "body": [
      "cisco.ise.network_access_policy_set_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "network_access_policy_set_reset_hitcount": {
    "prefix": "network_access_policy_set_reset_hitcount",
    "description": "Resource module for Network Access Policy Set Reset Hitcount",
    "body": [
      "cisco.ise.network_access_policy_set_reset_hitcount:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_profiles_info": {
    "prefix": "network_access_profiles_info",
    "description": "Information module for Network Access Profiles",
    "body": [
      "cisco.ise.network_access_profiles_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_security_groups_info": {
    "prefix": "network_access_security_groups_info",
    "description": "Information module for Network Access Security Groups",
    "body": [
      "cisco.ise.network_access_security_groups_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_service_name_info": {
    "prefix": "network_access_service_name_info",
    "description": "Information module for Network Access Service Name",
    "body": [
      "cisco.ise.network_access_service_name_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "network_access_time_date_conditions": {
    "prefix": "network_access_time_date_conditions",
    "description": "Resource module for Network Access Time Date Conditions",
    "body": [
      "cisco.ise.network_access_time_date_conditions:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#attributeId: ${4:}",
      "\t#attributeName: ${5:}",
      "\t#attributeValue: ${6:}",
      "\t#children: ${7:}",
      "\t#conditionType: ${8:}",
      "\t#datesRange: ${9:}",
      "\t#datesRangeException: ${10:}",
      "\t#description: ${11:}",
      "\t#dictionaryName: ${12:}",
      "\t#dictionaryValue: ${13:}",
      "\t#hoursRange: ${14:}",
      "\t#hoursRangeException: ${15:}",
      "\t#id: ${16:}",
      "\t#isNegate: ${17:}",
      "\t#ise_debug: ${18:false}",
      "\t#ise_single_request_timeout: ${19:60}",
      "\t#ise_uses_api_gateway: ${20:true}",
      "\t#ise_uses_csrf_token: ${21:false}",
      "\t#ise_verify: ${22:true}",
      "\t#ise_version: ${23:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${24:true}",
      "\t#link: ${25:}",
      "\t#name: ${26:}",
      "\t#operator: ${27:}",
      "\t#weekDays: ${28:}",
      "\t#weekDaysException: ${29:}"
    ]
  },
  "network_access_time_date_conditions_info": {
    "prefix": "network_access_time_date_conditions_info",
    "description": "Information module for Network Access Time Date Conditions",
    "body": [
      "cisco.ise.network_access_time_date_conditions_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "network_device": {
    "prefix": "network_device",
    "description": "Resource module for Network Device",
    "body": [
      "cisco.ise.network_device:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#NetworkDeviceGroupList: ${4:}",
      "\t#NetworkDeviceIPList: ${5:}",
      "\t#authenticationSettings: ${6:}",
      "\t#coaPort: ${7:}",
      "\t#description: ${8:}",
      "\t#dtlsDnsName: ${9:}",
      "\t#id: ${10:}",
      "\t#ise_debug: ${11:false}",
      "\t#ise_single_request_timeout: ${12:60}",
      "\t#ise_uses_api_gateway: ${13:true}",
      "\t#ise_uses_csrf_token: ${14:false}",
      "\t#ise_verify: ${15:true}",
      "\t#ise_version: ${16:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${17:true}",
      "\t#modelName: ${18:}",
      "\t#name: ${19:}",
      "\t#profileName: ${20:}",
      "\t#snmpsettings: ${21:}",
      "\t#softwareVersion: ${22:}",
      "\t#tacacsSettings: ${23:}",
      "\t#trustsecsettings: ${24:}"
    ]
  },
  "network_device_bulk_monitor_status_info": {
    "prefix": "network_device_bulk_monitor_status_info",
    "description": "Information module for Network Device Bulk Monitor Status",
    "body": [
      "cisco.ise.network_device_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "network_device_bulk_request": {
    "prefix": "network_device_bulk_request",
    "description": "Resource module for Network Device Bulk Request",
    "body": [
      "cisco.ise.network_device_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "network_device_group": {
    "prefix": "network_device_group",
    "description": "Resource module for Network Device Group",
    "body": [
      "cisco.ise.network_device_group:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}",
      "\t#ndgtype: ${14:}"
    ]
  },
  "network_device_group_info": {
    "prefix": "network_device_group_info",
    "description": "Information module for Network Device Group",
    "body": [
      "cisco.ise.network_device_group_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sortasc: ${17:}",
      "\t#sortdsc: ${18:}"
    ]
  },
  "network_device_info": {
    "prefix": "network_device_info",
    "description": "Information module for Network Device",
    "body": [
      "cisco.ise.network_device_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sortasc: ${17:}",
      "\t#sortdsc: ${18:}"
    ]
  },
  "node_deployment": {
    "prefix": "node_deployment",
    "description": "Resource module for Node Deployment",
    "body": [
      "cisco.ise.node_deployment:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#allowCertImport: ${4:}",
      "\t#fqdn: ${5:}",
      "\t#hostname: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#password: ${14:}",
      "\t#roles: ${15:}",
      "\t#services: ${16:}",
      "\t#userName: ${17:}"
    ]
  },
  "node_deployment_info": {
    "prefix": "node_deployment_info",
    "description": "Information module for Node Deployment",
    "body": [
      "cisco.ise.node_deployment_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#hostname: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}"
    ]
  },
  "node_deployment_sync": {
    "prefix": "node_deployment_sync",
    "description": "Resource module for Node Deployment Sync",
    "body": [
      "cisco.ise.node_deployment_sync:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostname: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "node_group": {
    "prefix": "node_group",
    "description": "Resource module for Node Group",
    "body": [
      "cisco.ise.node_group:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#forceDelete: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#marCache: ${13:}",
      "\t#name: ${14:}",
      "\t#nodeGroupName: ${15:}"
    ]
  },
  "node_group_info": {
    "prefix": "node_group_info",
    "description": "Information module for Node Group",
    "body": [
      "cisco.ise.node_group_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#nodeGroupName: ${11:}"
    ]
  },
  "node_group_node_create": {
    "prefix": "node_group_node_create",
    "description": "Resource module for Node Group Node Create",
    "body": [
      "cisco.ise.node_group_node_create:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostname: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#nodeGroupName: ${12:}"
    ]
  },
  "node_group_node_delete": {
    "prefix": "node_group_node_delete",
    "description": "Resource module for Node Group Node Delete",
    "body": [
      "cisco.ise.node_group_node_delete:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostname: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#nodeGroupName: ${12:}"
    ]
  },
  "node_group_node_info": {
    "prefix": "node_group_node_info",
    "description": "Information module for Node Group Node",
    "body": [
      "cisco.ise.node_group_node_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#nodeGroupName: ${11:}"
    ]
  },
  "node_info": {
    "prefix": "node_info",
    "description": "Information module for Node",
    "body": [
      "cisco.ise.node_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}"
    ]
  },
  "node_primary_to_standalone": {
    "prefix": "node_primary_to_standalone",
    "description": "Resource module for Node Primary To Standalone",
    "body": [
      "cisco.ise.node_primary_to_standalone:",
      "\thostname: ${1:}",
      "\tise_hostname: ${2:}",
      "\tise_password: ${3:}",
      "\tise_username: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "node_promotion": {
    "prefix": "node_promotion",
    "description": "Resource module for Node Promotion",
    "body": [
      "cisco.ise.node_promotion:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#promotionType: ${11:}"
    ]
  },
  "node_replication_status_info": {
    "prefix": "node_replication_status_info",
    "description": "Information module for Node Replication Status",
    "body": [
      "cisco.ise.node_replication_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#node: ${11:}"
    ]
  },
  "node_secondary_to_primary": {
    "prefix": "node_secondary_to_primary",
    "description": "Resource module for Node Secondary To Primary",
    "body": [
      "cisco.ise.node_secondary_to_primary:",
      "\thostname: ${1:}",
      "\tise_hostname: ${2:}",
      "\tise_password: ${3:}",
      "\tise_username: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "node_services_interfaces_info": {
    "prefix": "node_services_interfaces_info",
    "description": "Information module for Node Services Interfaces",
    "body": [
      "cisco.ise.node_services_interfaces_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostname: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "node_services_profiler_probe_config": {
    "prefix": "node_services_profiler_probe_config",
    "description": "Resource module for Node Services Profiler Probe Config",
    "body": [
      "cisco.ise.node_services_profiler_probe_config:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#activeDirectory: ${4:}",
      "\t#dhcp: ${5:}",
      "\t#dhcpSpan: ${6:}",
      "\t#dns: ${7:}",
      "\t#hostname: ${8:}",
      "\t#http: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#netflow: ${17:}",
      "\t#nmap: ${18:}",
      "\t#pxgrid: ${19:}",
      "\t#radius: ${20:}",
      "\t#snmpQuery: ${21:}",
      "\t#snmpTrap: ${22:}"
    ]
  },
  "node_services_profiler_probe_config_info": {
    "prefix": "node_services_profiler_probe_config_info",
    "description": "Information module for Node Services Profiler Probe Config",
    "body": [
      "cisco.ise.node_services_profiler_probe_config_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostname: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "node_services_sxp_interfaces": {
    "prefix": "node_services_sxp_interfaces",
    "description": "Resource module for Node Services SXP Interfaces",
    "body": [
      "cisco.ise.node_services_sxp_interfaces:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostname: ${4:}",
      "\t#interface: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "node_services_sxp_interfaces_info": {
    "prefix": "node_services_sxp_interfaces_info",
    "description": "Information module for Node Services SXP Interfaces",
    "body": [
      "cisco.ise.node_services_sxp_interfaces_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostname: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "node_standalone_to_primary": {
    "prefix": "node_standalone_to_primary",
    "description": "Resource module for Node Standalone To Primary",
    "body": [
      "cisco.ise.node_standalone_to_primary:",
      "\thostname: ${1:}",
      "\tise_hostname: ${2:}",
      "\tise_password: ${3:}",
      "\tise_username: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "node_sync": {
    "prefix": "node_sync",
    "description": "Resource module for Node Sync",
    "body": [
      "cisco.ise.node_sync:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#hostname: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "pan_ha": {
    "prefix": "pan_ha",
    "description": "Resource module for Pan Ha",
    "body": [
      "cisco.ise.pan_ha:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#failedAttempts: ${4:}",
      "\t#isEnabled: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#pollingInterval: ${13:}",
      "\t#primaryHealthCheckNode: ${14:}",
      "\t#secondaryHealthCheckNode: ${15:}"
    ]
  },
  "pan_ha_info": {
    "prefix": "pan_ha_info",
    "description": "Information module for Pan Ha",
    "body": [
      "cisco.ise.pan_ha_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pan_ha_update": {
    "prefix": "pan_ha_update",
    "description": "Resource module for Pan Ha Update",
    "body": [
      "cisco.ise.pan_ha_update:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#failedAttempts: ${4:}",
      "\t#isEnabled: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#pollingInterval: ${13:}",
      "\t#primaryHealthCheckNode: ${14:}",
      "\t#secondaryHealthCheckNode: ${15:}"
    ]
  },
  "patch_info": {
    "prefix": "patch_info",
    "description": "Information module for Patch",
    "body": [
      "cisco.ise.patch_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "patch_install": {
    "prefix": "patch_install",
    "description": "Resource module for Patch Install",
    "body": [
      "cisco.ise.patch_install:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#patchName: ${11:}",
      "\t#repositoryName: ${12:}"
    ]
  },
  "patch_rollback": {
    "prefix": "patch_rollback",
    "description": "Resource module for Patch Rollback",
    "body": [
      "cisco.ise.patch_rollback:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#patchNumber: ${11:}"
    ]
  },
  "personas_check_standalone": {
    "prefix": "personas_check_standalone",
    "description": "Ensure the node is in standalone mode",
    "body": [
      "cisco.ise.personas_check_standalone:",
      "\t#hostname: ${1:}",
      "\t#ip: ${2:}",
      "\t#ise_verify: ${3:}",
      "\t#ise_version: ${4:}",
      "\t#ise_wait_on_rate_limit: ${5:}",
      "\t#password: ${6:}",
      "\t#username: ${7:}"
    ]
  },
  "personas_export_certs": {
    "prefix": "personas_export_certs",
    "description": "Export certificate into primary node",
    "body": [
      "cisco.ise.personas_export_certs:",
      "\t#hostname: ${1:}",
      "\t#ip: ${2:}",
      "\t#ise_verify: ${3:}",
      "\t#ise_version: ${4:}",
      "\t#ise_wait_on_rate_limit: ${5:}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#primary_ip: ${8:}",
      "\t#primary_password: ${9:}",
      "\t#primary_username: ${10:}",
      "\t#username: ${11:}"
    ]
  },
  "personas_promote_primary": {
    "prefix": "personas_promote_primary",
    "description": "Promote a node as the primary node",
    "body": [
      "cisco.ise.personas_promote_primary:",
      "\t#ip: ${1:}",
      "\t#ise_verify: ${2:}",
      "\t#ise_version: ${3:}",
      "\t#ise_wait_on_rate_limit: ${4:}",
      "\t#password: ${5:}",
      "\t#username: ${6:}"
    ]
  },
  "personas_register_node": {
    "prefix": "personas_register_node",
    "description": "Register a node to the primary",
    "body": [
      "cisco.ise.personas_register_node:",
      "\t#fqdn: ${1:}",
      "\t#ise_verify: ${2:}",
      "\t#ise_version: ${3:}",
      "\t#ise_wait_on_rate_limit: ${4:}",
      "\t#password: ${5:}",
      "\t#primary_ip: ${6:}",
      "\t#primary_password: ${7:}",
      "\t#primary_username: ${8:}",
      "\t#roles: ${9:}",
      "\t#services: ${10:}",
      "\t#username: ${11:}"
    ]
  },
  "personas_update_roles_services": {
    "prefix": "personas_update_roles_services",
    "description": "Update the roles and services of a node",
    "body": [
      "cisco.ise.personas_update_roles_services:",
      "\t#hostname: ${1:}",
      "\t#ip: ${2:}",
      "\t#ise_verify: ${3:}",
      "\t#ise_version: ${4:}",
      "\t#ise_wait_on_rate_limit: ${5:}",
      "\t#password: ${6:}",
      "\t#roles: ${7:}",
      "\t#services: ${8:}",
      "\t#username: ${9:}"
    ]
  },
  "portal_global_setting": {
    "prefix": "portal_global_setting",
    "description": "Resource module for Portal Global Setting",
    "body": [
      "cisco.ise.portal_global_setting:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customization: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "portal_global_setting_info": {
    "prefix": "portal_global_setting_info",
    "description": "Information module for Portal Global Setting",
    "body": [
      "cisco.ise.portal_global_setting_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "portal_info": {
    "prefix": "portal_info",
    "description": "Information module for Portal",
    "body": [
      "cisco.ise.portal_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "portal_theme": {
    "prefix": "portal_theme",
    "description": "Resource module for Portal Theme",
    "body": [
      "cisco.ise.portal_theme:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}",
      "\t#themeData: ${14:}"
    ]
  },
  "portal_theme_info": {
    "prefix": "portal_theme_info",
    "description": "Information module for Portal Theme",
    "body": [
      "cisco.ise.portal_theme_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "profiler_profile_info": {
    "prefix": "profiler_profile_info",
    "description": "Information module for Profiler Profile",
    "body": [
      "cisco.ise.profiler_profile_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "proxy_connection_settings": {
    "prefix": "proxy_connection_settings",
    "description": "Resource module for Proxy Connection Settings",
    "body": [
      "cisco.ise.proxy_connection_settings:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bypassHosts: ${4:}",
      "\t#fqdn: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#password: ${13:}",
      "\t#passwordRequired: ${14:}",
      "\t#port: ${15:}",
      "\t#userName: ${16:}"
    ]
  },
  "proxy_connection_settings_info": {
    "prefix": "proxy_connection_settings_info",
    "description": "Information module for Proxy Connection Settings",
    "body": [
      "cisco.ise.proxy_connection_settings_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "px_grid_node_approve": {
    "prefix": "px_grid_node_approve",
    "description": "Resource module for Px Grid Node Approve",
    "body": [
      "cisco.ise.px_grid_node_approve:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#name: ${11:}"
    ]
  },
  "px_grid_node_delete": {
    "prefix": "px_grid_node_delete",
    "description": "Resource module for Px Grid Node Delete",
    "body": [
      "cisco.ise.px_grid_node_delete:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#name: ${11:}"
    ]
  },
  "px_grid_node_info": {
    "prefix": "px_grid_node_info",
    "description": "Information module for Px Grid Node",
    "body": [
      "cisco.ise.px_grid_node_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "px_grid_settings_auto_approve": {
    "prefix": "px_grid_settings_auto_approve",
    "description": "Resource module for Px Grid Settings Auto Approve",
    "body": [
      "cisco.ise.px_grid_settings_auto_approve:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#allowPasswordBasedAccounts: ${4:}",
      "\t#autoApproveCertBasedAccounts: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "pxgrid_access_secret": {
    "prefix": "pxgrid_access_secret",
    "description": "Resource module for pxGrid Access Secret",
    "body": [
      "cisco.ise.pxgrid_access_secret:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#peerNodeName: ${11:}"
    ]
  },
  "pxgrid_account_activate": {
    "prefix": "pxgrid_account_activate",
    "description": "Resource module for pxGrid Account Activate",
    "body": [
      "cisco.ise.pxgrid_account_activate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "pxgrid_account_create": {
    "prefix": "pxgrid_account_create",
    "description": "Resource module for pxGrid Account Create",
    "body": [
      "cisco.ise.pxgrid_account_create:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#nodeName: ${11:}"
    ]
  },
  "pxgrid_authorization": {
    "prefix": "pxgrid_authorization",
    "description": "Resource module for pxGrid Authorization",
    "body": [
      "cisco.ise.pxgrid_authorization:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_bindings_info": {
    "prefix": "pxgrid_bindings_info",
    "description": "Information module for pxGrid Bindings Info",
    "body": [
      "cisco.ise.pxgrid_bindings_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_egress_matrices_info": {
    "prefix": "pxgrid_egress_matrices_info",
    "description": "Information module for pxGrid Egress Matrices Info",
    "body": [
      "cisco.ise.pxgrid_egress_matrices_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_egress_policies_info": {
    "prefix": "pxgrid_egress_policies_info",
    "description": "Information module for pxGrid Egress Policies Info",
    "body": [
      "cisco.ise.pxgrid_egress_policies_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_endpoint_by_mac_info": {
    "prefix": "pxgrid_endpoint_by_mac_info",
    "description": "Information module for pxGrid Endpoint By Mac Info",
    "body": [
      "cisco.ise.pxgrid_endpoint_by_mac_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_endpoints_by_os_type_info": {
    "prefix": "pxgrid_endpoints_by_os_type_info",
    "description": "Information module for pxGrid Endpoints By Os Type Info",
    "body": [
      "cisco.ise.pxgrid_endpoints_by_os_type_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_endpoints_by_type_info": {
    "prefix": "pxgrid_endpoints_by_type_info",
    "description": "Information module for pxGrid Endpoints By Type Info",
    "body": [
      "cisco.ise.pxgrid_endpoints_by_type_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_endpoints_info": {
    "prefix": "pxgrid_endpoints_info",
    "description": "Information module for pxGrid Endpoints Info",
    "body": [
      "cisco.ise.pxgrid_endpoints_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_failures_info": {
    "prefix": "pxgrid_failures_info",
    "description": "Information module for pxGrid Failures",
    "body": [
      "cisco.ise.pxgrid_failures_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_healths_info": {
    "prefix": "pxgrid_healths_info",
    "description": "Information module for pxGrid Healths Info",
    "body": [
      "cisco.ise.pxgrid_healths_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_node_approve": {
    "prefix": "pxgrid_node_approve",
    "description": "Resource module for pxGrid Node Approve",
    "body": [
      "cisco.ise.pxgrid_node_approve:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#name: ${11:}"
    ]
  },
  "pxgrid_node_delete": {
    "prefix": "pxgrid_node_delete",
    "description": "Resource module for pxGrid Node Delete",
    "body": [
      "cisco.ise.pxgrid_node_delete:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#name: ${11:}"
    ]
  },
  "pxgrid_node_info": {
    "prefix": "pxgrid_node_info",
    "description": "Information module for pxGrid Node",
    "body": [
      "cisco.ise.pxgrid_node_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "pxgrid_performances_info": {
    "prefix": "pxgrid_performances_info",
    "description": "Information module for pxGrid Performances Info",
    "body": [
      "cisco.ise.pxgrid_performances_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_profiles_info": {
    "prefix": "pxgrid_profiles_info",
    "description": "Information module for pxGrid Profiles Info",
    "body": [
      "cisco.ise.pxgrid_profiles_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_security_group_acls_info": {
    "prefix": "pxgrid_security_group_acls_info",
    "description": "Information module for pxGrid Security Group ACLs Info",
    "body": [
      "cisco.ise.pxgrid_security_group_acls_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_security_groups_info": {
    "prefix": "pxgrid_security_groups_info",
    "description": "Information module for pxGrid Security Groups Info",
    "body": [
      "cisco.ise.pxgrid_security_groups_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_service_lookup": {
    "prefix": "pxgrid_service_lookup",
    "description": "Resource module for pxGrid Service Lookup",
    "body": [
      "cisco.ise.pxgrid_service_lookup:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#name: ${11:}"
    ]
  },
  "pxgrid_service_register": {
    "prefix": "pxgrid_service_register",
    "description": "Resource module for pxGrid Service Register",
    "body": [
      "cisco.ise.pxgrid_service_register:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#name: ${11:}"
    ]
  },
  "pxgrid_service_reregister": {
    "prefix": "pxgrid_service_reregister",
    "description": "Resource module for pxGrid Service Reregister",
    "body": [
      "cisco.ise.pxgrid_service_reregister:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_service_unregister": {
    "prefix": "pxgrid_service_unregister",
    "description": "Resource module for pxGrid Service Unregister",
    "body": [
      "cisco.ise.pxgrid_service_unregister:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_session_by_ip_info": {
    "prefix": "pxgrid_session_by_ip_info",
    "description": "Information module for pxGrid Session By Ip Info",
    "body": [
      "cisco.ise.pxgrid_session_by_ip_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_session_by_mac_info": {
    "prefix": "pxgrid_session_by_mac_info",
    "description": "Information module for pxGrid Session By Mac Info",
    "body": [
      "cisco.ise.pxgrid_session_by_mac_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_session_for_recovery_info": {
    "prefix": "pxgrid_session_for_recovery_info",
    "description": "Information module for pxGrid Session For Recovery Info",
    "body": [
      "cisco.ise.pxgrid_session_for_recovery_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_sessions_info": {
    "prefix": "pxgrid_sessions_info",
    "description": "Information module for pxGrid Sessions Info",
    "body": [
      "cisco.ise.pxgrid_sessions_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_settings_auto_approve": {
    "prefix": "pxgrid_settings_auto_approve",
    "description": "Resource module for pxGrid Settings Auto Approve",
    "body": [
      "cisco.ise.pxgrid_settings_auto_approve:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#allowPasswordBasedAccounts: ${4:}",
      "\t#autoApproveCertBasedAccounts: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}"
    ]
  },
  "pxgrid_user_group_by_username_info": {
    "prefix": "pxgrid_user_group_by_username_info",
    "description": "Information module for pxGrid User Group By Username Info",
    "body": [
      "cisco.ise.pxgrid_user_group_by_username_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "pxgrid_user_groups_info": {
    "prefix": "pxgrid_user_groups_info",
    "description": "Information module for pxGrid User Groups Info",
    "body": [
      "cisco.ise.pxgrid_user_groups_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "radius_server_sequence": {
    "prefix": "radius_server_sequence",
    "description": "Resource module for RADIUS Server Sequence",
    "body": [
      "cisco.ise.radius_server_sequence:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#BeforeAcceptAttrManipulatorsList: ${4:}",
      "\t#OnRequestAttrManipulatorList: ${5:}",
      "\t#RADIUSServerList: ${6:}",
      "\t#continueAuthorzPolicy: ${7:}",
      "\t#description: ${8:}",
      "\t#id: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#localAccounting: ${17:}",
      "\t#name: ${18:}",
      "\t#prefixSeparator: ${19:}",
      "\t#remoteAccounting: ${20:}",
      "\t#stripPrefix: ${21:}",
      "\t#stripSuffix: ${22:}",
      "\t#suffixSeparator: ${23:}",
      "\t#useAttrSetBeforeAcc: ${24:}",
      "\t#useAttrSetOnRequest: ${25:}"
    ]
  },
  "radius_server_sequence_info": {
    "prefix": "radius_server_sequence_info",
    "description": "Information module for RADIUS Server Sequence",
    "body": [
      "cisco.ise.radius_server_sequence_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#page: ${12:}",
      "\t#size: ${13:}"
    ]
  },
  "renew_certificate": {
    "prefix": "renew_certificate",
    "description": "Resource module for Renew Certificate",
    "body": [
      "cisco.ise.renew_certificate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#certType: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "repository": {
    "prefix": "repository",
    "description": "Resource module for Repository",
    "body": [
      "cisco.ise.repository:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#enablePki: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#password: ${13:}",
      "\t#path: ${14:}",
      "\t#protocol: ${15:}",
      "\t#repositoryName: ${16:}",
      "\t#serverName: ${17:}",
      "\t#userName: ${18:}"
    ]
  },
  "repository_files_info": {
    "prefix": "repository_files_info",
    "description": "Information module for Repository Files",
    "body": [
      "cisco.ise.repository_files_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#repositoryName: ${11:}"
    ]
  },
  "repository_info": {
    "prefix": "repository_info",
    "description": "Information module for Repository",
    "body": [
      "cisco.ise.repository_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#repositoryName: ${11:}"
    ]
  },
  "resource_version_info": {
    "prefix": "resource_version_info",
    "description": "Information module for Resource Version",
    "body": [
      "cisco.ise.resource_version_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#resource: ${11:}"
    ]
  },
  "rest_id_store": {
    "prefix": "rest_id_store",
    "description": "Resource module for REST Id Store",
    "body": [
      "cisco.ise.rest_id_store:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#ersRESTIDStoreAttributes: ${5:}",
      "\t#ersRESTIDStoreUserAttributes: ${6:}",
      "\t#id: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#name: ${15:}"
    ]
  },
  "rest_id_store_info": {
    "prefix": "rest_id_store_info",
    "description": "Information module for REST Id Store",
    "body": [
      "cisco.ise.rest_id_store_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sortasc: ${17:}",
      "\t#sortdsc: ${18:}"
    ]
  },
  "self_registered_portal": {
    "prefix": "self_registered_portal",
    "description": "Resource module for Self Registered Portal",
    "body": [
      "cisco.ise.self_registered_portal:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customizations: ${4:}",
      "\t#description: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#portalTestUrl: ${15:}",
      "\t#portalType: ${16:}",
      "\t#settings: ${17:}"
    ]
  },
  "self_registered_portal_info": {
    "prefix": "self_registered_portal_info",
    "description": "Information module for Self Registered Portal",
    "body": [
      "cisco.ise.self_registered_portal_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "selfsigned_certificate_generate": {
    "prefix": "selfsigned_certificate_generate",
    "description": "Resource module for Selfsigned Certificate Generate",
    "body": [
      "cisco.ise.selfsigned_certificate_generate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#admin: ${4:}",
      "\t#allowExtendedValidity: ${5:}",
      "\t#allowPortalTagTransferForSameSubject: ${6:}",
      "\t#allowReplacementOfCertificates: ${7:}",
      "\t#allowReplacementOfPortalGroupTag: ${8:}",
      "\t#allowRoleTransferForSameSubject: ${9:}",
      "\t#allowSanDnsBadName: ${10:}",
      "\t#allowSanDnsNonResolvable: ${11:}",
      "\t#allowWildCardCertificates: ${12:}",
      "\t#certificatePolicies: ${13:}",
      "\t#digestType: ${14:}",
      "\t#eap: ${15:}",
      "\t#expirationTTL: ${16:}",
      "\t#expirationTTLUnit: ${17:}",
      "\t#hostName: ${18:}",
      "\t#ise_debug: ${19:false}",
      "\t#ise_single_request_timeout: ${20:60}",
      "\t#ise_uses_api_gateway: ${21:true}",
      "\t#ise_uses_csrf_token: ${22:false}",
      "\t#ise_verify: ${23:true}",
      "\t#ise_version: ${24:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${25:true}",
      "\t#keyLength: ${26:}",
      "\t#keyType: ${27:}",
      "\t#name: ${28:}",
      "\t#portal: ${29:}",
      "\t#portalGroupTag: ${30:}",
      "\t#pxgrid: ${31:}",
      "\t#radius: ${32:}",
      "\t#saml: ${33:}",
      "\t#sanDNS: ${34:}",
      "\t#sanIP: ${35:}",
      "\t#sanURI: ${36:}",
      "\t#subjectCity: ${37:}",
      "\t#subjectCommonName: ${38:}",
      "\t#subjectCountry: ${39:}",
      "\t#subjectOrg: ${40:}",
      "\t#subjectOrgUnit: ${41:}",
      "\t#subjectState: ${42:}"
    ]
  },
  "session_service_node_info": {
    "prefix": "session_service_node_info",
    "description": "Information module for Session Service Node",
    "body": [
      "cisco.ise.session_service_node_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "sg_acl": {
    "prefix": "sg_acl",
    "description": "Resource module for SGACL",
    "body": [
      "cisco.ise.sg_acl:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#aclcontent: ${4:}",
      "\t#description: ${5:}",
      "\t#generationId: ${6:}",
      "\t#id: ${7:}",
      "\t#ipVersion: ${8:}",
      "\t#isReadOnly: ${9:}",
      "\t#ise_debug: ${10:false}",
      "\t#ise_single_request_timeout: ${11:60}",
      "\t#ise_uses_api_gateway: ${12:true}",
      "\t#ise_uses_csrf_token: ${13:false}",
      "\t#ise_verify: ${14:true}",
      "\t#ise_version: ${15:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${16:true}",
      "\t#modelledContent: ${17:}",
      "\t#name: ${18:}"
    ]
  },
  "sg_acl_bulk_monitor_status_info": {
    "prefix": "sg_acl_bulk_monitor_status_info",
    "description": "Information module for SGACL Bulk Monitor Status",
    "body": [
      "cisco.ise.sg_acl_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sg_acl_bulk_request": {
    "prefix": "sg_acl_bulk_request",
    "description": "Resource module for SGACL Bulk Request",
    "body": [
      "cisco.ise.sg_acl_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "sg_acl_info": {
    "prefix": "sg_acl_info",
    "description": "Information module for SGACL",
    "body": [
      "cisco.ise.sg_acl_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "sg_mapping": {
    "prefix": "sg_mapping",
    "description": "Resource module for SG Mapping",
    "body": [
      "cisco.ise.sg_mapping:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#deployTo: ${4:}",
      "\t#deployType: ${5:}",
      "\t#hostIp: ${6:}",
      "\t#hostName: ${7:}",
      "\t#id: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#mappingGroup: ${16:}",
      "\t#name: ${17:}",
      "\t#sgt: ${18:}"
    ]
  },
  "sg_mapping_bulk_monitor_status_info": {
    "prefix": "sg_mapping_bulk_monitor_status_info",
    "description": "Information module for SG Mapping Bulk Monitor Status",
    "body": [
      "cisco.ise.sg_mapping_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sg_mapping_bulk_request": {
    "prefix": "sg_mapping_bulk_request",
    "description": "Resource module for SG Mapping Bulk Request",
    "body": [
      "cisco.ise.sg_mapping_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "sg_mapping_deploy": {
    "prefix": "sg_mapping_deploy",
    "description": "Resource module for SG Mapping Deploy",
    "body": [
      "cisco.ise.sg_mapping_deploy:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sg_mapping_deploy_all": {
    "prefix": "sg_mapping_deploy_all",
    "description": "Resource module for SG Mapping Deploy All",
    "body": [
      "cisco.ise.sg_mapping_deploy_all:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "sg_mapping_deploy_status_info": {
    "prefix": "sg_mapping_deploy_status_info",
    "description": "Information module for SG Mapping Deploy Status",
    "body": [
      "cisco.ise.sg_mapping_deploy_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "sg_mapping_group": {
    "prefix": "sg_mapping_group",
    "description": "Resource module for SG Mapping Group",
    "body": [
      "cisco.ise.sg_mapping_group:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#deployTo: ${4:}",
      "\t#deployType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#sgt: ${15:}"
    ]
  },
  "sg_mapping_group_bulk_monitor_status_info": {
    "prefix": "sg_mapping_group_bulk_monitor_status_info",
    "description": "Information module for SG Mapping Group Bulk Monitor Status",
    "body": [
      "cisco.ise.sg_mapping_group_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sg_mapping_group_bulk_request": {
    "prefix": "sg_mapping_group_bulk_request",
    "description": "Resource module for SG Mapping Group Bulk Request",
    "body": [
      "cisco.ise.sg_mapping_group_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "sg_mapping_group_deploy": {
    "prefix": "sg_mapping_group_deploy",
    "description": "Resource module for SG Mapping Group Deploy",
    "body": [
      "cisco.ise.sg_mapping_group_deploy:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sg_mapping_group_deploy_all": {
    "prefix": "sg_mapping_group_deploy_all",
    "description": "Resource module for SG Mapping Group Deploy All",
    "body": [
      "cisco.ise.sg_mapping_group_deploy_all:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "sg_mapping_group_deploy_status_info": {
    "prefix": "sg_mapping_group_deploy_status_info",
    "description": "Information module for SG Mapping Group Deploy Status",
    "body": [
      "cisco.ise.sg_mapping_group_deploy_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "sg_mapping_group_info": {
    "prefix": "sg_mapping_group_info",
    "description": "Information module for SG Mapping Group",
    "body": [
      "cisco.ise.sg_mapping_group_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "sg_mapping_info": {
    "prefix": "sg_mapping_info",
    "description": "Information module for SG Mapping",
    "body": [
      "cisco.ise.sg_mapping_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "sg_to_vn_to_vlan": {
    "prefix": "sg_to_vn_to_vlan",
    "description": "Resource module for SG To VN To VLAN",
    "body": [
      "cisco.ise.sg_to_vn_to_vlan:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}",
      "\t#sgtId: ${14:}",
      "\t#virtualnetworklist: ${15:}"
    ]
  },
  "sg_to_vn_to_vlan_bulk_monitor_status_info": {
    "prefix": "sg_to_vn_to_vlan_bulk_monitor_status_info",
    "description": "Information module for SG To VN To VLAN Bulk Monitor Status",
    "body": [
      "cisco.ise.sg_to_vn_to_vlan_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sg_to_vn_to_vlan_bulk_request": {
    "prefix": "sg_to_vn_to_vlan_bulk_request",
    "description": "Resource module for SG To VN To VLAN Bulk Request",
    "body": [
      "cisco.ise.sg_to_vn_to_vlan_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "sg_to_vn_to_vlan_info": {
    "prefix": "sg_to_vn_to_vlan_info",
    "description": "Information module for SG To VN To VLAN",
    "body": [
      "cisco.ise.sg_to_vn_to_vlan_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}"
    ]
  },
  "sgt": {
    "prefix": "sgt",
    "description": "Resource module for SGt",
    "body": [
      "cisco.ise.sgt:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\tname: ${4:}",
      "\tvalue: ${5:}",
      "\t#defaultSGACLs: ${6:}",
      "\t#description: ${7:}",
      "\t#generationId: ${8:}",
      "\t#id: ${9:}",
      "\t#isReadOnly: ${10:}",
      "\t#ise_debug: ${11:false}",
      "\t#ise_single_request_timeout: ${12:60}",
      "\t#ise_uses_api_gateway: ${13:true}",
      "\t#ise_uses_csrf_token: ${14:false}",
      "\t#ise_verify: ${15:true}",
      "\t#ise_version: ${16:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${17:true}",
      "\t#propogateToApic: ${18:}"
    ]
  },
  "sgt_bulk_monitor_status_info": {
    "prefix": "sgt_bulk_monitor_status_info",
    "description": "Information module for SGt Bulk Monitor Status",
    "body": [
      "cisco.ise.sgt_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sgt_bulk_request": {
    "prefix": "sgt_bulk_request",
    "description": "Resource module for SGt Bulk Request",
    "body": [
      "cisco.ise.sgt_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "sgt_info": {
    "prefix": "sgt_info",
    "description": "Information module for SGt",
    "body": [
      "cisco.ise.sgt_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "sms_provider_info": {
    "prefix": "sms_provider_info",
    "description": "Information module for SMS Provider",
    "body": [
      "cisco.ise.sms_provider_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#page: ${13:}",
      "\t#size: ${14:}",
      "\t#sortasc: ${15:}",
      "\t#sortdsc: ${16:}"
    ]
  },
  "sponsor_group": {
    "prefix": "sponsor_group",
    "description": "Resource module for Sponsor Group",
    "body": [
      "cisco.ise.sponsor_group:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#autoNotification: ${4:}",
      "\t#createPermissions: ${5:}",
      "\t#description: ${6:}",
      "\t#guestTypes: ${7:}",
      "\t#id: ${8:}",
      "\t#isDefaultGroup: ${9:}",
      "\t#isEnabled: ${10:}",
      "\t#ise_debug: ${11:false}",
      "\t#ise_single_request_timeout: ${12:60}",
      "\t#ise_uses_api_gateway: ${13:true}",
      "\t#ise_uses_csrf_token: ${14:false}",
      "\t#ise_verify: ${15:true}",
      "\t#ise_version: ${16:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${17:true}",
      "\t#locations: ${18:}",
      "\t#managePermission: ${19:}",
      "\t#memberGroups: ${20:}",
      "\t#name: ${21:}",
      "\t#otherPermissions: ${22:}"
    ]
  },
  "sponsor_group_info": {
    "prefix": "sponsor_group_info",
    "description": "Information module for Sponsor Group",
    "body": [
      "cisco.ise.sponsor_group_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "sponsor_group_member_info": {
    "prefix": "sponsor_group_member_info",
    "description": "Information module for Sponsor Group Member",
    "body": [
      "cisco.ise.sponsor_group_member_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#page: ${13:}",
      "\t#size: ${14:}",
      "\t#sortasc: ${15:}",
      "\t#sortdsc: ${16:}"
    ]
  },
  "sponsor_portal": {
    "prefix": "sponsor_portal",
    "description": "Resource module for Sponsor Portal",
    "body": [
      "cisco.ise.sponsor_portal:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customizations: ${4:}",
      "\t#description: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#portalTestUrl: ${15:}",
      "\t#portalType: ${16:}",
      "\t#settings: ${17:}"
    ]
  },
  "sponsor_portal_info": {
    "prefix": "sponsor_portal_info",
    "description": "Information module for Sponsor Portal",
    "body": [
      "cisco.ise.sponsor_portal_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "sponsored_guest_portal": {
    "prefix": "sponsored_guest_portal",
    "description": "Resource module for Sponsored Guest Portal",
    "body": [
      "cisco.ise.sponsored_guest_portal:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#customizations: ${4:}",
      "\t#description: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#portalTestUrl: ${15:}",
      "\t#portalType: ${16:}",
      "\t#settings: ${17:}"
    ]
  },
  "sponsored_guest_portal_info": {
    "prefix": "sponsored_guest_portal_info",
    "description": "Information module for Sponsored Guest Portal",
    "body": [
      "cisco.ise.sponsored_guest_portal_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "subscriber": {
    "prefix": "subscriber",
    "description": "Resource module for Subscriber",
    "body": [
      "cisco.ise.subscriber:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#enabled: ${4:}",
      "\t#friendlyName: ${5:}",
      "\t#identityGroups: ${6:}",
      "\t#imeis: ${7:}",
      "\t#imsi: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#ki: ${16:}",
      "\t#opc: ${17:}",
      "\t#subscriberId: ${18:}"
    ]
  },
  "subscriber_bulk": {
    "prefix": "subscriber_bulk",
    "description": "Resource module for Subscriber Bulk",
    "body": [
      "cisco.ise.subscriber_bulk:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ItemList: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#operation: ${12:}"
    ]
  },
  "subscriber_imsi_info": {
    "prefix": "subscriber_imsi_info",
    "description": "Information module for Subscriber Imsi Info",
    "body": [
      "cisco.ise.subscriber_imsi_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#imsi: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "subscriber_info": {
    "prefix": "subscriber_info",
    "description": "Information module for Subscriber",
    "body": [
      "cisco.ise.subscriber_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#page: ${13:}",
      "\t#size: ${14:}",
      "\t#sort: ${15:}",
      "\t#sortBy: ${16:}",
      "\t#subscriberId: ${17:}"
    ]
  },
  "support_bundle": {
    "prefix": "support_bundle",
    "description": "Resource module for Support Bundle",
    "body": [
      "cisco.ise.support_bundle:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#hostName: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}",
      "\t#supportBundleIncludeOptions: ${14:}"
    ]
  },
  "support_bundle_download": {
    "prefix": "support_bundle_download",
    "description": "Resource module for Support Bundle Download",
    "body": [
      "cisco.ise.support_bundle_download:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#dirPath: ${4:}",
      "\t#fileName: ${5:}",
      "\t#filename: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#saveFile: ${14:}"
    ]
  },
  "support_bundle_status_info": {
    "prefix": "support_bundle_status_info",
    "description": "Information module for Support Bundle Status",
    "body": [
      "cisco.ise.support_bundle_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#page: ${12:}",
      "\t#size: ${13:}"
    ]
  },
  "sxp_connections": {
    "prefix": "sxp_connections",
    "description": "Resource module for SXP Connections",
    "body": [
      "cisco.ise.sxp_connections:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#enabled: ${5:}",
      "\t#id: ${6:}",
      "\t#ipAddress: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#sxpMode: ${15:}",
      "\t#sxpNode: ${16:}",
      "\t#sxpPeer: ${17:}",
      "\t#sxpVersion: ${18:}",
      "\t#sxpVpn: ${19:}"
    ]
  },
  "sxp_connections_bulk_monitor_status_info": {
    "prefix": "sxp_connections_bulk_monitor_status_info",
    "description": "Information module for SXP Connections Bulk Monitor Status",
    "body": [
      "cisco.ise.sxp_connections_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sxp_connections_bulk_request": {
    "prefix": "sxp_connections_bulk_request",
    "description": "Resource module for SXP Connections Bulk Request",
    "body": [
      "cisco.ise.sxp_connections_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "sxp_connections_info": {
    "prefix": "sxp_connections_info",
    "description": "Information module for SXP Connections",
    "body": [
      "cisco.ise.sxp_connections_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "sxp_local_bindings": {
    "prefix": "sxp_local_bindings",
    "description": "Resource module for SXP Local Bindings",
    "body": [
      "cisco.ise.sxp_local_bindings:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bindingName: ${4:}",
      "\t#description: ${5:}",
      "\t#id: ${6:}",
      "\t#ipAddressOrHost: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#sgt: ${15:}",
      "\t#sxpVpn: ${16:}",
      "\t#vns: ${17:}"
    ]
  },
  "sxp_local_bindings_bulk_monitor_status_info": {
    "prefix": "sxp_local_bindings_bulk_monitor_status_info",
    "description": "Information module for SXP Local Bindings Bulk Monitor Status",
    "body": [
      "cisco.ise.sxp_local_bindings_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sxp_local_bindings_bulk_request": {
    "prefix": "sxp_local_bindings_bulk_request",
    "description": "Resource module for SXP Local Bindings Bulk Request",
    "body": [
      "cisco.ise.sxp_local_bindings_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "sxp_local_bindings_info": {
    "prefix": "sxp_local_bindings_info",
    "description": "Information module for SXP Local Bindings",
    "body": [
      "cisco.ise.sxp_local_bindings_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "sxp_vpns": {
    "prefix": "sxp_vpns",
    "description": "Resource module for SXP VPNs",
    "body": [
      "cisco.ise.sxp_vpns:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#sxpVpnName: ${12:}"
    ]
  },
  "sxp_vpns_bulk_monitor_status_info": {
    "prefix": "sxp_vpns_bulk_monitor_status_info",
    "description": "Information module for SXP VPNs Bulk Monitor Status",
    "body": [
      "cisco.ise.sxp_vpns_bulk_monitor_status_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#bulkid: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}"
    ]
  },
  "sxp_vpns_bulk_request": {
    "prefix": "sxp_vpns_bulk_request",
    "description": "Resource module for SXP VPNs Bulk Request",
    "body": [
      "cisco.ise.sxp_vpns_bulk_request:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#operationType: ${11:}",
      "\t#resourceMediaType: ${12:}"
    ]
  },
  "sxp_vpns_info": {
    "prefix": "sxp_vpns_info",
    "description": "Information module for SXP VPNs",
    "body": [
      "cisco.ise.sxp_vpns_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sortasc: ${16:}",
      "\t#sortdsc: ${17:}"
    ]
  },
  "system_certificate": {
    "prefix": "system_certificate",
    "description": "Resource module for System Certificate",
    "body": [
      "cisco.ise.system_certificate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#admin: ${4:}",
      "\t#allowPortalTagTransferForSameSubject: ${5:}",
      "\t#allowReplacementOfPortalGroupTag: ${6:}",
      "\t#allowRoleTransferForSameSubject: ${7:}",
      "\t#allowWildcardDelete: ${8:}",
      "\t#description: ${9:}",
      "\t#eap: ${10:}",
      "\t#expirationTTLPeriod: ${11:}",
      "\t#expirationTTLUnits: ${12:}",
      "\t#hostName: ${13:}",
      "\t#id: ${14:}",
      "\t#ims: ${15:}",
      "\t#ise_debug: ${16:false}",
      "\t#ise_single_request_timeout: ${17:60}",
      "\t#ise_uses_api_gateway: ${18:true}",
      "\t#ise_uses_csrf_token: ${19:false}",
      "\t#ise_verify: ${20:true}",
      "\t#ise_version: ${21:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#portal: ${24:}",
      "\t#portalGroupTag: ${25:}",
      "\t#pxgrid: ${26:}",
      "\t#radius: ${27:}",
      "\t#renewSelfSignedCertificate: ${28:}",
      "\t#saml: ${29:}"
    ]
  },
  "system_certificate_create": {
    "prefix": "system_certificate_create",
    "description": "Resource module for System Certificate Create",
    "body": [
      "cisco.ise.system_certificate_create:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ersLocalCertStub: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#nodeId: ${12:}"
    ]
  },
  "system_certificate_export_info": {
    "prefix": "system_certificate_export_info",
    "description": "Information module for System Certificate Export Info",
    "body": [
      "cisco.ise.system_certificate_export_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#dirPath: ${4:}",
      "\t#export: ${5:}",
      "\t#filename: ${6:}",
      "\t#id: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#password: ${15:}",
      "\t#saveFile: ${16:}"
    ]
  },
  "system_certificate_import": {
    "prefix": "system_certificate_import",
    "description": "Resource module for System Certificate Import",
    "body": [
      "cisco.ise.system_certificate_import:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#admin: ${4:}",
      "\t#allowExtendedValidity: ${5:}",
      "\t#allowOutOfDateCert: ${6:}",
      "\t#allowPortalTagTransferForSameSubject: ${7:}",
      "\t#allowReplacementOfCertificates: ${8:}",
      "\t#allowReplacementOfPortalGroupTag: ${9:}",
      "\t#allowRoleTransferForSameSubject: ${10:}",
      "\t#allowSHA1Certificates: ${11:}",
      "\t#allowWildCardCertificates: ${12:}",
      "\t#data: ${13:}",
      "\t#eap: ${14:}",
      "\t#ims: ${15:}",
      "\t#ise_debug: ${16:false}",
      "\t#ise_single_request_timeout: ${17:60}",
      "\t#ise_uses_api_gateway: ${18:true}",
      "\t#ise_uses_csrf_token: ${19:false}",
      "\t#ise_verify: ${20:true}",
      "\t#ise_version: ${21:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#password: ${24:}",
      "\t#portal: ${25:}",
      "\t#portalGroupTag: ${26:}",
      "\t#privateKeyData: ${27:}",
      "\t#pxgrid: ${28:}",
      "\t#radius: ${29:}",
      "\t#saml: ${30:}",
      "\t#validateCertificateExtensions: ${31:}"
    ]
  },
  "system_certificate_info": {
    "prefix": "system_certificate_info",
    "description": "Information module for System Certificate",
    "body": [
      "cisco.ise.system_certificate_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#hostName: ${6:}",
      "\t#id: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#page: ${15:}",
      "\t#size: ${16:}",
      "\t#sort: ${17:}",
      "\t#sortBy: ${18:}"
    ]
  },
  "system_config_version_info": {
    "prefix": "system_config_version_info",
    "description": "Information module for System Config Version",
    "body": [
      "cisco.ise.system_config_version_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "tacacs_command_sets": {
    "prefix": "tacacs_command_sets",
    "description": "Resource module for TACACS Command Sets",
    "body": [
      "cisco.ise.tacacs_command_sets:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#commands: ${4:}",
      "\t#description: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#name: ${14:}",
      "\t#permitUnmatched: ${15:}"
    ]
  },
  "tacacs_command_sets_info": {
    "prefix": "tacacs_command_sets_info",
    "description": "Information module for TACACS Command Sets",
    "body": [
      "cisco.ise.tacacs_command_sets_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "tacacs_external_servers": {
    "prefix": "tacacs_external_servers",
    "description": "Resource module for TACACS External Servers",
    "body": [
      "cisco.ise.tacacs_external_servers:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#connectionPort: ${4:}",
      "\t#description: ${5:}",
      "\t#hostIP: ${6:}",
      "\t#id: ${7:}",
      "\t#ise_debug: ${8:false}",
      "\t#ise_single_request_timeout: ${9:60}",
      "\t#ise_uses_api_gateway: ${10:true}",
      "\t#ise_uses_csrf_token: ${11:false}",
      "\t#ise_verify: ${12:true}",
      "\t#ise_version: ${13:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${14:true}",
      "\t#name: ${15:}",
      "\t#sharedSecret: ${16:}",
      "\t#singleConnect: ${17:}",
      "\t#timeout: ${18:}"
    ]
  },
  "tacacs_external_servers_info": {
    "prefix": "tacacs_external_servers_info",
    "description": "Information module for TACACS External Servers",
    "body": [
      "cisco.ise.tacacs_external_servers_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "tacacs_profile": {
    "prefix": "tacacs_profile",
    "description": "Resource module for TACACS Profile",
    "body": [
      "cisco.ise.tacacs_profile:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#name: ${13:}",
      "\t#sessionAttributes: ${14:}"
    ]
  },
  "tacacs_profile_info": {
    "prefix": "tacacs_profile_info",
    "description": "Information module for TACACS Profile",
    "body": [
      "cisco.ise.tacacs_profile_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "tacacs_server_sequence": {
    "prefix": "tacacs_server_sequence",
    "description": "Resource module for TACACS Server Sequence",
    "body": [
      "cisco.ise.tacacs_server_sequence:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#description: ${4:}",
      "\t#id: ${5:}",
      "\t#ise_debug: ${6:false}",
      "\t#ise_single_request_timeout: ${7:60}",
      "\t#ise_uses_api_gateway: ${8:true}",
      "\t#ise_uses_csrf_token: ${9:false}",
      "\t#ise_verify: ${10:true}",
      "\t#ise_version: ${11:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${12:true}",
      "\t#localAccounting: ${13:}",
      "\t#name: ${14:}",
      "\t#prefixDelimiter: ${15:}",
      "\t#prefixStrip: ${16:}",
      "\t#remoteAccounting: ${17:}",
      "\t#serverList: ${18:}",
      "\t#suffixDelimiter: ${19:}",
      "\t#suffixStrip: ${20:}"
    ]
  },
  "tacacs_server_sequence_info": {
    "prefix": "tacacs_server_sequence_info",
    "description": "Information module for TACACS Server Sequence",
    "body": [
      "cisco.ise.tacacs_server_sequence_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#id: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#name: ${12:}",
      "\t#page: ${13:}",
      "\t#size: ${14:}"
    ]
  },
  "tasks_info": {
    "prefix": "tasks_info",
    "description": "Information module for Tasks",
    "body": [
      "cisco.ise.tasks_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#taskId: ${11:}"
    ]
  },
  "telemetry_info": {
    "prefix": "telemetry_info",
    "description": "Information module for Telemetry Info",
    "body": [
      "cisco.ise.telemetry_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}"
    ]
  },
  "test_connector": {
    "prefix": "test_connector",
    "description": "Resource module for Test Connector",
    "body": [
      "cisco.ise.test_connector:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#authType: ${4:}",
      "\t#authValues: ${5:}",
      "\t#connectorName: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#responseParsing: ${14:}",
      "\t#uniqueID: ${15:}",
      "\t#url: ${16:}"
    ]
  },
  "threat_vulnerabilities_clear": {
    "prefix": "threat_vulnerabilities_clear",
    "description": "Resource module for Threat Vulnerabilities Clear",
    "body": [
      "cisco.ise.threat_vulnerabilities_clear:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}",
      "\t#macAddresses: ${11:}"
    ]
  },
  "transport_gateway_settings": {
    "prefix": "transport_gateway_settings",
    "description": "Resource module for Transport Gateway Settings",
    "body": [
      "cisco.ise.transport_gateway_settings:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#enableTransportGateway: ${4:}",
      "\t#ise_debug: ${5:false}",
      "\t#ise_single_request_timeout: ${6:60}",
      "\t#ise_uses_api_gateway: ${7:true}",
      "\t#ise_uses_csrf_token: ${8:false}",
      "\t#ise_verify: ${9:true}",
      "\t#ise_version: ${10:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${11:true}",
      "\t#url: ${12:}"
    ]
  },
  "transport_gateway_settings_info": {
    "prefix": "transport_gateway_settings_info",
    "description": "Information module for Transport Gateway Settings",
    "body": [
      "cisco.ise.transport_gateway_settings_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#ise_debug: ${4:false}",
      "\t#ise_single_request_timeout: ${5:60}",
      "\t#ise_uses_api_gateway: ${6:true}",
      "\t#ise_uses_csrf_token: ${7:false}",
      "\t#ise_verify: ${8:true}",
      "\t#ise_version: ${9:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${10:true}"
    ]
  },
  "trusted_certificate": {
    "prefix": "trusted_certificate",
    "description": "Resource module for Trusted Certificate",
    "body": [
      "cisco.ise.trusted_certificate:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#authenticateBeforeCRLReceived: ${4:}",
      "\t#automaticCRLUpdate: ${5:}",
      "\t#automaticCRLUpdatePeriod: ${6:}",
      "\t#automaticCRLUpdateUnits: ${7:}",
      "\t#crlDistributionUrl: ${8:}",
      "\t#crlDownloadFailureRetries: ${9:}",
      "\t#crlDownloadFailureRetriesUnits: ${10:}",
      "\t#description: ${11:}",
      "\t#downloadCRL: ${12:}",
      "\t#enableOCSPValidation: ${13:}",
      "\t#enableServerIdentityCheck: ${14:}",
      "\t#id: ${15:}",
      "\t#ignoreCRLExpiration: ${16:}",
      "\t#ise_debug: ${17:false}",
      "\t#ise_single_request_timeout: ${18:60}",
      "\t#ise_uses_api_gateway: ${19:true}",
      "\t#ise_uses_csrf_token: ${20:false}",
      "\t#ise_verify: ${21:true}",
      "\t#ise_version: ${22:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${23:true}",
      "\t#name: ${24:}",
      "\t#nonAutomaticCRLUpdatePeriod: ${25:}",
      "\t#nonAutomaticCRLUpdateUnits: ${26:}",
      "\t#rejectIfNoStatusFromOCSP: ${27:}",
      "\t#rejectIfUnreachableFromOCSP: ${28:}",
      "\t#selectedOCSPService: ${29:}",
      "\t#status: ${30:}",
      "\t#trustForCertificateBasedAdminAuth: ${31:}",
      "\t#trustForCiscoServicesAuth: ${32:}",
      "\t#trustForClientAuth: ${33:}",
      "\t#trustForIseAuth: ${34:}"
    ]
  },
  "trusted_certificate_export_info": {
    "prefix": "trusted_certificate_export_info",
    "description": "Information module for Trusted Certificate Export",
    "body": [
      "cisco.ise.trusted_certificate_export_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#dirPath: ${4:}",
      "\t#filename: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#saveFile: ${14:}"
    ]
  },
  "trusted_certificate_import": {
    "prefix": "trusted_certificate_import",
    "description": "Resource module for Trusted Certificate Import",
    "body": [
      "cisco.ise.trusted_certificate_import:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#allowBasicConstraintCAFalse: ${4:}",
      "\t#allowOutOfDateCert: ${5:}",
      "\t#allowSHA1Certificates: ${6:}",
      "\t#data: ${7:}",
      "\t#description: ${8:}",
      "\t#ise_debug: ${9:false}",
      "\t#ise_single_request_timeout: ${10:60}",
      "\t#ise_uses_api_gateway: ${11:true}",
      "\t#ise_uses_csrf_token: ${12:false}",
      "\t#ise_verify: ${13:true}",
      "\t#ise_version: ${14:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${15:true}",
      "\t#name: ${16:}",
      "\t#trustForCertificateBasedAdminAuth: ${17:}",
      "\t#trustForCiscoServicesAuth: ${18:}",
      "\t#trustForClientAuth: ${19:}",
      "\t#trustForIseAuth: ${20:}",
      "\t#validateCertificateExtensions: ${21:}"
    ]
  },
  "trusted_certificate_info": {
    "prefix": "trusted_certificate_info",
    "description": "Information module for Trusted Certificate",
    "body": [
      "cisco.ise.trusted_certificate_info:",
      "\tise_hostname: ${1:}",
      "\tise_password: ${2:}",
      "\tise_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#filterType: ${5:}",
      "\t#id: ${6:}",
      "\t#ise_debug: ${7:false}",
      "\t#ise_single_request_timeout: ${8:60}",
      "\t#ise_uses_api_gateway: ${9:true}",
      "\t#ise_uses_csrf_token: ${10:false}",
      "\t#ise_verify: ${11:true}",
      "\t#ise_version: ${12:3.1_Patch_1}",
      "\t#ise_wait_on_rate_limit: ${13:true}",
      "\t#page: ${14:}",
      "\t#size: ${15:}",
      "\t#sort: ${16:}",
      "\t#sortBy: ${17:}"
    ]
  },
  "administered_identities_me_info": {
    "prefix": "administered_identities_me_info",
    "description": "Information module for administered _identities _me",
    "body": [
      "cisco.meraki.administered_identities_me_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}"
    ]
  },
  "devices": {
    "prefix": "devices",
    "description": "Resource module for devices",
    "body": [
      "cisco.meraki.devices:",
      "\tmeraki_api_key: ${1:}",
      "\t#address: ${2:}",
      "\t#floorPlanId: ${3:}",
      "\t#lat: ${4:}",
      "\t#lng: ${5:}",
      "\t#mac: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#moveMapMarker: ${27:}",
      "\t#name: ${28:}",
      "\t#notes: ${29:}",
      "\t#serial: ${30:}",
      "\t#switchProfileId: ${31:}",
      "\t#tags: ${32:}"
    ]
  },
  "devices_appliance_performance_info": {
    "prefix": "devices_appliance_performance_info",
    "description": "Information module for devices _appliance _performance",
    "body": [
      "cisco.meraki.devices_appliance_performance_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_appliance_uplinks_settings": {
    "prefix": "devices_appliance_uplinks_settings",
    "description": "Resource module for devices _appliance _uplinks _settings",
    "body": [
      "cisco.meraki.devices_appliance_uplinks_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#interfaces: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_appliance_uplinks_settings_info": {
    "prefix": "devices_appliance_uplinks_settings_info",
    "description": "Information module for devices _appliance _uplinks _settings",
    "body": [
      "cisco.meraki.devices_appliance_uplinks_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_appliance_vmx_authentication_token": {
    "prefix": "devices_appliance_vmx_authentication_token",
    "description": "Resource module for devices _appliance _vmx _authenticationtoken",
    "body": [
      "cisco.meraki.devices_appliance_vmx_authentication_token:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#serial: ${22:}"
    ]
  },
  "devices_blink_leds": {
    "prefix": "devices_blink_leds",
    "description": "Resource module for devices _blinkleds",
    "body": [
      "cisco.meraki.devices_blink_leds:",
      "\tmeraki_api_key: ${1:}",
      "\t#duration: ${2:}",
      "\t#duty: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#period: ${24:}",
      "\t#serial: ${25:}"
    ]
  },
  "devices_camera_analytics_live_info": {
    "prefix": "devices_camera_analytics_live_info",
    "description": "Information module for devices _camera _analytics _live",
    "body": [
      "cisco.meraki.devices_camera_analytics_live_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_camera_custom_analytics": {
    "prefix": "devices_camera_custom_analytics",
    "description": "Resource module for devices _camera _customanalytics",
    "body": [
      "cisco.meraki.devices_camera_custom_analytics:",
      "\tmeraki_api_key: ${1:}",
      "\t#artifactId: ${2:}",
      "\t#enabled: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#parameters: ${24:}",
      "\t#serial: ${25:}"
    ]
  },
  "devices_camera_custom_analytics_info": {
    "prefix": "devices_camera_custom_analytics_info",
    "description": "Information module for devices _camera _customanalytics",
    "body": [
      "cisco.meraki.devices_camera_custom_analytics_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_camera_generate_snapshot": {
    "prefix": "devices_camera_generate_snapshot",
    "description": "Resource module for devices _camera _generatesnapshot",
    "body": [
      "cisco.meraki.devices_camera_generate_snapshot:",
      "\tmeraki_api_key: ${1:}",
      "\t#fullframe: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}",
      "\t#timestamp: ${24:}"
    ]
  },
  "devices_camera_quality_and_retention": {
    "prefix": "devices_camera_quality_and_retention",
    "description": "Resource module for devices _camera _qualityandretention",
    "body": [
      "cisco.meraki.devices_camera_quality_and_retention:",
      "\tmeraki_api_key: ${1:}",
      "\t#audioRecordingEnabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#motionBasedRetentionEnabled: ${23:}",
      "\t#motionDetectorVersion: ${24:}",
      "\t#profileId: ${25:}",
      "\t#quality: ${26:}",
      "\t#resolution: ${27:}",
      "\t#restrictedBandwidthModeEnabled: ${28:}",
      "\t#serial: ${29:}"
    ]
  },
  "devices_camera_quality_and_retention_info": {
    "prefix": "devices_camera_quality_and_retention_info",
    "description": "Information module for devices _camera _qualityandretention",
    "body": [
      "cisco.meraki.devices_camera_quality_and_retention_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_camera_sense": {
    "prefix": "devices_camera_sense",
    "description": "Resource module for devices _camera _sense",
    "body": [
      "cisco.meraki.devices_camera_sense:",
      "\tmeraki_api_key: ${1:}",
      "\t#audioDetection: ${2:}",
      "\t#detectionModelId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#mqttBrokerId: ${24:}",
      "\t#senseEnabled: ${25:}",
      "\t#serial: ${26:}"
    ]
  },
  "devices_camera_sense_info": {
    "prefix": "devices_camera_sense_info",
    "description": "Information module for devices _camera _sense",
    "body": [
      "cisco.meraki.devices_camera_sense_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_camera_video_link_info": {
    "prefix": "devices_camera_video_link_info",
    "description": "Information module for devices _camera _videolink",
    "body": [
      "cisco.meraki.devices_camera_video_link_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}",
      "\t#timestamp: ${24:}"
    ]
  },
  "devices_camera_video_settings": {
    "prefix": "devices_camera_video_settings",
    "description": "Resource module for devices _camera _video _settings",
    "body": [
      "cisco.meraki.devices_camera_video_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#externalRtspEnabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_camera_video_settings_info": {
    "prefix": "devices_camera_video_settings_info",
    "description": "Information module for devices _camera _video _settings",
    "body": [
      "cisco.meraki.devices_camera_video_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_camera_wireless_profiles": {
    "prefix": "devices_camera_wireless_profiles",
    "description": "Resource module for devices _camera _wirelessprofiles",
    "body": [
      "cisco.meraki.devices_camera_wireless_profiles:",
      "\tmeraki_api_key: ${1:}",
      "\t#ids: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_camera_wireless_profiles_info": {
    "prefix": "devices_camera_wireless_profiles_info",
    "description": "Information module for devices _camera _wirelessprofiles",
    "body": [
      "cisco.meraki.devices_camera_wireless_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_cellular_gateway_lan": {
    "prefix": "devices_cellular_gateway_lan",
    "description": "Resource module for devices _cellulargateway _lan",
    "body": [
      "cisco.meraki.devices_cellular_gateway_lan:",
      "\tmeraki_api_key: ${1:}",
      "\t#fixedIpAssignments: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#reservedIpRanges: ${23:}",
      "\t#serial: ${24:}"
    ]
  },
  "devices_cellular_gateway_lan_info": {
    "prefix": "devices_cellular_gateway_lan_info",
    "description": "Information module for devices _cellulargateway _lan",
    "body": [
      "cisco.meraki.devices_cellular_gateway_lan_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_cellular_gateway_port_forwarding_rules": {
    "prefix": "devices_cellular_gateway_port_forwarding_rules",
    "description": "Resource module for devices _cellulargateway _portforwardingrules",
    "body": [
      "cisco.meraki.devices_cellular_gateway_port_forwarding_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#rules: ${22:}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_cellular_gateway_port_forwarding_rules_info": {
    "prefix": "devices_cellular_gateway_port_forwarding_rules_info",
    "description": "Information module for devices _cellulargateway _portforwardingrules",
    "body": [
      "cisco.meraki.devices_cellular_gateway_port_forwarding_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_cellular_sims": {
    "prefix": "devices_cellular_sims",
    "description": "Resource module for devices _cellular _sims",
    "body": [
      "cisco.meraki.devices_cellular_sims:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#serial: ${22:}",
      "\t#simFailover: ${23:}",
      "\t#sims: ${24:}"
    ]
  },
  "devices_cellular_sims_info": {
    "prefix": "devices_cellular_sims_info",
    "description": "Information module for devices _cellular _sims",
    "body": [
      "cisco.meraki.devices_cellular_sims_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_info": {
    "prefix": "devices_info",
    "description": "Information module for devices",
    "body": [
      "cisco.meraki.devices_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#configurationUpdatedAfter: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#mac: ${7:}",
      "\t#macs: ${8:}",
      "\t#meraki_action_batch_retry_wait_time: ${9:60}",
      "\t#meraki_base_url: ${10:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${11:\"\"}",
      "\t#meraki_caller: ${12:\"\"}",
      "\t#meraki_certificate_path: ${13:\"\"}",
      "\t#meraki_inherit_logging_config: ${14:false}",
      "\t#meraki_log_file_prefix: ${15:meraki_api_}",
      "\t#meraki_log_path: ${16:\"\"}",
      "\t#meraki_maximum_retries: ${17:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${18:60}",
      "\t#meraki_output_log: ${19:true}",
      "\t#meraki_print_console: ${20:true}",
      "\t#meraki_requests_proxy: ${21:\"\"}",
      "\t#meraki_retry_4xx_error: ${22:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${23:60}",
      "\t#meraki_simulate: ${24:false}",
      "\t#meraki_single_request_timeout: ${25:60}",
      "\t#meraki_suppress_logging: ${26:false}",
      "\t#meraki_use_iterator_for_get_pages: ${27:false}",
      "\t#meraki_wait_on_rate_limit: ${28:true}",
      "\t#model: ${29:}",
      "\t#models: ${30:}",
      "\t#name: ${31:}",
      "\t#networkIds: ${32:}",
      "\t#organizationId: ${33:}",
      "\t#perPage: ${34:}",
      "\t#productTypes: ${35:}",
      "\t#sensorAlertProfileIds: ${36:}",
      "\t#sensorMetrics: ${37:}",
      "\t#serial: ${38:}",
      "\t#serials: ${39:}",
      "\t#startingAfter: ${40:}",
      "\t#tags: ${41:}",
      "\t#tagsFilterType: ${42:}"
    ]
  },
  "devices_live_tools_ping": {
    "prefix": "devices_live_tools_ping",
    "description": "Resource module for devices _livetools _ping",
    "body": [
      "cisco.meraki.devices_live_tools_ping:",
      "\tmeraki_api_key: ${1:}",
      "\t#count: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}",
      "\t#target: ${24:}"
    ]
  },
  "devices_live_tools_ping_device": {
    "prefix": "devices_live_tools_ping_device",
    "description": "Resource module for devices _livetools _pingdevice",
    "body": [
      "cisco.meraki.devices_live_tools_ping_device:",
      "\tmeraki_api_key: ${1:}",
      "\t#count: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_live_tools_ping_device_info": {
    "prefix": "devices_live_tools_ping_device_info",
    "description": "Information module for devices _livetools _pingdevice",
    "body": [
      "cisco.meraki.devices_live_tools_ping_device_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#id: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#serial: ${24:}"
    ]
  },
  "devices_live_tools_ping_info": {
    "prefix": "devices_live_tools_ping_info",
    "description": "Information module for devices _livetools _ping",
    "body": [
      "cisco.meraki.devices_live_tools_ping_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#id: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#serial: ${24:}"
    ]
  },
  "devices_lldp_cdp_info": {
    "prefix": "devices_lldp_cdp_info",
    "description": "Information module for devices _lldpcdp",
    "body": [
      "cisco.meraki.devices_lldp_cdp_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_management_interface": {
    "prefix": "devices_management_interface",
    "description": "Resource module for devices _managementinterface",
    "body": [
      "cisco.meraki.devices_management_interface:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#serial: ${22:}",
      "\t#wan1: ${23:}",
      "\t#wan2: ${24:}"
    ]
  },
  "devices_management_interface_info": {
    "prefix": "devices_management_interface_info",
    "description": "Information module for devices _managementinterface",
    "body": [
      "cisco.meraki.devices_management_interface_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_sensor_relationships": {
    "prefix": "devices_sensor_relationships",
    "description": "Resource module for devices _sensor _relationships",
    "body": [
      "cisco.meraki.devices_sensor_relationships:",
      "\tmeraki_api_key: ${1:}",
      "\t#livestream: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_sensor_relationships_info": {
    "prefix": "devices_sensor_relationships_info",
    "description": "Information module for devices _sensor _relationships",
    "body": [
      "cisco.meraki.devices_sensor_relationships_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_switch_ports": {
    "prefix": "devices_switch_ports",
    "description": "Resource module for devices _switch _ports",
    "body": [
      "cisco.meraki.devices_switch_ports:",
      "\tmeraki_api_key: ${1:}",
      "\t#accessPolicyNumber: ${2:}",
      "\t#accessPolicyType: ${3:}",
      "\t#adaptivePolicyGroupId: ${4:}",
      "\t#allowedVlans: ${5:}",
      "\t#daiTrusted: ${6:}",
      "\t#enabled: ${7:}",
      "\t#flexibleStackingEnabled: ${8:}",
      "\t#isolationEnabled: ${9:}",
      "\t#linkNegotiation: ${10:}",
      "\t#macAllowList: ${11:}",
      "\t#meraki_action_batch_retry_wait_time: ${12:60}",
      "\t#meraki_base_url: ${13:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${14:\"\"}",
      "\t#meraki_caller: ${15:\"\"}",
      "\t#meraki_certificate_path: ${16:\"\"}",
      "\t#meraki_inherit_logging_config: ${17:false}",
      "\t#meraki_log_file_prefix: ${18:meraki_api_}",
      "\t#meraki_log_path: ${19:\"\"}",
      "\t#meraki_maximum_retries: ${20:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${21:60}",
      "\t#meraki_output_log: ${22:true}",
      "\t#meraki_print_console: ${23:true}",
      "\t#meraki_requests_proxy: ${24:\"\"}",
      "\t#meraki_retry_4xx_error: ${25:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${26:60}",
      "\t#meraki_simulate: ${27:false}",
      "\t#meraki_single_request_timeout: ${28:60}",
      "\t#meraki_suppress_logging: ${29:false}",
      "\t#meraki_use_iterator_for_get_pages: ${30:false}",
      "\t#meraki_wait_on_rate_limit: ${31:true}",
      "\t#name: ${32:}",
      "\t#peerSgtCapable: ${33:}",
      "\t#poeEnabled: ${34:}",
      "\t#portId: ${35:}",
      "\t#portScheduleId: ${36:}",
      "\t#profile: ${37:}",
      "\t#rstpEnabled: ${38:}",
      "\t#serial: ${39:}",
      "\t#stickyMacAllowList: ${40:}",
      "\t#stickyMacAllowListLimit: ${41:}",
      "\t#stormControlEnabled: ${42:}",
      "\t#stpGuard: ${43:}",
      "\t#tags: ${44:}",
      "\t#type: ${45:}",
      "\t#udld: ${46:}",
      "\t#vlan: ${47:}",
      "\t#voiceVlan: ${48:}"
    ]
  },
  "devices_switch_ports_cycle": {
    "prefix": "devices_switch_ports_cycle",
    "description": "Resource module for devices _switch _ports _cycle",
    "body": [
      "cisco.meraki.devices_switch_ports_cycle:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#ports: ${22:}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_switch_ports_info": {
    "prefix": "devices_switch_ports_info",
    "description": "Information module for devices _switch _ports",
    "body": [
      "cisco.meraki.devices_switch_ports_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#portId: ${23:}",
      "\t#serial: ${24:}"
    ]
  },
  "devices_switch_ports_statuses_info": {
    "prefix": "devices_switch_ports_statuses_info",
    "description": "Information module for devices _switch _ports _statuses",
    "body": [
      "cisco.meraki.devices_switch_ports_statuses_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}",
      "\t#t0: ${24:}",
      "\t#timespan: ${25:}"
    ]
  },
  "devices_switch_routing_interfaces": {
    "prefix": "devices_switch_routing_interfaces",
    "description": "Resource module for devices _switch _routing _interfaces",
    "body": [
      "cisco.meraki.devices_switch_routing_interfaces:",
      "\tmeraki_api_key: ${1:}",
      "\t#defaultGateway: ${2:}",
      "\t#interfaceId: ${3:}",
      "\t#interfaceIp: ${4:}",
      "\t#ipv6: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#multicastRouting: ${26:}",
      "\t#name: ${27:}",
      "\t#ospfSettings: ${28:}",
      "\t#ospfV3: ${29:}",
      "\t#serial: ${30:}",
      "\t#subnet: ${31:}",
      "\t#vlanId: ${32:}"
    ]
  },
  "devices_switch_routing_interfaces_dhcp": {
    "prefix": "devices_switch_routing_interfaces_dhcp",
    "description": "Resource module for devices _switch _routing _interfaces _dhcp",
    "body": [
      "cisco.meraki.devices_switch_routing_interfaces_dhcp:",
      "\tmeraki_api_key: ${1:}",
      "\t#bootFileName: ${2:}",
      "\t#bootNextServer: ${3:}",
      "\t#bootOptionsEnabled: ${4:}",
      "\t#dhcpLeaseTime: ${5:}",
      "\t#dhcpMode: ${6:}",
      "\t#dhcpOptions: ${7:}",
      "\t#dhcpRelayServerIps: ${8:}",
      "\t#dnsCustomNameservers: ${9:}",
      "\t#dnsNameserversOption: ${10:}",
      "\t#fixedIpAssignments: ${11:}",
      "\t#interfaceId: ${12:}",
      "\t#meraki_action_batch_retry_wait_time: ${13:60}",
      "\t#meraki_base_url: ${14:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${15:\"\"}",
      "\t#meraki_caller: ${16:\"\"}",
      "\t#meraki_certificate_path: ${17:\"\"}",
      "\t#meraki_inherit_logging_config: ${18:false}",
      "\t#meraki_log_file_prefix: ${19:meraki_api_}",
      "\t#meraki_log_path: ${20:\"\"}",
      "\t#meraki_maximum_retries: ${21:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${22:60}",
      "\t#meraki_output_log: ${23:true}",
      "\t#meraki_print_console: ${24:true}",
      "\t#meraki_requests_proxy: ${25:\"\"}",
      "\t#meraki_retry_4xx_error: ${26:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${27:60}",
      "\t#meraki_simulate: ${28:false}",
      "\t#meraki_single_request_timeout: ${29:60}",
      "\t#meraki_suppress_logging: ${30:false}",
      "\t#meraki_use_iterator_for_get_pages: ${31:false}",
      "\t#meraki_wait_on_rate_limit: ${32:true}",
      "\t#reservedIpRanges: ${33:}",
      "\t#serial: ${34:}"
    ]
  },
  "devices_switch_routing_interfaces_dhcp_info": {
    "prefix": "devices_switch_routing_interfaces_dhcp_info",
    "description": "Information module for devices _switch _routing _interfaces _dhcp",
    "body": [
      "cisco.meraki.devices_switch_routing_interfaces_dhcp_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#interfaceId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#serial: ${24:}"
    ]
  },
  "devices_switch_routing_interfaces_info": {
    "prefix": "devices_switch_routing_interfaces_info",
    "description": "Information module for devices _switch _routing _interfaces",
    "body": [
      "cisco.meraki.devices_switch_routing_interfaces_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#interfaceId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#serial: ${24:}"
    ]
  },
  "devices_switch_routing_static_routes": {
    "prefix": "devices_switch_routing_static_routes",
    "description": "Resource module for devices _switch _routing _staticroutes",
    "body": [
      "cisco.meraki.devices_switch_routing_static_routes:",
      "\tmeraki_api_key: ${1:}",
      "\t#advertiseViaOspfEnabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#nextHopIp: ${24:}",
      "\t#preferOverOspfRoutesEnabled: ${25:}",
      "\t#serial: ${26:}",
      "\t#staticRouteId: ${27:}",
      "\t#subnet: ${28:}"
    ]
  },
  "devices_switch_routing_static_routes_info": {
    "prefix": "devices_switch_routing_static_routes_info",
    "description": "Information module for devices _switch _routing _staticroutes",
    "body": [
      "cisco.meraki.devices_switch_routing_static_routes_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}",
      "\t#staticRouteId: ${24:}"
    ]
  },
  "devices_switch_warm_spare": {
    "prefix": "devices_switch_warm_spare",
    "description": "Resource module for devices _switch _warmspare",
    "body": [
      "cisco.meraki.devices_switch_warm_spare:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}",
      "\t#spareSerial: ${24:}"
    ]
  },
  "devices_switch_warm_spare_info": {
    "prefix": "devices_switch_warm_spare_info",
    "description": "Information module for devices _switch _warmspare",
    "body": [
      "cisco.meraki.devices_switch_warm_spare_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_wireless_bluetooth_settings": {
    "prefix": "devices_wireless_bluetooth_settings",
    "description": "Resource module for devices _wireless _bluetooth _settings",
    "body": [
      "cisco.meraki.devices_wireless_bluetooth_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#major: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#minor: ${23:}",
      "\t#serial: ${24:}",
      "\t#uuid: ${25:}"
    ]
  },
  "devices_wireless_bluetooth_settings_info": {
    "prefix": "devices_wireless_bluetooth_settings_info",
    "description": "Information module for devices _wireless _bluetooth _settings",
    "body": [
      "cisco.meraki.devices_wireless_bluetooth_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_wireless_connection_stats_info": {
    "prefix": "devices_wireless_connection_stats_info",
    "description": "Information module for devices _wireless _connectionstats",
    "body": [
      "cisco.meraki.devices_wireless_connection_stats_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#band: ${3:}",
      "\t#headers: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#serial: ${25:}",
      "\t#ssid: ${26:}",
      "\t#t0: ${27:}",
      "\t#t1: ${28:}",
      "\t#timespan: ${29:}",
      "\t#vlan: ${30:}"
    ]
  },
  "devices_wireless_latency_stats_info": {
    "prefix": "devices_wireless_latency_stats_info",
    "description": "Information module for devices _wireless _latencystats",
    "body": [
      "cisco.meraki.devices_wireless_latency_stats_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#band: ${3:}",
      "\t#fields: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#serial: ${26:}",
      "\t#ssid: ${27:}",
      "\t#t0: ${28:}",
      "\t#t1: ${29:}",
      "\t#timespan: ${30:}",
      "\t#vlan: ${31:}"
    ]
  },
  "devices_wireless_radio_settings": {
    "prefix": "devices_wireless_radio_settings",
    "description": "Resource module for devices _wireless _radio _settings",
    "body": [
      "cisco.meraki.devices_wireless_radio_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#fiveGhzSettings: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#rfProfileId: ${23:}",
      "\t#serial: ${24:}",
      "\t#twoFourGhzSettings: ${25:}"
    ]
  },
  "devices_wireless_radio_settings_info": {
    "prefix": "devices_wireless_radio_settings_info",
    "description": "Information module for devices _wireless _radio _settings",
    "body": [
      "cisco.meraki.devices_wireless_radio_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "devices_wireless_status_info": {
    "prefix": "devices_wireless_status_info",
    "description": "Information module for devices _wireless _status",
    "body": [
      "cisco.meraki.devices_wireless_status_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#serial: ${23:}"
    ]
  },
  "networks": {
    "prefix": "networks",
    "description": "Resource module for networks",
    "body": [
      "cisco.meraki.networks:",
      "\tmeraki_api_key: ${1:}",
      "\t#copyFromNetworkId: ${2:}",
      "\t#enrollmentString: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#name: ${24:}",
      "\t#networkId: ${25:}",
      "\t#notes: ${26:}",
      "\t#organizationId: ${27:}",
      "\t#productTypes: ${28:}",
      "\t#tags: ${29:}",
      "\t#timeZone: ${30:}"
    ]
  },
  "networks_alerts_history_info": {
    "prefix": "networks_alerts_history_info",
    "description": "Information module for networks _alerts _history",
    "body": [
      "cisco.meraki.networks_alerts_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}"
    ]
  },
  "networks_alerts_settings": {
    "prefix": "networks_alerts_settings",
    "description": "Resource module for networks _alerts _settings",
    "body": [
      "cisco.meraki.networks_alerts_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#alerts: ${2:}",
      "\t#defaultDestinations: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_alerts_settings_info": {
    "prefix": "networks_alerts_settings_info",
    "description": "Information module for networks _alerts _settings",
    "body": [
      "cisco.meraki.networks_alerts_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_connectivity_monitoring_destinations": {
    "prefix": "networks_appliance_connectivity_monitoring_destinations",
    "description": "Resource module for networks _appliance _connectivitymonitoringdestinations",
    "body": [
      "cisco.meraki.networks_appliance_connectivity_monitoring_destinations:",
      "\tmeraki_api_key: ${1:}",
      "\t#destinations: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_connectivity_monitoring_destinations_info": {
    "prefix": "networks_appliance_connectivity_monitoring_destinations_info",
    "description": "Information module for networks _appliance _connectivitymonitoringdestinations",
    "body": [
      "cisco.meraki.networks_appliance_connectivity_monitoring_destinations_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_content_filtering": {
    "prefix": "networks_appliance_content_filtering",
    "description": "Resource module for networks _appliance _contentfiltering",
    "body": [
      "cisco.meraki.networks_appliance_content_filtering:",
      "\tmeraki_api_key: ${1:}",
      "\t#allowedUrlPatterns: ${2:}",
      "\t#blockedUrlCategories: ${3:}",
      "\t#blockedUrlPatterns: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}",
      "\t#urlCategoryListSize: ${26:}"
    ]
  },
  "networks_appliance_content_filtering_categories_info": {
    "prefix": "networks_appliance_content_filtering_categories_info",
    "description": "Information module for networks _appliance _contentfiltering _categories",
    "body": [
      "cisco.meraki.networks_appliance_content_filtering_categories_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_content_filtering_info": {
    "prefix": "networks_appliance_content_filtering_info",
    "description": "Information module for networks _appliance _contentfiltering",
    "body": [
      "cisco.meraki.networks_appliance_content_filtering_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_cellular_firewall_rules": {
    "prefix": "networks_appliance_firewall_cellular_firewall_rules",
    "description": "Resource module for networks _appliance _firewall _cellularfirewallrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_cellular_firewall_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rules: ${23:}"
    ]
  },
  "networks_appliance_firewall_cellular_firewall_rules_info": {
    "prefix": "networks_appliance_firewall_cellular_firewall_rules_info",
    "description": "Information module for networks _appliance _firewall _cellularfirewallrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_cellular_firewall_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_firewalled_services": {
    "prefix": "networks_appliance_firewall_firewalled_services",
    "description": "Resource module for networks _appliance _firewall _firewalledservices",
    "body": [
      "cisco.meraki.networks_appliance_firewall_firewalled_services:",
      "\tmeraki_api_key: ${1:}",
      "\t#access: ${2:}",
      "\t#allowedIps: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#service: ${25:}"
    ]
  },
  "networks_appliance_firewall_firewalled_services_info": {
    "prefix": "networks_appliance_firewall_firewalled_services_info",
    "description": "Information module for networks _appliance _firewall _firewalledservices",
    "body": [
      "cisco.meraki.networks_appliance_firewall_firewalled_services_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#service: ${24:}"
    ]
  },
  "networks_appliance_firewall_inbound_firewall_rules": {
    "prefix": "networks_appliance_firewall_inbound_firewall_rules",
    "description": "Resource module for networks _appliance _firewall _inboundfirewallrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_inbound_firewall_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rules: ${23:}",
      "\t#syslogDefaultRule: ${24:}"
    ]
  },
  "networks_appliance_firewall_inbound_firewall_rules_info": {
    "prefix": "networks_appliance_firewall_inbound_firewall_rules_info",
    "description": "Information module for networks _appliance _firewall _inboundfirewallrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_inbound_firewall_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_l3_firewall_rules": {
    "prefix": "networks_appliance_firewall_l3_firewall_rules",
    "description": "Resource module for networks _appliance _firewall l3firewallrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_l3_firewall_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rules: ${23:}",
      "\t#syslogDefaultRule: ${24:}"
    ]
  },
  "networks_appliance_firewall_l3_firewall_rules_info": {
    "prefix": "networks_appliance_firewall_l3_firewall_rules_info",
    "description": "Information module for networks _appliance _firewall l3firewallrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_l3_firewall_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_l7_firewall_rules": {
    "prefix": "networks_appliance_firewall_l7_firewall_rules",
    "description": "Resource module for networks _appliance _firewall l7firewallrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_l7_firewall_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rules: ${23:}"
    ]
  },
  "networks_appliance_firewall_l7_firewall_rules_application_categories_info": {
    "prefix": "networks_appliance_firewall_l7_firewall_rules_application_categories_info",
    "description": "Information module for networks _appliance _firewall l7firewallrules _applicationcategories",
    "body": [
      "cisco.meraki.networks_appliance_firewall_l7_firewall_rules_application_categories_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_l7_firewall_rules_info": {
    "prefix": "networks_appliance_firewall_l7_firewall_rules_info",
    "description": "Information module for networks _appliance _firewall l7firewallrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_l7_firewall_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_one_to_many_nat_rules": {
    "prefix": "networks_appliance_firewall_one_to_many_nat_rules",
    "description": "Resource module for networks _appliance _firewall _onetomanynatrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_one_to_many_nat_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rules: ${23:}"
    ]
  },
  "networks_appliance_firewall_one_to_many_nat_rules_info": {
    "prefix": "networks_appliance_firewall_one_to_many_nat_rules_info",
    "description": "Information module for networks _appliance _firewall _onetomanynatrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_one_to_many_nat_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_one_to_one_nat_rules": {
    "prefix": "networks_appliance_firewall_one_to_one_nat_rules",
    "description": "Resource module for networks _appliance _firewall _onetoonenatrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_one_to_one_nat_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rules: ${23:}"
    ]
  },
  "networks_appliance_firewall_one_to_one_nat_rules_info": {
    "prefix": "networks_appliance_firewall_one_to_one_nat_rules_info",
    "description": "Information module for networks _appliance _firewall _onetoonenatrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_one_to_one_nat_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_port_forwarding_rules": {
    "prefix": "networks_appliance_firewall_port_forwarding_rules",
    "description": "Resource module for networks _appliance _firewall _portforwardingrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_port_forwarding_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rules: ${23:}"
    ]
  },
  "networks_appliance_firewall_port_forwarding_rules_info": {
    "prefix": "networks_appliance_firewall_port_forwarding_rules_info",
    "description": "Information module for networks _appliance _firewall _portforwardingrules",
    "body": [
      "cisco.meraki.networks_appliance_firewall_port_forwarding_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_firewall_settings": {
    "prefix": "networks_appliance_firewall_settings",
    "description": "Resource module for networks _appliance _firewall _settings",
    "body": [
      "cisco.meraki.networks_appliance_firewall_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#spoofingProtection: ${23:}"
    ]
  },
  "networks_appliance_firewall_settings_info": {
    "prefix": "networks_appliance_firewall_settings_info",
    "description": "Information module for networks _appliance _firewall _settings",
    "body": [
      "cisco.meraki.networks_appliance_firewall_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_ports": {
    "prefix": "networks_appliance_ports",
    "description": "Resource module for networks _appliance _ports",
    "body": [
      "cisco.meraki.networks_appliance_ports:",
      "\tmeraki_api_key: ${1:}",
      "\t#accessPolicy: ${2:}",
      "\t#allowedVlans: ${3:}",
      "\t#dropUntaggedTraffic: ${4:}",
      "\t#enabled: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#portId: ${27:}",
      "\t#type: ${28:}",
      "\t#vlan: ${29:}"
    ]
  },
  "networks_appliance_ports_info": {
    "prefix": "networks_appliance_ports_info",
    "description": "Information module for networks _appliance _ports",
    "body": [
      "cisco.meraki.networks_appliance_ports_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#portId: ${24:}"
    ]
  },
  "networks_appliance_prefixes_delegated_statics": {
    "prefix": "networks_appliance_prefixes_delegated_statics",
    "description": "Resource module for networks _appliance _prefixes _delegated _statics",
    "body": [
      "cisco.meraki.networks_appliance_prefixes_delegated_statics:",
      "\tmeraki_api_key: ${1:}",
      "\t#description: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#origin: ${24:}",
      "\t#prefix: ${25:}",
      "\t#staticDelegatedPrefixId: ${26:}"
    ]
  },
  "networks_appliance_prefixes_delegated_statics_info": {
    "prefix": "networks_appliance_prefixes_delegated_statics_info",
    "description": "Information module for networks _appliance _prefixes _delegated _statics",
    "body": [
      "cisco.meraki.networks_appliance_prefixes_delegated_statics_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#staticDelegatedPrefixId: ${24:}"
    ]
  },
  "networks_appliance_security_intrusion": {
    "prefix": "networks_appliance_security_intrusion",
    "description": "Resource module for networks _appliance _security _intrusion",
    "body": [
      "cisco.meraki.networks_appliance_security_intrusion:",
      "\tmeraki_api_key: ${1:}",
      "\t#idsRulesets: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#mode: ${23:}",
      "\t#networkId: ${24:}",
      "\t#protectedNetworks: ${25:}"
    ]
  },
  "networks_appliance_security_intrusion_info": {
    "prefix": "networks_appliance_security_intrusion_info",
    "description": "Information module for networks _appliance _security _intrusion",
    "body": [
      "cisco.meraki.networks_appliance_security_intrusion_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_security_malware": {
    "prefix": "networks_appliance_security_malware",
    "description": "Resource module for networks _appliance _security _malware",
    "body": [
      "cisco.meraki.networks_appliance_security_malware:",
      "\tmeraki_api_key: ${1:}",
      "\t#allowedFiles: ${2:}",
      "\t#allowedUrls: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#mode: ${24:}",
      "\t#networkId: ${25:}"
    ]
  },
  "networks_appliance_security_malware_info": {
    "prefix": "networks_appliance_security_malware_info",
    "description": "Information module for networks _appliance _security _malware",
    "body": [
      "cisco.meraki.networks_appliance_security_malware_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_settings": {
    "prefix": "networks_appliance_settings",
    "description": "Resource module for networks _appliance _settings",
    "body": [
      "cisco.meraki.networks_appliance_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#clientTrackingMethod: ${2:}",
      "\t#deploymentMode: ${3:}",
      "\t#dynamicDns: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}"
    ]
  },
  "networks_appliance_settings_info": {
    "prefix": "networks_appliance_settings_info",
    "description": "Information module for networks _appliance _settings",
    "body": [
      "cisco.meraki.networks_appliance_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_single_lan": {
    "prefix": "networks_appliance_single_lan",
    "description": "Resource module for networks _appliance _singlelan",
    "body": [
      "cisco.meraki.networks_appliance_single_lan:",
      "\tmeraki_api_key: ${1:}",
      "\t#applianceIp: ${2:}",
      "\t#ipv6: ${3:}",
      "\t#mandatoryDhcp: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}",
      "\t#subnet: ${26:}"
    ]
  },
  "networks_appliance_single_lan_info": {
    "prefix": "networks_appliance_single_lan_info",
    "description": "Information module for networks _appliance _singlelan",
    "body": [
      "cisco.meraki.networks_appliance_single_lan_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_ssids": {
    "prefix": "networks_appliance_ssids",
    "description": "Resource module for networks _appliance _ssids",
    "body": [
      "cisco.meraki.networks_appliance_ssids:",
      "\tmeraki_api_key: ${1:}",
      "\t#authMode: ${2:}",
      "\t#defaultVlanId: ${3:}",
      "\t#dhcpEnforcedDeauthentication: ${4:}",
      "\t#enabled: ${5:}",
      "\t#encryptionMode: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#name: ${27:}",
      "\t#networkId: ${28:}",
      "\t#number: ${29:}",
      "\t#psk: ${30:}",
      "\t#radiusServers: ${31:}",
      "\t#visible: ${32:}",
      "\t#wpaEncryptionMode: ${33:}"
    ]
  },
  "networks_appliance_ssids_info": {
    "prefix": "networks_appliance_ssids_info",
    "description": "Information module for networks _appliance _ssids",
    "body": [
      "cisco.meraki.networks_appliance_ssids_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_appliance_static_routes": {
    "prefix": "networks_appliance_static_routes",
    "description": "Resource module for networks _appliance _static _routes",
    "body": [
      "cisco.meraki.networks_appliance_static_routes:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabled: ${2:}",
      "\t#fixedIpAssignments: ${3:}",
      "\t#gatewayIp: ${4:}",
      "\t#gatewayVlanId: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#name: ${26:}",
      "\t#networkId: ${27:}",
      "\t#reservedIpRanges: ${28:}",
      "\t#staticRouteId: ${29:}",
      "\t#subnet: ${30:}"
    ]
  },
  "networks_appliance_static_routes_info": {
    "prefix": "networks_appliance_static_routes_info",
    "description": "Information module for networks _appliance _static _routes",
    "body": [
      "cisco.meraki.networks_appliance_static_routes_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#staticRouteId: ${24:}"
    ]
  },
  "networks_appliance_traffic_shaping": {
    "prefix": "networks_appliance_traffic_shaping",
    "description": "Resource module for networks _appliance _trafficshaping",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping:",
      "\tmeraki_api_key: ${1:}",
      "\t#globalBandwidthLimits: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_traffic_shaping_custom_performance_classes": {
    "prefix": "networks_appliance_traffic_shaping_custom_performance_classes",
    "description": "Resource module for networks _appliance _trafficshaping _customperformanceclasses",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping_custom_performance_classes:",
      "\tmeraki_api_key: ${1:}",
      "\t#maxJitter: ${2:}",
      "\t#maxLatency: ${3:}",
      "\t#maxLossPercentage: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#name: ${25:}",
      "\t#networkId: ${26:}"
    ]
  },
  "networks_appliance_traffic_shaping_info": {
    "prefix": "networks_appliance_traffic_shaping_info",
    "description": "Information module for networks _appliance _trafficshaping",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_traffic_shaping_rules": {
    "prefix": "networks_appliance_traffic_shaping_rules",
    "description": "Resource module for networks _appliance _trafficshaping _rules",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#defaultRulesEnabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#rules: ${24:}"
    ]
  },
  "networks_appliance_traffic_shaping_rules_info": {
    "prefix": "networks_appliance_traffic_shaping_rules_info",
    "description": "Information module for networks _appliance _trafficshaping _rules",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_traffic_shaping_uplink_bandwidth": {
    "prefix": "networks_appliance_traffic_shaping_uplink_bandwidth",
    "description": "Resource module for networks _appliance _trafficshaping _uplinkbandwidth",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping_uplink_bandwidth:",
      "\tmeraki_api_key: ${1:}",
      "\t#bandwidthLimits: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_traffic_shaping_uplink_bandwidth_info": {
    "prefix": "networks_appliance_traffic_shaping_uplink_bandwidth_info",
    "description": "Information module for networks _appliance _trafficshaping _uplinkbandwidth",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping_uplink_bandwidth_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_traffic_shaping_uplink_selection": {
    "prefix": "networks_appliance_traffic_shaping_uplink_selection",
    "description": "Resource module for networks _appliance _trafficshaping _uplinkselection",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping_uplink_selection:",
      "\tmeraki_api_key: ${1:}",
      "\t#activeActiveAutoVpnEnabled: ${2:}",
      "\t#defaultUplink: ${3:}",
      "\t#failoverAndFailback: ${4:}",
      "\t#loadBalancingEnabled: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#vpnTrafficUplinkPreferences: ${27:}",
      "\t#wanTrafficUplinkPreferences: ${28:}"
    ]
  },
  "networks_appliance_traffic_shaping_uplink_selection_info": {
    "prefix": "networks_appliance_traffic_shaping_uplink_selection_info",
    "description": "Information module for networks _appliance _trafficshaping _uplinkselection",
    "body": [
      "cisco.meraki.networks_appliance_traffic_shaping_uplink_selection_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_vlans": {
    "prefix": "networks_appliance_vlans",
    "description": "Resource module for networks _appliance _vlans",
    "body": [
      "cisco.meraki.networks_appliance_vlans:",
      "\tmeraki_api_key: ${1:}",
      "\t#applianceIp: ${2:}",
      "\t#cidr: ${3:}",
      "\t#dhcpBootFilename: ${4:}",
      "\t#dhcpBootNextServer: ${5:}",
      "\t#dhcpBootOptionsEnabled: ${6:}",
      "\t#dhcpHandling: ${7:}",
      "\t#dhcpLeaseTime: ${8:}",
      "\t#dhcpOptions: ${9:}",
      "\t#dhcpRelayServerIps: ${10:}",
      "\t#dnsNameservers: ${11:}",
      "\t#fixedIpAssignments: ${12:}",
      "\t#groupPolicyId: ${13:}",
      "\t#id: ${14:}",
      "\t#ipv6: ${15:}",
      "\t#mandatoryDhcp: ${16:}",
      "\t#mask: ${17:}",
      "\t#meraki_action_batch_retry_wait_time: ${18:60}",
      "\t#meraki_base_url: ${19:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${20:\"\"}",
      "\t#meraki_caller: ${21:\"\"}",
      "\t#meraki_certificate_path: ${22:\"\"}",
      "\t#meraki_inherit_logging_config: ${23:false}",
      "\t#meraki_log_file_prefix: ${24:meraki_api_}",
      "\t#meraki_log_path: ${25:\"\"}",
      "\t#meraki_maximum_retries: ${26:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${27:60}",
      "\t#meraki_output_log: ${28:true}",
      "\t#meraki_print_console: ${29:true}",
      "\t#meraki_requests_proxy: ${30:\"\"}",
      "\t#meraki_retry_4xx_error: ${31:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${32:60}",
      "\t#meraki_simulate: ${33:false}",
      "\t#meraki_single_request_timeout: ${34:60}",
      "\t#meraki_suppress_logging: ${35:false}",
      "\t#meraki_use_iterator_for_get_pages: ${36:false}",
      "\t#meraki_wait_on_rate_limit: ${37:true}",
      "\t#name: ${38:}",
      "\t#networkId: ${39:}",
      "\t#reservedIpRanges: ${40:}",
      "\t#subnet: ${41:}",
      "\t#templateVlanType: ${42:}",
      "\t#vlanId: ${43:}",
      "\t#vpnNatSubnet: ${44:}"
    ]
  },
  "networks_appliance_vlans_info": {
    "prefix": "networks_appliance_vlans_info",
    "description": "Information module for networks _appliance _vlans",
    "body": [
      "cisco.meraki.networks_appliance_vlans_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#vlanId: ${24:}"
    ]
  },
  "networks_appliance_vlans_settings": {
    "prefix": "networks_appliance_vlans_settings",
    "description": "Resource module for networks _appliance _vlans _settings",
    "body": [
      "cisco.meraki.networks_appliance_vlans_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#vlansEnabled: ${23:}"
    ]
  },
  "networks_appliance_vlans_settings_info": {
    "prefix": "networks_appliance_vlans_settings_info",
    "description": "Information module for networks _appliance _vlans _settings",
    "body": [
      "cisco.meraki.networks_appliance_vlans_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_vpn_bgp": {
    "prefix": "networks_appliance_vpn_bgp",
    "description": "Resource module for networks _appliance _vpn _bgp",
    "body": [
      "cisco.meraki.networks_appliance_vpn_bgp:",
      "\tmeraki_api_key: ${1:}",
      "\t#asNumber: ${2:}",
      "\t#enabled: ${3:}",
      "\t#ibgpHoldTimer: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#neighbors: ${25:}",
      "\t#networkId: ${26:}"
    ]
  },
  "networks_appliance_vpn_bgp_info": {
    "prefix": "networks_appliance_vpn_bgp_info",
    "description": "Information module for networks _appliance _vpn _bgp",
    "body": [
      "cisco.meraki.networks_appliance_vpn_bgp_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_vpn_site_to_site_vpn": {
    "prefix": "networks_appliance_vpn_site_to_site_vpn",
    "description": "Resource module for networks _appliance _vpn _sitetositevpn",
    "body": [
      "cisco.meraki.networks_appliance_vpn_site_to_site_vpn:",
      "\tmeraki_api_key: ${1:}",
      "\t#hubs: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#mode: ${23:}",
      "\t#networkId: ${24:}",
      "\t#subnets: ${25:}"
    ]
  },
  "networks_appliance_vpn_site_to_site_vpn_info": {
    "prefix": "networks_appliance_vpn_site_to_site_vpn_info",
    "description": "Information module for networks _appliance _vpn _sitetositevpn",
    "body": [
      "cisco.meraki.networks_appliance_vpn_site_to_site_vpn_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_warm_spare": {
    "prefix": "networks_appliance_warm_spare",
    "description": "Resource module for networks _appliance _warmspare",
    "body": [
      "cisco.meraki.networks_appliance_warm_spare:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#spareSerial: ${24:}",
      "\t#uplinkMode: ${25:}",
      "\t#virtualIp1: ${26:}",
      "\t#virtualIp2: ${27:}"
    ]
  },
  "networks_appliance_warm_spare_info": {
    "prefix": "networks_appliance_warm_spare_info",
    "description": "Information module for networks _appliance _warmspare",
    "body": [
      "cisco.meraki.networks_appliance_warm_spare_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_appliance_warm_spare_swap": {
    "prefix": "networks_appliance_warm_spare_swap",
    "description": "Resource module for networks _appliance _warmspare _swap",
    "body": [
      "cisco.meraki.networks_appliance_warm_spare_swap:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}"
    ]
  },
  "networks_bind": {
    "prefix": "networks_bind",
    "description": "Resource module for networks _bind",
    "body": [
      "cisco.meraki.networks_bind:",
      "\tmeraki_api_key: ${1:}",
      "\t#autoBind: ${2:}",
      "\t#configTemplateId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_bluetooth_clients_info": {
    "prefix": "networks_bluetooth_clients_info",
    "description": "Information module for networks _bluetoothclients",
    "body": [
      "cisco.meraki.networks_bluetooth_clients_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#bluetoothClientId: ${2:}",
      "\t#connectivityHistoryTimespan: ${3:}",
      "\t#headers: ${4:}",
      "\t#includeConnectivityHistory: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}"
    ]
  },
  "networks_camera_quality_retention_profiles": {
    "prefix": "networks_camera_quality_retention_profiles",
    "description": "Resource module for networks _camera _qualityretentionprofiles",
    "body": [
      "cisco.meraki.networks_camera_quality_retention_profiles:",
      "\tmeraki_api_key: ${1:}",
      "\t#audioRecordingEnabled: ${2:}",
      "\t#cloudArchiveEnabled: ${3:}",
      "\t#maxRetentionDays: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#motionBasedRetentionEnabled: ${25:}",
      "\t#motionDetectorVersion: ${26:}",
      "\t#name: ${27:}",
      "\t#networkId: ${28:}",
      "\t#qualityRetentionProfileId: ${29:}",
      "\t#restrictedBandwidthModeEnabled: ${30:}",
      "\t#scheduleId: ${31:}",
      "\t#videoSettings: ${32:}"
    ]
  },
  "networks_camera_quality_retention_profiles_info": {
    "prefix": "networks_camera_quality_retention_profiles_info",
    "description": "Information module for networks _camera _qualityretentionprofiles",
    "body": [
      "cisco.meraki.networks_camera_quality_retention_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#qualityRetentionProfileId: ${24:}"
    ]
  },
  "networks_camera_wireless_profiles": {
    "prefix": "networks_camera_wireless_profiles",
    "description": "Resource module for networks _camera _wirelessprofiles",
    "body": [
      "cisco.meraki.networks_camera_wireless_profiles:",
      "\tmeraki_api_key: ${1:}",
      "\t#identity: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#networkId: ${24:}",
      "\t#ssid: ${25:}",
      "\t#wirelessProfileId: ${26:}"
    ]
  },
  "networks_camera_wireless_profiles_info": {
    "prefix": "networks_camera_wireless_profiles_info",
    "description": "Information module for networks _camera _wirelessprofiles",
    "body": [
      "cisco.meraki.networks_camera_wireless_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#wirelessProfileId: ${24:}"
    ]
  },
  "networks_cellular_gateway_connectivity_monitoring_destinations": {
    "prefix": "networks_cellular_gateway_connectivity_monitoring_destinations",
    "description": "Resource module for networks _cellulargateway _connectivitymonitoringdestinations",
    "body": [
      "cisco.meraki.networks_cellular_gateway_connectivity_monitoring_destinations:",
      "\tmeraki_api_key: ${1:}",
      "\t#destinations: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_cellular_gateway_connectivity_monitoring_destinations_info": {
    "prefix": "networks_cellular_gateway_connectivity_monitoring_destinations_info",
    "description": "Information module for networks _cellulargateway _connectivitymonitoringdestinations",
    "body": [
      "cisco.meraki.networks_cellular_gateway_connectivity_monitoring_destinations_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_cellular_gateway_dhcp": {
    "prefix": "networks_cellular_gateway_dhcp",
    "description": "Resource module for networks _cellulargateway _dhcp",
    "body": [
      "cisco.meraki.networks_cellular_gateway_dhcp:",
      "\tmeraki_api_key: ${1:}",
      "\t#dhcpLeaseTime: ${2:}",
      "\t#dnsCustomNameservers: ${3:}",
      "\t#dnsNameservers: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}"
    ]
  },
  "networks_cellular_gateway_dhcp_info": {
    "prefix": "networks_cellular_gateway_dhcp_info",
    "description": "Information module for networks _cellulargateway _dhcp",
    "body": [
      "cisco.meraki.networks_cellular_gateway_dhcp_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_cellular_gateway_subnet_pool": {
    "prefix": "networks_cellular_gateway_subnet_pool",
    "description": "Resource module for networks _cellulargateway _subnetpool",
    "body": [
      "cisco.meraki.networks_cellular_gateway_subnet_pool:",
      "\tmeraki_api_key: ${1:}",
      "\t#cidr: ${2:}",
      "\t#mask: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_cellular_gateway_subnet_pool_info": {
    "prefix": "networks_cellular_gateway_subnet_pool_info",
    "description": "Information module for networks _cellulargateway _subnetpool",
    "body": [
      "cisco.meraki.networks_cellular_gateway_subnet_pool_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_cellular_gateway_uplink": {
    "prefix": "networks_cellular_gateway_uplink",
    "description": "Resource module for networks _cellulargateway _uplink",
    "body": [
      "cisco.meraki.networks_cellular_gateway_uplink:",
      "\tmeraki_api_key: ${1:}",
      "\t#bandwidthLimits: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_cellular_gateway_uplink_info": {
    "prefix": "networks_cellular_gateway_uplink_info",
    "description": "Information module for networks _cellulargateway _uplink",
    "body": [
      "cisco.meraki.networks_cellular_gateway_uplink_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_client_info": {
    "prefix": "networks_client_info",
    "description": "Information module for networks _client",
    "body": [
      "cisco.meraki.networks_client_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#clientId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_clients_info": {
    "prefix": "networks_clients_info",
    "description": "Information module for networks _clients",
    "body": [
      "cisco.meraki.networks_clients_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#description: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#ip: ${7:}",
      "\t#ip6: ${8:}",
      "\t#ip6Local: ${9:}",
      "\t#mac: ${10:}",
      "\t#meraki_action_batch_retry_wait_time: ${11:60}",
      "\t#meraki_base_url: ${12:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${13:\"\"}",
      "\t#meraki_caller: ${14:\"\"}",
      "\t#meraki_certificate_path: ${15:\"\"}",
      "\t#meraki_inherit_logging_config: ${16:false}",
      "\t#meraki_log_file_prefix: ${17:meraki_api_}",
      "\t#meraki_log_path: ${18:\"\"}",
      "\t#meraki_maximum_retries: ${19:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${20:60}",
      "\t#meraki_output_log: ${21:true}",
      "\t#meraki_print_console: ${22:true}",
      "\t#meraki_requests_proxy: ${23:\"\"}",
      "\t#meraki_retry_4xx_error: ${24:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${25:60}",
      "\t#meraki_simulate: ${26:false}",
      "\t#meraki_single_request_timeout: ${27:60}",
      "\t#meraki_suppress_logging: ${28:false}",
      "\t#meraki_use_iterator_for_get_pages: ${29:false}",
      "\t#meraki_wait_on_rate_limit: ${30:true}",
      "\t#networkId: ${31:}",
      "\t#os: ${32:}",
      "\t#perPage: ${33:}",
      "\t#pskGroup: ${34:}",
      "\t#recentDeviceConnections: ${35:}",
      "\t#startingAfter: ${36:}",
      "\t#statuses: ${37:}",
      "\t#t0: ${38:}",
      "\t#timespan: ${39:}",
      "\t#vlan: ${40:}"
    ]
  },
  "networks_clients_overview_info": {
    "prefix": "networks_clients_overview_info",
    "description": "Information module for networks _clients _overview",
    "body": [
      "cisco.meraki.networks_clients_overview_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#resolution: ${24:}",
      "\t#t0: ${25:}",
      "\t#t1: ${26:}",
      "\t#timespan: ${27:}"
    ]
  },
  "networks_clients_policy": {
    "prefix": "networks_clients_policy",
    "description": "Resource module for networks _clients _policy",
    "body": [
      "cisco.meraki.networks_clients_policy:",
      "\tmeraki_api_key: ${1:}",
      "\t#clientId: ${2:}",
      "\t#devicePolicy: ${3:}",
      "\t#groupPolicyId: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}"
    ]
  },
  "networks_clients_policy_info": {
    "prefix": "networks_clients_policy_info",
    "description": "Information module for networks _clients _policy",
    "body": [
      "cisco.meraki.networks_clients_policy_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#clientId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_clients_provision": {
    "prefix": "networks_clients_provision",
    "description": "Resource module for networks _clients _provision",
    "body": [
      "cisco.meraki.networks_clients_provision:",
      "\tmeraki_api_key: ${1:}",
      "\t#clients: ${2:}",
      "\t#devicePolicy: ${3:}",
      "\t#groupPolicyId: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}",
      "\t#policiesBySecurityAppliance: ${26:}",
      "\t#policiesBySsid: ${27:}"
    ]
  },
  "networks_clients_splash_authorization_status": {
    "prefix": "networks_clients_splash_authorization_status",
    "description": "Resource module for networks _clients _splashauthorizationstatus",
    "body": [
      "cisco.meraki.networks_clients_splash_authorization_status:",
      "\tmeraki_api_key: ${1:}",
      "\t#clientId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#ssids: ${24:}"
    ]
  },
  "networks_clients_splash_authorization_status_info": {
    "prefix": "networks_clients_splash_authorization_status_info",
    "description": "Information module for networks _clients _splashauthorizationstatus",
    "body": [
      "cisco.meraki.networks_clients_splash_authorization_status_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#clientId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_devices_claim": {
    "prefix": "networks_devices_claim",
    "description": "Resource module for networks _devices _claim",
    "body": [
      "cisco.meraki.networks_devices_claim:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#serials: ${23:}"
    ]
  },
  "networks_devices_claim_vmx": {
    "prefix": "networks_devices_claim_vmx",
    "description": "Resource module for networks _devices _claim _vmx",
    "body": [
      "cisco.meraki.networks_devices_claim_vmx:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#size: ${23:}"
    ]
  },
  "networks_devices_remove": {
    "prefix": "networks_devices_remove",
    "description": "Resource module for networks _devices _remove",
    "body": [
      "cisco.meraki.networks_devices_remove:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#serial: ${23:}"
    ]
  },
  "networks_events_event_types_info": {
    "prefix": "networks_events_event_types_info",
    "description": "Information module for networks _events _eventtypes",
    "body": [
      "cisco.meraki.networks_events_event_types_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_events_info": {
    "prefix": "networks_events_info",
    "description": "Information module for networks _events",
    "body": [
      "cisco.meraki.networks_events_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#clientIp: ${3:}",
      "\t#clientMac: ${4:}",
      "\t#clientName: ${5:}",
      "\t#deviceMac: ${6:}",
      "\t#deviceName: ${7:}",
      "\t#deviceSerial: ${8:}",
      "\t#direction: ${9:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${10:}",
      "\t#excludedEventTypes: ${11:}",
      "\t#headers: ${12:}",
      "\t#includedEventTypes: ${13:}",
      "\t#meraki_action_batch_retry_wait_time: ${14:60}",
      "\t#meraki_base_url: ${15:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${16:\"\"}",
      "\t#meraki_caller: ${17:\"\"}",
      "\t#meraki_certificate_path: ${18:\"\"}",
      "\t#meraki_inherit_logging_config: ${19:false}",
      "\t#meraki_log_file_prefix: ${20:meraki_api_}",
      "\t#meraki_log_path: ${21:\"\"}",
      "\t#meraki_maximum_retries: ${22:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${23:60}",
      "\t#meraki_output_log: ${24:true}",
      "\t#meraki_print_console: ${25:true}",
      "\t#meraki_requests_proxy: ${26:\"\"}",
      "\t#meraki_retry_4xx_error: ${27:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${28:60}",
      "\t#meraki_simulate: ${29:false}",
      "\t#meraki_single_request_timeout: ${30:60}",
      "\t#meraki_suppress_logging: ${31:false}",
      "\t#meraki_use_iterator_for_get_pages: ${32:false}",
      "\t#meraki_wait_on_rate_limit: ${33:true}",
      "\t#networkId: ${34:}",
      "\t#perPage: ${35:}",
      "\t#productType: ${36:}",
      "\t#smDeviceMac: ${37:}",
      "\t#smDeviceName: ${38:}",
      "\t#startingAfter: ${39:}"
    ]
  },
  "networks_firmware_upgrades": {
    "prefix": "networks_firmware_upgrades",
    "description": "Resource module for networks _firmwareupgrades",
    "body": [
      "cisco.meraki.networks_firmware_upgrades:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#products: ${23:}",
      "\t#timezone: ${24:}",
      "\t#upgradeWindow: ${25:}"
    ]
  },
  "networks_firmware_upgrades_info": {
    "prefix": "networks_firmware_upgrades_info",
    "description": "Information module for networks _firmwareupgrades",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_firmware_upgrades_rollbacks": {
    "prefix": "networks_firmware_upgrades_rollbacks",
    "description": "Resource module for networks _firmwareupgrades _rollbacks",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_rollbacks:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#product: ${23:}",
      "\t#reasons: ${24:}",
      "\t#time: ${25:}",
      "\t#toVersion: ${26:}"
    ]
  },
  "networks_firmware_upgrades_staged_events": {
    "prefix": "networks_firmware_upgrades_staged_events",
    "description": "Resource module for networks _firmwareupgrades _staged _events",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_staged_events:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#products: ${23:}",
      "\t#stages: ${24:}"
    ]
  },
  "networks_firmware_upgrades_staged_events_defer": {
    "prefix": "networks_firmware_upgrades_staged_events_defer",
    "description": "Resource module for networks _firmwareupgrades _staged _events _defer",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_staged_events_defer:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}"
    ]
  },
  "networks_firmware_upgrades_staged_events_info": {
    "prefix": "networks_firmware_upgrades_staged_events_info",
    "description": "Information module for networks _firmwareupgrades _staged _events",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_staged_events_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_firmware_upgrades_staged_events_rollbacks": {
    "prefix": "networks_firmware_upgrades_staged_events_rollbacks",
    "description": "Resource module for networks _firmwareupgrades _staged _events _rollbacks",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_staged_events_rollbacks:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#reasons: ${23:}",
      "\t#stages: ${24:}"
    ]
  },
  "networks_firmware_upgrades_staged_groups": {
    "prefix": "networks_firmware_upgrades_staged_groups",
    "description": "Resource module for networks _firmwareupgrades _staged _groups",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_staged_groups:",
      "\tmeraki_api_key: ${1:}",
      "\t#assignedDevices: ${2:}",
      "\t#description: ${3:}",
      "\t#groupId: ${4:}",
      "\t#isDefault: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#name: ${26:}",
      "\t#networkId: ${27:}"
    ]
  },
  "networks_firmware_upgrades_staged_groups_info": {
    "prefix": "networks_firmware_upgrades_staged_groups_info",
    "description": "Information module for networks _firmwareupgrades _staged _groups",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_staged_groups_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#groupId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_firmware_upgrades_staged_stages": {
    "prefix": "networks_firmware_upgrades_staged_stages",
    "description": "Resource module for networks _firmwareupgrades _staged _stages",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_staged_stages:",
      "\tmeraki_api_key: ${1:}",
      "\t#_json: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_firmware_upgrades_staged_stages_info": {
    "prefix": "networks_firmware_upgrades_staged_stages_info",
    "description": "Information module for networks _firmwareupgrades _staged _stages",
    "body": [
      "cisco.meraki.networks_firmware_upgrades_staged_stages_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_floor_plans": {
    "prefix": "networks_floor_plans",
    "description": "Resource module for networks _floorplans",
    "body": [
      "cisco.meraki.networks_floor_plans:",
      "\tmeraki_api_key: ${1:}",
      "\t#bottomLeftCorner: ${2:}",
      "\t#bottomRightCorner: ${3:}",
      "\t#center: ${4:}",
      "\t#floorPlanId: ${5:}",
      "\t#imageContents: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#name: ${27:}",
      "\t#networkId: ${28:}",
      "\t#topLeftCorner: ${29:}",
      "\t#topRightCorner: ${30:}"
    ]
  },
  "networks_floor_plans_info": {
    "prefix": "networks_floor_plans_info",
    "description": "Information module for networks _floorplans",
    "body": [
      "cisco.meraki.networks_floor_plans_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#floorPlanId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_group_policies": {
    "prefix": "networks_group_policies",
    "description": "Resource module for networks _grouppolicies",
    "body": [
      "cisco.meraki.networks_group_policies:",
      "\tmeraki_api_key: ${1:}",
      "\t#bandwidth: ${2:}",
      "\t#bonjourForwarding: ${3:}",
      "\t#contentFiltering: ${4:}",
      "\t#firewallAndTrafficShaping: ${5:}",
      "\t#groupPolicyId: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#name: ${27:}",
      "\t#networkId: ${28:}",
      "\t#scheduling: ${29:}",
      "\t#splashAuthSettings: ${30:}",
      "\t#vlanTagging: ${31:}"
    ]
  },
  "networks_group_policies_info": {
    "prefix": "networks_group_policies_info",
    "description": "Information module for networks _grouppolicies",
    "body": [
      "cisco.meraki.networks_group_policies_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#groupPolicyId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_health_alerts_info": {
    "prefix": "networks_health_alerts_info",
    "description": "Information module for networks _health _alerts",
    "body": [
      "cisco.meraki.networks_health_alerts_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_insight_applications_health_by_time_info": {
    "prefix": "networks_insight_applications_health_by_time_info",
    "description": "Information module for networks _insight _applications _healthbytime",
    "body": [
      "cisco.meraki.networks_insight_applications_health_by_time_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#applicationId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#resolution: ${25:}",
      "\t#t0: ${26:}",
      "\t#t1: ${27:}",
      "\t#timespan: ${28:}"
    ]
  },
  "networks_meraki_auth_users": {
    "prefix": "networks_meraki_auth_users",
    "description": "Resource module for networks _merakiauthusers",
    "body": [
      "cisco.meraki.networks_meraki_auth_users:",
      "\tmeraki_api_key: ${1:}",
      "\t#accountType: ${2:}",
      "\t#authorizations: ${3:}",
      "\t#email: ${4:}",
      "\t#emailPasswordToUser: ${5:}",
      "\t#isAdmin: ${6:}",
      "\t#merakiAuthUserId: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#name: ${28:}",
      "\t#networkId: ${29:}",
      "\t#password: ${30:}"
    ]
  },
  "networks_meraki_auth_users_info": {
    "prefix": "networks_meraki_auth_users_info",
    "description": "Information module for networks _merakiauthusers",
    "body": [
      "cisco.meraki.networks_meraki_auth_users_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#merakiAuthUserId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_mqtt_brokers": {
    "prefix": "networks_mqtt_brokers",
    "description": "Resource module for networks _mqttbrokers",
    "body": [
      "cisco.meraki.networks_mqtt_brokers:",
      "\tmeraki_api_key: ${1:}",
      "\t#authentication: ${2:}",
      "\t#host: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#name: ${24:}",
      "\t#networkId: ${25:}",
      "\t#port: ${26:}",
      "\t#security: ${27:}"
    ]
  },
  "networks_netflow": {
    "prefix": "networks_netflow",
    "description": "Resource module for networks _netflow",
    "body": [
      "cisco.meraki.networks_netflow:",
      "\tmeraki_api_key: ${1:}",
      "\t#collectorIp: ${2:}",
      "\t#collectorPort: ${3:}",
      "\t#etaDstPort: ${4:}",
      "\t#etaEnabled: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#reportingEnabled: ${27:}"
    ]
  },
  "networks_netflow_info": {
    "prefix": "networks_netflow_info",
    "description": "Information module for networks _netflow",
    "body": [
      "cisco.meraki.networks_netflow_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_pii_pii_keys_info": {
    "prefix": "networks_pii_pii_keys_info",
    "description": "Information module for networks _pii _piikeys",
    "body": [
      "cisco.meraki.networks_pii_pii_keys_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#bluetoothMac: ${2:}",
      "\t#email: ${3:}",
      "\t#headers: ${4:}",
      "\t#imei: ${5:}",
      "\t#mac: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#serial: ${28:}",
      "\t#username: ${29:}"
    ]
  },
  "networks_pii_requests_delete": {
    "prefix": "networks_pii_requests_delete",
    "description": "Resource module for networks _pii _requests _delete",
    "body": [
      "cisco.meraki.networks_pii_requests_delete:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#requestId: ${23:}"
    ]
  },
  "networks_pii_requests_info": {
    "prefix": "networks_pii_requests_info",
    "description": "Information module for networks _pii _requests",
    "body": [
      "cisco.meraki.networks_pii_requests_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#requestId: ${24:}"
    ]
  },
  "networks_pii_sm_devices_for_key_info": {
    "prefix": "networks_pii_sm_devices_for_key_info",
    "description": "Information module for networks _pii _smdevicesforkey",
    "body": [
      "cisco.meraki.networks_pii_sm_devices_for_key_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#bluetoothMac: ${2:}",
      "\t#email: ${3:}",
      "\t#headers: ${4:}",
      "\t#imei: ${5:}",
      "\t#mac: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#serial: ${28:}",
      "\t#username: ${29:}"
    ]
  },
  "networks_pii_sm_owners_for_key_info": {
    "prefix": "networks_pii_sm_owners_for_key_info",
    "description": "Information module for networks _pii _smownersforkey",
    "body": [
      "cisco.meraki.networks_pii_sm_owners_for_key_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#bluetoothMac: ${2:}",
      "\t#email: ${3:}",
      "\t#headers: ${4:}",
      "\t#imei: ${5:}",
      "\t#mac: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#serial: ${28:}",
      "\t#username: ${29:}"
    ]
  },
  "networks_policies_by_client_info": {
    "prefix": "networks_policies_by_client_info",
    "description": "Information module for networks _policies _byclient",
    "body": [
      "cisco.meraki.networks_policies_by_client_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}",
      "\t#t0: ${29:}",
      "\t#timespan: ${30:}"
    ]
  },
  "networks_sensor_alerts_current_overview_by_metric_info": {
    "prefix": "networks_sensor_alerts_current_overview_by_metric_info",
    "description": "Information module for networks _sensor _alerts _current _overview _bymetric",
    "body": [
      "cisco.meraki.networks_sensor_alerts_current_overview_by_metric_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_sensor_alerts_overview_by_metric_info": {
    "prefix": "networks_sensor_alerts_overview_by_metric_info",
    "description": "Information module for networks _sensor _alerts _overview _bymetric",
    "body": [
      "cisco.meraki.networks_sensor_alerts_overview_by_metric_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#interval: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#t0: ${25:}",
      "\t#t1: ${26:}",
      "\t#timespan: ${27:}"
    ]
  },
  "networks_sensor_alerts_profiles": {
    "prefix": "networks_sensor_alerts_profiles",
    "description": "Resource module for networks _sensor _alerts _profiles",
    "body": [
      "cisco.meraki.networks_sensor_alerts_profiles:",
      "\tmeraki_api_key: ${1:}",
      "\t#conditions: ${2:}",
      "\t#id: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#name: ${24:}",
      "\t#networkId: ${25:}",
      "\t#recipients: ${26:}",
      "\t#schedule: ${27:}",
      "\t#serials: ${28:}"
    ]
  },
  "networks_sensor_alerts_profiles_info": {
    "prefix": "networks_sensor_alerts_profiles_info",
    "description": "Information module for networks _sensor _alerts _profiles",
    "body": [
      "cisco.meraki.networks_sensor_alerts_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#id: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sensor_mqtt_brokers": {
    "prefix": "networks_sensor_mqtt_brokers",
    "description": "Resource module for networks _sensor _mqttbrokers",
    "body": [
      "cisco.meraki.networks_sensor_mqtt_brokers:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#mqttBrokerId: ${23:}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sensor_mqtt_brokers_info": {
    "prefix": "networks_sensor_mqtt_brokers_info",
    "description": "Information module for networks _sensor _mqttbrokers",
    "body": [
      "cisco.meraki.networks_sensor_mqtt_brokers_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#mqttBrokerId: ${23:}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sensor_relationships_info": {
    "prefix": "networks_sensor_relationships_info",
    "description": "Information module for networks _sensor _relationships",
    "body": [
      "cisco.meraki.networks_sensor_relationships_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_settings": {
    "prefix": "networks_settings",
    "description": "Resource module for networks _settings",
    "body": [
      "cisco.meraki.networks_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#localStatusPage: ${2:}",
      "\t#localStatusPageEnabled: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#remoteStatusPageEnabled: ${25:}",
      "\t#securePort: ${26:}"
    ]
  },
  "networks_settings_info": {
    "prefix": "networks_settings_info",
    "description": "Information module for networks _settings",
    "body": [
      "cisco.meraki.networks_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_sm_bypass_activation_lock_attempts": {
    "prefix": "networks_sm_bypass_activation_lock_attempts",
    "description": "Resource module for networks _sm _bypassactivationlockattempts",
    "body": [
      "cisco.meraki.networks_sm_bypass_activation_lock_attempts:",
      "\tmeraki_api_key: ${1:}",
      "\t#ids: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_sm_bypass_activation_lock_attempts_info": {
    "prefix": "networks_sm_bypass_activation_lock_attempts_info",
    "description": "Information module for networks _sm _bypassactivationlockattempts",
    "body": [
      "cisco.meraki.networks_sm_bypass_activation_lock_attempts_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#attemptId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sm_devices_cellular_usage_history_info": {
    "prefix": "networks_sm_devices_cellular_usage_history_info",
    "description": "Information module for networks _sm _devices _cellularusagehistory",
    "body": [
      "cisco.meraki.networks_sm_devices_cellular_usage_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sm_devices_certs_info": {
    "prefix": "networks_sm_devices_certs_info",
    "description": "Information module for networks _sm _devices _certs",
    "body": [
      "cisco.meraki.networks_sm_devices_certs_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sm_devices_checkin": {
    "prefix": "networks_sm_devices_checkin",
    "description": "Resource module for networks _sm _devices _checkin",
    "body": [
      "cisco.meraki.networks_sm_devices_checkin:",
      "\tmeraki_api_key: ${1:}",
      "\t#ids: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#scope: ${24:}",
      "\t#serials: ${25:}",
      "\t#wifiMacs: ${26:}"
    ]
  },
  "networks_sm_devices_connectivity_info": {
    "prefix": "networks_sm_devices_connectivity_info",
    "description": "Information module for networks _sm _devices _connectivity",
    "body": [
      "cisco.meraki.networks_sm_devices_connectivity_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#deviceId: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "networks_sm_devices_desktop_logs_info": {
    "prefix": "networks_sm_devices_desktop_logs_info",
    "description": "Information module for networks _sm _devices _desktoplogs",
    "body": [
      "cisco.meraki.networks_sm_devices_desktop_logs_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#deviceId: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "networks_sm_devices_device_command_logs_info": {
    "prefix": "networks_sm_devices_device_command_logs_info",
    "description": "Information module for networks _sm _devices _devicecommandlogs",
    "body": [
      "cisco.meraki.networks_sm_devices_device_command_logs_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#deviceId: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "networks_sm_devices_device_profiles_info": {
    "prefix": "networks_sm_devices_device_profiles_info",
    "description": "Information module for networks _sm _devices _deviceprofiles",
    "body": [
      "cisco.meraki.networks_sm_devices_device_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sm_devices_fields": {
    "prefix": "networks_sm_devices_fields",
    "description": "Resource module for networks _sm _devices _fields",
    "body": [
      "cisco.meraki.networks_sm_devices_fields:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceFields: ${2:}",
      "\t#id: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#serial: ${25:}",
      "\t#wifiMac: ${26:}"
    ]
  },
  "networks_sm_devices_info": {
    "prefix": "networks_sm_devices_info",
    "description": "Information module for networks _sm _devices",
    "body": [
      "cisco.meraki.networks_sm_devices_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#fields: ${5:}",
      "\t#headers: ${6:}",
      "\t#ids: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#networkId: ${28:}",
      "\t#perPage: ${29:}",
      "\t#scope: ${30:}",
      "\t#serials: ${31:}",
      "\t#startingAfter: ${32:}",
      "\t#wifiMacs: ${33:}"
    ]
  },
  "networks_sm_devices_lock": {
    "prefix": "networks_sm_devices_lock",
    "description": "Resource module for networks _sm _devices _lock",
    "body": [
      "cisco.meraki.networks_sm_devices_lock:",
      "\tmeraki_api_key: ${1:}",
      "\t#ids: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#pin: ${24:}",
      "\t#scope: ${25:}",
      "\t#serials: ${26:}",
      "\t#wifiMacs: ${27:}"
    ]
  },
  "networks_sm_devices_modify_tags": {
    "prefix": "networks_sm_devices_modify_tags",
    "description": "Resource module for networks _sm _devices _modifytags",
    "body": [
      "cisco.meraki.networks_sm_devices_modify_tags:",
      "\tmeraki_api_key: ${1:}",
      "\t#ids: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#scope: ${24:}",
      "\t#serials: ${25:}",
      "\t#tags: ${26:}",
      "\t#updateAction: ${27:}",
      "\t#wifiMacs: ${28:}"
    ]
  },
  "networks_sm_devices_move": {
    "prefix": "networks_sm_devices_move",
    "description": "Resource module for networks _sm _devices _move",
    "body": [
      "cisco.meraki.networks_sm_devices_move:",
      "\tmeraki_api_key: ${1:}",
      "\t#ids: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#newNetwork: ${24:}",
      "\t#scope: ${25:}",
      "\t#serials: ${26:}",
      "\t#wifiMacs: ${27:}"
    ]
  },
  "networks_sm_devices_network_adapters_info": {
    "prefix": "networks_sm_devices_network_adapters_info",
    "description": "Information module for networks _sm _devices _networkadapters",
    "body": [
      "cisco.meraki.networks_sm_devices_network_adapters_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sm_devices_performance_history_info": {
    "prefix": "networks_sm_devices_performance_history_info",
    "description": "Information module for networks _sm _devices _performancehistory",
    "body": [
      "cisco.meraki.networks_sm_devices_performance_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#deviceId: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "networks_sm_devices_refresh_details": {
    "prefix": "networks_sm_devices_refresh_details",
    "description": "Resource module for networks _sm _devices _refreshdetails",
    "body": [
      "cisco.meraki.networks_sm_devices_refresh_details:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_sm_devices_security_centers_info": {
    "prefix": "networks_sm_devices_security_centers_info",
    "description": "Information module for networks _sm _devices _securitycenters",
    "body": [
      "cisco.meraki.networks_sm_devices_security_centers_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sm_devices_unenroll": {
    "prefix": "networks_sm_devices_unenroll",
    "description": "Resource module for networks _sm _devices _unenroll",
    "body": [
      "cisco.meraki.networks_sm_devices_unenroll:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_sm_devices_wipe": {
    "prefix": "networks_sm_devices_wipe",
    "description": "Resource module for networks _sm _devices _wipe",
    "body": [
      "cisco.meraki.networks_sm_devices_wipe:",
      "\tmeraki_api_key: ${1:}",
      "\t#id: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#pin: ${24:}",
      "\t#serial: ${25:}",
      "\t#wifiMac: ${26:}"
    ]
  },
  "networks_sm_devices_wlan_lists_info": {
    "prefix": "networks_sm_devices_wlan_lists_info",
    "description": "Information module for networks _sm _devices _wlanlists",
    "body": [
      "cisco.meraki.networks_sm_devices_wlan_lists_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_sm_profiles_info": {
    "prefix": "networks_sm_profiles_info",
    "description": "Information module for networks _sm _profiles",
    "body": [
      "cisco.meraki.networks_sm_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_sm_target_groups": {
    "prefix": "networks_sm_target_groups",
    "description": "Resource module for networks _sm _targetgroups",
    "body": [
      "cisco.meraki.networks_sm_target_groups:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#name: ${22:}",
      "\t#networkId: ${23:}",
      "\t#scope: ${24:}",
      "\t#targetGroupId: ${25:}"
    ]
  },
  "networks_sm_target_groups_info": {
    "prefix": "networks_sm_target_groups_info",
    "description": "Information module for networks _sm _targetgroups",
    "body": [
      "cisco.meraki.networks_sm_target_groups_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#targetGroupId: ${24:}",
      "\t#withDetails: ${25:}"
    ]
  },
  "networks_sm_trusted_access_configs_info": {
    "prefix": "networks_sm_trusted_access_configs_info",
    "description": "Information module for networks _sm _trustedaccessconfigs",
    "body": [
      "cisco.meraki.networks_sm_trusted_access_configs_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}"
    ]
  },
  "networks_sm_user_access_devices_delete": {
    "prefix": "networks_sm_user_access_devices_delete",
    "description": "Resource module for networks _sm _useraccessdevices _delete",
    "body": [
      "cisco.meraki.networks_sm_user_access_devices_delete:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#userAccessDeviceId: ${23:}"
    ]
  },
  "networks_sm_user_access_devices_info": {
    "prefix": "networks_sm_user_access_devices_info",
    "description": "Information module for networks _sm _useraccessdevices",
    "body": [
      "cisco.meraki.networks_sm_user_access_devices_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}"
    ]
  },
  "networks_sm_users_device_profiles_info": {
    "prefix": "networks_sm_users_device_profiles_info",
    "description": "Information module for networks _sm _users _deviceprofiles",
    "body": [
      "cisco.meraki.networks_sm_users_device_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#userId: ${24:}"
    ]
  },
  "networks_sm_users_info": {
    "prefix": "networks_sm_users_info",
    "description": "Information module for networks _sm _users",
    "body": [
      "cisco.meraki.networks_sm_users_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#emails: ${2:}",
      "\t#headers: ${3:}",
      "\t#ids: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}",
      "\t#scope: ${26:}",
      "\t#usernames: ${27:}"
    ]
  },
  "networks_sm_users_softwares_info": {
    "prefix": "networks_sm_users_softwares_info",
    "description": "Information module for networks _sm _users _softwares",
    "body": [
      "cisco.meraki.networks_sm_users_softwares_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#userId: ${24:}"
    ]
  },
  "networks_snmp": {
    "prefix": "networks_snmp",
    "description": "Resource module for networks _snmp",
    "body": [
      "cisco.meraki.networks_snmp:",
      "\tmeraki_api_key: ${1:}",
      "\t#access: ${2:}",
      "\t#communityString: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#users: ${25:}"
    ]
  },
  "networks_snmp_info": {
    "prefix": "networks_snmp_info",
    "description": "Information module for networks _snmp",
    "body": [
      "cisco.meraki.networks_snmp_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_split": {
    "prefix": "networks_split",
    "description": "Resource module for networks _split",
    "body": [
      "cisco.meraki.networks_split:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}"
    ]
  },
  "networks_switch_access_control_lists": {
    "prefix": "networks_switch_access_control_lists",
    "description": "Resource module for networks _switch _accesscontrollists",
    "body": [
      "cisco.meraki.networks_switch_access_control_lists:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rules: ${23:}"
    ]
  },
  "networks_switch_access_control_lists_info": {
    "prefix": "networks_switch_access_control_lists_info",
    "description": "Information module for networks _switch _accesscontrollists",
    "body": [
      "cisco.meraki.networks_switch_access_control_lists_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_access_policies": {
    "prefix": "networks_switch_access_policies",
    "description": "Resource module for networks _switch _accesspolicies",
    "body": [
      "cisco.meraki.networks_switch_access_policies:",
      "\tmeraki_api_key: ${1:}",
      "\t#accessPolicyNumber: ${2:}",
      "\t#accessPolicyType: ${3:}",
      "\t#dot1x: ${4:}",
      "\t#guestPortBouncing: ${5:}",
      "\t#guestVlanId: ${6:}",
      "\t#hostMode: ${7:}",
      "\t#increaseAccessSpeed: ${8:}",
      "\t#meraki_action_batch_retry_wait_time: ${9:60}",
      "\t#meraki_base_url: ${10:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${11:\"\"}",
      "\t#meraki_caller: ${12:\"\"}",
      "\t#meraki_certificate_path: ${13:\"\"}",
      "\t#meraki_inherit_logging_config: ${14:false}",
      "\t#meraki_log_file_prefix: ${15:meraki_api_}",
      "\t#meraki_log_path: ${16:\"\"}",
      "\t#meraki_maximum_retries: ${17:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${18:60}",
      "\t#meraki_output_log: ${19:true}",
      "\t#meraki_print_console: ${20:true}",
      "\t#meraki_requests_proxy: ${21:\"\"}",
      "\t#meraki_retry_4xx_error: ${22:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${23:60}",
      "\t#meraki_simulate: ${24:false}",
      "\t#meraki_single_request_timeout: ${25:60}",
      "\t#meraki_suppress_logging: ${26:false}",
      "\t#meraki_use_iterator_for_get_pages: ${27:false}",
      "\t#meraki_wait_on_rate_limit: ${28:true}",
      "\t#name: ${29:}",
      "\t#networkId: ${30:}",
      "\t#radius: ${31:}",
      "\t#radiusAccountingEnabled: ${32:}",
      "\t#radiusAccountingServers: ${33:}",
      "\t#radiusCoaSupportEnabled: ${34:}",
      "\t#radiusGroupAttribute: ${35:}",
      "\t#radiusServers: ${36:}",
      "\t#radiusTestingEnabled: ${37:}",
      "\t#urlRedirectWalledGardenEnabled: ${38:}",
      "\t#urlRedirectWalledGardenRanges: ${39:}",
      "\t#voiceVlanClients: ${40:}"
    ]
  },
  "networks_switch_access_policies_info": {
    "prefix": "networks_switch_access_policies_info",
    "description": "Information module for networks _switch _accesspolicies",
    "body": [
      "cisco.meraki.networks_switch_access_policies_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#accessPolicyNumber: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_switch_alternate_management_interface": {
    "prefix": "networks_switch_alternate_management_interface",
    "description": "Resource module for networks _switch _alternatemanagementinterface",
    "body": [
      "cisco.meraki.networks_switch_alternate_management_interface:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#protocols: ${24:}",
      "\t#switches: ${25:}",
      "\t#vlanId: ${26:}"
    ]
  },
  "networks_switch_alternate_management_interface_info": {
    "prefix": "networks_switch_alternate_management_interface_info",
    "description": "Information module for networks _switch _alternatemanagementinterface",
    "body": [
      "cisco.meraki.networks_switch_alternate_management_interface_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_dhcp_server_policy": {
    "prefix": "networks_switch_dhcp_server_policy",
    "description": "Resource module for networks _switch _dhcpserverpolicy",
    "body": [
      "cisco.meraki.networks_switch_dhcp_server_policy:",
      "\tmeraki_api_key: ${1:}",
      "\t#alerts: ${2:}",
      "\t#allowedServers: ${3:}",
      "\t#arpInspection: ${4:}",
      "\t#blockedServers: ${5:}",
      "\t#defaultPolicy: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}"
    ]
  },
  "networks_switch_dhcp_server_policy_arp_inspection_trusted_servers": {
    "prefix": "networks_switch_dhcp_server_policy_arp_inspection_trusted_servers",
    "description": "Resource module for networks _switch _dhcpserverpolicy _arpinspection _trustedservers",
    "body": [
      "cisco.meraki.networks_switch_dhcp_server_policy_arp_inspection_trusted_servers:",
      "\tmeraki_api_key: ${1:}",
      "\t#ipv4: ${2:}",
      "\t#mac: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#trustedServerId: ${25:}",
      "\t#vlan: ${26:}"
    ]
  },
  "networks_switch_dhcp_server_policy_arp_inspection_trusted_servers_info": {
    "prefix": "networks_switch_dhcp_server_policy_arp_inspection_trusted_servers_info",
    "description": "Information module for networks _switch _dhcpserverpolicy _arpinspection _trustedservers",
    "body": [
      "cisco.meraki.networks_switch_dhcp_server_policy_arp_inspection_trusted_servers_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}"
    ]
  },
  "networks_switch_dhcp_server_policy_arp_inspection_warnings_by_device_info": {
    "prefix": "networks_switch_dhcp_server_policy_arp_inspection_warnings_by_device_info",
    "description": "Information module for networks _switch _dhcpserverpolicy _arpinspection _warnings _bydevice",
    "body": [
      "cisco.meraki.networks_switch_dhcp_server_policy_arp_inspection_warnings_by_device_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}"
    ]
  },
  "networks_switch_dhcp_server_policy_info": {
    "prefix": "networks_switch_dhcp_server_policy_info",
    "description": "Information module for networks _switch _dhcpserverpolicy",
    "body": [
      "cisco.meraki.networks_switch_dhcp_server_policy_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_dhcp_v4_servers_seen_info": {
    "prefix": "networks_switch_dhcp_v4_servers_seen_info",
    "description": "Information module for networks _switch _dhcp v4 _servers _seen",
    "body": [
      "cisco.meraki.networks_switch_dhcp_v4_servers_seen_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}",
      "\t#t0: ${29:}",
      "\t#timespan: ${30:}"
    ]
  },
  "networks_switch_dscp_to_cos_mappings": {
    "prefix": "networks_switch_dscp_to_cos_mappings",
    "description": "Resource module for networks _switch _dscptocosmappings",
    "body": [
      "cisco.meraki.networks_switch_dscp_to_cos_mappings:",
      "\tmeraki_api_key: ${1:}",
      "\t#mappings: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_dscp_to_cos_mappings_info": {
    "prefix": "networks_switch_dscp_to_cos_mappings_info",
    "description": "Information module for networks _switch _dscptocosmappings",
    "body": [
      "cisco.meraki.networks_switch_dscp_to_cos_mappings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_link_aggregations": {
    "prefix": "networks_switch_link_aggregations",
    "description": "Resource module for networks _switch _linkaggregations",
    "body": [
      "cisco.meraki.networks_switch_link_aggregations:",
      "\tmeraki_api_key: ${1:}",
      "\t#linkAggregationId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#switchPorts: ${24:}",
      "\t#switchProfilePorts: ${25:}"
    ]
  },
  "networks_switch_link_aggregations_info": {
    "prefix": "networks_switch_link_aggregations_info",
    "description": "Information module for networks _switch _linkaggregations",
    "body": [
      "cisco.meraki.networks_switch_link_aggregations_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_mtu": {
    "prefix": "networks_switch_mtu",
    "description": "Resource module for networks _switch _mtu",
    "body": [
      "cisco.meraki.networks_switch_mtu:",
      "\tmeraki_api_key: ${1:}",
      "\t#defaultMtuSize: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#overrides: ${24:}"
    ]
  },
  "networks_switch_mtu_info": {
    "prefix": "networks_switch_mtu_info",
    "description": "Information module for networks _switch _mtu",
    "body": [
      "cisco.meraki.networks_switch_mtu_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_port_schedules": {
    "prefix": "networks_switch_port_schedules",
    "description": "Resource module for networks _switch _portschedules",
    "body": [
      "cisco.meraki.networks_switch_port_schedules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#name: ${22:}",
      "\t#networkId: ${23:}",
      "\t#portSchedule: ${24:}",
      "\t#portScheduleId: ${25:}"
    ]
  },
  "networks_switch_port_schedules_info": {
    "prefix": "networks_switch_port_schedules_info",
    "description": "Information module for networks _switch _portschedules",
    "body": [
      "cisco.meraki.networks_switch_port_schedules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_qos_rules_order": {
    "prefix": "networks_switch_qos_rules_order",
    "description": "Resource module for networks _switch _qosrules _order",
    "body": [
      "cisco.meraki.networks_switch_qos_rules_order:",
      "\tmeraki_api_key: ${1:}",
      "\t#dscp: ${2:}",
      "\t#dstPort: ${3:}",
      "\t#dstPortRange: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}",
      "\t#protocol: ${26:}",
      "\t#qosRuleId: ${27:}",
      "\t#srcPort: ${28:}",
      "\t#srcPortRange: ${29:}",
      "\t#vlan: ${30:}"
    ]
  },
  "networks_switch_qos_rules_order_info": {
    "prefix": "networks_switch_qos_rules_order_info",
    "description": "Information module for networks _switch _qosrules _order",
    "body": [
      "cisco.meraki.networks_switch_qos_rules_order_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#qosRuleId: ${24:}"
    ]
  },
  "networks_switch_routing_multicast": {
    "prefix": "networks_switch_routing_multicast",
    "description": "Resource module for networks _switch _routing _multicast",
    "body": [
      "cisco.meraki.networks_switch_routing_multicast:",
      "\tmeraki_api_key: ${1:}",
      "\t#defaultSettings: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#overrides: ${24:}"
    ]
  },
  "networks_switch_routing_multicast_info": {
    "prefix": "networks_switch_routing_multicast_info",
    "description": "Information module for networks _switch _routing _multicast",
    "body": [
      "cisco.meraki.networks_switch_routing_multicast_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_routing_multicast_rendezvous_points": {
    "prefix": "networks_switch_routing_multicast_rendezvous_points",
    "description": "Resource module for networks _switch _routing _multicast _rendezvouspoints",
    "body": [
      "cisco.meraki.networks_switch_routing_multicast_rendezvous_points:",
      "\tmeraki_api_key: ${1:}",
      "\t#interfaceIp: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#multicastGroup: ${23:}",
      "\t#networkId: ${24:}",
      "\t#rendezvousPointId: ${25:}"
    ]
  },
  "networks_switch_routing_multicast_rendezvous_points_info": {
    "prefix": "networks_switch_routing_multicast_rendezvous_points_info",
    "description": "Information module for networks _switch _routing _multicast _rendezvouspoints",
    "body": [
      "cisco.meraki.networks_switch_routing_multicast_rendezvous_points_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#rendezvousPointId: ${24:}"
    ]
  },
  "networks_switch_routing_ospf": {
    "prefix": "networks_switch_routing_ospf",
    "description": "Resource module for networks _switch _routing _ospf",
    "body": [
      "cisco.meraki.networks_switch_routing_ospf:",
      "\tmeraki_api_key: ${1:}",
      "\t#areas: ${2:}",
      "\t#deadTimerInSeconds: ${3:}",
      "\t#enabled: ${4:}",
      "\t#helloTimerInSeconds: ${5:}",
      "\t#md5AuthenticationEnabled: ${6:}",
      "\t#md5AuthenticationKey: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#networkId: ${28:}",
      "\t#v3: ${29:}"
    ]
  },
  "networks_switch_routing_ospf_info": {
    "prefix": "networks_switch_routing_ospf_info",
    "description": "Information module for networks _switch _routing _ospf",
    "body": [
      "cisco.meraki.networks_switch_routing_ospf_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_settings": {
    "prefix": "networks_switch_settings",
    "description": "Resource module for networks _switch _settings",
    "body": [
      "cisco.meraki.networks_switch_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#powerExceptions: ${23:}",
      "\t#useCombinedPower: ${24:}",
      "\t#vlan: ${25:}"
    ]
  },
  "networks_switch_settings_info": {
    "prefix": "networks_switch_settings_info",
    "description": "Information module for networks _switch _settings",
    "body": [
      "cisco.meraki.networks_switch_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_stacks": {
    "prefix": "networks_switch_stacks",
    "description": "Resource module for networks _switch _stacks",
    "body": [
      "cisco.meraki.networks_switch_stacks:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#name: ${22:}",
      "\t#networkId: ${23:}",
      "\t#serials: ${24:}",
      "\t#switchStackId: ${25:}"
    ]
  },
  "networks_switch_stacks_add": {
    "prefix": "networks_switch_stacks_add",
    "description": "Resource module for networks _switch _stacks _add",
    "body": [
      "cisco.meraki.networks_switch_stacks_add:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#serial: ${23:}",
      "\t#switchStackId: ${24:}"
    ]
  },
  "networks_switch_stacks_info": {
    "prefix": "networks_switch_stacks_info",
    "description": "Information module for networks _switch _stacks",
    "body": [
      "cisco.meraki.networks_switch_stacks_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#switchStackId: ${24:}"
    ]
  },
  "networks_switch_stacks_remove": {
    "prefix": "networks_switch_stacks_remove",
    "description": "Resource module for networks _switch _stacks _remove",
    "body": [
      "cisco.meraki.networks_switch_stacks_remove:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#serial: ${23:}",
      "\t#switchStackId: ${24:}"
    ]
  },
  "networks_switch_stacks_routing_interfaces": {
    "prefix": "networks_switch_stacks_routing_interfaces",
    "description": "Resource module for networks _switch _stacks _routing _interfaces",
    "body": [
      "cisco.meraki.networks_switch_stacks_routing_interfaces:",
      "\tmeraki_api_key: ${1:}",
      "\t#defaultGateway: ${2:}",
      "\t#interfaceId: ${3:}",
      "\t#interfaceIp: ${4:}",
      "\t#ipv6: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#multicastRouting: ${26:}",
      "\t#name: ${27:}",
      "\t#networkId: ${28:}",
      "\t#ospfSettings: ${29:}",
      "\t#subnet: ${30:}",
      "\t#switchStackId: ${31:}",
      "\t#vlanId: ${32:}"
    ]
  },
  "networks_switch_stacks_routing_interfaces_dhcp": {
    "prefix": "networks_switch_stacks_routing_interfaces_dhcp",
    "description": "Resource module for networks _switch _stacks _routing _interfaces _dhcp",
    "body": [
      "cisco.meraki.networks_switch_stacks_routing_interfaces_dhcp:",
      "\tmeraki_api_key: ${1:}",
      "\t#bootFileName: ${2:}",
      "\t#bootNextServer: ${3:}",
      "\t#bootOptionsEnabled: ${4:}",
      "\t#dhcpLeaseTime: ${5:}",
      "\t#dhcpMode: ${6:}",
      "\t#dhcpOptions: ${7:}",
      "\t#dhcpRelayServerIps: ${8:}",
      "\t#dnsCustomNameservers: ${9:}",
      "\t#dnsNameserversOption: ${10:}",
      "\t#fixedIpAssignments: ${11:}",
      "\t#interfaceId: ${12:}",
      "\t#meraki_action_batch_retry_wait_time: ${13:60}",
      "\t#meraki_base_url: ${14:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${15:\"\"}",
      "\t#meraki_caller: ${16:\"\"}",
      "\t#meraki_certificate_path: ${17:\"\"}",
      "\t#meraki_inherit_logging_config: ${18:false}",
      "\t#meraki_log_file_prefix: ${19:meraki_api_}",
      "\t#meraki_log_path: ${20:\"\"}",
      "\t#meraki_maximum_retries: ${21:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${22:60}",
      "\t#meraki_output_log: ${23:true}",
      "\t#meraki_print_console: ${24:true}",
      "\t#meraki_requests_proxy: ${25:\"\"}",
      "\t#meraki_retry_4xx_error: ${26:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${27:60}",
      "\t#meraki_simulate: ${28:false}",
      "\t#meraki_single_request_timeout: ${29:60}",
      "\t#meraki_suppress_logging: ${30:false}",
      "\t#meraki_use_iterator_for_get_pages: ${31:false}",
      "\t#meraki_wait_on_rate_limit: ${32:true}",
      "\t#networkId: ${33:}",
      "\t#reservedIpRanges: ${34:}",
      "\t#switchStackId: ${35:}"
    ]
  },
  "networks_switch_stacks_routing_interfaces_dhcp_info": {
    "prefix": "networks_switch_stacks_routing_interfaces_dhcp_info",
    "description": "Information module for networks _switch _stacks _routing _interfaces _dhcp",
    "body": [
      "cisco.meraki.networks_switch_stacks_routing_interfaces_dhcp_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#interfaceId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#switchStackId: ${25:}"
    ]
  },
  "networks_switch_stacks_routing_interfaces_info": {
    "prefix": "networks_switch_stacks_routing_interfaces_info",
    "description": "Information module for networks _switch _stacks _routing _interfaces",
    "body": [
      "cisco.meraki.networks_switch_stacks_routing_interfaces_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#interfaceId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#switchStackId: ${25:}"
    ]
  },
  "networks_switch_stacks_routing_static_routes": {
    "prefix": "networks_switch_stacks_routing_static_routes",
    "description": "Resource module for networks _switch _stacks _routing _staticroutes",
    "body": [
      "cisco.meraki.networks_switch_stacks_routing_static_routes:",
      "\tmeraki_api_key: ${1:}",
      "\t#advertiseViaOspfEnabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#networkId: ${24:}",
      "\t#nextHopIp: ${25:}",
      "\t#preferOverOspfRoutesEnabled: ${26:}",
      "\t#staticRouteId: ${27:}",
      "\t#subnet: ${28:}",
      "\t#switchStackId: ${29:}"
    ]
  },
  "networks_switch_stacks_routing_static_routes_info": {
    "prefix": "networks_switch_stacks_routing_static_routes_info",
    "description": "Information module for networks _switch _stacks _routing _staticroutes",
    "body": [
      "cisco.meraki.networks_switch_stacks_routing_static_routes_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#staticRouteId: ${24:}",
      "\t#switchStackId: ${25:}"
    ]
  },
  "networks_switch_storm_control": {
    "prefix": "networks_switch_storm_control",
    "description": "Resource module for networks _switch _stormcontrol",
    "body": [
      "cisco.meraki.networks_switch_storm_control:",
      "\tmeraki_api_key: ${1:}",
      "\t#broadcastThreshold: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#multicastThreshold: ${23:}",
      "\t#networkId: ${24:}",
      "\t#unknownUnicastThreshold: ${25:}"
    ]
  },
  "networks_switch_storm_control_info": {
    "prefix": "networks_switch_storm_control_info",
    "description": "Information module for networks _switch _stormcontrol",
    "body": [
      "cisco.meraki.networks_switch_storm_control_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_switch_stp": {
    "prefix": "networks_switch_stp",
    "description": "Resource module for networks _switch _stp",
    "body": [
      "cisco.meraki.networks_switch_stp:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#rstpEnabled: ${23:}",
      "\t#stpBridgePriority: ${24:}"
    ]
  },
  "networks_switch_stp_info": {
    "prefix": "networks_switch_stp_info",
    "description": "Information module for networks _switch _stp",
    "body": [
      "cisco.meraki.networks_switch_stp_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_syslog_servers": {
    "prefix": "networks_syslog_servers",
    "description": "Resource module for networks _syslogservers",
    "body": [
      "cisco.meraki.networks_syslog_servers:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#servers: ${23:}"
    ]
  },
  "networks_syslog_servers_info": {
    "prefix": "networks_syslog_servers_info",
    "description": "Information module for networks _syslogservers",
    "body": [
      "cisco.meraki.networks_syslog_servers_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_topology_link_layer_info": {
    "prefix": "networks_topology_link_layer_info",
    "description": "Information module for networks _topology _linklayer",
    "body": [
      "cisco.meraki.networks_topology_link_layer_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_traffic_analysis": {
    "prefix": "networks_traffic_analysis",
    "description": "Resource module for networks _trafficanalysis",
    "body": [
      "cisco.meraki.networks_traffic_analysis:",
      "\tmeraki_api_key: ${1:}",
      "\t#customPieChartItems: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#mode: ${23:}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_traffic_analysis_info": {
    "prefix": "networks_traffic_analysis_info",
    "description": "Information module for networks _trafficanalysis",
    "body": [
      "cisco.meraki.networks_traffic_analysis_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_traffic_shaping_application_categories_info": {
    "prefix": "networks_traffic_shaping_application_categories_info",
    "description": "Information module for networks _trafficshaping _applicationcategories",
    "body": [
      "cisco.meraki.networks_traffic_shaping_application_categories_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_traffic_shaping_dscp_tagging_options_info": {
    "prefix": "networks_traffic_shaping_dscp_tagging_options_info",
    "description": "Information module for networks _trafficshaping _dscptaggingoptions",
    "body": [
      "cisco.meraki.networks_traffic_shaping_dscp_tagging_options_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_unbind": {
    "prefix": "networks_unbind",
    "description": "Resource module for networks _unbind",
    "body": [
      "cisco.meraki.networks_unbind:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#retainConfigs: ${23:}"
    ]
  },
  "networks_webhooks_http_servers": {
    "prefix": "networks_webhooks_http_servers",
    "description": "Resource module for networks _webhooks _httpservers",
    "body": [
      "cisco.meraki.networks_webhooks_http_servers:",
      "\tmeraki_api_key: ${1:}",
      "\t#httpServerId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#networkId: ${24:}",
      "\t#payloadTemplate: ${25:}",
      "\t#sharedSecret: ${26:}",
      "\t#url: ${27:}"
    ]
  },
  "networks_webhooks_http_servers_info": {
    "prefix": "networks_webhooks_http_servers_info",
    "description": "Information module for networks _webhooks _httpservers",
    "body": [
      "cisco.meraki.networks_webhooks_http_servers_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#httpServerId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}"
    ]
  },
  "networks_webhooks_payload_templates": {
    "prefix": "networks_webhooks_payload_templates",
    "description": "Resource module for networks _webhooks _payloadtemplates",
    "body": [
      "cisco.meraki.networks_webhooks_payload_templates:",
      "\tmeraki_api_key: ${1:}",
      "\t#body: ${2:}",
      "\t#bodyFile: ${3:}",
      "\t#headers: ${4:}",
      "\t#headersFile: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#name: ${26:}",
      "\t#networkId: ${27:}",
      "\t#payloadTemplateId: ${28:}"
    ]
  },
  "networks_webhooks_payload_templates_info": {
    "prefix": "networks_webhooks_payload_templates_info",
    "description": "Information module for networks _webhooks _payloadtemplates",
    "body": [
      "cisco.meraki.networks_webhooks_payload_templates_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#payloadTemplateId: ${24:}"
    ]
  },
  "networks_webhooks_webhook_tests_info": {
    "prefix": "networks_webhooks_webhook_tests_info",
    "description": "Information module for networks _webhooks _webhooktests",
    "body": [
      "cisco.meraki.networks_webhooks_webhook_tests_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#webhookTestId: ${24:}"
    ]
  },
  "networks_wireless_alternate_management_interface": {
    "prefix": "networks_wireless_alternate_management_interface",
    "description": "Resource module for networks _wireless _alternatemanagementinterface",
    "body": [
      "cisco.meraki.networks_wireless_alternate_management_interface:",
      "\tmeraki_api_key: ${1:}",
      "\t#accessPoints: ${2:}",
      "\t#enabled: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#protocols: ${25:}",
      "\t#vlanId: ${26:}"
    ]
  },
  "networks_wireless_alternate_management_interface_info": {
    "prefix": "networks_wireless_alternate_management_interface_info",
    "description": "Information module for networks _wireless _alternatemanagementinterface",
    "body": [
      "cisco.meraki.networks_wireless_alternate_management_interface_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_wireless_billing": {
    "prefix": "networks_wireless_billing",
    "description": "Resource module for networks _wireless _billing",
    "body": [
      "cisco.meraki.networks_wireless_billing:",
      "\tmeraki_api_key: ${1:}",
      "\t#currency: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#plans: ${24:}"
    ]
  },
  "networks_wireless_billing_info": {
    "prefix": "networks_wireless_billing_info",
    "description": "Information module for networks _wireless _billing",
    "body": [
      "cisco.meraki.networks_wireless_billing_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_wireless_bluetooth_settings": {
    "prefix": "networks_wireless_bluetooth_settings",
    "description": "Resource module for networks _wireless _bluetooth _settings",
    "body": [
      "cisco.meraki.networks_wireless_bluetooth_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#advertisingEnabled: ${2:}",
      "\t#major: ${3:}",
      "\t#majorMinorAssignmentMode: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#minor: ${25:}",
      "\t#networkId: ${26:}",
      "\t#scanningEnabled: ${27:}",
      "\t#uuid: ${28:}"
    ]
  },
  "networks_wireless_bluetooth_settings_info": {
    "prefix": "networks_wireless_bluetooth_settings_info",
    "description": "Information module for networks _wireless _bluetooth _settings",
    "body": [
      "cisco.meraki.networks_wireless_bluetooth_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_wireless_channel_utilization_history_info": {
    "prefix": "networks_wireless_channel_utilization_history_info",
    "description": "Information module for networks _wireless _channelutilizationhistory",
    "body": [
      "cisco.meraki.networks_wireless_channel_utilization_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#autoResolution: ${3:}",
      "\t#band: ${4:}",
      "\t#clientId: ${5:}",
      "\t#deviceSerial: ${6:}",
      "\t#headers: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#networkId: ${28:}",
      "\t#resolution: ${29:}",
      "\t#t0: ${30:}",
      "\t#t1: ${31:}",
      "\t#timespan: ${32:}"
    ]
  },
  "networks_wireless_client_count_history_info": {
    "prefix": "networks_wireless_client_count_history_info",
    "description": "Information module for networks _wireless _clientcounthistory",
    "body": [
      "cisco.meraki.networks_wireless_client_count_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#autoResolution: ${3:}",
      "\t#band: ${4:}",
      "\t#clientId: ${5:}",
      "\t#deviceSerial: ${6:}",
      "\t#headers: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#networkId: ${28:}",
      "\t#resolution: ${29:}",
      "\t#ssid: ${30:}",
      "\t#t0: ${31:}",
      "\t#t1: ${32:}",
      "\t#timespan: ${33:}"
    ]
  },
  "networks_wireless_clients_connection_stats_info": {
    "prefix": "networks_wireless_clients_connection_stats_info",
    "description": "Information module for networks _wireless _clients _connectionstats",
    "body": [
      "cisco.meraki.networks_wireless_clients_connection_stats_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#band: ${3:}",
      "\t#clientId: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#ssid: ${27:}",
      "\t#t0: ${28:}",
      "\t#t1: ${29:}",
      "\t#timespan: ${30:}",
      "\t#vlan: ${31:}"
    ]
  },
  "networks_wireless_clients_latency_stats_info": {
    "prefix": "networks_wireless_clients_latency_stats_info",
    "description": "Information module for networks _wireless _clients _latencystats",
    "body": [
      "cisco.meraki.networks_wireless_clients_latency_stats_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#band: ${3:}",
      "\t#clientId: ${4:}",
      "\t#fields: ${5:}",
      "\t#headers: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#ssid: ${28:}",
      "\t#t0: ${29:}",
      "\t#t1: ${30:}",
      "\t#timespan: ${31:}",
      "\t#vlan: ${32:}"
    ]
  },
  "networks_wireless_connection_stats_info": {
    "prefix": "networks_wireless_connection_stats_info",
    "description": "Information module for networks _wireless _connectionstats",
    "body": [
      "cisco.meraki.networks_wireless_connection_stats_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#band: ${3:}",
      "\t#headers: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}",
      "\t#ssid: ${26:}",
      "\t#t0: ${27:}",
      "\t#t1: ${28:}",
      "\t#timespan: ${29:}",
      "\t#vlan: ${30:}"
    ]
  },
  "networks_wireless_data_rate_history_info": {
    "prefix": "networks_wireless_data_rate_history_info",
    "description": "Information module for networks _wireless _dataratehistory",
    "body": [
      "cisco.meraki.networks_wireless_data_rate_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#autoResolution: ${3:}",
      "\t#band: ${4:}",
      "\t#clientId: ${5:}",
      "\t#deviceSerial: ${6:}",
      "\t#headers: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#networkId: ${28:}",
      "\t#resolution: ${29:}",
      "\t#ssid: ${30:}",
      "\t#t0: ${31:}",
      "\t#t1: ${32:}",
      "\t#timespan: ${33:}"
    ]
  },
  "networks_wireless_devices_connection_stats_info": {
    "prefix": "networks_wireless_devices_connection_stats_info",
    "description": "Information module for networks _wireless _devices _connectionstats",
    "body": [
      "cisco.meraki.networks_wireless_devices_connection_stats_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#band: ${3:}",
      "\t#headers: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}",
      "\t#ssid: ${26:}",
      "\t#t0: ${27:}",
      "\t#t1: ${28:}",
      "\t#timespan: ${29:}",
      "\t#vlan: ${30:}"
    ]
  },
  "networks_wireless_failed_connections_info": {
    "prefix": "networks_wireless_failed_connections_info",
    "description": "Information module for networks _wireless _failedconnections",
    "body": [
      "cisco.meraki.networks_wireless_failed_connections_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#band: ${3:}",
      "\t#clientId: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#serial: ${27:}",
      "\t#ssid: ${28:}",
      "\t#t0: ${29:}",
      "\t#t1: ${30:}",
      "\t#timespan: ${31:}",
      "\t#vlan: ${32:}"
    ]
  },
  "networks_wireless_latency_history_info": {
    "prefix": "networks_wireless_latency_history_info",
    "description": "Information module for networks _wireless _latencyhistory",
    "body": [
      "cisco.meraki.networks_wireless_latency_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#accessCategory: ${2:}",
      "\t#apTag: ${3:}",
      "\t#autoResolution: ${4:}",
      "\t#band: ${5:}",
      "\t#clientId: ${6:}",
      "\t#deviceSerial: ${7:}",
      "\t#headers: ${8:}",
      "\t#meraki_action_batch_retry_wait_time: ${9:60}",
      "\t#meraki_base_url: ${10:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${11:\"\"}",
      "\t#meraki_caller: ${12:\"\"}",
      "\t#meraki_certificate_path: ${13:\"\"}",
      "\t#meraki_inherit_logging_config: ${14:false}",
      "\t#meraki_log_file_prefix: ${15:meraki_api_}",
      "\t#meraki_log_path: ${16:\"\"}",
      "\t#meraki_maximum_retries: ${17:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${18:60}",
      "\t#meraki_output_log: ${19:true}",
      "\t#meraki_print_console: ${20:true}",
      "\t#meraki_requests_proxy: ${21:\"\"}",
      "\t#meraki_retry_4xx_error: ${22:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${23:60}",
      "\t#meraki_simulate: ${24:false}",
      "\t#meraki_single_request_timeout: ${25:60}",
      "\t#meraki_suppress_logging: ${26:false}",
      "\t#meraki_use_iterator_for_get_pages: ${27:false}",
      "\t#meraki_wait_on_rate_limit: ${28:true}",
      "\t#networkId: ${29:}",
      "\t#resolution: ${30:}",
      "\t#ssid: ${31:}",
      "\t#t0: ${32:}",
      "\t#t1: ${33:}",
      "\t#timespan: ${34:}"
    ]
  },
  "networks_wireless_latency_stats_info": {
    "prefix": "networks_wireless_latency_stats_info",
    "description": "Information module for networks _wireless _latencystats",
    "body": [
      "cisco.meraki.networks_wireless_latency_stats_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#band: ${3:}",
      "\t#fields: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#ssid: ${27:}",
      "\t#t0: ${28:}",
      "\t#t1: ${29:}",
      "\t#timespan: ${30:}",
      "\t#vlan: ${31:}"
    ]
  },
  "networks_wireless_mesh_statuses_info": {
    "prefix": "networks_wireless_mesh_statuses_info",
    "description": "Information module for networks _wireless _meshstatuses",
    "body": [
      "cisco.meraki.networks_wireless_mesh_statuses_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}"
    ]
  },
  "networks_wireless_rf_profiles": {
    "prefix": "networks_wireless_rf_profiles",
    "description": "Resource module for networks _wireless _rfprofiles",
    "body": [
      "cisco.meraki.networks_wireless_rf_profiles:",
      "\tmeraki_api_key: ${1:}",
      "\t#apBandSettings: ${2:}",
      "\t#bandSelectionType: ${3:}",
      "\t#clientBalancingEnabled: ${4:}",
      "\t#fiveGhzSettings: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#minBitrateType: ${26:}",
      "\t#name: ${27:}",
      "\t#networkId: ${28:}",
      "\t#perSsidSettings: ${29:}",
      "\t#rfProfileId: ${30:}",
      "\t#sixGhzSettings: ${31:}",
      "\t#transmission: ${32:}",
      "\t#twoFourGhzSettings: ${33:}"
    ]
  },
  "networks_wireless_rf_profiles_info": {
    "prefix": "networks_wireless_rf_profiles_info",
    "description": "Information module for networks _wireless _rfprofiles",
    "body": [
      "cisco.meraki.networks_wireless_rf_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#includeTemplateProfiles: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#rfProfileId: ${25:}"
    ]
  },
  "networks_wireless_settings": {
    "prefix": "networks_wireless_settings",
    "description": "Resource module for networks _wireless _settings",
    "body": [
      "cisco.meraki.networks_wireless_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#ipv6BridgeEnabled: ${2:}",
      "\t#ledLightsOn: ${3:}",
      "\t#locationAnalyticsEnabled: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#meshingEnabled: ${25:}",
      "\t#networkId: ${26:}",
      "\t#upgradeStrategy: ${27:}"
    ]
  },
  "networks_wireless_settings_info": {
    "prefix": "networks_wireless_settings_info",
    "description": "Information module for networks _wireless _settings",
    "body": [
      "cisco.meraki.networks_wireless_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}"
    ]
  },
  "networks_wireless_signal_quality_history_info": {
    "prefix": "networks_wireless_signal_quality_history_info",
    "description": "Information module for networks _wireless _signalqualityhistory",
    "body": [
      "cisco.meraki.networks_wireless_signal_quality_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#autoResolution: ${3:}",
      "\t#band: ${4:}",
      "\t#clientId: ${5:}",
      "\t#deviceSerial: ${6:}",
      "\t#headers: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#networkId: ${28:}",
      "\t#resolution: ${29:}",
      "\t#ssid: ${30:}",
      "\t#t0: ${31:}",
      "\t#t1: ${32:}",
      "\t#timespan: ${33:}"
    ]
  },
  "networks_wireless_ssids": {
    "prefix": "networks_wireless_ssids",
    "description": "Resource module for networks _wireless _ssids",
    "body": [
      "cisco.meraki.networks_wireless_ssids:",
      "\tmeraki_api_key: ${1:}",
      "\t#activeDirectory: ${2:}",
      "\t#adultContentFilteringEnabled: ${3:}",
      "\t#apTagsAndVlanIds: ${4:}",
      "\t#authMode: ${5:}",
      "\t#availabilityTags: ${6:}",
      "\t#availableOnAllAps: ${7:}",
      "\t#bandSelection: ${8:}",
      "\t#concentratorNetworkId: ${9:}",
      "\t#defaultVlanId: ${10:}",
      "\t#disassociateClientsOnVpnFailover: ${11:}",
      "\t#dnsRewrite: ${12:}",
      "\t#dot11r: ${13:}",
      "\t#dot11w: ${14:}",
      "\t#enabled: ${15:}",
      "\t#encryptionMode: ${16:}",
      "\t#enterpriseAdminAccess: ${17:}",
      "\t#gre: ${18:}",
      "\t#ipAssignmentMode: ${19:}",
      "\t#lanIsolationEnabled: ${20:}",
      "\t#ldap: ${21:}",
      "\t#localRadius: ${22:}",
      "\t#mandatoryDhcpEnabled: ${23:}",
      "\t#meraki_action_batch_retry_wait_time: ${24:60}",
      "\t#meraki_base_url: ${25:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${26:\"\"}",
      "\t#meraki_caller: ${27:\"\"}",
      "\t#meraki_certificate_path: ${28:\"\"}",
      "\t#meraki_inherit_logging_config: ${29:false}",
      "\t#meraki_log_file_prefix: ${30:meraki_api_}",
      "\t#meraki_log_path: ${31:\"\"}",
      "\t#meraki_maximum_retries: ${32:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${33:60}",
      "\t#meraki_output_log: ${34:true}",
      "\t#meraki_print_console: ${35:true}",
      "\t#meraki_requests_proxy: ${36:\"\"}",
      "\t#meraki_retry_4xx_error: ${37:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${38:60}",
      "\t#meraki_simulate: ${39:false}",
      "\t#meraki_single_request_timeout: ${40:60}",
      "\t#meraki_suppress_logging: ${41:false}",
      "\t#meraki_use_iterator_for_get_pages: ${42:false}",
      "\t#meraki_wait_on_rate_limit: ${43:true}",
      "\t#minBitrate: ${44:}",
      "\t#name: ${45:}",
      "\t#networkId: ${46:}",
      "\t#number: ${47:}",
      "\t#oauth: ${48:}",
      "\t#perClientBandwidthLimitDown: ${49:}",
      "\t#perClientBandwidthLimitUp: ${50:}",
      "\t#perSsidBandwidthLimitDown: ${51:}",
      "\t#perSsidBandwidthLimitUp: ${52:}",
      "\t#psk: ${53:}",
      "\t#radiusAccountingEnabled: ${54:}",
      "\t#radiusAccountingInterimInterval: ${55:}",
      "\t#radiusAccountingServers: ${56:}",
      "\t#radiusAttributeForGroupPolicies: ${57:}",
      "\t#radiusAuthenticationNasId: ${58:}",
      "\t#radiusCalledStationId: ${59:}",
      "\t#radiusCoaEnabled: ${60:}",
      "\t#radiusFailoverPolicy: ${61:}",
      "\t#radiusFallbackEnabled: ${62:}",
      "\t#radiusGuestVlanEnabled: ${63:}",
      "\t#radiusGuestVlanId: ${64:}",
      "\t#radiusLoadBalancingPolicy: ${65:}",
      "\t#radiusOverride: ${66:}",
      "\t#radiusProxyEnabled: ${67:}",
      "\t#radiusServerAttemptsLimit: ${68:}",
      "\t#radiusServerTimeout: ${69:}",
      "\t#radiusServers: ${70:}",
      "\t#radiusTestingEnabled: ${71:}",
      "\t#secondaryConcentratorNetworkId: ${72:}",
      "\t#speedBurst: ${73:}",
      "\t#splashGuestSponsorDomains: ${74:}",
      "\t#splashPage: ${75:}",
      "\t#useVlanTagging: ${76:}",
      "\t#visible: ${77:}",
      "\t#vlanId: ${78:}",
      "\t#walledGardenEnabled: ${79:}",
      "\t#walledGardenRanges: ${80:}",
      "\t#wpaEncryptionMode: ${81:}"
    ]
  },
  "networks_wireless_ssids_bonjour_forwarding": {
    "prefix": "networks_wireless_ssids_bonjour_forwarding",
    "description": "Resource module for networks _wireless _ssids _bonjourforwarding",
    "body": [
      "cisco.meraki.networks_wireless_ssids_bonjour_forwarding:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}",
      "\t#rules: ${25:}"
    ]
  },
  "networks_wireless_ssids_bonjour_forwarding_info": {
    "prefix": "networks_wireless_ssids_bonjour_forwarding_info",
    "description": "Information module for networks _wireless _ssids _bonjourforwarding",
    "body": [
      "cisco.meraki.networks_wireless_ssids_bonjour_forwarding_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_device_type_group_policies": {
    "prefix": "networks_wireless_ssids_device_type_group_policies",
    "description": "Resource module for networks _wireless _ssids _devicetypegrouppolicies",
    "body": [
      "cisco.meraki.networks_wireless_ssids_device_type_group_policies:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceTypePolicies: ${2:}",
      "\t#enabled: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#number: ${25:}"
    ]
  },
  "networks_wireless_ssids_device_type_group_policies_info": {
    "prefix": "networks_wireless_ssids_device_type_group_policies_info",
    "description": "Information module for networks _wireless _ssids _devicetypegrouppolicies",
    "body": [
      "cisco.meraki.networks_wireless_ssids_device_type_group_policies_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_eap_override": {
    "prefix": "networks_wireless_ssids_eap_override",
    "description": "Resource module for networks _wireless _ssids _eapoverride",
    "body": [
      "cisco.meraki.networks_wireless_ssids_eap_override:",
      "\tmeraki_api_key: ${1:}",
      "\t#eapolKey: ${2:}",
      "\t#identity: ${3:}",
      "\t#maxRetries: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#networkId: ${25:}",
      "\t#number: ${26:}",
      "\t#timeout: ${27:}"
    ]
  },
  "networks_wireless_ssids_eap_override_info": {
    "prefix": "networks_wireless_ssids_eap_override_info",
    "description": "Information module for networks _wireless _ssids _eapoverride",
    "body": [
      "cisco.meraki.networks_wireless_ssids_eap_override_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_firewall_l3_firewall_rules": {
    "prefix": "networks_wireless_ssids_firewall_l3_firewall_rules",
    "description": "Resource module for networks _wireless _ssids _firewall l3firewallrules",
    "body": [
      "cisco.meraki.networks_wireless_ssids_firewall_l3_firewall_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#allowLanAccess: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}",
      "\t#rules: ${25:}"
    ]
  },
  "networks_wireless_ssids_firewall_l3_firewall_rules_info": {
    "prefix": "networks_wireless_ssids_firewall_l3_firewall_rules_info",
    "description": "Information module for networks _wireless _ssids _firewall l3firewallrules",
    "body": [
      "cisco.meraki.networks_wireless_ssids_firewall_l3_firewall_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_firewall_l7_firewall_rules": {
    "prefix": "networks_wireless_ssids_firewall_l7_firewall_rules",
    "description": "Resource module for networks _wireless _ssids _firewall l7firewallrules",
    "body": [
      "cisco.meraki.networks_wireless_ssids_firewall_l7_firewall_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networkId: ${22:}",
      "\t#number: ${23:}",
      "\t#rules: ${24:}"
    ]
  },
  "networks_wireless_ssids_firewall_l7_firewall_rules_info": {
    "prefix": "networks_wireless_ssids_firewall_l7_firewall_rules_info",
    "description": "Information module for networks _wireless _ssids _firewall l7firewallrules",
    "body": [
      "cisco.meraki.networks_wireless_ssids_firewall_l7_firewall_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_hotspot20": {
    "prefix": "networks_wireless_ssids_hotspot20",
    "description": "Resource module for networks _wireless _ssids _hotspot20",
    "body": [
      "cisco.meraki.networks_wireless_ssids_hotspot20:",
      "\tmeraki_api_key: ${1:}",
      "\t#domains: ${2:}",
      "\t#enabled: ${3:}",
      "\t#mccMncs: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#naiRealms: ${25:}",
      "\t#networkAccessType: ${26:}",
      "\t#networkId: ${27:}",
      "\t#number: ${28:}",
      "\t#operator: ${29:}",
      "\t#roamConsortOis: ${30:}",
      "\t#venue: ${31:}"
    ]
  },
  "networks_wireless_ssids_hotspot20_info": {
    "prefix": "networks_wireless_ssids_hotspot20_info",
    "description": "Information module for networks _wireless _ssids _hotspot20",
    "body": [
      "cisco.meraki.networks_wireless_ssids_hotspot20_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_identity_psks": {
    "prefix": "networks_wireless_ssids_identity_psks",
    "description": "Resource module for networks _wireless _ssids _identitypsks",
    "body": [
      "cisco.meraki.networks_wireless_ssids_identity_psks:",
      "\tmeraki_api_key: ${1:}",
      "\t#expiresAt: ${2:}",
      "\t#groupPolicyId: ${3:}",
      "\t#identityPskId: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#name: ${25:}",
      "\t#networkId: ${26:}",
      "\t#number: ${27:}",
      "\t#passphrase: ${28:}"
    ]
  },
  "networks_wireless_ssids_identity_psks_info": {
    "prefix": "networks_wireless_ssids_identity_psks_info",
    "description": "Information module for networks _wireless _ssids _identitypsks",
    "body": [
      "cisco.meraki.networks_wireless_ssids_identity_psks_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#identityPskId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#number: ${25:}"
    ]
  },
  "networks_wireless_ssids_info": {
    "prefix": "networks_wireless_ssids_info",
    "description": "Information module for networks _wireless _ssids",
    "body": [
      "cisco.meraki.networks_wireless_ssids_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_schedules": {
    "prefix": "networks_wireless_ssids_schedules",
    "description": "Resource module for networks _wireless _ssids _schedules",
    "body": [
      "cisco.meraki.networks_wireless_ssids_schedules:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}",
      "\t#ranges: ${25:}",
      "\t#rangesInSeconds: ${26:}"
    ]
  },
  "networks_wireless_ssids_schedules_info": {
    "prefix": "networks_wireless_ssids_schedules_info",
    "description": "Information module for networks _wireless _ssids _schedules",
    "body": [
      "cisco.meraki.networks_wireless_ssids_schedules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_splash_settings": {
    "prefix": "networks_wireless_ssids_splash_settings",
    "description": "Resource module for networks _wireless _ssids _splash _settings",
    "body": [
      "cisco.meraki.networks_wireless_ssids_splash_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#allowSimultaneousLogins: ${2:}",
      "\t#billing: ${3:}",
      "\t#blockAllTrafficBeforeSignOn: ${4:}",
      "\t#controllerDisconnectionBehavior: ${5:}",
      "\t#guestSponsorship: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkId: ${27:}",
      "\t#number: ${28:}",
      "\t#redirectUrl: ${29:}",
      "\t#sentryEnrollment: ${30:}",
      "\t#splashImage: ${31:}",
      "\t#splashLogo: ${32:}",
      "\t#splashPrepaidFront: ${33:}",
      "\t#splashTimeout: ${34:}",
      "\t#splashUrl: ${35:}",
      "\t#useRedirectUrl: ${36:}",
      "\t#useSplashUrl: ${37:}",
      "\t#welcomeMessage: ${38:}"
    ]
  },
  "networks_wireless_ssids_splash_settings_info": {
    "prefix": "networks_wireless_ssids_splash_settings_info",
    "description": "Information module for networks _wireless _ssids _splash _settings",
    "body": [
      "cisco.meraki.networks_wireless_ssids_splash_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_traffic_shaping_rules": {
    "prefix": "networks_wireless_ssids_traffic_shaping_rules",
    "description": "Resource module for networks _wireless _ssids _trafficshaping _rules",
    "body": [
      "cisco.meraki.networks_wireless_ssids_traffic_shaping_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#defaultRulesEnabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}",
      "\t#rules: ${25:}",
      "\t#trafficShapingEnabled: ${26:}"
    ]
  },
  "networks_wireless_ssids_traffic_shaping_rules_info": {
    "prefix": "networks_wireless_ssids_traffic_shaping_rules_info",
    "description": "Information module for networks _wireless _ssids _trafficshaping _rules",
    "body": [
      "cisco.meraki.networks_wireless_ssids_traffic_shaping_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_ssids_vpn": {
    "prefix": "networks_wireless_ssids_vpn",
    "description": "Resource module for networks _wireless _ssids _vpn",
    "body": [
      "cisco.meraki.networks_wireless_ssids_vpn:",
      "\tmeraki_api_key: ${1:}",
      "\t#concentrator: ${2:}",
      "\t#failover: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#networkId: ${24:}",
      "\t#number: ${25:}",
      "\t#splitTunnel: ${26:}"
    ]
  },
  "networks_wireless_ssids_vpn_info": {
    "prefix": "networks_wireless_ssids_vpn_info",
    "description": "Information module for networks _wireless _ssids _vpn",
    "body": [
      "cisco.meraki.networks_wireless_ssids_vpn_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#number: ${24:}"
    ]
  },
  "networks_wireless_usage_history_info": {
    "prefix": "networks_wireless_usage_history_info",
    "description": "Information module for networks _wireless _usagehistory",
    "body": [
      "cisco.meraki.networks_wireless_usage_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#apTag: ${2:}",
      "\t#autoResolution: ${3:}",
      "\t#band: ${4:}",
      "\t#clientId: ${5:}",
      "\t#deviceSerial: ${6:}",
      "\t#headers: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#networkId: ${28:}",
      "\t#resolution: ${29:}",
      "\t#ssid: ${30:}",
      "\t#t0: ${31:}",
      "\t#t1: ${32:}",
      "\t#timespan: ${33:}"
    ]
  },
  "organizations": {
    "prefix": "organizations",
    "description": "Resource module for organizations",
    "body": [
      "cisco.meraki.organizations:",
      "\tmeraki_api_key: ${1:}",
      "\t#api: ${2:}",
      "\t#management: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#name: ${24:}",
      "\t#organizationId: ${25:}"
    ]
  },
  "organizations_action_batches": {
    "prefix": "organizations_action_batches",
    "description": "Resource module for organizations _actionbatches",
    "body": [
      "cisco.meraki.organizations_action_batches:",
      "\tmeraki_api_key: ${1:}",
      "\t#actionBatchId: ${2:}",
      "\t#actions: ${3:}",
      "\t#confirmed: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#organizationId: ${25:}",
      "\t#synchronous: ${26:}"
    ]
  },
  "organizations_action_batches_info": {
    "prefix": "organizations_action_batches_info",
    "description": "Information module for organizations _actionbatches",
    "body": [
      "cisco.meraki.organizations_action_batches_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#actionBatchId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}",
      "\t#status: ${25:}"
    ]
  },
  "organizations_adaptive_policy_acls": {
    "prefix": "organizations_adaptive_policy_acls",
    "description": "Resource module for organizations _adaptivepolicy _acls",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_acls:",
      "\tmeraki_api_key: ${1:}",
      "\t#aclId: ${2:}",
      "\t#description: ${3:}",
      "\t#ipVersion: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#name: ${25:}",
      "\t#organizationId: ${26:}",
      "\t#rules: ${27:}"
    ]
  },
  "organizations_adaptive_policy_acls_info": {
    "prefix": "organizations_adaptive_policy_acls_info",
    "description": "Information module for organizations _adaptivepolicy _acls",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_acls_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#aclId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_adaptive_policy_groups": {
    "prefix": "organizations_adaptive_policy_groups",
    "description": "Resource module for organizations _adaptivepolicy _groups",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_groups:",
      "\tmeraki_api_key: ${1:}",
      "\t#description: ${2:}",
      "\t#id: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#name: ${24:}",
      "\t#organizationId: ${25:}",
      "\t#policyObjects: ${26:}",
      "\t#sgt: ${27:}"
    ]
  },
  "organizations_adaptive_policy_groups_info": {
    "prefix": "organizations_adaptive_policy_groups_info",
    "description": "Information module for organizations _adaptivepolicy _groups",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_groups_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#id: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_adaptive_policy_overview_info": {
    "prefix": "organizations_adaptive_policy_overview_info",
    "description": "Information module for organizations _adaptivepolicy _overview",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_overview_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_adaptive_policy_policies": {
    "prefix": "organizations_adaptive_policy_policies",
    "description": "Resource module for organizations _adaptivepolicy _policies",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_policies:",
      "\tmeraki_api_key: ${1:}",
      "\t#acls: ${2:}",
      "\t#destinationGroup: ${3:}",
      "\t#id: ${4:}",
      "\t#lastEntryRule: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#organizationId: ${26:}",
      "\t#sourceGroup: ${27:}"
    ]
  },
  "organizations_adaptive_policy_policies_info": {
    "prefix": "organizations_adaptive_policy_policies_info",
    "description": "Information module for organizations _adaptivepolicy _policies",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_policies_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#id: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_adaptive_policy_settings": {
    "prefix": "organizations_adaptive_policy_settings",
    "description": "Resource module for organizations _adaptivepolicy _settings",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_settings:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabledNetworks: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_adaptive_policy_settings_info": {
    "prefix": "organizations_adaptive_policy_settings_info",
    "description": "Information module for organizations _adaptivepolicy _settings",
    "body": [
      "cisco.meraki.organizations_adaptive_policy_settings_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_admins": {
    "prefix": "organizations_admins",
    "description": "Resource module for organizations _admins",
    "body": [
      "cisco.meraki.organizations_admins:",
      "\tmeraki_api_key: ${1:}",
      "\t#adminId: ${2:}",
      "\t#authenticationMethod: ${3:}",
      "\t#email: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#name: ${25:}",
      "\t#networks: ${26:}",
      "\t#orgAccess: ${27:}",
      "\t#organizationId: ${28:}",
      "\t#tags: ${29:}"
    ]
  },
  "organizations_admins_info": {
    "prefix": "organizations_admins_info",
    "description": "Information module for organizations _admins",
    "body": [
      "cisco.meraki.organizations_admins_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_alerts_profiles": {
    "prefix": "organizations_alerts_profiles",
    "description": "Resource module for organizations _alerts _profiles",
    "body": [
      "cisco.meraki.organizations_alerts_profiles:",
      "\tmeraki_api_key: ${1:}",
      "\t#alertCondition: ${2:}",
      "\t#alertConfigId: ${3:}",
      "\t#description: ${4:}",
      "\t#enabled: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkTags: ${26:}",
      "\t#organizationId: ${27:}",
      "\t#recipients: ${28:}",
      "\t#type: ${29:}"
    ]
  },
  "organizations_api_requests_info": {
    "prefix": "organizations_api_requests_info",
    "description": "Information module for organizations _apirequests",
    "body": [
      "cisco.meraki.organizations_api_requests_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#adminId: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#method: ${27:}",
      "\t#operationIds: ${28:}",
      "\t#organizationId: ${29:}",
      "\t#path: ${30:}",
      "\t#perPage: ${31:}",
      "\t#responseCode: ${32:}",
      "\t#sourceIp: ${33:}",
      "\t#startingAfter: ${34:}",
      "\t#t0: ${35:}",
      "\t#t1: ${36:}",
      "\t#timespan: ${37:}",
      "\t#userAgent: ${38:}",
      "\t#version: ${39:}"
    ]
  },
  "organizations_api_requests_overview_info": {
    "prefix": "organizations_api_requests_overview_info",
    "description": "Information module for organizations _apirequests _overview",
    "body": [
      "cisco.meraki.organizations_api_requests_overview_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_api_requests_overview_response_codes_by_interval_info": {
    "prefix": "organizations_api_requests_overview_response_codes_by_interval_info",
    "description": "Information module for organizations _apirequests _overview _responsecodes _byinterval",
    "body": [
      "cisco.meraki.organizations_api_requests_overview_response_codes_by_interval_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#adminIds: ${2:}",
      "\t#headers: ${3:}",
      "\t#interval: ${4:}",
      "\t#meraki_action_batch_retry_wait_time: ${5:60}",
      "\t#meraki_base_url: ${6:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${7:\"\"}",
      "\t#meraki_caller: ${8:\"\"}",
      "\t#meraki_certificate_path: ${9:\"\"}",
      "\t#meraki_inherit_logging_config: ${10:false}",
      "\t#meraki_log_file_prefix: ${11:meraki_api_}",
      "\t#meraki_log_path: ${12:\"\"}",
      "\t#meraki_maximum_retries: ${13:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${14:60}",
      "\t#meraki_output_log: ${15:true}",
      "\t#meraki_print_console: ${16:true}",
      "\t#meraki_requests_proxy: ${17:\"\"}",
      "\t#meraki_retry_4xx_error: ${18:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${19:60}",
      "\t#meraki_simulate: ${20:false}",
      "\t#meraki_single_request_timeout: ${21:60}",
      "\t#meraki_suppress_logging: ${22:false}",
      "\t#meraki_use_iterator_for_get_pages: ${23:false}",
      "\t#meraki_wait_on_rate_limit: ${24:true}",
      "\t#operationIds: ${25:}",
      "\t#organizationId: ${26:}",
      "\t#sourceIps: ${27:}",
      "\t#t0: ${28:}",
      "\t#t1: ${29:}",
      "\t#timespan: ${30:}",
      "\t#userAgent: ${31:}",
      "\t#version: ${32:}"
    ]
  },
  "organizations_appliance_security_intrusion": {
    "prefix": "organizations_appliance_security_intrusion",
    "description": "Resource module for organizations _appliance _security _intrusion",
    "body": [
      "cisco.meraki.organizations_appliance_security_intrusion:",
      "\tmeraki_api_key: ${1:}",
      "\t#allowedRules: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_appliance_security_intrusion_info": {
    "prefix": "organizations_appliance_security_intrusion_info",
    "description": "Information module for organizations _appliance _security _intrusion",
    "body": [
      "cisco.meraki.organizations_appliance_security_intrusion_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_appliance_vpn_third_party_vpnpeers": {
    "prefix": "organizations_appliance_vpn_third_party_vpnpeers",
    "description": "Resource module for organizations _appliance _vpn _thirdpartyvpnpeers",
    "body": [
      "cisco.meraki.organizations_appliance_vpn_third_party_vpnpeers:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#organizationId: ${22:}",
      "\t#peers: ${23:}"
    ]
  },
  "organizations_appliance_vpn_third_party_vpnpeers_info": {
    "prefix": "organizations_appliance_vpn_third_party_vpnpeers_info",
    "description": "Information module for organizations _appliance _vpn _thirdpartyvpnpeers",
    "body": [
      "cisco.meraki.organizations_appliance_vpn_third_party_vpnpeers_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_appliance_vpn_vpn_firewall_rules": {
    "prefix": "organizations_appliance_vpn_vpn_firewall_rules",
    "description": "Resource module for organizations _appliance _vpn _vpnfirewallrules",
    "body": [
      "cisco.meraki.organizations_appliance_vpn_vpn_firewall_rules:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#organizationId: ${22:}",
      "\t#rules: ${23:}",
      "\t#syslogDefaultRule: ${24:}"
    ]
  },
  "organizations_appliance_vpn_vpn_firewall_rules_info": {
    "prefix": "organizations_appliance_vpn_vpn_firewall_rules_info",
    "description": "Information module for organizations _appliance _vpn _vpnfirewallrules",
    "body": [
      "cisco.meraki.organizations_appliance_vpn_vpn_firewall_rules_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_branding_policies": {
    "prefix": "organizations_branding_policies",
    "description": "Resource module for organizations _brandingpolicies",
    "body": [
      "cisco.meraki.organizations_branding_policies:",
      "\tmeraki_api_key: ${1:}",
      "\t#adminSettings: ${2:}",
      "\t#brandingPolicyId: ${3:}",
      "\t#customLogo: ${4:}",
      "\t#enabled: ${5:}",
      "\t#helpSettings: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#name: ${27:}",
      "\t#organizationId: ${28:}"
    ]
  },
  "organizations_branding_policies_info": {
    "prefix": "organizations_branding_policies_info",
    "description": "Information module for organizations _brandingpolicies",
    "body": [
      "cisco.meraki.organizations_branding_policies_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#brandingPolicyId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_branding_policies_priorities": {
    "prefix": "organizations_branding_policies_priorities",
    "description": "Resource module for organizations _brandingpolicies _priorities",
    "body": [
      "cisco.meraki.organizations_branding_policies_priorities:",
      "\tmeraki_api_key: ${1:}",
      "\t#brandingPolicyIds: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_branding_policies_priorities_info": {
    "prefix": "organizations_branding_policies_priorities_info",
    "description": "Information module for organizations _brandingpolicies _priorities",
    "body": [
      "cisco.meraki.organizations_branding_policies_priorities_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_camera_custom_analytics_artifacts": {
    "prefix": "organizations_camera_custom_analytics_artifacts",
    "description": "Resource module for organizations _camera _customanalytics _artifacts",
    "body": [
      "cisco.meraki.organizations_camera_custom_analytics_artifacts:",
      "\tmeraki_api_key: ${1:}",
      "\t#artifactId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_camera_custom_analytics_artifacts_info": {
    "prefix": "organizations_camera_custom_analytics_artifacts_info",
    "description": "Information module for organizations _camera _customanalytics _artifacts",
    "body": [
      "cisco.meraki.organizations_camera_custom_analytics_artifacts_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#artifactId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_cellular_gateway_uplink_statuses_info": {
    "prefix": "organizations_cellular_gateway_uplink_statuses_info",
    "description": "Information module for organizations _cellulargateway _uplink _statuses",
    "body": [
      "cisco.meraki.organizations_cellular_gateway_uplink_statuses_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#iccids: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkIds: ${27:}",
      "\t#organizationId: ${28:}",
      "\t#perPage: ${29:}",
      "\t#serials: ${30:}",
      "\t#startingAfter: ${31:}"
    ]
  },
  "organizations_claim": {
    "prefix": "organizations_claim",
    "description": "Resource module for organizations _claim",
    "body": [
      "cisco.meraki.organizations_claim:",
      "\tmeraki_api_key: ${1:}",
      "\t#licenses: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#orders: ${23:}",
      "\t#organizationId: ${24:}",
      "\t#serials: ${25:}"
    ]
  },
  "organizations_clients_bandwidth_usage_history_info": {
    "prefix": "organizations_clients_bandwidth_usage_history_info",
    "description": "Information module for organizations _clients _bandwidthusagehistory",
    "body": [
      "cisco.meraki.organizations_clients_bandwidth_usage_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_clients_overview_info": {
    "prefix": "organizations_clients_overview_info",
    "description": "Information module for organizations _clients _overview",
    "body": [
      "cisco.meraki.organizations_clients_overview_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_clients_search_info": {
    "prefix": "organizations_clients_search_info",
    "description": "Information module for organizations _clients _search",
    "body": [
      "cisco.meraki.organizations_clients_search_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#mac: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#organizationId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "organizations_clone": {
    "prefix": "organizations_clone",
    "description": "Resource module for organizations _clone",
    "body": [
      "cisco.meraki.organizations_clone:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#name: ${22:}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_config_templates": {
    "prefix": "organizations_config_templates",
    "description": "Resource module for organizations _configtemplates",
    "body": [
      "cisco.meraki.organizations_config_templates:",
      "\tmeraki_api_key: ${1:}",
      "\t#configTemplateId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#organizationId: ${24:}",
      "\t#timeZone: ${25:}"
    ]
  },
  "organizations_config_templates_info": {
    "prefix": "organizations_config_templates_info",
    "description": "Information module for organizations _configtemplates",
    "body": [
      "cisco.meraki.organizations_config_templates_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#configTemplateId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_config_templates_switch_profiles_info": {
    "prefix": "organizations_config_templates_switch_profiles_info",
    "description": "Information module for organizations _configtemplates _switch _profiles",
    "body": [
      "cisco.meraki.organizations_config_templates_switch_profiles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#configTemplateId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_config_templates_switch_profiles_ports": {
    "prefix": "organizations_config_templates_switch_profiles_ports",
    "description": "Resource module for organizations _configtemplates _switch _profiles _ports",
    "body": [
      "cisco.meraki.organizations_config_templates_switch_profiles_ports:",
      "\tmeraki_api_key: ${1:}",
      "\t#accessPolicyNumber: ${2:}",
      "\t#accessPolicyType: ${3:}",
      "\t#allowedVlans: ${4:}",
      "\t#configTemplateId: ${5:}",
      "\t#daiTrusted: ${6:}",
      "\t#enabled: ${7:}",
      "\t#flexibleStackingEnabled: ${8:}",
      "\t#isolationEnabled: ${9:}",
      "\t#linkNegotiation: ${10:}",
      "\t#macAllowList: ${11:}",
      "\t#meraki_action_batch_retry_wait_time: ${12:60}",
      "\t#meraki_base_url: ${13:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${14:\"\"}",
      "\t#meraki_caller: ${15:\"\"}",
      "\t#meraki_certificate_path: ${16:\"\"}",
      "\t#meraki_inherit_logging_config: ${17:false}",
      "\t#meraki_log_file_prefix: ${18:meraki_api_}",
      "\t#meraki_log_path: ${19:\"\"}",
      "\t#meraki_maximum_retries: ${20:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${21:60}",
      "\t#meraki_output_log: ${22:true}",
      "\t#meraki_print_console: ${23:true}",
      "\t#meraki_requests_proxy: ${24:\"\"}",
      "\t#meraki_retry_4xx_error: ${25:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${26:60}",
      "\t#meraki_simulate: ${27:false}",
      "\t#meraki_single_request_timeout: ${28:60}",
      "\t#meraki_suppress_logging: ${29:false}",
      "\t#meraki_use_iterator_for_get_pages: ${30:false}",
      "\t#meraki_wait_on_rate_limit: ${31:true}",
      "\t#name: ${32:}",
      "\t#organizationId: ${33:}",
      "\t#poeEnabled: ${34:}",
      "\t#portId: ${35:}",
      "\t#portScheduleId: ${36:}",
      "\t#profile: ${37:}",
      "\t#profileId: ${38:}",
      "\t#rstpEnabled: ${39:}",
      "\t#stickyMacAllowList: ${40:}",
      "\t#stickyMacAllowListLimit: ${41:}",
      "\t#stormControlEnabled: ${42:}",
      "\t#stpGuard: ${43:}",
      "\t#tags: ${44:}",
      "\t#type: ${45:}",
      "\t#udld: ${46:}",
      "\t#vlan: ${47:}",
      "\t#voiceVlan: ${48:}"
    ]
  },
  "organizations_config_templates_switch_profiles_ports_info": {
    "prefix": "organizations_config_templates_switch_profiles_ports_info",
    "description": "Information module for organizations _configtemplates _switch _profiles _ports",
    "body": [
      "cisco.meraki.organizations_config_templates_switch_profiles_ports_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#configTemplateId: ${2:}",
      "\t#headers: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}",
      "\t#portId: ${25:}",
      "\t#profileId: ${26:}"
    ]
  },
  "organizations_devices_availabilities_info": {
    "prefix": "organizations_devices_availabilities_info",
    "description": "Information module for organizations _devices _availabilities",
    "body": [
      "cisco.meraki.organizations_devices_availabilities_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkIds: ${26:}",
      "\t#organizationId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#productTypes: ${29:}",
      "\t#serials: ${30:}",
      "\t#startingAfter: ${31:}",
      "\t#tags: ${32:}",
      "\t#tagsFilterType: ${33:}"
    ]
  },
  "organizations_devices_info": {
    "prefix": "organizations_devices_info",
    "description": "Information module for organizations _devices",
    "body": [
      "cisco.meraki.organizations_devices_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#configurationUpdatedAfter: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#mac: ${7:}",
      "\t#macs: ${8:}",
      "\t#meraki_action_batch_retry_wait_time: ${9:60}",
      "\t#meraki_base_url: ${10:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${11:\"\"}",
      "\t#meraki_caller: ${12:\"\"}",
      "\t#meraki_certificate_path: ${13:\"\"}",
      "\t#meraki_inherit_logging_config: ${14:false}",
      "\t#meraki_log_file_prefix: ${15:meraki_api_}",
      "\t#meraki_log_path: ${16:\"\"}",
      "\t#meraki_maximum_retries: ${17:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${18:60}",
      "\t#meraki_output_log: ${19:true}",
      "\t#meraki_print_console: ${20:true}",
      "\t#meraki_requests_proxy: ${21:\"\"}",
      "\t#meraki_retry_4xx_error: ${22:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${23:60}",
      "\t#meraki_simulate: ${24:false}",
      "\t#meraki_single_request_timeout: ${25:60}",
      "\t#meraki_suppress_logging: ${26:false}",
      "\t#meraki_use_iterator_for_get_pages: ${27:false}",
      "\t#meraki_wait_on_rate_limit: ${28:true}",
      "\t#model: ${29:}",
      "\t#models: ${30:}",
      "\t#name: ${31:}",
      "\t#networkIds: ${32:}",
      "\t#organizationId: ${33:}",
      "\t#perPage: ${34:}",
      "\t#productTypes: ${35:}",
      "\t#sensorAlertProfileIds: ${36:}",
      "\t#sensorMetrics: ${37:}",
      "\t#serial: ${38:}",
      "\t#serials: ${39:}",
      "\t#startingAfter: ${40:}",
      "\t#tags: ${41:}",
      "\t#tagsFilterType: ${42:}"
    ]
  },
  "organizations_devices_power_modules_statuses_by_device_info": {
    "prefix": "organizations_devices_power_modules_statuses_by_device_info",
    "description": "Information module for organizations _devices _powermodules _statuses _bydevice",
    "body": [
      "cisco.meraki.organizations_devices_power_modules_statuses_by_device_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkIds: ${26:}",
      "\t#organizationId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#productTypes: ${29:}",
      "\t#serials: ${30:}",
      "\t#startingAfter: ${31:}",
      "\t#tags: ${32:}",
      "\t#tagsFilterType: ${33:}"
    ]
  },
  "organizations_devices_provisioning_statuses_info": {
    "prefix": "organizations_devices_provisioning_statuses_info",
    "description": "Information module for organizations _devices _provisioning _statuses",
    "body": [
      "cisco.meraki.organizations_devices_provisioning_statuses_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkIds: ${26:}",
      "\t#organizationId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#productTypes: ${29:}",
      "\t#serials: ${30:}",
      "\t#startingAfter: ${31:}",
      "\t#status: ${32:}",
      "\t#tags: ${33:}",
      "\t#tagsFilterType: ${34:}"
    ]
  },
  "organizations_devices_statuses_info": {
    "prefix": "organizations_devices_statuses_info",
    "description": "Information module for organizations _devices _statuses",
    "body": [
      "cisco.meraki.organizations_devices_statuses_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#models: ${26:}",
      "\t#networkIds: ${27:}",
      "\t#organizationId: ${28:}",
      "\t#perPage: ${29:}",
      "\t#productTypes: ${30:}",
      "\t#serials: ${31:}",
      "\t#startingAfter: ${32:}",
      "\t#statuses: ${33:}",
      "\t#tags: ${34:}",
      "\t#tagsFilterType: ${35:}"
    ]
  },
  "organizations_devices_statuses_overview_info": {
    "prefix": "organizations_devices_statuses_overview_info",
    "description": "Information module for organizations _devices _statuses _overview",
    "body": [
      "cisco.meraki.organizations_devices_statuses_overview_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkIds: ${23:}",
      "\t#organizationId: ${24:}",
      "\t#productTypes: ${25:}"
    ]
  },
  "organizations_devices_uplinks_addresses_by_device_info": {
    "prefix": "organizations_devices_uplinks_addresses_by_device_info",
    "description": "Information module for organizations _devices _uplinks _addresses _bydevice",
    "body": [
      "cisco.meraki.organizations_devices_uplinks_addresses_by_device_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkIds: ${26:}",
      "\t#organizationId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#productTypes: ${29:}",
      "\t#serials: ${30:}",
      "\t#startingAfter: ${31:}",
      "\t#tags: ${32:}",
      "\t#tagsFilterType: ${33:}"
    ]
  },
  "organizations_devices_uplinks_loss_and_latency_info": {
    "prefix": "organizations_devices_uplinks_loss_and_latency_info",
    "description": "Information module for organizations _devices _uplinkslossandlatency",
    "body": [
      "cisco.meraki.organizations_devices_uplinks_loss_and_latency_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#ip: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}",
      "\t#t0: ${25:}",
      "\t#t1: ${26:}",
      "\t#timespan: ${27:}",
      "\t#uplink: ${28:}"
    ]
  },
  "organizations_early_access_features_info": {
    "prefix": "organizations_early_access_features_info",
    "description": "Information module for organizations _earlyaccess _features",
    "body": [
      "cisco.meraki.organizations_early_access_features_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_early_access_features_opt_ins": {
    "prefix": "organizations_early_access_features_opt_ins",
    "description": "Resource module for organizations _earlyaccess _features _optins",
    "body": [
      "cisco.meraki.organizations_early_access_features_opt_ins:",
      "\tmeraki_api_key: ${1:}",
      "\t#limitScopeToNetworks: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#optInId: ${23:}",
      "\t#organizationId: ${24:}",
      "\t#shortName: ${25:}"
    ]
  },
  "organizations_early_access_features_opt_ins_info": {
    "prefix": "organizations_early_access_features_opt_ins_info",
    "description": "Information module for organizations _earlyaccess _features _optins",
    "body": [
      "cisco.meraki.organizations_early_access_features_opt_ins_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#optInId: ${23:}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_firmware_upgrades_by_device_info": {
    "prefix": "organizations_firmware_upgrades_by_device_info",
    "description": "Information module for organizations _firmware _upgrades _bydevice",
    "body": [
      "cisco.meraki.organizations_firmware_upgrades_by_device_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#firmwareUpgradeBatchIds: ${5:}",
      "\t#firmwareUpgradeIds: ${6:}",
      "\t#headers: ${7:}",
      "\t#macs: ${8:}",
      "\t#meraki_action_batch_retry_wait_time: ${9:60}",
      "\t#meraki_base_url: ${10:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${11:\"\"}",
      "\t#meraki_caller: ${12:\"\"}",
      "\t#meraki_certificate_path: ${13:\"\"}",
      "\t#meraki_inherit_logging_config: ${14:false}",
      "\t#meraki_log_file_prefix: ${15:meraki_api_}",
      "\t#meraki_log_path: ${16:\"\"}",
      "\t#meraki_maximum_retries: ${17:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${18:60}",
      "\t#meraki_output_log: ${19:true}",
      "\t#meraki_print_console: ${20:true}",
      "\t#meraki_requests_proxy: ${21:\"\"}",
      "\t#meraki_retry_4xx_error: ${22:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${23:60}",
      "\t#meraki_simulate: ${24:false}",
      "\t#meraki_single_request_timeout: ${25:60}",
      "\t#meraki_suppress_logging: ${26:false}",
      "\t#meraki_use_iterator_for_get_pages: ${27:false}",
      "\t#meraki_wait_on_rate_limit: ${28:true}",
      "\t#networkIds: ${29:}",
      "\t#organizationId: ${30:}",
      "\t#perPage: ${31:}",
      "\t#serials: ${32:}",
      "\t#startingAfter: ${33:}"
    ]
  },
  "organizations_firmware_upgrades_info": {
    "prefix": "organizations_firmware_upgrades_info",
    "description": "Information module for organizations _firmware _upgrades",
    "body": [
      "cisco.meraki.organizations_firmware_upgrades_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#productType: ${24:}",
      "\t#status: ${25:}"
    ]
  },
  "organizations_info": {
    "prefix": "organizations_info",
    "description": "Information module for organizations",
    "body": [
      "cisco.meraki.organizations_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_insight_applications_info": {
    "prefix": "organizations_insight_applications_info",
    "description": "Information module for organizations _insight _applications",
    "body": [
      "cisco.meraki.organizations_insight_applications_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_insight_monitored_media_servers": {
    "prefix": "organizations_insight_monitored_media_servers",
    "description": "Resource module for organizations _insight _monitoredmediaservers",
    "body": [
      "cisco.meraki.organizations_insight_monitored_media_servers:",
      "\tmeraki_api_key: ${1:}",
      "\t#address: ${2:}",
      "\t#bestEffortMonitoringEnabled: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#monitoredMediaServerId: ${24:}",
      "\t#name: ${25:}",
      "\t#organizationId: ${26:}"
    ]
  },
  "organizations_insight_monitored_media_servers_info": {
    "prefix": "organizations_insight_monitored_media_servers_info",
    "description": "Information module for organizations _insight _monitoredmediaservers",
    "body": [
      "cisco.meraki.organizations_insight_monitored_media_servers_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#monitoredMediaServerId: ${23:}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_inventory_claim": {
    "prefix": "organizations_inventory_claim",
    "description": "Resource module for organizations _inventory _claim",
    "body": [
      "cisco.meraki.organizations_inventory_claim:",
      "\tmeraki_api_key: ${1:}",
      "\t#licenses: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#orders: ${23:}",
      "\t#organizationId: ${24:}",
      "\t#serials: ${25:}"
    ]
  },
  "organizations_inventory_devices_info": {
    "prefix": "organizations_inventory_devices_info",
    "description": "Information module for organizations _inventory _devices",
    "body": [
      "cisco.meraki.organizations_inventory_devices_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#macs: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#models: ${27:}",
      "\t#networkIds: ${28:}",
      "\t#orderNumbers: ${29:}",
      "\t#organizationId: ${30:}",
      "\t#perPage: ${31:}",
      "\t#productTypes: ${32:}",
      "\t#search: ${33:}",
      "\t#serial: ${34:}",
      "\t#serials: ${35:}",
      "\t#startingAfter: ${36:}",
      "\t#tags: ${37:}",
      "\t#tagsFilterType: ${38:}",
      "\t#usedState: ${39:}"
    ]
  },
  "organizations_inventory_onboarding_cloud_monitoring_export_events": {
    "prefix": "organizations_inventory_onboarding_cloud_monitoring_export_events",
    "description": "Resource module for organizations _inventory _onboarding _cloudmonitoring _exportevents",
    "body": [
      "cisco.meraki.organizations_inventory_onboarding_cloud_monitoring_export_events:",
      "\tmeraki_api_key: ${1:}",
      "\t#logEvent: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#request: ${24:}",
      "\t#targetOS: ${25:}",
      "\t#timestamp: ${26:}"
    ]
  },
  "organizations_inventory_onboarding_cloud_monitoring_imports": {
    "prefix": "organizations_inventory_onboarding_cloud_monitoring_imports",
    "description": "Resource module for organizations _inventory _onboarding _cloudmonitoring _imports",
    "body": [
      "cisco.meraki.organizations_inventory_onboarding_cloud_monitoring_imports:",
      "\tmeraki_api_key: ${1:}",
      "\t#devices: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_inventory_onboarding_cloud_monitoring_imports_info": {
    "prefix": "organizations_inventory_onboarding_cloud_monitoring_imports_info",
    "description": "Information module for organizations _inventory _onboarding _cloudmonitoring _imports",
    "body": [
      "cisco.meraki.organizations_inventory_onboarding_cloud_monitoring_imports_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#importIds: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_inventory_onboarding_cloud_monitoring_networks_info": {
    "prefix": "organizations_inventory_onboarding_cloud_monitoring_networks_info",
    "description": "Information module for organizations _inventory _onboarding _cloudmonitoring _networks",
    "body": [
      "cisco.meraki.organizations_inventory_onboarding_cloud_monitoring_networks_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#deviceType: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#organizationId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "organizations_inventory_onboarding_cloud_monitoring_prepare": {
    "prefix": "organizations_inventory_onboarding_cloud_monitoring_prepare",
    "description": "Resource module for organizations _inventory _onboarding _cloudmonitoring _prepare",
    "body": [
      "cisco.meraki.organizations_inventory_onboarding_cloud_monitoring_prepare:",
      "\tmeraki_api_key: ${1:}",
      "\t#devices: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_inventory_release": {
    "prefix": "organizations_inventory_release",
    "description": "Resource module for organizations _inventory _release",
    "body": [
      "cisco.meraki.organizations_inventory_release:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#organizationId: ${22:}",
      "\t#serials: ${23:}"
    ]
  },
  "organizations_licenses": {
    "prefix": "organizations_licenses",
    "description": "Resource module for organizations _licenses",
    "body": [
      "cisco.meraki.organizations_licenses:",
      "\tmeraki_api_key: ${1:}",
      "\t#deviceSerial: ${2:}",
      "\t#licenseId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_licenses_assign_seats": {
    "prefix": "organizations_licenses_assign_seats",
    "description": "Resource module for organizations _licenses _assignseats",
    "body": [
      "cisco.meraki.organizations_licenses_assign_seats:",
      "\tmeraki_api_key: ${1:}",
      "\t#licenseId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#networkId: ${23:}",
      "\t#organizationId: ${24:}",
      "\t#seatCount: ${25:}"
    ]
  },
  "organizations_licenses_info": {
    "prefix": "organizations_licenses_info",
    "description": "Information module for organizations _licenses",
    "body": [
      "cisco.meraki.organizations_licenses_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#licenseId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_licenses_move": {
    "prefix": "organizations_licenses_move",
    "description": "Resource module for organizations _licenses _move",
    "body": [
      "cisco.meraki.organizations_licenses_move:",
      "\tmeraki_api_key: ${1:}",
      "\t#destOrganizationId: ${2:}",
      "\t#licenseIds: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_licenses_move_seats": {
    "prefix": "organizations_licenses_move_seats",
    "description": "Resource module for organizations _licenses _moveseats",
    "body": [
      "cisco.meraki.organizations_licenses_move_seats:",
      "\tmeraki_api_key: ${1:}",
      "\t#destOrganizationId: ${2:}",
      "\t#licenseId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}",
      "\t#seatCount: ${25:}"
    ]
  },
  "organizations_licenses_overview_info": {
    "prefix": "organizations_licenses_overview_info",
    "description": "Information module for organizations _licenses _overview",
    "body": [
      "cisco.meraki.organizations_licenses_overview_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_licenses_renew_seats": {
    "prefix": "organizations_licenses_renew_seats",
    "description": "Resource module for organizations _licenses _renewseats",
    "body": [
      "cisco.meraki.organizations_licenses_renew_seats:",
      "\tmeraki_api_key: ${1:}",
      "\t#licenseIdToRenew: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#unusedLicenseId: ${24:}"
    ]
  },
  "organizations_licensing_coterm_licenses_info": {
    "prefix": "organizations_licensing_coterm_licenses_info",
    "description": "Information module for organizations _licensing _coterm _licenses",
    "body": [
      "cisco.meraki.organizations_licensing_coterm_licenses_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#expired: ${5:}",
      "\t#headers: ${6:}",
      "\t#invalidated: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#organizationId: ${28:}",
      "\t#perPage: ${29:}",
      "\t#startingAfter: ${30:}"
    ]
  },
  "organizations_licensing_coterm_licenses_move": {
    "prefix": "organizations_licensing_coterm_licenses_move",
    "description": "Resource module for organizations _licensing _coterm _licenses _move",
    "body": [
      "cisco.meraki.organizations_licensing_coterm_licenses_move:",
      "\tmeraki_api_key: ${1:}",
      "\t#destination: ${2:}",
      "\t#licenses: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_login_security": {
    "prefix": "organizations_login_security",
    "description": "Resource module for organizations _loginsecurity",
    "body": [
      "cisco.meraki.organizations_login_security:",
      "\tmeraki_api_key: ${1:}",
      "\t#accountLockoutAttempts: ${2:}",
      "\t#apiAuthentication: ${3:}",
      "\t#enforceAccountLockout: ${4:}",
      "\t#enforceDifferentPasswords: ${5:}",
      "\t#enforceIdleTimeout: ${6:}",
      "\t#enforceLoginIpRanges: ${7:}",
      "\t#enforcePasswordExpiration: ${8:}",
      "\t#enforceStrongPasswords: ${9:}",
      "\t#enforceTwoFactorAuth: ${10:}",
      "\t#idleTimeoutMinutes: ${11:}",
      "\t#loginIpRanges: ${12:}",
      "\t#meraki_action_batch_retry_wait_time: ${13:60}",
      "\t#meraki_base_url: ${14:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${15:\"\"}",
      "\t#meraki_caller: ${16:\"\"}",
      "\t#meraki_certificate_path: ${17:\"\"}",
      "\t#meraki_inherit_logging_config: ${18:false}",
      "\t#meraki_log_file_prefix: ${19:meraki_api_}",
      "\t#meraki_log_path: ${20:\"\"}",
      "\t#meraki_maximum_retries: ${21:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${22:60}",
      "\t#meraki_output_log: ${23:true}",
      "\t#meraki_print_console: ${24:true}",
      "\t#meraki_requests_proxy: ${25:\"\"}",
      "\t#meraki_retry_4xx_error: ${26:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${27:60}",
      "\t#meraki_simulate: ${28:false}",
      "\t#meraki_single_request_timeout: ${29:60}",
      "\t#meraki_suppress_logging: ${30:false}",
      "\t#meraki_use_iterator_for_get_pages: ${31:false}",
      "\t#meraki_wait_on_rate_limit: ${32:true}",
      "\t#numDifferentPasswords: ${33:}",
      "\t#organizationId: ${34:}",
      "\t#passwordExpirationDays: ${35:}"
    ]
  },
  "organizations_login_security_info": {
    "prefix": "organizations_login_security_info",
    "description": "Information module for organizations _loginsecurity",
    "body": [
      "cisco.meraki.organizations_login_security_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_networks_combine": {
    "prefix": "organizations_networks_combine",
    "description": "Resource module for organizations _networks _combine",
    "body": [
      "cisco.meraki.organizations_networks_combine:",
      "\tmeraki_api_key: ${1:}",
      "\t#enrollmentString: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#networkIds: ${24:}",
      "\t#organizationId: ${25:}"
    ]
  },
  "organizations_openapi_spec_info": {
    "prefix": "organizations_openapi_spec_info",
    "description": "Information module for organizations _openapispec",
    "body": [
      "cisco.meraki.organizations_openapi_spec_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_policy_objects": {
    "prefix": "organizations_policy_objects",
    "description": "Resource module for organizations _policyobjects",
    "body": [
      "cisco.meraki.organizations_policy_objects:",
      "\tmeraki_api_key: ${1:}",
      "\t#category: ${2:}",
      "\t#cidr: ${3:}",
      "\t#fqdn: ${4:}",
      "\t#groupIds: ${5:}",
      "\t#ip: ${6:}",
      "\t#mask: ${7:}",
      "\t#meraki_action_batch_retry_wait_time: ${8:60}",
      "\t#meraki_base_url: ${9:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${10:\"\"}",
      "\t#meraki_caller: ${11:\"\"}",
      "\t#meraki_certificate_path: ${12:\"\"}",
      "\t#meraki_inherit_logging_config: ${13:false}",
      "\t#meraki_log_file_prefix: ${14:meraki_api_}",
      "\t#meraki_log_path: ${15:\"\"}",
      "\t#meraki_maximum_retries: ${16:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${17:60}",
      "\t#meraki_output_log: ${18:true}",
      "\t#meraki_print_console: ${19:true}",
      "\t#meraki_requests_proxy: ${20:\"\"}",
      "\t#meraki_retry_4xx_error: ${21:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${22:60}",
      "\t#meraki_simulate: ${23:false}",
      "\t#meraki_single_request_timeout: ${24:60}",
      "\t#meraki_suppress_logging: ${25:false}",
      "\t#meraki_use_iterator_for_get_pages: ${26:false}",
      "\t#meraki_wait_on_rate_limit: ${27:true}",
      "\t#name: ${28:}",
      "\t#organizationId: ${29:}",
      "\t#policyObjectId: ${30:}",
      "\t#type: ${31:}"
    ]
  },
  "organizations_policy_objects_groups": {
    "prefix": "organizations_policy_objects_groups",
    "description": "Resource module for organizations _policyobjects _groups",
    "body": [
      "cisco.meraki.organizations_policy_objects_groups:",
      "\tmeraki_api_key: ${1:}",
      "\t#category: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#name: ${23:}",
      "\t#objectIds: ${24:}",
      "\t#organizationId: ${25:}",
      "\t#policyObjectGroupId: ${26:}"
    ]
  },
  "organizations_policy_objects_groups_info": {
    "prefix": "organizations_policy_objects_groups_info",
    "description": "Information module for organizations _policyobjects _groups",
    "body": [
      "cisco.meraki.organizations_policy_objects_groups_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#organizationId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#policyObjectGroupId: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "organizations_policy_objects_info": {
    "prefix": "organizations_policy_objects_info",
    "description": "Information module for organizations _policyobjects",
    "body": [
      "cisco.meraki.organizations_policy_objects_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#organizationId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#policyObjectId: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "organizations_saml": {
    "prefix": "organizations_saml",
    "description": "Resource module for organizations _saml",
    "body": [
      "cisco.meraki.organizations_saml:",
      "\tmeraki_api_key: ${1:}",
      "\t#enabled: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_saml_idps": {
    "prefix": "organizations_saml_idps",
    "description": "Resource module for organizations _saml _idps",
    "body": [
      "cisco.meraki.organizations_saml_idps:",
      "\tmeraki_api_key: ${1:}",
      "\t#idpId: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#sloLogoutUrl: ${24:}",
      "\t#x509certSha1Fingerprint: ${25:}"
    ]
  },
  "organizations_saml_idps_info": {
    "prefix": "organizations_saml_idps_info",
    "description": "Information module for organizations _saml _idps",
    "body": [
      "cisco.meraki.organizations_saml_idps_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#idpId: ${3:}",
      "\t#meraki_action_batch_retry_wait_time: ${4:60}",
      "\t#meraki_base_url: ${5:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${6:\"\"}",
      "\t#meraki_caller: ${7:\"\"}",
      "\t#meraki_certificate_path: ${8:\"\"}",
      "\t#meraki_inherit_logging_config: ${9:false}",
      "\t#meraki_log_file_prefix: ${10:meraki_api_}",
      "\t#meraki_log_path: ${11:\"\"}",
      "\t#meraki_maximum_retries: ${12:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${13:60}",
      "\t#meraki_output_log: ${14:true}",
      "\t#meraki_print_console: ${15:true}",
      "\t#meraki_requests_proxy: ${16:\"\"}",
      "\t#meraki_retry_4xx_error: ${17:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${18:60}",
      "\t#meraki_simulate: ${19:false}",
      "\t#meraki_single_request_timeout: ${20:60}",
      "\t#meraki_suppress_logging: ${21:false}",
      "\t#meraki_use_iterator_for_get_pages: ${22:false}",
      "\t#meraki_wait_on_rate_limit: ${23:true}",
      "\t#organizationId: ${24:}"
    ]
  },
  "organizations_saml_info": {
    "prefix": "organizations_saml_info",
    "description": "Information module for organizations _saml",
    "body": [
      "cisco.meraki.organizations_saml_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_saml_roles": {
    "prefix": "organizations_saml_roles",
    "description": "Resource module for organizations _samlroles",
    "body": [
      "cisco.meraki.organizations_saml_roles:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#networks: ${22:}",
      "\t#orgAccess: ${23:}",
      "\t#organizationId: ${24:}",
      "\t#role: ${25:}",
      "\t#samlRoleId: ${26:}",
      "\t#tags: ${27:}"
    ]
  },
  "organizations_saml_roles_info": {
    "prefix": "organizations_saml_roles_info",
    "description": "Information module for organizations _samlroles",
    "body": [
      "cisco.meraki.organizations_saml_roles_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#samlRoleId: ${24:}"
    ]
  },
  "organizations_sensor_readings_history_info": {
    "prefix": "organizations_sensor_readings_history_info",
    "description": "Information module for organizations _sensor _readings _history",
    "body": [
      "cisco.meraki.organizations_sensor_readings_history_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#metrics: ${26:}",
      "\t#networkIds: ${27:}",
      "\t#organizationId: ${28:}",
      "\t#perPage: ${29:}",
      "\t#serials: ${30:}",
      "\t#startingAfter: ${31:}",
      "\t#t0: ${32:}",
      "\t#t1: ${33:}",
      "\t#timespan: ${34:}"
    ]
  },
  "organizations_sensor_readings_latest_info": {
    "prefix": "organizations_sensor_readings_latest_info",
    "description": "Information module for organizations _sensor _readings _latest",
    "body": [
      "cisco.meraki.organizations_sensor_readings_latest_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#metrics: ${26:}",
      "\t#networkIds: ${27:}",
      "\t#organizationId: ${28:}",
      "\t#perPage: ${29:}",
      "\t#serials: ${30:}",
      "\t#startingAfter: ${31:}"
    ]
  },
  "organizations_sm_apns_cert_info": {
    "prefix": "organizations_sm_apns_cert_info",
    "description": "Information module for organizations _sm _apnscert",
    "body": [
      "cisco.meraki.organizations_sm_apns_cert_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_sm_vpp_accounts_info": {
    "prefix": "organizations_sm_vpp_accounts_info",
    "description": "Information module for organizations _sm _vppaccounts",
    "body": [
      "cisco.meraki.organizations_sm_vpp_accounts_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#vppAccountId: ${24:}"
    ]
  },
  "organizations_snmp": {
    "prefix": "organizations_snmp",
    "description": "Resource module for organizations _snmp",
    "body": [
      "cisco.meraki.organizations_snmp:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#organizationId: ${22:}",
      "\t#peerIps: ${23:}",
      "\t#v2cEnabled: ${24:}",
      "\t#v3AuthMode: ${25:}",
      "\t#v3AuthPass: ${26:}",
      "\t#v3Enabled: ${27:}",
      "\t#v3PrivMode: ${28:}",
      "\t#v3PrivPass: ${29:}"
    ]
  },
  "organizations_snmp_info": {
    "prefix": "organizations_snmp_info",
    "description": "Information module for organizations _snmp",
    "body": [
      "cisco.meraki.organizations_snmp_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}"
    ]
  },
  "organizations_summary_top_appliances_by_utilization_info": {
    "prefix": "organizations_summary_top_appliances_by_utilization_info",
    "description": "Information module for organizations _summary _top _appliances _byutilization",
    "body": [
      "cisco.meraki.organizations_summary_top_appliances_by_utilization_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_summary_top_clients_by_usage_info": {
    "prefix": "organizations_summary_top_clients_by_usage_info",
    "description": "Information module for organizations _summary _top _clients _byusage",
    "body": [
      "cisco.meraki.organizations_summary_top_clients_by_usage_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_summary_top_clients_manufacturers_by_usage_info": {
    "prefix": "organizations_summary_top_clients_manufacturers_by_usage_info",
    "description": "Information module for organizations _summary _top _clients _manufacturers _byusage",
    "body": [
      "cisco.meraki.organizations_summary_top_clients_manufacturers_by_usage_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_summary_top_devices_by_usage_info": {
    "prefix": "organizations_summary_top_devices_by_usage_info",
    "description": "Information module for organizations _summary _top _devices _byusage",
    "body": [
      "cisco.meraki.organizations_summary_top_devices_by_usage_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_summary_top_devices_models_by_usage_info": {
    "prefix": "organizations_summary_top_devices_models_by_usage_info",
    "description": "Information module for organizations _summary _top _devices _models _byusage",
    "body": [
      "cisco.meraki.organizations_summary_top_devices_models_by_usage_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_summary_top_ssids_by_usage_info": {
    "prefix": "organizations_summary_top_ssids_by_usage_info",
    "description": "Information module for organizations _summary _top _ssids _byusage",
    "body": [
      "cisco.meraki.organizations_summary_top_ssids_by_usage_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_summary_top_switches_by_energy_usage_info": {
    "prefix": "organizations_summary_top_switches_by_energy_usage_info",
    "description": "Information module for organizations _summary _top _switches _byenergyusage",
    "body": [
      "cisco.meraki.organizations_summary_top_switches_by_energy_usage_info:",
      "\tmeraki_api_key: ${1:}",
      "\t#headers: ${2:}",
      "\t#meraki_action_batch_retry_wait_time: ${3:60}",
      "\t#meraki_base_url: ${4:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${5:\"\"}",
      "\t#meraki_caller: ${6:\"\"}",
      "\t#meraki_certificate_path: ${7:\"\"}",
      "\t#meraki_inherit_logging_config: ${8:false}",
      "\t#meraki_log_file_prefix: ${9:meraki_api_}",
      "\t#meraki_log_path: ${10:\"\"}",
      "\t#meraki_maximum_retries: ${11:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${12:60}",
      "\t#meraki_output_log: ${13:true}",
      "\t#meraki_print_console: ${14:true}",
      "\t#meraki_requests_proxy: ${15:\"\"}",
      "\t#meraki_retry_4xx_error: ${16:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${17:60}",
      "\t#meraki_simulate: ${18:false}",
      "\t#meraki_single_request_timeout: ${19:60}",
      "\t#meraki_suppress_logging: ${20:false}",
      "\t#meraki_use_iterator_for_get_pages: ${21:false}",
      "\t#meraki_wait_on_rate_limit: ${22:true}",
      "\t#organizationId: ${23:}",
      "\t#t0: ${24:}",
      "\t#t1: ${25:}",
      "\t#timespan: ${26:}"
    ]
  },
  "organizations_switch_devices_clone": {
    "prefix": "organizations_switch_devices_clone",
    "description": "Resource module for organizations _switch _devices _clone",
    "body": [
      "cisco.meraki.organizations_switch_devices_clone:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#organizationId: ${22:}",
      "\t#sourceSerial: ${23:}",
      "\t#targetSerials: ${24:}"
    ]
  },
  "organizations_switch_ports_by_switch_info": {
    "prefix": "organizations_switch_ports_by_switch_info",
    "description": "Information module for organizations _switch _ports _byswitch",
    "body": [
      "cisco.meraki.organizations_switch_ports_by_switch_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#configurationUpdatedAfter: ${3:}",
      "\t#direction: ${4:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${5:}",
      "\t#headers: ${6:}",
      "\t#mac: ${7:}",
      "\t#macs: ${8:}",
      "\t#meraki_action_batch_retry_wait_time: ${9:60}",
      "\t#meraki_base_url: ${10:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${11:\"\"}",
      "\t#meraki_caller: ${12:\"\"}",
      "\t#meraki_certificate_path: ${13:\"\"}",
      "\t#meraki_inherit_logging_config: ${14:false}",
      "\t#meraki_log_file_prefix: ${15:meraki_api_}",
      "\t#meraki_log_path: ${16:\"\"}",
      "\t#meraki_maximum_retries: ${17:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${18:60}",
      "\t#meraki_output_log: ${19:true}",
      "\t#meraki_print_console: ${20:true}",
      "\t#meraki_requests_proxy: ${21:\"\"}",
      "\t#meraki_retry_4xx_error: ${22:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${23:60}",
      "\t#meraki_simulate: ${24:false}",
      "\t#meraki_single_request_timeout: ${25:60}",
      "\t#meraki_suppress_logging: ${26:false}",
      "\t#meraki_use_iterator_for_get_pages: ${27:false}",
      "\t#meraki_wait_on_rate_limit: ${28:true}",
      "\t#name: ${29:}",
      "\t#networkIds: ${30:}",
      "\t#organizationId: ${31:}",
      "\t#perPage: ${32:}",
      "\t#portProfileIds: ${33:}",
      "\t#serial: ${34:}",
      "\t#serials: ${35:}",
      "\t#startingAfter: ${36:}"
    ]
  },
  "organizations_uplinks_statuses_info": {
    "prefix": "organizations_uplinks_statuses_info",
    "description": "Information module for organizations _uplinks _statuses",
    "body": [
      "cisco.meraki.organizations_uplinks_statuses_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#iccids: ${6:}",
      "\t#meraki_action_batch_retry_wait_time: ${7:60}",
      "\t#meraki_base_url: ${8:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${9:\"\"}",
      "\t#meraki_caller: ${10:\"\"}",
      "\t#meraki_certificate_path: ${11:\"\"}",
      "\t#meraki_inherit_logging_config: ${12:false}",
      "\t#meraki_log_file_prefix: ${13:meraki_api_}",
      "\t#meraki_log_path: ${14:\"\"}",
      "\t#meraki_maximum_retries: ${15:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${16:60}",
      "\t#meraki_output_log: ${17:true}",
      "\t#meraki_print_console: ${18:true}",
      "\t#meraki_requests_proxy: ${19:\"\"}",
      "\t#meraki_retry_4xx_error: ${20:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${21:60}",
      "\t#meraki_simulate: ${22:false}",
      "\t#meraki_single_request_timeout: ${23:60}",
      "\t#meraki_suppress_logging: ${24:false}",
      "\t#meraki_use_iterator_for_get_pages: ${25:false}",
      "\t#meraki_wait_on_rate_limit: ${26:true}",
      "\t#networkIds: ${27:}",
      "\t#organizationId: ${28:}",
      "\t#perPage: ${29:}",
      "\t#serials: ${30:}",
      "\t#startingAfter: ${31:}"
    ]
  },
  "organizations_users": {
    "prefix": "organizations_users",
    "description": "Resource module for organizations _users",
    "body": [
      "cisco.meraki.organizations_users:",
      "\tmeraki_api_key: ${1:}",
      "\t#meraki_action_batch_retry_wait_time: ${2:60}",
      "\t#meraki_base_url: ${3:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${4:\"\"}",
      "\t#meraki_caller: ${5:\"\"}",
      "\t#meraki_certificate_path: ${6:\"\"}",
      "\t#meraki_inherit_logging_config: ${7:false}",
      "\t#meraki_log_file_prefix: ${8:meraki_api_}",
      "\t#meraki_log_path: ${9:\"\"}",
      "\t#meraki_maximum_retries: ${10:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${11:60}",
      "\t#meraki_output_log: ${12:true}",
      "\t#meraki_print_console: ${13:true}",
      "\t#meraki_requests_proxy: ${14:\"\"}",
      "\t#meraki_retry_4xx_error: ${15:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${16:60}",
      "\t#meraki_simulate: ${17:false}",
      "\t#meraki_single_request_timeout: ${18:60}",
      "\t#meraki_suppress_logging: ${19:false}",
      "\t#meraki_use_iterator_for_get_pages: ${20:false}",
      "\t#meraki_wait_on_rate_limit: ${21:true}",
      "\t#organizationId: ${22:}",
      "\t#userId: ${23:}"
    ]
  },
  "organizations_webhooks_logs_info": {
    "prefix": "organizations_webhooks_logs_info",
    "description": "Information module for organizations _webhooks _logs",
    "body": [
      "cisco.meraki.organizations_webhooks_logs_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#organizationId: ${26:}",
      "\t#perPage: ${27:}",
      "\t#startingAfter: ${28:}",
      "\t#t0: ${29:}",
      "\t#t1: ${30:}",
      "\t#timespan: ${31:}",
      "\t#url: ${32:}"
    ]
  },
  "organizations_wireless_devices_ethernet_statuses_info": {
    "prefix": "organizations_wireless_devices_ethernet_statuses_info",
    "description": "Information module for organizations _wireless _devices _ethernet _statuses",
    "body": [
      "cisco.meraki.organizations_wireless_devices_ethernet_statuses_info:",
      "\tmeraki_api_key: ${1:}",
      "\ttotal_pages: ${2:}",
      "\t#direction: ${3:https://api.meraki.com/api/v1}",
      "\t#endingBefore: ${4:}",
      "\t#headers: ${5:}",
      "\t#meraki_action_batch_retry_wait_time: ${6:60}",
      "\t#meraki_base_url: ${7:https://api.meraki.com/api/v1}",
      "\t#meraki_be_geo_id: ${8:\"\"}",
      "\t#meraki_caller: ${9:\"\"}",
      "\t#meraki_certificate_path: ${10:\"\"}",
      "\t#meraki_inherit_logging_config: ${11:false}",
      "\t#meraki_log_file_prefix: ${12:meraki_api_}",
      "\t#meraki_log_path: ${13:\"\"}",
      "\t#meraki_maximum_retries: ${14:2}",
      "\t#meraki_nginx_429_retry_wait_time: ${15:60}",
      "\t#meraki_output_log: ${16:true}",
      "\t#meraki_print_console: ${17:true}",
      "\t#meraki_requests_proxy: ${18:\"\"}",
      "\t#meraki_retry_4xx_error: ${19:false}",
      "\t#meraki_retry_4xx_error_wait_time: ${20:60}",
      "\t#meraki_simulate: ${21:false}",
      "\t#meraki_single_request_timeout: ${22:60}",
      "\t#meraki_suppress_logging: ${23:false}",
      "\t#meraki_use_iterator_for_get_pages: ${24:false}",
      "\t#meraki_wait_on_rate_limit: ${25:true}",
      "\t#networkIds: ${26:}",
      "\t#organizationId: ${27:}",
      "\t#perPage: ${28:}",
      "\t#startingAfter: ${29:}"
    ]
  },
  "nxos_aaa_server": {
    "prefix": "nxos_aaa_server",
    "description": "Manages AAA server global configuration.",
    "body": [
      "cisco.nxos.nxos_aaa_server:",
      "\tserver_type: ${1:radius|tacacs}",
      "\t#deadtime: ${2:}",
      "\t#directed_request: ${3:enabled|disabled|default}",
      "\t#encrypt_type: ${4:0|7}",
      "\t#global_key: ${5:}",
      "\t#server_timeout: ${6:}",
      "\t#state: ${7:#present|default}"
    ]
  },
  "nxos_aaa_server_host": {
    "prefix": "nxos_aaa_server_host",
    "description": "Manages AAA server host-specific configuration.",
    "body": [
      "cisco.nxos.nxos_aaa_server_host:",
      "\taddress: ${1:}",
      "\tserver_type: ${2:radius|tacacs}",
      "\t#acct_port: ${3:}",
      "\t#auth_port: ${4:}",
      "\t#encrypt_type: ${5:0|7}",
      "\t#host_timeout: ${6:}",
      "\t#key: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#tacacs_port: ${9:}"
    ]
  },
  "nxos_acl_interfaces": {
    "prefix": "nxos_acl_interfaces",
    "description": "ACL interfaces resource module",
    "body": [
      "cisco.nxos.nxos_acl_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|gathered|#merged|overridden|rendered|replaced|parsed}"
    ]
  },
  "nxos_acls": {
    "prefix": "nxos_acls",
    "description": "ACLs resource module",
    "body": [
      "cisco.nxos.nxos_acls:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|gathered|#merged|overridden|rendered|replaced|parsed}"
    ]
  },
  "nxos_banner": {
    "prefix": "nxos_banner",
    "description": "Manage multiline banners on Cisco NXOS devices",
    "body": [
      "cisco.nxos.nxos_banner:",
      "\tbanner: ${1:exec|motd}",
      "\t#multiline_delimiter: ${2:@}",
      "\t#state: ${3:#present|absent}",
      "\t#text: ${4:}"
    ]
  },
  "nxos_bfd_global": {
    "prefix": "nxos_bfd_global",
    "description": "Bidirectional Forwarding Detection (BFD) global-level configuration",
    "body": [
      "cisco.nxos.nxos_bfd_global:",
      "\t#echo_interface: ${1:}",
      "\t#echo_rx_interval: ${2:}",
      "\t#fabricpath_interval: ${3:}",
      "\t#fabricpath_slow_timer: ${4:}",
      "\t#fabricpath_vlan: ${5:}",
      "\t#interval: ${6:}",
      "\t#ipv4_echo_rx_interval: ${7:}",
      "\t#ipv4_interval: ${8:}",
      "\t#ipv4_slow_timer: ${9:}",
      "\t#ipv6_echo_rx_interval: ${10:}",
      "\t#ipv6_interval: ${11:}",
      "\t#ipv6_slow_timer: ${12:}",
      "\t#slow_timer: ${13:}",
      "\t#startup_timer: ${14:}"
    ]
  },
  "nxos_bfd_interfaces": {
    "prefix": "nxos_bfd_interfaces",
    "description": "BFD interfaces resource module",
    "body": [
      "cisco.nxos.nxos_bfd_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_bgp_address_family": {
    "prefix": "nxos_bgp_address_family",
    "description": "BGP Address Family resource module.",
    "body": [
      "cisco.nxos.nxos_bgp_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_bgp_global": {
    "prefix": "nxos_bgp_global",
    "description": "BGP Global resource module.",
    "body": [
      "cisco.nxos.nxos_bgp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|purged|parsed|gathered|rendered}"
    ]
  },
  "nxos_bgp_neighbor_address_family": {
    "prefix": "nxos_bgp_neighbor_address_family",
    "description": "BGP Neighbor Address Family resource module.",
    "body": [
      "cisco.nxos.nxos_bgp_neighbor_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_bgp_templates": {
    "prefix": "nxos_bgp_templates",
    "description": "BGP Templates resource module.",
    "body": [
      "cisco.nxos.nxos_bgp_templates:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_command": {
    "prefix": "nxos_command",
    "description": "Run arbitrary command on Cisco NXOS devices",
    "body": [
      "cisco.nxos.nxos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:9}",
      "\t#wait_for: ${5:}"
    ]
  },
  "nxos_config": {
    "prefix": "nxos_config",
    "description": "Manage Cisco NXOS configuration sections",
    "body": [
      "cisco.nxos.nxos_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#defaults: ${5:false}",
      "\t#diff_against: ${6:startup|intended|running}",
      "\t#diff_ignore_lines: ${7:}",
      "\t#intended_config: ${8:}",
      "\t#lines: ${9:}",
      "\t#match: ${10:#line|strict|exact|none}",
      "\t#parents: ${11:}",
      "\t#replace: ${12:#line|block|config}",
      "\t#replace_src: ${13:}",
      "\t#running_config: ${14:}",
      "\t#save_when: ${15:always|#never|modified|changed}",
      "\t#src: ${16:}"
    ]
  },
  "nxos_devicealias": {
    "prefix": "nxos_devicealias",
    "description": "Configuration of device alias for Cisco NXOS MDS Switches.",
    "body": [
      "cisco.nxos.nxos_devicealias:",
      "\t#da: ${1:}",
      "\t#distribute: ${2:}",
      "\t#mode: ${3:basic|enhanced}",
      "\t#rename: ${4:}"
    ]
  },
  "nxos_evpn_global": {
    "prefix": "nxos_evpn_global",
    "description": "Handles the EVPN control plane for VXLAN.",
    "body": [
      "cisco.nxos.nxos_evpn_global:",
      "\tnv_overlay_evpn: ${1:}"
    ]
  },
  "nxos_evpn_vni": {
    "prefix": "nxos_evpn_vni",
    "description": "Manages Cisco EVPN VXLAN Network Identifier (VNI).",
    "body": [
      "cisco.nxos.nxos_evpn_vni:",
      "\tvni: ${1:}",
      "\t#route_distinguisher: ${2:}",
      "\t#route_target_both: ${3:}",
      "\t#route_target_export: ${4:}",
      "\t#route_target_import: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "nxos_facts": {
    "prefix": "nxos_facts",
    "description": "Gets facts about NX-OS switches",
    "body": [
      "cisco.nxos.nxos_facts:",
      "\t#available_network_resources: ${1:false}",
      "\t#gather_network_resources: ${2:}",
      "\t#gather_subset: ${3:min}"
    ]
  },
  "nxos_fc_interfaces": {
    "prefix": "nxos_fc_interfaces",
    "description": "Fc Interfaces resource module",
    "body": [
      "cisco.nxos.nxos_fc_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_feature": {
    "prefix": "nxos_feature",
    "description": "Manage features in NX-OS switches.",
    "body": [
      "cisco.nxos.nxos_feature:",
      "\tfeature: ${1:}",
      "\t#state: ${2:#enabled|disabled}"
    ]
  },
  "nxos_file_copy": {
    "prefix": "nxos_file_copy",
    "description": "Copy a file to a remote NXOS device.",
    "body": [
      "cisco.nxos.nxos_file_copy:",
      "\t#connect_ssh_port: ${1:22}",
      "\t#file_pull: ${2:false}",
      "\t#file_pull_compact: ${3:false}",
      "\t#file_pull_kstack: ${4:false}",
      "\t#file_pull_protocol: ${5:#scp|sftp|ftp|http|https|tftp}",
      "\t#file_pull_timeout: ${6:300}",
      "\t#file_system: ${7:bootflash:}",
      "\t#local_file: ${8:}",
      "\t#local_file_directory: ${9:}",
      "\t#remote_file: ${10:}",
      "\t#remote_scp_server: ${11:}",
      "\t#remote_scp_server_password: ${12:}",
      "\t#remote_scp_server_user: ${13:}",
      "\t#vrf: ${14:management}"
    ]
  },
  "nxos_gir": {
    "prefix": "nxos_gir",
    "description": "Trigger a graceful removal or insertion (GIR) of the switch.",
    "body": [
      "cisco.nxos.nxos_gir:",
      "\t#state: ${1:#present|absent}",
      "\t#system_mode_maintenance: ${2:}",
      "\t#system_mode_maintenance_dont_generate_profile: ${3:}",
      "\t#system_mode_maintenance_on_reload_reset_reason: ${4:hw_error|svc_failure|kern_failure|wdog_timeout|fatal_error|lc_failure|match_any|manual_reload|any_other|maintenance}",
      "\t#system_mode_maintenance_shutdown: ${5:}",
      "\t#system_mode_maintenance_timeout: ${6:}"
    ]
  },
  "nxos_gir_profile_management": {
    "prefix": "nxos_gir_profile_management",
    "description": "Create a maintenance-mode or normal-mode profile for GIR.",
    "body": [
      "cisco.nxos.nxos_gir_profile_management:",
      "\tmode: ${1:maintenance|normal}",
      "\t#commands: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "nxos_hostname": {
    "prefix": "nxos_hostname",
    "description": "Hostname resource module.",
    "body": [
      "cisco.nxos.nxos_hostname:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_hsrp": {
    "prefix": "nxos_hsrp",
    "description": "Manages HSRP configuration on NX-OS switches.",
    "body": [
      "cisco.nxos.nxos_hsrp:",
      "\tgroup: ${1:}",
      "\tinterface: ${2:}",
      "\t#auth_string: ${3:}",
      "\t#auth_type: ${4:text|md5}",
      "\t#preempt: ${5:enabled|disabled}",
      "\t#priority: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#version: ${8:#1|2}",
      "\t#vip: ${9:}"
    ]
  },
  "nxos_hsrp_interfaces": {
    "prefix": "nxos_hsrp_interfaces",
    "description": "HSRP interfaces resource module",
    "body": [
      "cisco.nxos.nxos_hsrp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_igmp": {
    "prefix": "nxos_igmp",
    "description": "Manages IGMP global configuration.",
    "body": [
      "cisco.nxos.nxos_igmp:",
      "\t#enforce_rtr_alert: ${1:}",
      "\t#flush_routes: ${2:}",
      "\t#restart: ${3:false}",
      "\t#state: ${4:#present|default}"
    ]
  },
  "nxos_igmp_interface": {
    "prefix": "nxos_igmp_interface",
    "description": "Manages IGMP interface configuration.",
    "body": [
      "cisco.nxos.nxos_igmp_interface:",
      "\tinterface: ${1:}",
      "\t#group_timeout: ${2:}",
      "\t#immediate_leave: ${3:}",
      "\t#last_member_qrt: ${4:}",
      "\t#last_member_query_count: ${5:}",
      "\t#oif_ps: ${6:}",
      "\t#oif_routemap: ${7:}",
      "\t#querier_timeout: ${8:}",
      "\t#query_interval: ${9:}",
      "\t#query_mrt: ${10:}",
      "\t#report_llg: ${11:}",
      "\t#restart: ${12:false}",
      "\t#robustness: ${13:}",
      "\t#startup_query_count: ${14:}",
      "\t#startup_query_interval: ${15:}",
      "\t#state: ${16:#present|absent|default}",
      "\t#version: ${17:2|3|default}"
    ]
  },
  "nxos_igmp_snooping": {
    "prefix": "nxos_igmp_snooping",
    "description": "Manages IGMP snooping global configuration.",
    "body": [
      "cisco.nxos.nxos_igmp_snooping:",
      "\t#group_timeout: ${1:}",
      "\t#link_local_grp_supp: ${2:}",
      "\t#report_supp: ${3:}",
      "\t#snooping: ${4:}",
      "\t#state: ${5:#present|default}",
      "\t#v3_report_supp: ${6:}"
    ]
  },
  "nxos_install_os": {
    "prefix": "nxos_install_os",
    "description": "Set boot options like boot, kickstart image and issu.",
    "body": [
      "cisco.nxos.nxos_install_os:",
      "\tsystem_image_file: ${1:}",
      "\t#issu: ${2:required|desired|yes|#no}",
      "\t#kickstart_image_file: ${3:}"
    ]
  },
  "nxos_interfaces": {
    "prefix": "nxos_interfaces",
    "description": "Interfaces resource module",
    "body": [
      "cisco.nxos.nxos_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed|purged}"
    ]
  },
  "nxos_l2_interfaces": {
    "prefix": "nxos_l2_interfaces",
    "description": "L2 interfaces resource module",
    "body": [
      "cisco.nxos.nxos_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_l3_interfaces": {
    "prefix": "nxos_l3_interfaces",
    "description": "L3 interfaces resource module",
    "body": [
      "cisco.nxos.nxos_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lacp": {
    "prefix": "nxos_lacp",
    "description": "LACP resource module",
    "body": [
      "cisco.nxos.nxos_lacp:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lacp_interfaces": {
    "prefix": "nxos_lacp_interfaces",
    "description": "LACP interfaces resource module",
    "body": [
      "cisco.nxos.nxos_lacp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lag_interfaces": {
    "prefix": "nxos_lag_interfaces",
    "description": "LAG interfaces resource module",
    "body": [
      "cisco.nxos.nxos_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lldp_global": {
    "prefix": "nxos_lldp_global",
    "description": "LLDP resource module",
    "body": [
      "cisco.nxos.nxos_lldp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lldp_interfaces": {
    "prefix": "nxos_lldp_interfaces",
    "description": "LLDP interfaces resource module",
    "body": [
      "cisco.nxos.nxos_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_logging_global": {
    "prefix": "nxos_logging_global",
    "description": "Logging resource module.",
    "body": [
      "cisco.nxos.nxos_logging_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_ntp_global": {
    "prefix": "nxos_ntp_global",
    "description": "NTP Global resource module.",
    "body": [
      "cisco.nxos.nxos_ntp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_nxapi": {
    "prefix": "nxos_nxapi",
    "description": "Manage NXAPI configuration on an NXOS device.",
    "body": [
      "cisco.nxos.nxos_nxapi:",
      "\t#http: ${1:true}",
      "\t#http_port: ${2:80}",
      "\t#https: ${3:false}",
      "\t#https_port: ${4:443}",
      "\t#sandbox: ${5:}",
      "\t#ssl_strong_ciphers: ${6:false}",
      "\t#state: ${7:#present|absent}",
      "\t#tlsv1_0: ${8:true}",
      "\t#tlsv1_1: ${9:false}",
      "\t#tlsv1_2: ${10:false}"
    ]
  },
  "nxos_ospf_interfaces": {
    "prefix": "nxos_ospf_interfaces",
    "description": "OSPF Interfaces Resource Module.",
    "body": [
      "cisco.nxos.nxos_ospf_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "nxos_ospfv2": {
    "prefix": "nxos_ospfv2",
    "description": "OSPFv2 resource module",
    "body": [
      "cisco.nxos.nxos_ospfv2:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "nxos_ospfv3": {
    "prefix": "nxos_ospfv3",
    "description": "OSPFv3 resource module",
    "body": [
      "cisco.nxos.nxos_ospfv3:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "nxos_overlay_global": {
    "prefix": "nxos_overlay_global",
    "description": "Configures anycast gateway MAC of the switch.",
    "body": [
      "cisco.nxos.nxos_overlay_global:",
      "\tanycast_gateway_mac: ${1:}"
    ]
  },
  "nxos_pim": {
    "prefix": "nxos_pim",
    "description": "Manages configuration of a PIM instance.",
    "body": [
      "cisco.nxos.nxos_pim:",
      "\t#bfd: ${1:enable|disable}",
      "\t#ssm_range: ${2:[]}"
    ]
  },
  "nxos_pim_interface": {
    "prefix": "nxos_pim_interface",
    "description": "Manages PIM interface configuration.",
    "body": [
      "cisco.nxos.nxos_pim_interface:",
      "\tinterface: ${1:}",
      "\t#bfd: ${2:enable|disable|default}",
      "\t#border: ${3:false}",
      "\t#dr_prio: ${4:}",
      "\t#hello_auth_key: ${5:}",
      "\t#hello_interval: ${6:}",
      "\t#hello_interval_ms: ${7:}",
      "\t#jp_policy_in: ${8:}",
      "\t#jp_policy_out: ${9:}",
      "\t#jp_type_in: ${10:prefix|routemap}",
      "\t#jp_type_out: ${11:prefix|routemap}",
      "\t#neighbor_policy: ${12:}",
      "\t#neighbor_type: ${13:prefix|routemap}",
      "\t#sparse: ${14:false}",
      "\t#state: ${15:#present|absent|default}"
    ]
  },
  "nxos_pim_rp_address": {
    "prefix": "nxos_pim_rp_address",
    "description": "Manages configuration of an PIM static RP address instance.",
    "body": [
      "cisco.nxos.nxos_pim_rp_address:",
      "\trp_address: ${1:}",
      "\t#bidir: ${2:}",
      "\t#group_list: ${3:}",
      "\t#prefix_list: ${4:}",
      "\t#route_map: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "nxos_ping": {
    "prefix": "nxos_ping",
    "description": "Tests reachability using ping from Nexus switch.",
    "body": [
      "cisco.nxos.nxos_ping:",
      "\tdest: ${1:}",
      "\t#count: ${2:5}",
      "\t#df_bit: ${3:false}",
      "\t#size: ${4:}",
      "\t#source: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#vrf: ${7:}"
    ]
  },
  "nxos_prefix_lists": {
    "prefix": "nxos_prefix_lists",
    "description": "Prefix-Lists resource module.",
    "body": [
      "cisco.nxos.nxos_prefix_lists:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_reboot": {
    "prefix": "nxos_reboot",
    "description": "Reboot a network device.",
    "body": [
      "cisco.nxos.nxos_reboot:",
      "\t#confirm: ${1:false}"
    ]
  },
  "nxos_rollback": {
    "prefix": "nxos_rollback",
    "description": "Set a checkpoint or rollback to a checkpoint.",
    "body": [
      "cisco.nxos.nxos_rollback:",
      "\t#checkpoint_file: ${1:}",
      "\t#rollback_to: ${2:}"
    ]
  },
  "nxos_route_maps": {
    "prefix": "nxos_route_maps",
    "description": "Route Maps resource module.",
    "body": [
      "cisco.nxos.nxos_route_maps:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_rpm": {
    "prefix": "nxos_rpm",
    "description": "Install patch or feature rpms on Cisco NX-OS devices.",
    "body": [
      "cisco.nxos.nxos_rpm:",
      "\t#aggregate: ${1:}",
      "\t#file_system: ${2:bootflash}",
      "\t#pkg: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "nxos_snapshot": {
    "prefix": "nxos_snapshot",
    "description": "Manage snapshots of the running states of selected features.",
    "body": [
      "cisco.nxos.nxos_snapshot:",
      "\taction: ${1:add|compare|create|delete|delete_all}",
      "\t#compare_option: ${2:summary|ipv4routes|ipv6routes}",
      "\t#comparison_results_file: ${3:}",
      "\t#description: ${4:}",
      "\t#element_key1: ${5:}",
      "\t#element_key2: ${6:}",
      "\t#path: ${7:./}",
      "\t#row_id: ${8:}",
      "\t#save_snapshot_locally: ${9:false}",
      "\t#section: ${10:}",
      "\t#show_command: ${11:}",
      "\t#snapshot1: ${12:}",
      "\t#snapshot2: ${13:}",
      "\t#snapshot_name: ${14:}"
    ]
  },
  "nxos_snmp_server": {
    "prefix": "nxos_snmp_server",
    "description": "SNMP Server resource module.",
    "body": [
      "cisco.nxos.nxos_snmp_server:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_static_routes": {
    "prefix": "nxos_static_routes",
    "description": "Static routes resource module",
    "body": [
      "cisco.nxos.nxos_static_routes:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "nxos_system": {
    "prefix": "nxos_system",
    "description": "Manage the system attributes on Cisco NXOS devices",
    "body": [
      "cisco.nxos.nxos_system:",
      "\t#domain_lookup: ${1:}",
      "\t#domain_name: ${2:}",
      "\t#domain_search: ${3:}",
      "\t#hostname: ${4:}",
      "\t#name_servers: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#system_mtu: ${7:}"
    ]
  },
  "nxos_telemetry": {
    "prefix": "nxos_telemetry",
    "description": "TELEMETRY resource module",
    "body": [
      "cisco.nxos.nxos_telemetry:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|deleted|gathered}"
    ]
  },
  "nxos_udld": {
    "prefix": "nxos_udld",
    "description": "Manages UDLD global configuration params.",
    "body": [
      "cisco.nxos.nxos_udld:",
      "\t#aggressive: ${1:enabled|disabled}",
      "\t#msg_time: ${2:}",
      "\t#reset: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "nxos_udld_interface": {
    "prefix": "nxos_udld_interface",
    "description": "Manages UDLD interface configuration params.",
    "body": [
      "cisco.nxos.nxos_udld_interface:",
      "\tinterface: ${1:}",
      "\tmode: ${2:enabled|disabled|aggressive}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "nxos_user": {
    "prefix": "nxos_user",
    "description": "Manage the collection of local users on Nexus devices",
    "body": [
      "cisco.nxos.nxos_user:",
      "\t#aggregate: ${1:}",
      "\t#configured_password: ${2:}",
      "\t#hashed_password: ${3:}",
      "\t#name: ${4:}",
      "\t#purge: ${5:false}",
      "\t#roles: ${6:}",
      "\t#sshkey: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#update_password: ${9:on_create|#always}"
    ]
  },
  "nxos_vlans": {
    "prefix": "nxos_vlans",
    "description": "VLANs resource module",
    "body": [
      "cisco.nxos.nxos_vlans:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_vpc": {
    "prefix": "nxos_vpc",
    "description": "Manages global VPC configuration",
    "body": [
      "cisco.nxos.nxos_vpc:",
      "\tdomain: ${1:}",
      "\t#auto_recovery: ${2:}",
      "\t#auto_recovery_reload_delay: ${3:}",
      "\t#delay_restore: ${4:}",
      "\t#delay_restore_interface_vlan: ${5:}",
      "\t#delay_restore_orphan_port: ${6:}",
      "\t#peer_gw: ${7:}",
      "\t#pkl_dest: ${8:}",
      "\t#pkl_src: ${9:}",
      "\t#pkl_vrf: ${10:}",
      "\t#role_priority: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#system_priority: ${13:}"
    ]
  },
  "nxos_vpc_interface": {
    "prefix": "nxos_vpc_interface",
    "description": "Manages interface VPC configuration",
    "body": [
      "cisco.nxos.nxos_vpc_interface:",
      "\tportchannel: ${1:}",
      "\t#peer_link: ${2:}",
      "\t#state: ${3:#present|absent}",
      "\t#vpc: ${4:}"
    ]
  },
  "nxos_vrf": {
    "prefix": "nxos_vrf",
    "description": "Manages global VRF configuration.",
    "body": [
      "cisco.nxos.nxos_vrf:",
      "\t#admin_state: ${1:#up|down}",
      "\t#aggregate: ${2:}",
      "\t#associated_interfaces: ${3:}",
      "\t#delay: ${4:10}",
      "\t#description: ${5:}",
      "\t#interfaces: ${6:}",
      "\t#name: ${7:}",
      "\t#purge: ${8:false}",
      "\t#rd: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#vni: ${11:}"
    ]
  },
  "nxos_vrf_af": {
    "prefix": "nxos_vrf_af",
    "description": "Manages VRF AF.",
    "body": [
      "cisco.nxos.nxos_vrf_af:",
      "\tafi: ${1:ipv4|ipv6}",
      "\tvrf: ${2:}",
      "\t#route_target_both_auto_evpn: ${3:}",
      "\t#route_targets: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "nxos_vrf_interface": {
    "prefix": "nxos_vrf_interface",
    "description": "Manages interface specific VRF configuration.",
    "body": [
      "cisco.nxos.nxos_vrf_interface:",
      "\tinterface: ${1:}",
      "\tvrf: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "nxos_vrrp": {
    "prefix": "nxos_vrrp",
    "description": "Manages VRRP configuration on NX-OS switches.",
    "body": [
      "cisco.nxos.nxos_vrrp:",
      "\tgroup: ${1:}",
      "\tinterface: ${2:}",
      "\t#admin_state: ${3:#shutdown|no shutdown|default}",
      "\t#authentication: ${4:}",
      "\t#interval: ${5:}",
      "\t#preempt: ${6:}",
      "\t#priority: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#vip: ${9:}"
    ]
  },
  "nxos_vsan": {
    "prefix": "nxos_vsan",
    "description": "Configuration of vsan for Cisco NXOS MDS Switches.",
    "body": [
      "cisco.nxos.nxos_vsan:",
      "\t#vsan: ${1:}"
    ]
  },
  "nxos_vtp_domain": {
    "prefix": "nxos_vtp_domain",
    "description": "Manages VTP domain configuration.",
    "body": [
      "cisco.nxos.nxos_vtp_domain:",
      "\tdomain: ${1:}"
    ]
  },
  "nxos_vtp_password": {
    "prefix": "nxos_vtp_password",
    "description": "Manages VTP password configuration.",
    "body": [
      "cisco.nxos.nxos_vtp_password:",
      "\t#state: ${1:#present|absent}",
      "\t#vtp_password: ${2:}"
    ]
  },
  "nxos_vtp_version": {
    "prefix": "nxos_vtp_version",
    "description": "Manages VTP version configuration.",
    "body": [
      "cisco.nxos.nxos_vtp_version:",
      "\tversion: ${1:1|2|3}"
    ]
  },
  "nxos_vxlan_vtep": {
    "prefix": "nxos_vxlan_vtep",
    "description": "Manages VXLAN Network Virtualization Endpoint (NVE).",
    "body": [
      "cisco.nxos.nxos_vxlan_vtep:",
      "\tinterface: ${1:}",
      "\t#advertise_virtual_rmac: ${2:}",
      "\t#description: ${3:}",
      "\t#global_ingress_replication_bgp: ${4:}",
      "\t#global_mcast_group_L2: ${5:}",
      "\t#global_mcast_group_L3: ${6:}",
      "\t#global_suppress_arp: ${7:}",
      "\t#host_reachability: ${8:}",
      "\t#multisite_border_gateway_interface: ${9:}",
      "\t#shutdown: ${10:}",
      "\t#source_interface: ${11:}",
      "\t#source_interface_hold_down_time: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "nxos_vxlan_vtep_vni": {
    "prefix": "nxos_vxlan_vtep_vni",
    "description": "Creates a Virtual Network Identifier member (VNI)",
    "body": [
      "cisco.nxos.nxos_vxlan_vtep_vni:",
      "\tinterface: ${1:}",
      "\tvni: ${2:}",
      "\t#assoc_vrf: ${3:}",
      "\t#ingress_replication: ${4:bgp|static|default}",
      "\t#multicast_group: ${5:}",
      "\t#multisite_ingress_replication: ${6:disable|enable|optimized}",
      "\t#peer_list: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#suppress_arp: ${9:}",
      "\t#suppress_arp_disable: ${10:}"
    ]
  },
  "nxos_zone_zoneset": {
    "prefix": "nxos_zone_zoneset",
    "description": "Configuration of zone/zoneset for Cisco NXOS MDS Switches.",
    "body": [
      "cisco.nxos.nxos_zone_zoneset:",
      "\t#zone_zoneset_details: ${1:}"
    ]
  },
  "turbo_demo": {
    "prefix": "turbo_demo",
    "description": "A demo module for ansible_module.turbo",
    "body": "cloud.common.turbo_demo:"
  },
  "turbo_fail": {
    "prefix": "turbo_fail",
    "description": "A short module which honor additional args when calling fail_json",
    "body": [
      "cloud.common.turbo_fail:",
      "\t#params: ${1:}"
    ]
  },
  "turbo_import": {
    "prefix": "turbo_import",
    "description": "A demo module to test import logic for turbo mode",
    "body": "cloud.common.turbo_import:"
  },
  "custom_image": {
    "prefix": "custom_image",
    "description": "Manage custom images on the cloudscale.ch IaaS service",
    "body": [
      "cloudscale_ch.cloud.custom_image:",
      "\tapi_token: ${1:}",
      "\t#api_timeout: ${2:45}",
      "\t#api_url: ${3:https://api.cloudscale.ch/v1}",
      "\t#firmware_type: ${4:#bios|uefi}",
      "\t#force_retry: ${5:false}",
      "\t#name: ${6:}",
      "\t#slug: ${7:}",
      "\t#source_format: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#tags: ${10:}",
      "\t#url: ${11:}",
      "\t#user_data_handling: ${12:pass-through|extend-cloud-config}",
      "\t#uuid: ${13:}",
      "\t#zones: ${14:}"
    ]
  },
  "load_balancer_health_monitor": {
    "prefix": "load_balancer_health_monitor",
    "description": "Manages load balancers on the cloudscale.ch IaaS service",
    "body": [
      "cloudscale_ch.cloud.load_balancer_health_monitor:",
      "\tapi_token: ${1:}",
      "\t#api_timeout: ${2:45}",
      "\t#api_url: ${3:https://api.cloudscale.ch/v1}",
      "\t#delay_s: ${4:}",
      "\t#down_threshold: ${5:}",
      "\t#http: ${6:}",
      "\t#pool: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#tags: ${9:}",
      "\t#timeout_s: ${10:}",
      "\t#type: ${11:}",
      "\t#up_threshold: ${12:}",
      "\t#uuid: ${13:}"
    ]
  },
  "load_balancer_listener": {
    "prefix": "load_balancer_listener",
    "description": "Manages load balancer listeners on the cloudscale.ch IaaS service",
    "body": [
      "cloudscale_ch.cloud.load_balancer_listener:",
      "\tapi_token: ${1:}",
      "\t#allowed_cidrs: ${2:}",
      "\t#api_timeout: ${3:45}",
      "\t#api_url: ${4:https://api.cloudscale.ch/v1}",
      "\t#name: ${5:}",
      "\t#pool: ${6:}",
      "\t#protocol: ${7:}",
      "\t#protocol_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#tags: ${10:}",
      "\t#timeout_client_data_ms: ${11:}",
      "\t#timeout_member_connect_ms: ${12:}",
      "\t#timeout_member_data_ms: ${13:}",
      "\t#uuid: ${14:}"
    ]
  },
  "load_balancer_pool": {
    "prefix": "load_balancer_pool",
    "description": "Manages load balancer pools on the cloudscale.ch IaaS service",
    "body": [
      "cloudscale_ch.cloud.load_balancer_pool:",
      "\tapi_token: ${1:}",
      "\t#algorithm: ${2:}",
      "\t#api_timeout: ${3:45}",
      "\t#api_url: ${4:https://api.cloudscale.ch/v1}",
      "\t#load_balancer: ${5:}",
      "\t#name: ${6:}",
      "\t#protocol: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#tags: ${9:}",
      "\t#uuid: ${10:}"
    ]
  },
  "load_balancer_pool_member": {
    "prefix": "load_balancer_pool_member",
    "description": "Manages load balancer pool members on the cloudscale.ch IaaS service",
    "body": [
      "cloudscale_ch.cloud.load_balancer_pool_member:",
      "\tapi_token: ${1:}",
      "\t#address: ${2:}",
      "\t#api_timeout: ${3:45}",
      "\t#api_url: ${4:https://api.cloudscale.ch/v1}",
      "\t#enabled: ${5:true}",
      "\t#load_balancer_pool: ${6:}",
      "\t#monitor_port: ${7:}",
      "\t#name: ${8:}",
      "\t#protocol_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#subnet: ${11:}",
      "\t#tags: ${12:}",
      "\t#uuid: ${13:}"
    ]
  },
  "objects_user": {
    "prefix": "objects_user",
    "description": "Manages objects users on the cloudscale.ch IaaS service",
    "body": [
      "cloudscale_ch.cloud.objects_user:",
      "\tapi_token: ${1:}",
      "\t#api_timeout: ${2:45}",
      "\t#api_url: ${3:https://api.cloudscale.ch/v1}",
      "\t#display_name: ${4:}",
      "\t#id: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#tags: ${7:}"
    ]
  },
  "command": {
    "prefix": "command",
    "description": "Run commands on remote Cisco SMB devices",
    "body": [
      "community.ciscosmb.command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "facts": {
    "prefix": "facts",
    "description": "Collect facts from remote devices running Cisco SMB",
    "body": [
      "community.ciscosmb.facts:",
      "\t#gather_subset: ${1:default|all|hardware|config|interfaces|!hardware|#!config|!interfaces}"
    ]
  },
  "digital_ocean_domain_record": {
    "prefix": "digital_ocean_domain_record",
    "description": "Manage DigitalOcean domain records",
    "body": [
      "community.digitalocean.digital_ocean_domain_record:",
      "\tdomain: ${1:}",
      "\t#data: ${2:\"\"}",
      "\t#flags: ${3:}",
      "\t#force_update: ${4:false}",
      "\t#name: ${5:@}",
      "\t#oauth_token: ${6:}",
      "\t#port: ${7:}",
      "\t#priority: ${8:}",
      "\t#record_id: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#tag: ${11:issue|wildissue|iodef}",
      "\t#ttl: ${12:1800}",
      "\t#type: ${13:A|AAAA|CNAME|MX|TXT|SRV|NS|CAA}",
      "\t#weight: ${14:}"
    ]
  },
  "digital_ocean_floating_ip": {
    "prefix": "digital_ocean_floating_ip",
    "description": "Manage DigitalOcean Floating IPs",
    "body": [
      "community.digitalocean.digital_ocean_floating_ip:",
      "\toauth_token: ${1:}",
      "\t#droplet_id: ${2:}",
      "\t#ip: ${3:}",
      "\t#project_name: ${4:\"\"}",
      "\t#region: ${5:}",
      "\t#state: ${6:#present|absent|attached|detached}",
      "\t#timeout: ${7:30}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "digital_ocean_kubernetes": {
    "prefix": "digital_ocean_kubernetes",
    "description": "Create and delete a DigitalOcean Kubernetes cluster",
    "body": [
      "community.digitalocean.digital_ocean_kubernetes:",
      "\tname: ${1:}",
      "\toauth_token: ${2:}",
      "\t#auto_upgrade: ${3:false}",
      "\t#ha: ${4:false}",
      "\t#maintenance_policy: ${5:}",
      "\t#node_pools: ${6:[{'name': 'worker-pool', 'size': 's-1vcpu-2gb', 'count': 1, 'tags': [], 'labels': {\\}, 'taints': [], 'auto_scale': False, 'min_nodes': 0, 'max_nodes': 0\\}]}",
      "\t#region: ${7:nyc1}",
      "\t#return_kubeconfig: ${8:false}",
      "\t#state: ${9:#present|absent}",
      "\t#surge_upgrade: ${10:false}",
      "\t#tags: ${11:}",
      "\t#version: ${12:latest}",
      "\t#vpc_uuid: ${13:}",
      "\t#wait: ${14:true}",
      "\t#wait_timeout: ${15:600}"
    ]
  },
  "digital_ocean_kubernetes_info": {
    "prefix": "digital_ocean_kubernetes_info",
    "description": "Returns information about an existing DigitalOcean Kubernetes cluster",
    "body": [
      "community.digitalocean.digital_ocean_kubernetes_info:",
      "\tname: ${1:}",
      "\toauth_token: ${2:}",
      "\t#return_kubeconfig: ${3:false}"
    ]
  },
  "digital_ocean_monitoring_alerts": {
    "prefix": "digital_ocean_monitoring_alerts",
    "description": "Programmatically retrieve metrics as well as configure alert policies based on these metrics",
    "body": [
      "community.digitalocean.digital_ocean_monitoring_alerts:",
      "\toauth_token: ${1:}",
      "\t#alerts: ${2:}",
      "\t#compare: ${3:GreaterThan|LessThan}",
      "\t#description: ${4:}",
      "\t#enabled: ${5:}",
      "\t#entities: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#tags: ${8:}",
      "\t#type: ${9:v1/insights/droplet/load_1|v1/insights/droplet/load_5|v1/insights/droplet/load_15|v1/insights/droplet/memory_utilization_percent|v1/insights/droplet/disk_utilization_percent|v1/insights/droplet/cpu|v1/insights/droplet/disk_read|v1/insights/droplet/disk_write|v1/insights/droplet/public_outbound_bandwidth|v1/insights/droplet/public_inbound_bandwidth|v1/insights/droplet/private_outbound_bandwidth|v1/insights/droplet/private_inbound_bandwidth}",
      "\t#uuid: ${10:}",
      "\t#value: ${11:}",
      "\t#window: ${12:5m|10m|30m|1h}"
    ]
  },
  "digital_ocean_monitoring_alerts_info": {
    "prefix": "digital_ocean_monitoring_alerts_info",
    "description": "Programmatically retrieve metrics as well as configure alert policies based on these metrics",
    "body": [
      "community.digitalocean.digital_ocean_monitoring_alerts_info:",
      "\toauth_token: ${1:}",
      "\t#state: ${2:#present}",
      "\t#uuid: ${3:}"
    ]
  },
  "digital_ocean_project": {
    "prefix": "digital_ocean_project",
    "description": "Manage a DigitalOcean project",
    "body": [
      "community.digitalocean.digital_ocean_project:",
      "\toauth_token: ${1:}",
      "\t#description: ${2:}",
      "\t#environment: ${3:Development|Staging|Production}",
      "\t#id: ${4:}",
      "\t#is_default: ${5:false}",
      "\t#name: ${6:}",
      "\t#purpose: ${7:}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "grafana_dashboard": {
    "prefix": "grafana_dashboard",
    "description": "Manage Grafana dashboards",
    "body": [
      "community.grafana.grafana_dashboard:",
      "\turl: ${1:}",
      "\t#client_cert: ${2:}",
      "\t#client_key: ${3:}",
      "\t#commit_message: ${4:}",
      "\t#dashboard_id: ${5:}",
      "\t#dashboard_revision: ${6:1}",
      "\t#folder: ${7:General}",
      "\t#grafana_api_key: ${8:}",
      "\t#org_id: ${9:1}",
      "\t#overwrite: ${10:false}",
      "\t#path: ${11:}",
      "\t#slug: ${12:}",
      "\t#state: ${13:absent|export|#present}",
      "\t#uid: ${14:}",
      "\t#url_password: ${15:admin}",
      "\t#url_username: ${16:admin}",
      "\t#use_proxy: ${17:true}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "grafana_datasource": {
    "prefix": "grafana_datasource",
    "description": "Manage Grafana datasources",
    "body": [
      "community.grafana.grafana_datasource:",
      "\tname: ${1:}",
      "\turl: ${2:}",
      "\t#access: ${3:direct|#proxy}",
      "\t#additional_json_data: ${4:{\\}}",
      "\t#additional_secure_json_data: ${5:{\\}}",
      "\t#aws_access_key: ${6:\"\"}",
      "\t#aws_assume_role_arn: ${7:\"\"}",
      "\t#aws_auth_type: ${8:#keys|credentials|arn|default}",
      "\t#aws_credentials_profile: ${9:\"\"}",
      "\t#aws_custom_metrics_namespaces: ${10:}",
      "\t#aws_default_region: ${11:ap-northeast-1|ap-northeast-2|ap-southeast-1|ap-southeast-2|ap-south-1|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-west-1|eu-west-2|eu-west-3|sa-east-1|#us-east-1|us-east-2|us-gov-west-1|us-west-1|us-west-2}",
      "\t#aws_secret_key: ${12:\"\"}",
      "\t#azure_client: ${13:}",
      "\t#azure_cloud: ${14:#azuremonitor|chinaazuremonitor|govazuremonitor|germanyazuremonitor}",
      "\t#azure_secret: ${15:}",
      "\t#azure_tenant: ${16:}",
      "\t#basic_auth_password: ${17:}",
      "\t#basic_auth_user: ${18:}",
      "\t#client_cert: ${19:}",
      "\t#client_key: ${20:}",
      "\t#database: ${21:\"\"}",
      "\t#ds_type: ${22:graphite|prometheus|elasticsearch|influxdb|opentsdb|mysql|postgres|cloudwatch|alexanderzobnin-zabbix-datasource|grafana-azure-monitor-datasource|sni-thruk-datasource|camptocamp-prometheus-alertmanager-datasource|loki|redis-datasource}",
      "\t#ds_url: ${23:}",
      "\t#enforce_secure_data: ${24:false}",
      "\t#es_version: ${25:2|5|56|60|70|7.7+|#7.10+|8.0+}",
      "\t#grafana_api_key: ${26:}",
      "\t#interval: ${27:#|Hourly|Daily|Weekly|Monthly|Yearly}",
      "\t#is_default: ${28:false}",
      "\t#max_concurrent_shard_requests: ${29:256}",
      "\t#org_id: ${30:1}",
      "\t#password: ${31:\"\"}",
      "\t#sslmode: ${32:#disable|require|verify-ca|verify-full}",
      "\t#state: ${33:absent|#present}",
      "\t#time_field: ${34:@timestamp}",
      "\t#time_interval: ${35:}",
      "\t#tls_ca_cert: ${36:}",
      "\t#tls_client_cert: ${37:}",
      "\t#tls_client_key: ${38:}",
      "\t#tls_skip_verify: ${39:false}",
      "\t#trends: ${40:false}",
      "\t#tsdb_resolution: ${41:millisecond|#second}",
      "\t#tsdb_version: ${42:#1|2|3}",
      "\t#uid: ${43:}",
      "\t#url_password: ${44:admin}",
      "\t#url_username: ${45:admin}",
      "\t#use_proxy: ${46:true}",
      "\t#user: ${47:\"\"}",
      "\t#validate_certs: ${48:true}",
      "\t#with_credentials: ${49:false}",
      "\t#zabbix_password: ${50:}",
      "\t#zabbix_user: ${51:}"
    ]
  },
  "grafana_folder": {
    "prefix": "grafana_folder",
    "description": "Manage Grafana Folders",
    "body": [
      "community.grafana.grafana_folder:",
      "\tname: ${1:}",
      "\turl: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#grafana_api_key: ${5:}",
      "\t#skip_version_check: ${6:false}",
      "\t#state: ${7:#present|absent}",
      "\t#url_password: ${8:admin}",
      "\t#url_username: ${9:admin}",
      "\t#use_proxy: ${10:true}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "grafana_notification_channel": {
    "prefix": "grafana_notification_channel",
    "description": "Manage Grafana Notification Channels",
    "body": [
      "community.grafana.grafana_notification_channel:",
      "\turl: ${1:}",
      "\t#client_cert: ${2:}",
      "\t#client_key: ${3:}",
      "\t#dingding_message_type: ${4:link|action_card}",
      "\t#dingding_url: ${5:}",
      "\t#disable_resolve_message: ${6:false}",
      "\t#discord_message_content: ${7:}",
      "\t#discord_url: ${8:}",
      "\t#email_addresses: ${9:}",
      "\t#email_single: ${10:}",
      "\t#googlechat_url: ${11:}",
      "\t#grafana_api_key: ${12:}",
      "\t#hipchat_api_key: ${13:}",
      "\t#hipchat_room_id: ${14:}",
      "\t#hipchat_url: ${15:}",
      "\t#include_image: ${16:false}",
      "\t#is_default: ${17:false}",
      "\t#kafka_topic: ${18:}",
      "\t#kafka_url: ${19:}",
      "\t#line_token: ${20:}",
      "\t#name: ${21:}",
      "\t#opsgenie_api_key: ${22:}",
      "\t#opsgenie_auto_close: ${23:}",
      "\t#opsgenie_override_priority: ${24:}",
      "\t#opsgenie_url: ${25:}",
      "\t#org_id: ${26:1}",
      "\t#pagerduty_auto_resolve: ${27:}",
      "\t#pagerduty_integration_key: ${28:}",
      "\t#pagerduty_message_in_details: ${29:}",
      "\t#pagerduty_severity: ${30:critical|error|warning|info}",
      "\t#prometheus_password: ${31:}",
      "\t#prometheus_url: ${32:}",
      "\t#prometheus_username: ${33:}",
      "\t#pushover_alert_sound: ${34:}",
      "\t#pushover_api_token: ${35:}",
      "\t#pushover_devices: ${36:}",
      "\t#pushover_expire: ${37:}",
      "\t#pushover_ok_sound: ${38:}",
      "\t#pushover_priority: ${39:emergency|high|normal|low|lowest}",
      "\t#pushover_retry: ${40:}",
      "\t#pushover_user_key: ${41:}",
      "\t#reminder_frequency: ${42:}",
      "\t#sensu_handler: ${43:}",
      "\t#sensu_password: ${44:}",
      "\t#sensu_source: ${45:}",
      "\t#sensu_url: ${46:}",
      "\t#sensu_username: ${47:}",
      "\t#slack_icon_emoji: ${48:}",
      "\t#slack_icon_url: ${49:}",
      "\t#slack_mention_channel: ${50:here|channel}",
      "\t#slack_mention_groups: ${51:}",
      "\t#slack_mention_users: ${52:}",
      "\t#slack_recipient: ${53:}",
      "\t#slack_token: ${54:}",
      "\t#slack_url: ${55:}",
      "\t#slack_username: ${56:}",
      "\t#state: ${57:#present|absent}",
      "\t#teams_url: ${58:}",
      "\t#telegram_bot_token: ${59:}",
      "\t#telegram_chat_id: ${60:}",
      "\t#threema_api_secret: ${61:}",
      "\t#threema_gateway_id: ${62:}",
      "\t#threema_recipient_id: ${63:}",
      "\t#type: ${64:dingding|discord|email|googlechat|hipchat|kafka|line|teams|opsgenie|pagerduty|prometheus|pushover|sensu|slack|telegram|threema|victorops|webhook}",
      "\t#uid: ${65:}",
      "\t#url_password: ${66:admin}",
      "\t#url_username: ${67:admin}",
      "\t#use_proxy: ${68:true}",
      "\t#validate_certs: ${69:true}",
      "\t#victorops_auto_resolve: ${70:}",
      "\t#victorops_url: ${71:}",
      "\t#webhook_http_method: ${72:POST|PUT}",
      "\t#webhook_password: ${73:}",
      "\t#webhook_url: ${74:}",
      "\t#webhook_username: ${75:}"
    ]
  },
  "grafana_organization": {
    "prefix": "grafana_organization",
    "description": "Manage Grafana Organization",
    "body": [
      "community.grafana.grafana_organization:",
      "\tname: ${1:}",
      "\turl: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#url_password: ${6:admin}",
      "\t#url_username: ${7:admin}",
      "\t#use_proxy: ${8:true}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "grafana_organization_user": {
    "prefix": "grafana_organization_user",
    "description": "Manage Grafana Organization Users.",
    "body": [
      "community.grafana.grafana_organization_user:",
      "\tlogin: ${1:}",
      "\turl: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#org_id: ${5:1}",
      "\t#role: ${6:#viewer|editor|admin}",
      "\t#state: ${7:#present|absent}",
      "\t#url_password: ${8:admin}",
      "\t#url_username: ${9:admin}",
      "\t#use_proxy: ${10:true}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "grafana_plugin": {
    "prefix": "grafana_plugin",
    "description": "Manage Grafana plugins via grafana-cli",
    "body": [
      "community.grafana.grafana_plugin:",
      "\tname: ${1:}",
      "\t#grafana_plugin_url: ${2:}",
      "\t#grafana_plugins_dir: ${3:}",
      "\t#grafana_repo: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#validate_certs: ${6:false}",
      "\t#version: ${7:}"
    ]
  },
  "grafana_team": {
    "prefix": "grafana_team",
    "description": "Manage Grafana Teams",
    "body": [
      "community.grafana.grafana_team:",
      "\temail: ${1:}",
      "\tname: ${2:}",
      "\turl: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#enforce_members: ${6:false}",
      "\t#grafana_api_key: ${7:}",
      "\t#members: ${8:}",
      "\t#skip_version_check: ${9:false}",
      "\t#state: ${10:#present|absent}",
      "\t#url_password: ${11:admin}",
      "\t#url_username: ${12:admin}",
      "\t#use_proxy: ${13:true}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "grafana_user": {
    "prefix": "grafana_user",
    "description": "Manage Grafana User",
    "body": [
      "community.grafana.grafana_user:",
      "\tlogin: ${1:}",
      "\turl: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#email: ${5:}",
      "\t#is_admin: ${6:false}",
      "\t#name: ${7:}",
      "\t#password: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#url_password: ${10:admin}",
      "\t#url_username: ${11:admin}",
      "\t#use_proxy: ${12:true}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "virt": {
    "prefix": "virt",
    "description": "Manages virtual machines supported by libvirt",
    "body": [
      "community.libvirt.virt:",
      "\t#autostart: ${1:}",
      "\t#command: ${2:create|define|destroy|freemem|get_xml|info|list_vms|nodeinfo|pause|shutdown|start|status|stop|undefine|unpause|virttype}",
      "\t#flags: ${3:managed_save|snapshots_metadata|nvram|keep_nvram|checkpoints_metadata}",
      "\t#force: ${4:}",
      "\t#mutate_flags: ${5:['#ADD_UUID', 'ADD_MAC_ADDRESSES', 'ADD_MAC_ADDRESSES_FUZZY']}",
      "\t#name: ${6:}",
      "\t#state: ${7:destroyed|paused|running|shutdown}",
      "\t#uri: ${8:qemu:///system}",
      "\t#xml: ${9:}"
    ]
  },
  "virt_net": {
    "prefix": "virt_net",
    "description": "Manage libvirt network configuration",
    "body": [
      "community.libvirt.virt_net:",
      "\t#autostart: ${1:}",
      "\t#command: ${2:define|create|start|stop|destroy|undefine|get_xml|list_nets|facts|info|status|modify}",
      "\t#name: ${3:}",
      "\t#state: ${4:active|inactive|present|absent}",
      "\t#uri: ${5:qemu:///system}",
      "\t#xml: ${6:}"
    ]
  },
  "virt_pool": {
    "prefix": "virt_pool",
    "description": "Manage libvirt storage pools",
    "body": [
      "community.libvirt.virt_pool:",
      "\t#autostart: ${1:}",
      "\t#command: ${2:define|build|create|start|stop|destroy|delete|undefine|get_xml|list_pools|facts|info|status|refresh}",
      "\t#mode: ${3:new|repair|resize|no_overwrite|overwrite|normal|zeroed}",
      "\t#name: ${4:}",
      "\t#state: ${5:active|inactive|present|absent|undefined|deleted}",
      "\t#uri: ${6:qemu:///system}",
      "\t#xml: ${7:}"
    ]
  },
  "a10_server": {
    "prefix": "a10_server",
    "description": "Manage A10 Networks AX/SoftAX/Thunder/vThunder devices' server object.",
    "body": [
      "community.network.a10_server:",
      "\thost: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_name: ${3:}",
      "\tusername: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#force: ${7:false}",
      "\t#force_basic_auth: ${8:false}",
      "\t#http_agent: ${9:ansible-httpget}",
      "\t#partition: ${10:[]}",
      "\t#server_ip: ${11:}",
      "\t#server_ports: ${12:[]}",
      "\t#server_status: ${13:#enabled|disabled}",
      "\t#state: ${14:#present|absent}",
      "\t#url: ${15:}",
      "\t#url_password: ${16:}",
      "\t#url_username: ${17:}",
      "\t#use_gssapi: ${18:false}",
      "\t#use_proxy: ${19:true}",
      "\t#validate_certs: ${20:true}",
      "\t#write_config: ${21:false}"
    ]
  },
  "a10_server_axapi3": {
    "prefix": "a10_server_axapi3",
    "description": "Manage A10 Networks AX/SoftAX/Thunder/vThunder devices",
    "body": [
      "community.network.a10_server_axapi3:",
      "\thost: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_ip: ${3:}",
      "\tserver_name: ${4:}",
      "\tusername: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#force: ${8:false}",
      "\t#force_basic_auth: ${9:false}",
      "\t#http_agent: ${10:ansible-httpget}",
      "\t#operation: ${11:#create|update|remove}",
      "\t#server_ports: ${12:[]}",
      "\t#server_status: ${13:#enable|disable}",
      "\t#url: ${14:}",
      "\t#url_password: ${15:}",
      "\t#url_username: ${16:}",
      "\t#use_gssapi: ${17:false}",
      "\t#use_proxy: ${18:true}",
      "\t#validate_certs: ${19:true}",
      "\t#write_config: ${20:false}"
    ]
  },
  "a10_service_group": {
    "prefix": "a10_service_group",
    "description": "Manage A10 Networks AX/SoftAX/Thunder/vThunder devices' service groups.",
    "body": [
      "community.network.a10_service_group:",
      "\thost: ${1:}",
      "\tpassword: ${2:}",
      "\tservice_group: ${3:}",
      "\tusername: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#force: ${7:false}",
      "\t#force_basic_auth: ${8:false}",
      "\t#http_agent: ${9:ansible-httpget}",
      "\t#partition: ${10:[]}",
      "\t#servers: ${11:[]}",
      "\t#service_group_method: ${12:#round-robin|weighted-rr|least-connection|weighted-least-connection|service-least-connection|service-weighted-least-connection|fastest-response|least-request|round-robin-strict|src-ip-only-hash|src-ip-hash}",
      "\t#service_group_protocol: ${13:#tcp|udp}",
      "\t#state: ${14:#present|absent}",
      "\t#url: ${15:}",
      "\t#url_password: ${16:}",
      "\t#url_username: ${17:}",
      "\t#use_gssapi: ${18:false}",
      "\t#use_proxy: ${19:true}",
      "\t#validate_certs: ${20:true}",
      "\t#write_config: ${21:false}"
    ]
  },
  "a10_virtual_server": {
    "prefix": "a10_virtual_server",
    "description": "Manage A10 Networks AX/SoftAX/Thunder/vThunder devices' virtual servers.",
    "body": [
      "community.network.a10_virtual_server:",
      "\thost: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\tvirtual_server: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#force: ${7:false}",
      "\t#force_basic_auth: ${8:false}",
      "\t#http_agent: ${9:ansible-httpget}",
      "\t#partition: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#url: ${12:}",
      "\t#url_password: ${13:}",
      "\t#url_username: ${14:}",
      "\t#use_gssapi: ${15:false}",
      "\t#use_proxy: ${16:true}",
      "\t#validate_certs: ${17:true}",
      "\t#virtual_server_ip: ${18:}",
      "\t#virtual_server_ports: ${19:}",
      "\t#virtual_server_status: ${20:enabled|disabled}",
      "\t#write_config: ${21:false}"
    ]
  },
  "aireos_command": {
    "prefix": "aireos_command",
    "description": "Run commands on remote devices running Cisco WLC",
    "body": [
      "community.network.aireos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "aireos_config": {
    "prefix": "aireos_config",
    "description": "Manage Cisco WLC configurations",
    "body": [
      "community.network.aireos_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#diff_against: ${5:intended|running}",
      "\t#diff_ignore_lines: ${6:}",
      "\t#intended_config: ${7:}",
      "\t#lines: ${8:}",
      "\t#match: ${9:#line|none}",
      "\t#running_config: ${10:}",
      "\t#save: ${11:false}",
      "\t#save_when: ${12:always|#never|changed}",
      "\t#src: ${13:}"
    ]
  },
  "apconos_command": {
    "prefix": "apconos_command",
    "description": "Run arbitrary commands on APCON devices",
    "body": [
      "community.network.apconos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "aruba_command": {
    "prefix": "aruba_command",
    "description": "Run commands on remote devices running Aruba Mobility Controller",
    "body": [
      "community.network.aruba_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "aruba_config": {
    "prefix": "aruba_config",
    "description": "Manage Aruba configuration sections",
    "body": [
      "community.network.aruba_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#diff_against: ${5:startup|intended|running}",
      "\t#diff_ignore_lines: ${6:}",
      "\t#encrypt: ${7:true}",
      "\t#intended_config: ${8:}",
      "\t#lines: ${9:}",
      "\t#match: ${10:#line|strict|exact|none}",
      "\t#parents: ${11:}",
      "\t#replace: ${12:#line|block}",
      "\t#running_config: ${13:}",
      "\t#save_when: ${14:always|#never|modified|changed}",
      "\t#src: ${15:}"
    ]
  },
  "avi_actiongroupconfig": {
    "prefix": "avi_actiongroupconfig",
    "description": "Module for setup of ActionGroupConfig Avi RESTful Object",
    "body": [
      "community.network.avi_actiongroupconfig:",
      "\texternal_only: ${1:}",
      "\tlevel: ${2:}",
      "\tname: ${3:}",
      "\t#action_script_config_ref: ${4:}",
      "\t#api_context: ${5:}",
      "\t#api_version: ${6:16.4.4}",
      "\t#autoscale_trigger_notification: ${7:}",
      "\t#avi_api_patch_op: ${8:add|replace|delete}",
      "\t#avi_api_update_method: ${9:#put|patch}",
      "\t#avi_credentials: ${10:}",
      "\t#avi_disable_session_cache_as_fact: ${11:false}",
      "\t#controller: ${12:}",
      "\t#description: ${13:}",
      "\t#email_config_ref: ${14:}",
      "\t#password: ${15:}",
      "\t#snmp_trap_profile_ref: ${16:}",
      "\t#state: ${17:absent|#present}",
      "\t#syslog_config_ref: ${18:}",
      "\t#tenant: ${19:admin}",
      "\t#tenant_ref: ${20:}",
      "\t#tenant_uuid: ${21:\"\"}",
      "\t#url: ${22:}",
      "\t#username: ${23:}",
      "\t#uuid: ${24:}"
    ]
  },
  "avi_alertconfig": {
    "prefix": "avi_alertconfig",
    "description": "Module for setup of AlertConfig Avi RESTful Object",
    "body": [
      "community.network.avi_alertconfig:",
      "\talert_rule: ${1:}",
      "\tcategory: ${2:}",
      "\tname: ${3:}",
      "\tsource: ${4:}",
      "\t#action_group_ref: ${5:}",
      "\t#api_context: ${6:}",
      "\t#api_version: ${7:16.4.4}",
      "\t#autoscale_alert: ${8:}",
      "\t#avi_api_patch_op: ${9:add|replace|delete}",
      "\t#avi_api_update_method: ${10:#put|patch}",
      "\t#avi_credentials: ${11:}",
      "\t#avi_disable_session_cache_as_fact: ${12:false}",
      "\t#controller: ${13:}",
      "\t#description: ${14:}",
      "\t#enabled: ${15:}",
      "\t#expiry_time: ${16:}",
      "\t#obj_uuid: ${17:}",
      "\t#object_type: ${18:}",
      "\t#password: ${19:}",
      "\t#recommendation: ${20:}",
      "\t#rolling_window: ${21:}",
      "\t#state: ${22:absent|#present}",
      "\t#summary: ${23:}",
      "\t#tenant: ${24:admin}",
      "\t#tenant_ref: ${25:}",
      "\t#tenant_uuid: ${26:\"\"}",
      "\t#threshold: ${27:}",
      "\t#throttle: ${28:}",
      "\t#url: ${29:}",
      "\t#username: ${30:}",
      "\t#uuid: ${31:}"
    ]
  },
  "avi_alertemailconfig": {
    "prefix": "avi_alertemailconfig",
    "description": "Module for setup of AlertEmailConfig Avi RESTful Object",
    "body": [
      "community.network.avi_alertemailconfig:",
      "\tname: ${1:}",
      "\tto_emails: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#cc_emails: ${9:}",
      "\t#controller: ${10:}",
      "\t#description: ${11:}",
      "\t#password: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_alertscriptconfig": {
    "prefix": "avi_alertscriptconfig",
    "description": "Module for setup of AlertScriptConfig Avi RESTful Object",
    "body": [
      "community.network.avi_alertscriptconfig:",
      "\tname: ${1:}",
      "\t#action_script: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#password: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#tenant: ${12:admin}",
      "\t#tenant_ref: ${13:}",
      "\t#tenant_uuid: ${14:\"\"}",
      "\t#url: ${15:}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}"
    ]
  },
  "avi_alertsyslogconfig": {
    "prefix": "avi_alertsyslogconfig",
    "description": "Module for setup of AlertSyslogConfig Avi RESTful Object",
    "body": [
      "community.network.avi_alertsyslogconfig:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#description: ${9:}",
      "\t#password: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#syslog_servers: ${12:}",
      "\t#tenant: ${13:admin}",
      "\t#tenant_ref: ${14:}",
      "\t#tenant_uuid: ${15:\"\"}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#uuid: ${18:}"
    ]
  },
  "avi_analyticsprofile": {
    "prefix": "avi_analyticsprofile",
    "description": "Module for setup of AnalyticsProfile Avi RESTful Object",
    "body": [
      "community.network.avi_analyticsprofile:",
      "\tname: ${1:}",
      "\t#apdex_response_threshold: ${2:}",
      "\t#apdex_response_tolerated_factor: ${3:}",
      "\t#apdex_rtt_threshold: ${4:}",
      "\t#apdex_rtt_tolerated_factor: ${5:}",
      "\t#apdex_rum_threshold: ${6:}",
      "\t#apdex_rum_tolerated_factor: ${7:}",
      "\t#apdex_server_response_threshold: ${8:}",
      "\t#apdex_server_response_tolerated_factor: ${9:}",
      "\t#apdex_server_rtt_threshold: ${10:}",
      "\t#apdex_server_rtt_tolerated_factor: ${11:}",
      "\t#api_context: ${12:}",
      "\t#api_version: ${13:16.4.4}",
      "\t#avi_api_patch_op: ${14:add|replace|delete}",
      "\t#avi_api_update_method: ${15:#put|patch}",
      "\t#avi_credentials: ${16:}",
      "\t#avi_disable_session_cache_as_fact: ${17:false}",
      "\t#client_log_config: ${18:}",
      "\t#client_log_streaming_config: ${19:}",
      "\t#conn_lossy_ooo_threshold: ${20:}",
      "\t#conn_lossy_timeo_rexmt_threshold: ${21:}",
      "\t#conn_lossy_total_rexmt_threshold: ${22:}",
      "\t#conn_lossy_zero_win_size_event_threshold: ${23:}",
      "\t#conn_server_lossy_ooo_threshold: ${24:}",
      "\t#conn_server_lossy_timeo_rexmt_threshold: ${25:}",
      "\t#conn_server_lossy_total_rexmt_threshold: ${26:}",
      "\t#conn_server_lossy_zero_win_size_event_threshold: ${27:}",
      "\t#controller: ${28:}",
      "\t#description: ${29:}",
      "\t#disable_ondemand_metrics: ${30:}",
      "\t#disable_se_analytics: ${31:}",
      "\t#disable_server_analytics: ${32:}",
      "\t#disable_vs_analytics: ${33:}",
      "\t#enable_advanced_analytics: ${34:}",
      "\t#exclude_client_close_before_request_as_error: ${35:}",
      "\t#exclude_dns_policy_drop_as_significant: ${36:}",
      "\t#exclude_gs_down_as_error: ${37:}",
      "\t#exclude_http_error_codes: ${38:}",
      "\t#exclude_invalid_dns_domain_as_error: ${39:}",
      "\t#exclude_invalid_dns_query_as_error: ${40:}",
      "\t#exclude_no_dns_record_as_error: ${41:}",
      "\t#exclude_no_valid_gs_member_as_error: ${42:}",
      "\t#exclude_persistence_change_as_error: ${43:}",
      "\t#exclude_server_dns_error_as_error: ${44:}",
      "\t#exclude_server_tcp_reset_as_error: ${45:}",
      "\t#exclude_sip_error_codes: ${46:}",
      "\t#exclude_syn_retransmit_as_error: ${47:}",
      "\t#exclude_tcp_reset_as_error: ${48:}",
      "\t#exclude_unsupported_dns_query_as_error: ${49:}",
      "\t#healthscore_max_server_limit: ${50:}",
      "\t#hs_event_throttle_window: ${51:}",
      "\t#hs_max_anomaly_penalty: ${52:}",
      "\t#hs_max_resources_penalty: ${53:}",
      "\t#hs_max_security_penalty: ${54:}",
      "\t#hs_min_dos_rate: ${55:}",
      "\t#hs_performance_boost: ${56:}",
      "\t#hs_pscore_traffic_threshold_l4_client: ${57:}",
      "\t#hs_pscore_traffic_threshold_l4_server: ${58:}",
      "\t#hs_security_certscore_expired: ${59:}",
      "\t#hs_security_certscore_gt30d: ${60:}",
      "\t#hs_security_certscore_le07d: ${61:}",
      "\t#hs_security_certscore_le30d: ${62:}",
      "\t#hs_security_chain_invalidity_penalty: ${63:}",
      "\t#hs_security_cipherscore_eq000b: ${64:}",
      "\t#hs_security_cipherscore_ge128b: ${65:}",
      "\t#hs_security_cipherscore_lt128b: ${66:}",
      "\t#hs_security_encalgo_score_none: ${67:}",
      "\t#hs_security_encalgo_score_rc4: ${68:}",
      "\t#hs_security_hsts_penalty: ${69:}",
      "\t#hs_security_nonpfs_penalty: ${70:}",
      "\t#hs_security_selfsignedcert_penalty: ${71:}",
      "\t#hs_security_ssl30_score: ${72:}",
      "\t#hs_security_tls10_score: ${73:}",
      "\t#hs_security_tls11_score: ${74:}",
      "\t#hs_security_tls12_score: ${75:}",
      "\t#hs_security_weak_signature_algo_penalty: ${76:}",
      "\t#ondemand_metrics_idle_timeout: ${77:}",
      "\t#password: ${78:}",
      "\t#ranges: ${79:}",
      "\t#resp_code_block: ${80:}",
      "\t#sensitive_log_profile: ${81:}",
      "\t#sip_log_depth: ${82:}",
      "\t#state: ${83:absent|#present}",
      "\t#tenant: ${84:admin}",
      "\t#tenant_ref: ${85:}",
      "\t#tenant_uuid: ${86:\"\"}",
      "\t#url: ${87:}",
      "\t#username: ${88:}",
      "\t#uuid: ${89:}"
    ]
  },
  "avi_api_session": {
    "prefix": "avi_api_session",
    "description": "Avi API Module",
    "body": [
      "community.network.avi_api_session:",
      "\thttp_method: ${1:get|put|post|patch|delete}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_credentials: ${4:}",
      "\t#avi_disable_session_cache_as_fact: ${5:false}",
      "\t#controller: ${6:}",
      "\t#data: ${7:}",
      "\t#params: ${8:}",
      "\t#password: ${9:}",
      "\t#path: ${10:}",
      "\t#tenant: ${11:admin}",
      "\t#tenant_uuid: ${12:\"\"}",
      "\t#timeout: ${13:60}",
      "\t#username: ${14:}"
    ]
  },
  "avi_api_version": {
    "prefix": "avi_api_version",
    "description": "Avi API Version Module",
    "body": [
      "community.network.avi_api_version:",
      "\t#api_context: ${1:}",
      "\t#api_version: ${2:16.4.4}",
      "\t#avi_credentials: ${3:}",
      "\t#avi_disable_session_cache_as_fact: ${4:false}",
      "\t#controller: ${5:}",
      "\t#password: ${6:}",
      "\t#tenant: ${7:admin}",
      "\t#tenant_uuid: ${8:\"\"}",
      "\t#username: ${9:}"
    ]
  },
  "avi_applicationpersistenceprofile": {
    "prefix": "avi_applicationpersistenceprofile",
    "description": "Module for setup of ApplicationPersistenceProfile Avi RESTful Object",
    "body": [
      "community.network.avi_applicationpersistenceprofile:",
      "\tname: ${1:}",
      "\tpersistence_type: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#app_cookie_persistence_profile: ${5:}",
      "\t#avi_api_patch_op: ${6:add|replace|delete}",
      "\t#avi_api_update_method: ${7:#put|patch}",
      "\t#avi_credentials: ${8:}",
      "\t#avi_disable_session_cache_as_fact: ${9:false}",
      "\t#controller: ${10:}",
      "\t#description: ${11:}",
      "\t#hdr_persistence_profile: ${12:}",
      "\t#http_cookie_persistence_profile: ${13:}",
      "\t#ip_persistence_profile: ${14:}",
      "\t#is_federated: ${15:}",
      "\t#password: ${16:}",
      "\t#server_hm_down_recovery: ${17:}",
      "\t#state: ${18:absent|#present}",
      "\t#tenant: ${19:admin}",
      "\t#tenant_ref: ${20:}",
      "\t#tenant_uuid: ${21:\"\"}",
      "\t#url: ${22:}",
      "\t#username: ${23:}",
      "\t#uuid: ${24:}"
    ]
  },
  "avi_applicationprofile": {
    "prefix": "avi_applicationprofile",
    "description": "Module for setup of ApplicationProfile Avi RESTful Object",
    "body": [
      "community.network.avi_applicationprofile:",
      "\tname: ${1:}",
      "\ttype: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#cloud_config_cksum: ${9:}",
      "\t#controller: ${10:}",
      "\t#created_by: ${11:}",
      "\t#description: ${12:}",
      "\t#dns_service_profile: ${13:}",
      "\t#dos_rl_profile: ${14:}",
      "\t#http_profile: ${15:}",
      "\t#password: ${16:}",
      "\t#preserve_client_ip: ${17:}",
      "\t#preserve_client_port: ${18:}",
      "\t#sip_service_profile: ${19:}",
      "\t#state: ${20:absent|#present}",
      "\t#tcp_app_profile: ${21:}",
      "\t#tenant: ${22:admin}",
      "\t#tenant_ref: ${23:}",
      "\t#tenant_uuid: ${24:\"\"}",
      "\t#url: ${25:}",
      "\t#username: ${26:}",
      "\t#uuid: ${27:}"
    ]
  },
  "avi_authprofile": {
    "prefix": "avi_authprofile",
    "description": "Module for setup of AuthProfile Avi RESTful Object",
    "body": [
      "community.network.avi_authprofile:",
      "\tname: ${1:}",
      "\ttype: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#description: ${10:}",
      "\t#http: ${11:}",
      "\t#ldap: ${12:}",
      "\t#pa_agent_ref: ${13:}",
      "\t#password: ${14:}",
      "\t#saml: ${15:}",
      "\t#state: ${16:absent|#present}",
      "\t#tacacs_plus: ${17:}",
      "\t#tenant: ${18:admin}",
      "\t#tenant_ref: ${19:}",
      "\t#tenant_uuid: ${20:\"\"}",
      "\t#url: ${21:}",
      "\t#username: ${22:}",
      "\t#uuid: ${23:}"
    ]
  },
  "avi_autoscalelaunchconfig": {
    "prefix": "avi_autoscalelaunchconfig",
    "description": "Module for setup of AutoScaleLaunchConfig Avi RESTful Object",
    "body": [
      "community.network.avi_autoscalelaunchconfig:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#description: ${9:}",
      "\t#image_id: ${10:}",
      "\t#mesos: ${11:}",
      "\t#openstack: ${12:}",
      "\t#password: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#tenant: ${15:admin}",
      "\t#tenant_ref: ${16:}",
      "\t#tenant_uuid: ${17:\"\"}",
      "\t#url: ${18:}",
      "\t#use_external_asg: ${19:}",
      "\t#username: ${20:}",
      "\t#uuid: ${21:}"
    ]
  },
  "avi_backup": {
    "prefix": "avi_backup",
    "description": "Module for setup of Backup Avi RESTful Object",
    "body": [
      "community.network.avi_backup:",
      "\tfile_name: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#backup_config_ref: ${8:}",
      "\t#controller: ${9:}",
      "\t#local_file_url: ${10:}",
      "\t#password: ${11:}",
      "\t#remote_file_url: ${12:}",
      "\t#scheduler_ref: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#tenant: ${15:admin}",
      "\t#tenant_ref: ${16:}",
      "\t#tenant_uuid: ${17:\"\"}",
      "\t#timestamp: ${18:}",
      "\t#url: ${19:}",
      "\t#username: ${20:}",
      "\t#uuid: ${21:}"
    ]
  },
  "avi_backupconfiguration": {
    "prefix": "avi_backupconfiguration",
    "description": "Module for setup of BackupConfiguration Avi RESTful Object",
    "body": [
      "community.network.avi_backupconfiguration:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#aws_access_key: ${8:}",
      "\t#aws_bucket_id: ${9:}",
      "\t#aws_secret_access: ${10:}",
      "\t#backup_file_prefix: ${11:}",
      "\t#backup_passphrase: ${12:}",
      "\t#controller: ${13:}",
      "\t#maximum_backups_stored: ${14:}",
      "\t#password: ${15:}",
      "\t#remote_directory: ${16:}",
      "\t#remote_hostname: ${17:}",
      "\t#save_local: ${18:}",
      "\t#ssh_user_ref: ${19:}",
      "\t#state: ${20:absent|#present}",
      "\t#tenant: ${21:admin}",
      "\t#tenant_ref: ${22:}",
      "\t#tenant_uuid: ${23:\"\"}",
      "\t#upload_to_remote_host: ${24:}",
      "\t#upload_to_s3: ${25:}",
      "\t#url: ${26:}",
      "\t#username: ${27:}",
      "\t#uuid: ${28:}"
    ]
  },
  "avi_certificatemanagementprofile": {
    "prefix": "avi_certificatemanagementprofile",
    "description": "Module for setup of CertificateManagementProfile Avi RESTful Object",
    "body": [
      "community.network.avi_certificatemanagementprofile:",
      "\tname: ${1:}",
      "\tscript_path: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#password: ${10:}",
      "\t#script_params: ${11:}",
      "\t#state: ${12:absent|#present}",
      "\t#tenant: ${13:admin}",
      "\t#tenant_ref: ${14:}",
      "\t#tenant_uuid: ${15:\"\"}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#uuid: ${18:}"
    ]
  },
  "avi_cloud": {
    "prefix": "avi_cloud",
    "description": "Module for setup of Cloud Avi RESTful Object",
    "body": [
      "community.network.avi_cloud:",
      "\tname: ${1:}",
      "\tvtype: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#apic_configuration: ${5:}",
      "\t#apic_mode: ${6:}",
      "\t#autoscale_polling_interval: ${7:}",
      "\t#avi_api_patch_op: ${8:add|replace|delete}",
      "\t#avi_api_update_method: ${9:#put|patch}",
      "\t#avi_credentials: ${10:}",
      "\t#avi_disable_session_cache_as_fact: ${11:false}",
      "\t#aws_configuration: ${12:}",
      "\t#azure_configuration: ${13:}",
      "\t#cloudstack_configuration: ${14:}",
      "\t#controller: ${15:}",
      "\t#custom_tags: ${16:}",
      "\t#dhcp_enabled: ${17:}",
      "\t#dns_provider_ref: ${18:}",
      "\t#docker_configuration: ${19:}",
      "\t#east_west_dns_provider_ref: ${20:}",
      "\t#east_west_ipam_provider_ref: ${21:}",
      "\t#enable_vip_static_routes: ${22:}",
      "\t#gcp_configuration: ${23:}",
      "\t#ip6_autocfg_enabled: ${24:}",
      "\t#ipam_provider_ref: ${25:}",
      "\t#license_tier: ${26:}",
      "\t#license_type: ${27:}",
      "\t#linuxserver_configuration: ${28:}",
      "\t#mesos_configuration: ${29:}",
      "\t#mtu: ${30:}",
      "\t#nsx_configuration: ${31:}",
      "\t#obj_name_prefix: ${32:}",
      "\t#openstack_configuration: ${33:}",
      "\t#oshiftk8s_configuration: ${34:}",
      "\t#password: ${35:}",
      "\t#prefer_static_routes: ${36:}",
      "\t#proxy_configuration: ${37:}",
      "\t#rancher_configuration: ${38:}",
      "\t#state: ${39:absent|#present}",
      "\t#state_based_dns_registration: ${40:}",
      "\t#tenant: ${41:admin}",
      "\t#tenant_ref: ${42:}",
      "\t#tenant_uuid: ${43:\"\"}",
      "\t#url: ${44:}",
      "\t#username: ${45:}",
      "\t#uuid: ${46:}",
      "\t#vca_configuration: ${47:}",
      "\t#vcenter_configuration: ${48:}"
    ]
  },
  "avi_cloudconnectoruser": {
    "prefix": "avi_cloudconnectoruser",
    "description": "Module for setup of CloudConnectorUser Avi RESTful Object",
    "body": [
      "community.network.avi_cloudconnectoruser:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#azure_serviceprincipal: ${8:}",
      "\t#azure_userpass: ${9:}",
      "\t#controller: ${10:}",
      "\t#gcp_credentials: ${11:}",
      "\t#oci_credentials: ${12:}",
      "\t#password: ${13:}",
      "\t#private_key: ${14:}",
      "\t#public_key: ${15:}",
      "\t#state: ${16:absent|#present}",
      "\t#tenant: ${17:admin}",
      "\t#tenant_ref: ${18:}",
      "\t#tenant_uuid: ${19:\"\"}",
      "\t#tencent_credentials: ${20:}",
      "\t#url: ${21:}",
      "\t#username: ${22:}",
      "\t#uuid: ${23:}"
    ]
  },
  "avi_cloudproperties": {
    "prefix": "avi_cloudproperties",
    "description": "Module for setup of CloudProperties Avi RESTful Object",
    "body": [
      "community.network.avi_cloudproperties:",
      "\t#api_context: ${1:}",
      "\t#api_version: ${2:16.4.4}",
      "\t#avi_api_patch_op: ${3:add|replace|delete}",
      "\t#avi_api_update_method: ${4:#put|patch}",
      "\t#avi_credentials: ${5:}",
      "\t#avi_disable_session_cache_as_fact: ${6:false}",
      "\t#cc_props: ${7:}",
      "\t#cc_vtypes: ${8:}",
      "\t#controller: ${9:}",
      "\t#hyp_props: ${10:}",
      "\t#info: ${11:}",
      "\t#password: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_uuid: ${15:\"\"}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#uuid: ${18:}"
    ]
  },
  "avi_cluster": {
    "prefix": "avi_cluster",
    "description": "Module for setup of Cluster Avi RESTful Object",
    "body": [
      "community.network.avi_cluster:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#nodes: ${9:}",
      "\t#password: ${10:}",
      "\t#rejoin_nodes_automatically: ${11:}",
      "\t#state: ${12:absent|#present}",
      "\t#tenant: ${13:admin}",
      "\t#tenant_ref: ${14:}",
      "\t#tenant_uuid: ${15:\"\"}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#uuid: ${18:}",
      "\t#virtual_ip: ${19:}"
    ]
  },
  "avi_clusterclouddetails": {
    "prefix": "avi_clusterclouddetails",
    "description": "Module for setup of ClusterCloudDetails Avi RESTful Object",
    "body": [
      "community.network.avi_clusterclouddetails:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#azure_info: ${8:}",
      "\t#controller: ${9:}",
      "\t#password: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#tenant: ${12:admin}",
      "\t#tenant_ref: ${13:}",
      "\t#tenant_uuid: ${14:\"\"}",
      "\t#url: ${15:}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}"
    ]
  },
  "avi_controllerproperties": {
    "prefix": "avi_controllerproperties",
    "description": "Module for setup of ControllerProperties Avi RESTful Object",
    "body": [
      "community.network.avi_controllerproperties:",
      "\t#allow_ip_forwarding: ${1:}",
      "\t#allow_unauthenticated_apis: ${2:}",
      "\t#allow_unauthenticated_nodes: ${3:}",
      "\t#api_context: ${4:}",
      "\t#api_idle_timeout: ${5:}",
      "\t#api_perf_logging_threshold: ${6:}",
      "\t#api_version: ${7:16.4.4}",
      "\t#appviewx_compat_mode: ${8:}",
      "\t#attach_ip_retry_interval: ${9:}",
      "\t#attach_ip_retry_limit: ${10:}",
      "\t#avi_api_patch_op: ${11:add|replace|delete}",
      "\t#avi_api_update_method: ${12:#put|patch}",
      "\t#avi_credentials: ${13:}",
      "\t#avi_disable_session_cache_as_fact: ${14:false}",
      "\t#bm_use_ansible: ${15:}",
      "\t#cleanup_expired_authtoken_timeout_period: ${16:}",
      "\t#cleanup_sessions_timeout_period: ${17:}",
      "\t#cloud_reconcile: ${18:}",
      "\t#cluster_ip_gratuitous_arp_period: ${19:}",
      "\t#consistency_check_timeout_period: ${20:}",
      "\t#controller: ${21:}",
      "\t#crashed_se_reboot: ${22:}",
      "\t#dead_se_detection_timer: ${23:}",
      "\t#dns_refresh_period: ${24:}",
      "\t#dummy: ${25:}",
      "\t#enable_api_sharding: ${26:}",
      "\t#enable_memory_balancer: ${27:}",
      "\t#fatal_error_lease_time: ${28:}",
      "\t#max_dead_se_in_grp: ${29:}",
      "\t#max_pcap_per_tenant: ${30:}",
      "\t#max_seq_attach_ip_failures: ${31:}",
      "\t#max_seq_vnic_failures: ${32:}",
      "\t#password: ${33:}",
      "\t#persistence_key_rotate_period: ${34:}",
      "\t#portal_token: ${35:}",
      "\t#process_locked_useraccounts_timeout_period: ${36:}",
      "\t#process_pki_profile_timeout_period: ${37:}",
      "\t#query_host_fail: ${38:}",
      "\t#safenet_hsm_version: ${39:}",
      "\t#se_create_timeout: ${40:}",
      "\t#se_failover_attempt_interval: ${41:}",
      "\t#se_from_marketplace: ${42:}",
      "\t#se_offline_del: ${43:}",
      "\t#se_vnic_cooldown: ${44:}",
      "\t#secure_channel_cleanup_timeout: ${45:}",
      "\t#secure_channel_controller_token_timeout: ${46:}",
      "\t#secure_channel_se_token_timeout: ${47:}",
      "\t#seupgrade_fabric_pool_size: ${48:}",
      "\t#seupgrade_segroup_min_dead_timeout: ${49:}",
      "\t#ssl_certificate_expiry_warning_days: ${50:}",
      "\t#state: ${51:absent|#present}",
      "\t#tenant: ${52:admin}",
      "\t#tenant_uuid: ${53:\"\"}",
      "\t#unresponsive_se_reboot: ${54:}",
      "\t#upgrade_dns_ttl: ${55:}",
      "\t#upgrade_lease_time: ${56:}",
      "\t#url: ${57:}",
      "\t#username: ${58:}",
      "\t#uuid: ${59:}",
      "\t#vnic_op_fail_time: ${60:}",
      "\t#vs_apic_scaleout_timeout: ${61:}",
      "\t#vs_awaiting_se_timeout: ${62:}",
      "\t#vs_key_rotate_period: ${63:}",
      "\t#vs_scaleout_ready_check_interval: ${64:}",
      "\t#vs_se_attach_ip_fail: ${65:}",
      "\t#vs_se_bootup_fail: ${66:}",
      "\t#vs_se_create_fail: ${67:}",
      "\t#vs_se_ping_fail: ${68:}",
      "\t#vs_se_vnic_fail: ${69:}",
      "\t#vs_se_vnic_ip_fail: ${70:}",
      "\t#warmstart_se_reconnect_wait_time: ${71:}",
      "\t#warmstart_vs_resync_wait_time: ${72:}"
    ]
  },
  "avi_customipamdnsprofile": {
    "prefix": "avi_customipamdnsprofile",
    "description": "Module for setup of CustomIpamDnsProfile Avi RESTful Object",
    "body": [
      "community.network.avi_customipamdnsprofile:",
      "\tname: ${1:}",
      "\tscript_uri: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#password: ${10:}",
      "\t#script_params: ${11:}",
      "\t#state: ${12:absent|#present}",
      "\t#tenant: ${13:admin}",
      "\t#tenant_ref: ${14:}",
      "\t#tenant_uuid: ${15:\"\"}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#uuid: ${18:}"
    ]
  },
  "avi_dnspolicy": {
    "prefix": "avi_dnspolicy",
    "description": "Module for setup of DnsPolicy Avi RESTful Object",
    "body": [
      "community.network.avi_dnspolicy:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#created_by: ${9:}",
      "\t#description: ${10:}",
      "\t#password: ${11:}",
      "\t#rule: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_errorpagebody": {
    "prefix": "avi_errorpagebody",
    "description": "Module for setup of ErrorPageBody Avi RESTful Object",
    "body": [
      "community.network.avi_errorpagebody:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#error_page_body: ${9:}",
      "\t#format: ${10:}",
      "\t#password: ${11:}",
      "\t#state: ${12:absent|#present}",
      "\t#tenant: ${13:admin}",
      "\t#tenant_ref: ${14:}",
      "\t#tenant_uuid: ${15:\"\"}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#uuid: ${18:}"
    ]
  },
  "avi_errorpageprofile": {
    "prefix": "avi_errorpageprofile",
    "description": "Module for setup of ErrorPageProfile Avi RESTful Object",
    "body": [
      "community.network.avi_errorpageprofile:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#app_name: ${4:}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#company_name: ${9:}",
      "\t#controller: ${10:}",
      "\t#error_pages: ${11:}",
      "\t#host_name: ${12:}",
      "\t#password: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#tenant: ${15:admin}",
      "\t#tenant_ref: ${16:}",
      "\t#tenant_uuid: ${17:\"\"}",
      "\t#url: ${18:}",
      "\t#username: ${19:}",
      "\t#uuid: ${20:}"
    ]
  },
  "avi_gslb": {
    "prefix": "avi_gslb",
    "description": "Module for setup of Gslb Avi RESTful Object",
    "body": [
      "community.network.avi_gslb:",
      "\tleader_cluster_uuid: ${1:}",
      "\tname: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#async_interval: ${5:}",
      "\t#avi_api_patch_op: ${6:add|replace|delete}",
      "\t#avi_api_update_method: ${7:#put|patch}",
      "\t#avi_credentials: ${8:}",
      "\t#avi_disable_session_cache_as_fact: ${9:false}",
      "\t#clear_on_max_retries: ${10:}",
      "\t#client_ip_addr_group: ${11:}",
      "\t#controller: ${12:}",
      "\t#description: ${13:}",
      "\t#dns_configs: ${14:}",
      "\t#is_federated: ${15:}",
      "\t#maintenance_mode: ${16:}",
      "\t#password: ${17:}",
      "\t#send_interval: ${18:}",
      "\t#send_interval_prior_to_maintenance_mode: ${19:}",
      "\t#sites: ${20:}",
      "\t#state: ${21:absent|#present}",
      "\t#tenant: ${22:admin}",
      "\t#tenant_ref: ${23:}",
      "\t#tenant_uuid: ${24:\"\"}",
      "\t#third_party_sites: ${25:}",
      "\t#url: ${26:}",
      "\t#username: ${27:}",
      "\t#uuid: ${28:}",
      "\t#view_id: ${29:}"
    ]
  },
  "avi_gslbgeodbprofile": {
    "prefix": "avi_gslbgeodbprofile",
    "description": "Module for setup of GslbGeoDbProfile Avi RESTful Object",
    "body": [
      "community.network.avi_gslbgeodbprofile:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#description: ${9:}",
      "\t#entries: ${10:}",
      "\t#is_federated: ${11:}",
      "\t#password: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_gslbservice": {
    "prefix": "avi_gslbservice",
    "description": "Module for setup of GslbService Avi RESTful Object",
    "body": [
      "community.network.avi_gslbservice:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#application_persistence_profile_ref: ${4:}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#controller_health_status_enabled: ${10:}",
      "\t#created_by: ${11:}",
      "\t#description: ${12:}",
      "\t#domain_names: ${13:}",
      "\t#down_response: ${14:}",
      "\t#enabled: ${15:}",
      "\t#groups: ${16:}",
      "\t#health_monitor_refs: ${17:}",
      "\t#health_monitor_scope: ${18:}",
      "\t#hm_off: ${19:}",
      "\t#is_federated: ${20:}",
      "\t#min_members: ${21:}",
      "\t#num_dns_ip: ${22:}",
      "\t#password: ${23:}",
      "\t#pool_algorithm: ${24:}",
      "\t#site_persistence_enabled: ${25:}",
      "\t#state: ${26:absent|#present}",
      "\t#tenant: ${27:admin}",
      "\t#tenant_ref: ${28:}",
      "\t#tenant_uuid: ${29:\"\"}",
      "\t#ttl: ${30:}",
      "\t#url: ${31:}",
      "\t#use_edns_client_subnet: ${32:}",
      "\t#username: ${33:}",
      "\t#uuid: ${34:}",
      "\t#wildcard_match: ${35:}"
    ]
  },
  "avi_gslbservice_patch_member": {
    "prefix": "avi_gslbservice_patch_member",
    "description": "Avi API Module",
    "body": [
      "community.network.avi_gslbservice_patch_member:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_credentials: ${4:}",
      "\t#avi_disable_session_cache_as_fact: ${5:false}",
      "\t#controller: ${6:}",
      "\t#data: ${7:}",
      "\t#params: ${8:}",
      "\t#password: ${9:}",
      "\t#state: ${10:absent|#present}",
      "\t#tenant: ${11:admin}",
      "\t#tenant_uuid: ${12:\"\"}",
      "\t#username: ${13:}"
    ]
  },
  "avi_hardwaresecuritymodulegroup": {
    "prefix": "avi_hardwaresecuritymodulegroup",
    "description": "Module for setup of HardwareSecurityModuleGroup Avi RESTful Object",
    "body": [
      "community.network.avi_hardwaresecuritymodulegroup:",
      "\thsm: ${1:}",
      "\tname: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#password: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#tenant: ${12:admin}",
      "\t#tenant_ref: ${13:}",
      "\t#tenant_uuid: ${14:\"\"}",
      "\t#url: ${15:}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}"
    ]
  },
  "avi_healthmonitor": {
    "prefix": "avi_healthmonitor",
    "description": "Module for setup of HealthMonitor Avi RESTful Object",
    "body": [
      "community.network.avi_healthmonitor:",
      "\tname: ${1:}",
      "\ttype: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#description: ${10:}",
      "\t#dns_monitor: ${11:}",
      "\t#external_monitor: ${12:}",
      "\t#failed_checks: ${13:}",
      "\t#http_monitor: ${14:}",
      "\t#https_monitor: ${15:}",
      "\t#is_federated: ${16:}",
      "\t#monitor_port: ${17:}",
      "\t#password: ${18:}",
      "\t#radius_monitor: ${19:}",
      "\t#receive_timeout: ${20:}",
      "\t#send_interval: ${21:}",
      "\t#sip_monitor: ${22:}",
      "\t#state: ${23:absent|#present}",
      "\t#successful_checks: ${24:}",
      "\t#tcp_monitor: ${25:}",
      "\t#tenant: ${26:admin}",
      "\t#tenant_ref: ${27:}",
      "\t#tenant_uuid: ${28:\"\"}",
      "\t#udp_monitor: ${29:}",
      "\t#url: ${30:}",
      "\t#username: ${31:}",
      "\t#uuid: ${32:}"
    ]
  },
  "avi_httppolicyset": {
    "prefix": "avi_httppolicyset",
    "description": "Module for setup of HTTPPolicySet Avi RESTful Object",
    "body": [
      "community.network.avi_httppolicyset:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#cloud_config_cksum: ${8:}",
      "\t#controller: ${9:}",
      "\t#created_by: ${10:}",
      "\t#description: ${11:}",
      "\t#http_request_policy: ${12:}",
      "\t#http_response_policy: ${13:}",
      "\t#http_security_policy: ${14:}",
      "\t#is_internal_policy: ${15:}",
      "\t#password: ${16:}",
      "\t#state: ${17:absent|#present}",
      "\t#tenant: ${18:admin}",
      "\t#tenant_ref: ${19:}",
      "\t#tenant_uuid: ${20:\"\"}",
      "\t#url: ${21:}",
      "\t#username: ${22:}",
      "\t#uuid: ${23:}"
    ]
  },
  "avi_ipaddrgroup": {
    "prefix": "avi_ipaddrgroup",
    "description": "Module for setup of IpAddrGroup Avi RESTful Object",
    "body": [
      "community.network.avi_ipaddrgroup:",
      "\tname: ${1:}",
      "\t#addrs: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#apic_epg_name: ${5:}",
      "\t#avi_api_patch_op: ${6:add|replace|delete}",
      "\t#avi_api_update_method: ${7:#put|patch}",
      "\t#avi_credentials: ${8:}",
      "\t#avi_disable_session_cache_as_fact: ${9:false}",
      "\t#controller: ${10:}",
      "\t#country_codes: ${11:}",
      "\t#description: ${12:}",
      "\t#ip_ports: ${13:}",
      "\t#marathon_app_name: ${14:}",
      "\t#marathon_service_port: ${15:}",
      "\t#password: ${16:}",
      "\t#prefixes: ${17:}",
      "\t#ranges: ${18:}",
      "\t#state: ${19:absent|#present}",
      "\t#tenant: ${20:admin}",
      "\t#tenant_ref: ${21:}",
      "\t#tenant_uuid: ${22:\"\"}",
      "\t#url: ${23:}",
      "\t#username: ${24:}",
      "\t#uuid: ${25:}"
    ]
  },
  "avi_ipamdnsproviderprofile": {
    "prefix": "avi_ipamdnsproviderprofile",
    "description": "Module for setup of IpamDnsProviderProfile Avi RESTful Object",
    "body": [
      "community.network.avi_ipamdnsproviderprofile:",
      "\tname: ${1:}",
      "\ttype: ${2:}",
      "\t#allocate_ip_in_vrf: ${3:}",
      "\t#api_context: ${4:}",
      "\t#api_version: ${5:16.4.4}",
      "\t#avi_api_patch_op: ${6:add|replace|delete}",
      "\t#avi_api_update_method: ${7:#put|patch}",
      "\t#avi_credentials: ${8:}",
      "\t#avi_disable_session_cache_as_fact: ${9:false}",
      "\t#aws_profile: ${10:}",
      "\t#azure_profile: ${11:}",
      "\t#controller: ${12:}",
      "\t#custom_profile: ${13:}",
      "\t#gcp_profile: ${14:}",
      "\t#infoblox_profile: ${15:}",
      "\t#internal_profile: ${16:}",
      "\t#oci_profile: ${17:}",
      "\t#openstack_profile: ${18:}",
      "\t#password: ${19:}",
      "\t#proxy_configuration: ${20:}",
      "\t#state: ${21:absent|#present}",
      "\t#tenant: ${22:admin}",
      "\t#tenant_ref: ${23:}",
      "\t#tenant_uuid: ${24:\"\"}",
      "\t#tencent_profile: ${25:}",
      "\t#url: ${26:}",
      "\t#username: ${27:}",
      "\t#uuid: ${28:}"
    ]
  },
  "avi_l4policyset": {
    "prefix": "avi_l4policyset",
    "description": "Module for setup of L4PolicySet Avi RESTful Object",
    "body": [
      "community.network.avi_l4policyset:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#created_by: ${9:}",
      "\t#description: ${10:}",
      "\t#is_internal_policy: ${11:}",
      "\t#l4_connection_policy: ${12:}",
      "\t#password: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#tenant: ${15:admin}",
      "\t#tenant_ref: ${16:}",
      "\t#tenant_uuid: ${17:\"\"}",
      "\t#url: ${18:}",
      "\t#username: ${19:}",
      "\t#uuid: ${20:}"
    ]
  },
  "avi_microservicegroup": {
    "prefix": "avi_microservicegroup",
    "description": "Module for setup of MicroServiceGroup Avi RESTful Object",
    "body": [
      "community.network.avi_microservicegroup:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#created_by: ${9:}",
      "\t#description: ${10:}",
      "\t#password: ${11:}",
      "\t#service_refs: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_network": {
    "prefix": "avi_network",
    "description": "Module for setup of Network Avi RESTful Object",
    "body": [
      "community.network.avi_network:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#cloud_ref: ${8:}",
      "\t#configured_subnets: ${9:}",
      "\t#controller: ${10:}",
      "\t#dhcp_enabled: ${11:}",
      "\t#exclude_discovered_subnets: ${12:}",
      "\t#ip6_autocfg_enabled: ${13:}",
      "\t#password: ${14:}",
      "\t#state: ${15:absent|#present}",
      "\t#synced_from_se: ${16:}",
      "\t#tenant: ${17:admin}",
      "\t#tenant_ref: ${18:}",
      "\t#tenant_uuid: ${19:\"\"}",
      "\t#url: ${20:}",
      "\t#username: ${21:}",
      "\t#uuid: ${22:}",
      "\t#vcenter_dvs: ${23:}",
      "\t#vimgrnw_ref: ${24:}",
      "\t#vrf_context_ref: ${25:}"
    ]
  },
  "avi_networkprofile": {
    "prefix": "avi_networkprofile",
    "description": "Module for setup of NetworkProfile Avi RESTful Object",
    "body": [
      "community.network.avi_networkprofile:",
      "\tname: ${1:}",
      "\tprofile: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#connection_mirror: ${9:}",
      "\t#controller: ${10:}",
      "\t#description: ${11:}",
      "\t#password: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_networksecuritypolicy": {
    "prefix": "avi_networksecuritypolicy",
    "description": "Module for setup of NetworkSecurityPolicy Avi RESTful Object",
    "body": [
      "community.network.avi_networksecuritypolicy:",
      "\t#api_context: ${1:}",
      "\t#api_version: ${2:16.4.4}",
      "\t#avi_api_patch_op: ${3:add|replace|delete}",
      "\t#avi_api_update_method: ${4:#put|patch}",
      "\t#avi_credentials: ${5:}",
      "\t#avi_disable_session_cache_as_fact: ${6:false}",
      "\t#cloud_config_cksum: ${7:}",
      "\t#controller: ${8:}",
      "\t#created_by: ${9:}",
      "\t#description: ${10:}",
      "\t#name: ${11:}",
      "\t#password: ${12:}",
      "\t#rules: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#tenant: ${15:admin}",
      "\t#tenant_ref: ${16:}",
      "\t#tenant_uuid: ${17:\"\"}",
      "\t#url: ${18:}",
      "\t#username: ${19:}",
      "\t#uuid: ${20:}"
    ]
  },
  "avi_pkiprofile": {
    "prefix": "avi_pkiprofile",
    "description": "Module for setup of PKIProfile Avi RESTful Object",
    "body": [
      "community.network.avi_pkiprofile:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#ca_certs: ${8:}",
      "\t#controller: ${9:}",
      "\t#created_by: ${10:}",
      "\t#crl_check: ${11:}",
      "\t#crls: ${12:}",
      "\t#ignore_peer_chain: ${13:}",
      "\t#is_federated: ${14:}",
      "\t#password: ${15:}",
      "\t#state: ${16:absent|#present}",
      "\t#tenant: ${17:admin}",
      "\t#tenant_ref: ${18:}",
      "\t#tenant_uuid: ${19:\"\"}",
      "\t#url: ${20:}",
      "\t#username: ${21:}",
      "\t#uuid: ${22:}",
      "\t#validate_only_leaf_crl: ${23:}"
    ]
  },
  "avi_pool": {
    "prefix": "avi_pool",
    "description": "Module for setup of Pool Avi RESTful Object",
    "body": [
      "community.network.avi_pool:",
      "\tname: ${1:}",
      "\t#a_pool: ${2:}",
      "\t#ab_pool: ${3:}",
      "\t#ab_priority: ${4:}",
      "\t#analytics_policy: ${5:}",
      "\t#analytics_profile_ref: ${6:}",
      "\t#api_context: ${7:}",
      "\t#api_version: ${8:16.4.4}",
      "\t#apic_epg_name: ${9:}",
      "\t#application_persistence_profile_ref: ${10:}",
      "\t#autoscale_launch_config_ref: ${11:}",
      "\t#autoscale_networks: ${12:}",
      "\t#autoscale_policy_ref: ${13:}",
      "\t#avi_api_patch_op: ${14:add|replace|delete}",
      "\t#avi_api_update_method: ${15:#put|patch}",
      "\t#avi_credentials: ${16:}",
      "\t#avi_disable_session_cache_as_fact: ${17:false}",
      "\t#capacity_estimation: ${18:}",
      "\t#capacity_estimation_ttfb_thresh: ${19:}",
      "\t#cloud_config_cksum: ${20:}",
      "\t#cloud_ref: ${21:}",
      "\t#conn_pool_properties: ${22:}",
      "\t#connection_ramp_duration: ${23:}",
      "\t#controller: ${24:}",
      "\t#created_by: ${25:}",
      "\t#default_server_port: ${26:}",
      "\t#delete_server_on_dns_refresh: ${27:}",
      "\t#description: ${28:}",
      "\t#domain_name: ${29:}",
      "\t#east_west: ${30:}",
      "\t#enabled: ${31:}",
      "\t#external_autoscale_groups: ${32:}",
      "\t#fail_action: ${33:}",
      "\t#fewest_tasks_feedback_delay: ${34:}",
      "\t#graceful_disable_timeout: ${35:}",
      "\t#gslb_sp_enabled: ${36:}",
      "\t#health_monitor_refs: ${37:}",
      "\t#host_check_enabled: ${38:}",
      "\t#inline_health_monitor: ${39:}",
      "\t#ipaddrgroup_ref: ${40:}",
      "\t#lb_algorithm: ${41:}",
      "\t#lb_algorithm_consistent_hash_hdr: ${42:}",
      "\t#lb_algorithm_core_nonaffinity: ${43:}",
      "\t#lb_algorithm_hash: ${44:}",
      "\t#lookup_server_by_name: ${45:}",
      "\t#max_concurrent_connections_per_server: ${46:}",
      "\t#max_conn_rate_per_server: ${47:}",
      "\t#min_health_monitors_up: ${48:}",
      "\t#min_servers_up: ${49:}",
      "\t#networks: ${50:}",
      "\t#nsx_securitygroup: ${51:}",
      "\t#password: ${52:}",
      "\t#pki_profile_ref: ${53:}",
      "\t#placement_networks: ${54:}",
      "\t#prst_hdr_name: ${55:}",
      "\t#request_queue_depth: ${56:}",
      "\t#request_queue_enabled: ${57:}",
      "\t#rewrite_host_header_to_server_name: ${58:}",
      "\t#rewrite_host_header_to_sni: ${59:}",
      "\t#server_auto_scale: ${60:}",
      "\t#server_count: ${61:}",
      "\t#server_name: ${62:}",
      "\t#server_reselect: ${63:}",
      "\t#server_timeout: ${64:}",
      "\t#servers: ${65:}",
      "\t#service_metadata: ${66:}",
      "\t#sni_enabled: ${67:}",
      "\t#ssl_key_and_certificate_ref: ${68:}",
      "\t#ssl_profile_ref: ${69:}",
      "\t#state: ${70:absent|#present}",
      "\t#tenant: ${71:admin}",
      "\t#tenant_ref: ${72:}",
      "\t#tenant_uuid: ${73:\"\"}",
      "\t#url: ${74:}",
      "\t#use_service_port: ${75:}",
      "\t#username: ${76:}",
      "\t#uuid: ${77:}",
      "\t#vrf_ref: ${78:}"
    ]
  },
  "avi_poolgroup": {
    "prefix": "avi_poolgroup",
    "description": "Module for setup of PoolGroup Avi RESTful Object",
    "body": [
      "community.network.avi_poolgroup:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#cloud_config_cksum: ${8:}",
      "\t#cloud_ref: ${9:}",
      "\t#controller: ${10:}",
      "\t#created_by: ${11:}",
      "\t#deployment_policy_ref: ${12:}",
      "\t#description: ${13:}",
      "\t#fail_action: ${14:}",
      "\t#implicit_priority_labels: ${15:}",
      "\t#members: ${16:}",
      "\t#min_servers: ${17:}",
      "\t#password: ${18:}",
      "\t#priority_labels_ref: ${19:}",
      "\t#service_metadata: ${20:}",
      "\t#state: ${21:absent|#present}",
      "\t#tenant: ${22:admin}",
      "\t#tenant_ref: ${23:}",
      "\t#tenant_uuid: ${24:\"\"}",
      "\t#url: ${25:}",
      "\t#username: ${26:}",
      "\t#uuid: ${27:}"
    ]
  },
  "avi_poolgroupdeploymentpolicy": {
    "prefix": "avi_poolgroupdeploymentpolicy",
    "description": "Module for setup of PoolGroupDeploymentPolicy Avi RESTful Object",
    "body": [
      "community.network.avi_poolgroupdeploymentpolicy:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#auto_disable_old_prod_pools: ${4:}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#description: ${10:}",
      "\t#evaluation_duration: ${11:}",
      "\t#password: ${12:}",
      "\t#rules: ${13:}",
      "\t#scheme: ${14:}",
      "\t#state: ${15:absent|#present}",
      "\t#target_test_traffic_ratio: ${16:}",
      "\t#tenant: ${17:admin}",
      "\t#tenant_ref: ${18:}",
      "\t#tenant_uuid: ${19:\"\"}",
      "\t#test_traffic_ratio_rampup: ${20:}",
      "\t#url: ${21:}",
      "\t#username: ${22:}",
      "\t#uuid: ${23:}",
      "\t#webhook_ref: ${24:}"
    ]
  },
  "avi_prioritylabels": {
    "prefix": "avi_prioritylabels",
    "description": "Module for setup of PriorityLabels Avi RESTful Object",
    "body": [
      "community.network.avi_prioritylabels:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#cloud_ref: ${8:}",
      "\t#controller: ${9:}",
      "\t#description: ${10:}",
      "\t#equivalent_labels: ${11:}",
      "\t#password: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_role": {
    "prefix": "avi_role",
    "description": "Module for setup of Role Avi RESTful Object",
    "body": [
      "community.network.avi_role:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#password: ${9:}",
      "\t#privileges: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#tenant: ${12:admin}",
      "\t#tenant_ref: ${13:}",
      "\t#tenant_uuid: ${14:\"\"}",
      "\t#url: ${15:}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}"
    ]
  },
  "avi_scheduler": {
    "prefix": "avi_scheduler",
    "description": "Module for setup of Scheduler Avi RESTful Object",
    "body": [
      "community.network.avi_scheduler:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#backup_config_ref: ${8:}",
      "\t#controller: ${9:}",
      "\t#enabled: ${10:}",
      "\t#end_date_time: ${11:}",
      "\t#frequency: ${12:}",
      "\t#frequency_unit: ${13:}",
      "\t#password: ${14:}",
      "\t#run_mode: ${15:}",
      "\t#run_script_ref: ${16:}",
      "\t#scheduler_action: ${17:}",
      "\t#start_date_time: ${18:}",
      "\t#state: ${19:absent|#present}",
      "\t#tenant: ${20:admin}",
      "\t#tenant_ref: ${21:}",
      "\t#tenant_uuid: ${22:\"\"}",
      "\t#url: ${23:}",
      "\t#username: ${24:}",
      "\t#uuid: ${25:}"
    ]
  },
  "avi_seproperties": {
    "prefix": "avi_seproperties",
    "description": "Module for setup of SeProperties Avi RESTful Object",
    "body": [
      "community.network.avi_seproperties:",
      "\t#api_context: ${1:}",
      "\t#api_version: ${2:16.4.4}",
      "\t#avi_api_patch_op: ${3:add|replace|delete}",
      "\t#avi_api_update_method: ${4:#put|patch}",
      "\t#avi_credentials: ${5:}",
      "\t#avi_disable_session_cache_as_fact: ${6:false}",
      "\t#controller: ${7:}",
      "\t#password: ${8:}",
      "\t#se_agent_properties: ${9:}",
      "\t#se_bootup_properties: ${10:}",
      "\t#se_runtime_properties: ${11:}",
      "\t#state: ${12:absent|#present}",
      "\t#tenant: ${13:admin}",
      "\t#tenant_uuid: ${14:\"\"}",
      "\t#url: ${15:}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}"
    ]
  },
  "avi_serverautoscalepolicy": {
    "prefix": "avi_serverautoscalepolicy",
    "description": "Module for setup of ServerAutoScalePolicy Avi RESTful Object",
    "body": [
      "community.network.avi_serverautoscalepolicy:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#description: ${9:}",
      "\t#intelligent_autoscale: ${10:}",
      "\t#intelligent_scalein_margin: ${11:}",
      "\t#intelligent_scaleout_margin: ${12:}",
      "\t#max_scalein_adjustment_step: ${13:}",
      "\t#max_scaleout_adjustment_step: ${14:}",
      "\t#max_size: ${15:}",
      "\t#min_size: ${16:}",
      "\t#password: ${17:}",
      "\t#scalein_alertconfig_refs: ${18:}",
      "\t#scalein_cooldown: ${19:}",
      "\t#scaleout_alertconfig_refs: ${20:}",
      "\t#scaleout_cooldown: ${21:}",
      "\t#state: ${22:absent|#present}",
      "\t#tenant: ${23:admin}",
      "\t#tenant_ref: ${24:}",
      "\t#tenant_uuid: ${25:\"\"}",
      "\t#url: ${26:}",
      "\t#use_predicted_load: ${27:}",
      "\t#username: ${28:}",
      "\t#uuid: ${29:}"
    ]
  },
  "avi_serviceengine": {
    "prefix": "avi_serviceengine",
    "description": "Module for setup of ServiceEngine Avi RESTful Object",
    "body": [
      "community.network.avi_serviceengine:",
      "\t#api_context: ${1:}",
      "\t#api_version: ${2:16.4.4}",
      "\t#availability_zone: ${3:}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#cloud_ref: ${8:}",
      "\t#container_mode: ${9:}",
      "\t#container_type: ${10:}",
      "\t#controller: ${11:}",
      "\t#controller_created: ${12:}",
      "\t#controller_ip: ${13:}",
      "\t#data_vnics: ${14:}",
      "\t#enable_state: ${15:}",
      "\t#flavor: ${16:}",
      "\t#host_ref: ${17:}",
      "\t#hypervisor: ${18:}",
      "\t#mgmt_vnic: ${19:}",
      "\t#name: ${20:}",
      "\t#password: ${21:}",
      "\t#resources: ${22:}",
      "\t#se_group_ref: ${23:}",
      "\t#state: ${24:absent|#present}",
      "\t#tenant: ${25:admin}",
      "\t#tenant_ref: ${26:}",
      "\t#tenant_uuid: ${27:\"\"}",
      "\t#url: ${28:}",
      "\t#username: ${29:}",
      "\t#uuid: ${30:}"
    ]
  },
  "avi_serviceenginegroup": {
    "prefix": "avi_serviceenginegroup",
    "description": "Module for setup of ServiceEngineGroup Avi RESTful Object",
    "body": [
      "community.network.avi_serviceenginegroup:",
      "\tname: ${1:}",
      "\t#accelerated_networking: ${2:}",
      "\t#active_standby: ${3:}",
      "\t#additional_config_memory: ${4:}",
      "\t#advertise_backend_networks: ${5:}",
      "\t#aggressive_failure_detection: ${6:}",
      "\t#algo: ${7:}",
      "\t#allow_burst: ${8:}",
      "\t#api_context: ${9:}",
      "\t#api_version: ${10:16.4.4}",
      "\t#app_cache_percent: ${11:}",
      "\t#app_learning_memory_percent: ${12:}",
      "\t#archive_shm_limit: ${13:}",
      "\t#async_ssl: ${14:}",
      "\t#async_ssl_threads: ${15:}",
      "\t#auto_rebalance: ${16:}",
      "\t#auto_rebalance_capacity_per_se: ${17:}",
      "\t#auto_rebalance_criteria: ${18:}",
      "\t#auto_rebalance_interval: ${19:}",
      "\t#auto_redistribute_active_standby_load: ${20:}",
      "\t#avi_api_patch_op: ${21:add|replace|delete}",
      "\t#avi_api_update_method: ${22:#put|patch}",
      "\t#avi_credentials: ${23:}",
      "\t#avi_disable_session_cache_as_fact: ${24:false}",
      "\t#bgp_state_update_interval: ${25:}",
      "\t#buffer_se: ${26:}",
      "\t#cloud_ref: ${27:}",
      "\t#config_debugs_on_all_cores: ${28:}",
      "\t#connection_memory_percentage: ${29:}",
      "\t#controller: ${30:}",
      "\t#cpu_reserve: ${31:}",
      "\t#cpu_socket_affinity: ${32:}",
      "\t#custom_securitygroups_data: ${33:}",
      "\t#custom_securitygroups_mgmt: ${34:}",
      "\t#custom_tag: ${35:}",
      "\t#data_network_id: ${36:}",
      "\t#datascript_timeout: ${37:}",
      "\t#dedicated_dispatcher_core: ${38:}",
      "\t#description: ${39:}",
      "\t#disable_avi_securitygroups: ${40:}",
      "\t#disable_csum_offloads: ${41:}",
      "\t#disable_gro: ${42:}",
      "\t#disable_se_memory_check: ${43:}",
      "\t#disable_tso: ${44:}",
      "\t#disk_per_se: ${45:}",
      "\t#distribute_load_active_standby: ${46:}",
      "\t#distribute_queues: ${47:}",
      "\t#enable_hsm_priming: ${48:}",
      "\t#enable_multi_lb: ${49:}",
      "\t#enable_routing: ${50:}",
      "\t#enable_vip_on_all_interfaces: ${51:}",
      "\t#enable_vmac: ${52:}",
      "\t#ephemeral_portrange_end: ${53:}",
      "\t#ephemeral_portrange_start: ${54:}",
      "\t#extra_config_multiplier: ${55:}",
      "\t#extra_shared_config_memory: ${56:}",
      "\t#floating_intf_ip: ${57:}",
      "\t#floating_intf_ip_se_2: ${58:}",
      "\t#flow_table_new_syn_max_entries: ${59:}",
      "\t#free_list_size: ${60:}",
      "\t#ha_mode: ${61:}",
      "\t#hardwaresecuritymodulegroup_ref: ${62:}",
      "\t#heap_minimum_config_memory: ${63:}",
      "\t#hm_on_standby: ${64:}",
      "\t#host_attribute_key: ${65:}",
      "\t#host_attribute_value: ${66:}",
      "\t#host_gateway_monitor: ${67:}",
      "\t#hypervisor: ${68:}",
      "\t#ignore_rtt_threshold: ${69:}",
      "\t#ingress_access_data: ${70:}",
      "\t#ingress_access_mgmt: ${71:}",
      "\t#instance_flavor: ${72:}",
      "\t#iptables: ${73:}",
      "\t#least_load_core_selection: ${74:}",
      "\t#license_tier: ${75:}",
      "\t#license_type: ${76:}",
      "\t#log_disksz: ${77:}",
      "\t#max_cpu_usage: ${78:}",
      "\t#max_memory_per_mempool: ${79:}",
      "\t#max_public_ips_per_lb: ${80:}",
      "\t#max_rules_per_lb: ${81:}",
      "\t#max_scaleout_per_vs: ${82:}",
      "\t#max_se: ${83:}",
      "\t#max_vs_per_se: ${84:}",
      "\t#mem_reserve: ${85:}",
      "\t#memory_for_config_update: ${86:}",
      "\t#memory_per_se: ${87:}",
      "\t#mgmt_network_ref: ${88:}",
      "\t#mgmt_subnet: ${89:}",
      "\t#min_cpu_usage: ${90:}",
      "\t#min_scaleout_per_vs: ${91:}",
      "\t#min_se: ${92:}",
      "\t#minimum_connection_memory: ${93:}",
      "\t#minimum_required_config_memory: ${94:}",
      "\t#n_log_streaming_threads: ${95:}",
      "\t#non_significant_log_throttle: ${96:}",
      "\t#num_dispatcher_cores: ${97:}",
      "\t#num_flow_cores_sum_changes_to_ignore: ${98:}",
      "\t#openstack_availability_zone: ${99:}",
      "\t#openstack_availability_zones: ${100:}",
      "\t#openstack_mgmt_network_name: ${101:}",
      "\t#openstack_mgmt_network_uuid: ${102:}",
      "\t#os_reserved_memory: ${103:}",
      "\t#password: ${104:}",
      "\t#per_app: ${105:}",
      "\t#placement_mode: ${106:}",
      "\t#realtime_se_metrics: ${107:}",
      "\t#reboot_on_stop: ${108:}",
      "\t#se_bandwidth_type: ${109:}",
      "\t#se_deprovision_delay: ${110:}",
      "\t#se_dos_profile: ${111:}",
      "\t#se_dpdk_pmd: ${112:}",
      "\t#se_flow_probe_retries: ${113:}",
      "\t#se_flow_probe_timer: ${114:}",
      "\t#se_ipc_udp_port: ${115:}",
      "\t#se_name_prefix: ${116:}",
      "\t#se_pcap_lookahead: ${117:}",
      "\t#se_pcap_reinit_frequency: ${118:}",
      "\t#se_pcap_reinit_threshold: ${119:}",
      "\t#se_probe_port: ${120:}",
      "\t#se_remote_punt_udp_port: ${121:}",
      "\t#se_routing: ${122:}",
      "\t#se_sb_dedicated_core: ${123:}",
      "\t#se_sb_threads: ${124:}",
      "\t#se_thread_multiplier: ${125:}",
      "\t#se_tracert_port_range: ${126:}",
      "\t#se_tunnel_mode: ${127:}",
      "\t#se_tunnel_udp_port: ${128:}",
      "\t#se_udp_encap_ipc: ${129:}",
      "\t#se_use_dpdk: ${130:}",
      "\t#se_vs_hb_max_pkts_in_batch: ${131:}",
      "\t#se_vs_hb_max_vs_in_pkt: ${132:}",
      "\t#self_se_election: ${133:}",
      "\t#service_ip6_subnets: ${134:}",
      "\t#service_ip_subnets: ${135:}",
      "\t#shm_minimum_config_memory: ${136:}",
      "\t#significant_log_throttle: ${137:}",
      "\t#ssl_preprocess_sni_hostname: ${138:}",
      "\t#state: ${139:absent|#present}",
      "\t#tenant: ${140:admin}",
      "\t#tenant_ref: ${141:}",
      "\t#tenant_uuid: ${142:\"\"}",
      "\t#udf_log_throttle: ${143:}",
      "\t#url: ${144:}",
      "\t#use_standard_alb: ${145:}",
      "\t#username: ${146:}",
      "\t#uuid: ${147:}",
      "\t#vcenter_clusters: ${148:}",
      "\t#vcenter_datastore_mode: ${149:}",
      "\t#vcenter_datastores: ${150:}",
      "\t#vcenter_datastores_include: ${151:}",
      "\t#vcenter_folder: ${152:}",
      "\t#vcenter_hosts: ${153:}",
      "\t#vcpus_per_se: ${154:}",
      "\t#vip_asg: ${155:}",
      "\t#vs_host_redundancy: ${156:}",
      "\t#vs_scalein_timeout: ${157:}",
      "\t#vs_scalein_timeout_for_upgrade: ${158:}",
      "\t#vs_scaleout_timeout: ${159:}",
      "\t#vs_se_scaleout_additional_wait_time: ${160:}",
      "\t#vs_se_scaleout_ready_timeout: ${161:}",
      "\t#vs_switchover_timeout: ${162:}",
      "\t#vss_placement: ${163:}",
      "\t#vss_placement_enabled: ${164:}",
      "\t#waf_learning_interval: ${165:}",
      "\t#waf_learning_memory: ${166:}",
      "\t#waf_mempool: ${167:}",
      "\t#waf_mempool_size: ${168:}"
    ]
  },
  "avi_snmptrapprofile": {
    "prefix": "avi_snmptrapprofile",
    "description": "Module for setup of SnmpTrapProfile Avi RESTful Object",
    "body": [
      "community.network.avi_snmptrapprofile:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#password: ${9:}",
      "\t#state: ${10:absent|#present}",
      "\t#tenant: ${11:admin}",
      "\t#tenant_ref: ${12:}",
      "\t#tenant_uuid: ${13:\"\"}",
      "\t#trap_servers: ${14:}",
      "\t#url: ${15:}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}"
    ]
  },
  "avi_sslkeyandcertificate": {
    "prefix": "avi_sslkeyandcertificate",
    "description": "Module for setup of SSLKeyAndCertificate Avi RESTful Object",
    "body": [
      "community.network.avi_sslkeyandcertificate:",
      "\tcertificate: ${1:}",
      "\tname: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#ca_certs: ${9:}",
      "\t#certificate_base64: ${10:}",
      "\t#certificate_management_profile_ref: ${11:}",
      "\t#controller: ${12:}",
      "\t#created_by: ${13:}",
      "\t#dynamic_params: ${14:}",
      "\t#enckey_base64: ${15:}",
      "\t#enckey_name: ${16:}",
      "\t#format: ${17:}",
      "\t#hardwaresecuritymodulegroup_ref: ${18:}",
      "\t#key: ${19:}",
      "\t#key_base64: ${20:}",
      "\t#key_params: ${21:}",
      "\t#key_passphrase: ${22:}",
      "\t#password: ${23:}",
      "\t#state: ${24:absent|#present}",
      "\t#status: ${25:}",
      "\t#tenant: ${26:admin}",
      "\t#tenant_ref: ${27:}",
      "\t#tenant_uuid: ${28:\"\"}",
      "\t#type: ${29:}",
      "\t#url: ${30:}",
      "\t#username: ${31:}",
      "\t#uuid: ${32:}"
    ]
  },
  "avi_sslprofile": {
    "prefix": "avi_sslprofile",
    "description": "Module for setup of SSLProfile Avi RESTful Object",
    "body": [
      "community.network.avi_sslprofile:",
      "\tname: ${1:}",
      "\t#accepted_ciphers: ${2:}",
      "\t#accepted_versions: ${3:}",
      "\t#api_context: ${4:}",
      "\t#api_version: ${5:16.4.4}",
      "\t#avi_api_patch_op: ${6:add|replace|delete}",
      "\t#avi_api_update_method: ${7:#put|patch}",
      "\t#avi_credentials: ${8:}",
      "\t#avi_disable_session_cache_as_fact: ${9:false}",
      "\t#cipher_enums: ${10:}",
      "\t#controller: ${11:}",
      "\t#description: ${12:}",
      "\t#dhparam: ${13:}",
      "\t#enable_ssl_session_reuse: ${14:}",
      "\t#password: ${15:}",
      "\t#prefer_client_cipher_ordering: ${16:}",
      "\t#send_close_notify: ${17:}",
      "\t#ssl_rating: ${18:}",
      "\t#ssl_session_timeout: ${19:}",
      "\t#state: ${20:absent|#present}",
      "\t#tags: ${21:}",
      "\t#tenant: ${22:admin}",
      "\t#tenant_ref: ${23:}",
      "\t#tenant_uuid: ${24:\"\"}",
      "\t#type: ${25:}",
      "\t#url: ${26:}",
      "\t#username: ${27:}",
      "\t#uuid: ${28:}"
    ]
  },
  "avi_stringgroup": {
    "prefix": "avi_stringgroup",
    "description": "Module for setup of StringGroup Avi RESTful Object",
    "body": [
      "community.network.avi_stringgroup:",
      "\tname: ${1:}",
      "\ttype: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#description: ${10:}",
      "\t#kv: ${11:}",
      "\t#password: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_systemconfiguration": {
    "prefix": "avi_systemconfiguration",
    "description": "Module for setup of SystemConfiguration Avi RESTful Object",
    "body": [
      "community.network.avi_systemconfiguration:",
      "\t#admin_auth_configuration: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#default_license_tier: ${9:}",
      "\t#dns_configuration: ${10:}",
      "\t#dns_virtualservice_refs: ${11:}",
      "\t#docker_mode: ${12:}",
      "\t#email_configuration: ${13:}",
      "\t#global_tenant_config: ${14:}",
      "\t#linux_configuration: ${15:}",
      "\t#mgmt_ip_access_control: ${16:}",
      "\t#ntp_configuration: ${17:}",
      "\t#password: ${18:}",
      "\t#portal_configuration: ${19:}",
      "\t#proxy_configuration: ${20:}",
      "\t#secure_channel_configuration: ${21:}",
      "\t#snmp_configuration: ${22:}",
      "\t#ssh_ciphers: ${23:}",
      "\t#ssh_hmacs: ${24:}",
      "\t#state: ${25:absent|#present}",
      "\t#tenant: ${26:admin}",
      "\t#tenant_uuid: ${27:\"\"}",
      "\t#url: ${28:}",
      "\t#username: ${29:}",
      "\t#uuid: ${30:}",
      "\t#welcome_workflow_complete: ${31:}"
    ]
  },
  "avi_tenant": {
    "prefix": "avi_tenant",
    "description": "Module for setup of Tenant Avi RESTful Object",
    "body": [
      "community.network.avi_tenant:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#config_settings: ${8:}",
      "\t#controller: ${9:}",
      "\t#created_by: ${10:}",
      "\t#description: ${11:}",
      "\t#local: ${12:}",
      "\t#password: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#tenant: ${15:admin}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_trafficcloneprofile": {
    "prefix": "avi_trafficcloneprofile",
    "description": "Module for setup of TrafficCloneProfile Avi RESTful Object",
    "body": [
      "community.network.avi_trafficcloneprofile:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#clone_servers: ${8:}",
      "\t#cloud_ref: ${9:}",
      "\t#controller: ${10:}",
      "\t#password: ${11:}",
      "\t#preserve_client_ip: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}"
    ]
  },
  "avi_user": {
    "prefix": "avi_user",
    "description": "Avi User Module",
    "body": [
      "community.network.avi_user:",
      "\tname: ${1:}",
      "\tobj_password: ${2:}",
      "\tobj_username: ${3:}",
      "\t#access: ${4:}",
      "\t#api_context: ${5:}",
      "\t#api_version: ${6:16.4.4}",
      "\t#avi_api_patch_op: ${7:add|replace|delete}",
      "\t#avi_api_update_method: ${8:post|#put|patch}",
      "\t#avi_credentials: ${9:}",
      "\t#avi_disable_session_cache_as_fact: ${10:false}",
      "\t#controller: ${11:}",
      "\t#default_tenant_ref: ${12:/api/tenant?name=admin}",
      "\t#email: ${13:}",
      "\t#is_active: ${14:}",
      "\t#is_superuser: ${15:}",
      "\t#password: ${16:}",
      "\t#state: ${17:absent|#present}",
      "\t#tenant: ${18:admin}",
      "\t#tenant_uuid: ${19:\"\"}",
      "\t#user_profile_ref: ${20:}",
      "\t#username: ${21:}"
    ]
  },
  "avi_useraccount": {
    "prefix": "avi_useraccount",
    "description": "Avi UserAccount Module",
    "body": [
      "community.network.avi_useraccount:",
      "\t#api_context: ${1:}",
      "\t#api_version: ${2:16.4.4}",
      "\t#avi_credentials: ${3:}",
      "\t#avi_disable_session_cache_as_fact: ${4:false}",
      "\t#controller: ${5:}",
      "\t#force_change: ${6:False}",
      "\t#old_password: ${7:}",
      "\t#password: ${8:}",
      "\t#tenant: ${9:admin}",
      "\t#tenant_uuid: ${10:\"\"}",
      "\t#username: ${11:}"
    ]
  },
  "avi_useraccountprofile": {
    "prefix": "avi_useraccountprofile",
    "description": "Module for setup of UserAccountProfile Avi RESTful Object",
    "body": [
      "community.network.avi_useraccountprofile:",
      "\tname: ${1:}",
      "\t#account_lock_timeout: ${2:}",
      "\t#api_context: ${3:}",
      "\t#api_version: ${4:16.4.4}",
      "\t#avi_api_patch_op: ${5:add|replace|delete}",
      "\t#avi_api_update_method: ${6:#put|patch}",
      "\t#avi_credentials: ${7:}",
      "\t#avi_disable_session_cache_as_fact: ${8:false}",
      "\t#controller: ${9:}",
      "\t#credentials_timeout_threshold: ${10:}",
      "\t#max_concurrent_sessions: ${11:}",
      "\t#max_login_failure_count: ${12:}",
      "\t#max_password_history_count: ${13:}",
      "\t#password: ${14:}",
      "\t#state: ${15:absent|#present}",
      "\t#tenant: ${16:admin}",
      "\t#tenant_uuid: ${17:\"\"}",
      "\t#url: ${18:}",
      "\t#username: ${19:}",
      "\t#uuid: ${20:}"
    ]
  },
  "avi_virtualservice": {
    "prefix": "avi_virtualservice",
    "description": "Module for setup of VirtualService Avi RESTful Object",
    "body": [
      "community.network.avi_virtualservice:",
      "\tname: ${1:}",
      "\t#active_standby_se_tag: ${2:}",
      "\t#allow_invalid_client_cert: ${3:}",
      "\t#analytics_policy: ${4:}",
      "\t#analytics_profile_ref: ${5:}",
      "\t#api_context: ${6:}",
      "\t#api_version: ${7:16.4.4}",
      "\t#apic_contract_graph: ${8:}",
      "\t#application_profile_ref: ${9:}",
      "\t#auto_allocate_floating_ip: ${10:}",
      "\t#auto_allocate_ip: ${11:}",
      "\t#availability_zone: ${12:}",
      "\t#avi_allocated_fip: ${13:}",
      "\t#avi_allocated_vip: ${14:}",
      "\t#avi_api_patch_op: ${15:add|replace|delete}",
      "\t#avi_api_update_method: ${16:#put|patch}",
      "\t#avi_credentials: ${17:}",
      "\t#avi_disable_session_cache_as_fact: ${18:false}",
      "\t#azure_availability_set: ${19:}",
      "\t#bulk_sync_kvcache: ${20:}",
      "\t#client_auth: ${21:}",
      "\t#close_client_conn_on_config_update: ${22:}",
      "\t#cloud_config_cksum: ${23:}",
      "\t#cloud_ref: ${24:}",
      "\t#cloud_type: ${25:}",
      "\t#connections_rate_limit: ${26:}",
      "\t#content_rewrite: ${27:}",
      "\t#controller: ${28:}",
      "\t#created_by: ${29:}",
      "\t#delay_fairness: ${30:}",
      "\t#description: ${31:}",
      "\t#discovered_network_ref: ${32:}",
      "\t#discovered_networks: ${33:}",
      "\t#discovered_subnet: ${34:}",
      "\t#dns_info: ${35:}",
      "\t#dns_policies: ${36:}",
      "\t#east_west_placement: ${37:}",
      "\t#enable_autogw: ${38:}",
      "\t#enable_rhi: ${39:}",
      "\t#enable_rhi_snat: ${40:}",
      "\t#enabled: ${41:}",
      "\t#error_page_profile_ref: ${42:}",
      "\t#floating_ip: ${43:}",
      "\t#floating_subnet_uuid: ${44:}",
      "\t#flow_dist: ${45:}",
      "\t#flow_label_type: ${46:}",
      "\t#fqdn: ${47:}",
      "\t#host_name_xlate: ${48:}",
      "\t#http_policies: ${49:}",
      "\t#ign_pool_net_reach: ${50:}",
      "\t#ip_address: ${51:}",
      "\t#ipam_network_subnet: ${52:}",
      "\t#l4_policies: ${53:}",
      "\t#limit_doser: ${54:}",
      "\t#max_cps_per_client: ${55:}",
      "\t#microservice_ref: ${56:}",
      "\t#min_pools_up: ${57:}",
      "\t#network_profile_ref: ${58:}",
      "\t#network_ref: ${59:}",
      "\t#network_security_policy_ref: ${60:}",
      "\t#nsx_securitygroup: ${61:}",
      "\t#password: ${62:}",
      "\t#performance_limits: ${63:}",
      "\t#pool_group_ref: ${64:}",
      "\t#pool_ref: ${65:}",
      "\t#port_uuid: ${66:}",
      "\t#remove_listening_port_on_vs_down: ${67:}",
      "\t#requests_rate_limit: ${68:}",
      "\t#saml_sp_config: ${69:}",
      "\t#scaleout_ecmp: ${70:}",
      "\t#se_group_ref: ${71:}",
      "\t#security_policy_ref: ${72:}",
      "\t#server_network_profile_ref: ${73:}",
      "\t#service_metadata: ${74:}",
      "\t#service_pool_select: ${75:}",
      "\t#services: ${76:}",
      "\t#sideband_profile: ${77:}",
      "\t#snat_ip: ${78:}",
      "\t#sp_pool_refs: ${79:}",
      "\t#ssl_key_and_certificate_refs: ${80:}",
      "\t#ssl_profile_ref: ${81:}",
      "\t#ssl_profile_selectors: ${82:}",
      "\t#ssl_sess_cache_avg_size: ${83:}",
      "\t#sso_policy: ${84:}",
      "\t#sso_policy_ref: ${85:}",
      "\t#state: ${86:absent|#present}",
      "\t#static_dns_records: ${87:}",
      "\t#subnet: ${88:}",
      "\t#subnet_uuid: ${89:}",
      "\t#tenant: ${90:admin}",
      "\t#tenant_ref: ${91:}",
      "\t#tenant_uuid: ${92:\"\"}",
      "\t#topology_policies: ${93:}",
      "\t#traffic_clone_profile_ref: ${94:}",
      "\t#traffic_enabled: ${95:}",
      "\t#type: ${96:}",
      "\t#url: ${97:}",
      "\t#use_bridge_ip_as_vip: ${98:}",
      "\t#use_vip_as_snat: ${99:}",
      "\t#username: ${100:}",
      "\t#uuid: ${101:}",
      "\t#vh_domain_name: ${102:}",
      "\t#vh_parent_vs_uuid: ${103:}",
      "\t#vip: ${104:}",
      "\t#vrf_context_ref: ${105:}",
      "\t#vs_datascripts: ${106:}",
      "\t#vsvip_cloud_config_cksum: ${107:}",
      "\t#vsvip_ref: ${108:}",
      "\t#waf_policy_ref: ${109:}",
      "\t#weight: ${110:}"
    ]
  },
  "avi_vrfcontext": {
    "prefix": "avi_vrfcontext",
    "description": "Module for setup of VrfContext Avi RESTful Object",
    "body": [
      "community.network.avi_vrfcontext:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#bgp_profile: ${8:}",
      "\t#cloud_ref: ${9:}",
      "\t#controller: ${10:}",
      "\t#debugvrfcontext: ${11:}",
      "\t#description: ${12:}",
      "\t#gateway_mon: ${13:}",
      "\t#internal_gateway_monitor: ${14:}",
      "\t#password: ${15:}",
      "\t#state: ${16:absent|#present}",
      "\t#static_routes: ${17:}",
      "\t#system_default: ${18:}",
      "\t#tenant: ${19:admin}",
      "\t#tenant_ref: ${20:}",
      "\t#tenant_uuid: ${21:\"\"}",
      "\t#url: ${22:}",
      "\t#username: ${23:}",
      "\t#uuid: ${24:}"
    ]
  },
  "avi_vsdatascriptset": {
    "prefix": "avi_vsdatascriptset",
    "description": "Module for setup of VSDataScriptSet Avi RESTful Object",
    "body": [
      "community.network.avi_vsdatascriptset:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#controller: ${8:}",
      "\t#created_by: ${9:}",
      "\t#datascript: ${10:}",
      "\t#description: ${11:}",
      "\t#ipgroup_refs: ${12:}",
      "\t#password: ${13:}",
      "\t#pool_group_refs: ${14:}",
      "\t#pool_refs: ${15:}",
      "\t#protocol_parser_refs: ${16:}",
      "\t#state: ${17:absent|#present}",
      "\t#string_group_refs: ${18:}",
      "\t#tenant: ${19:admin}",
      "\t#tenant_ref: ${20:}",
      "\t#tenant_uuid: ${21:\"\"}",
      "\t#url: ${22:}",
      "\t#username: ${23:}",
      "\t#uuid: ${24:}"
    ]
  },
  "avi_vsvip": {
    "prefix": "avi_vsvip",
    "description": "Module for setup of VsVip Avi RESTful Object",
    "body": [
      "community.network.avi_vsvip:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#cloud_ref: ${8:}",
      "\t#controller: ${9:}",
      "\t#dns_info: ${10:}",
      "\t#east_west_placement: ${11:}",
      "\t#password: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#tenant: ${14:admin}",
      "\t#tenant_ref: ${15:}",
      "\t#tenant_uuid: ${16:\"\"}",
      "\t#url: ${17:}",
      "\t#use_standard_alb: ${18:}",
      "\t#username: ${19:}",
      "\t#uuid: ${20:}",
      "\t#vip: ${21:}",
      "\t#vrf_context_ref: ${22:}",
      "\t#vsvip_cloud_config_cksum: ${23:}"
    ]
  },
  "avi_webhook": {
    "prefix": "avi_webhook",
    "description": "Module for setup of Webhook Avi RESTful Object",
    "body": [
      "community.network.avi_webhook:",
      "\tname: ${1:}",
      "\t#api_context: ${2:}",
      "\t#api_version: ${3:16.4.4}",
      "\t#avi_api_patch_op: ${4:add|replace|delete}",
      "\t#avi_api_update_method: ${5:#put|patch}",
      "\t#avi_credentials: ${6:}",
      "\t#avi_disable_session_cache_as_fact: ${7:false}",
      "\t#callback_url: ${8:}",
      "\t#controller: ${9:}",
      "\t#description: ${10:}",
      "\t#password: ${11:}",
      "\t#state: ${12:absent|#present}",
      "\t#tenant: ${13:admin}",
      "\t#tenant_ref: ${14:}",
      "\t#tenant_uuid: ${15:\"\"}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#uuid: ${18:}",
      "\t#verification_token: ${19:}"
    ]
  },
  "bcf_switch": {
    "prefix": "bcf_switch",
    "description": "Create and remove a bcf switch.",
    "body": [
      "community.network.bcf_switch:",
      "\tcontroller: ${1:}",
      "\tfabric_role: ${2:spine|leaf}",
      "\tmac: ${3:}",
      "\tname: ${4:}",
      "\t#access_token: ${5:}",
      "\t#leaf_group: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "bigmon_chain": {
    "prefix": "bigmon_chain",
    "description": "Create and remove a bigmon inline service chain.",
    "body": [
      "community.network.bigmon_chain:",
      "\tcontroller: ${1:}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#validate_certs: ${5:true}"
    ]
  },
  "bigmon_policy": {
    "prefix": "bigmon_policy",
    "description": "Create and remove a bigmon out-of-band policy.",
    "body": [
      "community.network.bigmon_policy:",
      "\tcontroller: ${1:}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#action: ${4:#forward|drop|flow-gen}",
      "\t#delivery_packet_count: ${5:0}",
      "\t#duration: ${6:0}",
      "\t#policy_description: ${7:}",
      "\t#priority: ${8:100}",
      "\t#start_time: ${9:ansible_date_time.iso8601}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "ce_aaa_server": {
    "prefix": "ce_aaa_server",
    "description": "Manages AAA server global configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_aaa_server:",
      "\t#accounting_mode: ${1:invalid|hwtacacs|radius|#none}",
      "\t#acct_scheme_name: ${2:}",
      "\t#authen_scheme_name: ${3:}",
      "\t#author_scheme_name: ${4:}",
      "\t#domain_name: ${5:}",
      "\t#first_authen_mode: ${6:invalid|#local|hwtacacs|radius|none}",
      "\t#first_author_mode: ${7:invalid|#local|hwtacacs|if-authenticated|none}",
      "\t#hwtacas_template: ${8:}",
      "\t#local_user_group: ${9:}",
      "\t#radius_server_group: ${10:}",
      "\t#state: ${11:absent|#present}"
    ]
  },
  "ce_aaa_server_host": {
    "prefix": "ce_aaa_server_host",
    "description": "Manages AAA server host configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_aaa_server_host:",
      "\t#hwtacacs_is_public_net: ${1:false}",
      "\t#hwtacacs_is_secondary_server: ${2:false}",
      "\t#hwtacacs_server_host_name: ${3:}",
      "\t#hwtacacs_server_ip: ${4:}",
      "\t#hwtacacs_server_ipv6: ${5:}",
      "\t#hwtacacs_server_type: ${6:Authentication|Authorization|Accounting|Common}",
      "\t#hwtacacs_template: ${7:}",
      "\t#hwtacacs_vpn_name: ${8:}",
      "\t#local_ftp_dir: ${9:}",
      "\t#local_password: ${10:}",
      "\t#local_service_type: ${11:}",
      "\t#local_user_group: ${12:}",
      "\t#local_user_level: ${13:}",
      "\t#local_user_name: ${14:}",
      "\t#radius_group_name: ${15:}",
      "\t#radius_server_ip: ${16:}",
      "\t#radius_server_ipv6: ${17:}",
      "\t#radius_server_mode: ${18:Secondary-server|Primary-server}",
      "\t#radius_server_name: ${19:}",
      "\t#radius_server_port: ${20:}",
      "\t#radius_server_type: ${21:Authentication|Accounting}",
      "\t#radius_vpn_name: ${22:}",
      "\t#state: ${23:#present|absent}"
    ]
  },
  "ce_acl": {
    "prefix": "ce_acl",
    "description": "Manages base ACL configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_acl:",
      "\tacl_name: ${1:}",
      "\t#acl_description: ${2:}",
      "\t#acl_num: ${3:}",
      "\t#acl_step: ${4:}",
      "\t#frag_type: ${5:fragment|clear_fragment}",
      "\t#log_flag: ${6:false}",
      "\t#rule_action: ${7:permit|deny}",
      "\t#rule_description: ${8:}",
      "\t#rule_id: ${9:}",
      "\t#rule_name: ${10:}",
      "\t#source_ip: ${11:}",
      "\t#src_mask: ${12:}",
      "\t#state: ${13:#present|absent|delete_acl}",
      "\t#time_range: ${14:}",
      "\t#vrf_name: ${15:}"
    ]
  },
  "ce_acl_advance": {
    "prefix": "ce_acl_advance",
    "description": "Manages advanced ACL configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_acl_advance:",
      "\tacl_name: ${1:}",
      "\t#acl_description: ${2:}",
      "\t#acl_num: ${3:}",
      "\t#acl_step: ${4:}",
      "\t#dest_ip: ${5:}",
      "\t#dest_mask: ${6:}",
      "\t#dest_pool_name: ${7:}",
      "\t#dest_port_begin: ${8:}",
      "\t#dest_port_end: ${9:}",
      "\t#dest_port_op: ${10:lt|eq|gt|range}",
      "\t#dest_port_pool_name: ${11:}",
      "\t#dscp: ${12:}",
      "\t#established: ${13:false}",
      "\t#frag_type: ${14:fragment|clear_fragment}",
      "\t#icmp_code: ${15:}",
      "\t#icmp_name: ${16:unconfiged|echo|echo-reply|fragmentneed-DFset|host-redirect|host-tos-redirect|host-unreachable|information-reply|information-request|net-redirect|net-tos-redirect|net-unreachable|parameter-problem|port-unreachable|protocol-unreachable|reassembly-timeout|source-quench|source-route-failed|timestamp-reply|timestamp-request|ttl-exceeded|address-mask-reply|address-mask-request|custom}",
      "\t#icmp_type: ${17:}",
      "\t#igmp_type: ${18:host-query|mrouter-adver|mrouter-solic|mrouter-termi|mtrace-resp|mtrace-route|v1host-report|v2host-report|v2leave-group|v3host-report}",
      "\t#log_flag: ${19:false}",
      "\t#precedence: ${20:}",
      "\t#protocol: ${21:ip|icmp|igmp|ipinip|tcp|udp|gre|ospf}",
      "\t#rule_action: ${22:permit|deny}",
      "\t#rule_description: ${23:}",
      "\t#rule_id: ${24:}",
      "\t#rule_name: ${25:}",
      "\t#source_ip: ${26:}",
      "\t#src_mask: ${27:}",
      "\t#src_pool_name: ${28:}",
      "\t#src_port_begin: ${29:}",
      "\t#src_port_end: ${30:}",
      "\t#src_port_op: ${31:lt|eq|gt|range}",
      "\t#src_port_pool_name: ${32:}",
      "\t#state: ${33:#present|absent|delete_acl}",
      "\t#syn_flag: ${34:}",
      "\t#tcp_flag_mask: ${35:}",
      "\t#time_range: ${36:}",
      "\t#tos: ${37:}",
      "\t#ttl_expired: ${38:false}",
      "\t#vrf_name: ${39:}"
    ]
  },
  "ce_acl_interface": {
    "prefix": "ce_acl_interface",
    "description": "Manages applying ACLs to interfaces on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_acl_interface:",
      "\tacl_name: ${1:}",
      "\tdirection: ${2:inbound|outbound}",
      "\tinterface: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "ce_bfd_global": {
    "prefix": "ce_bfd_global",
    "description": "Manages BFD global configuration on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_bfd_global:",
      "\t#bfd_enable: ${1:enable|disable}",
      "\t#damp_init_wait_time: ${2:}",
      "\t#damp_max_wait_time: ${3:}",
      "\t#damp_second_wait_time: ${4:}",
      "\t#default_ip: ${5:}",
      "\t#delay_up_time: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#tos_exp_dynamic: ${8:}",
      "\t#tos_exp_static: ${9:}"
    ]
  },
  "ce_bfd_session": {
    "prefix": "ce_bfd_session",
    "description": "Manages BFD session configuration on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_bfd_session:",
      "\tsession_name: ${1:}",
      "\t#addr_type: ${2:ipv4}",
      "\t#create_type: ${3:#static|auto}",
      "\t#dest_addr: ${4:}",
      "\t#local_discr: ${5:}",
      "\t#out_if_name: ${6:}",
      "\t#remote_discr: ${7:}",
      "\t#src_addr: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#use_default_ip: ${10:false}",
      "\t#vrf_name: ${11:}"
    ]
  },
  "ce_bfd_view": {
    "prefix": "ce_bfd_view",
    "description": "Manages BFD session view configuration on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_bfd_view:",
      "\tsession_name: ${1:}",
      "\t#admin_down: ${2:false}",
      "\t#description: ${3:}",
      "\t#detect_multi: ${4:}",
      "\t#local_discr: ${5:}",
      "\t#min_rx_interval: ${6:}",
      "\t#min_tx_interval: ${7:}",
      "\t#remote_discr: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#tos_exp: ${10:}",
      "\t#wtr_interval: ${11:}"
    ]
  },
  "ce_bgp": {
    "prefix": "ce_bgp",
    "description": "Manages BGP configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_bgp:",
      "\t#as_number: ${1:}",
      "\t#as_path_limit: ${2:}",
      "\t#bgp_rid_auto_sel: ${3:#no_use|true|false}",
      "\t#check_first_as: ${4:#no_use|true|false}",
      "\t#clear_interval: ${5:}",
      "\t#confed_id_number: ${6:}",
      "\t#confed_nonstanded: ${7:#no_use|true|false}",
      "\t#confed_peer_as_num: ${8:}",
      "\t#conn_retry_time: ${9:}",
      "\t#default_af_type: ${10:ipv4uni|ipv6uni}",
      "\t#ebgp_if_sensitive: ${11:#no_use|true|false}",
      "\t#gr_peer_reset: ${12:#no_use|true|false}",
      "\t#graceful_restart: ${13:#no_use|true|false}",
      "\t#hold_interval: ${14:}",
      "\t#hold_time: ${15:}",
      "\t#is_shutdown: ${16:#no_use|true|false}",
      "\t#keep_all_routes: ${17:#no_use|true|false}",
      "\t#keepalive_time: ${18:}",
      "\t#memory_limit: ${19:#no_use|true|false}",
      "\t#min_hold_time: ${20:}",
      "\t#router_id: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#suppress_interval: ${23:}",
      "\t#time_wait_for_rib: ${24:}",
      "\t#vrf_name: ${25:}",
      "\t#vrf_rid_auto_sel: ${26:#no_use|true|false}"
    ]
  },
  "ce_bgp_af": {
    "prefix": "ce_bgp_af",
    "description": "Manages BGP Address-family configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_bgp_af:",
      "\taf_type: ${1:ipv4uni|ipv4multi|ipv4vpn|ipv6uni|ipv6vpn|evpn}",
      "\tvrf_name: ${2:}",
      "\t#active_route_advertise: ${3:#no_use|true|false}",
      "\t#add_path_sel_num: ${4:}",
      "\t#allow_invalid_as: ${5:#no_use|true|false}",
      "\t#always_compare_med: ${6:#no_use|true|false}",
      "\t#as_path_neglect: ${7:#no_use|true|false}",
      "\t#auto_frr_enable: ${8:#no_use|true|false}",
      "\t#default_local_pref: ${9:}",
      "\t#default_med: ${10:}",
      "\t#default_rt_import_enable: ${11:#no_use|true|false}",
      "\t#determin_med: ${12:#no_use|true|false}",
      "\t#ebgp_ecmp_nexthop_changed: ${13:#no_use|true|false}",
      "\t#ebgp_if_sensitive: ${14:#no_use|true|false}",
      "\t#ecmp_nexthop_changed: ${15:#no_use|true|false}",
      "\t#ibgp_ecmp_nexthop_changed: ${16:#no_use|true|false}",
      "\t#igp_metric_ignore: ${17:#no_use|true|false}",
      "\t#import_process_id: ${18:}",
      "\t#import_protocol: ${19:direct|ospf|isis|static|rip|ospfv3|ripng}",
      "\t#ingress_lsp_policy_name: ${20:}",
      "\t#load_balancing_as_path_ignore: ${21:#no_use|true|false}",
      "\t#lowest_priority: ${22:#no_use|true|false}",
      "\t#mask_len: ${23:}",
      "\t#max_load_ebgp_num: ${24:}",
      "\t#max_load_ibgp_num: ${25:}",
      "\t#maximum_load_balance: ${26:}",
      "\t#med_none_as_maximum: ${27:#no_use|true|false}",
      "\t#network_address: ${28:}",
      "\t#next_hop_sel_depend_type: ${29:#default|dependTunnel|dependIp}",
      "\t#nexthop_third_party: ${30:#no_use|true|false}",
      "\t#nhp_relay_route_policy_name: ${31:}",
      "\t#originator_prior: ${32:#no_use|true|false}",
      "\t#policy_ext_comm_enable: ${33:#no_use|true|false}",
      "\t#policy_vpn_target: ${34:#no_use|true|false}",
      "\t#preference_external: ${35:}",
      "\t#preference_internal: ${36:}",
      "\t#preference_local: ${37:}",
      "\t#prefrence_policy_name: ${38:}",
      "\t#reflect_between_client: ${39:#no_use|true|false}",
      "\t#reflect_chg_path: ${40:#no_use|true|false}",
      "\t#reflector_cluster_id: ${41:}",
      "\t#reflector_cluster_ipv4: ${42:}",
      "\t#relay_delay_enable: ${43:#no_use|true|false}",
      "\t#rib_only_enable: ${44:#no_use|true|false}",
      "\t#rib_only_policy_name: ${45:}",
      "\t#route_sel_delay: ${46:}",
      "\t#router_id: ${47:}",
      "\t#router_id_neglect: ${48:#no_use|true|false}",
      "\t#rr_filter_number: ${49:}",
      "\t#state: ${50:#present|absent}",
      "\t#summary_automatic: ${51:#no_use|true|false}",
      "\t#supernet_label_adv: ${52:#no_use|true|false}",
      "\t#supernet_uni_adv: ${53:#no_use|true|false}",
      "\t#vrf_rid_auto_sel: ${54:#no_use|true|false}"
    ]
  },
  "ce_bgp_neighbor": {
    "prefix": "ce_bgp_neighbor",
    "description": "Manages BGP peer configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_bgp_neighbor:",
      "\tpeer_addr: ${1:}",
      "\tremote_as: ${2:}",
      "\tvrf_name: ${3:}",
      "\t#conn_retry_time: ${4:}",
      "\t#connect_mode: ${5:}",
      "\t#conventional: ${6:#no_use|true|false}",
      "\t#description: ${7:}",
      "\t#dual_as: ${8:#no_use|true|false}",
      "\t#ebgp_max_hop: ${9:}",
      "\t#fake_as: ${10:}",
      "\t#hold_time: ${11:}",
      "\t#is_bfd_block: ${12:#no_use|true|false}",
      "\t#is_bfd_enable: ${13:#no_use|true|false}",
      "\t#is_ignore: ${14:#no_use|true|false}",
      "\t#is_log_change: ${15:#no_use|true|false}",
      "\t#is_single_hop: ${16:#no_use|true|false}",
      "\t#keep_alive_time: ${17:}",
      "\t#key_chain_name: ${18:}",
      "\t#local_if_name: ${19:}",
      "\t#min_hold_time: ${20:}",
      "\t#mpls_local_ifnet_disable: ${21:#no_use|true|false}",
      "\t#multiplier: ${22:}",
      "\t#prepend_fake_as: ${23:#no_use|true|false}",
      "\t#prepend_global_as: ${24:#no_use|true|false}",
      "\t#pswd_cipher_text: ${25:}",
      "\t#pswd_type: ${26:null|cipher|simple}",
      "\t#route_refresh: ${27:#no_use|true|false}",
      "\t#rx_interval: ${28:}",
      "\t#state: ${29:#present|absent}",
      "\t#tcp_MSS: ${30:}",
      "\t#tx_interval: ${31:}",
      "\t#valid_ttl_hops: ${32:}"
    ]
  },
  "ce_bgp_neighbor_af": {
    "prefix": "ce_bgp_neighbor_af",
    "description": "Manages BGP neighbor Address-family configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_bgp_neighbor_af:",
      "\taf_type: ${1:ipv4uni|ipv4multi|ipv4vpn|ipv6uni|ipv6vpn|evpn}",
      "\tremote_address: ${2:}",
      "\tvrf_name: ${3:}",
      "\t#add_path_mode: ${4:null|receive|send|both}",
      "\t#adv_add_path_num: ${5:}",
      "\t#advertise_arp: ${6:#no_use|true|false}",
      "\t#advertise_community: ${7:#no_use|true|false}",
      "\t#advertise_ext_community: ${8:#no_use|true|false}",
      "\t#advertise_irb: ${9:#no_use|true|false}",
      "\t#advertise_remote_nexthop: ${10:#no_use|true|false}",
      "\t#allow_as_loop_enable: ${11:#no_use|true|false}",
      "\t#allow_as_loop_limit: ${12:}",
      "\t#default_rt_adv_enable: ${13:#no_use|true|false}",
      "\t#default_rt_adv_policy: ${14:}",
      "\t#default_rt_match_mode: ${15:null|matchall|matchany}",
      "\t#discard_ext_community: ${16:#no_use|true|false}",
      "\t#export_acl_name_or_num: ${17:}",
      "\t#export_as_path_filter: ${18:}",
      "\t#export_as_path_name_or_num: ${19:}",
      "\t#export_pref_filt_name: ${20:}",
      "\t#export_rt_policy_name: ${21:}",
      "\t#import_acl_name_or_num: ${22:}",
      "\t#import_as_path_filter: ${23:}",
      "\t#import_as_path_name_or_num: ${24:}",
      "\t#import_pref_filt_name: ${25:}",
      "\t#import_rt_policy_name: ${26:}",
      "\t#ipprefix_orf_enable: ${27:#no_use|true|false}",
      "\t#is_nonstd_ipprefix_mod: ${28:#no_use|true|false}",
      "\t#keep_all_routes: ${29:#no_use|true|false}",
      "\t#nexthop_configure: ${30:null|local|invariable}",
      "\t#orf_mode: ${31:null|receive|send|both}",
      "\t#orftype: ${32:}",
      "\t#origin_as_valid: ${33:#no_use|true|false}",
      "\t#preferred_value: ${34:}",
      "\t#public_as_only: ${35:#no_use|true|false}",
      "\t#public_as_only_force: ${36:#no_use|true|false}",
      "\t#public_as_only_limited: ${37:#no_use|true|false}",
      "\t#public_as_only_replace: ${38:#no_use|true|false}",
      "\t#public_as_only_skip_peer_as: ${39:#no_use|true|false}",
      "\t#redirect_ip: ${40:#no_use|true|false}",
      "\t#redirect_ip_validation: ${41:#no_use|true|false}",
      "\t#reflect_client: ${42:#no_use|true|false}",
      "\t#route_limit: ${43:}",
      "\t#route_limit_idle_timeout: ${44:}",
      "\t#route_limit_percent: ${45:}",
      "\t#route_limit_type: ${46:noparameter|alertOnly|idleForever|idleTimeout}",
      "\t#rt_updt_interval: ${47:}",
      "\t#soostring: ${48:}",
      "\t#substitute_as_enable: ${49:#no_use|true|false}",
      "\t#update_pkt_standard_compatible: ${50:#no_use|true|false}",
      "\t#vpls_ad_disable: ${51:#no_use|true|false}",
      "\t#vpls_enable: ${52:#no_use|true|false}"
    ]
  },
  "ce_command": {
    "prefix": "ce_command",
    "description": "Run arbitrary command on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "ce_config": {
    "prefix": "ce_config",
    "description": "Manage Huawei CloudEngine configuration sections.",
    "body": [
      "community.network.ce_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#config: ${5:}",
      "\t#defaults: ${6:false}",
      "\t#lines: ${7:}",
      "\t#match: ${8:#line|strict|exact|none}",
      "\t#parents: ${9:}",
      "\t#replace: ${10:#line|block}",
      "\t#save: ${11:false}",
      "\t#src: ${12:}"
    ]
  },
  "ce_dldp": {
    "prefix": "ce_dldp",
    "description": "Manages global DLDP configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_dldp:",
      "\t#auth_mode: ${1:md5|simple|sha|hmac-sha256|none}",
      "\t#auth_pwd: ${2:}",
      "\t#enable: ${3:enable|disable}",
      "\t#reset: ${4:enable|disable}",
      "\t#time_internal: ${5:}",
      "\t#work_mode: ${6:enhance|normal}"
    ]
  },
  "ce_dldp_interface": {
    "prefix": "ce_dldp_interface",
    "description": "Manages interface DLDP configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_dldp_interface:",
      "\tinterface: ${1:}",
      "\t#enable: ${2:enable|disable}",
      "\t#local_mac: ${3:}",
      "\t#mode_enable: ${4:enable|disable}",
      "\t#reset: ${5:enable|disable}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "ce_eth_trunk": {
    "prefix": "ce_eth_trunk",
    "description": "Manages Eth-Trunk interfaces on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_eth_trunk:",
      "\ttrunk_id: ${1:}",
      "\t#force: ${2:false}",
      "\t#hash_type: ${3:src-dst-ip|src-dst-mac|enhanced|dst-ip|dst-mac|src-ip|src-mac}",
      "\t#members: ${4:}",
      "\t#min_links: ${5:}",
      "\t#mode: ${6:manual|lacp-dynamic|lacp-static}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "ce_evpn_bd_vni": {
    "prefix": "ce_evpn_bd_vni",
    "description": "Manages EVPN VXLAN Network Identifier (VNI) on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_evpn_bd_vni:",
      "\tbridge_domain_id: ${1:}",
      "\tvpn_target_import: ${2:}",
      "\t#evpn: ${3:#enable|disable}",
      "\t#route_distinguisher: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#vpn_target_both: ${6:}",
      "\t#vpn_target_export: ${7:}"
    ]
  },
  "ce_evpn_bgp": {
    "prefix": "ce_evpn_bgp",
    "description": "Manages BGP EVPN configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_evpn_bgp:",
      "\tbgp_instance: ${1:}",
      "\t#advertise_l2vpn_evpn: ${2:enable|disable}",
      "\t#advertise_router_type: ${3:arp|irb}",
      "\t#as_number: ${4:}",
      "\t#peer_address: ${5:}",
      "\t#peer_enable: ${6:true|false}",
      "\t#peer_group_name: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#vpn_name: ${9:}"
    ]
  },
  "ce_evpn_bgp_rr": {
    "prefix": "ce_evpn_bgp_rr",
    "description": "Manages RR for the VXLAN Network on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_evpn_bgp_rr:",
      "\tas_number: ${1:}",
      "\t#bgp_evpn_enable: ${2:#enable|disable}",
      "\t#bgp_instance: ${3:}",
      "\t#peer: ${4:}",
      "\t#peer_type: ${5:group_name|ipv4_address}",
      "\t#policy_vpn_target: ${6:enable|disable}",
      "\t#reflect_client: ${7:enable|disable}"
    ]
  },
  "ce_evpn_global": {
    "prefix": "ce_evpn_global",
    "description": "Manages global configuration of EVPN on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_evpn_global:",
      "\tevpn_overlay_enable: ${1:enable|disable}"
    ]
  },
  "ce_facts": {
    "prefix": "ce_facts",
    "description": "Gets facts about HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_facts:",
      "\t#gather_subset: ${1:!config}"
    ]
  },
  "ce_file_copy": {
    "prefix": "ce_file_copy",
    "description": "Copy a file to a remote cloudengine device over SCP on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_file_copy:",
      "\tlocal_file: ${1:}",
      "\t#file_system: ${2:flash:}",
      "\t#remote_file: ${3:}"
    ]
  },
  "ce_info_center_debug": {
    "prefix": "ce_info_center_debug",
    "description": "Manages information center debug configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_info_center_debug:",
      "\t#channel_id: ${1:}",
      "\t#debug_enable: ${2:#no_use|true|false}",
      "\t#debug_level: ${3:emergencies|alert|critical|error|warning|notification|informational|debugging}",
      "\t#debug_time_stamp: ${4:date_boot|date_second|date_tenthsecond|date_millisecond|shortdate_second|shortdate_tenthsecond|shortdate_millisecond|formatdate_second|formatdate_tenthsecond|formatdate_millisecond}",
      "\t#module_name: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "ce_info_center_global": {
    "prefix": "ce_info_center_global",
    "description": "Manages outputting logs on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_info_center_global:",
      "\t#channel_cfg_name: ${1:console}",
      "\t#channel_id: ${2:}",
      "\t#channel_name: ${3:}",
      "\t#channel_out_direct: ${4:console|monitor|trapbuffer|logbuffer|snmp|logfile}",
      "\t#facility: ${5:local0|local1|local2|local3|local4|local5|local6|local7}",
      "\t#filter_feature_name: ${6:}",
      "\t#filter_log_name: ${7:}",
      "\t#info_center_enable: ${8:true|false}",
      "\t#ip_type: ${9:ipv4|ipv6}",
      "\t#is_default_vpn: ${10:false}",
      "\t#level: ${11:emergencies|alert|critical|error|warning|notification|informational|debugging}",
      "\t#logfile_max_num: ${12:}",
      "\t#logfile_max_size: ${13:4|8|16|#32}",
      "\t#packet_priority: ${14:}",
      "\t#server_domain: ${15:}",
      "\t#server_ip: ${16:}",
      "\t#server_port: ${17:}",
      "\t#source_ip: ${18:}",
      "\t#ssl_policy_name: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#suppress_enable: ${21:false|true}",
      "\t#timestamp: ${22:UTC|localtime}",
      "\t#transport_mode: ${23:tcp|udp}",
      "\t#vrf_name: ${24:}"
    ]
  },
  "ce_info_center_log": {
    "prefix": "ce_info_center_log",
    "description": "Manages information center log configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_info_center_log:",
      "\t#channel_id: ${1:}",
      "\t#log_buff_enable: ${2:#no_use|true|false}",
      "\t#log_buff_size: ${3:}",
      "\t#log_enable: ${4:#no_use|true|false}",
      "\t#log_level: ${5:emergencies|alert|critical|error|warning|notification|informational|debugging}",
      "\t#log_time_stamp: ${6:date_boot|date_second|date_tenthsecond|date_millisecond|shortdate_second|shortdate_tenthsecond|shortdate_millisecond|formatdate_second|formatdate_tenthsecond|formatdate_millisecond}",
      "\t#module_name: ${7:}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "ce_info_center_trap": {
    "prefix": "ce_info_center_trap",
    "description": "Manages information center trap configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_info_center_trap:",
      "\t#channel_id: ${1:}",
      "\t#module_name: ${2:}",
      "\t#state: ${3:#present|absent}",
      "\t#trap_buff_enable: ${4:#no_use|true|false}",
      "\t#trap_buff_size: ${5:}",
      "\t#trap_enable: ${6:#no_use|true|false}",
      "\t#trap_level: ${7:emergencies|alert|critical|error|warning|notification|informational|debugging}",
      "\t#trap_time_stamp: ${8:date_boot|date_second|date_tenthsecond|date_millisecond|shortdate_second|shortdate_tenthsecond|shortdate_millisecond|formatdate_second|formatdate_tenthsecond|formatdate_millisecond}"
    ]
  },
  "ce_interface": {
    "prefix": "ce_interface",
    "description": "Manages physical attributes of interfaces on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_interface:",
      "\t#admin_state: ${1:up|down}",
      "\t#description: ${2:}",
      "\t#interface: ${3:}",
      "\t#interface_type: ${4:ge|10ge|25ge|4x10ge|40ge|100ge|vlanif|loopback|meth|eth-trunk|nve|tunnel|ethernet|fcoe-port|fabric-port|stack-port|null}",
      "\t#l2sub: ${5:false}",
      "\t#mode: ${6:layer2|layer3}",
      "\t#state: ${7:#present|absent|default}"
    ]
  },
  "ce_interface_ospf": {
    "prefix": "ce_interface_ospf",
    "description": "Manages configuration of an OSPF interface instanceon HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_interface_ospf:",
      "\tarea: ${1:}",
      "\tinterface: ${2:}",
      "\tprocess_id: ${3:}",
      "\t#auth_key_id: ${4:}",
      "\t#auth_mode: ${5:none|null|hmac-sha256|md5|hmac-md5|simple}",
      "\t#auth_text_md5: ${6:}",
      "\t#auth_text_simple: ${7:}",
      "\t#cost: ${8:}",
      "\t#dead_interval: ${9:}",
      "\t#hello_interval: ${10:}",
      "\t#silent_interface: ${11:false}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "ce_ip_interface": {
    "prefix": "ce_ip_interface",
    "description": "Manages L3 attributes for IPv4 and IPv6 interfaces on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_ip_interface:",
      "\tinterface: ${1:}",
      "\t#addr: ${2:}",
      "\t#ipv4_type: ${3:#main|sub}",
      "\t#mask: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#version: ${6:#v4|v6}"
    ]
  },
  "ce_is_is_instance": {
    "prefix": "ce_is_is_instance",
    "description": "Manages isis process id configuration on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_is_is_instance:",
      "\tinstance_id: ${1:}",
      "\t#state: ${2:#present|absent}",
      "\t#vpn_name: ${3:}"
    ]
  },
  "ce_is_is_interface": {
    "prefix": "ce_is_is_interface",
    "description": "Manages isis interface configuration on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_is_is_interface:",
      "\tifname: ${1:}",
      "\tinstance_id: ${2:}",
      "\t#bfdblocken: ${3:}",
      "\t#bfdstaticen: ${4:}",
      "\t#level1cost: ${5:}",
      "\t#level1dispriority: ${6:}",
      "\t#level2cost: ${7:}",
      "\t#level2dispriority: ${8:}",
      "\t#leveltype: ${9:level_1|level_2|level_1_2}",
      "\t#p2pnegotiationmode: ${10:2_way|3_way|3_wayonly}",
      "\t#p2ppeeripignore: ${11:}",
      "\t#ppposicpcheckenable: ${12:}",
      "\t#silentcost: ${13:}",
      "\t#silentenable: ${14:}",
      "\t#snpacheck: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#typep2penable: ${17:}"
    ]
  },
  "ce_is_is_view": {
    "prefix": "ce_is_is_view",
    "description": "Manages isis view configuration on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_is_is_view:",
      "\t#aclnum_or_name: ${1:}",
      "\t#allow_filter: ${2:}",
      "\t#allow_up_down: ${3:}",
      "\t#autocostenable: ${4:}",
      "\t#autocostenablecompatible: ${5:}",
      "\t#avoid_learning: ${6:}",
      "\t#bfd_min_rx: ${7:}",
      "\t#bfd_min_tx: ${8:}",
      "\t#bfd_multiplier_num: ${9:}",
      "\t#cost: ${10:}",
      "\t#cost_type: ${11:external|internal}",
      "\t#coststyle: ${12:narrow|wide|transition|ntransition|wtransition}",
      "\t#defaultmode: ${13:always|matchDefault|matchAny}",
      "\t#description: ${14:}",
      "\t#enablelevel1tolevel2: ${15:}",
      "\t#export_aclnumorname: ${16:}",
      "\t#export_ipprefix: ${17:}",
      "\t#export_policytype: ${18:aclNumOrName|ipPrefix|routePolicy}",
      "\t#export_processid: ${19:}",
      "\t#export_protocol: ${20:direct|ospf|isis|static|rip|bgp|ospfv3|all}",
      "\t#export_routepolicyname: ${21:}",
      "\t#import_aclnumorname: ${22:}",
      "\t#import_cost: ${23:}",
      "\t#import_ipprefix: ${24:}",
      "\t#import_route_policy: ${25:}",
      "\t#import_routepolicy_name: ${26:}",
      "\t#import_routepolicyname: ${27:}",
      "\t#import_tag: ${28:}",
      "\t#impotr_leveltype: ${29:level_1|level_2|level_1_2}",
      "\t#inheritcost: ${30:}",
      "\t#instance_id: ${31:}",
      "\t#ip_address: ${32:}",
      "\t#ip_prefix_name: ${33:}",
      "\t#islevel: ${34:level_1|level_2|level_1_2}",
      "\t#level_type: ${35:level_1|level_2|level_1_2}",
      "\t#max_load: ${36:}",
      "\t#mode_routepolicyname: ${37:}",
      "\t#mode_tag: ${38:}",
      "\t#netentity: ${39:}",
      "\t#penetration_direct: ${40:level2-level1|level1-level2}",
      "\t#permitibgp: ${41:}",
      "\t#preference_value: ${42:}",
      "\t#processid: ${43:}",
      "\t#protocol: ${44:direct|ospf|isis|static|rip|bgp|ospfv3|all}",
      "\t#relaxspfLimit: ${45:}",
      "\t#route_policy_name: ${46:}",
      "\t#state: ${47:#present|absent}",
      "\t#stdbandwidth: ${48:}",
      "\t#stdlevel1cost: ${49:}",
      "\t#stdlevel2cost: ${50:}",
      "\t#tag: ${51:}",
      "\t#weight: ${52:}"
    ]
  },
  "ce_lacp": {
    "prefix": "ce_lacp",
    "description": "Manages Eth-Trunk interfaces on HUAWEI CloudEngine switches",
    "body": [
      "community.network.ce_lacp:",
      "\t#collector_delay: ${1:}",
      "\t#fast_timeout: ${2:}",
      "\t#global_priority: ${3:}",
      "\t#max_active_linknumber: ${4:}",
      "\t#mixed_rate_link_enable: ${5:}",
      "\t#mode: ${6:Manual|Dynamic|Static}",
      "\t#port_id_extension_enable: ${7:}",
      "\t#preempt_delay: ${8:}",
      "\t#preempt_enable: ${9:}",
      "\t#priority: ${10:}",
      "\t#select: ${11:Speed|Prority}",
      "\t#state: ${12:#present|absent}",
      "\t#state_flapping: ${13:}",
      "\t#system_id: ${14:}",
      "\t#timeout_type: ${15:Slow|Fast}",
      "\t#trunk_id: ${16:}",
      "\t#unexpected_mac_disable: ${17:}"
    ]
  },
  "ce_link_status": {
    "prefix": "ce_link_status",
    "description": "Get interface link status on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_link_status:",
      "\tinterface: ${1:}"
    ]
  },
  "ce_lldp": {
    "prefix": "ce_lldp",
    "description": "Manages LLDP configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_lldp:",
      "\t#bind_name: ${1:}",
      "\t#fast_count: ${2:}",
      "\t#hold_multiplier: ${3:}",
      "\t#interval: ${4:}",
      "\t#lldpenable: ${5:enabled|disabled}",
      "\t#management_address: ${6:}",
      "\t#mdn_notification_interval: ${7:}",
      "\t#mdnstatus: ${8:rxOnly|disabled}",
      "\t#notification_interval: ${9:}",
      "\t#restart_delay: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#transmit_delay: ${12:}"
    ]
  },
  "ce_lldp_interface": {
    "prefix": "ce_lldp_interface",
    "description": "Manages INTERFACE LLDP configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_lldp_interface:",
      "\t#dcbx: ${1:}",
      "\t#eee: ${2:}",
      "\t#function_lldp_interface_flag: ${3:disableINTERFACE|tlvdisableINTERFACE|tlvenableINTERFACE|intervalINTERFACE}",
      "\t#ifname: ${4:}",
      "\t#linkaggretxenable: ${5:}",
      "\t#lldpadminstatus: ${6:txOnly|rxOnly|txAndRx|disabled}",
      "\t#lldpenable: ${7:enabled|disabled}",
      "\t#macphytxenable: ${8:}",
      "\t#manaddrtxenable: ${9:}",
      "\t#maxframetxenable: ${10:}",
      "\t#portdesctxenable: ${11:}",
      "\t#portvlantxenable: ${12:}",
      "\t#protoidtxenable: ${13:}",
      "\t#protovlantxenable: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#syscaptxenable: ${16:}",
      "\t#sysdesctxenable: ${17:}",
      "\t#sysnametxenable: ${18:}",
      "\t#txinterval: ${19:}",
      "\t#txprotocolvlanid: ${20:}",
      "\t#txvlannameid: ${21:}",
      "\t#type_tlv_disable: ${22:basic_tlv|dot3_tlv}",
      "\t#type_tlv_enable: ${23:dot1_tlv|dcbx}",
      "\t#vlannametxenable: ${24:}"
    ]
  },
  "ce_mdn_interface": {
    "prefix": "ce_mdn_interface",
    "description": "Manages MDN configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_mdn_interface:",
      "\t#ifname: ${1:}",
      "\t#lldpenable: ${2:enabled|disabled}",
      "\t#mdnstatus: ${3:rxOnly|disabled}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "ce_mlag_config": {
    "prefix": "ce_mlag_config",
    "description": "Manages MLAG configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_mlag_config:",
      "\t#dfs_group_id: ${1:present}",
      "\t#eth_trunk_id: ${2:}",
      "\t#ip_address: ${3:}",
      "\t#nickname: ${4:}",
      "\t#peer_link_id: ${5:}",
      "\t#priority_id: ${6:}",
      "\t#pseudo_nickname: ${7:}",
      "\t#pseudo_priority: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#vpn_instance_name: ${10:}"
    ]
  },
  "ce_mlag_interface": {
    "prefix": "ce_mlag_interface",
    "description": "Manages MLAG interfaces on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_mlag_interface:",
      "\t#dfs_group_id: ${1:present}",
      "\t#eth_trunk_id: ${2:}",
      "\t#interface: ${3:}",
      "\t#mlag_error_down: ${4:enable|disable}",
      "\t#mlag_id: ${5:}",
      "\t#mlag_priority_id: ${6:}",
      "\t#mlag_system_id: ${7:}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "ce_mtu": {
    "prefix": "ce_mtu",
    "description": "Manages MTU settings on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_mtu:",
      "\t#interface: ${1:}",
      "\t#jumbo_max: ${2:}",
      "\t#jumbo_min: ${3:}",
      "\t#mtu: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "ce_multicast_global": {
    "prefix": "ce_multicast_global",
    "description": "Manages multicast global configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_multicast_global:",
      "\taftype: ${1:v4|v6}",
      "\t#state: ${2:#present|absent}",
      "\t#vrf: ${3:}"
    ]
  },
  "ce_multicast_igmp_enable": {
    "prefix": "ce_multicast_igmp_enable",
    "description": "Manages multicast igmp enable configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_multicast_igmp_enable:",
      "\taftype: ${1:v4|v6}",
      "\tfeatures: ${2:global|vlan}",
      "\t#igmp: ${3:false}",
      "\t#proxy: ${4:false}",
      "\t#state: ${5:#present|absent}",
      "\t#version: ${6:2}",
      "\t#vlan_id: ${7:}"
    ]
  },
  "ce_netconf": {
    "prefix": "ce_netconf",
    "description": "Run an arbitrary netconf command on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_netconf:",
      "\tcfg_xml: ${1:}",
      "\trpc: ${2:get|edit-config|execute-action|execute-cli}"
    ]
  },
  "ce_netstream_aging": {
    "prefix": "ce_netstream_aging",
    "description": "Manages timeout mode of NetStream on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_netstream_aging:",
      "\t#manual_slot: ${1:}",
      "\t#state: ${2:#present|absent}",
      "\t#timeout_interval: ${3:30}",
      "\t#timeout_type: ${4:active|inactive|tcp-session|manual}",
      "\t#type: ${5:ip|vxlan}"
    ]
  },
  "ce_netstream_export": {
    "prefix": "ce_netstream_export",
    "description": "Manages netstream export on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_netstream_export:",
      "\ttype: ${1:ip|vxlan}",
      "\t#as_option: ${2:origin|peer}",
      "\t#bgp_nexthop: ${3:enable|#disable}",
      "\t#host_ip: ${4:}",
      "\t#host_port: ${5:}",
      "\t#host_vpn: ${6:}",
      "\t#source_ip: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#version: ${9:5|9}"
    ]
  },
  "ce_netstream_global": {
    "prefix": "ce_netstream_global",
    "description": "Manages global parameters of NetStream on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_netstream_global:",
      "\tinterface: ${1:}",
      "\t#index_switch: ${2:#16|32}",
      "\t#sampler_direction: ${3:inbound|outbound}",
      "\t#sampler_interval: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#statistics_direction: ${6:inbound|outbound}",
      "\t#statistics_record: ${7:}",
      "\t#type: ${8:#ip|vxlan}"
    ]
  },
  "ce_netstream_template": {
    "prefix": "ce_netstream_template",
    "description": "Manages NetStream template configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_netstream_template:",
      "\ttype: ${1:ip|vxlan}",
      "\t#collect_counter: ${2:bytes|packets}",
      "\t#collect_interface: ${3:input|output}",
      "\t#description: ${4:}",
      "\t#match: ${5:destination-address|destination-port|tos|protocol|source-address|source-port}",
      "\t#record_name: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "ce_ntp": {
    "prefix": "ce_ntp",
    "description": "Manages core NTP configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_ntp:",
      "\t#is_preferred: ${1:enable|disable}",
      "\t#key_id: ${2:}",
      "\t#peer: ${3:}",
      "\t#server: ${4:}",
      "\t#source_int: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#vpn_name: ${7:_public_}"
    ]
  },
  "ce_ntp_auth": {
    "prefix": "ce_ntp_auth",
    "description": "Manages NTP authentication configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_ntp_auth:",
      "\tkey_id: ${1:}",
      "\t#auth_mode: ${2:hmac-sha256|md5}",
      "\t#auth_pwd: ${3:}",
      "\t#auth_type: ${4:text|#encrypt}",
      "\t#authentication: ${5:enable|disable}",
      "\t#state: ${6:#present|absent}",
      "\t#trusted_key: ${7:enable|#disable}"
    ]
  },
  "ce_ospf": {
    "prefix": "ce_ospf",
    "description": "Manages configuration of an OSPF instance on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_ospf:",
      "\tprocess_id: ${1:}",
      "\t#addr: ${2:}",
      "\t#area: ${3:}",
      "\t#auth_key_id: ${4:}",
      "\t#auth_mode: ${5:none|hmac-sha256|md5|hmac-md5|simple}",
      "\t#auth_text_md5: ${6:}",
      "\t#auth_text_simple: ${7:}",
      "\t#mask: ${8:}",
      "\t#max_load_balance: ${9:}",
      "\t#nexthop_addr: ${10:}",
      "\t#nexthop_weight: ${11:}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "ce_ospf_vrf": {
    "prefix": "ce_ospf_vrf",
    "description": "Manages configuration of an OSPF VPN instance on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_ospf_vrf:",
      "\tospf: ${1:}",
      "\t#bandwidth: ${2:}",
      "\t#description: ${3:}",
      "\t#lsaaholdinterval: ${4:}",
      "\t#lsaainterval: ${5:}",
      "\t#lsaalflag: ${6:false}",
      "\t#lsaamaxinterval: ${7:}",
      "\t#lsaastartinterval: ${8:}",
      "\t#lsaoholdinterval: ${9:}",
      "\t#lsaointerval: ${10:}",
      "\t#lsaointervalflag: ${11:false}",
      "\t#lsaomaxinterval: ${12:}",
      "\t#lsaostartinterval: ${13:}",
      "\t#route_id: ${14:}",
      "\t#spfholdinterval: ${15:}",
      "\t#spfinterval: ${16:}",
      "\t#spfintervalmi: ${17:}",
      "\t#spfintervaltype: ${18:#intelligent-timer|timer|millisecond}",
      "\t#spfmaxinterval: ${19:}",
      "\t#spfstartinterval: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#vrf: ${22:_public_}"
    ]
  },
  "ce_reboot": {
    "prefix": "ce_reboot",
    "description": "Reboot a HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_reboot:",
      "\tconfirm: ${1:}",
      "\t#save_config: ${2:false}"
    ]
  },
  "ce_rollback": {
    "prefix": "ce_rollback",
    "description": "Set a checkpoint or rollback to a checkpoint on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_rollback:",
      "\taction: ${1:rollback|clear|set|display|commit}",
      "\t#commit_id: ${2:}",
      "\t#filename: ${3:}",
      "\t#label: ${4:}",
      "\t#last: ${5:}",
      "\t#oldest: ${6:}"
    ]
  },
  "ce_sflow": {
    "prefix": "ce_sflow",
    "description": "Manages sFlow configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_sflow:",
      "\t#agent_ip: ${1:}",
      "\t#collector_datagram_size: ${2:}",
      "\t#collector_description: ${3:}",
      "\t#collector_id: ${4:1|2}",
      "\t#collector_ip: ${5:}",
      "\t#collector_ip_vpn: ${6:}",
      "\t#collector_meth: ${7:meth|enhanced}",
      "\t#collector_udp_port: ${8:}",
      "\t#counter_collector: ${9:}",
      "\t#counter_interval: ${10:}",
      "\t#export_route: ${11:enable|disable}",
      "\t#sample_collector: ${12:}",
      "\t#sample_direction: ${13:inbound|outbound|both}",
      "\t#sample_length: ${14:}",
      "\t#sample_rate: ${15:}",
      "\t#sflow_interface: ${16:}",
      "\t#source_ip: ${17:}",
      "\t#state: ${18:#present|absent}"
    ]
  },
  "ce_snmp_community": {
    "prefix": "ce_snmp_community",
    "description": "Manages SNMP community configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_snmp_community:",
      "\t#access_right: ${1:read|write}",
      "\t#acl_number: ${2:}",
      "\t#community_mib_view: ${3:}",
      "\t#community_name: ${4:}",
      "\t#group_name: ${5:}",
      "\t#notify_view: ${6:}",
      "\t#read_view: ${7:}",
      "\t#security_level: ${8:noAuthNoPriv|authentication|privacy}",
      "\t#state: ${9:#present|absent}",
      "\t#write_view: ${10:}"
    ]
  },
  "ce_snmp_contact": {
    "prefix": "ce_snmp_contact",
    "description": "Manages SNMP contact configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_snmp_contact:",
      "\tcontact: ${1:}",
      "\t#state: ${2:#present|absent}"
    ]
  },
  "ce_snmp_location": {
    "prefix": "ce_snmp_location",
    "description": "Manages SNMP location configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_snmp_location:",
      "\tlocation: ${1:}",
      "\t#state: ${2:#present|absent}"
    ]
  },
  "ce_snmp_target_host": {
    "prefix": "ce_snmp_target_host",
    "description": "Manages SNMP target host configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_snmp_target_host:",
      "\t#address: ${1:}",
      "\t#connect_port: ${2:}",
      "\t#host_name: ${3:}",
      "\t#interface_name: ${4:}",
      "\t#is_public_net: ${5:#no_use|true|false}",
      "\t#notify_type: ${6:trap|inform}",
      "\t#recv_port: ${7:}",
      "\t#security_level: ${8:noAuthNoPriv|authentication|privacy}",
      "\t#security_model: ${9:v1|v2c|v3}",
      "\t#security_name: ${10:}",
      "\t#security_name_v3: ${11:}",
      "\t#version: ${12:none|v1|v2c|v3|v1v2c|v1v3|v2cv3|all}",
      "\t#vpn_name: ${13:}"
    ]
  },
  "ce_snmp_traps": {
    "prefix": "ce_snmp_traps",
    "description": "Manages SNMP traps configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_snmp_traps:",
      "\t#feature_name: ${1:aaa|arp|bfd|bgp|cfg|configuration|dad|devm|dhcpsnp|dldp|driver|efm|erps|error-down|fcoe|fei|fei_comm|fm|ifnet|info|ipsg|ipv6|isis|l3vpn|lacp|lcs|ldm|ldp|ldt|lldp|mpls_lspm|msdp|mstp|nd|netconf|nqa|nvo3|openflow|ospf|ospfv3|pim|pim-std|qos|radius|rm|rmon|securitytrap|smlktrap|snmp|ssh|stackmng|sysclock|sysom|system|tcp|telnet|trill|trunk|tty|vbst|vfs|virtual-perception|vrrp|vstm|all}",
      "\t#interface_number: ${2:}",
      "\t#interface_type: ${3:Ethernet|Eth-Trunk|Tunnel|NULL|LoopBack|Vlanif|100GE|40GE|MTunnel|10GE|GE|MEth|Vbdif|Nve}",
      "\t#port_number: ${4:}",
      "\t#trap_name: ${5:}"
    ]
  },
  "ce_snmp_user": {
    "prefix": "ce_snmp_user",
    "description": "Manages SNMP user configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_snmp_user:",
      "\t#aaa_local_user: ${1:}",
      "\t#acl_number: ${2:}",
      "\t#auth_key: ${3:}",
      "\t#auth_protocol: ${4:noAuth|md5|sha}",
      "\t#priv_key: ${5:}",
      "\t#priv_protocol: ${6:noPriv|des56|3des168|aes128|aes192|aes256}",
      "\t#remote_engine_id: ${7:}",
      "\t#user_group: ${8:}",
      "\t#usm_user_name: ${9:}"
    ]
  },
  "ce_startup": {
    "prefix": "ce_startup",
    "description": "Manages a system startup information on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_startup:",
      "\t#action: ${1:display}",
      "\t#cfg_file: ${2:present}",
      "\t#patch_file: ${3:}",
      "\t#slot: ${4:}",
      "\t#software_file: ${5:}"
    ]
  },
  "ce_static_route": {
    "prefix": "ce_static_route",
    "description": "Manages static route configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_static_route:",
      "\taftype: ${1:v4|v6}",
      "\tmask: ${2:}",
      "\tprefix: ${3:}",
      "\t#description: ${4:}",
      "\t#destvrf: ${5:}",
      "\t#next_hop: ${6:}",
      "\t#nhp_interface: ${7:}",
      "\t#pref: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#tag: ${10:}",
      "\t#vrf: ${11:}"
    ]
  },
  "ce_static_route_bfd": {
    "prefix": "ce_static_route_bfd",
    "description": "Manages static route configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_static_route_bfd:",
      "\taftype: ${1:v4|v6}",
      "\tfunction_flag: ${2:globalBFD|singleBFD|dynamicBFD|staticBFD}",
      "\tprefix: ${3:}",
      "\t#bfd_session_name: ${4:}",
      "\t#commands: ${5:}",
      "\t#description: ${6:}",
      "\t#destvrf: ${7:}",
      "\t#detect_multiplier: ${8:}",
      "\t#mask: ${9:}",
      "\t#min_rx_interval: ${10:}",
      "\t#min_tx_interval: ${11:}",
      "\t#next_hop: ${12:}",
      "\t#nhp_interface: ${13:}",
      "\t#pref: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#tag: ${16:}",
      "\t#vrf: ${17:}"
    ]
  },
  "ce_stp": {
    "prefix": "ce_stp",
    "description": "Manages STP configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_stp:",
      "\t#bpdu_filter: ${1:enable|disable}",
      "\t#bpdu_protection: ${2:enable|disable}",
      "\t#cost: ${3:}",
      "\t#edged_port: ${4:enable|disable}",
      "\t#interface: ${5:}",
      "\t#loop_protection: ${6:enable|disable}",
      "\t#root_protection: ${7:enable|disable}",
      "\t#state: ${8:#present|absent}",
      "\t#stp_converge: ${9:fast|normal}",
      "\t#stp_enable: ${10:enable|disable}",
      "\t#stp_mode: ${11:stp|rstp|mstp}",
      "\t#tc_protection: ${12:enable|disable}",
      "\t#tc_protection_interval: ${13:}",
      "\t#tc_protection_threshold: ${14:}"
    ]
  },
  "ce_switchport": {
    "prefix": "ce_switchport",
    "description": "Manages Layer 2 switchport interfaces on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_switchport:",
      "\tinterface: ${1:}",
      "\t#default_vlan: ${2:}",
      "\t#mode: ${3:access|trunk|hybrid|dot1qtunnel}",
      "\t#pvid_vlan: ${4:}",
      "\t#state: ${5:#present|absent|unconfigured}",
      "\t#tagged_vlans: ${6:}",
      "\t#trunk_vlans: ${7:}",
      "\t#untagged_vlans: ${8:}"
    ]
  },
  "ce_vlan": {
    "prefix": "ce_vlan",
    "description": "Manages VLAN resources and attributes on Huawei CloudEngine switches.",
    "body": [
      "community.network.ce_vlan:",
      "\t#description: ${1:}",
      "\t#name: ${2:}",
      "\t#state: ${3:#present|absent}",
      "\t#vlan_id: ${4:}",
      "\t#vlan_range: ${5:}"
    ]
  },
  "ce_vrf": {
    "prefix": "ce_vrf",
    "description": "Manages VPN instance on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_vrf:",
      "\tvrf: ${1:}",
      "\t#description: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "ce_vrf_af": {
    "prefix": "ce_vrf_af",
    "description": "Manages VPN instance address family on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_vrf_af:",
      "\tvrf: ${1:}",
      "\t#evpn: ${2:false}",
      "\t#route_distinguisher: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#vpn_target_state: ${5:present|absent}",
      "\t#vpn_target_type: ${6:export_extcommunity|import_extcommunity}",
      "\t#vpn_target_value: ${7:}",
      "\t#vrf_aftype: ${8:#v4|v6}"
    ]
  },
  "ce_vrf_interface": {
    "prefix": "ce_vrf_interface",
    "description": "Manages interface specific VPN configuration on HUAWEI CloudEngine switches.",
    "body": [
      "community.network.ce_vrf_interface:",
      "\tvpn_interface: ${1:}",
      "\tvrf: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "ce_vrrp": {
    "prefix": "ce_vrrp",
    "description": "Manages VRRP interfaces on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_vrrp:",
      "\t#admin_flowdown: ${1:false}",
      "\t#admin_ignore_if_down: ${2:false}",
      "\t#admin_interface: ${3:}",
      "\t#admin_vrid: ${4:}",
      "\t#advertise_interval: ${5:}",
      "\t#auth_key: ${6:}",
      "\t#auth_mode: ${7:simple|md5|none}",
      "\t#fast_resume: ${8:enable|disable}",
      "\t#gratuitous_arp_interval: ${9:}",
      "\t#holding_multiplier: ${10:}",
      "\t#interface: ${11:}",
      "\t#is_plain: ${12:false}",
      "\t#preempt_timer_delay: ${13:}",
      "\t#priority: ${14:}",
      "\t#recover_delay: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#version: ${17:v2|v3}",
      "\t#virtual_ip: ${18:}",
      "\t#vrid: ${19:present}",
      "\t#vrrp_type: ${20:normal|member|admin}"
    ]
  },
  "ce_vxlan_arp": {
    "prefix": "ce_vxlan_arp",
    "description": "Manages ARP attributes of VXLAN on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_vxlan_arp:",
      "\t#arp_collect_host: ${1:enable|disable}",
      "\t#arp_suppress: ${2:enable|disable}",
      "\t#bridge_domain_id: ${3:}",
      "\t#evn_bgp: ${4:enable|disable}",
      "\t#evn_peer_ip: ${5:}",
      "\t#evn_reflect_client: ${6:enable|disable}",
      "\t#evn_server: ${7:enable|disable}",
      "\t#evn_source_ip: ${8:}",
      "\t#host_collect_protocol: ${9:bgp|none}",
      "\t#state: ${10:#present|absent}",
      "\t#vbdif_name: ${11:}"
    ]
  },
  "ce_vxlan_gateway": {
    "prefix": "ce_vxlan_gateway",
    "description": "Manages gateway for the VXLAN network on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_vxlan_gateway:",
      "\t#arp_direct_route: ${1:enable|disable}",
      "\t#arp_distribute_gateway: ${2:enable|disable}",
      "\t#dfs_all_active: ${3:enable|disable}",
      "\t#dfs_id: ${4:}",
      "\t#dfs_peer_ip: ${5:}",
      "\t#dfs_peer_vpn: ${6:}",
      "\t#dfs_source_ip: ${7:}",
      "\t#dfs_source_vpn: ${8:}",
      "\t#dfs_udp_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#vbdif_bind_vpn: ${11:}",
      "\t#vbdif_mac: ${12:}",
      "\t#vbdif_name: ${13:}",
      "\t#vpn_instance: ${14:}",
      "\t#vpn_vni: ${15:}"
    ]
  },
  "ce_vxlan_global": {
    "prefix": "ce_vxlan_global",
    "description": "Manages global attributes of VXLAN and bridge domain on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_vxlan_global:",
      "\t#bridge_domain_id: ${1:}",
      "\t#nvo3_acl_extend: ${2:enable|disable}",
      "\t#nvo3_ecmp_hash: ${3:enable|disable}",
      "\t#nvo3_eth_trunk_hash: ${4:enable|disable}",
      "\t#nvo3_gw_enhanced: ${5:l2|l3}",
      "\t#nvo3_prevent_loops: ${6:enable|disable}",
      "\t#nvo3_service_extend: ${7:enable|disable}",
      "\t#state: ${8:#present|absent}",
      "\t#tunnel_mode_vxlan: ${9:enable|disable}"
    ]
  },
  "ce_vxlan_tunnel": {
    "prefix": "ce_vxlan_tunnel",
    "description": "Manages VXLAN tunnel configuration on HUAWEI CloudEngine devices.",
    "body": [
      "community.network.ce_vxlan_tunnel:",
      "\t#bridge_domain_id: ${1:}",
      "\t#nve_mode: ${2:mode-l2|mode-l3}",
      "\t#nve_name: ${3:}",
      "\t#peer_list_ip: ${4:}",
      "\t#protocol_type: ${5:bgp|null}",
      "\t#source_ip: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#vni_id: ${8:}"
    ]
  },
  "ce_vxlan_vap": {
    "prefix": "ce_vxlan_vap",
    "description": "Manages VXLAN virtual access point on HUAWEI CloudEngine Devices.",
    "body": [
      "community.network.ce_vxlan_vap:",
      "\t#bind_vlan_id: ${1:}",
      "\t#bridge_domain_id: ${2:}",
      "\t#ce_vid: ${3:}",
      "\t#encapsulation: ${4:dot1q|default|untag|qinq|none}",
      "\t#l2_sub_interface: ${5:}",
      "\t#pe_vid: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "cnos_backup": {
    "prefix": "cnos_backup",
    "description": "Backup the current running or startup configuration to a remote server on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_backup:",
      "\tconfigType: ${1:running-config|startup-config}",
      "\tdeviceType: ${2:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${3:}",
      "\toutputfile: ${4:}",
      "\tpassword: ${5:}",
      "\tprotocol: ${6:SFTP|SCP|FTP|TFTP}",
      "\trcpath: ${7:}",
      "\trcserverip: ${8:}",
      "\tserverpassword: ${9:}",
      "\tserverusername: ${10:}",
      "\tusername: ${11:}",
      "\t#enablePassword: ${12:}"
    ]
  },
  "cnos_banner": {
    "prefix": "cnos_banner",
    "description": "Manage multiline banners on Lenovo CNOS devices",
    "body": [
      "community.network.cnos_banner:",
      "\tbanner: ${1:login|motd}",
      "\t#state: ${2:#present|absent}",
      "\t#text: ${3:}"
    ]
  },
  "cnos_bgp": {
    "prefix": "cnos_bgp",
    "description": "Manage BGP resources and attributes on devices running CNOS",
    "body": [
      "community.network.cnos_bgp:",
      "\tasNum: ${1:}",
      "\tbgpArg1: ${2:address-family|bestpath|bgp|cluster-id|confederation|enforce-first-as|fast-external-failover|graceful-restart|graceful-restart-helper|log-neighbor-changes|maxas-limit|neighbor|router-id|shutdown|synchronization|timers|vrf}",
      "\tdeviceType: ${3:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${4:}",
      "\toutputfile: ${5:}",
      "\tpassword: ${6:}",
      "\tusername: ${7:}",
      "\t#bgpArg2: ${8:ipv4 or ipv6|always-compare-med|compare-confed-aspath|compare-routerid|dont-compare-originator-id|tie-break-on-age|as-path|med|identifier|peers}",
      "\t#bgpArg3: ${9:aggregate-address|client-to-client|dampening|distance|maximum-paths|network|nexthop|redistribute|save|synchronization|ignore or multipath-relax|confed or missing-as-worst or non-deterministic or remove-recv-med or remove-send-med}",
      "\t#bgpArg4: ${10:Aggregate prefix|Reachability Half-life time|route-map|Distance for routes ext|ebgp or ibgp|IP prefix <network>|IP prefix <network>/<length>|synchronization|Delay value|direct|ospf|static|memory}",
      "\t#bgpArg5: ${11:as-set|summary-only|Value to start reusing a route|Distance for routes internal|Supported multipath numbers|backdoor|map|route-map}",
      "\t#bgpArg6: ${12:summary-only|as-set|route-map name|Value to start suppressing a route|Distance local routes|Network mask|Pointer to route-map entries}",
      "\t#bgpArg7: ${13:Maximum duration to suppress a stable route(minutes)|backdoor|route-map|Name of the route map}",
      "\t#bgpArg8: ${14:Un-reachability Half-life time for the penalty(minutes)|backdoor}",
      "\t#enablePassword: ${15:}"
    ]
  },
  "cnos_command": {
    "prefix": "cnos_command",
    "description": "Run arbitrary commands on Lenovo CNOS devices",
    "body": [
      "community.network.cnos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "cnos_conditional_command": {
    "prefix": "cnos_conditional_command",
    "description": "Execute a single command based on condition on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_conditional_command:",
      "\tclicommand: ${1:}",
      "\tcondition: ${2:}",
      "\tdeviceType: ${3:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\tflag: ${4:}",
      "\thost: ${5:}",
      "\toutputfile: ${6:}",
      "\tpassword: ${7:}",
      "\tusername: ${8:}",
      "\t#enablePassword: ${9:}"
    ]
  },
  "cnos_conditional_template": {
    "prefix": "cnos_conditional_template",
    "description": "Manage switch configuration using templates based on condition on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_conditional_template:",
      "\tcommandfile: ${1:}",
      "\tcondition: ${2:}",
      "\tdeviceType: ${3:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\tflag: ${4:}",
      "\thost: ${5:}",
      "\toutputfile: ${6:}",
      "\tpassword: ${7:}",
      "\tusername: ${8:}",
      "\t#enablePassword: ${9:}"
    ]
  },
  "cnos_config": {
    "prefix": "cnos_config",
    "description": "Manage Lenovo CNOS configuration sections",
    "body": [
      "community.network.cnos_config:",
      "\t#admin: ${1:false}",
      "\t#after: ${2:}",
      "\t#backup: ${3:false}",
      "\t#backup_options: ${4:}",
      "\t#before: ${5:}",
      "\t#comment: ${6:configured by cnos_config}",
      "\t#config: ${7:}",
      "\t#lines: ${8:}",
      "\t#match: ${9:#line|strict|exact|none}",
      "\t#parents: ${10:}",
      "\t#replace: ${11:#line|block|config}",
      "\t#src: ${12:}"
    ]
  },
  "cnos_factory": {
    "prefix": "cnos_factory",
    "description": "Reset the switch startup configuration to default (factory) on devices running Lenovo CNOS.",
    "body": [
      "community.network.cnos_factory:",
      "\tdeviceType: ${1:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${2:}",
      "\toutputfile: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\t#enablePassword: ${6:}"
    ]
  },
  "cnos_facts": {
    "prefix": "cnos_facts",
    "description": "Collect facts from remote devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_facts:",
      "\t#auth_pass: ${1:}",
      "\t#authorize: ${2:false}",
      "\t#gather_subset: ${3:!config}"
    ]
  },
  "cnos_image": {
    "prefix": "cnos_image",
    "description": "Perform firmware upgrade/download from a remote server on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_image:",
      "\tdeviceType: ${1:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${2:}",
      "\timgpath: ${3:}",
      "\timgtype: ${4:all|boot|os|onie}",
      "\toutputfile: ${5:}",
      "\tpassword: ${6:}",
      "\tprotocol: ${7:SFTP|SCP|FTP|TFTP}",
      "\tserverip: ${8:}",
      "\tserverusername: ${9:}",
      "\tusername: ${10:}",
      "\t#enablePassword: ${11:}",
      "\t#serverpassword: ${12:}"
    ]
  },
  "cnos_interface": {
    "prefix": "cnos_interface",
    "description": "Manage Interface on Lenovo CNOS network devices",
    "body": [
      "community.network.cnos_interface:",
      "\tname: ${1:}",
      "\t#aggregate: ${2:}",
      "\t#delay: ${3:20}",
      "\t#description: ${4:}",
      "\t#duplex: ${5:full|half|#auto}",
      "\t#enabled: ${6:true}",
      "\t#mtu: ${7:}",
      "\t#neighbors: ${8:}",
      "\t#rx_rate: ${9:}",
      "\t#speed: ${10:}",
      "\t#state: ${11:#present|absent|up|down}",
      "\t#tx_rate: ${12:}"
    ]
  },
  "cnos_l2_interface": {
    "prefix": "cnos_l2_interface",
    "description": "Manage Layer-2 interface on Lenovo CNOS devices.",
    "body": [
      "community.network.cnos_l2_interface:",
      "\tname: ${1:}",
      "\t#access_vlan: ${2:}",
      "\t#aggregate: ${3:}",
      "\t#mode: ${4:#access|trunk}",
      "\t#native_vlan: ${5:}",
      "\t#state: ${6:#present|absent|unconfigured}",
      "\t#trunk_allowed_vlans: ${7:}",
      "\t#trunk_vlans: ${8:}"
    ]
  },
  "cnos_l3_interface": {
    "prefix": "cnos_l3_interface",
    "description": "Manage Layer-3 interfaces on Lenovo CNOS network devices.",
    "body": [
      "community.network.cnos_l3_interface:",
      "\t#aggregate: ${1:}",
      "\t#ipv4: ${2:}",
      "\t#ipv6: ${3:}",
      "\t#name: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "cnos_linkagg": {
    "prefix": "cnos_linkagg",
    "description": "Manage link aggregation groups on Lenovo CNOS devices",
    "body": [
      "community.network.cnos_linkagg:",
      "\t#aggregate: ${1:}",
      "\t#group: ${2:}",
      "\t#members: ${3:}",
      "\t#mode: ${4:active|on|passive}",
      "\t#purge: ${5:false}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "cnos_lldp": {
    "prefix": "cnos_lldp",
    "description": "Manage LLDP configuration on Lenovo CNOS network devices.",
    "body": [
      "community.network.cnos_lldp:",
      "\t#state: ${1:#present|absent}"
    ]
  },
  "cnos_logging": {
    "prefix": "cnos_logging",
    "description": "Manage logging on network devices",
    "body": [
      "community.network.cnos_logging:",
      "\t#aggregate: ${1:}",
      "\t#dest: ${2:server|console|monitor|logfile}",
      "\t#facility: ${3:}",
      "\t#level: ${4:5}",
      "\t#name: ${5:}",
      "\t#size: ${6:10485760}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "cnos_reload": {
    "prefix": "cnos_reload",
    "description": "Perform switch restart on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_reload:",
      "\tdeviceType: ${1:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${2:}",
      "\toutputfile: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\t#enablePassword: ${6:}"
    ]
  },
  "cnos_rollback": {
    "prefix": "cnos_rollback",
    "description": "Roll back the running or startup configuration from a remote server on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_rollback:",
      "\tconfigType: ${1:running-config|startup-config}",
      "\tdeviceType: ${2:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${3:}",
      "\toutputfile: ${4:}",
      "\tpassword: ${5:}",
      "\tprotocol: ${6:SFTP|SCP|FTP|TFTP}",
      "\trcpath: ${7:}",
      "\trcserverip: ${8:}",
      "\tserverpassword: ${9:}",
      "\tserverusername: ${10:}",
      "\tusername: ${11:}",
      "\t#enablePassword: ${12:}"
    ]
  },
  "cnos_save": {
    "prefix": "cnos_save",
    "description": "Save the running configuration as the startup configuration on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_save:",
      "\tdeviceType: ${1:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${2:}",
      "\toutputfile: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\t#enablePassword: ${6:}"
    ]
  },
  "cnos_showrun": {
    "prefix": "cnos_showrun",
    "description": "Collect the current running configuration on devices running on CNOS",
    "body": [
      "community.network.cnos_showrun:",
      "\tdeviceType: ${1:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${2:}",
      "\toutputfile: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\t#enablePassword: ${6:}"
    ]
  },
  "cnos_static_route": {
    "prefix": "cnos_static_route",
    "description": "Manage static IP routes on Lenovo CNOS network devices",
    "body": [
      "community.network.cnos_static_route:",
      "\t#admin_distance: ${1:1}",
      "\t#aggregate: ${2:}",
      "\t#description: ${3:}",
      "\t#interface: ${4:}",
      "\t#mask: ${5:}",
      "\t#next_hop: ${6:}",
      "\t#prefix: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#tag: ${9:}"
    ]
  },
  "cnos_system": {
    "prefix": "cnos_system",
    "description": "Manage the system attributes on Lenovo CNOS devices",
    "body": [
      "community.network.cnos_system:",
      "\t#domain_name: ${1:}",
      "\t#domain_search: ${2:}",
      "\t#hostname: ${3:}",
      "\t#lookup_enabled: ${4:}",
      "\t#lookup_source: ${5:}",
      "\t#name_servers: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "cnos_template": {
    "prefix": "cnos_template",
    "description": "Manage switch configuration using templates on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_template:",
      "\tcommandfile: ${1:}",
      "\tdeviceType: ${2:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${3:}",
      "\toutputfile: ${4:}",
      "\tpassword: ${5:}",
      "\tusername: ${6:}",
      "\t#enablePassword: ${7:}"
    ]
  },
  "cnos_user": {
    "prefix": "cnos_user",
    "description": "Manage the collection of local users on Lenovo CNOS devices",
    "body": [
      "community.network.cnos_user:",
      "\t#aggregate: ${1:}",
      "\t#configured_password: ${2:}",
      "\t#name: ${3:}",
      "\t#purge: ${4:false}",
      "\t#role: ${5:}",
      "\t#sshkey: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#update_password: ${8:on_create|#always}"
    ]
  },
  "cnos_vlag": {
    "prefix": "cnos_vlag",
    "description": "Manage VLAG resources and attributes on devices running Lenovo CNOS",
    "body": [
      "community.network.cnos_vlag:",
      "\tdeviceType: ${1:g8272_cnos|g8296_cnos|g8332_cnos|NE0152T|NE1072T|NE1032|NE1032T|NE10032|NE2572}",
      "\thost: ${2:}",
      "\toutputfile: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\tvlagArg1: ${6:enable|auto-recovery|config-consistency|isl|mac-address-table|peer-gateway|priority|startup-delay|tier-id|vrrp|instance|hlthchk}",
      "\t#enablePassword: ${7:}",
      "\t#vlagArg2: ${8:Interval in seconds|disable or strict|Port Aggregation Number|VLAG priority|Delay time in seconds|VLAG tier-id value|VLAG instance number|keepalive-attempts|keepalive-interval|retry-interval|peer-ip}",
      "\t#vlagArg3: ${9:enable or port-aggregation|Number of keepalive attempts|Interval in seconds|Interval in seconds|VLAG health check peer IP4 address}",
      "\t#vlagArg4: ${10:Port Aggregation Number|default or management}"
    ]
  },
  "cnos_vlan": {
    "prefix": "cnos_vlan",
    "description": "Manage VLANs on CNOS network devices",
    "body": [
      "community.network.cnos_vlan:",
      "\tinterfaces: ${1:}",
      "\tvlan_id: ${2:}",
      "\t#aggregate: ${3:}",
      "\t#associated_interfaces: ${4:}",
      "\t#delay: ${5:10}",
      "\t#name: ${6:}",
      "\t#purge: ${7:false}",
      "\t#state: ${8:#present|absent|active|suspend}"
    ]
  },
  "cnos_vrf": {
    "prefix": "cnos_vrf",
    "description": "Manage VRFs on Lenovo CNOS network devices",
    "body": [
      "community.network.cnos_vrf:",
      "\tname: ${1:}",
      "\t#aggregate: ${2:}",
      "\t#associated_interfaces: ${3:}",
      "\t#delay: ${4:10}",
      "\t#interfaces: ${5:}",
      "\t#purge: ${6:false}",
      "\t#rd: ${7:}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "cv_server_provision": {
    "prefix": "cv_server_provision",
    "description": "Provision server port by applying or removing template configuration to an Arista CloudVision Portal configlet that is applied to a switch.",
    "body": [
      "community.network.cv_server_provision:",
      "\thost: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_name: ${3:}",
      "\tswitch_name: ${4:}",
      "\tswitch_port: ${5:}",
      "\ttemplate: ${6:}",
      "\tusername: ${7:}",
      "\t#action: ${8:#show|add|remove}",
      "\t#auto_run: ${9:false}",
      "\t#port: ${10:}",
      "\t#port_vlan: ${11:}",
      "\t#protocol: ${12:#https|http}"
    ]
  },
  "dladm_etherstub": {
    "prefix": "dladm_etherstub",
    "description": "Manage etherstubs on Solaris/illumos systems.",
    "body": [
      "community.network.dladm_etherstub:",
      "\tname: ${1:}",
      "\t#state: ${2:#present|absent}",
      "\t#temporary: ${3:false}"
    ]
  },
  "dladm_iptun": {
    "prefix": "dladm_iptun",
    "description": "Manage IP tunnel interfaces on Solaris/illumos systems.",
    "body": [
      "community.network.dladm_iptun:",
      "\tname: ${1:}",
      "\t#local_address: ${2:}",
      "\t#remote_address: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#temporary: ${5:false}",
      "\t#type: ${6:#ipv4|ipv6|6to4}"
    ]
  },
  "dladm_linkprop": {
    "prefix": "dladm_linkprop",
    "description": "Manage link properties on Solaris/illumos systems.",
    "body": [
      "community.network.dladm_linkprop:",
      "\tlink: ${1:}",
      "\tproperty: ${2:}",
      "\t#state: ${3:#present|absent|reset}",
      "\t#temporary: ${4:false}",
      "\t#value: ${5:}"
    ]
  },
  "dladm_vlan": {
    "prefix": "dladm_vlan",
    "description": "Manage VLAN interfaces on Solaris/illumos systems.",
    "body": [
      "community.network.dladm_vlan:",
      "\tlink: ${1:}",
      "\tname: ${2:}",
      "\t#state: ${3:#present|absent}",
      "\t#temporary: ${4:false}",
      "\t#vlan_id: ${5:False}"
    ]
  },
  "dladm_vnic": {
    "prefix": "dladm_vnic",
    "description": "Manage VNICs on Solaris/illumos systems.",
    "body": [
      "community.network.dladm_vnic:",
      "\tlink: ${1:}",
      "\tname: ${2:}",
      "\t#mac: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#temporary: ${5:false}",
      "\t#vlan: ${6:False}"
    ]
  },
  "edgeos_command": {
    "prefix": "edgeos_command",
    "description": "Run one or more commands on EdgeOS devices",
    "body": [
      "community.network.edgeos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "edgeos_config": {
    "prefix": "edgeos_config",
    "description": "Manage EdgeOS configuration on remote device",
    "body": [
      "community.network.edgeos_config:",
      "\t#backup: ${1:false}",
      "\t#backup_options: ${2:}",
      "\t#comment: ${3:configured by edgeos_config}",
      "\t#config: ${4:}",
      "\t#lines: ${5:}",
      "\t#match: ${6:#line|none}",
      "\t#save: ${7:false}",
      "\t#src: ${8:}"
    ]
  },
  "edgeos_facts": {
    "prefix": "edgeos_facts",
    "description": "Collect facts from remote devices running EdgeOS",
    "body": [
      "community.network.edgeos_facts:",
      "\t#gather_subset: ${1:!config}"
    ]
  },
  "edgeswitch_facts": {
    "prefix": "edgeswitch_facts",
    "description": "Collect facts from remote devices running Edgeswitch",
    "body": [
      "community.network.edgeswitch_facts:",
      "\t#gather_subset: ${1:!config}"
    ]
  },
  "edgeswitch_vlan": {
    "prefix": "edgeswitch_vlan",
    "description": "Manage VLANs on Ubiquiti Edgeswitch network devices",
    "body": [
      "community.network.edgeswitch_vlan:",
      "\t#aggregate: ${1:}",
      "\t#auto_exclude: ${2:}",
      "\t#auto_tag: ${3:}",
      "\t#auto_untag: ${4:}",
      "\t#excluded_interfaces: ${5:}",
      "\t#name: ${6:}",
      "\t#purge: ${7:false}",
      "\t#state: ${8:#present|absent}",
      "\t#tagged_interfaces: ${9:}",
      "\t#untagged_interfaces: ${10:}",
      "\t#vlan_id: ${11:}"
    ]
  },
  "enos_command": {
    "prefix": "enos_command",
    "description": "Run arbitrary commands on Lenovo ENOS devices",
    "body": [
      "community.network.enos_command:",
      "\tcommands: ${1:}",
      "\t#auth_pass: ${2:}",
      "\t#authorize: ${3:false}",
      "\t#interval: ${4:1}",
      "\t#match: ${5:any|#all}",
      "\t#retries: ${6:10}",
      "\t#wait_for: ${7:}"
    ]
  },
  "enos_config": {
    "prefix": "enos_config",
    "description": "Manage Lenovo ENOS configuration sections",
    "body": [
      "community.network.enos_config:",
      "\t#admin: ${1:false}",
      "\t#after: ${2:}",
      "\t#auth_pass: ${3:}",
      "\t#authorize: ${4:false}",
      "\t#backup: ${5:false}",
      "\t#backup_options: ${6:}",
      "\t#before: ${7:}",
      "\t#comment: ${8:configured by enos_config}",
      "\t#config: ${9:}",
      "\t#lines: ${10:}",
      "\t#match: ${11:#line|strict|exact|none}",
      "\t#parents: ${12:}",
      "\t#replace: ${13:#line|block|config}",
      "\t#src: ${14:}"
    ]
  },
  "enos_facts": {
    "prefix": "enos_facts",
    "description": "Collect facts from remote devices running Lenovo ENOS",
    "body": [
      "community.network.enos_facts:",
      "\t#auth_pass: ${1:}",
      "\t#authorize: ${2:false}",
      "\t#gather_subset: ${3:!config}"
    ]
  },
  "eric_eccli_command": {
    "prefix": "eric_eccli_command",
    "description": "Run commands on remote devices running ERICSSON ECCLI",
    "body": [
      "community.network.eric_eccli_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "exos_command": {
    "prefix": "exos_command",
    "description": "Run commands on remote devices running Extreme EXOS",
    "body": [
      "community.network.exos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "exos_config": {
    "prefix": "exos_config",
    "description": "Manage Extreme Networks EXOS configuration sections",
    "body": [
      "community.network.exos_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#defaults: ${5:false}",
      "\t#diff_against: ${6:#running|startup|intended}",
      "\t#diff_ignore_lines: ${7:}",
      "\t#intended_config: ${8:}",
      "\t#lines: ${9:}",
      "\t#match: ${10:#line|strict|exact|none}",
      "\t#replace: ${11:#line|block}",
      "\t#running_config: ${12:}",
      "\t#save_when: ${13:always|#never|modified|changed}",
      "\t#src: ${14:}"
    ]
  },
  "exos_facts": {
    "prefix": "exos_facts",
    "description": "Collect facts from devices running Extreme EXOS",
    "body": [
      "community.network.exos_facts:",
      "\t#gather_network_resources: ${1:}",
      "\t#gather_subset: ${2:['!config']}"
    ]
  },
  "exos_l2_interfaces": {
    "prefix": "exos_l2_interfaces",
    "description": "Manage L2 interfaces on Extreme Networks EXOS devices.",
    "body": [
      "community.network.exos_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "exos_lldp_global": {
    "prefix": "exos_lldp_global",
    "description": "Configure and manage Link Layer Discovery Protocol(LLDP) attributes on EXOS platforms.",
    "body": [
      "community.network.exos_lldp_global:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|deleted}"
    ]
  },
  "exos_lldp_interfaces": {
    "prefix": "exos_lldp_interfaces",
    "description": "Manage link layer discovery protocol (LLDP) attributes of interfaces on EXOS platforms.",
    "body": [
      "community.network.exos_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "exos_vlans": {
    "prefix": "exos_vlans",
    "description": "Manage VLANs on Extreme Networks EXOS devices.",
    "body": [
      "community.network.exos_vlans:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "flowadm": {
    "prefix": "flowadm",
    "description": "Manage bandwidth resource control and priority for protocols, services and zones on Solaris/illumos systems",
    "body": [
      "community.network.flowadm:",
      "\tname: ${1:}",
      "\t#dsfield: ${2:}",
      "\t#link: ${3:}",
      "\t#local_ip: ${4:}",
      "\t#local_port: ${5:}",
      "\t#maxbw: ${6:}",
      "\t#priority: ${7:low|#medium|high}",
      "\t#remote_ip: ${8:}",
      "\t#state: ${9:absent|#present|resetted}",
      "\t#temporary: ${10:false}",
      "\t#transport: ${11:}"
    ]
  },
  "ftd_configuration": {
    "prefix": "ftd_configuration",
    "description": "Manages configuration on Cisco FTD devices over REST API",
    "body": [
      "community.network.ftd_configuration:",
      "\toperation: ${1:}",
      "\t#data: ${2:}",
      "\t#filters: ${3:}",
      "\t#path_params: ${4:}",
      "\t#query_params: ${5:}",
      "\t#register_as: ${6:}"
    ]
  },
  "ftd_file_download": {
    "prefix": "ftd_file_download",
    "description": "Downloads files from Cisco FTD devices over HTTP(S)",
    "body": [
      "community.network.ftd_file_download:",
      "\tdestination: ${1:}",
      "\toperation: ${2:}",
      "\t#path_params: ${3:}"
    ]
  },
  "ftd_file_upload": {
    "prefix": "ftd_file_upload",
    "description": "Uploads files to Cisco FTD devices over HTTP(S)",
    "body": [
      "community.network.ftd_file_upload:",
      "\tfile_to_upload: ${1:}",
      "\toperation: ${2:}",
      "\t#register_as: ${3:}"
    ]
  },
  "ftd_install": {
    "prefix": "ftd_install",
    "description": "Installs FTD pkg image on the firewall",
    "body": [
      "community.network.ftd_install:",
      "\tconsole_ip: ${1:}",
      "\tconsole_password: ${2:}",
      "\tconsole_port: ${3:}",
      "\tconsole_username: ${4:}",
      "\tdevice_hostname: ${5:}",
      "\tdevice_password: ${6:}",
      "\timage_file_location: ${7:}",
      "\timage_version: ${8:}",
      "\trommon_file_location: ${9:}",
      "\t#device_gateway: ${10:}",
      "\t#device_ip: ${11:}",
      "\t#device_model: ${12:Cisco ASA5506-X Threat Defense|Cisco ASA5508-X Threat Defense|Cisco ASA5516-X Threat Defense|Cisco Firepower 2110 Threat Defense|Cisco Firepower 2120 Threat Defense|Cisco Firepower 2130 Threat Defense|Cisco Firepower 2140 Threat Defense}",
      "\t#device_netmask: ${13:}",
      "\t#device_new_password: ${14:}",
      "\t#device_sudo_password: ${15:}",
      "\t#device_username: ${16:admin}",
      "\t#dns_server: ${17:}",
      "\t#force_install: ${18:false}",
      "\t#search_domains: ${19:cisco.com}"
    ]
  },
  "iap_start_workflow": {
    "prefix": "iap_start_workflow",
    "description": "Start a workflow in the Itential Automation Platform",
    "body": [
      "community.network.iap_start_workflow:",
      "\tdescription: ${1:}",
      "\tiap_fqdn: ${2:}",
      "\tiap_port: ${3:}",
      "\ttoken_key: ${4:}",
      "\tvariables: ${5:}",
      "\tworkflow_name: ${6:}",
      "\t#https: ${7:false}",
      "\t#validate_certs: ${8:false}"
    ]
  },
  "iap_token": {
    "prefix": "iap_token",
    "description": "Get token for the Itential Automation Platform",
    "body": [
      "community.network.iap_token:",
      "\tiap_fqdn: ${1:}",
      "\tiap_port: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#https: ${5:false}",
      "\t#validate_certs: ${6:false}"
    ]
  },
  "icx_banner": {
    "prefix": "icx_banner",
    "description": "Manage multiline banners on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_banner:",
      "\tbanner: ${1:motd|exec|incoming}",
      "\t#check_running_config: ${2:true}",
      "\t#enterkey: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#text: ${5:}"
    ]
  },
  "icx_command": {
    "prefix": "icx_command",
    "description": "Run arbitrary commands on remote Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "icx_config": {
    "prefix": "icx_config",
    "description": "Manage configuration sections of Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#before: ${3:}",
      "\t#defaults: ${4:false}",
      "\t#diff_against: ${5:running|startup|intended}",
      "\t#diff_ignore_lines: ${6:}",
      "\t#intended_config: ${7:}",
      "\t#lines: ${8:}",
      "\t#match: ${9:#line|strict|exact|none}",
      "\t#multiline_delimiter: ${10:@}",
      "\t#parents: ${11:}",
      "\t#replace: ${12:#line|block}",
      "\t#running_config: ${13:}",
      "\t#save_when: ${14:always|#never|modified|changed}",
      "\t#src: ${15:}"
    ]
  },
  "icx_copy": {
    "prefix": "icx_copy",
    "description": "Transfer files from or to remote Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_copy:",
      "\tprotocol: ${1:scp|https}",
      "\tremote_filename: ${2:}",
      "\tremote_server: ${3:}",
      "\t#download: ${4:running-config|startup-config|flash_primary|flash_secondary|bootrom|fips-primary-sig|fips-secondary-sig|fips-bootrom-sig}",
      "\t#public_key: ${5:rsa|dsa}",
      "\t#remote_pass: ${6:}",
      "\t#remote_port: ${7:}",
      "\t#remote_user: ${8:}",
      "\t#upload: ${9:running-config|startup-config|flash_primary|flash_secondary}"
    ]
  },
  "icx_facts": {
    "prefix": "icx_facts",
    "description": "Collect facts from remote Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_facts:",
      "\t#gather_subset: ${1:!config}"
    ]
  },
  "icx_interface": {
    "prefix": "icx_interface",
    "description": "Manage Interface on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_interface:",
      "\t#aggregate: ${1:}",
      "\t#check_running_config: ${2:true}",
      "\t#delay: ${3:10}",
      "\t#description: ${4:}",
      "\t#enabled: ${5:true}",
      "\t#name: ${6:}",
      "\t#neighbors: ${7:}",
      "\t#power: ${8:}",
      "\t#rx_rate: ${9:}",
      "\t#speed: ${10:10-full|10-half|100-full|100-half|1000-full|1000-full-master|1000-full-slave|10g-full|10g-full-master|10g-full-slave|2500-full|2500-full-master|2500-full-slave|5g-full|5g-full-master|5g-full-slave|auto}",
      "\t#state: ${11:#present|absent|up|down}",
      "\t#stp: ${12:}",
      "\t#tx_rate: ${13:}"
    ]
  },
  "icx_l3_interface": {
    "prefix": "icx_l3_interface",
    "description": "Manage Layer-3 interfaces on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_l3_interface:",
      "\t#aggregate: ${1:}",
      "\t#check_running_config: ${2:true}",
      "\t#ipv4: ${3:}",
      "\t#ipv6: ${4:}",
      "\t#mode: ${5:dynamic|ospf-ignore|ospf-passive}",
      "\t#name: ${6:}",
      "\t#replace: ${7:yes|no}",
      "\t#secondary: ${8:yes|no}",
      "\t#state: ${9:#present|absent}"
    ]
  },
  "icx_linkagg": {
    "prefix": "icx_linkagg",
    "description": "Manage link aggregation groups on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_linkagg:",
      "\t#aggregate: ${1:}",
      "\t#check_running_config: ${2:true}",
      "\t#group: ${3:}",
      "\t#members: ${4:}",
      "\t#mode: ${5:dynamic|static}",
      "\t#name: ${6:}",
      "\t#purge: ${7:false}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "icx_lldp": {
    "prefix": "icx_lldp",
    "description": "Manage LLDP configuration on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_lldp:",
      "\t#check_running_config: ${1:true}",
      "\t#interfaces: ${2:}",
      "\t#state: ${3:present|absent|enabled|disabled}"
    ]
  },
  "icx_logging": {
    "prefix": "icx_logging",
    "description": "Manage logging on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_logging:",
      "\t#aggregate: ${1:}",
      "\t#check_running_config: ${2:true}",
      "\t#dest: ${3:on|host|console|buffered|persistence|rfc5424}",
      "\t#facility: ${4:auth|cron|daemon|kern|local0|local1|local2|local3|local4|local5|local6|local7|user|lpr|mail|news|syslog|sys9|sys10|sys11|sys12|sys13|sys14|user|uucp}",
      "\t#level: ${5:alerts|critical|debugging|emergencies|errors|informational|notifications|warnings}",
      "\t#name: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#udp_port: ${8:}"
    ]
  },
  "icx_ping": {
    "prefix": "icx_ping",
    "description": "Tests reachability using ping from Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_ping:",
      "\tdest: ${1:}",
      "\t#count: ${2:}",
      "\t#size: ${3:}",
      "\t#source: ${4:}",
      "\t#state: ${5:absent|#present}",
      "\t#timeout: ${6:}",
      "\t#ttl: ${7:}",
      "\t#vrf: ${8:}"
    ]
  },
  "icx_static_route": {
    "prefix": "icx_static_route",
    "description": "Manage static IP routes on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_static_route:",
      "\t#admin_distance: ${1:}",
      "\t#aggregate: ${2:}",
      "\t#check_running_config: ${3:true}",
      "\t#mask: ${4:}",
      "\t#next_hop: ${5:}",
      "\t#prefix: ${6:}",
      "\t#purge: ${7:false}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "icx_system": {
    "prefix": "icx_system",
    "description": "Manage the system attributes on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_system:",
      "\t#aaa_servers: ${1:}",
      "\t#check_running_config: ${2:true}",
      "\t#domain_name: ${3:}",
      "\t#domain_search: ${4:}",
      "\t#hostname: ${5:}",
      "\t#name_servers: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "icx_user": {
    "prefix": "icx_user",
    "description": "Manage the user accounts on Ruckus ICX 7000 series switches.",
    "body": [
      "community.network.icx_user:",
      "\tname: ${1:}",
      "\t#access_time: ${2:}",
      "\t#aggregate: ${3:}",
      "\t#check_running_config: ${4:true}",
      "\t#configured_password: ${5:}",
      "\t#nopassword: ${6:false}",
      "\t#privilege: ${7:0|4|5}",
      "\t#purge: ${8:false}",
      "\t#state: ${9:#present|absent}",
      "\t#update_password: ${10:on_create|#always}"
    ]
  },
  "icx_vlan": {
    "prefix": "icx_vlan",
    "description": "Manage VLANs on Ruckus ICX 7000 series switches",
    "body": [
      "community.network.icx_vlan:",
      "\tvlan_id: ${1:}",
      "\t#aggregate: ${2:}",
      "\t#associated_interfaces: ${3:}",
      "\t#associated_tagged: ${4:}",
      "\t#check_running_config: ${5:true}",
      "\t#delay: ${6:10}",
      "\t#interfaces: ${7:}",
      "\t#ip_arp_inspection: ${8:}",
      "\t#ip_dhcp_snooping: ${9:}",
      "\t#name: ${10:}",
      "\t#purge: ${11:false}",
      "\t#state: ${12:#present|absent}",
      "\t#stp: ${13:}",
      "\t#tagged: ${14:}"
    ]
  },
  "ig_config": {
    "prefix": "ig_config",
    "description": "Manage the configuration database on an Ingate SBC.",
    "body": [
      "community.network.ig_config:",
      "\t#add: ${1:}",
      "\t#client: ${2:}",
      "\t#columns: ${3:}",
      "\t#delete: ${4:}",
      "\t#download: ${5:}",
      "\t#factory: ${6:}",
      "\t#filename: ${7:}",
      "\t#get: ${8:}",
      "\t#modify: ${9:}",
      "\t#no_response: ${10:false}",
      "\t#path: ${11:}",
      "\t#return_rowid: ${12:}",
      "\t#revert: ${13:}",
      "\t#rowid: ${14:}",
      "\t#store: ${15:}",
      "\t#store_download: ${16:false}",
      "\t#table: ${17:}"
    ]
  },
  "ig_unit_information": {
    "prefix": "ig_unit_information",
    "description": "Get unit information from an Ingate SBC.",
    "body": [
      "community.network.ig_unit_information:",
      "\t#client: ${1:}"
    ]
  },
  "ipadm_addr": {
    "prefix": "ipadm_addr",
    "description": "Manage IP addresses on an interface on Solaris/illumos systems",
    "body": [
      "community.network.ipadm_addr:",
      "\taddrobj: ${1:}",
      "\t#address: ${2:}",
      "\t#addrtype: ${3:#static|dhcp|addrconf}",
      "\t#state: ${4:absent|#present|up|down|enabled|disabled|refreshed}",
      "\t#temporary: ${5:false}",
      "\t#wait: ${6:60}"
    ]
  },
  "ipadm_addrprop": {
    "prefix": "ipadm_addrprop",
    "description": "Manage IP address properties on Solaris/illumos systems.",
    "body": [
      "community.network.ipadm_addrprop:",
      "\taddrobj: ${1:}",
      "\tproperty: ${2:}",
      "\t#state: ${3:#present|absent|reset}",
      "\t#temporary: ${4:false}",
      "\t#value: ${5:}"
    ]
  },
  "ipadm_if": {
    "prefix": "ipadm_if",
    "description": "Manage IP interfaces  on Solaris/illumos systems.",
    "body": [
      "community.network.ipadm_if:",
      "\tname: ${1:}",
      "\t#state: ${2:#present|absent|enabled|disabled}",
      "\t#temporary: ${3:false}"
    ]
  },
  "ipadm_ifprop": {
    "prefix": "ipadm_ifprop",
    "description": "Manage IP interface properties on Solaris/illumos systems.",
    "body": [
      "community.network.ipadm_ifprop:",
      "\tinterface: ${1:}",
      "\tproperty: ${2:}",
      "\tprotocol: ${3:}",
      "\t#state: ${4:#present|absent|reset}",
      "\t#temporary: ${5:false}",
      "\t#value: ${6:}"
    ]
  },
  "ipadm_prop": {
    "prefix": "ipadm_prop",
    "description": "Manage protocol properties on Solaris/illumos systems.",
    "body": [
      "community.network.ipadm_prop:",
      "\tproperty: ${1:}",
      "\tprotocol: ${2:}",
      "\t#state: ${3:#present|absent|reset}",
      "\t#temporary: ${4:false}",
      "\t#value: ${5:}"
    ]
  },
  "ironware_command": {
    "prefix": "ironware_command",
    "description": "Run arbitrary commands on Extreme IronWare devices",
    "body": [
      "community.network.ironware_command:",
      "\tcommands: ${1:}",
      "\t#authorize: ${2:false}",
      "\t#interval: ${3:1}",
      "\t#match: ${4:any|#all}",
      "\t#retries: ${5:10}",
      "\t#wait_for: ${6:}"
    ]
  },
  "ironware_config": {
    "prefix": "ironware_config",
    "description": "Manage configuration sections on Extreme Ironware devices",
    "body": [
      "community.network.ironware_config:",
      "\t#after: ${1:}",
      "\t#authorize: ${2:false}",
      "\t#backup: ${3:false}",
      "\t#backup_options: ${4:}",
      "\t#before: ${5:}",
      "\t#commit: ${6:#merge|check}",
      "\t#config: ${7:}",
      "\t#lines: ${8:}",
      "\t#match: ${9:#line|strict|exact|none}",
      "\t#parents: ${10:}",
      "\t#replace: ${11:#line|block}",
      "\t#save_when: ${12:always|#never|modified}",
      "\t#src: ${13:}",
      "\t#update: ${14:#merge|check}"
    ]
  },
  "ironware_facts": {
    "prefix": "ironware_facts",
    "description": "Collect facts from devices running Extreme Ironware",
    "body": [
      "community.network.ironware_facts:",
      "\t#authorize: ${1:false}",
      "\t#gather_subset: ${2:['!config', '!mpls']}"
    ]
  },
  "nclu": {
    "prefix": "nclu",
    "description": "Configure network interfaces using NCLU",
    "body": [
      "community.network.nclu:",
      "\t#abort: ${1:false}",
      "\t#atomic: ${2:false}",
      "\t#commands: ${3:}",
      "\t#commit: ${4:false}",
      "\t#description: ${5:Ansible-originated commit}",
      "\t#template: ${6:}"
    ]
  },
  "netact_cm_command": {
    "prefix": "netact_cm_command",
    "description": "Manage network configuration data in Nokia Core and Radio networks",
    "body": [
      "community.network.netact_cm_command:",
      "\toperation: ${1:upload|provision|import|export|Provision_Mass_Modification}",
      "\t#DN: ${2:}",
      "\t#MR: ${3:}",
      "\t#WS: ${4:}",
      "\t#backupPlanName: ${5:}",
      "\t#createBackupPlan: ${6:}",
      "\t#extra_opts: ${7:}",
      "\t#fileFormat: ${8:RAML2|CSV|XLSX}",
      "\t#fileName: ${9:}",
      "\t#inputFile: ${10:}",
      "\t#opsName: ${11:}",
      "\t#planName: ${12:}",
      "\t#typeOption: ${13:plan|actual|reference|template|siteTemplate}",
      "\t#verbose: ${14:}"
    ]
  },
  "netscaler_cs_action": {
    "prefix": "netscaler_cs_action",
    "description": "Manage content switching actions",
    "body": [
      "community.network.netscaler_cs_action:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#comment: ${4:}",
      "\t#name: ${5:}",
      "\t#nitro_protocol: ${6:#http|https}",
      "\t#nitro_timeout: ${7:310}",
      "\t#save_config: ${8:true}",
      "\t#state: ${9:absent|#present}",
      "\t#targetlbvserver: ${10:}",
      "\t#targetvserver: ${11:}",
      "\t#targetvserverexpr: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "netscaler_cs_policy": {
    "prefix": "netscaler_cs_policy",
    "description": "Manage content switching policy",
    "body": [
      "community.network.netscaler_cs_policy:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#action: ${4:}",
      "\t#domain: ${5:}",
      "\t#nitro_protocol: ${6:#http|https}",
      "\t#nitro_timeout: ${7:310}",
      "\t#policyname: ${8:}",
      "\t#rule: ${9:}",
      "\t#save_config: ${10:true}",
      "\t#state: ${11:absent|#present}",
      "\t#url: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "netscaler_cs_vserver": {
    "prefix": "netscaler_cs_vserver",
    "description": "Manage content switching vserver",
    "body": [
      "community.network.netscaler_cs_vserver:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#appflowlog: ${4:enabled|disabled}",
      "\t#authentication: ${5:}",
      "\t#authenticationhost: ${6:}",
      "\t#authn401: ${7:}",
      "\t#authnprofile: ${8:}",
      "\t#authnvsname: ${9:}",
      "\t#backupip: ${10:}",
      "\t#backupvserver: ${11:}",
      "\t#cacheable: ${12:}",
      "\t#casesensitive: ${13:}",
      "\t#clttimeout: ${14:}",
      "\t#comment: ${15:}",
      "\t#cookiedomain: ${16:}",
      "\t#cookietimeout: ${17:}",
      "\t#dbprofilename: ${18:}",
      "\t#disabled: ${19:false}",
      "\t#disableprimaryondown: ${20:enabled|disabled}",
      "\t#dnsprofilename: ${21:}",
      "\t#domainname: ${22:}",
      "\t#downstateflush: ${23:enabled|disabled}",
      "\t#httpprofilename: ${24:}",
      "\t#icmpvsrresponse: ${25:PASSIVE|ACTIVE}",
      "\t#insertvserveripport: ${26:OFF|VIPADDR|V6TOV4MAPPING}",
      "\t#ipmask: ${27:}",
      "\t#ippattern: ${28:}",
      "\t#ipv46: ${29:}",
      "\t#l2conn: ${30:}",
      "\t#lbvserver: ${31:}",
      "\t#listenpolicy: ${32:}",
      "\t#mssqlserverversion: ${33:70|2000|2000SP1|2005|2008|2008R2|2012|2014}",
      "\t#mysqlcharacterset: ${34:}",
      "\t#mysqlprotocolversion: ${35:}",
      "\t#mysqlservercapabilities: ${36:}",
      "\t#mysqlserverversion: ${37:}",
      "\t#name: ${38:}",
      "\t#netprofile: ${39:}",
      "\t#nitro_protocol: ${40:#http|https}",
      "\t#nitro_timeout: ${41:310}",
      "\t#oracleserverversion: ${42:10G|11G}",
      "\t#port: ${43:}",
      "\t#precedence: ${44:RULE|URL}",
      "\t#push: ${45:enabled|disabled}",
      "\t#pushlabel: ${46:}",
      "\t#pushmulticlients: ${47:}",
      "\t#pushvserver: ${48:}",
      "\t#range: ${49:}",
      "\t#redirectportrewrite: ${50:enabled|disabled}",
      "\t#redirecturl: ${51:}",
      "\t#rhistate: ${52:PASSIVE|ACTIVE}",
      "\t#rtspnat: ${53:}",
      "\t#save_config: ${54:true}",
      "\t#servicetype: ${55:HTTP|SSL|TCP|FTP|RTSP|SSL_TCP|UDP|DNS|SIP_UDP|SIP_TCP|SIP_SSL|ANY|RADIUS|RDP|MYSQL|MSSQL|DIAMETER|SSL_DIAMETER|DNS_TCP|ORACLE|SMPP}",
      "\t#sitedomainttl: ${56:}",
      "\t#sobackupaction: ${57:DROP|ACCEPT|REDIRECT}",
      "\t#somethod: ${58:CONNECTION|DYNAMICCONNECTION|BANDWIDTH|HEALTH|NONE}",
      "\t#sopersistence: ${59:enabled|disabled}",
      "\t#sopersistencetimeout: ${60:}",
      "\t#sothreshold: ${61:}",
      "\t#ssl_certkey: ${62:}",
      "\t#state: ${63:absent|#present}",
      "\t#stateupdate: ${64:enabled|disabled}",
      "\t#targettype: ${65:GSLB}",
      "\t#tcpprofilename: ${66:}",
      "\t#td: ${67:}",
      "\t#ttl: ${68:}",
      "\t#validate_certs: ${69:true}",
      "\t#vipheader: ${70:}"
    ]
  },
  "netscaler_gslb_service": {
    "prefix": "netscaler_gslb_service",
    "description": "Manage gslb service entities in Netscaler.",
    "body": [
      "community.network.netscaler_gslb_service:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#appflowlog: ${4:enabled|disabled}",
      "\t#cip: ${5:enabled|disabled}",
      "\t#cipheader: ${6:}",
      "\t#clttimeout: ${7:}",
      "\t#cnameentry: ${8:}",
      "\t#comment: ${9:}",
      "\t#downstateflush: ${10:enabled|disabled}",
      "\t#hashid: ${11:}",
      "\t#healthmonitor: ${12:}",
      "\t#ipaddress: ${13:}",
      "\t#maxaaausers: ${14:}",
      "\t#maxbandwidth: ${15:}",
      "\t#maxclient: ${16:}",
      "\t#monitor_bindings: ${17:}",
      "\t#monthreshold: ${18:}",
      "\t#nitro_protocol: ${19:#http|https}",
      "\t#nitro_timeout: ${20:310}",
      "\t#port: ${21:}",
      "\t#publicip: ${22:}",
      "\t#publicport: ${23:}",
      "\t#save_config: ${24:true}",
      "\t#servername: ${25:}",
      "\t#servicename: ${26:}",
      "\t#servicetype: ${27:HTTP|FTP|TCP|UDP|SSL|SSL_BRIDGE|SSL_TCP|NNTP|ANY|SIP_UDP|SIP_TCP|SIP_SSL|RADIUS|RDP|RTSP|MYSQL|MSSQL|ORACLE}",
      "\t#sitename: ${28:}",
      "\t#sitepersistence: ${29:ConnectionProxy|HTTPRedirect|NONE}",
      "\t#siteprefix: ${30:}",
      "\t#state: ${31:absent|#present}",
      "\t#validate_certs: ${32:true}"
    ]
  },
  "netscaler_gslb_site": {
    "prefix": "netscaler_gslb_site",
    "description": "Manage gslb site entities in Netscaler.",
    "body": [
      "community.network.netscaler_gslb_site:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#clip: ${4:}",
      "\t#metricexchange: ${5:enabled|disabled}",
      "\t#naptrreplacementsuffix: ${6:}",
      "\t#nitro_protocol: ${7:#http|https}",
      "\t#nitro_timeout: ${8:310}",
      "\t#nwmetricexchange: ${9:enabled|disabled}",
      "\t#parentsite: ${10:}",
      "\t#publicclip: ${11:}",
      "\t#publicip: ${12:}",
      "\t#save_config: ${13:true}",
      "\t#sessionexchange: ${14:enabled|disabled}",
      "\t#siteipaddress: ${15:}",
      "\t#sitename: ${16:}",
      "\t#sitetype: ${17:REMOTE|LOCAL}",
      "\t#state: ${18:absent|#present}",
      "\t#triggermonitor: ${19:ALWAYS|MEPDOWN|MEPDOWN_SVCDOWN}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "netscaler_gslb_vserver": {
    "prefix": "netscaler_gslb_vserver",
    "description": "Configure gslb vserver entities in Netscaler.",
    "body": [
      "community.network.netscaler_gslb_vserver:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#appflowlog: ${4:enabled|disabled}",
      "\t#backuplbmethod: ${5:ROUNDROBIN|LEASTCONNECTION|LEASTRESPONSETIME|SOURCEIPHASH|LEASTBANDWIDTH|LEASTPACKETS|STATICPROXIMITY|RTT|CUSTOMLOAD}",
      "\t#comment: ${6:}",
      "\t#considereffectivestate: ${7:NONE|STATE_ONLY}",
      "\t#disabled: ${8:false}",
      "\t#disableprimaryondown: ${9:enabled|disabled}",
      "\t#dnsrecordtype: ${10:A|AAAA|CNAME|NAPTR}",
      "\t#domain_bindings: ${11:}",
      "\t#dynamicweight: ${12:SERVICECOUNT|SERVICEWEIGHT|DISABLED}",
      "\t#lbmethod: ${13:ROUNDROBIN|LEASTCONNECTION|LEASTRESPONSETIME|SOURCEIPHASH|LEASTBANDWIDTH|LEASTPACKETS|STATICPROXIMITY|RTT|CUSTOMLOAD}",
      "\t#mir: ${14:enabled|disabled}",
      "\t#name: ${15:}",
      "\t#netmask: ${16:}",
      "\t#nitro_protocol: ${17:#http|https}",
      "\t#nitro_timeout: ${18:310}",
      "\t#persistenceid: ${19:}",
      "\t#persistencetype: ${20:SOURCEIP|NONE}",
      "\t#persistmask: ${21:}",
      "\t#save_config: ${22:true}",
      "\t#service_bindings: ${23:}",
      "\t#servicetype: ${24:HTTP|FTP|TCP|UDP|SSL|SSL_BRIDGE|SSL_TCP|NNTP|ANY|SIP_UDP|SIP_TCP|SIP_SSL|RADIUS|RDP|RTSP|MYSQL|MSSQL|ORACLE}",
      "\t#sobackupaction: ${25:DROP|ACCEPT|REDIRECT}",
      "\t#somethod: ${26:CONNECTION|DYNAMICCONNECTION|BANDWIDTH|HEALTH|NONE}",
      "\t#sopersistence: ${27:enabled|disabled}",
      "\t#sopersistencetimeout: ${28:}",
      "\t#sothreshold: ${29:}",
      "\t#state: ${30:absent|#present}",
      "\t#timeout: ${31:}",
      "\t#tolerance: ${32:}",
      "\t#v6netmasklen: ${33:}",
      "\t#v6persistmasklen: ${34:}",
      "\t#validate_certs: ${35:true}"
    ]
  },
  "netscaler_lb_monitor": {
    "prefix": "netscaler_lb_monitor",
    "description": "Manage load balancing monitors",
    "body": [
      "community.network.netscaler_lb_monitor:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#Snmpoid: ${4:}",
      "\t#acctapplicationid: ${5:}",
      "\t#action: ${6:NONE|LOG|DOWN}",
      "\t#alertretries: ${7:}",
      "\t#application: ${8:}",
      "\t#attribute: ${9:}",
      "\t#authapplicationid: ${10:}",
      "\t#basedn: ${11:}",
      "\t#binddn: ${12:}",
      "\t#customheaders: ${13:}",
      "\t#database: ${14:}",
      "\t#destip: ${15:}",
      "\t#destport: ${16:}",
      "\t#deviation: ${17:}",
      "\t#dispatcherip: ${18:}",
      "\t#dispatcherport: ${19:}",
      "\t#domain: ${20:}",
      "\t#downtime: ${21:}",
      "\t#evalrule: ${22:}",
      "\t#failureretries: ${23:}",
      "\t#filename: ${24:}",
      "\t#filter: ${25:}",
      "\t#firmwarerevision: ${26:}",
      "\t#group: ${27:}",
      "\t#hostipaddress: ${28:}",
      "\t#hostname: ${29:}",
      "\t#httprequest: ${30:}",
      "\t#inbandsecurityid: ${31:NO_INBAND_SECURITY|TLS}",
      "\t#interval: ${32:}",
      "\t#ipaddress: ${33:}",
      "\t#iptunnel: ${34:}",
      "\t#kcdaccount: ${35:}",
      "\t#lasversion: ${36:}",
      "\t#logonpointname: ${37:}",
      "\t#lrtm: ${38:enabled|disabled}",
      "\t#maxforwards: ${39:}",
      "\t#metrictable: ${40:}",
      "\t#monitorname: ${41:}",
      "\t#mssqlprotocolversion: ${42:70|2000|2000SP1|2005|2008|2008R2|2012|2014}",
      "\t#netprofile: ${43:}",
      "\t#nitro_protocol: ${44:#http|https}",
      "\t#nitro_timeout: ${45:310}",
      "\t#oraclesid: ${46:}",
      "\t#originhost: ${47:}",
      "\t#originrealm: ${48:}",
      "\t#password: ${49:}",
      "\t#productname: ${50:}",
      "\t#query: ${51:}",
      "\t#querytype: ${52:Address|Zone|AAAA}",
      "\t#radaccountsession: ${53:}",
      "\t#radaccounttype: ${54:}",
      "\t#radapn: ${55:}",
      "\t#radframedip: ${56:}",
      "\t#radkey: ${57:}",
      "\t#radmsisdn: ${58:}",
      "\t#radnasid: ${59:}",
      "\t#radnasip: ${60:}",
      "\t#recv: ${61:}",
      "\t#respcode: ${62:}",
      "\t#resptimeout: ${63:}",
      "\t#resptimeoutthresh: ${64:}",
      "\t#retries: ${65:}",
      "\t#reverse: ${66:}",
      "\t#rtsprequest: ${67:}",
      "\t#save_config: ${68:true}",
      "\t#scriptargs: ${69:}",
      "\t#scriptname: ${70:}",
      "\t#secondarypassword: ${71:}",
      "\t#secure: ${72:}",
      "\t#send: ${73:}",
      "\t#sipmethod: ${74:OPTIONS|INVITE|REGISTER}",
      "\t#sipreguri: ${75:}",
      "\t#sipuri: ${76:}",
      "\t#sitepath: ${77:}",
      "\t#snmpcommunity: ${78:}",
      "\t#snmpthreshold: ${79:}",
      "\t#snmpversion: ${80:V1|V2}",
      "\t#sqlquery: ${81:}",
      "\t#state: ${82:enabled|disabled}",
      "\t#storedb: ${83:enabled|disabled}",
      "\t#storefrontacctservice: ${84:}",
      "\t#storefrontcheckbackendservices: ${85:}",
      "\t#storename: ${86:}",
      "\t#successretries: ${87:}",
      "\t#supportedvendorids: ${88:}",
      "\t#tos: ${89:}",
      "\t#tosid: ${90:}",
      "\t#transparent: ${91:}",
      "\t#trofscode: ${92:}",
      "\t#trofsstring: ${93:}",
      "\t#type: ${94:PING|TCP|HTTP|TCP-ECV|HTTP-ECV|UDP-ECV|DNS|FTP|LDNS-PING|LDNS-TCP|LDNS-DNS|RADIUS|USER|HTTP-INLINE|SIP-UDP|SIP-TCP|LOAD|FTP-EXTENDED|SMTP|SNMP|NNTP|MYSQL|MYSQL-ECV|MSSQL-ECV|ORACLE-ECV|LDAP|POP3|CITRIX-XML-SERVICE|CITRIX-WEB-INTERFACE|DNS-TCP|RTSP|ARP|CITRIX-AG|CITRIX-AAC-LOGINPAGE|CITRIX-AAC-LAS|CITRIX-XD-DDC|ND6|CITRIX-WI-EXTENDED|DIAMETER|RADIUS_ACCOUNTING|STOREFRONT|APPC|SMPP|CITRIX-XNC-ECV|CITRIX-XDM|CITRIX-STA-SERVICE|CITRIX-STA-SERVICE-NHOP}",
      "\t#units1: ${95:SEC|MSEC|MIN}",
      "\t#units2: ${96:SEC|MSEC|MIN}",
      "\t#units3: ${97:SEC|MSEC|MIN}",
      "\t#units4: ${98:SEC|MSEC|MIN}",
      "\t#username: ${99:}",
      "\t#validate_certs: ${100:true}",
      "\t#validatecred: ${101:}",
      "\t#vendorid: ${102:}",
      "\t#vendorspecificacctapplicationids: ${103:}",
      "\t#vendorspecificauthapplicationids: ${104:}",
      "\t#vendorspecificvendorid: ${105:}"
    ]
  },
  "netscaler_lb_vserver": {
    "prefix": "netscaler_lb_vserver",
    "description": "Manage load balancing vserver configuration",
    "body": [
      "community.network.netscaler_lb_vserver:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#appflowlog: ${4:enabled|disabled}",
      "\t#authentication: ${5:}",
      "\t#authenticationhost: ${6:}",
      "\t#authn401: ${7:}",
      "\t#authnprofile: ${8:}",
      "\t#authnvsname: ${9:}",
      "\t#backuplbmethod: ${10:ROUNDROBIN|LEASTCONNECTION|LEASTRESPONSETIME|SOURCEIPHASH|LEASTBANDWIDTH|LEASTPACKETS|CUSTOMLOAD}",
      "\t#backuppersistencetimeout: ${11:}",
      "\t#bypassaaaa: ${12:}",
      "\t#cacheable: ${13:}",
      "\t#clttimeout: ${14:}",
      "\t#comment: ${15:}",
      "\t#connfailover: ${16:DISABLED|STATEFUL|STATELESS}",
      "\t#cookiename: ${17:}",
      "\t#datalength: ${18:}",
      "\t#dataoffset: ${19:}",
      "\t#dbprofilename: ${20:}",
      "\t#dbslb: ${21:enabled|disabled}",
      "\t#disabled: ${22:false}",
      "\t#disableprimaryondown: ${23:enabled|disabled}",
      "\t#dns64: ${24:enabled|disabled}",
      "\t#dnsprofilename: ${25:}",
      "\t#downstateflush: ${26:enabled|disabled}",
      "\t#hashlength: ${27:}",
      "\t#healththreshold: ${28:}",
      "\t#httpprofilename: ${29:}",
      "\t#icmpvsrresponse: ${30:PASSIVE|ACTIVE}",
      "\t#insertvserveripport: ${31:OFF|VIPADDR|V6TOV4MAPPING}",
      "\t#ipmask: ${32:}",
      "\t#ippattern: ${33:}",
      "\t#ipv46: ${34:}",
      "\t#l2conn: ${35:}",
      "\t#lbmethod: ${36:ROUNDROBIN|LEASTCONNECTION|LEASTRESPONSETIME|URLHASH|DOMAINHASH|DESTINATIONIPHASH|SOURCEIPHASH|SRCIPDESTIPHASH|LEASTBANDWIDTH|LEASTPACKETS|TOKEN|SRCIPSRCPORTHASH|LRTM|CALLIDHASH|CUSTOMLOAD|LEASTREQUEST|AUDITLOGHASH|STATICPROXIMITY}",
      "\t#listenpolicy: ${37:}",
      "\t#listenpriority: ${38:}",
      "\t#m: ${39:IP|MAC|IPTUNNEL|TOS}",
      "\t#macmoderetainvlan: ${40:enabled|disabled}",
      "\t#maxautoscalemembers: ${41:}",
      "\t#minautoscalemembers: ${42:}",
      "\t#mssqlserverversion: ${43:70|2000|2000SP1|2005|2008|2008R2|2012|2014}",
      "\t#mysqlcharacterset: ${44:}",
      "\t#mysqlprotocolversion: ${45:}",
      "\t#mysqlservercapabilities: ${46:}",
      "\t#mysqlserverversion: ${47:}",
      "\t#name: ${48:}",
      "\t#netmask: ${49:}",
      "\t#netprofile: ${50:}",
      "\t#newservicerequest: ${51:}",
      "\t#newservicerequestincrementinterval: ${52:}",
      "\t#newservicerequestunit: ${53:PER_SECOND|PERCENT}",
      "\t#nitro_protocol: ${54:#http|https}",
      "\t#nitro_timeout: ${55:310}",
      "\t#oracleserverversion: ${56:10G|11G}",
      "\t#persistavpno: ${57:}",
      "\t#persistencebackup: ${58:SOURCEIP|NONE}",
      "\t#persistencetype: ${59:SOURCEIP|COOKIEINSERT|SSLSESSION|RULE|URLPASSIVE|CUSTOMSERVERID|DESTIP|SRCIPDESTIP|CALLID|RTSPSID|DIAMETER|FIXSESSION|NONE}",
      "\t#persistmask: ${60:}",
      "\t#port: ${61:}",
      "\t#processlocal: ${62:enabled|disabled}",
      "\t#push: ${63:enabled|disabled}",
      "\t#pushlabel: ${64:}",
      "\t#pushmulticlients: ${65:}",
      "\t#pushvserver: ${66:}",
      "\t#range: ${67:}",
      "\t#recursionavailable: ${68:}",
      "\t#redirectportrewrite: ${69:enabled|disabled}",
      "\t#redirurl: ${70:}",
      "\t#resrule: ${71:}",
      "\t#rhistate: ${72:PASSIVE|ACTIVE}",
      "\t#rtspnat: ${73:}",
      "\t#save_config: ${74:true}",
      "\t#servicebindings: ${75:}",
      "\t#servicegroupbindings: ${76:}",
      "\t#servicetype: ${77:HTTP|FTP|TCP|UDP|SSL|SSL_BRIDGE|SSL_TCP|DTLS|NNTP|DNS|DHCPRA|ANY|SIP_UDP|SIP_TCP|SIP_SSL|DNS_TCP|RTSP|PUSH|SSL_PUSH|RADIUS|RDP|MYSQL|MSSQL|DIAMETER|SSL_DIAMETER|TFTP|ORACLE|SMPP|SYSLOGTCP|SYSLOGUDP|FIX|SSL_FIX}",
      "\t#sessionless: ${78:enabled|disabled}",
      "\t#skippersistency: ${79:Bypass|ReLb|None}",
      "\t#sobackupaction: ${80:DROP|ACCEPT|REDIRECT}",
      "\t#somethod: ${81:CONNECTION|DYNAMICCONNECTION|BANDWIDTH|HEALTH|NONE}",
      "\t#sopersistence: ${82:enabled|disabled}",
      "\t#sopersistencetimeout: ${83:}",
      "\t#sothreshold: ${84:}",
      "\t#ssl_certkey: ${85:}",
      "\t#state: ${86:absent|#present}",
      "\t#tcpprofilename: ${87:}",
      "\t#td: ${88:}",
      "\t#timeout: ${89:}",
      "\t#tosid: ${90:}",
      "\t#v6netmasklen: ${91:}",
      "\t#v6persistmasklen: ${92:}",
      "\t#validate_certs: ${93:true}",
      "\t#vipheader: ${94:}"
    ]
  },
  "netscaler_nitro_request": {
    "prefix": "netscaler_nitro_request",
    "description": "Issue Nitro API requests to a Netscaler instance.",
    "body": [
      "community.network.netscaler_nitro_request:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\t#action: ${3:}",
      "\t#args: ${4:}",
      "\t#attributes: ${5:}",
      "\t#expected_nitro_errorcode: ${6:[0]}",
      "\t#filter: ${7:}",
      "\t#instance_id: ${8:}",
      "\t#instance_ip: ${9:}",
      "\t#instance_name: ${10:}",
      "\t#name: ${11:}",
      "\t#nitro_auth_token: ${12:}",
      "\t#nitro_protocol: ${13:#http|https}",
      "\t#nsip: ${14:}",
      "\t#operation: ${15:add|update|get|get_by_args|get_filtered|get_all|delete|delete_by_args|count|mas_login|save_config|action}",
      "\t#resource: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "netscaler_save_config": {
    "prefix": "netscaler_save_config",
    "description": "Save Netscaler configuration.",
    "body": [
      "community.network.netscaler_save_config:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#nitro_protocol: ${4:#http|https}",
      "\t#nitro_timeout: ${5:310}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "netscaler_server": {
    "prefix": "netscaler_server",
    "description": "Manage server configuration",
    "body": [
      "community.network.netscaler_server:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#comment: ${4:}",
      "\t#delay: ${5:}",
      "\t#disabled: ${6:false}",
      "\t#domain: ${7:}",
      "\t#domainresolveretry: ${8:5}",
      "\t#graceful: ${9:}",
      "\t#ipaddress: ${10:}",
      "\t#ipv6address: ${11:false}",
      "\t#name: ${12:}",
      "\t#nitro_protocol: ${13:#http|https}",
      "\t#nitro_timeout: ${14:310}",
      "\t#save_config: ${15:true}",
      "\t#state: ${16:absent|#present}",
      "\t#td: ${17:}",
      "\t#translationip: ${18:}",
      "\t#translationmask: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "netscaler_service": {
    "prefix": "netscaler_service",
    "description": "Manage service configuration in Netscaler",
    "body": [
      "community.network.netscaler_service:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#accessdown: ${4:false}",
      "\t#appflowlog: ${5:enabled|disabled}",
      "\t#cacheable: ${6:false}",
      "\t#cachetype: ${7:TRANSPARENT|REVERSE|FORWARD}",
      "\t#cip: ${8:enabled|disabled}",
      "\t#cipheader: ${9:}",
      "\t#cka: ${10:}",
      "\t#cleartextport: ${11:}",
      "\t#clttimeout: ${12:}",
      "\t#cmp: ${13:}",
      "\t#comment: ${14:}",
      "\t#customserverid: ${15:None}",
      "\t#disabled: ${16:false}",
      "\t#dnsprofilename: ${17:}",
      "\t#downstateflush: ${18:enabled|disabled}",
      "\t#graceful: ${19:false}",
      "\t#hashid: ${20:}",
      "\t#healthmonitor: ${21:true}",
      "\t#httpprofilename: ${22:}",
      "\t#ip: ${23:}",
      "\t#ipaddress: ${24:}",
      "\t#maxbandwidth: ${25:}",
      "\t#maxclient: ${26:}",
      "\t#maxreq: ${27:}",
      "\t#monitor_bindings: ${28:}",
      "\t#monthreshold: ${29:}",
      "\t#name: ${30:}",
      "\t#netprofile: ${31:}",
      "\t#nitro_protocol: ${32:#http|https}",
      "\t#nitro_timeout: ${33:310}",
      "\t#pathmonitor: ${34:}",
      "\t#pathmonitorindv: ${35:}",
      "\t#port: ${36:}",
      "\t#processlocal: ${37:enabled|disabled}",
      "\t#rtspsessionidremap: ${38:false}",
      "\t#save_config: ${39:true}",
      "\t#serverid: ${40:}",
      "\t#servername: ${41:}",
      "\t#servicetype: ${42:HTTP|FTP|TCP|UDP|SSL|SSL_BRIDGE|SSL_TCP|DTLS|NNTP|RPCSVR|DNS|ADNS|SNMP|RTSP|DHCPRA|ANY|SIP_UDP|SIP_TCP|SIP_SSL|DNS_TCP|ADNS_TCP|MYSQL|MSSQL|ORACLE|RADIUS|RADIUSListener|RDP|DIAMETER|SSL_DIAMETER|TFTP|SMPP|PPTP|GRE|SYSLOGTCP|SYSLOGUDP|FIX|SSL_FIX}",
      "\t#sp: ${43:}",
      "\t#state: ${44:absent|#present}",
      "\t#svrtimeout: ${45:}",
      "\t#tcpb: ${46:}",
      "\t#tcpprofilename: ${47:}",
      "\t#td: ${48:}",
      "\t#useproxyport: ${49:}",
      "\t#usip: ${50:}",
      "\t#validate_certs: ${51:true}"
    ]
  },
  "netscaler_servicegroup": {
    "prefix": "netscaler_servicegroup",
    "description": "Manage service group configuration in Netscaler",
    "body": [
      "community.network.netscaler_servicegroup:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#appflowlog: ${4:enabled|disabled}",
      "\t#autoscale: ${5:DISABLED|DNS|POLICY}",
      "\t#cacheable: ${6:}",
      "\t#cachetype: ${7:TRANSPARENT|REVERSE|FORWARD}",
      "\t#cip: ${8:enabled|disabled}",
      "\t#cipheader: ${9:}",
      "\t#cka: ${10:}",
      "\t#clttimeout: ${11:}",
      "\t#cmp: ${12:}",
      "\t#comment: ${13:}",
      "\t#disabled: ${14:false}",
      "\t#downstateflush: ${15:enabled|disabled}",
      "\t#graceful: ${16:}",
      "\t#healthmonitor: ${17:}",
      "\t#httpprofilename: ${18:}",
      "\t#maxbandwidth: ${19:}",
      "\t#maxclient: ${20:}",
      "\t#maxreq: ${21:}",
      "\t#memberport: ${22:}",
      "\t#monitorbindings: ${23:}",
      "\t#monthreshold: ${24:}",
      "\t#netprofile: ${25:}",
      "\t#nitro_protocol: ${26:#http|https}",
      "\t#nitro_timeout: ${27:310}",
      "\t#pathmonitor: ${28:}",
      "\t#pathmonitorindv: ${29:}",
      "\t#rtspsessionidremap: ${30:}",
      "\t#save_config: ${31:true}",
      "\t#servicegroupname: ${32:}",
      "\t#servicemembers: ${33:}",
      "\t#servicetype: ${34:HTTP|FTP|TCP|UDP|SSL|SSL_BRIDGE|SSL_TCP|DTLS|NNTP|RPCSVR|DNS|ADNS|SNMP|RTSP|DHCPRA|ANY|SIP_UDP|SIP_TCP|SIP_SSL|DNS_TCP|ADNS_TCP|MYSQL|MSSQL|ORACLE|RADIUS|RADIUSListener|RDP|DIAMETER|SSL_DIAMETER|TFTP|SMPP|PPTP|GRE|SYSLOGTCP|SYSLOGUDP|FIX|SSL_FIX}",
      "\t#sp: ${35:}",
      "\t#state: ${36:absent|#present}",
      "\t#svrtimeout: ${37:}",
      "\t#tcpb: ${38:}",
      "\t#tcpprofilename: ${39:}",
      "\t#useproxyport: ${40:}",
      "\t#usip: ${41:}",
      "\t#validate_certs: ${42:true}"
    ]
  },
  "netscaler_ssl_certkey": {
    "prefix": "netscaler_ssl_certkey",
    "description": "Manage ssl certificate keys.",
    "body": [
      "community.network.netscaler_ssl_certkey:",
      "\tnitro_pass: ${1:}",
      "\tnitro_user: ${2:}",
      "\tnsip: ${3:}",
      "\t#cert: ${4:}",
      "\t#certkey: ${5:}",
      "\t#expirymonitor: ${6:enabled|disabled}",
      "\t#inform: ${7:DER|PEM|PFX}",
      "\t#key: ${8:}",
      "\t#nitro_protocol: ${9:#http|https}",
      "\t#nitro_timeout: ${10:310}",
      "\t#notificationperiod: ${11:}",
      "\t#passplain: ${12:}",
      "\t#password: ${13:}",
      "\t#save_config: ${14:true}",
      "\t#state: ${15:absent|#present}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "nos_command": {
    "prefix": "nos_command",
    "description": "Run commands on remote devices running Extreme Networks NOS",
    "body": [
      "community.network.nos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "nos_config": {
    "prefix": "nos_config",
    "description": "Manage Extreme Networks NOS configuration sections",
    "body": [
      "community.network.nos_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#diff_against: ${5:running|intended}",
      "\t#diff_ignore_lines: ${6:}",
      "\t#intended_config: ${7:}",
      "\t#lines: ${8:}",
      "\t#match: ${9:#line|strict|exact|none}",
      "\t#multiline_delimiter: ${10:@}",
      "\t#parents: ${11:}",
      "\t#replace: ${12:#line|block}",
      "\t#running_config: ${13:}",
      "\t#src: ${14:}"
    ]
  },
  "nos_facts": {
    "prefix": "nos_facts",
    "description": "Collect facts from devices running Extreme NOS",
    "body": [
      "community.network.nos_facts:",
      "\t#gather_subset: ${1:!config}"
    ]
  },
  "nuage_vspk": {
    "prefix": "nuage_vspk",
    "description": "Manage Nuage VSP environments",
    "body": [
      "community.network.nuage_vspk:",
      "\tauth: ${1:}",
      "\ttype: ${2:}",
      "\t#children: ${3:}",
      "\t#command: ${4:find|change_password|wait_for_job|get_csp_enterprise}",
      "\t#id: ${5:}",
      "\t#match_filter: ${6:}",
      "\t#parent_id: ${7:}",
      "\t#parent_type: ${8:}",
      "\t#properties: ${9:}",
      "\t#state: ${10:present|absent}"
    ]
  },
  "opx_cps": {
    "prefix": "opx_cps",
    "description": "CPS operations on networking device running Openswitch (OPX)",
    "body": [
      "community.network.opx_cps:",
      "\t#attr_data: ${1:}",
      "\t#attr_type: ${2:}",
      "\t#commit_event: ${3:false}",
      "\t#db: ${4:false}",
      "\t#module_name: ${5:}",
      "\t#operation: ${6:delete|#create|set|action|get}",
      "\t#qualifier: ${7:#target|observed|proposed|realtime|registration|running|startup}"
    ]
  },
  "ordnance_config": {
    "prefix": "ordnance_config",
    "description": "Manage Ordnance configuration sections",
    "body": [
      "community.network.ordnance_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#before: ${3:}",
      "\t#config: ${4:}",
      "\t#defaults: ${5:false}",
      "\t#lines: ${6:}",
      "\t#match: ${7:#line|strict|exact|none}",
      "\t#multiline_delimiter: ${8:@}",
      "\t#parents: ${9:}",
      "\t#replace: ${10:#line|block}",
      "\t#save: ${11:false}",
      "\t#src: ${12:}"
    ]
  },
  "ordnance_facts": {
    "prefix": "ordnance_facts",
    "description": "Collect facts from Ordnance Virtual Routers over SSH",
    "body": [
      "community.network.ordnance_facts:",
      "\t#gather_subset: ${1:!config}"
    ]
  },
  "pn_access_list": {
    "prefix": "pn_access_list",
    "description": "CLI command to create/delete access-list",
    "body": [
      "community.network.pn_access_list:",
      "\tstate: ${1:present|absent}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_name: ${3:}",
      "\t#pn_scope: ${4:local|fabric}"
    ]
  },
  "pn_access_list_ip": {
    "prefix": "pn_access_list_ip",
    "description": "CLI command to add/remove access-list-ip",
    "body": [
      "community.network.pn_access_list_ip:",
      "\tstate: ${1:present|absent}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_ip: ${3:::}",
      "\t#pn_name: ${4:}"
    ]
  },
  "pn_admin_service": {
    "prefix": "pn_admin_service",
    "description": "CLI command to modify admin-service",
    "body": [
      "community.network.pn_admin_service:",
      "\tstate: ${1:update}",
      "\t#pn__if: ${2:mgmt|data}",
      "\t#pn_cliswitch: ${3:}",
      "\t#pn_icmp: ${4:}",
      "\t#pn_net_api: ${5:}",
      "\t#pn_nfs: ${6:}",
      "\t#pn_snmp: ${7:}",
      "\t#pn_ssh: ${8:}",
      "\t#pn_web: ${9:}",
      "\t#pn_web_log: ${10:}",
      "\t#pn_web_port: ${11:}",
      "\t#pn_web_ssl: ${12:}",
      "\t#pn_web_ssl_port: ${13:}"
    ]
  },
  "pn_admin_session_timeout": {
    "prefix": "pn_admin_session_timeout",
    "description": "CLI command to modify admin-session-timeout",
    "body": [
      "community.network.pn_admin_session_timeout:",
      "\tstate: ${1:update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_timeout: ${3:}"
    ]
  },
  "pn_admin_syslog": {
    "prefix": "pn_admin_syslog",
    "description": "CLI command to create/modify/delete admin-syslog",
    "body": [
      "community.network.pn_admin_syslog:",
      "\tstate: ${1:present|absent|update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_host: ${3:}",
      "\t#pn_message_format: ${4:structured|legacy}",
      "\t#pn_name: ${5:}",
      "\t#pn_port: ${6:}",
      "\t#pn_scope: ${7:local|fabric}",
      "\t#pn_transport: ${8:tcp-tls|#udp}"
    ]
  },
  "pn_connection_stats_settings": {
    "prefix": "pn_connection_stats_settings",
    "description": "CLI command to modify connection-stats-settings",
    "body": [
      "community.network.pn_connection_stats_settings:",
      "\tstate: ${1:update}",
      "\t#pn_client_server_stats_log_disk_space: ${2:}",
      "\t#pn_client_server_stats_log_enable: ${3:}",
      "\t#pn_client_server_stats_log_interval: ${4:}",
      "\t#pn_client_server_stats_max_memory: ${5:}",
      "\t#pn_cliswitch: ${6:}",
      "\t#pn_connection_backup_enable: ${7:}",
      "\t#pn_connection_backup_interval: ${8:}",
      "\t#pn_connection_max_memory: ${9:}",
      "\t#pn_connection_stats_log_disk_space: ${10:}",
      "\t#pn_connection_stats_log_enable: ${11:}",
      "\t#pn_connection_stats_log_interval: ${12:}",
      "\t#pn_connection_stats_max_memory: ${13:}",
      "\t#pn_enable: ${14:}",
      "\t#pn_fabric_connection_backup_enable: ${15:}",
      "\t#pn_fabric_connection_backup_interval: ${16:}",
      "\t#pn_fabric_connection_max_memory: ${17:}",
      "\t#pn_service_stat_max_memory: ${18:}"
    ]
  },
  "pn_cpu_class": {
    "prefix": "pn_cpu_class",
    "description": "CLI command to create/modify/delete cpu-class",
    "body": [
      "community.network.pn_cpu_class:",
      "\tstate: ${1:present|absent|update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_hog_protect: ${3:disable|enable|enable-and-drop}",
      "\t#pn_name: ${4:}",
      "\t#pn_rate_limit: ${5:}",
      "\t#pn_scope: ${6:local|fabric}"
    ]
  },
  "pn_cpu_mgmt_class": {
    "prefix": "pn_cpu_mgmt_class",
    "description": "CLI command to modify cpu-mgmt-class",
    "body": [
      "community.network.pn_cpu_mgmt_class:",
      "\tstate: ${1:update}",
      "\t#pn_burst_size: ${2:}",
      "\t#pn_cliswitch: ${3:}",
      "\t#pn_name: ${4:arp|icmp|ssh|snmp|fabric|bcast|nfs|web|web-ssl|net-api}",
      "\t#pn_rate_limit: ${5:}"
    ]
  },
  "pn_dhcp_filter": {
    "prefix": "pn_dhcp_filter",
    "description": "CLI command to create/modify/delete dhcp-filter",
    "body": [
      "community.network.pn_dhcp_filter:",
      "\tstate: ${1:present|absent|update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_name: ${3:}",
      "\t#pn_trusted_ports: ${4:}"
    ]
  },
  "pn_dscp_map": {
    "prefix": "pn_dscp_map",
    "description": "CLI command to create/delete dscp-map",
    "body": [
      "community.network.pn_dscp_map:",
      "\tstate: ${1:present|absent}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_name: ${3:}",
      "\t#pn_scope: ${4:local|fabric}"
    ]
  },
  "pn_dscp_map_pri_map": {
    "prefix": "pn_dscp_map_pri_map",
    "description": "CLI command to modify dscp-map-pri-map",
    "body": [
      "community.network.pn_dscp_map_pri_map:",
      "\tstate: ${1:update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_dsmap: ${3:}",
      "\t#pn_name: ${4:}",
      "\t#pn_pri: ${5:}"
    ]
  },
  "pn_fabric_local": {
    "prefix": "pn_fabric_local",
    "description": "CLI command to modify fabric-local",
    "body": [
      "community.network.pn_fabric_local:",
      "\tpn_cliswitch: ${1:}",
      "\t#pn_control_network: ${2:in-band|mgmt|vmgmt}",
      "\t#pn_fabric_advertisement_network: ${3:inband-mgmt|inband-only|inband-vmgmt|mgmt-only}",
      "\t#pn_fabric_network: ${4:in-band|#mgmt|vmgmt}",
      "\t#pn_vlan: ${5:}",
      "\t#state: ${6:#update}"
    ]
  },
  "pn_igmp_snooping": {
    "prefix": "pn_igmp_snooping",
    "description": "CLI command to modify igmp-snooping",
    "body": [
      "community.network.pn_igmp_snooping:",
      "\tstate: ${1:update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_enable: ${3:}",
      "\t#pn_enable_vlans: ${4:}",
      "\t#pn_igmpv2_vlans: ${5:}",
      "\t#pn_igmpv3_vlans: ${6:}",
      "\t#pn_no_snoop_linklocal_vlans: ${7:}",
      "\t#pn_query_interval: ${8:}",
      "\t#pn_query_max_response_time: ${9:}",
      "\t#pn_scope: ${10:local|fabric}",
      "\t#pn_snoop_linklocal_vlans: ${11:}",
      "\t#pn_vxlan: ${12:}"
    ]
  },
  "pn_ipv6security_raguard": {
    "prefix": "pn_ipv6security_raguard",
    "description": "CLI command to create/modify/delete ipv6security-raguard",
    "body": [
      "community.network.pn_ipv6security_raguard:",
      "\tpn_name: ${1:}",
      "\t#pn_access_list: ${2:}",
      "\t#pn_cliswitch: ${3:}",
      "\t#pn_device: ${4:host|router}",
      "\t#pn_prefix_list: ${5:}",
      "\t#pn_router_priority: ${6:low|medium|high}",
      "\t#state: ${7:#present|update|absent}"
    ]
  },
  "pn_ipv6security_raguard_port": {
    "prefix": "pn_ipv6security_raguard_port",
    "description": "CLI command to add/remove ipv6security-raguard-port",
    "body": [
      "community.network.pn_ipv6security_raguard_port:",
      "\tpn_name: ${1:}",
      "\tpn_ports: ${2:}",
      "\t#pn_cliswitch: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "pn_ipv6security_raguard_vlan": {
    "prefix": "pn_ipv6security_raguard_vlan",
    "description": "CLI command to add/remove ipv6security-raguard-vlan",
    "body": [
      "community.network.pn_ipv6security_raguard_vlan:",
      "\tpn_name: ${1:}",
      "\tpn_vlans: ${2:}",
      "\t#pn_cliswitch: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "pn_log_audit_exception": {
    "prefix": "pn_log_audit_exception",
    "description": "CLI command to create/delete an audit exception",
    "body": [
      "community.network.pn_log_audit_exception:",
      "\tpn_access: ${1:any|read-only|read-write}",
      "\t#pn_audit_type: ${2:cli|shell|vtysh}",
      "\t#pn_cliswitch: ${3:}",
      "\t#pn_pattern: ${4:}",
      "\t#pn_scope: ${5:local|fabric}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "pn_port_config": {
    "prefix": "pn_port_config",
    "description": "CLI command to modify port-config",
    "body": [
      "community.network.pn_port_config:",
      "\tstate: ${1:update}",
      "\t#pn_allowed_tpid: ${2:vlan|q-in-q|q-in-q-old}",
      "\t#pn_autoneg: ${3:}",
      "\t#pn_cliswitch: ${4:}",
      "\t#pn_crc_check_enable: ${5:}",
      "\t#pn_defer_bringup: ${6:}",
      "\t#pn_description: ${7:}",
      "\t#pn_dscp_map: ${8:}",
      "\t#pn_edge_switch: ${9:}",
      "\t#pn_egress_rate_limit: ${10:}",
      "\t#pn_enable: ${11:}",
      "\t#pn_eth_mode: ${12:1000base-x|sgmii|disabled|GMII}",
      "\t#pn_fabric_guard: ${13:}",
      "\t#pn_host_enable: ${14:}",
      "\t#pn_intf: ${15:}",
      "\t#pn_jumbo: ${16:}",
      "\t#pn_lacp_priority: ${17:}",
      "\t#pn_local_switching: ${18:}",
      "\t#pn_loop_vlans: ${19:}",
      "\t#pn_loopback: ${20:}",
      "\t#pn_mirror_only: ${21:}",
      "\t#pn_pause: ${22:}",
      "\t#pn_port: ${23:}",
      "\t#pn_port_mac_address: ${24:}",
      "\t#pn_reflect: ${25:}",
      "\t#pn_routing: ${26:}",
      "\t#pn_send_port: ${27:}",
      "\t#pn_speed: ${28:disable|10m|100m|1g|2.5g|10g|25g|40g|50g|100g}",
      "\t#pn_vxlan_termination: ${29:}"
    ]
  },
  "pn_port_cos_bw": {
    "prefix": "pn_port_cos_bw",
    "description": "CLI command to modify port-cos-bw",
    "body": [
      "community.network.pn_port_cos_bw:",
      "\tstate: ${1:update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_cos: ${3:}",
      "\t#pn_max_bw_limit: ${4:}",
      "\t#pn_min_bw_guarantee: ${5:}",
      "\t#pn_port: ${6:}",
      "\t#pn_weight: ${7:priority|no-priority}"
    ]
  },
  "pn_port_cos_rate_setting": {
    "prefix": "pn_port_cos_rate_setting",
    "description": "CLI command to modify port-cos-rate-setting",
    "body": [
      "community.network.pn_port_cos_rate_setting:",
      "\tstate: ${1:update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_cos0_rate: ${3:}",
      "\t#pn_cos1_rate: ${4:}",
      "\t#pn_cos2_rate: ${5:}",
      "\t#pn_cos3_rate: ${6:}",
      "\t#pn_cos4_rate: ${7:}",
      "\t#pn_cos5_rate: ${8:}",
      "\t#pn_cos6_rate: ${9:}",
      "\t#pn_cos7_rate: ${10:}",
      "\t#pn_port: ${11:control-port|data-port|span-ports}"
    ]
  },
  "pn_prefix_list": {
    "prefix": "pn_prefix_list",
    "description": "CLI command to create/delete prefix-list",
    "body": [
      "community.network.pn_prefix_list:",
      "\tpn_name: ${1:}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_scope: ${3:local|fabric}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "pn_prefix_list_network": {
    "prefix": "pn_prefix_list_network",
    "description": "CLI command to add/remove prefix-list-network",
    "body": [
      "community.network.pn_prefix_list_network:",
      "\tstate: ${1:present|absent}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_name: ${3:}",
      "\t#pn_netmask: ${4:}",
      "\t#pn_network: ${5:}"
    ]
  },
  "pn_role": {
    "prefix": "pn_role",
    "description": "CLI command to create/delete/modify role",
    "body": [
      "community.network.pn_role:",
      "\tpn_name: ${1:}",
      "\tstate: ${2:present|absent|update}",
      "\t#pn_access: ${3:read-only|read-write}",
      "\t#pn_cliswitch: ${4:}",
      "\t#pn_delete_from_users: ${5:}",
      "\t#pn_running_config: ${6:}",
      "\t#pn_scope: ${7:local|fabric}",
      "\t#pn_shell: ${8:}",
      "\t#pn_sudo: ${9:}"
    ]
  },
  "pn_snmp_community": {
    "prefix": "pn_snmp_community",
    "description": "CLI command to create/modify/delete snmp-community",
    "body": [
      "community.network.pn_snmp_community:",
      "\tstate: ${1:present|absent|update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_community_string: ${3:}",
      "\t#pn_community_type: ${4:read-only|read-write}"
    ]
  },
  "pn_snmp_trap_sink": {
    "prefix": "pn_snmp_trap_sink",
    "description": "CLI command to create/delete snmp-trap-sink",
    "body": [
      "community.network.pn_snmp_trap_sink:",
      "\tstate: ${1:present|absent}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_community: ${3:}",
      "\t#pn_dest_host: ${4:}",
      "\t#pn_dest_port: ${5:162}",
      "\t#pn_type: ${6:TRAP_TYPE_V1_TRAP|#TRAP_TYPE_V2C_TRAP|TRAP_TYPE_V2_INFORM}"
    ]
  },
  "pn_snmp_vacm": {
    "prefix": "pn_snmp_vacm",
    "description": "CLI command to create/modify/delete snmp-vacm",
    "body": [
      "community.network.pn_snmp_vacm:",
      "\tstate: ${1:present|absent|update}",
      "\t#pn_auth: ${2:}",
      "\t#pn_cliswitch: ${3:}",
      "\t#pn_oid_restrict: ${4:}",
      "\t#pn_priv: ${5:}",
      "\t#pn_user_name: ${6:}",
      "\t#pn_user_type: ${7:rouser|rwuser}"
    ]
  },
  "pn_stp": {
    "prefix": "pn_stp",
    "description": "CLI command to modify stp",
    "body": [
      "community.network.pn_stp:",
      "\tstate: ${1:update}",
      "\t#pn_bpdus_bridge_ports: ${2:}",
      "\t#pn_bridge_id: ${3:}",
      "\t#pn_bridge_priority: ${4:32768}",
      "\t#pn_cliswitch: ${5:}",
      "\t#pn_enable: ${6:}",
      "\t#pn_forwarding_delay: ${7:15}",
      "\t#pn_hello_time: ${8:2}",
      "\t#pn_max_age: ${9:20}",
      "\t#pn_mst_config_name: ${10:}",
      "\t#pn_mst_max_hops: ${11:20}",
      "\t#pn_root_guard_wait_time: ${12:20}",
      "\t#pn_stp_mode: ${13:rstp|mstp}"
    ]
  },
  "pn_stp_port": {
    "prefix": "pn_stp_port",
    "description": "CLI command to modify stp-port.",
    "body": [
      "community.network.pn_stp_port:",
      "\tstate: ${1:update}",
      "\t#pn_block: ${2:}",
      "\t#pn_bpdu_guard: ${3:}",
      "\t#pn_cliswitch: ${4:}",
      "\t#pn_cost: ${5:2000}",
      "\t#pn_edge: ${6:}",
      "\t#pn_filter: ${7:}",
      "\t#pn_port: ${8:}",
      "\t#pn_priority: ${9:128}",
      "\t#pn_root_guard: ${10:}"
    ]
  },
  "pn_switch_setup": {
    "prefix": "pn_switch_setup",
    "description": "CLI command to modify switch-setup",
    "body": [
      "community.network.pn_switch_setup:",
      "\tstate: ${1:update}",
      "\t#pn_analytics_store: ${2:default|optimized}",
      "\t#pn_banner: ${3:}",
      "\t#pn_cliswitch: ${4:}",
      "\t#pn_date: ${5:}",
      "\t#pn_dns_ip: ${6:}",
      "\t#pn_dns_secondary_ip: ${7:}",
      "\t#pn_domain_name: ${8:}",
      "\t#pn_enable_host_ports: ${9:}",
      "\t#pn_eula_accepted: ${10:true|false}",
      "\t#pn_eula_timestamp: ${11:}",
      "\t#pn_force: ${12:}",
      "\t#pn_gateway_ip: ${13:}",
      "\t#pn_gateway_ip6: ${14:}",
      "\t#pn_in_band_ip: ${15:}",
      "\t#pn_in_band_ip6: ${16:}",
      "\t#pn_in_band_ip6_assign: ${17:none|autoconf}",
      "\t#pn_in_band_netmask: ${18:}",
      "\t#pn_in_band_netmask_ip6: ${19:}",
      "\t#pn_loopback_ip: ${20:}",
      "\t#pn_loopback_ip6: ${21:}",
      "\t#pn_mgmt_ip: ${22:}",
      "\t#pn_mgmt_ip6: ${23:}",
      "\t#pn_mgmt_ip6_assignment: ${24:none|autoconf}",
      "\t#pn_mgmt_ip_assignment: ${25:none|dhcp}",
      "\t#pn_mgmt_netmask: ${26:}",
      "\t#pn_mgmt_netmask_ip6: ${27:}",
      "\t#pn_motd: ${28:}",
      "\t#pn_ntp_secondary_server: ${29:}",
      "\t#pn_ntp_server: ${30:}",
      "\t#pn_password: ${31:}",
      "\t#pn_switch_name: ${32:}",
      "\t#pn_timezone: ${33:}"
    ]
  },
  "pn_user": {
    "prefix": "pn_user",
    "description": "CLI command to create/modify/delete user",
    "body": [
      "community.network.pn_user:",
      "\tstate: ${1:present|absent|update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_initial_role: ${3:}",
      "\t#pn_name: ${4:}",
      "\t#pn_password: ${5:}",
      "\t#pn_scope: ${6:local|fabric}"
    ]
  },
  "pn_vflow_table_profile": {
    "prefix": "pn_vflow_table_profile",
    "description": "CLI command to modify vflow-table-profile",
    "body": [
      "community.network.pn_vflow_table_profile:",
      "\tstate: ${1:update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_enable: ${3:}",
      "\t#pn_hw_tbl: ${4:switch-main|switch-hash|npu-main|npu-hash}",
      "\t#pn_profile: ${5:application|ipv6|qos}"
    ]
  },
  "pn_vrouter_bgp": {
    "prefix": "pn_vrouter_bgp",
    "description": "CLI command to add/modify/remove vrouter-bgp",
    "body": [
      "community.network.pn_vrouter_bgp:",
      "\tpn_neighbor: ${1:}",
      "\tpn_vrouter_name: ${2:}",
      "\t#pn_advertisement_interval: ${3:}",
      "\t#pn_allowas_in: ${4:}",
      "\t#pn_bfd: ${5:false}",
      "\t#pn_bfd_multihop: ${6:}",
      "\t#pn_cliswitch: ${7:}",
      "\t#pn_connect_retry_interval: ${8:}",
      "\t#pn_default_originate: ${9:}",
      "\t#pn_ebgp_multihop: ${10:}",
      "\t#pn_interface: ${11:}",
      "\t#pn_max_prefix: ${12:}",
      "\t#pn_max_prefix_warn_only: ${13:}",
      "\t#pn_multi_protocol: ${14:ipv4-unicast|ipv6-unicast}",
      "\t#pn_neighbor_holdtime: ${15:}",
      "\t#pn_neighbor_keepalive_interval: ${16:}",
      "\t#pn_next_hop_self: ${17:}",
      "\t#pn_no_route_map_in: ${18:}",
      "\t#pn_no_route_map_out: ${19:}",
      "\t#pn_override_capability: ${20:}",
      "\t#pn_password: ${21:}",
      "\t#pn_prefix_list_in: ${22:}",
      "\t#pn_prefix_list_out: ${23:}",
      "\t#pn_remote_as: ${24:}",
      "\t#pn_route_map_in: ${25:}",
      "\t#pn_route_map_out: ${26:}",
      "\t#pn_route_reflector_client: ${27:}",
      "\t#pn_send_community: ${28:}",
      "\t#pn_soft_reconfig_inbound: ${29:}",
      "\t#pn_update_source: ${30:}",
      "\t#pn_weight: ${31:}",
      "\t#state: ${32:#present|absent|update}"
    ]
  },
  "pn_vrouter_bgp_network": {
    "prefix": "pn_vrouter_bgp_network",
    "description": "CLI command to add/remove vrouter-bgp-network",
    "body": [
      "community.network.pn_vrouter_bgp_network:",
      "\tstate: ${1:present|absent}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_netmask: ${3:}",
      "\t#pn_network: ${4:}",
      "\t#pn_vrouter_name: ${5:}"
    ]
  },
  "pn_vrouter_interface_ip": {
    "prefix": "pn_vrouter_interface_ip",
    "description": "CLI command to add/remove vrouter-interface-ip",
    "body": [
      "community.network.pn_vrouter_interface_ip:",
      "\tstate: ${1:present|absent}",
      "\t#pn_bd: ${2:}",
      "\t#pn_cliswitch: ${3:}",
      "\t#pn_ip: ${4:}",
      "\t#pn_netmask: ${5:}",
      "\t#pn_nic: ${6:}",
      "\t#pn_vnet: ${7:}",
      "\t#pn_vrouter_name: ${8:}"
    ]
  },
  "pn_vrouter_loopback_interface": {
    "prefix": "pn_vrouter_loopback_interface",
    "description": "CLI command to add/remove vrouter-loopback-interface",
    "body": [
      "community.network.pn_vrouter_loopback_interface:",
      "\tpn_ip: ${1:}",
      "\tpn_vrouter_name: ${2:}",
      "\t#pn_cliswitch: ${3:}",
      "\t#pn_index: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "pn_vrouter_ospf": {
    "prefix": "pn_vrouter_ospf",
    "description": "CLI command to add/remove vrouter-ospf",
    "body": [
      "community.network.pn_vrouter_ospf:",
      "\tpn_network: ${1:}",
      "\tpn_vrouter_name: ${2:}",
      "\t#pn_cliswitch: ${3:}",
      "\t#pn_netmask: ${4:}",
      "\t#pn_ospf_area: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "pn_vrouter_ospf6": {
    "prefix": "pn_vrouter_ospf6",
    "description": "CLI command to add/remove vrouter-ospf6",
    "body": [
      "community.network.pn_vrouter_ospf6:",
      "\tstate: ${1:present|absent}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_nic: ${3:}",
      "\t#pn_ospf6_area: ${4:}",
      "\t#pn_vrouter_name: ${5:}"
    ]
  },
  "pn_vrouter_packet_relay": {
    "prefix": "pn_vrouter_packet_relay",
    "description": "CLI command to add/remove vrouter-packet-relay",
    "body": [
      "community.network.pn_vrouter_packet_relay:",
      "\tpn_forward_ip: ${1:}",
      "\tpn_nic: ${2:}",
      "\tpn_vrouter_name: ${3:}",
      "\t#pn_cliswitch: ${4:}",
      "\t#pn_forward_proto: ${5:#dhcp}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "pn_vrouter_pim_config": {
    "prefix": "pn_vrouter_pim_config",
    "description": "CLI command to modify vrouter-pim-config",
    "body": [
      "community.network.pn_vrouter_pim_config:",
      "\tstate: ${1:update}",
      "\t#pn_cliswitch: ${2:}",
      "\t#pn_hello_interval: ${3:}",
      "\t#pn_querier_timeout: ${4:}",
      "\t#pn_query_interval: ${5:}",
      "\t#pn_vrouter_name: ${6:}"
    ]
  },
  "pn_vtep": {
    "prefix": "pn_vtep",
    "description": "CLI command to create/delete vtep",
    "body": [
      "community.network.pn_vtep:",
      "\t#pn_cliswitch: ${1:}",
      "\t#pn_ip: ${2:}",
      "\t#pn_location: ${3:}",
      "\t#pn_name: ${4:}",
      "\t#pn_switch_in_cluster: ${5:true}",
      "\t#pn_virtual_ip: ${6:}",
      "\t#pn_vrouter_name: ${7:}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "slxos_command": {
    "prefix": "slxos_command",
    "description": "Run commands on remote devices running Extreme Networks SLX-OS",
    "body": [
      "community.network.slxos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "slxos_config": {
    "prefix": "slxos_config",
    "description": "Manage Extreme Networks SLX-OS configuration sections",
    "body": [
      "community.network.slxos_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#defaults: ${5:false}",
      "\t#diff_against: ${6:running|startup|intended}",
      "\t#diff_ignore_lines: ${7:}",
      "\t#intended_config: ${8:}",
      "\t#lines: ${9:}",
      "\t#match: ${10:#line|strict|exact|none}",
      "\t#multiline_delimiter: ${11:@}",
      "\t#parents: ${12:}",
      "\t#replace: ${13:#line|block}",
      "\t#running_config: ${14:}",
      "\t#save_when: ${15:always|#never|modified|changed}",
      "\t#src: ${16:}"
    ]
  },
  "slxos_facts": {
    "prefix": "slxos_facts",
    "description": "Collect facts from devices running Extreme SLX-OS",
    "body": [
      "community.network.slxos_facts:",
      "\t#gather_subset: ${1:['!config']}"
    ]
  },
  "slxos_interface": {
    "prefix": "slxos_interface",
    "description": "Manage Interfaces on Extreme SLX-OS network devices",
    "body": [
      "community.network.slxos_interface:",
      "\tname: ${1:}",
      "\t#aggregate: ${2:}",
      "\t#delay: ${3:10}",
      "\t#description: ${4:}",
      "\t#enabled: ${5:true}",
      "\t#mtu: ${6:}",
      "\t#neighbors: ${7:}",
      "\t#rx_rate: ${8:}",
      "\t#speed: ${9:}",
      "\t#state: ${10:#present|absent|up|down}",
      "\t#tx_rate: ${11:}"
    ]
  },
  "slxos_l2_interface": {
    "prefix": "slxos_l2_interface",
    "description": "Manage Layer-2 interface on Extreme Networks SLX-OS devices.",
    "body": [
      "community.network.slxos_l2_interface:",
      "\tname: ${1:}",
      "\t#access_vlan: ${2:}",
      "\t#aggregate: ${3:}",
      "\t#mode: ${4:#access|trunk}",
      "\t#native_vlan: ${5:}",
      "\t#state: ${6:#present|absent|unconfigured}",
      "\t#trunk_allowed_vlans: ${7:}",
      "\t#trunk_vlans: ${8:}"
    ]
  },
  "slxos_l3_interface": {
    "prefix": "slxos_l3_interface",
    "description": "Manage L3 interfaces on Extreme Networks SLX-OS network devices.",
    "body": [
      "community.network.slxos_l3_interface:",
      "\t#aggregate: ${1:}",
      "\t#ipv4: ${2:}",
      "\t#ipv6: ${3:}",
      "\t#name: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "slxos_linkagg": {
    "prefix": "slxos_linkagg",
    "description": "Manage link aggregation groups on Extreme Networks SLX-OS network devices",
    "body": [
      "community.network.slxos_linkagg:",
      "\t#aggregate: ${1:}",
      "\t#group: ${2:}",
      "\t#members: ${3:}",
      "\t#mode: ${4:active|on|passive}",
      "\t#purge: ${5:false}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "slxos_lldp": {
    "prefix": "slxos_lldp",
    "description": "Manage LLDP configuration on Extreme Networks SLX-OS network devices.",
    "body": [
      "community.network.slxos_lldp:",
      "\t#state: ${1:#present|absent}"
    ]
  },
  "slxos_vlan": {
    "prefix": "slxos_vlan",
    "description": "Manage VLANs on Extreme Networks SLX-OS network devices",
    "body": [
      "community.network.slxos_vlan:",
      "\tinterfaces: ${1:}",
      "\tvlan_id: ${2:}",
      "\t#aggregate: ${3:}",
      "\t#delay: ${4:10}",
      "\t#name: ${5:}",
      "\t#purge: ${6:false}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "sros_command": {
    "prefix": "sros_command",
    "description": "Run commands on remote devices running Nokia SR OS",
    "body": [
      "community.network.sros_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "sros_config": {
    "prefix": "sros_config",
    "description": "Manage Nokia SR OS device configuration",
    "body": [
      "community.network.sros_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#config: ${5:}",
      "\t#defaults: ${6:false}",
      "\t#force: ${7:}",
      "\t#lines: ${8:}",
      "\t#match: ${9:#line|none}",
      "\t#parents: ${10:}",
      "\t#replace: ${11:#line|block}",
      "\t#save: ${12:false}",
      "\t#src: ${13:}"
    ]
  },
  "sros_rollback": {
    "prefix": "sros_rollback",
    "description": "Configure Nokia SR OS rollback",
    "body": [
      "community.network.sros_rollback:",
      "\t#local_max_checkpoints: ${1:}",
      "\t#remote_max_checkpoints: ${2:}",
      "\t#rescue_location: ${3:}",
      "\t#rollback_location: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "vdirect_commit": {
    "prefix": "vdirect_commit",
    "description": "Commits pending configuration changes on Radware devices",
    "body": [
      "community.network.vdirect_commit:",
      "\tdevices: ${1:}",
      "\tvdirect_ip: ${2:}",
      "\tvdirect_password: ${3:}",
      "\tvdirect_user: ${4:}",
      "\t#apply: ${5:true}",
      "\t#save: ${6:true}",
      "\t#sync: ${7:true}",
      "\t#validate_certs: ${8:true}",
      "\t#vdirect_http_port: ${9:2188}",
      "\t#vdirect_https_port: ${10:2189}",
      "\t#vdirect_secondary_ip: ${11:}",
      "\t#vdirect_timeout: ${12:60}",
      "\t#vdirect_use_ssl: ${13:true}",
      "\t#vdirect_wait: ${14:true}"
    ]
  },
  "vdirect_file": {
    "prefix": "vdirect_file",
    "description": "Uploads a new or updates an existing runnable file into Radware vDirect server",
    "body": [
      "community.network.vdirect_file:",
      "\tfile_name: ${1:}",
      "\tvdirect_ip: ${2:}",
      "\tvdirect_password: ${3:}",
      "\tvdirect_user: ${4:}",
      "\t#validate_certs: ${5:true}",
      "\t#vdirect_http_port: ${6:2188}",
      "\t#vdirect_https_port: ${7:2189}",
      "\t#vdirect_secondary_ip: ${8:}",
      "\t#vdirect_timeout: ${9:60}",
      "\t#vdirect_use_ssl: ${10:true}",
      "\t#vdirect_wait: ${11:true}"
    ]
  },
  "vdirect_runnable": {
    "prefix": "vdirect_runnable",
    "description": "Runs templates and workflow actions in Radware vDirect server",
    "body": [
      "community.network.vdirect_runnable:",
      "\trunnable_name: ${1:}",
      "\trunnable_type: ${2:ConfigurationTemplate|Workflow|WorkflowTemplate|Plugin}",
      "\tvdirect_ip: ${3:}",
      "\tvdirect_password: ${4:}",
      "\tvdirect_user: ${5:}",
      "\t#action_name: ${6:}",
      "\t#parameters: ${7:{\\}}",
      "\t#validate_certs: ${8:true}",
      "\t#vdirect_http_port: ${9:2188}",
      "\t#vdirect_https_port: ${10:2189}",
      "\t#vdirect_secondary_ip: ${11:}",
      "\t#vdirect_timeout: ${12:60}",
      "\t#vdirect_use_ssl: ${13:true}",
      "\t#vdirect_wait: ${14:true}"
    ]
  },
  "voss_command": {
    "prefix": "voss_command",
    "description": "Run commands on remote devices running Extreme VOSS",
    "body": [
      "community.network.voss_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "voss_config": {
    "prefix": "voss_config",
    "description": "Manage Extreme VOSS configuration sections",
    "body": [
      "community.network.voss_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#defaults: ${5:false}",
      "\t#diff_against: ${6:running|startup|intended}",
      "\t#diff_ignore_lines: ${7:}",
      "\t#intended_config: ${8:}",
      "\t#lines: ${9:}",
      "\t#match: ${10:#line|strict|exact|none}",
      "\t#parents: ${11:}",
      "\t#replace: ${12:#line|block}",
      "\t#running_config: ${13:}",
      "\t#save_when: ${14:always|#never|modified|changed}",
      "\t#src: ${15:}"
    ]
  },
  "voss_facts": {
    "prefix": "voss_facts",
    "description": "Collect facts from remote devices running Extreme VOSS",
    "body": [
      "community.network.voss_facts:",
      "\t#gather_subset: ${1:!config}"
    ]
  },
  "openshift_adm_groups_sync": {
    "prefix": "openshift_adm_groups_sync",
    "description": "Sync OpenShift Groups with records from an external provider.",
    "body": [
      "community.okd.openshift_adm_groups_sync:",
      "\tsync_config: ${1:}",
      "\t#allow_groups: ${2:[]}",
      "\t#api_key: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#context: ${7:}",
      "\t#deny_groups: ${8:[]}",
      "\t#host: ${9:}",
      "\t#impersonate_groups: ${10:}",
      "\t#impersonate_user: ${11:}",
      "\t#kubeconfig: ${12:}",
      "\t#no_proxy: ${13:}",
      "\t#password: ${14:}",
      "\t#persist_config: ${15:}",
      "\t#proxy: ${16:}",
      "\t#proxy_headers: ${17:}",
      "\t#state: ${18:absent|#present}",
      "\t#type: ${19:#ldap|openshift}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}"
    ]
  },
  "openshift_adm_migrate_template_instances": {
    "prefix": "openshift_adm_migrate_template_instances",
    "description": "Update TemplateInstances to point to the latest group-version-kinds",
    "body": [
      "community.okd.openshift_adm_migrate_template_instances:",
      "\t#api_key: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#context: ${5:}",
      "\t#host: ${6:}",
      "\t#impersonate_groups: ${7:}",
      "\t#impersonate_user: ${8:}",
      "\t#kubeconfig: ${9:}",
      "\t#namespace: ${10:}",
      "\t#no_proxy: ${11:}",
      "\t#password: ${12:}",
      "\t#persist_config: ${13:}",
      "\t#proxy: ${14:}",
      "\t#proxy_headers: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:false}",
      "\t#wait_condition: ${19:}",
      "\t#wait_sleep: ${20:5}",
      "\t#wait_timeout: ${21:120}"
    ]
  },
  "openshift_adm_prune_auth": {
    "prefix": "openshift_adm_prune_auth",
    "description": "Removes references to the specified roles, clusterroles, users, and groups",
    "body": [
      "community.okd.openshift_adm_prune_auth:",
      "\tresource: ${1:roles|clusterroles|users|groups}",
      "\t#api_key: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#context: ${6:}",
      "\t#host: ${7:}",
      "\t#impersonate_groups: ${8:}",
      "\t#impersonate_user: ${9:}",
      "\t#kubeconfig: ${10:}",
      "\t#label_selectors: ${11:}",
      "\t#name: ${12:}",
      "\t#namespace: ${13:}",
      "\t#no_proxy: ${14:}",
      "\t#password: ${15:}",
      "\t#persist_config: ${16:}",
      "\t#proxy: ${17:}",
      "\t#proxy_headers: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "openshift_adm_prune_builds": {
    "prefix": "openshift_adm_prune_builds",
    "description": "Prune old completed and failed builds",
    "body": [
      "community.okd.openshift_adm_prune_builds:",
      "\t#api_key: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#context: ${5:}",
      "\t#host: ${6:}",
      "\t#impersonate_groups: ${7:}",
      "\t#impersonate_user: ${8:}",
      "\t#keep_younger_than: ${9:}",
      "\t#kubeconfig: ${10:}",
      "\t#namespace: ${11:}",
      "\t#no_proxy: ${12:}",
      "\t#orphans: ${13:false}",
      "\t#password: ${14:}",
      "\t#persist_config: ${15:}",
      "\t#proxy: ${16:}",
      "\t#proxy_headers: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "openshift_adm_prune_deployments": {
    "prefix": "openshift_adm_prune_deployments",
    "description": "Remove old completed and failed deployment configs",
    "body": [
      "community.okd.openshift_adm_prune_deployments:",
      "\t#api_key: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#context: ${5:}",
      "\t#host: ${6:}",
      "\t#impersonate_groups: ${7:}",
      "\t#impersonate_user: ${8:}",
      "\t#keep_younger_than: ${9:}",
      "\t#kubeconfig: ${10:}",
      "\t#namespace: ${11:}",
      "\t#no_proxy: ${12:}",
      "\t#orphans: ${13:false}",
      "\t#password: ${14:}",
      "\t#persist_config: ${15:}",
      "\t#proxy: ${16:}",
      "\t#proxy_headers: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "openshift_adm_prune_images": {
    "prefix": "openshift_adm_prune_images",
    "description": "Remove unreferenced images",
    "body": [
      "community.okd.openshift_adm_prune_images:",
      "\t#all_images: ${1:true}",
      "\t#api_key: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#context: ${6:}",
      "\t#host: ${7:}",
      "\t#ignore_invalid_refs: ${8:false}",
      "\t#impersonate_groups: ${9:}",
      "\t#impersonate_user: ${10:}",
      "\t#keep_younger_than: ${11:}",
      "\t#kubeconfig: ${12:}",
      "\t#namespace: ${13:}",
      "\t#no_proxy: ${14:}",
      "\t#password: ${15:}",
      "\t#persist_config: ${16:}",
      "\t#proxy: ${17:}",
      "\t#proxy_headers: ${18:}",
      "\t#prune_over_size_limit: ${19:false}",
      "\t#prune_registry: ${20:true}",
      "\t#registry_ca_cert: ${21:}",
      "\t#registry_url: ${22:}",
      "\t#registry_validate_certs: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:}"
    ]
  },
  "openshift_auth": {
    "prefix": "openshift_auth",
    "description": "Authenticate to OpenShift clusters which require an explicit login step",
    "body": [
      "community.okd.openshift_auth:",
      "\thost: ${1:}",
      "\t#api_key: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#password: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "openshift_build": {
    "prefix": "openshift_build",
    "description": "Start a new build or Cancel running, pending, or new builds.",
    "body": [
      "community.okd.openshift_build:",
      "\tnamespace: ${1:}",
      "\t#api_key: ${2:}",
      "\t#build_args: ${3:}",
      "\t#build_config_name: ${4:}",
      "\t#build_name: ${5:}",
      "\t#build_phases: ${6:['New', 'Pending', 'Running']}",
      "\t#ca_cert: ${7:}",
      "\t#client_cert: ${8:}",
      "\t#client_key: ${9:}",
      "\t#commit: ${10:}",
      "\t#context: ${11:}",
      "\t#env_vars: ${12:}",
      "\t#host: ${13:}",
      "\t#impersonate_groups: ${14:}",
      "\t#impersonate_user: ${15:}",
      "\t#incremental: ${16:}",
      "\t#kubeconfig: ${17:}",
      "\t#no_cache: ${18:}",
      "\t#no_proxy: ${19:}",
      "\t#password: ${20:}",
      "\t#persist_config: ${21:}",
      "\t#proxy: ${22:}",
      "\t#proxy_headers: ${23:}",
      "\t#state: ${24:#started|cancelled|restarted}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}",
      "\t#wait: ${27:false}",
      "\t#wait_sleep: ${28:5}",
      "\t#wait_timeout: ${29:120}"
    ]
  },
  "openshift_import_image": {
    "prefix": "openshift_import_image",
    "description": "Import the latest image information from a tag in a container image registry.",
    "body": [
      "community.okd.openshift_import_image:",
      "\tname: ${1:}",
      "\tnamespace: ${2:}",
      "\t#all: ${3:false}",
      "\t#api_key: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#context: ${8:}",
      "\t#host: ${9:}",
      "\t#impersonate_groups: ${10:}",
      "\t#impersonate_user: ${11:}",
      "\t#kubeconfig: ${12:}",
      "\t#no_proxy: ${13:}",
      "\t#password: ${14:}",
      "\t#persist_config: ${15:}",
      "\t#proxy: ${16:}",
      "\t#proxy_headers: ${17:}",
      "\t#reference_policy: ${18:#source|local}",
      "\t#scheduled: ${19:false}",
      "\t#source: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}",
      "\t#validate_registry_certs: ${23:}"
    ]
  },
  "openshift_process": {
    "prefix": "openshift_process",
    "description": "Process an OpenShift template.openshift.io/v1 Template",
    "body": [
      "community.okd.openshift_process:",
      "\t#api_key: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#context: ${5:}",
      "\t#host: ${6:}",
      "\t#impersonate_groups: ${7:}",
      "\t#impersonate_user: ${8:}",
      "\t#kubeconfig: ${9:}",
      "\t#name: ${10:}",
      "\t#namespace: ${11:}",
      "\t#namespace_target: ${12:}",
      "\t#no_proxy: ${13:}",
      "\t#parameter_file: ${14:}",
      "\t#parameters: ${15:}",
      "\t#password: ${16:}",
      "\t#persist_config: ${17:}",
      "\t#proxy: ${18:}",
      "\t#proxy_headers: ${19:}",
      "\t#resource_definition: ${20:}",
      "\t#src: ${21:}",
      "\t#state: ${22:absent|present|#rendered}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}",
      "\t#wait: ${25:false}",
      "\t#wait_condition: ${26:}",
      "\t#wait_sleep: ${27:5}",
      "\t#wait_timeout: ${28:120}"
    ]
  },
  "openshift_registry_info": {
    "prefix": "openshift_registry_info",
    "description": "Display information about the integrated registry.",
    "body": [
      "community.okd.openshift_registry_info:",
      "\t#api_key: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#check: ${3:false}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#context: ${6:}",
      "\t#host: ${7:}",
      "\t#impersonate_groups: ${8:}",
      "\t#impersonate_user: ${9:}",
      "\t#kubeconfig: ${10:}",
      "\t#no_proxy: ${11:}",
      "\t#password: ${12:}",
      "\t#persist_config: ${13:}",
      "\t#proxy: ${14:}",
      "\t#proxy_headers: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "openshift_route": {
    "prefix": "openshift_route",
    "description": "Expose a Service as an OpenShift Route.",
    "body": [
      "community.okd.openshift_route:",
      "\tnamespace: ${1:}",
      "\t#annotations: ${2:}",
      "\t#api_key: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#context: ${7:}",
      "\t#force: ${8:false}",
      "\t#host: ${9:}",
      "\t#hostname: ${10:}",
      "\t#impersonate_groups: ${11:}",
      "\t#impersonate_user: ${12:}",
      "\t#kubeconfig: ${13:}",
      "\t#labels: ${14:}",
      "\t#name: ${15:}",
      "\t#no_proxy: ${16:}",
      "\t#password: ${17:}",
      "\t#path: ${18:}",
      "\t#persist_config: ${19:}",
      "\t#port: ${20:}",
      "\t#proxy: ${21:}",
      "\t#proxy_headers: ${22:}",
      "\t#service: ${23:}",
      "\t#state: ${24:absent|#present}",
      "\t#termination: ${25:edge|passthrough|reencrypt|#insecure}",
      "\t#tls: ${26:}",
      "\t#username: ${27:}",
      "\t#validate_certs: ${28:}",
      "\t#wait: ${29:false}",
      "\t#wait_condition: ${30:}",
      "\t#wait_sleep: ${31:5}",
      "\t#wait_timeout: ${32:120}",
      "\t#wildcard_policy: ${33:Subdomain}"
    ]
  },
  "postgresql_pg_hba": {
    "prefix": "postgresql_pg_hba",
    "description": "Add, remove or modify a rule in a pg_hba file",
    "body": [
      "community.postgresql.postgresql_pg_hba:",
      "\tdest: ${1:}",
      "\t#address: ${2:samehost}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#backup_file: ${5:}",
      "\t#comment: ${6:}",
      "\t#contype: ${7:local|host|hostnossl|hostssl|hostgssenc|hostnogssenc}",
      "\t#create: ${8:false}",
      "\t#databases: ${9:all}",
      "\t#group: ${10:}",
      "\t#keep_comments_at_rules: ${11:false}",
      "\t#method: ${12:cert|gss|ident|krb5|ldap|#md5|pam|password|peer|radius|reject|scram-sha-256|sspi|trust}",
      "\t#mode: ${13:}",
      "\t#netmask: ${14:}",
      "\t#options: ${15:}",
      "\t#overwrite: ${16:false}",
      "\t#owner: ${17:}",
      "\t#rules: ${18:}",
      "\t#rules_behavior: ${19:#conflict|combine}",
      "\t#selevel: ${20:}",
      "\t#serole: ${21:}",
      "\t#setype: ${22:}",
      "\t#seuser: ${23:}",
      "\t#state: ${24:absent|#present}",
      "\t#unsafe_writes: ${25:false}",
      "\t#users: ${26:all}"
    ]
  },
  "rabbitmq_binding": {
    "prefix": "rabbitmq_binding",
    "description": "Manage rabbitMQ bindings",
    "body": [
      "community.rabbitmq.rabbitmq_binding:",
      "\tdestination: ${1:}",
      "\tdestination_type: ${2:queue|exchange}",
      "\tname: ${3:}",
      "\t#arguments: ${4:{\\}}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#login_host: ${8:localhost}",
      "\t#login_password: ${9:guest}",
      "\t#login_port: ${10:15672}",
      "\t#login_protocol: ${11:#http|https}",
      "\t#login_user: ${12:guest}",
      "\t#routing_key: ${13:#}",
      "\t#state: ${14:#present|absent}",
      "\t#vhost: ${15:/}"
    ]
  },
  "rabbitmq_exchange": {
    "prefix": "rabbitmq_exchange",
    "description": "Manage rabbitMQ exchange",
    "body": [
      "community.rabbitmq.rabbitmq_exchange:",
      "\tname: ${1:}",
      "\t#arguments: ${2:{\\}}",
      "\t#auto_delete: ${3:false}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#durable: ${7:true}",
      "\t#exchange_type: ${8:fanout|#direct|headers|topic|x-delayed-message|x-random|x-consistent-hash|x-recent-history}",
      "\t#internal: ${9:false}",
      "\t#login_host: ${10:localhost}",
      "\t#login_password: ${11:guest}",
      "\t#login_port: ${12:15672}",
      "\t#login_protocol: ${13:#http|https}",
      "\t#login_user: ${14:guest}",
      "\t#state: ${15:#present|absent}",
      "\t#vhost: ${16:/}"
    ]
  },
  "rabbitmq_feature_flag": {
    "prefix": "rabbitmq_feature_flag",
    "description": "Enables feature flag",
    "body": [
      "community.rabbitmq.rabbitmq_feature_flag:",
      "\tname: ${1:}",
      "\t#node: ${2:rabbit}"
    ]
  },
  "rabbitmq_global_parameter": {
    "prefix": "rabbitmq_global_parameter",
    "description": "Manage RabbitMQ global parameters",
    "body": [
      "community.rabbitmq.rabbitmq_global_parameter:",
      "\tname: ${1:}",
      "\t#node: ${2:rabbit}",
      "\t#state: ${3:#present|absent}",
      "\t#value: ${4:}"
    ]
  },
  "rabbitmq_parameter": {
    "prefix": "rabbitmq_parameter",
    "description": "Manage RabbitMQ parameters",
    "body": [
      "community.rabbitmq.rabbitmq_parameter:",
      "\tcomponent: ${1:}",
      "\tname: ${2:}",
      "\t#node: ${3:rabbit}",
      "\t#state: ${4:#present|absent}",
      "\t#value: ${5:}",
      "\t#vhost: ${6:/}"
    ]
  },
  "rabbitmq_plugin": {
    "prefix": "rabbitmq_plugin",
    "description": "Manage RabbitMQ plugins",
    "body": [
      "community.rabbitmq.rabbitmq_plugin:",
      "\tnames: ${1:}",
      "\t#broker_state: ${2:#online|offline}",
      "\t#new_only: ${3:false}",
      "\t#prefix: ${4:}",
      "\t#state: ${5:#enabled|disabled}"
    ]
  },
  "rabbitmq_policy": {
    "prefix": "rabbitmq_policy",
    "description": "Manage the state of policies in RabbitMQ",
    "body": [
      "community.rabbitmq.rabbitmq_policy:",
      "\tname: ${1:}",
      "\t#apply_to: ${2:#all|exchanges|queues}",
      "\t#node: ${3:rabbit}",
      "\t#pattern: ${4:}",
      "\t#priority: ${5:0}",
      "\t#state: ${6:#present|absent}",
      "\t#tags: ${7:}",
      "\t#vhost: ${8:/}"
    ]
  },
  "rabbitmq_publish": {
    "prefix": "rabbitmq_publish",
    "description": "Publish a message to a RabbitMQ queue.",
    "body": [
      "community.rabbitmq.rabbitmq_publish:",
      "\t#auto_delete: ${1:false}",
      "\t#body: ${2:}",
      "\t#cafile: ${3:}",
      "\t#certfile: ${4:}",
      "\t#content_type: ${5:text/plain}",
      "\t#durable: ${6:false}",
      "\t#exchange: ${7:}",
      "\t#exclusive: ${8:false}",
      "\t#headers: ${9:{\\}}",
      "\t#host: ${10:}",
      "\t#keyfile: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:}",
      "\t#proto: ${14:amqps|amqp}",
      "\t#queue: ${15:}",
      "\t#routing_key: ${16:}",
      "\t#src: ${17:}",
      "\t#url: ${18:}",
      "\t#username: ${19:}",
      "\t#vhost: ${20:}"
    ]
  },
  "rabbitmq_queue": {
    "prefix": "rabbitmq_queue",
    "description": "Manage rabbitMQ queues",
    "body": [
      "community.rabbitmq.rabbitmq_queue:",
      "\tname: ${1:}",
      "\t#arguments: ${2:{\\}}",
      "\t#auto_delete: ${3:false}",
      "\t#auto_expires: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#dead_letter_exchange: ${8:}",
      "\t#dead_letter_routing_key: ${9:}",
      "\t#durable: ${10:true}",
      "\t#login_host: ${11:localhost}",
      "\t#login_password: ${12:guest}",
      "\t#login_port: ${13:15672}",
      "\t#login_protocol: ${14:#http|https}",
      "\t#login_user: ${15:guest}",
      "\t#max_length: ${16:}",
      "\t#max_priority: ${17:}",
      "\t#message_ttl: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#vhost: ${20:/}"
    ]
  },
  "rabbitmq_upgrade": {
    "prefix": "rabbitmq_upgrade",
    "description": "Execute rabbitmq-upgrade commands",
    "body": [
      "community.rabbitmq.rabbitmq_upgrade:",
      "\taction: ${1:await_online_quorum_plus_one|await_online_synchronized_mirror|post_upgrade|drain|revive}",
      "\t#node: ${2:rabbit}"
    ]
  },
  "rabbitmq_user": {
    "prefix": "rabbitmq_user",
    "description": "Manage RabbitMQ users",
    "body": [
      "community.rabbitmq.rabbitmq_user:",
      "\tuser: ${1:}",
      "\t#configure_priv: ${2:^\\$}",
      "\t#force: ${3:false}",
      "\t#node: ${4:rabbit}",
      "\t#password: ${5:}",
      "\t#permissions: ${6:[]}",
      "\t#read_priv: ${7:^\\$}",
      "\t#state: ${8:#present|absent}",
      "\t#tags: ${9:}",
      "\t#topic_permissions: ${10:[]}",
      "\t#update_password: ${11:#on_create|always}",
      "\t#vhost: ${12:/}",
      "\t#write_priv: ${13:^\\$}"
    ]
  },
  "rabbitmq_user_limits": {
    "prefix": "rabbitmq_user_limits",
    "description": "Manage RabbitMQ user limits",
    "body": [
      "community.rabbitmq.rabbitmq_user_limits:",
      "\tuser: ${1:}",
      "\t#max_channels: ${2:-1}",
      "\t#max_connections: ${3:-1}",
      "\t#node: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "rabbitmq_vhost": {
    "prefix": "rabbitmq_vhost",
    "description": "Manage the state of a virtual host in RabbitMQ",
    "body": [
      "community.rabbitmq.rabbitmq_vhost:",
      "\tname: ${1:}",
      "\t#node: ${2:rabbit}",
      "\t#state: ${3:#present|absent}",
      "\t#tracing: ${4:false}"
    ]
  },
  "rabbitmq_vhost_limits": {
    "prefix": "rabbitmq_vhost_limits",
    "description": "Manage the state of virtual host limits in RabbitMQ",
    "body": [
      "community.rabbitmq.rabbitmq_vhost_limits:",
      "\t#max_connections: ${1:-1}",
      "\t#max_queues: ${2:-1}",
      "\t#node: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#vhost: ${5:/}"
    ]
  },
  "sap_company": {
    "prefix": "sap_company",
    "description": "This module will manage a company entities in a SAP S4HANA environment",
    "body": [
      "community.sap_libs.sap_company:",
      "\tcompany_id: ${1:}",
      "\tconn_password: ${2:}",
      "\tconn_username: ${3:}",
      "\thost: ${4:}",
      "\t#city: ${5:}",
      "\t#client: ${6:000}",
      "\t#country: ${7:}",
      "\t#e_mail: ${8:}",
      "\t#name: ${9:}",
      "\t#name_2: ${10:}",
      "\t#post_code: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#street: ${13:}",
      "\t#street_no: ${14:}",
      "\t#sysnr: ${15:01}",
      "\t#time_zone: ${16:}"
    ]
  },
  "sap_control_exec": {
    "prefix": "sap_control_exec",
    "description": "Ansible Module to execute SAPCONTROL",
    "body": [
      "community.sap_libs.sap_control_exec:",
      "\tfunction: ${1:Start|Stop|RestartInstance|Shutdown|InstanceStart|GetProcessList|Bootstrap|InstanceStop|StopService|StartService|RestartService|ParameterValue|GetStartProfile|GetTraceFile|GetAlertTree|GetAlerts|GetEnvironment|GetVersionInfo|GetQueueStatistic|GetInstanceProperties|ListDeveloperTraces|ReadDeveloperTrace|ListLogFiles|ReadLogFile|AnalyseLogFiles|ConfigureLogFileList|GetLogFileList|CreateSnapshot|ReadSnapshot|ListSnapshots|DeleteSnapshots|GetAccessPointList|GetProcessParameter|SetProcessParameter|SetProcessParameter2|CheckParameter|OSExecute|SendSignal|GetCallstack|GetSystemInstanceList|StartSystem|StopSystem|RestartSystem|GetSystemUpdateList|UpdateSystem|UpdateSCSInstance|CheckUpdateSystem|AccessCheck|GetSecNetworkId|GetNetworkId|RequestLogonFile|UpdateSystemPKI|UpdateInstancePSE|StorePSE|DeletePSE|CheckPSE|CreatePSECredential|HACheckConfig|HACheckFailoverConfig|HAGetFailoverConfig|HAFailoverToNode|HASetMaintenanceMode|HACheckMaintenanceMode|ABAPReadSyslog|ABAPReadRawSyslog|ABAPGetWPTable|ABAPGetComponentList|ABAPCheckRFCDestinations|ABAPGetSystemWPTable|J2EEControlProcess|J2EEControlCluster|J2EEEnableDbgSession|J2EEDisableDbgSession|J2EEGetProcessList|J2EEGetProcessList2|J2EEGetThreadList|J2EEGetThreadList2|J2EEGetThreadCallStack|J2EEGetThreadTaskStack|J2EEGetSessionList|J2EEGetCacheStatistic|J2EEGetCacheStatistic2|J2EEGetApplicationAliasList|J2EEGetComponentList|J2EEControlComponents|J2EEGetWebSessionList|J2EEGetWebSessionList2|J2EEGetEJBSessionList|J2EEGetRemoteObjectList|J2EEGetVMGCHistory|J2EEGetVMGCHistory2|J2EEGetVMHeapInfo|J2EEGetClusterMsgList|J2EEGetSharedTableInfo|ICMGetThreadList|ICMGetConnectionList|ICMGetProxyConnectionList|ICMGetCacheEntries|WebDispGetServerList|WebDispGetGroupList|WebDispGetVirtHostList|WebDispGetUrlPrefixList|EnqGetStatistic|EnqGetLockTable|EnqRemoveUserLocks|StartWait|StopWait|WaitforStarted|WaitforStopped|RestartServiceWait|WaitforServiceStarted|CheckHostAgent}",
      "\t#force: ${2:false}",
      "\t#hostname: ${3:localhost}",
      "\t#parameter: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:}",
      "\t#sysnr: ${7:}",
      "\t#username: ${8:}"
    ]
  },
  "sap_hdbsql": {
    "prefix": "sap_hdbsql",
    "description": "Ansible Module to execute SQL on SAP HANA",
    "body": [
      "community.sap_libs.sap_hdbsql:",
      "\tinstance: ${1:}",
      "\t#autocommit: ${2:true}",
      "\t#bin_path: ${3:}",
      "\t#database: ${4:}",
      "\t#encrypted: ${5:false}",
      "\t#filepath: ${6:}",
      "\t#host: ${7:}",
      "\t#password: ${8:}",
      "\t#query: ${9:}",
      "\t#sid: ${10:}",
      "\t#user: ${11:SYSTEM}",
      "\t#userstore: ${12:false}"
    ]
  },
  "sap_pyrfc": {
    "prefix": "sap_pyrfc",
    "description": "Ansible Module for use of SAP PyRFC to execute SAP RFCs (Remote Function Calls) to SAP remote-enabled function modules",
    "body": [
      "community.sap_libs.sap_pyrfc:",
      "\tconnection: ${1:}",
      "\tfunction: ${2:}",
      "\tparameters: ${3:}"
    ]
  },
  "sap_snote": {
    "prefix": "sap_snote",
    "description": "This module will upload and (de)implements C(SNOTES) in a SAP S4HANA environment.",
    "body": [
      "community.sap_libs.sap_snote:",
      "\tconn_password: ${1:}",
      "\tconn_username: ${2:}",
      "\thost: ${3:}",
      "\t#client: ${4:000}",
      "\t#snote: ${5:}",
      "\t#snote_path: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#sysnr: ${8:01}"
    ]
  },
  "sap_system_facts": {
    "prefix": "sap_system_facts",
    "description": "Gathers SAP facts in a host",
    "body": "community.sap_libs.sap_system_facts:"
  },
  "sap_task_list_execute": {
    "prefix": "sap_task_list_execute",
    "description": "Perform SAP Task list execution",
    "body": [
      "community.sap_libs.sap_task_list_execute:",
      "\tconn_password: ${1:}",
      "\tconn_username: ${2:}",
      "\thost: ${3:}",
      "\ttask_to_execute: ${4:}",
      "\t#client: ${5:000}",
      "\t#sysnr: ${6:00}",
      "\t#task_parameters: ${7:}",
      "\t#task_settings: ${8:['BATCH']}",
      "\t#task_skip: ${9:false}"
    ]
  },
  "sap_user": {
    "prefix": "sap_user",
    "description": "This module will manage a user entities in a SAP S4/HANA environment",
    "body": [
      "community.sap_libs.sap_user:",
      "\tconn_password: ${1:}",
      "\tconn_username: ${2:}",
      "\thost: ${3:}",
      "\tusername: ${4:}",
      "\t#client: ${5:000}",
      "\t#company: ${6:}",
      "\t#email: ${7:}",
      "\t#firstname: ${8:}",
      "\t#force: ${9:false}",
      "\t#lastname: ${10:}",
      "\t#password: ${11:}",
      "\t#profiles: ${12:['']}",
      "\t#roles: ${13:['']}",
      "\t#state: ${14:#present|absent|lock|unlock}",
      "\t#sysnr: ${15:00}",
      "\t#user_type: ${16:#A|B|C|S|L}",
      "\t#useralias: ${17:}"
    ]
  },
  "sapcar_extract": {
    "prefix": "sapcar_extract",
    "description": "Manages SAP SAPCAR archives",
    "body": [
      "community.sap_libs.sapcar_extract:",
      "\tpath: ${1:}",
      "\t#binary_path: ${2:}",
      "\t#dest: ${3:}",
      "\t#manifest: ${4:SIGNATURE.SMF}",
      "\t#remove: ${5:false}",
      "\t#security_library: ${6:}",
      "\t#signature: ${7:false}"
    ]
  },
  "vcenter_domain_user_group_info": {
    "prefix": "vcenter_domain_user_group_info",
    "description": "Gather user or group information of a domain",
    "body": [
      "community.vmware.vcenter_domain_user_group_info:",
      "\tsearch_string: ${1:}",
      "\t#belongs_to_group: ${2:}",
      "\t#belongs_to_user: ${3:}",
      "\t#domain: ${4:vsphere.local}",
      "\t#exact_match: ${5:false}",
      "\t#find_groups: ${6:true}",
      "\t#find_users: ${7:true}",
      "\t#hostname: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vcenter_extension": {
    "prefix": "vcenter_extension",
    "description": "Register/deregister vCenter Extensions",
    "body": [
      "community.vmware.vcenter_extension:",
      "\textension_key: ${1:}",
      "\tversion: ${2:}",
      "\t#client_type: ${3:vsphere-client-serenity}",
      "\t#company: ${4:}",
      "\t#description: ${5:}",
      "\t#email: ${6:}",
      "\t#hostname: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#server_type: ${13:vsphere-client-serenity}",
      "\t#ssl_thumbprint: ${14:}",
      "\t#state: ${15:absent|#present}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:true}",
      "\t#visible: ${19:true}"
    ]
  },
  "vcenter_extension_info": {
    "prefix": "vcenter_extension_info",
    "description": "Gather info vCenter extensions",
    "body": [
      "community.vmware.vcenter_extension_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vcenter_folder": {
    "prefix": "vcenter_folder",
    "description": "Manage folders on given datacenter",
    "body": [
      "community.vmware.vcenter_folder:",
      "\tdatacenter: ${1:}",
      "\tfolder_name: ${2:}",
      "\t#folder_type: ${3:datastore|host|network|#vm}",
      "\t#hostname: ${4:}",
      "\t#parent_folder: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vcenter_license": {
    "prefix": "vcenter_license",
    "description": "Manage VMware vCenter license keys",
    "body": [
      "community.vmware.vcenter_license:",
      "\tlicense: ${1:}",
      "\t#cluster_name: ${2:}",
      "\t#datacenter: ${3:}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#labels: ${6:{'source': 'ansible'\\}}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vcenter_root_password_expiration": {
    "prefix": "vcenter_root_password_expiration",
    "description": "root password expiration of vCSA",
    "body": [
      "community.vmware.vcenter_root_password_expiration:",
      "\t#email: ${1:}",
      "\t#hostname: ${2:}",
      "\t#max_days_between_password_change: ${3:}",
      "\t#min_days_between_password_change: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#warn_days_before_password_expiration: ${12:}"
    ]
  },
  "vcenter_standard_key_provider": {
    "prefix": "vcenter_standard_key_provider",
    "description": "Add, reconfigure or remove Standard Key Provider on vCenter server",
    "body": [
      "community.vmware.vcenter_standard_key_provider:",
      "\tname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#kms_info: ${3:[]}",
      "\t#kms_password: ${4:}",
      "\t#kms_username: ${5:}",
      "\t#make_kms_trust_vc: ${6:}",
      "\t#mark_default: ${7:false}",
      "\t#password: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#proxy_server: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_about_info": {
    "prefix": "vmware_about_info",
    "description": "Provides information about VMware server to which user is connecting to",
    "body": [
      "community.vmware.vmware_about_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_category": {
    "prefix": "vmware_category",
    "description": "Manage VMware categories",
    "body": [
      "community.vmware.vmware_category:",
      "\tcategory_name: ${1:}",
      "\t#associable_object_types: ${2:All objects|Cluster|Content Library|Datacenter|Datastore|Datastore Cluster|Distributed Port Group|Distributed Switch|Folder|Host|Library item|Network|Host Network|Opaque Network|Resource Pool|vApp|Virtual Machine}",
      "\t#category_cardinality: ${3:#multiple|single}",
      "\t#category_description: ${4:\"\"}",
      "\t#hostname: ${5:}",
      "\t#new_category_name: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#protocol: ${9:http|#https}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_category_info": {
    "prefix": "vmware_category_info",
    "description": "Gather info about VMware tag categories",
    "body": [
      "community.vmware.vmware_category_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#protocol: ${4:http|#https}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_cfg_backup": {
    "prefix": "vmware_cfg_backup",
    "description": "Backup / Restore / Reset ESXi host configuration",
    "body": [
      "community.vmware.vmware_cfg_backup:",
      "\tstate: ${1:saved|absent|loaded}",
      "\t#dest: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#src: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_cluster": {
    "prefix": "vmware_cluster",
    "description": "Manage VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_cluster_dpm": {
    "prefix": "vmware_cluster_dpm",
    "description": "Manage Distributed Power Management (DPM) on VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster_dpm:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#default_dpm_behaviour: ${3:#automated|manual}",
      "\t#enable_dpm: ${4:false}",
      "\t#host_power_action_rate: ${5:1|2|#3|4|5}",
      "\t#hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_cluster_drs": {
    "prefix": "vmware_cluster_drs",
    "description": "Manage Distributed Resource Scheduler (DRS) on VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster_drs:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#advanced_settings: ${3:{\\}}",
      "\t#drs_default_vm_behavior: ${4:#fullyAutomated|manual|partiallyAutomated}",
      "\t#drs_enable_vm_behavior_overrides: ${5:true}",
      "\t#drs_vmotion_rate: ${6:1|2|#3|4|5}",
      "\t#enable: ${7:true}",
      "\t#hostname: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#predictive_drs: ${11:false}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_cluster_drs_recommendations": {
    "prefix": "vmware_cluster_drs_recommendations",
    "description": "Apply DRS Recommendations",
    "body": [
      "community.vmware.vmware_cluster_drs_recommendations:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_cluster_ha": {
    "prefix": "vmware_cluster_ha",
    "description": "Manage High Availability (HA) on VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster_ha:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#advanced_settings: ${3:{\\}}",
      "\t#apd_delay: ${4:180}",
      "\t#apd_reaction: ${5:#reset|none}",
      "\t#apd_response: ${6:disabled|#warning|restartConservative|restartAggressive}",
      "\t#enable: ${7:true}",
      "\t#failover_host_admission_control: ${8:}",
      "\t#ha_host_monitoring: ${9:#enabled|disabled}",
      "\t#ha_restart_priority: ${10:disabled|high|low|#medium}",
      "\t#ha_vm_failure_interval: ${11:30}",
      "\t#ha_vm_max_failure_window: ${12:-1}",
      "\t#ha_vm_max_failures: ${13:3}",
      "\t#ha_vm_min_up_time: ${14:120}",
      "\t#ha_vm_monitoring: ${15:vmAndAppMonitoring|vmMonitoringOnly|#vmMonitoringDisabled}",
      "\t#host_isolation_response: ${16:#none|powerOff|shutdown}",
      "\t#hostname: ${17:}",
      "\t#password: ${18:}",
      "\t#pdl_response: ${19:disabled|#warning|restartAggressive}",
      "\t#port: ${20:443}",
      "\t#proxy_host: ${21:}",
      "\t#proxy_port: ${22:}",
      "\t#reservation_based_admission_control: ${23:}",
      "\t#slot_based_admission_control: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:true}"
    ]
  },
  "vmware_cluster_info": {
    "prefix": "vmware_cluster_info",
    "description": "Gather info about clusters available in given vCenter",
    "body": [
      "community.vmware.vmware_cluster_info:",
      "\t#cluster_name: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#properties: ${6:}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#schema: ${9:#summary|vsphere}",
      "\t#show_tag: ${10:false}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_cluster_vcls": {
    "prefix": "vmware_cluster_vcls",
    "description": "Override the default vCLS (vSphere Cluster Services) VM disk placement for this cluster.",
    "body": [
      "community.vmware.vmware_cluster_vcls:",
      "\tallowed_datastores: ${1:}",
      "\tcluster_name: ${2:}",
      "\tdatacenter: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_cluster_vsan": {
    "prefix": "vmware_cluster_vsan",
    "description": "Manages virtual storage area network (vSAN) configuration on VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster_vsan:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#advanced_options: ${3:}",
      "\t#enable: ${4:true}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#vsan_auto_claim_storage: ${12:false}"
    ]
  },
  "vmware_content_deploy_ovf_template": {
    "prefix": "vmware_content_deploy_ovf_template",
    "description": "Deploy Virtual Machine from ovf template stored in content library.",
    "body": [
      "community.vmware.vmware_content_deploy_ovf_template:",
      "\tdatacenter: ${1:}",
      "\tname: ${2:}",
      "\ttemplate: ${3:}",
      "\t#cluster: ${4:}",
      "\t#datastore: ${5:}",
      "\t#datastore_cluster: ${6:}",
      "\t#folder: ${7:vm}",
      "\t#host: ${8:}",
      "\t#hostname: ${9:}",
      "\t#library: ${10:}",
      "\t#log_level: ${11:debug|info|#normal}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#protocol: ${14:http|#https}",
      "\t#proxy_host: ${15:}",
      "\t#proxy_port: ${16:}",
      "\t#resource_pool: ${17:}",
      "\t#storage_provisioning: ${18:#thin|thick|eagerZeroedThick|eagerzeroedthick}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "vmware_content_deploy_template": {
    "prefix": "vmware_content_deploy_template",
    "description": "Deploy Virtual Machine from template stored in content library.",
    "body": [
      "community.vmware.vmware_content_deploy_template:",
      "\tdatacenter: ${1:}",
      "\tname: ${2:}",
      "\ttemplate: ${3:}",
      "\t#cluster: ${4:}",
      "\t#datastore: ${5:}",
      "\t#datastore_cluster: ${6:}",
      "\t#folder: ${7:vm}",
      "\t#host: ${8:}",
      "\t#hostname: ${9:}",
      "\t#library: ${10:}",
      "\t#log_level: ${11:debug|info|#normal}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#protocol: ${14:http|#https}",
      "\t#proxy_host: ${15:}",
      "\t#proxy_port: ${16:}",
      "\t#resource_pool: ${17:}",
      "\t#state: ${18:#present|poweredon}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "vmware_content_library_info": {
    "prefix": "vmware_content_library_info",
    "description": "Gather information about VMWare Content Library",
    "body": [
      "community.vmware.vmware_content_library_info:",
      "\t#hostname: ${1:}",
      "\t#library_id: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#protocol: ${5:http|#https}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_content_library_manager": {
    "prefix": "vmware_content_library_manager",
    "description": "Create, update and delete VMware content library",
    "body": [
      "community.vmware.vmware_content_library_manager:",
      "\tlibrary_name: ${1:}",
      "\t#datastore_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#library_description: ${4:}",
      "\t#library_type: ${5:#local|subscribed}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#protocol: ${8:http|#https}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#ssl_thumbprint: ${11:\"\"}",
      "\t#state: ${12:#present|absent}",
      "\t#subscription_url: ${13:\"\"}",
      "\t#update_on_demand: ${14:false}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_custom_attribute": {
    "prefix": "vmware_custom_attribute",
    "description": "Manage custom attributes definitions",
    "body": [
      "community.vmware.vmware_custom_attribute:",
      "\tcustom_attribute: ${1:}",
      "\tobject_type: ${2:Cluster|Datacenter|Datastore|DistributedVirtualPortgroup|DistributedVirtualSwitch|Folder|Global|HostSystem|ResourcePool|VirtualMachine}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_custom_attribute_manager": {
    "prefix": "vmware_custom_attribute_manager",
    "description": "Manage custom attributes from VMware for the given vSphere object",
    "body": [
      "community.vmware.vmware_custom_attribute_manager:",
      "\tcustom_attributes: ${1:}",
      "\tobject_name: ${2:}",
      "\tobject_type: ${3:Cluster|Datacenter|Datastore|DistributedVirtualPortgroup|DistributedVirtualSwitch|Folder|HostSystem|ResourcePool|VirtualMachine}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_datacenter": {
    "prefix": "vmware_datacenter",
    "description": "Manage VMware vSphere Datacenters",
    "body": [
      "community.vmware.vmware_datacenter:",
      "\tdatacenter_name: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_datacenter_info": {
    "prefix": "vmware_datacenter_info",
    "description": "Gather information about VMware vSphere Datacenters",
    "body": [
      "community.vmware.vmware_datacenter_info:",
      "\t#datacenter: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#properties: ${5:}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#schema: ${8:#summary|vsphere}",
      "\t#show_tag: ${9:false}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_datastore": {
    "prefix": "vmware_datastore",
    "description": "Configure Datastores",
    "body": [
      "community.vmware.vmware_datastore:",
      "\tname: ${1:}",
      "\tstorage_io_control: ${2:enable_io_statistics|enable_statistics|disable}",
      "\t#congestion_threshold_manual: ${3:}",
      "\t#congestion_threshold_percentage: ${4:90}",
      "\t#datacenter: ${5:}",
      "\t#hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#statistic_collection: ${11:true}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_datastore_cluster": {
    "prefix": "vmware_datastore_cluster",
    "description": "Manage VMware vSphere datastore clusters",
    "body": [
      "community.vmware.vmware_datastore_cluster:",
      "\tdatastore_cluster_name: ${1:}",
      "\t#automation_level: ${2:automated|#manual}",
      "\t#datacenter_name: ${3:}",
      "\t#enable_io_loadbalance: ${4:false}",
      "\t#enable_sdrs: ${5:false}",
      "\t#folder: ${6:}",
      "\t#hostname: ${7:}",
      "\t#keep_vmdks_together: ${8:true}",
      "\t#loadbalance_interval: ${9:480}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_datastore_cluster_manager": {
    "prefix": "vmware_datastore_cluster_manager",
    "description": "Manage VMware vSphere datastore cluster's members",
    "body": [
      "community.vmware.vmware_datastore_cluster_manager:",
      "\tdatastore_cluster_name: ${1:}",
      "\tdatastores: ${2:}",
      "\t#datacenter_name: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_datastore_info": {
    "prefix": "vmware_datastore_info",
    "description": "Gather info about datastores available in given vCenter",
    "body": [
      "community.vmware.vmware_datastore_info:",
      "\t#cluster: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#gather_nfs_mount_info: ${3:false}",
      "\t#gather_vmfs_mount_info: ${4:false}",
      "\t#hostname: ${5:}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#properties: ${9:}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#schema: ${12:#summary|vsphere}",
      "\t#show_tag: ${13:false}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_datastore_maintenancemode": {
    "prefix": "vmware_datastore_maintenancemode",
    "description": "Place a datastore into maintenance mode",
    "body": [
      "community.vmware.vmware_datastore_maintenancemode:",
      "\t#cluster_name: ${1:}",
      "\t#datastore: ${2:}",
      "\t#datastore_cluster: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_deploy_ovf": {
    "prefix": "vmware_deploy_ovf",
    "description": "Deploys a VMware virtual machine from an OVF or OVA file, placed on file system or HTTP server",
    "body": [
      "community.vmware.vmware_deploy_ovf:",
      "\t#allow_duplicates: ${1:true}",
      "\t#cluster: ${2:}",
      "\t#datacenter: ${3:ha-datacenter}",
      "\t#datastore: ${4:datastore1}",
      "\t#deployment_option: ${5:}",
      "\t#disk_provisioning: ${6:flat|eagerZeroedThick|monolithicSparse|twoGbMaxExtentSparse|twoGbMaxExtentFlat|#thin|sparse|thick|seSparse|monolithicFlat}",
      "\t#enable_hidden_properties: ${7:false}",
      "\t#esxi_hostname: ${8:}",
      "\t#fail_on_spec_warnings: ${9:false}",
      "\t#folder: ${10:}",
      "\t#hostname: ${11:}",
      "\t#inject_ovf_env: ${12:false}",
      "\t#name: ${13:}",
      "\t#networks: ${14:{'VM Network': 'VM Network'\\}}",
      "\t#ovf: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:443}",
      "\t#power_on: ${18:true}",
      "\t#properties: ${19:}",
      "\t#proxy_host: ${20:}",
      "\t#proxy_port: ${21:}",
      "\t#resource_pool: ${22:Resources}",
      "\t#url: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:true}",
      "\t#wait: ${26:true}",
      "\t#wait_for_ip_address: ${27:false}"
    ]
  },
  "vmware_drs_group": {
    "prefix": "vmware_drs_group",
    "description": "Creates vm/host group in a given cluster.",
    "body": [
      "community.vmware.vmware_drs_group:",
      "\tcluster_name: ${1:}",
      "\tgroup_name: ${2:}",
      "\t#datacenter: ${3:}",
      "\t#hostname: ${4:}",
      "\t#hosts: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#vms: ${13:}"
    ]
  },
  "vmware_drs_group_info": {
    "prefix": "vmware_drs_group_info",
    "description": "Gathers info about DRS VM/Host groups on the given cluster",
    "body": [
      "community.vmware.vmware_drs_group_info:",
      "\t#cluster_name: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_drs_group_manager": {
    "prefix": "vmware_drs_group_manager",
    "description": "Manage VMs and Hosts in DRS group.",
    "body": [
      "community.vmware.vmware_drs_group_manager:",
      "\tcluster: ${1:}",
      "\tgroup_name: ${2:}",
      "\t#datacenter: ${3:}",
      "\t#hostname: ${4:}",
      "\t#hosts: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#vms: ${13:}"
    ]
  },
  "vmware_drs_rule_info": {
    "prefix": "vmware_drs_rule_info",
    "description": "Gathers info about DRS rule on the given cluster",
    "body": [
      "community.vmware.vmware_drs_rule_info:",
      "\t#cluster_name: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_dvs_host": {
    "prefix": "vmware_dvs_host",
    "description": "Add or remove a host from distributed virtual switch",
    "body": [
      "community.vmware.vmware_dvs_host:",
      "\tesxi_hostname: ${1:}",
      "\tswitch_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#lag_uplinks: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#vendor_specific_config: ${12:}",
      "\t#vmnics: ${13:}"
    ]
  },
  "vmware_dvs_portgroup": {
    "prefix": "vmware_dvs_portgroup",
    "description": "Create or remove a Distributed vSwitch portgroup.",
    "body": [
      "community.vmware.vmware_dvs_portgroup:",
      "\tport_binding: ${1:static|ephemeral}",
      "\tportgroup_name: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tswitch_name: ${4:}",
      "\tvlan_id: ${5:}",
      "\t#hostname: ${6:}",
      "\t#in_traffic_shaping: ${7:}",
      "\t#mac_learning: ${8:}",
      "\t#net_flow: ${9:true|on|yes|false|off|no|inherited}",
      "\t#network_policy: ${10:}",
      "\t#num_ports: ${11:}",
      "\t#out_traffic_shaping: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:443}",
      "\t#port_allocation: ${15:elastic|fixed}",
      "\t#port_policy: ${16:{'traffic_filter_override': False, 'network_rp_override': False, 'live_port_move': False, 'mac_management_override': False, 'vendor_config_override': False, 'port_config_reset_at_disconnect': True, 'uplink_teaming_override': False, 'block_override': True, 'shaping_override': False, 'vlan_override': False, 'ipfix_override': False\\}}",
      "\t#proxy_host: ${17:}",
      "\t#proxy_port: ${18:}",
      "\t#teaming_policy: ${19:{'notify_switches': True, 'load_balance_policy': 'loadbalance_srcid', 'rolling_order': False\\}}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:true}",
      "\t#vlan_private: ${22:false}",
      "\t#vlan_trunk: ${23:false}"
    ]
  },
  "vmware_dvs_portgroup_find": {
    "prefix": "vmware_dvs_portgroup_find",
    "description": "Find portgroup(s) in a VMware environment",
    "body": [
      "community.vmware.vmware_dvs_portgroup_find:",
      "\t#dvswitch: ${1:}",
      "\t#hostname: ${2:}",
      "\t#name: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#show_uplink: ${8:false}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#vlanid: ${11:}"
    ]
  },
  "vmware_dvs_portgroup_info": {
    "prefix": "vmware_dvs_portgroup_info",
    "description": "Gathers info DVS portgroup configurations",
    "body": [
      "community.vmware.vmware_dvs_portgroup_info:",
      "\tdatacenter: ${1:}",
      "\t#dvswitch: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#show_mac_learning: ${8:true}",
      "\t#show_network_policy: ${9:true}",
      "\t#show_port_policy: ${10:true}",
      "\t#show_teaming_policy: ${11:true}",
      "\t#show_uplinks: ${12:true}",
      "\t#show_vlan_info: ${13:false}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_dvswitch": {
    "prefix": "vmware_dvswitch",
    "description": "Create or remove a Distributed Switch",
    "body": [
      "community.vmware.vmware_dvswitch:",
      "\tswitch_name: ${1:}",
      "\t#contact: ${2:}",
      "\t#datacenter_name: ${3:}",
      "\t#description: ${4:}",
      "\t#discovery_operation: ${5:both|advertise|#listen}",
      "\t#discovery_proto: ${6:#cdp|lldp|disabled}",
      "\t#folder: ${7:}",
      "\t#health_check: ${8:{'vlan_mtu': False, 'teaming_failover': False, 'vlan_mtu_interval': 0, 'teaming_failover_interval': 0\\}}",
      "\t#hostname: ${9:}",
      "\t#mtu: ${10:1500}",
      "\t#multicast_filtering_mode: ${11:#basic|snooping}",
      "\t#net_flow: ${12:{'collector_port': 0, 'observation_domain_id': 0, 'active_flow_timeout': 60, 'idle_flow_timeout': 15, 'sampling_rate': 4096, 'internal_flows_only': False\\}}",
      "\t#network_policy: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:443}",
      "\t#proxy_host: ${16:}",
      "\t#proxy_port: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#switch_version: ${19:}",
      "\t#uplink_prefix: ${20:Uplink }",
      "\t#uplink_quantity: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "vmware_dvswitch_info": {
    "prefix": "vmware_dvswitch_info",
    "description": "Gathers info dvswitch configurations",
    "body": [
      "community.vmware.vmware_dvswitch_info:",
      "\t#folder: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#properties: ${5:}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#schema: ${8:#summary|vsphere}",
      "\t#switch_name: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_dvswitch_lacp": {
    "prefix": "vmware_dvswitch_lacp",
    "description": "Manage LACP configuration on a Distributed Switch",
    "body": [
      "community.vmware.vmware_dvswitch_lacp:",
      "\tswitch: ${1:}",
      "\t#hostname: ${2:}",
      "\t#link_aggregation_groups: ${3:[]}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#support_mode: ${8:#basic|enhanced}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_dvswitch_nioc": {
    "prefix": "vmware_dvswitch_nioc",
    "description": "Manage distributed switch Network IO Control",
    "body": [
      "community.vmware.vmware_dvswitch_nioc:",
      "\tswitch: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#resources: ${7:[]}",
      "\t#state: ${8:#present|absent}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#version: ${11:version2|version3}"
    ]
  },
  "vmware_dvswitch_pvlans": {
    "prefix": "vmware_dvswitch_pvlans",
    "description": "Manage Private VLAN configuration of a Distributed Switch",
    "body": [
      "community.vmware.vmware_dvswitch_pvlans:",
      "\tswitch: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#primary_pvlans: ${5:[]}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#secondary_pvlans: ${8:[]}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_dvswitch_uplink_pg": {
    "prefix": "vmware_dvswitch_uplink_pg",
    "description": "Manage uplink portgroup configuration of a Distributed Switch",
    "body": [
      "community.vmware.vmware_dvswitch_uplink_pg:",
      "\tswitch: ${1:}",
      "\t#advanced: ${2:{'port_config_reset_at_disconnect': True, 'block_override': True, 'vendor_config_override': False, 'vlan_override': False, 'netflow_override': False, 'traffic_filter_override': False\\}}",
      "\t#block_all_ports: ${3:false}",
      "\t#description: ${4:}",
      "\t#hostname: ${5:}",
      "\t#lacp: ${6:{'status': 'disabled', 'mode': 'passive'\\}}",
      "\t#name: ${7:}",
      "\t#netflow_enabled: ${8:false}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}",
      "\t#vlan_trunk_range: ${15:['0-4094']}"
    ]
  },
  "vmware_evc_mode": {
    "prefix": "vmware_evc_mode",
    "description": "Enable/Disable EVC mode on vCenter",
    "body": [
      "community.vmware.vmware_evc_mode:",
      "\tcluster_name: ${1:}",
      "\tdatacenter_name: ${2:}",
      "\t#evc_mode: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_export_ovf": {
    "prefix": "vmware_export_ovf",
    "description": "Exports a VMware virtual machine to an OVF file, device files and a manifest file",
    "body": [
      "community.vmware.vmware_export_ovf:",
      "\texport_dir: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#download_timeout: ${3:30}",
      "\t#export_with_extraconfig: ${4:false}",
      "\t#export_with_images: ${5:false}",
      "\t#folder: ${6:}",
      "\t#hostname: ${7:}",
      "\t#moid: ${8:}",
      "\t#name: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#username: ${14:}",
      "\t#uuid: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_folder_info": {
    "prefix": "vmware_folder_info",
    "description": "Provides information about folders in a datacenter",
    "body": [
      "community.vmware.vmware_folder_info:",
      "\tdatacenter: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_guest": {
    "prefix": "vmware_guest",
    "description": "Manages virtual machines in vCenter",
    "body": [
      "community.vmware.vmware_guest:",
      "\t#advanced_settings: ${1:[]}",
      "\t#annotation: ${2:}",
      "\t#cdrom: ${3:[]}",
      "\t#cluster: ${4:}",
      "\t#convert: ${5:thin|thick|eagerzeroedthick}",
      "\t#customization: ${6:{\\}}",
      "\t#customization_spec: ${7:}",
      "\t#customvalues: ${8:[]}",
      "\t#datacenter: ${9:ha-datacenter}",
      "\t#datastore: ${10:}",
      "\t#delete_from_inventory: ${11:false}",
      "\t#disk: ${12:[]}",
      "\t#encryption: ${13:{\\}}",
      "\t#esxi_hostname: ${14:}",
      "\t#folder: ${15:}",
      "\t#force: ${16:false}",
      "\t#guest_id: ${17:}",
      "\t#hardware: ${18:{\\}}",
      "\t#hostname: ${19:}",
      "\t#is_template: ${20:false}",
      "\t#linked_clone: ${21:false}",
      "\t#name: ${22:}",
      "\t#name_match: ${23:#first|last}",
      "\t#networks: ${24:[]}",
      "\t#nvdimm: ${25:{\\}}",
      "\t#password: ${26:}",
      "\t#port: ${27:443}",
      "\t#proxy_host: ${28:}",
      "\t#proxy_port: ${29:}",
      "\t#resource_pool: ${30:}",
      "\t#snapshot_src: ${31:}",
      "\t#state: ${32:absent|poweredon|powered-on|poweredoff|powered-off|#present|rebootguest|reboot-guest|restarted|suspended|shutdownguest|shutdown-guest}",
      "\t#state_change_timeout: ${33:0}",
      "\t#template: ${34:}",
      "\t#use_instance_uuid: ${35:false}",
      "\t#username: ${36:}",
      "\t#uuid: ${37:}",
      "\t#validate_certs: ${38:true}",
      "\t#vapp_properties: ${39:[]}",
      "\t#wait_for_customization: ${40:false}",
      "\t#wait_for_customization_timeout: ${41:3600}",
      "\t#wait_for_ip_address: ${42:false}",
      "\t#wait_for_ip_address_timeout: ${43:300}"
    ]
  },
  "vmware_guest_boot_info": {
    "prefix": "vmware_guest_boot_info",
    "description": "Gather info about boot options for the given virtual machine",
    "body": [
      "community.vmware.vmware_guest_boot_info:",
      "\t#hostname: ${1:}",
      "\t#moid: ${2:}",
      "\t#name: ${3:}",
      "\t#name_match: ${4:#first|last}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#use_instance_uuid: ${9:false}",
      "\t#username: ${10:}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_guest_boot_manager": {
    "prefix": "vmware_guest_boot_manager",
    "description": "Manage boot options for the given virtual machine",
    "body": [
      "community.vmware.vmware_guest_boot_manager:",
      "\t#boot_delay: ${1:}",
      "\t#boot_firmware: ${2:bios|efi}",
      "\t#boot_hdd_name: ${3:}",
      "\t#boot_order: ${4:[]}",
      "\t#boot_retry_delay: ${5:}",
      "\t#boot_retry_enabled: ${6:}",
      "\t#enter_bios_setup: ${7:}",
      "\t#hostname: ${8:}",
      "\t#moid: ${9:}",
      "\t#name: ${10:}",
      "\t#name_match: ${11:#first|last}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#proxy_host: ${14:}",
      "\t#proxy_port: ${15:}",
      "\t#secure_boot_enabled: ${16:}",
      "\t#use_instance_uuid: ${17:false}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "vmware_guest_controller": {
    "prefix": "vmware_guest_controller",
    "description": "Manage disk or USB controllers related to virtual machine in given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_controller:",
      "\t#controllers: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#folder: ${3:}",
      "\t#gather_disk_controller_facts: ${4:false}",
      "\t#hostname: ${5:}",
      "\t#moid: ${6:}",
      "\t#name: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#sleep_time: ${12:10}",
      "\t#use_instance_uuid: ${13:false}",
      "\t#username: ${14:}",
      "\t#uuid: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_guest_cross_vc_clone": {
    "prefix": "vmware_guest_cross_vc_clone",
    "description": "Cross-vCenter VM/template clone",
    "body": [
      "community.vmware.vmware_guest_cross_vc_clone:",
      "\tdestination_datastore: ${1:}",
      "\tdestination_host: ${2:}",
      "\tdestination_vcenter: ${3:}",
      "\tdestination_vcenter_password: ${4:}",
      "\tdestination_vcenter_username: ${5:}",
      "\tdestination_vm_folder: ${6:}",
      "\tdestination_vm_name: ${7:}",
      "\t#destination_resource_pool: ${8:}",
      "\t#destination_vcenter_port: ${9:443}",
      "\t#destination_vcenter_validate_certs: ${10:false}",
      "\t#hostname: ${11:}",
      "\t#is_template: ${12:false}",
      "\t#moid: ${13:}",
      "\t#name: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:443}",
      "\t#proxy_host: ${17:}",
      "\t#proxy_port: ${18:}",
      "\t#state: ${19:#present|poweredon}",
      "\t#timeout: ${20:3600}",
      "\t#use_instance_uuid: ${21:false}",
      "\t#username: ${22:}",
      "\t#uuid: ${23:}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "vmware_guest_custom_attribute_defs": {
    "prefix": "vmware_guest_custom_attribute_defs",
    "description": "Manage custom attributes definitions for virtual machine from VMware",
    "body": [
      "community.vmware.vmware_guest_custom_attribute_defs:",
      "\t#attribute_key: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_guest_custom_attributes": {
    "prefix": "vmware_guest_custom_attributes",
    "description": "Manage custom attributes from VMware for the given virtual machine",
    "body": [
      "community.vmware.vmware_guest_custom_attributes:",
      "\t#attributes: ${1:[]}",
      "\t#datacenter: ${2:}",
      "\t#folder: ${3:}",
      "\t#hostname: ${4:}",
      "\t#moid: ${5:}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#use_instance_uuid: ${12:false}",
      "\t#username: ${13:}",
      "\t#uuid: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_guest_customization_info": {
    "prefix": "vmware_guest_customization_info",
    "description": "Gather info about VM customization specifications",
    "body": [
      "community.vmware.vmware_guest_customization_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#spec_name: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_guest_disk": {
    "prefix": "vmware_guest_disk",
    "description": "Manage disks related to virtual machine in given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_disk:",
      "\tdatacenter: ${1:}",
      "\t#disk: ${2:[]}",
      "\t#folder: ${3:}",
      "\t#hostname: ${4:}",
      "\t#moid: ${5:}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#use_instance_uuid: ${11:false}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_guest_disk_info": {
    "prefix": "vmware_guest_disk_info",
    "description": "Gather info about disks of given virtual machine",
    "body": [
      "community.vmware.vmware_guest_disk_info:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#use_instance_uuid: ${10:false}",
      "\t#username: ${11:}",
      "\t#uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_guest_file_operation": {
    "prefix": "vmware_guest_file_operation",
    "description": "Files operation in a VMware guest operating system without network",
    "body": [
      "community.vmware.vmware_guest_file_operation:",
      "\tvm_id: ${1:}",
      "\tvm_password: ${2:}",
      "\tvm_username: ${3:}",
      "\t#cluster: ${4:}",
      "\t#copy: ${5:}",
      "\t#datacenter: ${6:}",
      "\t#directory: ${7:}",
      "\t#fetch: ${8:}",
      "\t#folder: ${9:}",
      "\t#hostname: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:443}",
      "\t#proxy_host: ${13:}",
      "\t#proxy_port: ${14:}",
      "\t#timeout: ${15:100}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:true}",
      "\t#vm_id_type: ${18:uuid|instance_uuid|dns_name|inventory_path|#vm_name}"
    ]
  },
  "vmware_guest_find": {
    "prefix": "vmware_guest_find",
    "description": "Find the folder path(s) for a virtual machine by name or UUID",
    "body": [
      "community.vmware.vmware_guest_find:",
      "\t#hostname: ${1:}",
      "\t#name: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#use_instance_uuid: ${7:false}",
      "\t#username: ${8:}",
      "\t#uuid: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_guest_info": {
    "prefix": "vmware_guest_info",
    "description": "Gather info about a single VM",
    "body": [
      "community.vmware.vmware_guest_info:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#name_match: ${6:#first|last}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#properties: ${9:}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#schema: ${12:#summary|vsphere}",
      "\t#tag_details: ${13:false}",
      "\t#tags: ${14:false}",
      "\t#use_instance_uuid: ${15:false}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "vmware_guest_instant_clone": {
    "prefix": "vmware_guest_instant_clone",
    "description": "Instant Clone VM",
    "body": [
      "community.vmware.vmware_guest_instant_clone:",
      "\tdatacenter: ${1:}",
      "\tdatastore: ${2:}",
      "\thost: ${3:}",
      "\tname: ${4:}",
      "\t#folder: ${5:}",
      "\t#guestinfo_vars: ${6:}",
      "\t#hostname: ${7:}",
      "\t#moid: ${8:}",
      "\t#parent_vm: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#resource_pool: ${14:}",
      "\t#use_instance_uuid: ${15:false}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}",
      "\t#validate_certs: ${18:true}",
      "\t#vm_password: ${19:}",
      "\t#vm_username: ${20:}",
      "\t#wait_vm_tools: ${21:true}",
      "\t#wait_vm_tools_timeout: ${22:300}"
    ]
  },
  "vmware_guest_move": {
    "prefix": "vmware_guest_move",
    "description": "Moves virtual machines in vCenter",
    "body": [
      "community.vmware.vmware_guest_move:",
      "\tdatacenter: ${1:}",
      "\tdest_folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#name_match: ${6:#first|last}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#use_instance_uuid: ${11:false}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_guest_network": {
    "prefix": "vmware_guest_network",
    "description": "Manage network adapters of specified virtual machine in given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_network:",
      "\t#allow_guest_os_mtu_change: ${1:true}",
      "\t#cluster: ${2:}",
      "\t#connected: ${3:true}",
      "\t#datacenter: ${4:ha-datacenter}",
      "\t#device_type: ${5:vmxnet3}",
      "\t#directpath_io: ${6:false}",
      "\t#esxi_hostname: ${7:}",
      "\t#folder: ${8:}",
      "\t#force: ${9:false}",
      "\t#gather_network_info: ${10:false}",
      "\t#guest_control: ${11:true}",
      "\t#hostname: ${12:}",
      "\t#label: ${13:}",
      "\t#mac_address: ${14:}",
      "\t#moid: ${15:}",
      "\t#name: ${16:}",
      "\t#network_name: ${17:}",
      "\t#password: ${18:}",
      "\t#physical_function_backing: ${19:}",
      "\t#port: ${20:443}",
      "\t#proxy_host: ${21:}",
      "\t#proxy_port: ${22:}",
      "\t#pvrdma_device_protocol: ${23:}",
      "\t#start_connected: ${24:true}",
      "\t#state: ${25:#present|absent}",
      "\t#switch: ${26:}",
      "\t#use_instance_uuid: ${27:false}",
      "\t#username: ${28:}",
      "\t#uuid: ${29:}",
      "\t#validate_certs: ${30:true}",
      "\t#virtual_function_backing: ${31:}",
      "\t#vlan_id: ${32:}",
      "\t#wake_onlan: ${33:false}"
    ]
  },
  "vmware_guest_powerstate": {
    "prefix": "vmware_guest_powerstate",
    "description": "Manages power states of virtual machines in vCenter",
    "body": [
      "community.vmware.vmware_guest_powerstate:",
      "\t#answer: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#folder: ${3:}",
      "\t#force: ${4:false}",
      "\t#hostname: ${5:}",
      "\t#moid: ${6:}",
      "\t#name: ${7:}",
      "\t#name_match: ${8:#first|last}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#schedule_task_description: ${13:}",
      "\t#schedule_task_enabled: ${14:true}",
      "\t#schedule_task_name: ${15:}",
      "\t#scheduled_at: ${16:}",
      "\t#state: ${17:powered-off|powered-on|reboot-guest|restarted|shutdown-guest|suspended|#present}",
      "\t#state_change_timeout: ${18:0}",
      "\t#use_instance_uuid: ${19:false}",
      "\t#username: ${20:}",
      "\t#uuid: ${21:}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "vmware_guest_register_operation": {
    "prefix": "vmware_guest_register_operation",
    "description": "VM inventory registration operation",
    "body": [
      "community.vmware.vmware_guest_register_operation:",
      "\tname: ${1:}",
      "\t#cluster: ${2:}",
      "\t#datacenter: ${3:ha-datacenter}",
      "\t#esxi_hostname: ${4:}",
      "\t#folder: ${5:}",
      "\t#hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#path: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#resource_pool: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#template: ${14:false}",
      "\t#username: ${15:}",
      "\t#uuid: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "vmware_guest_screenshot": {
    "prefix": "vmware_guest_screenshot",
    "description": "Create a screenshot of the Virtual Machine console.",
    "body": [
      "community.vmware.vmware_guest_screenshot:",
      "\t#cluster: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#folder: ${4:}",
      "\t#hostname: ${5:}",
      "\t#local_path: ${6:}",
      "\t#moid: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#uuid: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_guest_sendkey": {
    "prefix": "vmware_guest_sendkey",
    "description": "Send USB HID codes to the Virtual Machine's keyboard.",
    "body": [
      "community.vmware.vmware_guest_sendkey:",
      "\t#cluster: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#folder: ${4:}",
      "\t#hostname: ${5:}",
      "\t#keys_send: ${6:[]}",
      "\t#moid: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#sleep_time: ${13:0}",
      "\t#string_send: ${14:}",
      "\t#username: ${15:}",
      "\t#uuid: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "vmware_guest_serial_port": {
    "prefix": "vmware_guest_serial_port",
    "description": "Manage serial ports on an existing VM",
    "body": [
      "community.vmware.vmware_guest_serial_port:",
      "\tbackings: ${1:}",
      "\t#hostname: ${2:}",
      "\t#moid: ${3:}",
      "\t#name: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#use_instance_uuid: ${9:false}",
      "\t#username: ${10:}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_guest_snapshot": {
    "prefix": "vmware_guest_snapshot",
    "description": "Manages virtual machines snapshots in vCenter",
    "body": [
      "community.vmware.vmware_guest_snapshot:",
      "\tdatacenter: ${1:}",
      "\t#description: ${2:\"\"}",
      "\t#folder: ${3:}",
      "\t#hostname: ${4:}",
      "\t#memory_dump: ${5:false}",
      "\t#moid: ${6:}",
      "\t#name: ${7:}",
      "\t#name_match: ${8:#first|last}",
      "\t#new_description: ${9:}",
      "\t#new_snapshot_name: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:443}",
      "\t#proxy_host: ${13:}",
      "\t#proxy_port: ${14:}",
      "\t#quiesce: ${15:false}",
      "\t#remove_children: ${16:false}",
      "\t#snapshot_id: ${17:}",
      "\t#snapshot_name: ${18:}",
      "\t#state: ${19:#present|absent|revert|remove_all}",
      "\t#use_instance_uuid: ${20:false}",
      "\t#username: ${21:}",
      "\t#uuid: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "vmware_guest_snapshot_info": {
    "prefix": "vmware_guest_snapshot_info",
    "description": "Gather info about virtual machine's snapshots in vCenter",
    "body": [
      "community.vmware.vmware_guest_snapshot_info:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#use_instance_uuid: ${10:false}",
      "\t#username: ${11:}",
      "\t#uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_guest_storage_policy": {
    "prefix": "vmware_guest_storage_policy",
    "description": "Set VM Home and disk(s) storage policy profiles.",
    "body": [
      "community.vmware.vmware_guest_storage_policy:",
      "\t#disk: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#vm_home: ${13:}"
    ]
  },
  "vmware_guest_tools_info": {
    "prefix": "vmware_guest_tools_info",
    "description": "Gather info about VMware tools installed in VM",
    "body": [
      "community.vmware.vmware_guest_tools_info:",
      "\t#datacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#name_match: ${6:#first|last}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#use_instance_uuid: ${11:false}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_guest_tools_upgrade": {
    "prefix": "vmware_guest_tools_upgrade",
    "description": "Module to upgrade VMTools",
    "body": [
      "community.vmware.vmware_guest_tools_upgrade:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#force_upgrade: ${3:false}",
      "\t#hostname: ${4:}",
      "\t#moid: ${5:}",
      "\t#name: ${6:}",
      "\t#name_match: ${7:#first|last}",
      "\t#password: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_guest_tools_wait": {
    "prefix": "vmware_guest_tools_wait",
    "description": "Wait for VMware tools to become available",
    "body": [
      "community.vmware.vmware_guest_tools_wait:",
      "\t#datacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#name_match: ${6:#first|last}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#timeout: ${11:500}",
      "\t#use_instance_uuid: ${12:false}",
      "\t#username: ${13:}",
      "\t#uuid: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_guest_tpm": {
    "prefix": "vmware_guest_tpm",
    "description": "Add or remove vTPM device for specified VM.",
    "body": [
      "community.vmware.vmware_guest_tpm:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_guest_vgpu": {
    "prefix": "vmware_guest_vgpu",
    "description": "Modify vGPU video card profile of the specified virtual machine in the given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_vgpu:",
      "\t#cluster: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#esxi_hostname: ${3:}",
      "\t#folder: ${4:}",
      "\t#force: ${5:false}",
      "\t#hostname: ${6:}",
      "\t#moid: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#use_instance_uuid: ${14:false}",
      "\t#username: ${15:}",
      "\t#uuid: ${16:}",
      "\t#validate_certs: ${17:true}",
      "\t#vgpu: ${18:}"
    ]
  },
  "vmware_guest_vgpu_info": {
    "prefix": "vmware_guest_vgpu_info",
    "description": "Gather information about vGPU profiles of the specified virtual machine in the given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_vgpu_info:",
      "\t#datacenter: ${1:ha-datacenter}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#use_instance_uuid: ${10:false}",
      "\t#username: ${11:}",
      "\t#uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_guest_video": {
    "prefix": "vmware_guest_video",
    "description": "Modify video card configurations of specified virtual machine in given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_video:",
      "\t#datacenter: ${1:ha-datacenter}",
      "\t#display_number: ${2:}",
      "\t#enable_3D: ${3:}",
      "\t#folder: ${4:}",
      "\t#gather_video_facts: ${5:false}",
      "\t#hostname: ${6:}",
      "\t#memory_3D_mb: ${7:}",
      "\t#moid: ${8:}",
      "\t#name: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#renderer_3D: ${14:automatic|software|hardware}",
      "\t#use_auto_detect: ${15:}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}",
      "\t#validate_certs: ${18:true}",
      "\t#video_memory_mb: ${19:}"
    ]
  },
  "vmware_host": {
    "prefix": "vmware_host",
    "description": "Add, remove, or move an ESXi host to, from, or within vCenter",
    "body": [
      "community.vmware.vmware_host:",
      "\tdatacenter_name: ${1:}",
      "\tesxi_hostname: ${2:}",
      "\t#add_connected: ${3:true}",
      "\t#cluster_name: ${4:}",
      "\t#esxi_password: ${5:}",
      "\t#esxi_ssl_thumbprint: ${6:\"\"}",
      "\t#esxi_username: ${7:}",
      "\t#fetch_ssl_thumbprint: ${8:true}",
      "\t#folder: ${9:}",
      "\t#force_connection: ${10:true}",
      "\t#hostname: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#proxy_host: ${14:}",
      "\t#proxy_port: ${15:}",
      "\t#reconnect_disconnected: ${16:true}",
      "\t#state: ${17:#present|absent|add_or_reconnect|reconnect|disconnected}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "vmware_host_acceptance": {
    "prefix": "vmware_host_acceptance",
    "description": "Manage the host acceptance level of an ESXi host",
    "body": [
      "community.vmware.vmware_host_acceptance:",
      "\tstate: ${1:community|partner|vmware_accepted|vmware_certified}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_acceptance_info": {
    "prefix": "vmware_host_acceptance_info",
    "description": "Gather host acceptance level of ESXi hosts",
    "body": [
      "community.vmware.vmware_host_acceptance_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_active_directory": {
    "prefix": "vmware_host_active_directory",
    "description": "Joins an ESXi host system to an Active Directory domain or leaves it",
    "body": [
      "community.vmware.vmware_host_active_directory:",
      "\t#ad_domain: ${1:\"\"}",
      "\t#ad_password: ${2:\"\"}",
      "\t#ad_state: ${3:present|#absent}",
      "\t#ad_user: ${4:\"\"}",
      "\t#cluster_name: ${5:}",
      "\t#esxi_hostname: ${6:}",
      "\t#hostname: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_host_auto_start": {
    "prefix": "vmware_host_auto_start",
    "description": "Manage the auto power ON or OFF for vm on ESXi host",
    "body": [
      "community.vmware.vmware_host_auto_start:",
      "\tesxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#moid: ${3:}",
      "\t#name: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#power_info: ${7:{'start_action': 'none', 'start_delay': -1, 'start_order': -1, 'stop_action': 'systemDefault', 'stop_delay': -1, 'wait_for_heartbeat': 'systemDefault'\\}}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#system_defaults: ${10:}",
      "\t#use_instance_uuid: ${11:false}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_host_capability_info": {
    "prefix": "vmware_host_capability_info",
    "description": "Gathers info about an ESXi host's capability information",
    "body": [
      "community.vmware.vmware_host_capability_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_config_info": {
    "prefix": "vmware_host_config_info",
    "description": "Gathers info about an ESXi host's advance configuration information",
    "body": [
      "community.vmware.vmware_host_config_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_config_manager": {
    "prefix": "vmware_host_config_manager",
    "description": "Manage advanced system settings of an ESXi host",
    "body": [
      "community.vmware.vmware_host_config_manager:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#options: ${4:{\\}}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_custom_attributes": {
    "prefix": "vmware_host_custom_attributes",
    "description": "Manage custom attributes from VMware for the given ESXi host",
    "body": [
      "community.vmware.vmware_host_custom_attributes:",
      "\tesxi_hostname: ${1:}",
      "\t#attributes: ${2:[]}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_datastore": {
    "prefix": "vmware_host_datastore",
    "description": "Manage a datastore on ESXi host",
    "body": [
      "community.vmware.vmware_host_datastore:",
      "\tdatastore_name: ${1:}",
      "\t#auto_expand: ${2:true}",
      "\t#datastore_type: ${3:nfs|nfs41|vmfs|vvol}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#nfs_path: ${6:}",
      "\t#nfs_ro: ${7:false}",
      "\t#nfs_server: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#resignature: ${13:false}",
      "\t#state: ${14:#present|absent}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}",
      "\t#vasa_provider: ${17:}",
      "\t#vmfs_device_name: ${18:}",
      "\t#vmfs_version: ${19:}"
    ]
  },
  "vmware_host_disk_info": {
    "prefix": "vmware_host_disk_info",
    "description": "Gathers information about disks attached to given ESXi host/s.",
    "body": [
      "community.vmware.vmware_host_disk_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_dns": {
    "prefix": "vmware_host_dns",
    "description": "Manage DNS configuration of an ESXi host system",
    "body": [
      "community.vmware.vmware_host_dns:",
      "\ttype: ${1:dhcp|static}",
      "\t#cluster_name: ${2:}",
      "\t#device: ${3:}",
      "\t#dns_servers: ${4:}",
      "\t#domain: ${5:}",
      "\t#esxi_hostname: ${6:}",
      "\t#host_name: ${7:}",
      "\t#hostname: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#search_domains: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#verbose: ${16:false}"
    ]
  },
  "vmware_host_dns_info": {
    "prefix": "vmware_host_dns_info",
    "description": "Gathers info about an ESXi host's DNS configuration information",
    "body": [
      "community.vmware.vmware_host_dns_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_facts": {
    "prefix": "vmware_host_facts",
    "description": "Gathers facts about remote ESXi hostsystem",
    "body": [
      "community.vmware.vmware_host_facts:",
      "\t#esxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#properties: ${5:}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#schema: ${8:#summary|vsphere}",
      "\t#show_tag: ${9:false}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_feature_info": {
    "prefix": "vmware_host_feature_info",
    "description": "Gathers info about an ESXi host's feature capability information",
    "body": [
      "community.vmware.vmware_host_feature_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_firewall_info": {
    "prefix": "vmware_host_firewall_info",
    "description": "Gathers info about an ESXi host's firewall configuration information",
    "body": [
      "community.vmware.vmware_host_firewall_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_firewall_manager": {
    "prefix": "vmware_host_firewall_manager",
    "description": "Manage firewall configurations about an ESXi host",
    "body": [
      "community.vmware.vmware_host_firewall_manager:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#rules: ${8:[]}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_graphics": {
    "prefix": "vmware_host_graphics",
    "description": "Manage Host Graphic Settings",
    "body": [
      "community.vmware.vmware_host_graphics:",
      "\t#assigment_policy: ${1:consolidation|#performance}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#graphic_type: ${4:#shared|sharedDirect}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#restart_xorg: ${10:false}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_hyperthreading": {
    "prefix": "vmware_host_hyperthreading",
    "description": "Enables/Disables Hyperthreading optimization for an ESXi host system",
    "body": [
      "community.vmware.vmware_host_hyperthreading:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#enabled|disabled}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_ipv6": {
    "prefix": "vmware_host_ipv6",
    "description": "Enables/Disables IPv6 support for an ESXi host system",
    "body": [
      "community.vmware.vmware_host_ipv6:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#enabled|disabled}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_iscsi": {
    "prefix": "vmware_host_iscsi",
    "description": "Manage the iSCSI configuration of ESXi host",
    "body": [
      "community.vmware.vmware_host_iscsi:",
      "\tesxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#iscsi_config: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent|enabled|disabled}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_iscsi_info": {
    "prefix": "vmware_host_iscsi_info",
    "description": "Gather iSCSI configuration information of ESXi host",
    "body": [
      "community.vmware.vmware_host_iscsi_info:",
      "\tesxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_host_kernel_manager": {
    "prefix": "vmware_host_kernel_manager",
    "description": "Manage kernel module options on ESXi hosts",
    "body": [
      "community.vmware.vmware_host_kernel_manager:",
      "\tkernel_module_name: ${1:}",
      "\tkernel_module_option: ${2:}",
      "\t#cluster_name: ${3:}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_lockdown": {
    "prefix": "vmware_host_lockdown",
    "description": "Manage administrator permission for the local administrative account for the ESXi host",
    "body": [
      "community.vmware.vmware_host_lockdown:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:disabled|#normal|strict}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_lockdown_exceptions": {
    "prefix": "vmware_host_lockdown_exceptions",
    "description": "Manage Lockdown Mode Exception Users",
    "body": [
      "community.vmware.vmware_host_lockdown_exceptions:",
      "\texception_users: ${1:}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent|set}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_logbundle": {
    "prefix": "vmware_host_logbundle",
    "description": "Fetch logbundle file from ESXi",
    "body": [
      "community.vmware.vmware_host_logbundle:",
      "\tdest: ${1:}",
      "\tesxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#manifests: ${4:['System:Base', 'System:CoreDumps', 'System:EsxImage', 'System:IOFilter', 'System:LoadESX', 'System:Modules', 'System:RDMA', 'System:ResourceGroups', 'System:TPM', 'System:VFlash', 'System:VMTools', 'System:VmiofPlugins', 'System:ntp', 'System:uwstats', 'Fcd:Catalog', 'VirtualMachines:CoreDumps', 'VirtualMachines:VirtualMachineStats', 'VirtualMachines:base', 'VirtualMachines:base', 'VirtualMachines:diskinfo', 'VirtualMachines:logs', 'Storage:FCoE', 'Storage:Multipathing', 'Storage:NAS', 'Storage:VSAN', 'Storage:VSANHealth', 'Storage:VSANIscsiTarget', 'Storage:VSANPerfStats', 'Storage:VSANPerfSvc', 'Storage:VSANTraces', 'Storage:VVOL', 'Storage:base', 'Storage:iodm', 'Storage:iscsi', 'FeatureStateSwitch:FeatureStateSwitch', 'Userworld:HostAgent', 'Userworld:ProcessInformation', 'Configuration:System', 'Logs:System', 'hostProfiles:SystemImageCacheHostProfile', 'hostProfiles:hostProfiles', 'FileSystem:VMFSDiskDump', 'FileSystem:base', 'ActiveDirectory:base', 'CIM:base', 'Hardware:base', 'Hardware:usb', 'Installer:base', 'Network:base', 'Network:dvs', 'Network:lacp', 'Network:nscd', 'Network:tcpip', 'IntegrityChecks:md5sums']}",
      "\t#password: ${5:}",
      "\t#performance_data: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_logbundle_info": {
    "prefix": "vmware_host_logbundle_info",
    "description": "Gathers manifest info for logbundle",
    "body": [
      "community.vmware.vmware_host_logbundle_info:",
      "\tesxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_host_ntp": {
    "prefix": "vmware_host_ntp",
    "description": "Manage NTP server configuration of an ESXi host",
    "body": [
      "community.vmware.vmware_host_ntp:",
      "\tntp_servers: ${1:}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#verbose: ${12:false}"
    ]
  },
  "vmware_host_ntp_info": {
    "prefix": "vmware_host_ntp_info",
    "description": "Gathers info about NTP configuration on an ESXi host",
    "body": [
      "community.vmware.vmware_host_ntp_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_package_info": {
    "prefix": "vmware_host_package_info",
    "description": "Gathers info about available packages on an ESXi host",
    "body": [
      "community.vmware.vmware_host_package_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_passthrough": {
    "prefix": "vmware_host_passthrough",
    "description": "Manage PCI device passthrough settings on host",
    "body": [
      "community.vmware.vmware_host_passthrough:",
      "\tdevices: ${1:}",
      "\t#cluster: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_powermgmt_policy": {
    "prefix": "vmware_host_powermgmt_policy",
    "description": "Manages the Power Management Policy of an ESXI host system",
    "body": [
      "community.vmware.vmware_host_powermgmt_policy:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#policy: ${5:high-performance|#balanced|low-power|custom}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_powerstate": {
    "prefix": "vmware_host_powerstate",
    "description": "Manages power states of host systems in vCenter",
    "body": [
      "community.vmware.vmware_host_powerstate:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#force: ${3:false}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:power-down-to-standby|power-up-from-standby|#shutdown-host|reboot-host}",
      "\t#timeout: ${10:600}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_scanhba": {
    "prefix": "vmware_host_scanhba",
    "description": "Rescan host HBA's and optionally refresh the storage system",
    "body": [
      "community.vmware.vmware_host_scanhba:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#refresh_storage: ${8:false}",
      "\t#rescan_hba: ${9:true}",
      "\t#rescan_vmfs: ${10:false}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_scsidisk_info": {
    "prefix": "vmware_host_scsidisk_info",
    "description": "Gather information about SCSI disk attached to the given ESXi",
    "body": [
      "community.vmware.vmware_host_scsidisk_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_service_info": {
    "prefix": "vmware_host_service_info",
    "description": "Gathers info about an ESXi host's services",
    "body": [
      "community.vmware.vmware_host_service_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_service_manager": {
    "prefix": "vmware_host_service_manager",
    "description": "Manage services on a given ESXi host",
    "body": [
      "community.vmware.vmware_host_service_manager:",
      "\tservice_name: ${1:}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#service_policy: ${9:automatic|off|on}",
      "\t#state: ${10:absent|present|restart|#start|stop|unchanged}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_snmp": {
    "prefix": "vmware_host_snmp",
    "description": "Configures SNMP on an ESXi host system",
    "body": [
      "community.vmware.vmware_host_snmp:",
      "\t#cluster_name: ${1:}",
      "\t#community: ${2:[]}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#hw_source: ${5:#indications|sensors}",
      "\t#log_level: ${6:debug|#info|warning|error}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#send_trap: ${11:false}",
      "\t#snmp_port: ${12:161}",
      "\t#state: ${13:#disabled|enabled|reset}",
      "\t#sys_contact: ${14:}",
      "\t#sys_location: ${15:}",
      "\t#trap_filter: ${16:}",
      "\t#trap_targets: ${17:[]}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "vmware_host_sriov": {
    "prefix": "vmware_host_sriov",
    "description": "Manage SR-IOV settings on host",
    "body": [
      "community.vmware.vmware_host_sriov:",
      "\tnum_virt_func: ${1:}",
      "\tvmnic: ${2:}",
      "\t#cluster_name: ${3:}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#sriov_on: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_ssl_info": {
    "prefix": "vmware_host_ssl_info",
    "description": "Gather info of ESXi host system about SSL",
    "body": [
      "community.vmware.vmware_host_ssl_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_tcpip_stacks": {
    "prefix": "vmware_host_tcpip_stacks",
    "description": "Manage the TCP/IP Stacks configuration of ESXi host",
    "body": [
      "community.vmware.vmware_host_tcpip_stacks:",
      "\tesxi_hostname: ${1:}",
      "\t#default: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#provisioning: ${6:}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#vmotion: ${11:}",
      "\t#vxlan: ${12:}"
    ]
  },
  "vmware_host_user_manager": {
    "prefix": "vmware_host_user_manager",
    "description": "Manage users of ESXi",
    "body": [
      "community.vmware.vmware_host_user_manager:",
      "\tesxi_hostname: ${1:}",
      "\tuser_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#override_user_password: ${4:false}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#user_description: ${10:}",
      "\t#user_password: ${11:}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_host_vmhba_info": {
    "prefix": "vmware_host_vmhba_info",
    "description": "Gathers info about vmhbas available on the given ESXi host",
    "body": [
      "community.vmware.vmware_host_vmhba_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_vmnic_info": {
    "prefix": "vmware_host_vmnic_info",
    "description": "Gathers info about vmnics available on the given ESXi host",
    "body": [
      "community.vmware.vmware_host_vmnic_info:",
      "\t#capabilities: ${1:false}",
      "\t#cluster_name: ${2:}",
      "\t#directpath_io: ${3:false}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#sriov: ${10:false}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_local_role_info": {
    "prefix": "vmware_local_role_info",
    "description": "Gather info about local roles on an ESXi host or vCenter",
    "body": [
      "community.vmware.vmware_local_role_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_local_role_manager": {
    "prefix": "vmware_local_role_manager",
    "description": "Manage local roles on an ESXi host or vCenter",
    "body": [
      "community.vmware.vmware_local_role_manager:",
      "\tlocal_role_name: ${1:}",
      "\t#action: ${2:add|remove|#set}",
      "\t#force_remove: ${3:false}",
      "\t#hostname: ${4:}",
      "\t#local_privilege_ids: ${5:[]}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_local_user_info": {
    "prefix": "vmware_local_user_info",
    "description": "Gather info about users on the given ESXi host",
    "body": [
      "community.vmware.vmware_local_user_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_local_user_manager": {
    "prefix": "vmware_local_user_manager",
    "description": "Manage local users on an ESXi host",
    "body": [
      "community.vmware.vmware_local_user_manager:",
      "\tlocal_user_name: ${1:}",
      "\t#hostname: ${2:}",
      "\t#local_user_description: ${3:}",
      "\t#local_user_password: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_maintenancemode": {
    "prefix": "vmware_maintenancemode",
    "description": "Place a host into maintenance mode",
    "body": [
      "community.vmware.vmware_maintenancemode:",
      "\tesxi_hostname: ${1:}",
      "\t#evacuate: ${2:false}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:0}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#vsan: ${12:ensureObjectAccessibility|evacuateAllData|noAction}"
    ]
  },
  "vmware_migrate_vmk": {
    "prefix": "vmware_migrate_vmk",
    "description": "Migrate a VMK interface from VSS to VDS",
    "body": [
      "community.vmware.vmware_migrate_vmk:",
      "\tcurrent_portgroup_name: ${1:}",
      "\tcurrent_switch_name: ${2:}",
      "\tdevice: ${3:}",
      "\tesxi_hostname: ${4:}",
      "\tmigrate_portgroup_name: ${5:}",
      "\tmigrate_switch_name: ${6:}",
      "\t#hostname: ${7:}",
      "\t#migrate_vlan_id: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_object_custom_attributes_info": {
    "prefix": "vmware_object_custom_attributes_info",
    "description": "Gather custom attributes of an object",
    "body": [
      "community.vmware.vmware_object_custom_attributes_info:",
      "\tobject_type: ${1:Datacenter|Cluster|HostSystem|ResourcePool|Folder|VirtualMachine|DistributedVirtualSwitch|DistributedVirtualPortgroup|Datastore}",
      "\t#hostname: ${2:}",
      "\t#moid: ${3:}",
      "\t#object_name: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_object_rename": {
    "prefix": "vmware_object_rename",
    "description": "Renames VMware objects",
    "body": [
      "community.vmware.vmware_object_rename:",
      "\tnew_name: ${1:}",
      "\tobject_type: ${2:ClusterComputeResource|Cluster|Datacenter|Datastore|Folder|Network|ResourcePool|VM|VirtualMachine}",
      "\t#hostname: ${3:}",
      "\t#object_moid: ${4:}",
      "\t#object_name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#protocol: ${8:http|#https}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_object_role_permission": {
    "prefix": "vmware_object_role_permission",
    "description": "Manage local roles on an ESXi host or vCenter",
    "body": [
      "community.vmware.vmware_object_role_permission:",
      "\tobject_name: ${1:}",
      "\trole: ${2:}",
      "\t#group: ${3:}",
      "\t#hostname: ${4:}",
      "\t#object_type: ${5:#Folder|VirtualMachine|Datacenter|ResourcePool|Datastore|Network|HostSystem|ComputeResource|ClusterComputeResource|DistributedVirtualSwitch|DistributedVirtualPortgroup|StoragePod}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#principal: ${8:}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#recursive: ${11:true}",
      "\t#state: ${12:#present|absent}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_object_role_permission_info": {
    "prefix": "vmware_object_role_permission_info",
    "description": "Gather information about object's permissions",
    "body": [
      "community.vmware.vmware_object_role_permission_info:",
      "\t#hostname: ${1:}",
      "\t#moid: ${2:}",
      "\t#object_name: ${3:}",
      "\t#object_type: ${4:#Folder|VirtualMachine|Datacenter|ResourcePool|Datastore|Network|HostSystem|ComputeResource|ClusterComputeResource|DistributedVirtualSwitch|DistributedVirtualPortgroup|StoragePod}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#principal: ${7:}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_portgroup": {
    "prefix": "vmware_portgroup",
    "description": "Create a VMware portgroup",
    "body": [
      "community.vmware.vmware_portgroup:",
      "\tportgroup: ${1:}",
      "\tswitch: ${2:}",
      "\t#cluster_name: ${3:}",
      "\t#hostname: ${4:}",
      "\t#hosts: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#security: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#teaming: ${12:}",
      "\t#traffic_shaping: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#vlan_id: ${16:0}"
    ]
  },
  "vmware_portgroup_info": {
    "prefix": "vmware_portgroup_info",
    "description": "Gathers info about an ESXi host's Port Group configuration",
    "body": [
      "community.vmware.vmware_portgroup_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#policies: ${5:false}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_recommended_datastore": {
    "prefix": "vmware_recommended_datastore",
    "description": "Returns the recommended datastore from a SDRS-enabled datastore cluster",
    "body": [
      "community.vmware.vmware_recommended_datastore:",
      "\tdatacenter: ${1:}",
      "\tdatastore_cluster: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_resource_pool": {
    "prefix": "vmware_resource_pool",
    "description": "Add/remove resource pools to/from vCenter",
    "body": [
      "community.vmware.vmware_resource_pool:",
      "\tdatacenter: ${1:}",
      "\tresource_pool: ${2:}",
      "\t#cluster: ${3:}",
      "\t#cpu_allocation_shares: ${4:4000}",
      "\t#cpu_expandable_reservations: ${5:true}",
      "\t#cpu_limit: ${6:-1}",
      "\t#cpu_reservation: ${7:0}",
      "\t#cpu_shares: ${8:high|custom|low|#normal}",
      "\t#esxi_hostname: ${9:}",
      "\t#hostname: ${10:}",
      "\t#mem_allocation_shares: ${11:163840}",
      "\t#mem_expandable_reservations: ${12:true}",
      "\t#mem_limit: ${13:-1}",
      "\t#mem_reservation: ${14:0}",
      "\t#mem_shares: ${15:high|custom|low|#normal}",
      "\t#parent_resource_pool: ${16:}",
      "\t#password: ${17:}",
      "\t#port: ${18:443}",
      "\t#proxy_host: ${19:}",
      "\t#proxy_port: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "vmware_resource_pool_info": {
    "prefix": "vmware_resource_pool_info",
    "description": "Gathers info about resource pool information",
    "body": [
      "community.vmware.vmware_resource_pool_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_tag": {
    "prefix": "vmware_tag",
    "description": "Manage VMware tags",
    "body": [
      "community.vmware.vmware_tag:",
      "\ttag_name: ${1:}",
      "\t#category_id: ${2:}",
      "\t#category_name: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#protocol: ${7:http|#https}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#tag_description: ${11:\"\"}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_tag_info": {
    "prefix": "vmware_tag_info",
    "description": "Manage VMware tag info",
    "body": [
      "community.vmware.vmware_tag_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#protocol: ${4:http|#https}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_tag_manager": {
    "prefix": "vmware_tag_manager",
    "description": "Manage association of VMware tags with VMware objects",
    "body": [
      "community.vmware.vmware_tag_manager:",
      "\tobject_type: ${1:VirtualMachine|Datacenter|ClusterComputeResource|HostSystem|DistributedVirtualSwitch|DistributedVirtualPortgroup|Datastore|DatastoreCluster|ResourcePool|Folder}",
      "\ttag_names: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#object_name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#protocol: ${8:http|#https}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#state: ${11:present|absent|#add|remove|set}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_target_canonical_info": {
    "prefix": "vmware_target_canonical_info",
    "description": "Return canonical (NAA) from an ESXi host system",
    "body": [
      "community.vmware.vmware_target_canonical_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#target_id: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_vasa": {
    "prefix": "vmware_vasa",
    "description": "Manage VMware Virtual Volumes storage provider",
    "body": [
      "community.vmware.vmware_vasa:",
      "\tvasa_name: ${1:}",
      "\tvasa_url: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#vasa_certificate: ${11:}",
      "\t#vasa_password: ${12:}",
      "\t#vasa_username: ${13:}"
    ]
  },
  "vmware_vasa_info": {
    "prefix": "vmware_vasa_info",
    "description": "Gather information about vSphere VASA providers.",
    "body": [
      "community.vmware.vmware_vasa_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_vc_infraprofile_info": {
    "prefix": "vmware_vc_infraprofile_info",
    "description": "List and Export VMware vCenter infra profile configs.",
    "body": [
      "community.vmware.vmware_vc_infraprofile_info:",
      "\t#api: ${1:export|import|list|validate}",
      "\t#config_path: ${2:}",
      "\t#decryption_key: ${3:}",
      "\t#description: ${4:}",
      "\t#encryption_key: ${5:}",
      "\t#hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#profiles: ${9:}",
      "\t#protocol: ${10:http|#https}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_vcenter_settings": {
    "prefix": "vmware_vcenter_settings",
    "description": "Configures general settings on a vCenter server",
    "body": [
      "community.vmware.vmware_vcenter_settings:",
      "\t#advanced_settings: ${1:{\\}}",
      "\t#database: ${2:{'max_connections': 50, 'task_cleanup': True, 'task_retention': 30, 'event_cleanup': True, 'event_retention': 30\\}}",
      "\t#hostname: ${3:}",
      "\t#logging_options: ${4:none|error|warning|#info|verbose|trivia}",
      "\t#mail: ${5:{'server': '', 'sender': ''\\}}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#runtime_settings: ${10:}",
      "\t#snmp_receivers: ${11:{'snmp_receiver_1_url': 'localhost', 'snmp_receiver_1_enabled': True, 'snmp_receiver_1_port': 162, 'snmp_receiver_1_community': 'public', 'snmp_receiver_2_url': '', 'snmp_receiver_2_enabled': False, 'snmp_receiver_2_port': 162, 'snmp_receiver_2_community': '', 'snmp_receiver_3_url': '', 'snmp_receiver_3_enabled': False, 'snmp_receiver_3_port': 162, 'snmp_receiver_3_community': '', 'snmp_receiver_4_url': '', 'snmp_receiver_4_enabled': False, 'snmp_receiver_4_port': 162, 'snmp_receiver_4_community': ''\\}}",
      "\t#timeout_settings: ${12:{'normal_operations': 30, 'long_operations': 120\\}}",
      "\t#user_directory: ${13:{'timeout': 60, 'query_limit': True, 'query_limit_size': 5000, 'validation': True, 'validation_period': 1440\\}}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_vcenter_settings_info": {
    "prefix": "vmware_vcenter_settings_info",
    "description": "Gather info vCenter settings",
    "body": [
      "community.vmware.vmware_vcenter_settings_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#properties: ${4:}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#schema: ${7:#summary|vsphere}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_vcenter_statistics": {
    "prefix": "vmware_vcenter_statistics",
    "description": "Configures statistics on a vCenter server",
    "body": [
      "community.vmware.vmware_vcenter_statistics:",
      "\t#hostname: ${1:}",
      "\t#interval_past_day: ${2:}",
      "\t#interval_past_month: ${3:}",
      "\t#interval_past_week: ${4:}",
      "\t#interval_past_year: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_vm_config_option": {
    "prefix": "vmware_vm_config_option",
    "description": "Return supported guest ID list and VM recommended config option for specific guest OS",
    "body": [
      "community.vmware.vmware_vm_config_option:",
      "\t#cluster_name: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#esxi_hostname: ${3:}",
      "\t#get_config_options: ${4:false}",
      "\t#get_guest_os_ids: ${5:false}",
      "\t#get_hardware_versions: ${6:false}",
      "\t#guest_id: ${7:}",
      "\t#hardware_version: ${8:}",
      "\t#hostname: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_vm_host_drs_rule": {
    "prefix": "vmware_vm_host_drs_rule",
    "description": "Creates vm/host group in a given cluster",
    "body": [
      "community.vmware.vmware_vm_host_drs_rule:",
      "\tcluster_name: ${1:}",
      "\tdrs_rule_name: ${2:}",
      "\t#affinity_rule: ${3:true}",
      "\t#datacenter: ${4:}",
      "\t#enabled: ${5:false}",
      "\t#host_group_name: ${6:}",
      "\t#hostname: ${7:}",
      "\t#mandatory: ${8:false}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#vm_group_name: ${16:}"
    ]
  },
  "vmware_vm_info": {
    "prefix": "vmware_vm_info",
    "description": "Return basic info pertaining to a VMware machine guest",
    "body": [
      "community.vmware.vmware_vm_info:",
      "\t#folder: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#show_allocated: ${7:false}",
      "\t#show_attribute: ${8:false}",
      "\t#show_cluster: ${9:true}",
      "\t#show_datacenter: ${10:true}",
      "\t#show_datastore: ${11:true}",
      "\t#show_esxi_hostname: ${12:true}",
      "\t#show_folder: ${13:true}",
      "\t#show_mac_address: ${14:true}",
      "\t#show_net: ${15:true}",
      "\t#show_resource_pool: ${16:true}",
      "\t#show_tag: ${17:false}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:true}",
      "\t#vm_name: ${20:}",
      "\t#vm_type: ${21:#all|vm|template}"
    ]
  },
  "vmware_vm_shell": {
    "prefix": "vmware_vm_shell",
    "description": "Run commands in a VMware guest operating system",
    "body": [
      "community.vmware.vmware_vm_shell:",
      "\tvm_id: ${1:}",
      "\tvm_password: ${2:}",
      "\tvm_shell: ${3:}",
      "\tvm_username: ${4:}",
      "\t#cluster: ${5:}",
      "\t#datacenter: ${6:}",
      "\t#folder: ${7:}",
      "\t#hostname: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#timeout: ${13:3600}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#vm_id_type: ${16:uuid|instance_uuid|dns_name|inventory_path|#vm_name}",
      "\t#vm_shell_args: ${17: }",
      "\t#vm_shell_cwd: ${18:}",
      "\t#vm_shell_env: ${19:}",
      "\t#wait_for_process: ${20:false}"
    ]
  },
  "vmware_vm_storage_policy": {
    "prefix": "vmware_vm_storage_policy",
    "description": "Create vSphere storage policies",
    "body": [
      "community.vmware.vmware_vm_storage_policy:",
      "\tname: ${1:}",
      "\t#description: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#tag_affinity: ${9:true}",
      "\t#tag_category: ${10:}",
      "\t#tag_name: ${11:}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_vm_storage_policy_info": {
    "prefix": "vmware_vm_storage_policy_info",
    "description": "Gather information about vSphere storage profile defined storage policy information.",
    "body": [
      "community.vmware.vmware_vm_storage_policy_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_vm_vm_drs_rule": {
    "prefix": "vmware_vm_vm_drs_rule",
    "description": "Configure VMware DRS Affinity rule for virtual machines in the given cluster",
    "body": [
      "community.vmware.vmware_vm_vm_drs_rule:",
      "\tcluster_name: ${1:}",
      "\tdrs_rule_name: ${2:}",
      "\t#affinity_rule: ${3:true}",
      "\t#enabled: ${4:false}",
      "\t#hostname: ${5:}",
      "\t#mandatory: ${6:false}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}",
      "\t#vms: ${14:}"
    ]
  },
  "vmware_vm_vss_dvs_migrate": {
    "prefix": "vmware_vm_vss_dvs_migrate",
    "description": "Migrates a virtual machine from a standard vswitch to distributed",
    "body": [
      "community.vmware.vmware_vm_vss_dvs_migrate:",
      "\tdvportgroup_name: ${1:}",
      "\tvm_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_vmkernel": {
    "prefix": "vmware_vmkernel",
    "description": "Manages a VMware VMkernel Adapter of an ESXi host.",
    "body": [
      "community.vmware.vmware_vmkernel:",
      "\tesxi_hostname: ${1:}",
      "\tportgroup_name: ${2:}",
      "\t#device: ${3:}",
      "\t#dvswitch_name: ${4:}",
      "\t#enable_ft: ${5:false}",
      "\t#enable_mgmt: ${6:false}",
      "\t#enable_provisioning: ${7:false}",
      "\t#enable_replication: ${8:false}",
      "\t#enable_replication_nfc: ${9:false}",
      "\t#enable_vmotion: ${10:false}",
      "\t#enable_vsan: ${11:false}",
      "\t#hostname: ${12:}",
      "\t#mtu: ${13:1500}",
      "\t#network: ${14:{'type': 'static', 'tcpip_stack': 'default'\\}}",
      "\t#password: ${15:}",
      "\t#port: ${16:443}",
      "\t#proxy_host: ${17:}",
      "\t#proxy_port: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:true}",
      "\t#vswitch_name: ${22:}"
    ]
  },
  "vmware_vmkernel_info": {
    "prefix": "vmware_vmkernel_info",
    "description": "Gathers VMKernel info about an ESXi host",
    "body": [
      "community.vmware.vmware_vmkernel_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_vmotion": {
    "prefix": "vmware_vmotion",
    "description": "Move a virtual machine using vMotion, and/or its vmdks using storage vMotion.",
    "body": [
      "community.vmware.vmware_vmotion:",
      "\t#destination_cluster: ${1:}",
      "\t#destination_datacenter: ${2:}",
      "\t#destination_datastore: ${3:}",
      "\t#destination_datastore_cluster: ${4:}",
      "\t#destination_host: ${5:}",
      "\t#destination_resourcepool: ${6:}",
      "\t#hostname: ${7:}",
      "\t#moid: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#timeout: ${13:3600}",
      "\t#use_instance_uuid: ${14:false}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}",
      "\t#vm_name: ${17:}",
      "\t#vm_uuid: ${18:}"
    ]
  },
  "vmware_vsan_cluster": {
    "prefix": "vmware_vsan_cluster",
    "description": "Configure VSAN clustering on an ESXi host",
    "body": [
      "community.vmware.vmware_vsan_cluster:",
      "\t#cluster_uuid: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_vsan_hcl_db": {
    "prefix": "vmware_vsan_hcl_db",
    "description": "Manages the vSAN Hardware Compatibility List (HCL) database",
    "body": [
      "community.vmware.vmware_vsan_hcl_db:",
      "\tsource: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_vsan_health_info": {
    "prefix": "vmware_vsan_health_info",
    "description": "Gather information about a VMware vSAN cluster's health",
    "body": [
      "community.vmware.vmware_vsan_health_info:",
      "\tcluster_name: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#fetch_from_cache: ${3:false}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_vsan_release_catalog": {
    "prefix": "vmware_vsan_release_catalog",
    "description": "Uploads the vSAN Release Catalog",
    "body": [
      "community.vmware.vmware_vsan_release_catalog:",
      "\tsource: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_vspan_session": {
    "prefix": "vmware_vspan_session",
    "description": "Create or remove a Port Mirroring session.",
    "body": [
      "community.vmware.vmware_vspan_session:",
      "\tname: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tswitch: ${3:}",
      "\t#description: ${4:}",
      "\t#destination_port: ${5:}",
      "\t#destination_vm: ${6:}",
      "\t#enabled: ${7:true}",
      "\t#encapsulation_vlan_id: ${8:}",
      "\t#hostname: ${9:}",
      "\t#mirrored_packet_length: ${10:}",
      "\t#normal_traffic_allowed: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#proxy_host: ${14:}",
      "\t#proxy_port: ${15:}",
      "\t#sampling_rate: ${16:}",
      "\t#session_type: ${17:encapsulatedRemoteMirrorSource|remoteMirrorDest|remoteMirrorSource|#dvPortMirror}",
      "\t#source_port_received: ${18:}",
      "\t#source_port_transmitted: ${19:}",
      "\t#source_vm_received: ${20:}",
      "\t#source_vm_transmitted: ${21:}",
      "\t#strip_original_vlan: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "vmware_vswitch": {
    "prefix": "vmware_vswitch",
    "description": "Manage a VMware Standard Switch to an ESXi host.",
    "body": [
      "community.vmware.vmware_vswitch:",
      "\tswitch: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#mtu: ${4:1500}",
      "\t#nics: ${5:[]}",
      "\t#number_of_ports: ${6:128}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#security: ${11:}",
      "\t#state: ${12:absent|#present}",
      "\t#teaming: ${13:}",
      "\t#traffic_shaping: ${14:}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_vswitch_info": {
    "prefix": "vmware_vswitch_info",
    "description": "Gathers info about an ESXi host's vswitch configurations",
    "body": [
      "community.vmware.vmware_vswitch_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#policies: ${5:false}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vsan_health_silent_checks": {
    "prefix": "vsan_health_silent_checks",
    "description": "Silence vSAN health checks",
    "body": [
      "community.vmware.vsan_health_silent_checks:",
      "\tcluster_name: ${1:}",
      "\t#checks: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vsphere_copy": {
    "prefix": "vsphere_copy",
    "description": "Copy a file to a VMware datastore",
    "body": [
      "community.vmware.vsphere_copy:",
      "\tdatastore: ${1:}",
      "\tpath: ${2:}",
      "\tsrc: ${3:}",
      "\t#datacenter: ${4:}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#timeout: ${10:10}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vsphere_file": {
    "prefix": "vsphere_file",
    "description": "Manage files on a vCenter datastore",
    "body": [
      "community.vmware.vsphere_file:",
      "\tdatacenter: ${1:}",
      "\tdatastore: ${2:}",
      "\thost: ${3:}",
      "\tpassword: ${4:}",
      "\tpath: ${5:}",
      "\tusername: ${6:}",
      "\t#state: ${7:absent|directory|#file|touch}",
      "\t#timeout: ${8:10}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "psexec": {
    "prefix": "psexec",
    "description": "Runs commands on a remote Windows host based on the PsExec model",
    "body": [
      "community.windows.psexec:",
      "\texecutable: ${1:}",
      "\thostname: ${2:}",
      "\t#arguments: ${3:}",
      "\t#asynchronous: ${4:false}",
      "\t#connection_password: ${5:}",
      "\t#connection_timeout: ${6:60}",
      "\t#connection_username: ${7:}",
      "\t#encrypt: ${8:true}",
      "\t#integrity_level: ${9:limited|#default|elevated}",
      "\t#interactive: ${10:false}",
      "\t#interactive_session: ${11:0}",
      "\t#load_profile: ${12:true}",
      "\t#port: ${13:445}",
      "\t#priority: ${14:above_normal|below_normal|high|idle|#normal|realtime}",
      "\t#process_password: ${15:}",
      "\t#process_timeout: ${16:0}",
      "\t#process_username: ${17:}",
      "\t#show_ui_on_logon_screen: ${18:false}",
      "\t#stdin: ${19:}",
      "\t#working_directory: ${20:\"C:\\Windows\\System32\"}"
    ]
  },
  "win_audit_policy_system": {
    "prefix": "win_audit_policy_system",
    "description": "Used to make changes to the system wide Audit Policy",
    "body": [
      "community.windows.win_audit_policy_system:",
      "\taudit_type: ${1:failure|none|success}",
      "\t#category: ${2:}",
      "\t#subcategory: ${3:}"
    ]
  },
  "win_audit_rule": {
    "prefix": "win_audit_rule",
    "description": "Adds an audit rule to files, folders, or registry keys",
    "body": [
      "community.windows.win_audit_rule:",
      "\taudit_flags: ${1:Failure|Success}",
      "\tpath: ${2:}",
      "\trights: ${3:}",
      "\tuser: ${4:}",
      "\t#inheritance_flags: ${5:ContainerInherit|ObjectInherit}",
      "\t#propagation_flags: ${6:#None|InherityOnly|NoPropagateInherit}",
      "\t#state: ${7:absent|#present}"
    ]
  },
  "win_auto_logon": {
    "prefix": "win_auto_logon",
    "description": "Adds or Sets auto logon registry keys.",
    "body": [
      "community.windows.win_auto_logon:",
      "\t#logon_count: ${1:}",
      "\t#password: ${2:}",
      "\t#state: ${3:absent|#present}",
      "\t#username: ${4:}"
    ]
  },
  "win_certificate_info": {
    "prefix": "win_certificate_info",
    "description": "Get information on certificates from a Windows Certificate Store",
    "body": [
      "community.windows.win_certificate_info:",
      "\t#store_location: ${1:CurrentUser|#LocalMachine}",
      "\t#store_name: ${2:My}",
      "\t#thumbprint: ${3:}"
    ]
  },
  "win_computer_description": {
    "prefix": "win_computer_description",
    "description": "Set windows description, owner and organization",
    "body": [
      "community.windows.win_computer_description:",
      "\t#description: ${1:}",
      "\t#organization: ${2:}",
      "\t#owner: ${3:}"
    ]
  },
  "win_credential": {
    "prefix": "win_credential",
    "description": "Manages Windows Credentials in the Credential Manager",
    "body": [
      "community.windows.win_credential:",
      "\tname: ${1:}",
      "\ttype: ${2:domain_certificate|domain_password|generic_certificate|generic_password}",
      "\t#alias: ${3:}",
      "\t#attributes: ${4:}",
      "\t#comment: ${5:}",
      "\t#persistence: ${6:enterprise|#local}",
      "\t#secret: ${7:}",
      "\t#secret_format: ${8:base64|#text}",
      "\t#state: ${9:absent|#present}",
      "\t#update_secret: ${10:#always|on_create}",
      "\t#username: ${11:}"
    ]
  },
  "win_data_deduplication": {
    "prefix": "win_data_deduplication",
    "description": "Module to enable Data Deduplication on a volume.",
    "body": [
      "community.windows.win_data_deduplication:",
      "\tdrive_letter: ${1:}",
      "\t#settings: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "win_defrag": {
    "prefix": "win_defrag",
    "description": "Consolidate fragmented files on local volumes",
    "body": [
      "community.windows.win_defrag:",
      "\t#exclude_volumes: ${1:}",
      "\t#freespace_consolidation: ${2:false}",
      "\t#include_volumes: ${3:}",
      "\t#parallel: ${4:false}",
      "\t#priority: ${5:#low|normal}"
    ]
  },
  "win_dhcp_lease": {
    "prefix": "win_dhcp_lease",
    "description": "Manage Windows Server DHCP Leases",
    "body": [
      "community.windows.win_dhcp_lease:",
      "\t#description: ${1:}",
      "\t#dns_hostname: ${2:}",
      "\t#dns_regtype: ${3:#aptr|a|noreg}",
      "\t#duration: ${4:}",
      "\t#ip: ${5:}",
      "\t#mac: ${6:}",
      "\t#reservation_name: ${7:}",
      "\t#scope_id: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#type: ${10:#reservation|lease}"
    ]
  },
  "win_disk_facts": {
    "prefix": "win_disk_facts",
    "description": "Show the attached disks and disk information of the target host",
    "body": [
      "community.windows.win_disk_facts:",
      "\t#filter: ${1:['#physical_disk', '#virtual_disk', '#win32_disk_drive', '#partitions', '#volumes']}"
    ]
  },
  "win_disk_image": {
    "prefix": "win_disk_image",
    "description": "Manage ISO/VHD/VHDX mounts on Windows hosts",
    "body": [
      "community.windows.win_disk_image:",
      "\timage_path: ${1:}",
      "\t#state: ${2:absent|#present}"
    ]
  },
  "win_dns_record": {
    "prefix": "win_dns_record",
    "description": "Manage Windows Server DNS records",
    "body": [
      "community.windows.win_dns_record:",
      "\tname: ${1:}",
      "\ttype: ${2:A|AAAA|CNAME|DHCID|NS|PTR|SRV|TXT}",
      "\tzone: ${3:}",
      "\t#aging: ${4:false}",
      "\t#computer_name: ${5:}",
      "\t#port: ${6:}",
      "\t#priority: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#ttl: ${9:3600}",
      "\t#value: ${10:[]}",
      "\t#weight: ${11:}",
      "\t#zone_scope: ${12:}"
    ]
  },
  "win_dns_zone": {
    "prefix": "win_dns_zone",
    "description": "Manage Windows Server DNS Zones",
    "body": [
      "community.windows.win_dns_zone:",
      "\tname: ${1:}",
      "\t#dns_servers: ${2:}",
      "\t#dynamic_update: ${3:secure|none|nonsecureandsecure}",
      "\t#forwarder_timeout: ${4:}",
      "\t#replication: ${5:forest|domain|legacy|none}",
      "\t#state: ${6:#present|absent}",
      "\t#type: ${7:primary|secondary|stub|forwarder}"
    ]
  },
  "win_dotnet_ngen": {
    "prefix": "win_dotnet_ngen",
    "description": "Runs ngen to recompile DLLs after .NET  updates",
    "body": "community.windows.win_dotnet_ngen:"
  },
  "win_eventlog": {
    "prefix": "win_eventlog",
    "description": "Manage Windows event logs",
    "body": [
      "community.windows.win_eventlog:",
      "\tname: ${1:}",
      "\t#category_file: ${2:}",
      "\t#maximum_size: ${3:}",
      "\t#message_file: ${4:}",
      "\t#overflow_action: ${5:DoNotOverwrite|OverwriteAsNeeded|OverwriteOlder}",
      "\t#parameter_file: ${6:}",
      "\t#retention_days: ${7:}",
      "\t#sources: ${8:}",
      "\t#state: ${9:absent|clear|#present}"
    ]
  },
  "win_eventlog_entry": {
    "prefix": "win_eventlog_entry",
    "description": "Write entries to Windows event logs",
    "body": [
      "community.windows.win_eventlog_entry:",
      "\tevent_id: ${1:}",
      "\tlog: ${2:}",
      "\tmessage: ${3:}",
      "\tsource: ${4:}",
      "\t#category: ${5:}",
      "\t#entry_type: ${6:Error|FailureAudit|Information|SuccessAudit|Warning}",
      "\t#raw_data: ${7:}"
    ]
  },
  "win_feature_info": {
    "prefix": "win_feature_info",
    "description": "Gather information about Windows features",
    "body": [
      "community.windows.win_feature_info:",
      "\t#name: ${1:*}"
    ]
  },
  "win_file_compression": {
    "prefix": "win_file_compression",
    "description": "Alters the compression of files and directories on NTFS partitions.",
    "body": [
      "community.windows.win_file_compression:",
      "\tpath: ${1:}",
      "\t#force: ${2:true}",
      "\t#recurse: ${3:false}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_file_version": {
    "prefix": "win_file_version",
    "description": "Get DLL or EXE file build version",
    "body": [
      "community.windows.win_file_version:",
      "\tpath: ${1:}"
    ]
  },
  "win_firewall": {
    "prefix": "win_firewall",
    "description": "Enable or disable the Windows Firewall",
    "body": [
      "community.windows.win_firewall:",
      "\t#inbound_action: ${1:allow|block|not_configured}",
      "\t#outbound_action: ${2:allow|block|not_configured}",
      "\t#profiles: ${3:['#Domain', '#Private', '#Public']}",
      "\t#state: ${4:disabled|enabled}"
    ]
  },
  "win_firewall_rule": {
    "prefix": "win_firewall_rule",
    "description": "Windows firewall automation",
    "body": [
      "community.windows.win_firewall_rule:",
      "\t#action: ${1:allow|block}",
      "\t#description: ${2:}",
      "\t#direction: ${3:in|out}",
      "\t#enabled: ${4:}",
      "\t#group: ${5:}",
      "\t#icmp_type_code: ${6:}",
      "\t#localip: ${7:}",
      "\t#localport: ${8:}",
      "\t#name: ${9:}",
      "\t#profiles: ${10:}",
      "\t#program: ${11:}",
      "\t#protocol: ${12:}",
      "\t#remoteip: ${13:}",
      "\t#remoteport: ${14:}",
      "\t#service: ${15:}",
      "\t#state: ${16:absent|#present}"
    ]
  },
  "win_format": {
    "prefix": "win_format",
    "description": "Formats an existing volume or a new volume on an existing partition on Windows",
    "body": [
      "community.windows.win_format:",
      "\t#allocation_unit_size: ${1:}",
      "\t#compress: ${2:}",
      "\t#drive_letter: ${3:}",
      "\t#file_system: ${4:ntfs|refs|exfat|fat32|fat}",
      "\t#force: ${5:false}",
      "\t#full: ${6:false}",
      "\t#integrity_streams: ${7:}",
      "\t#label: ${8:}",
      "\t#large_frs: ${9:}",
      "\t#new_label: ${10:}",
      "\t#path: ${11:}"
    ]
  },
  "win_hosts": {
    "prefix": "win_hosts",
    "description": "Manages hosts file entries on Windows.",
    "body": [
      "community.windows.win_hosts:",
      "\t#action: ${1:add|remove|#set}",
      "\t#aliases: ${2:}",
      "\t#canonical_name: ${3:}",
      "\t#ip_address: ${4:}",
      "\t#state: ${5:absent|#present}"
    ]
  },
  "win_hotfix": {
    "prefix": "win_hotfix",
    "description": "Install and uninstalls Windows hotfixes",
    "body": [
      "community.windows.win_hotfix:",
      "\t#hotfix_identifier: ${1:}",
      "\t#hotfix_kb: ${2:}",
      "\t#source: ${3:}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_http_proxy": {
    "prefix": "win_http_proxy",
    "description": "Manages proxy settings for WinHTTP",
    "body": [
      "community.windows.win_http_proxy:",
      "\t#bypass: ${1:}",
      "\t#proxy: ${2:}",
      "\t#source: ${3:ie}"
    ]
  },
  "win_iis_virtualdirectory": {
    "prefix": "win_iis_virtualdirectory",
    "description": "Configures a virtual directory in IIS",
    "body": [
      "community.windows.win_iis_virtualdirectory:",
      "\tname: ${1:}",
      "\tsite: ${2:}",
      "\t#application: ${3:}",
      "\t#connect_as: ${4:pass_through|specific_user}",
      "\t#password: ${5:}",
      "\t#physical_path: ${6:}",
      "\t#state: ${7:absent|#present}",
      "\t#username: ${8:}"
    ]
  },
  "win_iis_webapplication": {
    "prefix": "win_iis_webapplication",
    "description": "Configures IIS web applications",
    "body": [
      "community.windows.win_iis_webapplication:",
      "\tname: ${1:}",
      "\tsite: ${2:}",
      "\t#application_pool: ${3:}",
      "\t#connect_as: ${4:pass_through|specific_user}",
      "\t#password: ${5:}",
      "\t#physical_path: ${6:}",
      "\t#state: ${7:absent|#present}",
      "\t#username: ${8:}"
    ]
  },
  "win_iis_webapppool": {
    "prefix": "win_iis_webapppool",
    "description": "Configure IIS Web Application Pools",
    "body": [
      "community.windows.win_iis_webapppool:",
      "\tname: ${1:}",
      "\t#attributes: ${2:}",
      "\t#state: ${3:absent|#present|restarted|started|stopped}"
    ]
  },
  "win_iis_webbinding": {
    "prefix": "win_iis_webbinding",
    "description": "Configures a IIS Web site binding",
    "body": [
      "community.windows.win_iis_webbinding:",
      "\tname: ${1:}",
      "\t#certificate_hash: ${2:}",
      "\t#certificate_store_name: ${3:my}",
      "\t#host_header: ${4:}",
      "\t#ip: ${5:*}",
      "\t#port: ${6:80}",
      "\t#protocol: ${7:http}",
      "\t#ssl_flags: ${8:}",
      "\t#state: ${9:absent|#present}"
    ]
  },
  "win_iis_website": {
    "prefix": "win_iis_website",
    "description": "Configures a IIS Web site",
    "body": [
      "community.windows.win_iis_website:",
      "\tname: ${1:}",
      "\t#application_pool: ${2:}",
      "\t#hostname: ${3:}",
      "\t#ip: ${4:}",
      "\t#parameters: ${5:}",
      "\t#physical_path: ${6:}",
      "\t#port: ${7:}",
      "\t#site_id: ${8:}",
      "\t#state: ${9:absent|started|stopped|restarted}"
    ]
  },
  "win_inet_proxy": {
    "prefix": "win_inet_proxy",
    "description": "Manages proxy settings for WinINet and Internet Explorer",
    "body": [
      "community.windows.win_inet_proxy:",
      "\t#auto_config_url: ${1:}",
      "\t#auto_detect: ${2:true}",
      "\t#bypass: ${3:}",
      "\t#connection: ${4:}",
      "\t#proxy: ${5:}"
    ]
  },
  "win_initialize_disk": {
    "prefix": "win_initialize_disk",
    "description": "Initializes disks on Windows Server",
    "body": [
      "community.windows.win_initialize_disk:",
      "\t#disk_number: ${1:}",
      "\t#force: ${2:false}",
      "\t#online: ${3:true}",
      "\t#path: ${4:}",
      "\t#style: ${5:#gpt|mbr}",
      "\t#uniqueid: ${6:}"
    ]
  },
  "win_lineinfile": {
    "prefix": "win_lineinfile",
    "description": "Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression",
    "body": [
      "community.windows.win_lineinfile:",
      "\tpath: ${1:}",
      "\t#backrefs: ${2:false}",
      "\t#backup: ${3:false}",
      "\t#create: ${4:false}",
      "\t#encoding: ${5:auto}",
      "\t#insertafter: ${6:#EOF|*regex*}",
      "\t#insertbefore: ${7:BOF|*regex*}",
      "\t#line: ${8:}",
      "\t#newline: ${9:unix|#windows}",
      "\t#regex: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#validate: ${12:}"
    ]
  },
  "win_listen_ports_facts": {
    "prefix": "win_listen_ports_facts",
    "description": "Recopilates the facts of the listening ports of the machine",
    "body": [
      "community.windows.win_listen_ports_facts:",
      "\t#date_format: ${1:%c}",
      "\t#tcp_filter: ${2:['Listen']}"
    ]
  },
  "win_mapped_drive": {
    "prefix": "win_mapped_drive",
    "description": "Map network drives for users",
    "body": [
      "community.windows.win_mapped_drive:",
      "\tletter: ${1:}",
      "\t#password: ${2:}",
      "\t#path: ${3:}",
      "\t#state: ${4:absent|#present}",
      "\t#username: ${5:}"
    ]
  },
  "win_msg": {
    "prefix": "win_msg",
    "description": "Sends a message to logged in users on Windows hosts",
    "body": [
      "community.windows.win_msg:",
      "\t#display_seconds: ${1:10}",
      "\t#msg: ${2:Hello world!}",
      "\t#to: ${3:*}",
      "\t#wait: ${4:false}"
    ]
  },
  "win_net_adapter_feature": {
    "prefix": "win_net_adapter_feature",
    "description": "Enable or disable certain network adapters.",
    "body": [
      "community.windows.win_net_adapter_feature:",
      "\tcomponent_id: ${1:}",
      "\tinterface: ${2:}",
      "\t#state: ${3:#enabled|disabled}"
    ]
  },
  "win_netbios": {
    "prefix": "win_netbios",
    "description": "Manage NetBIOS over TCP/IP settings on Windows.",
    "body": [
      "community.windows.win_netbios:",
      "\tstate: ${1:enabled|disabled|default}",
      "\t#adapter_names: ${2:}"
    ]
  },
  "win_nssm": {
    "prefix": "win_nssm",
    "description": "Install a service using NSSM",
    "body": [
      "community.windows.win_nssm:",
      "\tname: ${1:}",
      "\t#app_environment: ${2:}",
      "\t#app_rotate_bytes: ${3:104858}",
      "\t#app_rotate_online: ${4:#0|1}",
      "\t#app_stop_method_console: ${5:}",
      "\t#app_stop_method_skip: ${6:1|2|3|4|5|6|7|8|9|10|11|12|13|14|15}",
      "\t#application: ${7:}",
      "\t#arguments: ${8:}",
      "\t#dependencies: ${9:}",
      "\t#description: ${10:}",
      "\t#display_name: ${11:}",
      "\t#executable: ${12:nssm.exe}",
      "\t#password: ${13:}",
      "\t#start_mode: ${14:#auto|delayed|disabled|manual}",
      "\t#state: ${15:absent|#present|started|stopped|restarted}",
      "\t#stderr_file: ${16:}",
      "\t#stdout_file: ${17:}",
      "\t#username: ${18:}",
      "\t#working_directory: ${19:}"
    ]
  },
  "win_pagefile": {
    "prefix": "win_pagefile",
    "description": "Query or change pagefile configuration",
    "body": [
      "community.windows.win_pagefile:",
      "\t#automatic: ${1:}",
      "\t#drive: ${2:}",
      "\t#initial_size: ${3:}",
      "\t#maximum_size: ${4:}",
      "\t#override: ${5:true}",
      "\t#remove_all: ${6:false}",
      "\t#state: ${7:absent|present|#query}",
      "\t#system_managed: ${8:false}",
      "\t#test_path: ${9:true}"
    ]
  },
  "win_partition": {
    "prefix": "win_partition",
    "description": "Creates, changes and removes partitions on Windows Server",
    "body": [
      "community.windows.win_partition:",
      "\t#active: ${1:}",
      "\t#disk_number: ${2:}",
      "\t#drive_letter: ${3:}",
      "\t#gpt_type: ${4:system_partition|microsoft_reserved|basic_data|microsoft_recovery}",
      "\t#hidden: ${5:}",
      "\t#mbr_type: ${6:fat12|fat16|extended|huge|ifs|fat32}",
      "\t#offline: ${7:}",
      "\t#partition_number: ${8:}",
      "\t#partition_size: ${9:}",
      "\t#read_only: ${10:}",
      "\t#state: ${11:absent|#present}"
    ]
  },
  "win_pester": {
    "prefix": "win_pester",
    "description": "Run Pester tests on Windows hosts",
    "body": [
      "community.windows.win_pester:",
      "\tpath: ${1:}",
      "\t#output_file: ${2:}",
      "\t#output_format: ${3:NunitXML}",
      "\t#tags: ${4:}",
      "\t#test_parameters: ${5:}",
      "\t#version: ${6:}"
    ]
  },
  "win_power_plan": {
    "prefix": "win_power_plan",
    "description": "Changes the power plan of a Windows system",
    "body": [
      "community.windows.win_power_plan:",
      "\t#guid: ${1:}",
      "\t#name: ${2:}"
    ]
  },
  "win_product_facts": {
    "prefix": "win_product_facts",
    "description": "Provides Windows product and license information",
    "body": "community.windows.win_product_facts:"
  },
  "win_psexec": {
    "prefix": "win_psexec",
    "description": "Runs commands (remotely) as another (privileged) user",
    "body": [
      "community.windows.win_psexec:",
      "\tcommand: ${1:}",
      "\t#chdir: ${2:}",
      "\t#elevated: ${3:false}",
      "\t#executable: ${4:psexec.exe}",
      "\t#hostnames: ${5:}",
      "\t#interactive: ${6:false}",
      "\t#limited: ${7:false}",
      "\t#nobanner: ${8:false}",
      "\t#noprofile: ${9:false}",
      "\t#password: ${10:}",
      "\t#priority: ${11:abovenormal|background|belownormal|high|low|realtime}",
      "\t#session: ${12:}",
      "\t#system: ${13:false}",
      "\t#timeout: ${14:}",
      "\t#username: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "win_psmodule": {
    "prefix": "win_psmodule",
    "description": "Adds or removes a Windows PowerShell module",
    "body": [
      "community.windows.win_psmodule:",
      "\tname: ${1:}",
      "\t#accept_license: ${2:false}",
      "\t#allow_clobber: ${3:false}",
      "\t#allow_prerelease: ${4:false}",
      "\t#force: ${5:false}",
      "\t#maximum_version: ${6:}",
      "\t#minimum_version: ${7:}",
      "\t#password: ${8:}",
      "\t#repository: ${9:}",
      "\t#required_version: ${10:}",
      "\t#skip_publisher_check: ${11:false}",
      "\t#state: ${12:absent|latest|#present}",
      "\t#username: ${13:}"
    ]
  },
  "win_psmodule_info": {
    "prefix": "win_psmodule_info",
    "description": "Gather information about PowerShell Modules",
    "body": [
      "community.windows.win_psmodule_info:",
      "\t#name: ${1:*}",
      "\t#repository: ${2:}"
    ]
  },
  "win_psrepository": {
    "prefix": "win_psrepository",
    "description": "Adds, removes or updates a Windows PowerShell repository.",
    "body": [
      "community.windows.win_psrepository:",
      "\tname: ${1:}",
      "\t#force: ${2:false}",
      "\t#installation_policy: ${3:trusted|untrusted}",
      "\t#password: ${4:}",
      "\t#proxy: ${5:}",
      "\t#publish_location: ${6:}",
      "\t#script_publish_location: ${7:}",
      "\t#script_source_location: ${8:}",
      "\t#source_location: ${9:}",
      "\t#state: ${10:absent|#present}",
      "\t#username: ${11:}"
    ]
  },
  "win_psrepository_copy": {
    "prefix": "win_psrepository_copy",
    "description": "Copies registered PSRepositories to other user profiles",
    "body": [
      "community.windows.win_psrepository_copy:",
      "\t#exclude: ${1:}",
      "\t#exclude_profiles: ${2:['systemprofile', 'LocalService', 'NetworkService']}",
      "\t#name: ${3:['*']}",
      "\t#profiles: ${4:['*']}",
      "\t#source: ${5:\"%LOCALAPPDATA%\\Microsoft\\Windows\\PowerShell\\PowerShellGet\\PSRepositories.xml\"}"
    ]
  },
  "win_psrepository_info": {
    "prefix": "win_psrepository_info",
    "description": "Gather information about PSRepositories",
    "body": [
      "community.windows.win_psrepository_info:",
      "\t#name: ${1:*}"
    ]
  },
  "win_psscript": {
    "prefix": "win_psscript",
    "description": "Install and manage PowerShell scripts from a PSRepository",
    "body": [
      "community.windows.win_psscript:",
      "\tname: ${1:}",
      "\t#allow_prerelease: ${2:false}",
      "\t#maximum_version: ${3:}",
      "\t#minimum_version: ${4:}",
      "\t#repository: ${5:}",
      "\t#required_version: ${6:}",
      "\t#scope: ${7:current_user|#all_users}",
      "\t#source_password: ${8:}",
      "\t#source_username: ${9:}",
      "\t#state: ${10:#present|absent|latest}"
    ]
  },
  "win_psscript_info": {
    "prefix": "win_psscript_info",
    "description": "Gather information about installed PowerShell Scripts",
    "body": [
      "community.windows.win_psscript_info:",
      "\t#name: ${1:*}",
      "\t#repository: ${2:}"
    ]
  },
  "win_pssession_configuration": {
    "prefix": "win_pssession_configuration",
    "description": "Manage PSSession Configurations",
    "body": [
      "community.windows.win_pssession_configuration:",
      "\tname: ${1:}",
      "\t#access_mode: ${2:disabled|local|remote}",
      "\t#alias_definitions: ${3:}",
      "\t#assemblies_to_load: ${4:}",
      "\t#async_poll: ${5:1}",
      "\t#async_timeout: ${6:300}",
      "\t#author: ${7:}",
      "\t#company_name: ${8:}",
      "\t#copyright: ${9:}",
      "\t#description: ${10:}",
      "\t#environment_variables: ${11:}",
      "\t#execution_policy: ${12:default|remote_signed|restricted|undefined|unrestricted}",
      "\t#formats_to_process: ${13:}",
      "\t#function_definitions: ${14:}",
      "\t#group_managed_service_account: ${15:}",
      "\t#guid: ${16:}",
      "\t#language_mode: ${17:no_language|restricted_language|constrained_language|full_language}",
      "\t#lenient_config_fields: ${18:['guid', 'author', 'company_name', 'copyright', 'description']}",
      "\t#maximum_received_data_size_per_command_mb: ${19:}",
      "\t#maximum_received_object_size_mb: ${20:}",
      "\t#modules_to_import: ${21:}",
      "\t#mount_user_drive: ${22:}",
      "\t#powershell_version: ${23:}",
      "\t#processor_architecure: ${24:amd64|x86}",
      "\t#required_groups: ${25:}",
      "\t#role_definitions: ${26:}",
      "\t#run_as_credential_password: ${27:}",
      "\t#run_as_credential_username: ${28:}",
      "\t#run_as_virtual_account: ${29:}",
      "\t#run_as_virtual_account_groups: ${30:}",
      "\t#schema_version: ${31:}",
      "\t#scripts_to_process: ${32:}",
      "\t#security_descriptor_sddl: ${33:}",
      "\t#session_type: ${34:default|empty|restricted_remote_server}",
      "\t#startup_script: ${35:}",
      "\t#state: ${36:#present|absent}",
      "\t#thread_apartment_state: ${37:mta|sta}",
      "\t#thread_options: ${38:default|reuse_thread|use_current_thread|use_new_thread}",
      "\t#transcript_directory: ${39:}",
      "\t#types_to_process: ${40:}",
      "\t#use_shared_process: ${41:}",
      "\t#user_drive_maximum_size: ${42:}",
      "\t#variable_definitions: ${43:}",
      "\t#visible_aliases: ${44:}",
      "\t#visible_cmdlets: ${45:}",
      "\t#visible_external_commands: ${46:}",
      "\t#visible_functions: ${47:}"
    ]
  },
  "win_rabbitmq_plugin": {
    "prefix": "win_rabbitmq_plugin",
    "description": "Manage RabbitMQ plugins",
    "body": [
      "community.windows.win_rabbitmq_plugin:",
      "\tnames: ${1:}",
      "\t#new_only: ${2:false}",
      "\t#prefix: ${3:}",
      "\t#state: ${4:disabled|#enabled}"
    ]
  },
  "win_rds_cap": {
    "prefix": "win_rds_cap",
    "description": "Manage Connection Authorization Policies (CAP) on a Remote Desktop Gateway server",
    "body": [
      "community.windows.win_rds_cap:",
      "\tname: ${1:}",
      "\t#allow_only_sdrts_servers: ${2:}",
      "\t#auth_method: ${3:both|none|password|smartcard}",
      "\t#computer_groups: ${4:}",
      "\t#idle_timeout: ${5:}",
      "\t#order: ${6:}",
      "\t#redirect_clipboard: ${7:}",
      "\t#redirect_drives: ${8:}",
      "\t#redirect_pnp: ${9:}",
      "\t#redirect_printers: ${10:}",
      "\t#redirect_serial: ${11:}",
      "\t#session_timeout: ${12:}",
      "\t#session_timeout_action: ${13:#disconnect|reauth}",
      "\t#state: ${14:absent|enabled|disabled|#present}",
      "\t#user_groups: ${15:}"
    ]
  },
  "win_rds_rap": {
    "prefix": "win_rds_rap",
    "description": "Manage Resource Authorization Policies (RAP) on a Remote Desktop Gateway server",
    "body": [
      "community.windows.win_rds_rap:",
      "\tname: ${1:}",
      "\t#allowed_ports: ${2:}",
      "\t#computer_group: ${3:}",
      "\t#computer_group_type: ${4:rdg_group|ad_network_resource_group|allow_any}",
      "\t#description: ${5:}",
      "\t#state: ${6:absent|disabled|enabled|#present}",
      "\t#user_groups: ${7:}"
    ]
  },
  "win_rds_settings": {
    "prefix": "win_rds_settings",
    "description": "Manage main settings of a Remote Desktop Gateway server",
    "body": [
      "community.windows.win_rds_settings:",
      "\t#certificate_hash: ${1:}",
      "\t#enable_only_messaging_capable_clients: ${2:}",
      "\t#max_connections: ${3:}",
      "\t#ssl_bridging: ${4:https_http|https_https|none}"
    ]
  },
  "win_region": {
    "prefix": "win_region",
    "description": "Set the region and format settings",
    "body": [
      "community.windows.win_region:",
      "\t#copy_settings: ${1:false}",
      "\t#format: ${2:}",
      "\t#location: ${3:}",
      "\t#unicode_language: ${4:}"
    ]
  },
  "win_regmerge": {
    "prefix": "win_regmerge",
    "description": "Merges the contents of a registry file into the Windows registry",
    "body": [
      "community.windows.win_regmerge:",
      "\tpath: ${1:}",
      "\t#compare_key: ${2:}"
    ]
  },
  "win_robocopy": {
    "prefix": "win_robocopy",
    "description": "Synchronizes the contents of two directories using Robocopy",
    "body": [
      "community.windows.win_robocopy:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#flags: ${3:}",
      "\t#purge: ${4:false}",
      "\t#recurse: ${5:false}"
    ]
  },
  "win_route": {
    "prefix": "win_route",
    "description": "Add or remove a static route",
    "body": [
      "community.windows.win_route:",
      "\tdestination: ${1:}",
      "\t#gateway: ${2:}",
      "\t#metric: ${3:1}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_say": {
    "prefix": "win_say",
    "description": "Text to speech module for Windows to speak messages and optionally play sounds",
    "body": [
      "community.windows.win_say:",
      "\t#end_sound_path: ${1:}",
      "\t#msg: ${2:}",
      "\t#msg_file: ${3:}",
      "\t#speech_speed: ${4:0}",
      "\t#start_sound_path: ${5:}",
      "\t#voice: ${6:}"
    ]
  },
  "win_scheduled_task": {
    "prefix": "win_scheduled_task",
    "description": "Manage scheduled tasks",
    "body": [
      "community.windows.win_scheduled_task:",
      "\tname: ${1:}",
      "\t#actions: ${2:}",
      "\t#allow_demand_start: ${3:}",
      "\t#allow_hard_terminate: ${4:}",
      "\t#author: ${5:}",
      "\t#compatibility: ${6:0|1|2|3|4}",
      "\t#date: ${7:}",
      "\t#delete_expired_task_after: ${8:}",
      "\t#description: ${9:}",
      "\t#disallow_start_if_on_batteries: ${10:}",
      "\t#display_name: ${11:}",
      "\t#enabled: ${12:}",
      "\t#execution_time_limit: ${13:}",
      "\t#group: ${14:}",
      "\t#hidden: ${15:}",
      "\t#logon_type: ${16:none|password|s4u|interactive_token|group|service_account|token_or_password}",
      "\t#multiple_instances: ${17:0|1|2|3}",
      "\t#password: ${18:}",
      "\t#path: ${19:\"\\\"}",
      "\t#priority: ${20:}",
      "\t#restart_count: ${21:}",
      "\t#restart_interval: ${22:}",
      "\t#run_level: ${23:limited|highest}",
      "\t#run_only_if_idle: ${24:}",
      "\t#run_only_if_network_available: ${25:}",
      "\t#source: ${26:}",
      "\t#start_when_available: ${27:}",
      "\t#state: ${28:absent|#present}",
      "\t#stop_if_going_on_batteries: ${29:}",
      "\t#triggers: ${30:}",
      "\t#update_password: ${31:true}",
      "\t#username: ${32:}",
      "\t#version: ${33:}",
      "\t#wake_to_run: ${34:}"
    ]
  },
  "win_scheduled_task_stat": {
    "prefix": "win_scheduled_task_stat",
    "description": "Get information about Windows Scheduled Tasks",
    "body": [
      "community.windows.win_scheduled_task_stat:",
      "\t#name: ${1:}",
      "\t#path: ${2:\"\\\"}"
    ]
  },
  "win_scoop": {
    "prefix": "win_scoop",
    "description": "Manage packages using Scoop",
    "body": [
      "community.windows.win_scoop:",
      "\tname: ${1:}",
      "\t#architecture: ${2:32bit|64bit}",
      "\t#global: ${3:false}",
      "\t#independent: ${4:false}",
      "\t#no_cache: ${5:false}",
      "\t#purge: ${6:false}",
      "\t#skip_checksum: ${7:false}",
      "\t#state: ${8:absent|#present}"
    ]
  },
  "win_scoop_bucket": {
    "prefix": "win_scoop_bucket",
    "description": "Manage Scoop buckets",
    "body": [
      "community.windows.win_scoop_bucket:",
      "\tname: ${1:}",
      "\t#repo: ${2:}",
      "\t#state: ${3:absent|#present}"
    ]
  },
  "win_security_policy": {
    "prefix": "win_security_policy",
    "description": "Change local security policy settings",
    "body": [
      "community.windows.win_security_policy:",
      "\tkey: ${1:}",
      "\tsection: ${2:}",
      "\tvalue: ${3:}"
    ]
  },
  "win_shortcut": {
    "prefix": "win_shortcut",
    "description": "Manage shortcuts on Windows",
    "body": [
      "community.windows.win_shortcut:",
      "\tdest: ${1:}",
      "\t#arguments: ${2:}",
      "\t#description: ${3:}",
      "\t#directory: ${4:}",
      "\t#hotkey: ${5:}",
      "\t#icon: ${6:}",
      "\t#run_as_admin: ${7:false}",
      "\t#src: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#windowstyle: ${10:maximized|minimized|normal}"
    ]
  },
  "win_snmp": {
    "prefix": "win_snmp",
    "description": "Configures the Windows SNMP service",
    "body": [
      "community.windows.win_snmp:",
      "\t#action: ${1:add|#set|remove}",
      "\t#community_strings: ${2:}",
      "\t#permitted_managers: ${3:}"
    ]
  },
  "win_timezone": {
    "prefix": "win_timezone",
    "description": "Sets Windows machine timezone",
    "body": [
      "community.windows.win_timezone:",
      "\ttimezone: ${1:}"
    ]
  },
  "win_toast": {
    "prefix": "win_toast",
    "description": "Sends Toast windows notification to logged in users on Windows 10 or later hosts",
    "body": [
      "community.windows.win_toast:",
      "\t#expire: ${1:45}",
      "\t#group: ${2:Powershell}",
      "\t#msg: ${3:Hello, World!}",
      "\t#popup: ${4:true}",
      "\t#tag: ${5:Ansible}",
      "\t#title: ${6:Notification HH:mm}"
    ]
  },
  "win_unzip": {
    "prefix": "win_unzip",
    "description": "Unzips compressed files and archives on the Windows node",
    "body": [
      "community.windows.win_unzip:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#creates: ${3:}",
      "\t#delete_archive: ${4:false}",
      "\t#password: ${5:}",
      "\t#recurse: ${6:false}"
    ]
  },
  "win_user_profile": {
    "prefix": "win_user_profile",
    "description": "Manages the Windows user profiles.",
    "body": [
      "community.windows.win_user_profile:",
      "\t#name: ${1:}",
      "\t#remove_multiple: ${2:false}",
      "\t#state: ${3:absent|#present}",
      "\t#username: ${4:}"
    ]
  },
  "win_wait_for_process": {
    "prefix": "win_wait_for_process",
    "description": "Waits for a process to exist or not exist before continuing.",
    "body": [
      "community.windows.win_wait_for_process:",
      "\t#owner: ${1:}",
      "\t#pid: ${2:0}",
      "\t#post_wait_delay: ${3:0}",
      "\t#pre_wait_delay: ${4:0}",
      "\t#process_min_count: ${5:1}",
      "\t#process_name_exact: ${6:}",
      "\t#process_name_pattern: ${7:}",
      "\t#sleep: ${8:1}",
      "\t#state: ${9:absent|#present}",
      "\t#timeout: ${10:300}"
    ]
  },
  "win_wakeonlan": {
    "prefix": "win_wakeonlan",
    "description": "Send a magic Wake-on-LAN (WoL) broadcast packet",
    "body": [
      "community.windows.win_wakeonlan:",
      "\tmac: ${1:}",
      "\t#broadcast: ${2:255.255.255.255}",
      "\t#port: ${3:7}"
    ]
  },
  "win_webpicmd": {
    "prefix": "win_webpicmd",
    "description": "Installs packages using Web Platform Installer command-line",
    "body": [
      "community.windows.win_webpicmd:",
      "\tname: ${1:}"
    ]
  },
  "win_xml": {
    "prefix": "win_xml",
    "description": "Manages XML file content on Windows hosts",
    "body": [
      "community.windows.win_xml:",
      "\tpath: ${1:}",
      "\txpath: ${2:}",
      "\t#attribute: ${3:}",
      "\t#backup: ${4:false}",
      "\t#count: ${5:false}",
      "\t#fragment: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#type: ${8:attribute|#element|text}"
    ]
  },
  "win_zip": {
    "prefix": "win_zip",
    "description": "Compress file or directory as zip archive on the Windows node",
    "body": [
      "community.windows.win_zip:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}"
    ]
  },
  "podman_container": {
    "prefix": "podman_container",
    "description": "Manage podman containers",
    "body": [
      "containers.podman.podman_container:",
      "\tname: ${1:}",
      "\t#annotation: ${2:}",
      "\t#authfile: ${3:}",
      "\t#blkio_weight: ${4:}",
      "\t#blkio_weight_device: ${5:}",
      "\t#cap_add: ${6:}",
      "\t#cap_drop: ${7:}",
      "\t#cgroup_parent: ${8:}",
      "\t#cgroupns: ${9:}",
      "\t#cgroups: ${10:}",
      "\t#cidfile: ${11:}",
      "\t#cmd_args: ${12:}",
      "\t#command: ${13:}",
      "\t#conmon_pidfile: ${14:}",
      "\t#cpu_period: ${15:}",
      "\t#cpu_quota: ${16:}",
      "\t#cpu_rt_period: ${17:}",
      "\t#cpu_rt_runtime: ${18:}",
      "\t#cpu_shares: ${19:}",
      "\t#cpus: ${20:}",
      "\t#cpuset_cpus: ${21:}",
      "\t#cpuset_mems: ${22:}",
      "\t#debug: ${23:false}",
      "\t#detach: ${24:true}",
      "\t#detach_keys: ${25:}",
      "\t#device: ${26:}",
      "\t#device_read_bps: ${27:}",
      "\t#device_read_iops: ${28:}",
      "\t#device_write_bps: ${29:}",
      "\t#device_write_iops: ${30:}",
      "\t#dns: ${31:}",
      "\t#dns_option: ${32:}",
      "\t#dns_search: ${33:}",
      "\t#entrypoint: ${34:}",
      "\t#env: ${35:}",
      "\t#env_file: ${36:}",
      "\t#env_host: ${37:}",
      "\t#etc_hosts: ${38:}",
      "\t#executable: ${39:podman}",
      "\t#expose: ${40:}",
      "\t#force_restart: ${41:false}",
      "\t#generate_systemd: ${42:{\\}}",
      "\t#gidmap: ${43:}",
      "\t#group_add: ${44:}",
      "\t#healthcheck: ${45:}",
      "\t#healthcheck_failure_action: ${46:none|kill|restart|stop}",
      "\t#healthcheck_interval: ${47:}",
      "\t#healthcheck_retries: ${48:}",
      "\t#healthcheck_start_period: ${49:}",
      "\t#healthcheck_timeout: ${50:}",
      "\t#hooks_dir: ${51:}",
      "\t#hostname: ${52:}",
      "\t#http_proxy: ${53:}",
      "\t#image: ${54:}",
      "\t#image_strict: ${55:false}",
      "\t#image_volume: ${56:bind|tmpfs|ignore}",
      "\t#init: ${57:}",
      "\t#init_path: ${58:}",
      "\t#interactive: ${59:}",
      "\t#ip: ${60:}",
      "\t#ipc: ${61:}",
      "\t#kernel_memory: ${62:}",
      "\t#label: ${63:}",
      "\t#label_file: ${64:}",
      "\t#log_driver: ${65:k8s-file|journald|json-file}",
      "\t#log_level: ${66:debug|info|warn|error|fatal|panic}",
      "\t#log_opt: ${67:}",
      "\t#mac_address: ${68:}",
      "\t#memory: ${69:}",
      "\t#memory_reservation: ${70:}",
      "\t#memory_swap: ${71:}",
      "\t#memory_swappiness: ${72:}",
      "\t#mount: ${73:}",
      "\t#network: ${74:}",
      "\t#network_aliases: ${75:}",
      "\t#no_hosts: ${76:}",
      "\t#oom_kill_disable: ${77:}",
      "\t#oom_score_adj: ${78:}",
      "\t#pid: ${79:}",
      "\t#pids_limit: ${80:}",
      "\t#pod: ${81:}",
      "\t#privileged: ${82:}",
      "\t#publish: ${83:}",
      "\t#publish_all: ${84:}",
      "\t#read_only: ${85:}",
      "\t#read_only_tmpfs: ${86:}",
      "\t#recreate: ${87:false}",
      "\t#requires: ${88:}",
      "\t#restart_policy: ${89:}",
      "\t#rm: ${90:}",
      "\t#rootfs: ${91:}",
      "\t#sdnotify: ${92:}",
      "\t#secrets: ${93:}",
      "\t#security_opt: ${94:}",
      "\t#shm_size: ${95:}",
      "\t#sig_proxy: ${96:}",
      "\t#state: ${97:absent|present|stopped|#started|created}",
      "\t#stop_signal: ${98:}",
      "\t#stop_timeout: ${99:}",
      "\t#subgidname: ${100:}",
      "\t#subuidname: ${101:}",
      "\t#sysctl: ${102:}",
      "\t#systemd: ${103:}",
      "\t#timezone: ${104:}",
      "\t#tmpfs: ${105:}",
      "\t#tty: ${106:}",
      "\t#uidmap: ${107:}",
      "\t#ulimit: ${108:}",
      "\t#user: ${109:}",
      "\t#userns: ${110:}",
      "\t#uts: ${111:}",
      "\t#volume: ${112:}",
      "\t#volumes_from: ${113:}",
      "\t#workdir: ${114:}"
    ]
  },
  "podman_container_exec": {
    "prefix": "podman_container_exec",
    "description": "Executes a command in a running container.",
    "body": [
      "containers.podman.podman_container_exec:",
      "\tname: ${1:}",
      "\t#argv: ${2:}",
      "\t#command: ${3:}",
      "\t#detach: ${4:false}",
      "\t#env: ${5:}",
      "\t#privileged: ${6:false}",
      "\t#tty: ${7:false}",
      "\t#user: ${8:}",
      "\t#workdir: ${9:}"
    ]
  },
  "podman_container_info": {
    "prefix": "podman_container_info",
    "description": "Gather facts about containers using podman",
    "body": [
      "containers.podman.podman_container_info:",
      "\t#executable: ${1:podman}",
      "\t#name: ${2:}"
    ]
  },
  "podman_containers": {
    "prefix": "podman_containers",
    "description": "Manage podman containers in a batch",
    "body": [
      "containers.podman.podman_containers:",
      "\tcontainers: ${1:}",
      "\t#debug: ${2:false}"
    ]
  },
  "podman_export": {
    "prefix": "podman_export",
    "description": "Export a podman container",
    "body": [
      "containers.podman.podman_export:",
      "\tdest: ${1:}",
      "\t#container: ${2:}",
      "\t#executable: ${3:podman}",
      "\t#force: ${4:true}",
      "\t#volume: ${5:}"
    ]
  },
  "podman_generate_systemd": {
    "prefix": "podman_generate_systemd",
    "description": "Generate systemd unit from a pod or a container",
    "body": [
      "containers.podman.podman_generate_systemd:",
      "\tname: ${1:}",
      "\t#after: ${2:}",
      "\t#container_prefix: ${3:}",
      "\t#dest: ${4:}",
      "\t#env: ${5:}",
      "\t#executable: ${6:podman}",
      "\t#force: ${7:false}",
      "\t#new: ${8:false}",
      "\t#no_header: ${9:false}",
      "\t#pod_prefix: ${10:}",
      "\t#requires: ${11:}",
      "\t#restart_policy: ${12:no-restart|on-success|on-failure|on-abnormal|on-watchdog|on-abort|always}",
      "\t#restart_sec: ${13:}",
      "\t#separator: ${14:}",
      "\t#start_timeout: ${15:}",
      "\t#stop_timeout: ${16:}",
      "\t#use_names: ${17:true}",
      "\t#wants: ${18:}"
    ]
  },
  "podman_image": {
    "prefix": "podman_image",
    "description": "Pull images for use by podman",
    "body": [
      "containers.podman.podman_image:",
      "\tname: ${1:}",
      "\t#arch: ${2:}",
      "\t#auth_file: ${3:}",
      "\t#build: ${4:{\\}}",
      "\t#ca_cert_dir: ${5:}",
      "\t#executable: ${6:podman}",
      "\t#force: ${7:false}",
      "\t#password: ${8:}",
      "\t#path: ${9:}",
      "\t#pull: ${10:true}",
      "\t#push: ${11:false}",
      "\t#push_args: ${12:{\\}}",
      "\t#state: ${13:#present|absent|build}",
      "\t#tag: ${14:latest}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:}"
    ]
  },
  "podman_image_info": {
    "prefix": "podman_image_info",
    "description": "Gather info about images using podman",
    "body": [
      "containers.podman.podman_image_info:",
      "\t#executable: ${1:podman}",
      "\t#name: ${2:}"
    ]
  },
  "podman_import": {
    "prefix": "podman_import",
    "description": "Import Podman container from a tar file.",
    "body": [
      "containers.podman.podman_import:",
      "\tsrc: ${1:}",
      "\t#change: ${2:}",
      "\t#commit_message: ${3:}",
      "\t#executable: ${4:podman}",
      "\t#volume: ${5:}"
    ]
  },
  "podman_load": {
    "prefix": "podman_load",
    "description": "Load image from a tar file.",
    "body": [
      "containers.podman.podman_load:",
      "\tinput: ${1:}",
      "\t#executable: ${2:podman}"
    ]
  },
  "podman_login": {
    "prefix": "podman_login",
    "description": "Login to a container registry using podman",
    "body": [
      "containers.podman.podman_login:",
      "\tpassword: ${1:}",
      "\tusername: ${2:}",
      "\t#authfile: ${3:}",
      "\t#certdir: ${4:}",
      "\t#executable: ${5:podman}",
      "\t#registry: ${6:}",
      "\t#tlsverify: ${7:}"
    ]
  },
  "podman_login_info": {
    "prefix": "podman_login_info",
    "description": "Return the logged-in user if any for a given registry",
    "body": [
      "containers.podman.podman_login_info:",
      "\tregistry: ${1:}",
      "\t#authfile: ${2:}",
      "\t#executable: ${3:podman}"
    ]
  },
  "podman_logout": {
    "prefix": "podman_logout",
    "description": "Log out of a container registry using podman",
    "body": [
      "containers.podman.podman_logout:",
      "\t#all: ${1:}",
      "\t#authfile: ${2:}",
      "\t#executable: ${3:podman}",
      "\t#ignore_docker_credentials: ${4:}",
      "\t#registry: ${5:}"
    ]
  },
  "podman_network": {
    "prefix": "podman_network",
    "description": "Manage podman networks",
    "body": [
      "containers.podman.podman_network:",
      "\tname: ${1:}",
      "\t#debug: ${2:false}",
      "\t#disable_dns: ${3:}",
      "\t#driver: ${4:}",
      "\t#executable: ${5:podman}",
      "\t#force: ${6:false}",
      "\t#gateway: ${7:}",
      "\t#internal: ${8:}",
      "\t#ip_range: ${9:}",
      "\t#ipv6: ${10:}",
      "\t#macvlan: ${11:}",
      "\t#opt: ${12:}",
      "\t#recreate: ${13:false}",
      "\t#state: ${14:#present|absent}",
      "\t#subnet: ${15:}"
    ]
  },
  "podman_network_info": {
    "prefix": "podman_network_info",
    "description": "Gather info about podman networks",
    "body": [
      "containers.podman.podman_network_info:",
      "\t#executable: ${1:podman}",
      "\t#name: ${2:}"
    ]
  },
  "podman_play": {
    "prefix": "podman_play",
    "description": "Play kubernetes YAML file using podman",
    "body": [
      "containers.podman.podman_play:",
      "\tkube_file: ${1:}",
      "\tstate: ${2:created|started|absent}",
      "\t#authfile: ${3:}",
      "\t#build: ${4:}",
      "\t#cert_dir: ${5:}",
      "\t#configmap: ${6:}",
      "\t#context_dir: ${7:}",
      "\t#debug: ${8:}",
      "\t#executable: ${9:podman}",
      "\t#log_driver: ${10:}",
      "\t#log_level: ${11:debug|info|warn|error|fatal|panic}",
      "\t#network: ${12:}",
      "\t#password: ${13:}",
      "\t#quiet: ${14:}",
      "\t#recreate: ${15:}",
      "\t#seccomp_profile_root: ${16:}",
      "\t#tls_verify: ${17:}",
      "\t#username: ${18:}",
      "\t#userns: ${19:}"
    ]
  },
  "podman_pod": {
    "prefix": "podman_pod",
    "description": "Manage Podman pods",
    "body": [
      "containers.podman.podman_pod:",
      "\tname: ${1:}",
      "\t#add_host: ${2:}",
      "\t#blkio_weight: ${3:}",
      "\t#blkio_weight_device: ${4:}",
      "\t#cgroup_parent: ${5:}",
      "\t#cpu_shares: ${6:}",
      "\t#cpus: ${7:}",
      "\t#cpuset_cpus: ${8:}",
      "\t#cpuset_mems: ${9:}",
      "\t#debug: ${10:false}",
      "\t#device: ${11:}",
      "\t#device_read_bps: ${12:}",
      "\t#device_write_bps: ${13:}",
      "\t#dns: ${14:}",
      "\t#dns_opt: ${15:}",
      "\t#dns_search: ${16:}",
      "\t#executable: ${17:podman}",
      "\t#generate_systemd: ${18:{\\}}",
      "\t#gidmap: ${19:}",
      "\t#hostname: ${20:}",
      "\t#infra: ${21:}",
      "\t#infra_command: ${22:}",
      "\t#infra_conmon_pidfile: ${23:}",
      "\t#infra_image: ${24:}",
      "\t#infra_name: ${25:}",
      "\t#ip: ${26:}",
      "\t#label: ${27:}",
      "\t#label_file: ${28:}",
      "\t#mac_address: ${29:}",
      "\t#memory: ${30:}",
      "\t#memory_swap: ${31:}",
      "\t#network: ${32:}",
      "\t#network_alias: ${33:}",
      "\t#no_hosts: ${34:}",
      "\t#pid: ${35:}",
      "\t#pod_id_file: ${36:}",
      "\t#publish: ${37:}",
      "\t#recreate: ${38:false}",
      "\t#share: ${39:}",
      "\t#state: ${40:#created|killed|restarted|absent|started|stopped|paused|unpaused}",
      "\t#subgidname: ${41:}",
      "\t#subuidname: ${42:}",
      "\t#uidmap: ${43:}",
      "\t#userns: ${44:}",
      "\t#volume: ${45:}"
    ]
  },
  "podman_pod_info": {
    "prefix": "podman_pod_info",
    "description": "Gather info about podman pods",
    "body": [
      "containers.podman.podman_pod_info:",
      "\t#executable: ${1:podman}",
      "\t#name: ${2:}"
    ]
  },
  "podman_prune": {
    "prefix": "podman_prune",
    "description": "Allows to prune various podman objects",
    "body": [
      "containers.podman.podman_prune:",
      "\t#container: ${1:false}",
      "\t#container_filters: ${2:}",
      "\t#executable: ${3:podman}",
      "\t#image: ${4:false}",
      "\t#image_filters: ${5:}",
      "\t#network: ${6:false}",
      "\t#network_filters: ${7:}",
      "\t#system: ${8:false}",
      "\t#system_all: ${9:false}",
      "\t#system_volumes: ${10:false}",
      "\t#volume: ${11:false}",
      "\t#volume_filters: ${12:}"
    ]
  },
  "podman_runlabel": {
    "prefix": "podman_runlabel",
    "description": "Run given label from given image",
    "body": [
      "containers.podman.podman_runlabel:",
      "\timage: ${1:}",
      "\tlabel: ${2:}",
      "\t#executable: ${3:podman}"
    ]
  },
  "podman_save": {
    "prefix": "podman_save",
    "description": "Saves podman image to tar file",
    "body": [
      "containers.podman.podman_save:",
      "\tdest: ${1:}",
      "\timage: ${2:}",
      "\t#compress: ${3:}",
      "\t#executable: ${4:podman}",
      "\t#force: ${5:true}",
      "\t#format: ${6:docker-archive|oci-archive|oci-dir|docker-dir}",
      "\t#multi_image_archive: ${7:}"
    ]
  },
  "podman_secret": {
    "prefix": "podman_secret",
    "description": "Manage podman secrets",
    "body": [
      "containers.podman.podman_secret:",
      "\tname: ${1:}",
      "\t#data: ${2:}",
      "\t#driver: ${3:}",
      "\t#driver_opts: ${4:}",
      "\t#executable: ${5:podman}",
      "\t#force: ${6:false}",
      "\t#skip_existing: ${7:false}",
      "\t#state: ${8:absent|#present}"
    ]
  },
  "podman_tag": {
    "prefix": "podman_tag",
    "description": "Add an additional name to a local image",
    "body": [
      "containers.podman.podman_tag:",
      "\timage: ${1:}",
      "\ttarget_names: ${2:}",
      "\t#executable: ${3:podman}"
    ]
  },
  "podman_volume": {
    "prefix": "podman_volume",
    "description": "Manage Podman volumes",
    "body": [
      "containers.podman.podman_volume:",
      "\tname: ${1:}",
      "\t#debug: ${2:false}",
      "\t#driver: ${3:}",
      "\t#executable: ${4:podman}",
      "\t#label: ${5:}",
      "\t#options: ${6:}",
      "\t#recreate: ${7:false}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "podman_volume_info": {
    "prefix": "podman_volume_info",
    "description": "Gather info about podman volumes",
    "body": [
      "containers.podman.podman_volume_info:",
      "\t#executable: ${1:podman}",
      "\t#name: ${2:}"
    ]
  },
  "cyberark_account": {
    "prefix": "cyberark_account",
    "description": "Module for CyberArk Account object creation, deletion, and modification using PAS Web Services SDK.",
    "body": [
      "cyberark.pas.cyberark_account:",
      "\tcyberark_session: ${1:}",
      "\tsafe: ${2:}",
      "\t#address: ${3:}",
      "\t#api_base_url: ${4:}",
      "\t#identified_by: ${5:username,address,platform_id}",
      "\t#logging_file: ${6:/tmp/ansible_cyberark.log}",
      "\t#logging_level: ${7:NOTSET|DEBUG|INFO}",
      "\t#name: ${8:}",
      "\t#new_secret: ${9:}",
      "\t#platform_account_properties: ${10:}",
      "\t#platform_id: ${11:}",
      "\t#remote_machines_access: ${12:}",
      "\t#secret: ${13:}",
      "\t#secret_management: ${14:}",
      "\t#secret_type: ${15:#password|key}",
      "\t#state: ${16:#present|absent}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "cyberark_authentication": {
    "prefix": "cyberark_authentication",
    "description": "CyberArk Authentication using PAS Web Services SDK.",
    "body": [
      "cyberark.pas.cyberark_authentication:",
      "\t#api_base_url: ${1:}",
      "\t#concurrentSession: ${2:false}",
      "\t#connection_number: ${3:}",
      "\t#cyberark_session: ${4:}",
      "\t#new_password: ${5:}",
      "\t#password: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#timeout: ${8:10}",
      "\t#use_cyberark_authentication: ${9:false}",
      "\t#use_ldap_authentication: ${10:false}",
      "\t#use_radius_authentication: ${11:false}",
      "\t#use_windows_authentication: ${12:false}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "cyberark_credential": {
    "prefix": "cyberark_credential",
    "description": "Credential retrieval using AAM Central Credential Provider.",
    "body": [
      "cyberark.pas.cyberark_credential:",
      "\tapi_base_url: ${1:}",
      "\tapp_id: ${2:}",
      "\tquery: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#connection_timeout: ${6:30}",
      "\t#fail_request_on_password_change: ${7:false}",
      "\t#query_format: ${8:#Exact|Regexp}",
      "\t#reason: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "cyberark_user": {
    "prefix": "cyberark_user",
    "description": "CyberArk User Management using PAS Web Services SDK.",
    "body": [
      "cyberark.pas.cyberark_user:",
      "\tcyberark_session: ${1:}",
      "\tusername: ${2:}",
      "\t#authorization: ${3:['AddSafes', 'AuditUsers']}",
      "\t#change_password_on_the_next_logon: ${4:false}",
      "\t#disabled: ${5:false}",
      "\t#domain_name: ${6:}",
      "\t#email: ${7:}",
      "\t#expiry_date: ${8:}",
      "\t#first_name: ${9:}",
      "\t#group_name: ${10:}",
      "\t#initial_password: ${11:}",
      "\t#last_name: ${12:}",
      "\t#location: ${13:}",
      "\t#logging_file: ${14:/tmp/ansible_cyberark.log}",
      "\t#logging_level: ${15:#NOTSET|DEBUG|INFO}",
      "\t#member_type: ${16:}",
      "\t#new_password: ${17:}",
      "\t#state: ${18:absent|#present}",
      "\t#timeout: ${19:10}",
      "\t#user_type_name: ${20:}",
      "\t#vault_id: ${21:}"
    ]
  },
  "sonic_aaa": {
    "prefix": "sonic_aaa",
    "description": "Manage AAA and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_aaa:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|overridden|replaced}"
    ]
  },
  "sonic_acl_interfaces": {
    "prefix": "sonic_acl_interfaces",
    "description": "Manage access control list (ACL) to interface binding on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_acl_interfaces:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_api": {
    "prefix": "sonic_api",
    "description": "Manages REST operations on devices running Enterprise SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_api:",
      "\tmethod: ${1:GET|PUT|POST|PATCH|DELETE}",
      "\tstatus_code: ${2:}",
      "\turl: ${3:}",
      "\t#body: ${4:}"
    ]
  },
  "sonic_bfd": {
    "prefix": "sonic_bfd",
    "description": "Manage BFD configuration on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_bfd:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_bgp": {
    "prefix": "sonic_bgp",
    "description": "Manage global BGP and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_bgp:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_bgp_af": {
    "prefix": "sonic_bgp_af",
    "description": "Manage global BGP address-family and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_bgp_af:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|overridden|replaced}"
    ]
  },
  "sonic_bgp_as_paths": {
    "prefix": "sonic_bgp_as_paths",
    "description": "Manage BGP autonomous system path (or as-path-list) and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_bgp_as_paths:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_bgp_communities": {
    "prefix": "sonic_bgp_communities",
    "description": "Manage BGP community and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_bgp_communities:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_bgp_ext_communities": {
    "prefix": "sonic_bgp_ext_communities",
    "description": "Manage BGP extended community-list and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_bgp_ext_communities:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_bgp_neighbors": {
    "prefix": "sonic_bgp_neighbors",
    "description": "Manage a BGP neighbor and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_bgp_neighbors:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_bgp_neighbors_af": {
    "prefix": "sonic_bgp_neighbors_af",
    "description": "Manage the BGP neighbor address-family and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_bgp_neighbors_af:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_command": {
    "prefix": "sonic_command",
    "description": "Runs commands on devices running Enterprise SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:#all|any}",
      "\t#retries: ${4:10}",
      "\t#wait_for: ${5:}"
    ]
  },
  "sonic_config": {
    "prefix": "sonic_config",
    "description": "Manages configuration sections on devices running Enterprise SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#config: ${5:}",
      "\t#lines: ${6:}",
      "\t#match: ${7:#line|strict|exact|none}",
      "\t#parents: ${8:}",
      "\t#replace: ${9:#line|block}",
      "\t#save: ${10:false}",
      "\t#src: ${11:}",
      "\t#update: ${12:#merge|check}"
    ]
  },
  "sonic_copp": {
    "prefix": "sonic_copp",
    "description": "Manage CoPP configuration on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_copp:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_dhcp_relay": {
    "prefix": "sonic_dhcp_relay",
    "description": "Manage DHCP and DHCPv6 relay configurations on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_dhcp_relay:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_facts": {
    "prefix": "sonic_facts",
    "description": "Collects facts on devices running Enterprise SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_facts:",
      "\t#gather_network_resources: ${1:all|vlans|interfaces|l2_interfaces|l3_interfaces|lag_interfaces|bgp|bgp_af|bgp_neighbors|bgp_neighbors_af|bgp_as_paths|bgp_communities|bgp_ext_communities|mclag|prefix_lists|vlan_mapping|vrfs|vxlans|users|system|port_breakout|aaa|tacacs_server|radius_server|static_routes|ntp|logging|ip_neighbor|port_group|dhcp_relay|acl_interfaces|l2_acls|l3_acls|lldp_global|mac|bfd|copp|route_maps}",
      "\t#gather_subset: ${2:!config}"
    ]
  },
  "sonic_interfaces": {
    "prefix": "sonic_interfaces",
    "description": "Configure Interface attributes on interfaces such as, Eth, LAG, VLAN, and loopback. (create a loopback interface if it does not exist.)",
    "body": [
      "dellemc.enterprise_sonic.sonic_interfaces:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_ip_neighbor": {
    "prefix": "sonic_ip_neighbor",
    "description": "Manage IP neighbor global configuration on SONiC.",
    "body": [
      "dellemc.enterprise_sonic.sonic_ip_neighbor:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_l2_acls": {
    "prefix": "sonic_l2_acls",
    "description": "Manage Layer 2 access control lists (ACL) configurations on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_l2_acls:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_l2_interfaces": {
    "prefix": "sonic_l2_interfaces",
    "description": "Configure interface-to-VLAN association that is based on access or trunk mode",
    "body": [
      "dellemc.enterprise_sonic.sonic_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_l3_acls": {
    "prefix": "sonic_l3_acls",
    "description": "Manage Layer 3 access control lists (ACL) configurations on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_l3_acls:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_l3_interfaces": {
    "prefix": "sonic_l3_interfaces",
    "description": "Configure the IPv4 and IPv6 parameters on Interfaces such as, Eth, LAG, VLAN, and loopback",
    "body": [
      "dellemc.enterprise_sonic.sonic_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_lag_interfaces": {
    "prefix": "sonic_lag_interfaces",
    "description": "Manage link aggregation group (LAG) interface parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_lldp_global": {
    "prefix": "sonic_lldp_global",
    "description": "Manage Global LLDP configurations on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_lldp_global:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_logging": {
    "prefix": "sonic_logging",
    "description": "Manage logging configuration on SONiC.",
    "body": [
      "dellemc.enterprise_sonic.sonic_logging:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_mac": {
    "prefix": "sonic_mac",
    "description": "Manage MAC configuration on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_mac:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_mclag": {
    "prefix": "sonic_mclag",
    "description": "Manage multi chassis link aggregation groups domain (MCLAG) and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_mclag:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_ntp": {
    "prefix": "sonic_ntp",
    "description": "Manage NTP configuration on SONiC.",
    "body": [
      "dellemc.enterprise_sonic.sonic_ntp:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_port_breakout": {
    "prefix": "sonic_port_breakout",
    "description": "Configure port breakout settings on physical interfaces",
    "body": [
      "dellemc.enterprise_sonic.sonic_port_breakout:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted}"
    ]
  },
  "sonic_port_group": {
    "prefix": "sonic_port_group",
    "description": "Manages port group configuration on SONiC.",
    "body": [
      "dellemc.enterprise_sonic.sonic_port_group:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_prefix_lists": {
    "prefix": "sonic_prefix_lists",
    "description": "prefix list configuration handling for SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_prefix_lists:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_radius_server": {
    "prefix": "sonic_radius_server",
    "description": "Manage RADIUS server and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_radius_server:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_route_maps": {
    "prefix": "sonic_route_maps",
    "description": "route map configuration handling for SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_route_maps:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_static_routes": {
    "prefix": "sonic_static_routes",
    "description": "Manage static routes configuration on SONiC",
    "body": [
      "dellemc.enterprise_sonic.sonic_static_routes:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|overridden|replaced}"
    ]
  },
  "sonic_system": {
    "prefix": "sonic_system",
    "description": "Configure system parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_system:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_tacacs_server": {
    "prefix": "sonic_tacacs_server",
    "description": "Manage TACACS server and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_tacacs_server:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_users": {
    "prefix": "sonic_users",
    "description": "Manage users and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_users:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|overridden|replaced}"
    ]
  },
  "sonic_vlan_mapping": {
    "prefix": "sonic_vlan_mapping",
    "description": "Configure vlan mappings on SONiC.",
    "body": [
      "dellemc.enterprise_sonic.sonic_vlan_mapping:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "sonic_vlans": {
    "prefix": "sonic_vlans",
    "description": "Manage VLAN and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_vlans:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_vrfs": {
    "prefix": "sonic_vrfs",
    "description": "Manage VRFs and associate VRFs to interfaces such as, Eth, LAG, VLAN, and loopback",
    "body": [
      "dellemc.enterprise_sonic.sonic_vrfs:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|overridden|deleted}"
    ]
  },
  "sonic_vxlans": {
    "prefix": "sonic_vxlans",
    "description": "Manage VxLAN EVPN and its parameters",
    "body": [
      "dellemc.enterprise_sonic.sonic_vxlans:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|deleted|replaced|overridden}"
    ]
  },
  "dellemc_idrac_storage_volume": {
    "prefix": "dellemc_idrac_storage_volume",
    "description": "Configures the RAID configuration attributes",
    "body": [
      "dellemc.openmanage.dellemc_idrac_storage_volume:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#capacity: ${5:}",
      "\t#controller_id: ${6:}",
      "\t#disk_cache_policy: ${7:#Default|Enabled|Disabled}",
      "\t#idrac_port: ${8:443}",
      "\t#media_type: ${9:HDD|SSD}",
      "\t#number_dedicated_hot_spare: ${10:0}",
      "\t#protocol: ${11:SAS|SATA}",
      "\t#raid_init_operation: ${12:None|Fast}",
      "\t#raid_reset_config: ${13:True|#False}",
      "\t#read_cache_policy: ${14:#NoReadAhead|ReadAhead|AdaptiveReadAhead}",
      "\t#span_depth: ${15:1}",
      "\t#span_length: ${16:1}",
      "\t#state: ${17:create|delete|#view}",
      "\t#stripe_size: ${18:65536}",
      "\t#timeout: ${19:30}",
      "\t#validate_certs: ${20:true}",
      "\t#volume_id: ${21:}",
      "\t#volume_type: ${22:#RAID 0|RAID 1|RAID 5|RAID 6|RAID 10|RAID 50|RAID 60}",
      "\t#volumes: ${23:}",
      "\t#write_cache_policy: ${24:#WriteThrough|WriteBack|WriteBackForce}"
    ]
  },
  "idrac_attributes": {
    "prefix": "idrac_attributes",
    "description": "Configure the iDRAC attributes.",
    "body": [
      "dellemc.openmanage.idrac_attributes:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#idrac_attributes: ${5:}",
      "\t#idrac_port: ${6:443}",
      "\t#lifecycle_controller_attributes: ${7:}",
      "\t#resource_id: ${8:}",
      "\t#system_attributes: ${9:}",
      "\t#timeout: ${10:30}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "idrac_bios": {
    "prefix": "idrac_bios",
    "description": "Modify and clear BIOS attributes, reset BIOS settings and configure boot sources",
    "body": [
      "dellemc.openmanage.idrac_bios:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#apply_time: ${4:#Immediate|OnReset|AtMaintenanceWindowStart|InMaintenanceWindowOnReset}",
      "\t#attributes: ${5:}",
      "\t#boot_sources: ${6:}",
      "\t#ca_path: ${7:}",
      "\t#clear_pending: ${8:}",
      "\t#idrac_port: ${9:443}",
      "\t#job_wait: ${10:true}",
      "\t#job_wait_timeout: ${11:1200}",
      "\t#maintenance_window: ${12:}",
      "\t#reset_bios: ${13:}",
      "\t#reset_type: ${14:#graceful_restart|force_restart}",
      "\t#share_mnt: ${15:}",
      "\t#share_name: ${16:}",
      "\t#share_password: ${17:}",
      "\t#share_user: ${18:}",
      "\t#timeout: ${19:30}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "idrac_boot": {
    "prefix": "idrac_boot",
    "description": "Configure the boot order settings.",
    "body": [
      "dellemc.openmanage.idrac_boot:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#boot_options: ${4:}",
      "\t#boot_order: ${5:}",
      "\t#boot_source_override_enabled: ${6:continuous|disabled|once}",
      "\t#boot_source_override_mode: ${7:legacy|uefi}",
      "\t#boot_source_override_target: ${8:uefi_http|sd_card|uefi_target|utilities|bios_setup|hdd|cd|floppy|pxe|none}",
      "\t#ca_path: ${9:}",
      "\t#idrac_port: ${10:443}",
      "\t#job_wait: ${11:true}",
      "\t#job_wait_timeout: ${12:900}",
      "\t#reset_type: ${13:#graceful_restart|force_restart|none}",
      "\t#resource_id: ${14:}",
      "\t#timeout: ${15:30}",
      "\t#uefi_target_boot_source_override: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "idrac_certificates": {
    "prefix": "idrac_certificates",
    "description": "Configure certificates for iDRAC",
    "body": [
      "dellemc.openmanage.idrac_certificates:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#cert_params: ${5:}",
      "\t#certificate_path: ${6:}",
      "\t#certificate_type: ${7:#HTTPS|CA|CSC|CLIENT_TRUST_CERTIFICATE}",
      "\t#command: ${8:import|export|#generate_csr|reset}",
      "\t#idrac_port: ${9:443}",
      "\t#passphrase: ${10:}",
      "\t#reset: ${11:true}",
      "\t#resource_id: ${12:}",
      "\t#timeout: ${13:30}",
      "\t#validate_certs: ${14:true}",
      "\t#wait: ${15:300}"
    ]
  },
  "idrac_firmware": {
    "prefix": "idrac_firmware",
    "description": "Firmware update from a repository on a network share (CIFS, NFS, HTTP, HTTPS, FTP)",
    "body": [
      "dellemc.openmanage.idrac_firmware:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\tshare_name: ${4:}",
      "\t#apply_update: ${5:true}",
      "\t#ca_path: ${6:}",
      "\t#catalog_file_name: ${7:Catalog.xml}",
      "\t#idrac_port: ${8:443}",
      "\t#ignore_cert_warning: ${9:true}",
      "\t#job_wait: ${10:true}",
      "\t#proxy_passwd: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#proxy_server: ${13:}",
      "\t#proxy_support: ${14:ParametersProxy|DefaultProxy|#Off}",
      "\t#proxy_type: ${15:HTTP|SOCKS}",
      "\t#proxy_uname: ${16:}",
      "\t#reboot: ${17:false}",
      "\t#share_mnt: ${18:}",
      "\t#share_password: ${19:}",
      "\t#share_user: ${20:}",
      "\t#timeout: ${21:30}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "idrac_firmware_info": {
    "prefix": "idrac_firmware_info",
    "description": "Get Firmware Inventory",
    "body": [
      "dellemc.openmanage.idrac_firmware_info:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#idrac_port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "idrac_lifecycle_controller_job_status_info": {
    "prefix": "idrac_lifecycle_controller_job_status_info",
    "description": "Get the status of a Lifecycle Controller job",
    "body": [
      "dellemc.openmanage.idrac_lifecycle_controller_job_status_info:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\tjob_id: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#idrac_port: ${6:443}",
      "\t#timeout: ${7:30}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "idrac_lifecycle_controller_jobs": {
    "prefix": "idrac_lifecycle_controller_jobs",
    "description": "Delete the Lifecycle Controller Jobs",
    "body": [
      "dellemc.openmanage.idrac_lifecycle_controller_jobs:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#idrac_port: ${5:443}",
      "\t#job_id: ${6:}",
      "\t#timeout: ${7:30}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "idrac_lifecycle_controller_logs": {
    "prefix": "idrac_lifecycle_controller_logs",
    "description": "Export Lifecycle Controller logs to a network share or local path.",
    "body": [
      "dellemc.openmanage.idrac_lifecycle_controller_logs:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\tshare_name: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#idrac_port: ${6:443}",
      "\t#job_wait: ${7:true}",
      "\t#share_password: ${8:}",
      "\t#share_user: ${9:}",
      "\t#timeout: ${10:30}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "idrac_lifecycle_controller_status_info": {
    "prefix": "idrac_lifecycle_controller_status_info",
    "description": "Get the status of the Lifecycle Controller",
    "body": [
      "dellemc.openmanage.idrac_lifecycle_controller_status_info:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#idrac_port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "idrac_network_attributes": {
    "prefix": "idrac_network_attributes",
    "description": "Configures the iDRAC network attributes",
    "body": [
      "dellemc.openmanage.idrac_network_attributes:",
      "\tapply_time: ${1:Immediate|OnReset|AtMaintenanceWindowStart|InMaintenanceWindowOnReset}",
      "\tidrac_ip: ${2:}",
      "\tidrac_password: ${3:}",
      "\tidrac_user: ${4:}",
      "\tnetwork_adapter_id: ${5:}",
      "\tnetwork_device_function_id: ${6:}",
      "\t#ca_path: ${7:}",
      "\t#clear_pending: ${8:false}",
      "\t#idrac_port: ${9:443}",
      "\t#job_wait: ${10:true}",
      "\t#job_wait_timeout: ${11:1200}",
      "\t#maintenance_window: ${12:}",
      "\t#network_attributes: ${13:}",
      "\t#oem_network_attributes: ${14:}",
      "\t#resource_id: ${15:}",
      "\t#timeout: ${16:30}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "idrac_os_deployment": {
    "prefix": "idrac_os_deployment",
    "description": "Boot to a network ISO image",
    "body": [
      "dellemc.openmanage.idrac_os_deployment:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\tiso_image: ${4:}",
      "\tshare_name: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#expose_duration: ${7:1080}",
      "\t#idrac_port: ${8:443}",
      "\t#share_password: ${9:}",
      "\t#share_user: ${10:}",
      "\t#timeout: ${11:30}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "idrac_redfish_storage_controller": {
    "prefix": "idrac_redfish_storage_controller",
    "description": "Configures the physical disk, virtual disk, and storage controller settings",
    "body": [
      "dellemc.openmanage.idrac_redfish_storage_controller:",
      "\tbaseuri: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#apply_time: ${4:#Immediate|OnReset|AtMaintenanceWindowStart|InMaintenanceWindowOnReset}",
      "\t#attributes: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#command: ${7:ResetConfig|AssignSpare|SetControllerKey|RemoveControllerKey|ReKey|UnassignSpare|EnableControllerEncryption|BlinkTarget|UnBlinkTarget|ConvertToRAID|ConvertToNonRAID|ChangePDStateToOnline|ChangePDStateToOffline|LockVirtualDisk|OnlineCapacityExpansion}",
      "\t#controller_id: ${8:}",
      "\t#job_wait: ${9:false}",
      "\t#job_wait_timeout: ${10:120}",
      "\t#key: ${11:}",
      "\t#key_id: ${12:}",
      "\t#maintenance_window: ${13:}",
      "\t#mode: ${14:#LKM|SEKM}",
      "\t#old_key: ${15:}",
      "\t#size: ${16:}",
      "\t#target: ${17:}",
      "\t#timeout: ${18:30}",
      "\t#validate_certs: ${19:true}",
      "\t#volume_id: ${20:}"
    ]
  },
  "idrac_reset": {
    "prefix": "idrac_reset",
    "description": "Reset iDRAC",
    "body": [
      "dellemc.openmanage.idrac_reset:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#idrac_port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "idrac_server_config_profile": {
    "prefix": "idrac_server_config_profile",
    "description": "Export or Import iDRAC Server Configuration Profile (SCP)",
    "body": [
      "dellemc.openmanage.idrac_server_config_profile:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\tjob_wait: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#command: ${6:import|#export|preview}",
      "\t#end_host_power_state: ${7:#On|Off}",
      "\t#export_format: ${8:JSON|#XML}",
      "\t#export_use: ${9:#Default|Clone|Replace}",
      "\t#idrac_port: ${10:443}",
      "\t#ignore_certificate_warning: ${11:#ignore|showerror}",
      "\t#import_buffer: ${12:}",
      "\t#include_in_export: ${13:#default|readonly|passwordhashvalues|customtelemetry}",
      "\t#proxy_password: ${14:}",
      "\t#proxy_port: ${15:80}",
      "\t#proxy_server: ${16:}",
      "\t#proxy_support: ${17:false}",
      "\t#proxy_type: ${18:#http|socks4}",
      "\t#proxy_username: ${19:}",
      "\t#scp_components: ${20:#ALL|IDRAC|BIOS|NIC|RAID|FC|InfiniBand|SupportAssist|EventFilters|System|LifecycleController|AHCI|PCIeSSD}",
      "\t#scp_file: ${21:}",
      "\t#share_name: ${22:}",
      "\t#share_password: ${23:}",
      "\t#share_user: ${24:}",
      "\t#shutdown_type: ${25:#Graceful|Forced|NoReboot}",
      "\t#timeout: ${26:30}",
      "\t#validate_certs: ${27:true}"
    ]
  },
  "idrac_syslog": {
    "prefix": "idrac_syslog",
    "description": "Enable or disable the syslog on iDRAC",
    "body": [
      "dellemc.openmanage.idrac_syslog:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\tshare_name: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#idrac_port: ${6:443}",
      "\t#share_mnt: ${7:}",
      "\t#share_password: ${8:}",
      "\t#share_user: ${9:}",
      "\t#syslog: ${10:#Enabled|Disabled}",
      "\t#timeout: ${11:30}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "idrac_system_info": {
    "prefix": "idrac_system_info",
    "description": "Get the PowerEdge Server System Inventory",
    "body": [
      "dellemc.openmanage.idrac_system_info:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#idrac_port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "idrac_user": {
    "prefix": "idrac_user",
    "description": "Configure settings for user accounts",
    "body": [
      "dellemc.openmanage.idrac_user:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\tuser_name: ${4:}",
      "\t#authentication_protocol: ${5:None|SHA|MD5}",
      "\t#ca_path: ${6:}",
      "\t#custom_privilege: ${7:}",
      "\t#enable: ${8:}",
      "\t#idrac_port: ${9:443}",
      "\t#ipmi_lan_privilege: ${10:Administrator|Operator|User|No Access}",
      "\t#ipmi_serial_privilege: ${11:Administrator|Operator|User|No Access}",
      "\t#new_user_name: ${12:}",
      "\t#privacy_protocol: ${13:None|DES|AES}",
      "\t#privilege: ${14:Administrator|ReadOnly|Operator|None}",
      "\t#protocol_enable: ${15:}",
      "\t#sol_enable: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:30}",
      "\t#user_password: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "idrac_user_info": {
    "prefix": "idrac_user_info",
    "description": "Retrieve details of all users or a specific user on iDRAC.",
    "body": [
      "dellemc.openmanage.idrac_user_info:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#idrac_port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#user_id: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "idrac_virtual_media": {
    "prefix": "idrac_virtual_media",
    "description": "Configure the Remote File Share settings.",
    "body": [
      "dellemc.openmanage.idrac_virtual_media:",
      "\tidrac_ip: ${1:}",
      "\tidrac_password: ${2:}",
      "\tidrac_user: ${3:}",
      "\tvirtual_media: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#force: ${6:false}",
      "\t#idrac_port: ${7:443}",
      "\t#resource_id: ${8:}",
      "\t#timeout: ${9:30}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "ome_active_directory": {
    "prefix": "ome_active_directory",
    "description": "Configure Active Directory groups to be used with Directory Services",
    "body": [
      "dellemc.openmanage.ome_active_directory:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#certificate_file: ${5:}",
      "\t#domain_controller_lookup: ${6:#DNS|MANUAL}",
      "\t#domain_controller_port: ${7:3269}",
      "\t#domain_password: ${8:}",
      "\t#domain_server: ${9:}",
      "\t#domain_username: ${10:}",
      "\t#group_domain: ${11:}",
      "\t#id: ${12:}",
      "\t#name: ${13:}",
      "\t#network_timeout: ${14:120}",
      "\t#port: ${15:443}",
      "\t#search_timeout: ${16:120}",
      "\t#state: ${17:#present|absent}",
      "\t#test_connection: ${18:false}",
      "\t#timeout: ${19:30}",
      "\t#validate_certificate: ${20:false}",
      "\t#validate_certs: ${21:true}"
    ]
  },
  "ome_alert_policies": {
    "prefix": "ome_alert_policies",
    "description": "Manage OME alert policies.",
    "body": [
      "dellemc.openmanage.ome_alert_policies:",
      "\thostname: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#actions: ${5:}",
      "\t#all_devices: ${6:}",
      "\t#any_undiscovered_devices: ${7:}",
      "\t#ca_path: ${8:}",
      "\t#category: ${9:}",
      "\t#date_and_time: ${10:}",
      "\t#description: ${11:}",
      "\t#device_group: ${12:}",
      "\t#device_service_tag: ${13:}",
      "\t#enable: ${14:}",
      "\t#message_file: ${15:}",
      "\t#message_ids: ${16:}",
      "\t#new_name: ${17:}",
      "\t#port: ${18:443}",
      "\t#severity: ${19:all|unknown|info|normal|warning|critical}",
      "\t#specific_undiscovered_devices: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#timeout: ${22:30}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "ome_alert_policies_actions_info": {
    "prefix": "ome_alert_policies_actions_info",
    "description": "Get information on actions of alert policies.",
    "body": [
      "dellemc.openmanage.ome_alert_policies_actions_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "ome_alert_policies_category_info": {
    "prefix": "ome_alert_policies_category_info",
    "description": "Retrieves information of all OME alert policy categories.",
    "body": [
      "dellemc.openmanage.ome_alert_policies_category_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "ome_alert_policies_info": {
    "prefix": "ome_alert_policies_info",
    "description": "Retrieves information of one or more OME alert policies.",
    "body": [
      "dellemc.openmanage.ome_alert_policies_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#policy_name: ${5:}",
      "\t#port: ${6:443}",
      "\t#timeout: ${7:30}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "ome_alert_policies_message_id_info": {
    "prefix": "ome_alert_policies_message_id_info",
    "description": "Get message ID information of alert policies.",
    "body": [
      "dellemc.openmanage.ome_alert_policies_message_id_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "ome_application_alerts_smtp": {
    "prefix": "ome_application_alerts_smtp",
    "description": "This module allows to configure SMTP or email configurations",
    "body": [
      "dellemc.openmanage.ome_application_alerts_smtp:",
      "\tdestination_address: ${1:}",
      "\tenable_authentication: ${2:}",
      "\thostname: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#credentials: ${7:}",
      "\t#port: ${8:443}",
      "\t#port_number: ${9:}",
      "\t#timeout: ${10:30}",
      "\t#use_ssl: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "ome_application_alerts_syslog": {
    "prefix": "ome_application_alerts_syslog",
    "description": "Configure syslog forwarding settings on OpenManage Enterprise and OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_application_alerts_syslog:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#syslog_servers: ${6:}",
      "\t#timeout: ${7:30}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "ome_application_certificate": {
    "prefix": "ome_application_certificate",
    "description": "This module allows to generate a CSR and upload the certificate",
    "body": [
      "dellemc.openmanage.ome_application_certificate:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#business_name: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#command: ${6:#generate_csr|upload}",
      "\t#country: ${7:}",
      "\t#country_state: ${8:}",
      "\t#department_name: ${9:}",
      "\t#distinguished_name: ${10:}",
      "\t#email: ${11:}",
      "\t#locality: ${12:}",
      "\t#port: ${13:443}",
      "\t#subject_alternative_names: ${14:}",
      "\t#timeout: ${15:30}",
      "\t#upload_file: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "ome_application_console_preferences": {
    "prefix": "ome_application_console_preferences",
    "description": "Configure console preferences on OpenManage Enterprise.",
    "body": [
      "dellemc.openmanage.ome_application_console_preferences:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#builtin_appliance_share: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#device_health: ${6:}",
      "\t#discovery_settings: ${7:}",
      "\t#email_sender_settings: ${8:}",
      "\t#metrics_collection_settings: ${9:}",
      "\t#mx7000_onboarding_preferences: ${10:all|chassis}",
      "\t#port: ${11:443}",
      "\t#report_row_limit: ${12:}",
      "\t#server_initiated_discovery: ${13:}",
      "\t#timeout: ${14:30}",
      "\t#trap_forwarding_format: ${15:Original|Normalized}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "ome_application_network_address": {
    "prefix": "ome_application_network_address",
    "description": "Updates the network configuration on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_application_network_address:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#dns_configuration: ${5:}",
      "\t#enable_nic: ${6:true}",
      "\t#interface_name: ${7:}",
      "\t#ipv4_configuration: ${8:}",
      "\t#ipv6_configuration: ${9:}",
      "\t#management_vlan: ${10:}",
      "\t#port: ${11:443}",
      "\t#reboot_delay: ${12:}",
      "\t#timeout: ${13:30}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "ome_application_network_proxy": {
    "prefix": "ome_application_network_proxy",
    "description": "Updates the proxy configuration on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_application_network_proxy:",
      "\tenable_proxy: ${1:}",
      "\thostname: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#enable_authentication: ${6:}",
      "\t#ip_address: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_password: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#proxy_username: ${11:}",
      "\t#timeout: ${12:30}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ome_application_network_settings": {
    "prefix": "ome_application_network_settings",
    "description": "This module allows you to configure the session inactivity timeout settings",
    "body": [
      "dellemc.openmanage.ome_application_network_settings:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#session_inactivity_timeout: ${6:}",
      "\t#timeout: ${7:30}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "ome_application_network_time": {
    "prefix": "ome_application_network_time",
    "description": "Updates the network time on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_application_network_time:",
      "\tenable_ntp: ${1:}",
      "\thostname: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#port: ${6:443}",
      "\t#primary_ntp_address: ${7:}",
      "\t#secondary_ntp_address1: ${8:}",
      "\t#secondary_ntp_address2: ${9:}",
      "\t#system_time: ${10:}",
      "\t#time_zone: ${11:}",
      "\t#timeout: ${12:30}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ome_application_network_webserver": {
    "prefix": "ome_application_network_webserver",
    "description": "Updates the Web server configuration on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_application_network_webserver:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#timeout: ${6:30}",
      "\t#validate_certs: ${7:true}",
      "\t#webserver_port: ${8:}",
      "\t#webserver_timeout: ${9:}"
    ]
  },
  "ome_application_security_settings": {
    "prefix": "ome_application_security_settings",
    "description": "Configure the login security properties",
    "body": [
      "dellemc.openmanage.ome_application_security_settings:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#fips_mode_enable: ${5:}",
      "\t#job_wait: ${6:true}",
      "\t#job_wait_timeout: ${7:120}",
      "\t#login_lockout_policy: ${8:}",
      "\t#port: ${9:443}",
      "\t#restrict_allowed_ip_range: ${10:}",
      "\t#timeout: ${11:30}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "ome_chassis_slots": {
    "prefix": "ome_chassis_slots",
    "description": "Rename sled slots on OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_chassis_slots:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#device_options: ${5:}",
      "\t#port: ${6:443}",
      "\t#slot_options: ${7:}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_configuration_compliance_baseline": {
    "prefix": "ome_configuration_compliance_baseline",
    "description": "Create, modify, and delete a configuration compliance baseline and remediate non-compliant devices on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_configuration_compliance_baseline:",
      "\thostname: ${1:}",
      "\tnames: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#command: ${6:#create|modify|delete|remediate}",
      "\t#description: ${7:}",
      "\t#device_group_names: ${8:}",
      "\t#device_ids: ${9:}",
      "\t#device_service_tags: ${10:}",
      "\t#job_wait: ${11:true}",
      "\t#job_wait_timeout: ${12:10800}",
      "\t#new_name: ${13:}",
      "\t#port: ${14:443}",
      "\t#template_id: ${15:}",
      "\t#template_name: ${16:}",
      "\t#timeout: ${17:30}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "ome_configuration_compliance_info": {
    "prefix": "ome_configuration_compliance_info",
    "description": "Device compliance report for devices managed in OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_configuration_compliance_info:",
      "\tbaseline: ${1:}",
      "\thostname: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#device_id: ${6:}",
      "\t#device_service_tag: ${7:}",
      "\t#port: ${8:443}",
      "\t#timeout: ${9:30}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "ome_device_group": {
    "prefix": "ome_device_group",
    "description": "Add or remove device(s) from a static device group on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_device_group:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#device_ids: ${5:}",
      "\t#device_service_tags: ${6:}",
      "\t#group_id: ${7:}",
      "\t#ip_addresses: ${8:}",
      "\t#name: ${9:}",
      "\t#port: ${10:443}",
      "\t#state: ${11:#present|absent}",
      "\t#timeout: ${12:30}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ome_device_info": {
    "prefix": "ome_device_info",
    "description": "Retrieves the information of devices inventoried by OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_device_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#fact_subset: ${5:#basic_inventory|detailed_inventory|subsystem_health}",
      "\t#port: ${6:443}",
      "\t#system_query_options: ${7:}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_device_local_access_configuration": {
    "prefix": "ome_device_local_access_configuration",
    "description": "Configure local access settings on OpenManage Enterprise Modular.",
    "body": [
      "dellemc.openmanage.ome_device_local_access_configuration:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#chassis_power_button: ${5:}",
      "\t#device_id: ${6:}",
      "\t#device_service_tag: ${7:}",
      "\t#enable_chassis_direct_access: ${8:}",
      "\t#enable_kvm_access: ${9:}",
      "\t#lcd: ${10:}",
      "\t#port: ${11:443}",
      "\t#quick_sync: ${12:}",
      "\t#timeout: ${13:30}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "ome_device_location": {
    "prefix": "ome_device_location",
    "description": "Configure device location settings on OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_device_location:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#aisle: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#data_center: ${6:}",
      "\t#device_id: ${7:}",
      "\t#device_service_tag: ${8:}",
      "\t#location: ${9:}",
      "\t#port: ${10:443}",
      "\t#rack: ${11:}",
      "\t#rack_slot: ${12:}",
      "\t#room: ${13:}",
      "\t#timeout: ${14:30}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "ome_device_mgmt_network": {
    "prefix": "ome_device_mgmt_network",
    "description": "Configure network settings of devices on OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_device_mgmt_network:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#delay: ${5:0}",
      "\t#device_id: ${6:}",
      "\t#device_service_tag: ${7:}",
      "\t#dns_configuration: ${8:}",
      "\t#dns_server_settings: ${9:}",
      "\t#enable_nic: ${10:true}",
      "\t#ipv4_configuration: ${11:}",
      "\t#ipv6_configuration: ${12:}",
      "\t#management_vlan: ${13:}",
      "\t#port: ${14:443}",
      "\t#timeout: ${15:30}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "ome_device_network_services": {
    "prefix": "ome_device_network_services",
    "description": "Configure chassis network services settings on OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_device_network_services:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#device_id: ${5:}",
      "\t#device_service_tag: ${6:}",
      "\t#port: ${7:443}",
      "\t#remote_racadm_settings: ${8:}",
      "\t#snmp_settings: ${9:}",
      "\t#ssh_settings: ${10:}",
      "\t#timeout: ${11:30}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "ome_device_power_settings": {
    "prefix": "ome_device_power_settings",
    "description": "Configure chassis power settings on OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_device_power_settings:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#device_id: ${5:}",
      "\t#device_service_tag: ${6:}",
      "\t#hot_spare_configuration: ${7:}",
      "\t#port: ${8:443}",
      "\t#power_configuration: ${9:}",
      "\t#redundancy_configuration: ${10:}",
      "\t#timeout: ${11:30}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "ome_device_quick_deploy": {
    "prefix": "ome_device_quick_deploy",
    "description": "Configure Quick Deploy settings on OpenManage Enterprise Modular.",
    "body": [
      "dellemc.openmanage.ome_device_quick_deploy:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tquick_deploy_options: ${3:}",
      "\tsetting_type: ${4:ServerQuickDeploy|IOMQuickDeploy}",
      "\tusername: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#device_id: ${7:}",
      "\t#device_service_tag: ${8:}",
      "\t#job_wait: ${9:true}",
      "\t#job_wait_timeout: ${10:120}",
      "\t#port: ${11:443}",
      "\t#timeout: ${12:30}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ome_devices": {
    "prefix": "ome_devices",
    "description": "Perform device-specific operations on target devices",
    "body": [
      "dellemc.openmanage.ome_devices:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#device_action: ${5:#refresh_inventory|reset_idrac|clear_idrac_job_queue}",
      "\t#device_ids: ${6:}",
      "\t#device_service_tags: ${7:}",
      "\t#job_description: ${8:}",
      "\t#job_name: ${9:}",
      "\t#job_schedule: ${10:startnow}",
      "\t#job_wait: ${11:true}",
      "\t#job_wait_timeout: ${12:1200}",
      "\t#port: ${13:443}",
      "\t#state: ${14:#present|absent}",
      "\t#timeout: ${15:30}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "ome_diagnostics": {
    "prefix": "ome_diagnostics",
    "description": "Export technical support logs(TSR) to network share location",
    "body": [
      "dellemc.openmanage.ome_diagnostics:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tshare_address: ${3:}",
      "\tshare_name: ${4:}",
      "\tshare_type: ${5:NFS|CIFS}",
      "\tusername: ${6:}",
      "\t#ca_path: ${7:}",
      "\t#device_group_name: ${8:}",
      "\t#device_ids: ${9:}",
      "\t#device_service_tags: ${10:}",
      "\t#job_wait: ${11:true}",
      "\t#job_wait_timeout: ${12:60}",
      "\t#lead_chassis_only: ${13:false}",
      "\t#log_selectors: ${14:OS_LOGS|RAID_LOGS|DEBUG_LOGS}",
      "\t#log_type: ${15:application|#support_assist_collection|supportassist_collection}",
      "\t#mask_sensitive_info: ${16:false}",
      "\t#port: ${17:443}",
      "\t#share_domain: ${18:}",
      "\t#share_password: ${19:}",
      "\t#share_user: ${20:}",
      "\t#test_connection: ${21:false}",
      "\t#timeout: ${22:30}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "ome_discovery": {
    "prefix": "ome_discovery",
    "description": "Create, modify, or delete a discovery job on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_discovery:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#community_string: ${5:false}",
      "\t#cron: ${6:}",
      "\t#discovery_config_targets: ${7:}",
      "\t#discovery_id: ${8:}",
      "\t#discovery_job_name: ${9:}",
      "\t#email_recipient: ${10:}",
      "\t#ignore_partial_failure: ${11:false}",
      "\t#job_wait: ${12:true}",
      "\t#job_wait_timeout: ${13:10800}",
      "\t#new_name: ${14:}",
      "\t#port: ${15:443}",
      "\t#schedule: ${16:#RunNow|RunLater}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:30}",
      "\t#trap_destination: ${19:false}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "ome_domain_user_groups": {
    "prefix": "ome_domain_user_groups",
    "description": "Create, modify, or delete an Active Directory/LDAP user group on OpenManage Enterprise and OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_domain_user_groups:",
      "\tgroup_name: ${1:}",
      "\thostname: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#directory_id: ${6:}",
      "\t#directory_name: ${7:}",
      "\t#directory_type: ${8:#AD|LDAP}",
      "\t#domain_password: ${9:}",
      "\t#domain_username: ${10:}",
      "\t#port: ${11:443}",
      "\t#role: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#timeout: ${14:30}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "ome_firmware": {
    "prefix": "ome_firmware",
    "description": "Update firmware on PowerEdge devices and its components through OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_firmware:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#baseline_name: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#components: ${6:[]}",
      "\t#device_group_names: ${7:}",
      "\t#device_id: ${8:}",
      "\t#device_service_tag: ${9:}",
      "\t#devices: ${10:}",
      "\t#dup_file: ${11:}",
      "\t#port: ${12:443}",
      "\t#reboot_type: ${13:GracefulReboot|#GracefulRebootForce|PowerCycle}",
      "\t#schedule: ${14:#RebootNow|StageForNextReboot}",
      "\t#timeout: ${15:30}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "ome_firmware_baseline": {
    "prefix": "ome_firmware_baseline",
    "description": "Create, modify, or delete a firmware baseline on OpenManage Enterprise or OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_firmware_baseline:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#baseline_description: ${4:}",
      "\t#baseline_id: ${5:}",
      "\t#baseline_name: ${6:}",
      "\t#ca_path: ${7:}",
      "\t#catalog_name: ${8:}",
      "\t#device_group_names: ${9:}",
      "\t#device_ids: ${10:}",
      "\t#device_service_tags: ${11:}",
      "\t#downgrade_enabled: ${12:}",
      "\t#filter_no_reboot_required: ${13:}",
      "\t#is_64_bit: ${14:}",
      "\t#job_wait: ${15:true}",
      "\t#job_wait_timeout: ${16:600}",
      "\t#new_baseline_name: ${17:}",
      "\t#port: ${18:443}",
      "\t#state: ${19:#present|absent}",
      "\t#timeout: ${20:30}",
      "\t#validate_certs: ${21:true}"
    ]
  },
  "ome_firmware_baseline_compliance_info": {
    "prefix": "ome_firmware_baseline_compliance_info",
    "description": "Retrieves baseline compliance details on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_firmware_baseline_compliance_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#baseline_name: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#device_group_names: ${6:}",
      "\t#device_ids: ${7:}",
      "\t#device_service_tags: ${8:}",
      "\t#port: ${9:443}",
      "\t#timeout: ${10:30}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "ome_firmware_baseline_info": {
    "prefix": "ome_firmware_baseline_info",
    "description": "Retrieves baseline details from OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_firmware_baseline_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#baseline_name: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#port: ${6:443}",
      "\t#timeout: ${7:30}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "ome_firmware_catalog": {
    "prefix": "ome_firmware_catalog",
    "description": "Create, modify, or delete a firmware catalog on OpenManage Enterprise or OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_firmware_catalog:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#catalog_description: ${5:}",
      "\t#catalog_id: ${6:}",
      "\t#catalog_name: ${7:}",
      "\t#check_certificate: ${8:false}",
      "\t#file_name: ${9:}",
      "\t#job_wait: ${10:true}",
      "\t#job_wait_timeout: ${11:600}",
      "\t#new_catalog_name: ${12:}",
      "\t#port: ${13:443}",
      "\t#repository_domain: ${14:}",
      "\t#repository_password: ${15:}",
      "\t#repository_type: ${16:NFS|CIFS|HTTP|HTTPS|DELL_ONLINE}",
      "\t#repository_username: ${17:}",
      "\t#source: ${18:}",
      "\t#source_path: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#timeout: ${21:30}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "ome_groups": {
    "prefix": "ome_groups",
    "description": "Manages static device groups on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_groups:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#description: ${5:}",
      "\t#group_id: ${6:}",
      "\t#name: ${7:}",
      "\t#new_name: ${8:}",
      "\t#parent_group_id: ${9:}",
      "\t#parent_group_name: ${10:Static Groups}",
      "\t#port: ${11:443}",
      "\t#state: ${12:#present|absent}",
      "\t#timeout: ${13:30}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "ome_identity_pool": {
    "prefix": "ome_identity_pool",
    "description": "Manages identity pool settings on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_identity_pool:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tpool_name: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#ethernet_settings: ${6:}",
      "\t#fc_settings: ${7:}",
      "\t#fcoe_settings: ${8:}",
      "\t#iscsi_settings: ${9:}",
      "\t#new_pool_name: ${10:}",
      "\t#pool_description: ${11:}",
      "\t#port: ${12:443}",
      "\t#state: ${13:#present|absent}",
      "\t#timeout: ${14:30}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "ome_job_info": {
    "prefix": "ome_job_info",
    "description": "Get job details for a given job ID or an entire job queue on OpenMange Enterprise",
    "body": [
      "dellemc.openmanage.ome_job_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#fetch_execution_history: ${5:false}",
      "\t#job_id: ${6:}",
      "\t#port: ${7:443}",
      "\t#system_query_options: ${8:}",
      "\t#timeout: ${9:30}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "ome_network_port_breakout": {
    "prefix": "ome_network_port_breakout",
    "description": "This module allows to automate the port portioning or port breakout to logical sub ports",
    "body": [
      "dellemc.openmanage.ome_network_port_breakout:",
      "\tbreakout_type: ${1:}",
      "\thostname: ${2:}",
      "\tpassword: ${3:}",
      "\ttarget_port: ${4:}",
      "\tusername: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#port: ${7:443}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_network_vlan": {
    "prefix": "ome_network_vlan",
    "description": "Create, modify & delete a VLAN",
    "body": [
      "dellemc.openmanage.ome_network_vlan:",
      "\thostname: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#description: ${6:}",
      "\t#new_name: ${7:}",
      "\t#port: ${8:443}",
      "\t#state: ${9:#present|absent}",
      "\t#timeout: ${10:30}",
      "\t#type: ${11:General Purpose (Bronze)|General Purpose (Silver)|General Purpose (Gold)|General Purpose (Platinum)|Cluster Interconnect|Hypervisor Management|Storage - iSCSI|Storage - FCoE|Storage - Data Replication|VM Migration|VMWare FT Logging}",
      "\t#validate_certs: ${12:true}",
      "\t#vlan_maximum: ${13:}",
      "\t#vlan_minimum: ${14:}"
    ]
  },
  "ome_network_vlan_info": {
    "prefix": "ome_network_vlan_info",
    "description": "Retrieves the information about networks VLAN(s) present in OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_network_vlan_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#id: ${5:}",
      "\t#name: ${6:}",
      "\t#port: ${7:443}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_powerstate": {
    "prefix": "ome_powerstate",
    "description": "Performs the power management operations on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_powerstate:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tpower_state: ${3:on|off|coldboot|warmboot|shutdown}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#device_id: ${6:}",
      "\t#device_service_tag: ${7:}",
      "\t#port: ${8:443}",
      "\t#timeout: ${9:30}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "ome_profile": {
    "prefix": "ome_profile",
    "description": "Create, modify, delete, assign, unassign and migrate a profile on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_profile:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#attributes: ${4:}",
      "\t#boot_to_network_iso: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#command: ${7:#create|modify|delete|assign|unassign|migrate}",
      "\t#description: ${8:}",
      "\t#device_id: ${9:}",
      "\t#device_service_tag: ${10:}",
      "\t#filters: ${11:}",
      "\t#force: ${12:false}",
      "\t#name: ${13:}",
      "\t#name_prefix: ${14:Profile}",
      "\t#new_name: ${15:}",
      "\t#number_of_profiles: ${16:1}",
      "\t#port: ${17:443}",
      "\t#template_id: ${18:}",
      "\t#template_name: ${19:}",
      "\t#timeout: ${20:30}",
      "\t#validate_certs: ${21:true}"
    ]
  },
  "ome_profile_info": {
    "prefix": "ome_profile_info",
    "description": "Retrieve profiles with attribute details",
    "body": [
      "dellemc.openmanage.ome_profile_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#profile_id: ${6:}",
      "\t#profile_name: ${7:}",
      "\t#system_query_options: ${8:}",
      "\t#template_id: ${9:}",
      "\t#template_name: ${10:}",
      "\t#timeout: ${11:30}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "ome_server_interface_profile_info": {
    "prefix": "ome_server_interface_profile_info",
    "description": "Retrieves the information of server interface profile on OpenManage Enterprise Modular.",
    "body": [
      "dellemc.openmanage.ome_server_interface_profile_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#device_id: ${5:}",
      "\t#device_service_tag: ${6:}",
      "\t#port: ${7:443}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_server_interface_profiles": {
    "prefix": "ome_server_interface_profiles",
    "description": "Configure server interface profiles",
    "body": [
      "dellemc.openmanage.ome_server_interface_profiles:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#device_id: ${5:}",
      "\t#device_service_tag: ${6:}",
      "\t#job_wait: ${7:true}",
      "\t#job_wait_timeout: ${8:120}",
      "\t#nic_configuration: ${9:}",
      "\t#nic_teaming: ${10:LACP|NoTeaming|Other}",
      "\t#port: ${11:443}",
      "\t#timeout: ${12:30}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ome_smart_fabric": {
    "prefix": "ome_smart_fabric",
    "description": "Create, modify or delete a fabric on OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_smart_fabric:",
      "\thostname: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#description: ${6:}",
      "\t#fabric_design: ${7:2xMX5108n_Ethernet_Switches_in_same_chassis|2xMX9116n_Fabric_Switching_Engines_in_same_chassis|2xMX9116n_Fabric_Switching_Engines_in_different_chassis}",
      "\t#new_name: ${8:}",
      "\t#override_LLDP_configuration: ${9:Enabled|Disabled}",
      "\t#port: ${10:443}",
      "\t#primary_switch_service_tag: ${11:}",
      "\t#secondary_switch_service_tag: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#timeout: ${14:30}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "ome_smart_fabric_info": {
    "prefix": "ome_smart_fabric_info",
    "description": "Retrieves the information of smart fabrics inventoried by OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_smart_fabric_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#fabric_id: ${5:}",
      "\t#fabric_name: ${6:}",
      "\t#port: ${7:443}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_smart_fabric_uplink": {
    "prefix": "ome_smart_fabric_uplink",
    "description": "Create, modify or delete a uplink for a fabric on OpenManage Enterprise Modular",
    "body": [
      "dellemc.openmanage.ome_smart_fabric_uplink:",
      "\tfabric_name: ${1:}",
      "\thostname: ${2:}",
      "\tname: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#description: ${7:}",
      "\t#new_name: ${8:}",
      "\t#port: ${9:443}",
      "\t#primary_switch_ports: ${10:}",
      "\t#primary_switch_service_tag: ${11:}",
      "\t#secondary_switch_ports: ${12:}",
      "\t#secondary_switch_service_tag: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#tagged_networks: ${15:}",
      "\t#timeout: ${16:30}",
      "\t#ufd_enable: ${17:Enabled|Disabled}",
      "\t#untagged_network: ${18:}",
      "\t#uplink_type: ${19:Ethernet|FCoE|FC Gateway|FC Direct Attach|Ethernet - No Spanning Tree}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "ome_smart_fabric_uplink_info": {
    "prefix": "ome_smart_fabric_uplink_info",
    "description": "Retrieve details of fabric uplink on OpenManage Enterprise Modular.",
    "body": [
      "dellemc.openmanage.ome_smart_fabric_uplink_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#fabric_id: ${5:}",
      "\t#fabric_name: ${6:}",
      "\t#port: ${7:443}",
      "\t#timeout: ${8:30}",
      "\t#uplink_id: ${9:}",
      "\t#uplink_name: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "ome_template": {
    "prefix": "ome_template",
    "description": "Create, modify, deploy, delete, export, import and clone a template on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_template:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#attributes: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#command: ${6:#create|modify|deploy|delete|export|import|clone}",
      "\t#device_group_names: ${7:[]}",
      "\t#device_id: ${8:[]}",
      "\t#device_service_tag: ${9:[]}",
      "\t#job_wait: ${10:true}",
      "\t#job_wait_timeout: ${11:1200}",
      "\t#port: ${12:443}",
      "\t#template_id: ${13:}",
      "\t#template_name: ${14:}",
      "\t#template_view_type: ${15:#Deployment|Compliance|Inventory|Sample|None}",
      "\t#timeout: ${16:30}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "ome_template_identity_pool": {
    "prefix": "ome_template_identity_pool",
    "description": "Attach or detach an identity pool to a requested template on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_template_identity_pool:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\ttemplate_name: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#identity_pool_name: ${6:}",
      "\t#port: ${7:443}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_template_info": {
    "prefix": "ome_template_info",
    "description": "Retrieves template details from OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_template_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#system_query_options: ${6:}",
      "\t#template_id: ${7:}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_template_network_vlan": {
    "prefix": "ome_template_network_vlan",
    "description": "Set tagged and untagged vlans to native network card supported by a template on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_template_network_vlan:",
      "\thostname: ${1:}",
      "\tnic_identifier: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#port: ${6:443}",
      "\t#propagate_vlan: ${7:true}",
      "\t#tagged_networks: ${8:}",
      "\t#template_id: ${9:}",
      "\t#template_name: ${10:}",
      "\t#timeout: ${11:30}",
      "\t#untagged_networks: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ome_template_network_vlan_info": {
    "prefix": "ome_template_network_vlan_info",
    "description": "Retrieves network configuration of template.",
    "body": [
      "dellemc.openmanage.ome_template_network_vlan_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#ca_path: ${4:}",
      "\t#port: ${5:443}",
      "\t#template_id: ${6:}",
      "\t#template_name: ${7:}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ome_user": {
    "prefix": "ome_user",
    "description": "Create, modify or delete a user on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_user:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#attributes: ${4:{\\}}",
      "\t#ca_path: ${5:}",
      "\t#name: ${6:}",
      "\t#port: ${7:443}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:30}",
      "\t#user_id: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "ome_user_info": {
    "prefix": "ome_user_info",
    "description": "Retrieves details of all accounts or a specific account on OpenManage Enterprise",
    "body": [
      "dellemc.openmanage.ome_user_info:",
      "\thostname: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#account_id: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#port: ${6:443}",
      "\t#system_query_options: ${7:}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "redfish_event_subscription": {
    "prefix": "redfish_event_subscription",
    "description": "Manage Redfish Subscriptions",
    "body": [
      "dellemc.openmanage.redfish_event_subscription:",
      "\tbaseuri: ${1:}",
      "\tdestination: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#event_format_type: ${6:#Event|MetricReport}",
      "\t#event_type: ${7:#Alert|MetricReport}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:30}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "redfish_firmware": {
    "prefix": "redfish_firmware",
    "description": "To perform a component firmware update using the image file available on the local or remote system",
    "body": [
      "dellemc.openmanage.redfish_firmware:",
      "\tbaseuri: ${1:}",
      "\timage_uri: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#job_wait: ${6:true}",
      "\t#job_wait_timeout: ${7:3600}",
      "\t#timeout: ${8:30}",
      "\t#transfer_protocol: ${9:CIFS|FTP|#HTTP|HTTPS|NSF|OEM|SCP|SFTP|TFTP}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "redfish_firmware_rollback": {
    "prefix": "redfish_firmware_rollback",
    "description": "To perform a component firmware rollback using component name",
    "body": [
      "dellemc.openmanage.redfish_firmware_rollback:",
      "\tbaseuri: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#reboot: ${6:true}",
      "\t#reboot_timeout: ${7:900}",
      "\t#timeout: ${8:30}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "redfish_powerstate": {
    "prefix": "redfish_powerstate",
    "description": "Manage device power state",
    "body": [
      "dellemc.openmanage.redfish_powerstate:",
      "\tbaseuri: ${1:}",
      "\tpassword: ${2:}",
      "\treset_type: ${3:ForceOff|ForceOn|ForceRestart|GracefulRestart|GracefulShutdown|Nmi|On|PowerCycle|PushPowerButton}",
      "\tusername: ${4:}",
      "\t#ca_path: ${5:}",
      "\t#resource_id: ${6:}",
      "\t#timeout: ${7:30}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "redfish_storage_volume": {
    "prefix": "redfish_storage_volume",
    "description": "Manages the storage volume configuration",
    "body": [
      "dellemc.openmanage.redfish_storage_volume:",
      "\tbaseuri: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#apply_time: ${4:Immediate|OnReset}",
      "\t#block_size_bytes: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#capacity_bytes: ${7:}",
      "\t#command: ${8:initialize}",
      "\t#controller_id: ${9:}",
      "\t#drives: ${10:}",
      "\t#encrypted: ${11:}",
      "\t#encryption_types: ${12:NativeDriveEncryption|ControllerAssisted|SoftwareAssisted}",
      "\t#force_reboot: ${13:false}",
      "\t#initialize_type: ${14:#Fast|Slow}",
      "\t#job_wait: ${15:false}",
      "\t#job_wait_timeout: ${16:1200}",
      "\t#name: ${17:}",
      "\t#oem: ${18:}",
      "\t#optimum_io_size_bytes: ${19:}",
      "\t#raid_type: ${20:RAID0|RAID1|RAID5|RAID6|RAID10|RAID50|RAID60}",
      "\t#reboot_server: ${21:false}",
      "\t#state: ${22:present|absent}",
      "\t#timeout: ${23:30}",
      "\t#validate_certs: ${24:true}",
      "\t#volume_id: ${25:}",
      "\t#volume_type: ${26:NonRedundant|Mirrored|StripedWithParity|SpannedMirrors|SpannedStripesWithParity}"
    ]
  },
  "fmgr_adom_options": {
    "prefix": "fmgr_adom_options",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_adom_options:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#adom_options: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_antivirus_mmschecksum": {
    "prefix": "fmgr_antivirus_mmschecksum",
    "description": "Configure MMS content checksum list.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_mmschecksum:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#antivirus_mmschecksum: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_mmschecksum_entries": {
    "prefix": "fmgr_antivirus_mmschecksum_entries",
    "description": "modify this MMS content checksum list",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_mmschecksum_entries:",
      "\tadom: ${1:}",
      "\tmms-checksum: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#antivirus_mmschecksum_entries: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_antivirus_notification": {
    "prefix": "fmgr_antivirus_notification",
    "description": "Configure AntiVirus notification lists.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_notification:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#antivirus_notification: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_notification_entries": {
    "prefix": "fmgr_antivirus_notification_entries",
    "description": "modify this antivirus notification list",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_notification_entries:",
      "\tadom: ${1:}",
      "\tnotification: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#antivirus_notification_entries: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_antivirus_profile": {
    "prefix": "fmgr_antivirus_profile",
    "description": "Configure AntiVirus profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_cifs": {
    "prefix": "fmgr_antivirus_profile_cifs",
    "description": "Configure CIFS AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_cifs:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_cifs: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_contentdisarm": {
    "prefix": "fmgr_antivirus_profile_contentdisarm",
    "description": "AV Content Disarm and Reconstruction settings.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_contentdisarm:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_contentdisarm: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_ftp": {
    "prefix": "fmgr_antivirus_profile_ftp",
    "description": "Configure FTP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_ftp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_ftp: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_http": {
    "prefix": "fmgr_antivirus_profile_http",
    "description": "Configure HTTP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_http:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_http: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_imap": {
    "prefix": "fmgr_antivirus_profile_imap",
    "description": "Configure IMAP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_imap:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_imap: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_mapi": {
    "prefix": "fmgr_antivirus_profile_mapi",
    "description": "Configure MAPI AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_mapi:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_mapi: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_nacquar": {
    "prefix": "fmgr_antivirus_profile_nacquar",
    "description": "Configure AntiVirus quarantine settings.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_nacquar:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_nacquar: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_nntp": {
    "prefix": "fmgr_antivirus_profile_nntp",
    "description": "Configure NNTP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_nntp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_nntp: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_outbreakprevention": {
    "prefix": "fmgr_antivirus_profile_outbreakprevention",
    "description": "Configure Virus Outbreak Prevention settings.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_outbreakprevention:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_outbreakprevention: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_pop3": {
    "prefix": "fmgr_antivirus_profile_pop3",
    "description": "Configure POP3 AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_pop3:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_pop3: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_smb": {
    "prefix": "fmgr_antivirus_profile_smb",
    "description": "Configure SMB AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_smb:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_smb: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_smtp": {
    "prefix": "fmgr_antivirus_profile_smtp",
    "description": "Configure SMTP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_smtp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_smtp: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_ssh": {
    "prefix": "fmgr_antivirus_profile_ssh",
    "description": "Configure SFTP and SCP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_ssh:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_ssh: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_apcfgprofile": {
    "prefix": "fmgr_apcfgprofile",
    "description": "Configure AP local configuration profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_apcfgprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#apcfgprofile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_apcfgprofile_commandlist": {
    "prefix": "fmgr_apcfgprofile_commandlist",
    "description": "AP local configuration command list.",
    "body": [
      "fortinet.fortimanager.fmgr_apcfgprofile_commandlist:",
      "\tadom: ${1:}",
      "\tapcfg-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#apcfgprofile_commandlist: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_casi_profile": {
    "prefix": "fmgr_application_casi_profile",
    "description": "Cloud Access Security Inspection.",
    "body": [
      "fortinet.fortimanager.fmgr_application_casi_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_casi_profile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_casi_profile_entries": {
    "prefix": "fmgr_application_casi_profile_entries",
    "description": "Application entries.",
    "body": [
      "fortinet.fortimanager.fmgr_application_casi_profile_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_casi_profile_entries: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_categories": {
    "prefix": "fmgr_application_categories",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_application_categories:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_categories: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_custom": {
    "prefix": "fmgr_application_custom",
    "description": "Configure custom application signatures.",
    "body": [
      "fortinet.fortimanager.fmgr_application_custom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_custom: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_group": {
    "prefix": "fmgr_application_group",
    "description": "Configure firewall application groups.",
    "body": [
      "fortinet.fortimanager.fmgr_application_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_group: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_internetservice": {
    "prefix": "fmgr_application_internetservice",
    "description": "Show Internet service application.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservice:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#application_internetservice: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_application_internetservice_entry": {
    "prefix": "fmgr_application_internetservice_entry",
    "description": "Entries in the Internet service database.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservice_entry:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_internetservice_entry: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_internetservicecustom": {
    "prefix": "fmgr_application_internetservicecustom",
    "description": "Configure custom Internet service applications.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_internetservicecustom: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_internetservicecustom_disableentry": {
    "prefix": "fmgr_application_internetservicecustom_disableentry",
    "description": "Disable entries in the Internet service database.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom_disableentry:",
      "\tadom: ${1:}",
      "\tinternet-service-custom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_internetservicecustom_disableentry: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_internetservicecustom_disableentry_iprange": {
    "prefix": "fmgr_application_internetservicecustom_disableentry_iprange",
    "description": "IP ranges in the disable entry.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom_disableentry_iprange:",
      "\tadom: ${1:}",
      "\tdisable-entry: ${2:}",
      "\tinternet-service-custom: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#application_internetservicecustom_disableentry_iprange: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_application_internetservicecustom_entry": {
    "prefix": "fmgr_application_internetservicecustom_entry",
    "description": "Entries added to the Internet service database and custom database.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom_entry:",
      "\tadom: ${1:}",
      "\tinternet-service-custom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_internetservicecustom_entry: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_internetservicecustom_entry_portrange": {
    "prefix": "fmgr_application_internetservicecustom_entry_portrange",
    "description": "Port ranges in the custom entry.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom_entry_portrange:",
      "\tadom: ${1:}",
      "\tentry: ${2:}",
      "\tinternet-service-custom: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#application_internetservicecustom_entry_portrange: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_application_list": {
    "prefix": "fmgr_application_list",
    "description": "Configure application control lists.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_list: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_list_defaultnetworkservices": {
    "prefix": "fmgr_application_list_defaultnetworkservices",
    "description": "Default network service entries.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list_defaultnetworkservices:",
      "\tadom: ${1:}",
      "\tlist: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_list_defaultnetworkservices: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_list_entries": {
    "prefix": "fmgr_application_list_entries",
    "description": "Application list entries.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list_entries:",
      "\tadom: ${1:}",
      "\tlist: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_list_entries: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_list_entries_parameters": {
    "prefix": "fmgr_application_list_entries_parameters",
    "description": "Application parameters.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list_entries_parameters:",
      "\tadom: ${1:}",
      "\tentries: ${2:}",
      "\tlist: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#application_list_entries_parameters: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_application_list_entries_parameters_members": {
    "prefix": "fmgr_application_list_entries_parameters_members",
    "description": "Parameter tuple members.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list_entries_parameters_members:",
      "\tadom: ${1:}",
      "\tentries: ${2:}",
      "\tlist: ${3:}",
      "\tparameters: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#access_token: ${6:}",
      "\t#application_list_entries_parameters_members: ${7:}",
      "\t#bypass_validation: ${8:false}",
      "\t#enable_log: ${9:false}",
      "\t#forticloud_access_token: ${10:}",
      "\t#proposed_method: ${11:update|set|add}",
      "\t#rc_failed: ${12:}",
      "\t#rc_succeeded: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_arrpprofile": {
    "prefix": "fmgr_arrpprofile",
    "description": "Configure WiFi Automatic Radio Resource Provisioning",
    "body": [
      "fortinet.fortimanager.fmgr_arrpprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#arrpprofile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_authentication_scheme": {
    "prefix": "fmgr_authentication_scheme",
    "description": "Configure Authentication Schemes.",
    "body": [
      "fortinet.fortimanager.fmgr_authentication_scheme:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#authentication_scheme: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_bleprofile": {
    "prefix": "fmgr_bleprofile",
    "description": "Configure Bluetooth Low Energy profile.",
    "body": [
      "fortinet.fortimanager.fmgr_bleprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bleprofile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_bonjourprofile": {
    "prefix": "fmgr_bonjourprofile",
    "description": "Configure Bonjour profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_bonjourprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bonjourprofile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_bonjourprofile_policylist": {
    "prefix": "fmgr_bonjourprofile_policylist",
    "description": "Bonjour policy list.",
    "body": [
      "fortinet.fortimanager.fmgr_bonjourprofile_policylist:",
      "\tadom: ${1:}",
      "\tbonjour-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bonjourprofile_policylist: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_casb_profile": {
    "prefix": "fmgr_casb_profile",
    "description": "Configure CASB profile.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#casb_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_casb_profile_saasapplication": {
    "prefix": "fmgr_casb_profile_saasapplication",
    "description": "CASB profile SaaS application.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_profile_saasapplication:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#casb_profile_saasapplication: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_casb_profile_saasapplication_accessrule": {
    "prefix": "fmgr_casb_profile_saasapplication_accessrule",
    "description": "CASB profile access rule.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_profile_saasapplication_accessrule:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tsaas-application: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#casb_profile_saasapplication_accessrule: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_casb_profile_saasapplication_customcontrol": {
    "prefix": "fmgr_casb_profile_saasapplication_customcontrol",
    "description": "CASB profile custom control.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_profile_saasapplication_customcontrol:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tsaas-application: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#casb_profile_saasapplication_customcontrol: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_casb_profile_saasapplication_customcontrol_option": {
    "prefix": "fmgr_casb_profile_saasapplication_customcontrol_option",
    "description": "CASB custom control option.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_profile_saasapplication_customcontrol_option:",
      "\tadom: ${1:}",
      "\tcustom-control: ${2:}",
      "\tprofile: ${3:}",
      "\tsaas-application: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#access_token: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#casb_profile_saasapplication_customcontrol_option: ${8:}",
      "\t#enable_log: ${9:false}",
      "\t#forticloud_access_token: ${10:}",
      "\t#proposed_method: ${11:update|set|add}",
      "\t#rc_failed: ${12:}",
      "\t#rc_succeeded: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_casb_saasapplication": {
    "prefix": "fmgr_casb_saasapplication",
    "description": "Configure CASB SaaS application.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_saasapplication:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#casb_saasapplication: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_casb_useractivity": {
    "prefix": "fmgr_casb_useractivity",
    "description": "Configure CASB user activity.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_useractivity:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#casb_useractivity: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_casb_useractivity_controloptions": {
    "prefix": "fmgr_casb_useractivity_controloptions",
    "description": "CASB control options.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_useractivity_controloptions:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tuser-activity: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#casb_useractivity_controloptions: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_casb_useractivity_controloptions_operations": {
    "prefix": "fmgr_casb_useractivity_controloptions_operations",
    "description": "CASB control option operations.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_useractivity_controloptions_operations:",
      "\tadom: ${1:}",
      "\tcontrol-options: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tuser-activity: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#casb_useractivity_controloptions_operations: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_casb_useractivity_match": {
    "prefix": "fmgr_casb_useractivity_match",
    "description": "CASB user activity match rules.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_useractivity_match:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tuser-activity: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#casb_useractivity_match: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_casb_useractivity_match_rules": {
    "prefix": "fmgr_casb_useractivity_match_rules",
    "description": "CASB user activity rules.",
    "body": [
      "fortinet.fortimanager.fmgr_casb_useractivity_match_rules:",
      "\tadom: ${1:}",
      "\tmatch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tuser-activity: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#casb_useractivity_match_rules: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_certificate_template": {
    "prefix": "fmgr_certificate_template",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_certificate_template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#certificate_template: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cifs_domaincontroller": {
    "prefix": "fmgr_cifs_domaincontroller",
    "description": "Define known domain controller servers.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_domaincontroller:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cifs_domaincontroller: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cifs_profile": {
    "prefix": "fmgr_cifs_profile",
    "description": "Configure CIFS profile.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cifs_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cifs_profile_filefilter": {
    "prefix": "fmgr_cifs_profile_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_profile_filefilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cifs_profile_filefilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cifs_profile_filefilter_entries": {
    "prefix": "fmgr_cifs_profile_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_profile_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#cifs_profile_filefilter_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_cifs_profile_serverkeytab": {
    "prefix": "fmgr_cifs_profile_serverkeytab",
    "description": "Server keytab.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_profile_serverkeytab:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#cifs_profile_serverkeytab: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_clone": {
    "prefix": "fmgr_clone",
    "description": "Clone an object in FortiManager.",
    "body": [
      "fortinet.fortimanager.fmgr_clone:",
      "\tclone: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_cloud_orchestaws": {
    "prefix": "fmgr_cloud_orchestaws",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestaws:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestaws: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestawsconnector": {
    "prefix": "fmgr_cloud_orchestawsconnector",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestawsconnector:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestawsconnector: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestawstemplate_autoscaleexistingvpc": {
    "prefix": "fmgr_cloud_orchestawstemplate_autoscaleexistingvpc",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestawstemplate_autoscaleexistingvpc:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestawstemplate_autoscaleexistingvpc: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestawstemplate_autoscalenewvpc": {
    "prefix": "fmgr_cloud_orchestawstemplate_autoscalenewvpc",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestawstemplate_autoscalenewvpc:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestawstemplate_autoscalenewvpc: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestawstemplate_autoscaletgwnewvpc": {
    "prefix": "fmgr_cloud_orchestawstemplate_autoscaletgwnewvpc",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestawstemplate_autoscaletgwnewvpc:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestawstemplate_autoscaletgwnewvpc: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestration": {
    "prefix": "fmgr_cloud_orchestration",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestration:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestration: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_credentialstore_domaincontroller": {
    "prefix": "fmgr_credentialstore_domaincontroller",
    "description": "Define known domain controller servers.",
    "body": [
      "fortinet.fortimanager.fmgr_credentialstore_domaincontroller:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#credentialstore_domaincontroller: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_device_profile_fortianalyzer": {
    "prefix": "fmgr_devprof_device_profile_fortianalyzer",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_device_profile_fortianalyzer:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_device_profile_fortianalyzer: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_device_profile_fortiguard": {
    "prefix": "fmgr_devprof_device_profile_fortiguard",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_device_profile_fortiguard:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_device_profile_fortiguard: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_import": {
    "prefix": "fmgr_devprof_import",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_import:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#devprof_import: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_devprof_log_fortianalyzer_setting": {
    "prefix": "fmgr_devprof_log_fortianalyzer_setting",
    "description": "Global FortiAnalyzer settings.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_fortianalyzer_setting:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_log_fortianalyzer_setting: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_log_fortianalyzercloud_setting": {
    "prefix": "fmgr_devprof_log_fortianalyzercloud_setting",
    "description": "Global FortiAnalyzer Cloud settings.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_fortianalyzercloud_setting:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_log_fortianalyzercloud_setting: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_filter": {
    "prefix": "fmgr_devprof_log_syslogd_filter",
    "description": "Filters for remote system server.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_filter:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_log_syslogd_filter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_filter_excludelist": {
    "prefix": "fmgr_devprof_log_syslogd_filter_excludelist",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_filter_excludelist:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_log_syslogd_filter_excludelist: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_filter_excludelist_fields": {
    "prefix": "fmgr_devprof_log_syslogd_filter_excludelist_fields",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_filter_excludelist_fields:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\texclude-list: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#devprof_log_syslogd_filter_excludelist_fields: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_filter_freestyle": {
    "prefix": "fmgr_devprof_log_syslogd_filter_freestyle",
    "description": "Free style filters.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_filter_freestyle:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_log_syslogd_filter_freestyle: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_setting": {
    "prefix": "fmgr_devprof_log_syslogd_setting",
    "description": "Global settings for remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_setting:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_log_syslogd_setting: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_setting_customfieldname": {
    "prefix": "fmgr_devprof_log_syslogd_setting_customfieldname",
    "description": "Custom field name for CEF format logging.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_setting_customfieldname:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_log_syslogd_setting_customfieldname: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_system_centralmanagement": {
    "prefix": "fmgr_devprof_system_centralmanagement",
    "description": "Configure central management.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_centralmanagement:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_centralmanagement: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_centralmanagement_serverlist": {
    "prefix": "fmgr_devprof_system_centralmanagement_serverlist",
    "description": "Additional severs that the FortiGate can use for updates",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_centralmanagement_serverlist:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_system_centralmanagement_serverlist: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_system_dns": {
    "prefix": "fmgr_devprof_system_dns",
    "description": "Configure DNS.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_dns:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_dns: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_emailserver": {
    "prefix": "fmgr_devprof_system_emailserver",
    "description": "Configure the email server used by the FortiGate various things.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_emailserver:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_emailserver: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_global": {
    "prefix": "fmgr_devprof_system_global",
    "description": "Configure global attributes.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_global:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_global: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_ntp": {
    "prefix": "fmgr_devprof_system_ntp",
    "description": "Configure system NTP information.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_ntp:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_ntp: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_ntp_ntpserver": {
    "prefix": "fmgr_devprof_system_ntp_ntpserver",
    "description": "Configure the FortiGate to connect to any available third-party NTP server.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_ntp_ntpserver:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_system_ntp_ntpserver: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_admin": {
    "prefix": "fmgr_devprof_system_replacemsg_admin",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_admin:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_admin: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_alertmail": {
    "prefix": "fmgr_devprof_system_replacemsg_alertmail",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_alertmail:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_alertmail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_auth": {
    "prefix": "fmgr_devprof_system_replacemsg_auth",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_auth:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_auth: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_devicedetectionportal": {
    "prefix": "fmgr_devprof_system_replacemsg_devicedetectionportal",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_devicedetectionportal:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_devicedetectionportal: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_ec": {
    "prefix": "fmgr_devprof_system_replacemsg_ec",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_ec:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_ec: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_fortiguardwf": {
    "prefix": "fmgr_devprof_system_replacemsg_fortiguardwf",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_fortiguardwf:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_fortiguardwf: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_ftp": {
    "prefix": "fmgr_devprof_system_replacemsg_ftp",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_ftp:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_ftp: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_http": {
    "prefix": "fmgr_devprof_system_replacemsg_http",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_http:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_http: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_mail": {
    "prefix": "fmgr_devprof_system_replacemsg_mail",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_mail:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_mail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_mms": {
    "prefix": "fmgr_devprof_system_replacemsg_mms",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_mms:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_mms: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_nacquar": {
    "prefix": "fmgr_devprof_system_replacemsg_nacquar",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_nacquar:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_nacquar: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_nntp": {
    "prefix": "fmgr_devprof_system_replacemsg_nntp",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_nntp:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_nntp: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_spam": {
    "prefix": "fmgr_devprof_system_replacemsg_spam",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_spam:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_spam: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_sslvpn": {
    "prefix": "fmgr_devprof_system_replacemsg_sslvpn",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_sslvpn:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_sslvpn: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_trafficquota": {
    "prefix": "fmgr_devprof_system_replacemsg_trafficquota",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_trafficquota:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_trafficquota: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_utm": {
    "prefix": "fmgr_devprof_system_replacemsg_utm",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_utm:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_utm: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_webproxy": {
    "prefix": "fmgr_devprof_system_replacemsg_webproxy",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_webproxy:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_webproxy: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_snmp_community": {
    "prefix": "fmgr_devprof_system_snmp_community",
    "description": "SNMP community configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_community:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_system_snmp_community: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_system_snmp_community_hosts": {
    "prefix": "fmgr_devprof_system_snmp_community_hosts",
    "description": "Configure IPv4 SNMP managers",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_community_hosts:",
      "\tadom: ${1:}",
      "\tcommunity: ${2:}",
      "\tdevprof: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#devprof_system_snmp_community_hosts: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_devprof_system_snmp_community_hosts6": {
    "prefix": "fmgr_devprof_system_snmp_community_hosts6",
    "description": "Configure IPv6 SNMP managers.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_community_hosts6:",
      "\tadom: ${1:}",
      "\tcommunity: ${2:}",
      "\tdevprof: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#devprof_system_snmp_community_hosts6: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_devprof_system_snmp_sysinfo": {
    "prefix": "fmgr_devprof_system_snmp_sysinfo",
    "description": "SNMP system info configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_sysinfo:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_snmp_sysinfo: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_snmp_user": {
    "prefix": "fmgr_devprof_system_snmp_user",
    "description": "SNMP user configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_user:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_system_snmp_user: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_datatype": {
    "prefix": "fmgr_dlp_datatype",
    "description": "Configure predefined data type used by DLP blocking.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_datatype:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_datatype: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_dictionary": {
    "prefix": "fmgr_dlp_dictionary",
    "description": "Configure dictionaries used by DLP blocking.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_dictionary:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_dictionary: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_dictionary_entries": {
    "prefix": "fmgr_dlp_dictionary_entries",
    "description": "DLP dictionary entries.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_dictionary_entries:",
      "\tadom: ${1:}",
      "\tdictionary: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_dictionary_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_filepattern": {
    "prefix": "fmgr_dlp_filepattern",
    "description": "Configure file patterns used by DLP blocking.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_filepattern:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_filepattern: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_filepattern_entries": {
    "prefix": "fmgr_dlp_filepattern_entries",
    "description": "Configure file patterns used by DLP blocking.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_filepattern_entries:",
      "\tadom: ${1:}",
      "\tfilepattern: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_filepattern_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_fpsensitivity": {
    "prefix": "fmgr_dlp_fpsensitivity",
    "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_fpsensitivity:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_fpsensitivity: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_profile": {
    "prefix": "fmgr_dlp_profile",
    "description": "Configure DLP profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_profile_rule": {
    "prefix": "fmgr_dlp_profile_rule",
    "description": "Set up DLP rules for this profile.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_profile_rule:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_profile_rule: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_sensitivity": {
    "prefix": "fmgr_dlp_sensitivity",
    "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_sensitivity:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_sensitivity: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_sensor": {
    "prefix": "fmgr_dlp_sensor",
    "description": "Configure DLP sensors.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_sensor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_sensor: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_sensor_entries": {
    "prefix": "fmgr_dlp_sensor_entries",
    "description": "DLP sensor entries.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_sensor_entries:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_sensor_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_sensor_filter": {
    "prefix": "fmgr_dlp_sensor_filter",
    "description": "Set up DLP filters for this sensor.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_sensor_filter:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_sensor_filter: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dnsfilter_domainfilter": {
    "prefix": "fmgr_dnsfilter_domainfilter",
    "description": "Configure DNS domain filters.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_domainfilter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_domainfilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_domainfilter_entries": {
    "prefix": "fmgr_dnsfilter_domainfilter_entries",
    "description": "DNS domain filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_domainfilter_entries:",
      "\tadom: ${1:}",
      "\tdomain-filter: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dnsfilter_domainfilter_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dnsfilter_profile": {
    "prefix": "fmgr_dnsfilter_profile",
    "description": "Configure DNS domain filter profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_profile_dnstranslation": {
    "prefix": "fmgr_dnsfilter_profile_dnstranslation",
    "description": "DNS translation settings.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_dnstranslation:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dnsfilter_profile_dnstranslation: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dnsfilter_profile_domainfilter": {
    "prefix": "fmgr_dnsfilter_profile_domainfilter",
    "description": "Domain filter settings.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_domainfilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_profile_domainfilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_profile_ftgddns": {
    "prefix": "fmgr_dnsfilter_profile_ftgddns",
    "description": "FortiGuard DNS Filter settings.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_ftgddns:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_profile_ftgddns: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_profile_ftgddns_filters": {
    "prefix": "fmgr_dnsfilter_profile_ftgddns_filters",
    "description": "FortiGuard DNS domain filters.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_ftgddns_filters:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dnsfilter_profile_ftgddns_filters: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dnsfilter_profile_urlfilter": {
    "prefix": "fmgr_dnsfilter_profile_urlfilter",
    "description": "URL filter settings.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_urlfilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_profile_urlfilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_urlfilter": {
    "prefix": "fmgr_dnsfilter_urlfilter",
    "description": "Configure URL filter list.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_urlfilter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_urlfilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_urlfilter_entries": {
    "prefix": "fmgr_dnsfilter_urlfilter_entries",
    "description": "DNS URL filter.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_urlfilter_entries:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\turlfilter: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dnsfilter_urlfilter_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvm_cmd_add_device": {
    "prefix": "fmgr_dvm_cmd_add_device",
    "description": "Add a device to the Device Manager database.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_add_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_add_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_add_devlist": {
    "prefix": "fmgr_dvm_cmd_add_devlist",
    "description": "Add multiple devices to the Device Manager database.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_add_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_add_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_changehaseq": {
    "prefix": "fmgr_dvm_cmd_changehaseq",
    "description": "Modify HA sequence to promote a slave to become the master of the cluster.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_changehaseq:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_changehaseq: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_del_device": {
    "prefix": "fmgr_dvm_cmd_del_device",
    "description": "Delete a device.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_del_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_del_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_del_devlist": {
    "prefix": "fmgr_dvm_cmd_del_devlist",
    "description": "Delete a list of devices.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_del_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_del_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_discover_device": {
    "prefix": "fmgr_dvm_cmd_discover_device",
    "description": "Probe a remote device and retrieve its device information and system status.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_discover_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_discover_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_import_devlist": {
    "prefix": "fmgr_dvm_cmd_import_devlist",
    "description": "Import a list of ADOMs and devices.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_import_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_import_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_reload_devlist": {
    "prefix": "fmgr_dvm_cmd_reload_devlist",
    "description": "Retrieve a list of devices.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_reload_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_reload_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_update_device": {
    "prefix": "fmgr_dvm_cmd_update_device",
    "description": "Refresh the FGFM connection and system information of a device.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_update_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_update_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_update_devlist": {
    "prefix": "fmgr_dvm_cmd_update_devlist",
    "description": "Refresh FGFM connection and system information for a list of devices.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_update_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_update_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_adom": {
    "prefix": "fmgr_dvmdb_adom",
    "description": "ADOM table, most attributes are read-only and can only be changed internally.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_adom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#dvmdb_adom: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_adom_objectmember": {
    "prefix": "fmgr_dvmdb_adom_objectmember",
    "description": "ADOM table, most attributes are read-only and can only be changed internally.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_adom_objectmember:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_adom_objectmember: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_device": {
    "prefix": "fmgr_dvmdb_device",
    "description": "Device table, most attributes are read-only and can only be changed internally.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_device:",
      "\tadom: ${1:}",
      "\tdevice: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_device: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_device_replace_sn": {
    "prefix": "fmgr_dvmdb_device_replace_sn",
    "description": "Replace devices serial number with new value.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_device_replace_sn:",
      "\tadom: ${1:}",
      "\tdevice_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_device_replace_sn: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_device_vdom": {
    "prefix": "fmgr_dvmdb_device_vdom",
    "description": "Device VDOM table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_device_vdom:",
      "\tadom: ${1:}",
      "\tdevice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dvmdb_device_vdom: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvmdb_folder": {
    "prefix": "fmgr_dvmdb_folder",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_folder:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_folder: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_group": {
    "prefix": "fmgr_dvmdb_group",
    "description": "Device group table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_group: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_group_objectmember": {
    "prefix": "fmgr_dvmdb_group_objectmember",
    "description": "Device group table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_group_objectmember:",
      "\tadom: ${1:}",
      "\tgroup: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dvmdb_group_objectmember: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvmdb_metafields_adom": {
    "prefix": "fmgr_dvmdb_metafields_adom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_metafields_adom:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvmdb_metafields_adom: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_metafields_device": {
    "prefix": "fmgr_dvmdb_metafields_device",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_metafields_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvmdb_metafields_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_metafields_group": {
    "prefix": "fmgr_dvmdb_metafields_group",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_metafields_group:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvmdb_metafields_group: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_revision": {
    "prefix": "fmgr_dvmdb_revision",
    "description": "ADOM revision table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_revision:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_revision: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_script": {
    "prefix": "fmgr_dvmdb_script",
    "description": "Script table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_script:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_script: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_script_execute": {
    "prefix": "fmgr_dvmdb_script_execute",
    "description": "Run script.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_script_execute:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#dvmdb_script_execute: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_script_objectmember": {
    "prefix": "fmgr_dvmdb_script_objectmember",
    "description": "Script table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_script_objectmember:",
      "\tadom: ${1:}",
      "\tscript: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dvmdb_script_objectmember: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvmdb_script_scriptschedule": {
    "prefix": "fmgr_dvmdb_script_scriptschedule",
    "description": "Script schedule table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_script_scriptschedule:",
      "\tadom: ${1:}",
      "\tscript: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dvmdb_script_scriptschedule: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvmdb_upgrade": {
    "prefix": "fmgr_dvmdb_upgrade",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_upgrade:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvmdb_upgrade: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_workflow_approve": {
    "prefix": "fmgr_dvmdb_workflow_approve",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_approve:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_approve: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_discard": {
    "prefix": "fmgr_dvmdb_workflow_discard",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_discard:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workflow_drop": {
    "prefix": "fmgr_dvmdb_workflow_drop",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_drop:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workflow_reject": {
    "prefix": "fmgr_dvmdb_workflow_reject",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_reject:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_reject: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_repair": {
    "prefix": "fmgr_dvmdb_workflow_repair",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_repair:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_repair: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_revert": {
    "prefix": "fmgr_dvmdb_workflow_revert",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_revert:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_revert: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_review": {
    "prefix": "fmgr_dvmdb_workflow_review",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_review:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workflow_save": {
    "prefix": "fmgr_dvmdb_workflow_save",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_save:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workflow_start": {
    "prefix": "fmgr_dvmdb_workflow_start",
    "description": "Continue a workflow session.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_start:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_start: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_submit": {
    "prefix": "fmgr_dvmdb_workflow_submit",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_submit:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_submit: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workspace_commit": {
    "prefix": "fmgr_dvmdb_workspace_commit",
    "description": "Commit change",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_commit:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_workspace_commit_dev": {
    "prefix": "fmgr_dvmdb_workspace_commit_dev",
    "description": "Commit change",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_commit_dev:",
      "\tadom: ${1:}",
      "\tdevice_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_commit_obj": {
    "prefix": "fmgr_dvmdb_workspace_commit_obj",
    "description": "Commit change",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_commit_obj:",
      "\tadom: ${1:}",
      "\tobject_url_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_commit_pkg": {
    "prefix": "fmgr_dvmdb_workspace_commit_pkg",
    "description": "Commit change",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_commit_pkg:",
      "\tadom: ${1:}",
      "\tpackage_path_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_lock": {
    "prefix": "fmgr_dvmdb_workspace_lock",
    "description": "Lock an entire ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_lock:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_workspace_lock_dev": {
    "prefix": "fmgr_dvmdb_workspace_lock_dev",
    "description": "Lock a device.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_lock_dev:",
      "\tadom: ${1:}",
      "\tdevice_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_lock_obj": {
    "prefix": "fmgr_dvmdb_workspace_lock_obj",
    "description": "Lock a specific object, where the url contains the full path to the object",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_lock_obj:",
      "\tadom: ${1:}",
      "\tobject_url_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_lock_pkg": {
    "prefix": "fmgr_dvmdb_workspace_lock_pkg",
    "description": "Lock a specific package, where the url includes both the folder",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_lock_pkg:",
      "\tadom: ${1:}",
      "\tpackage_path_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_unlock": {
    "prefix": "fmgr_dvmdb_workspace_unlock",
    "description": "Unlock an entire ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_unlock:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_workspace_unlock_dev": {
    "prefix": "fmgr_dvmdb_workspace_unlock_dev",
    "description": "Unlock a device.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_unlock_dev:",
      "\tadom: ${1:}",
      "\tdevice_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_unlock_obj": {
    "prefix": "fmgr_dvmdb_workspace_unlock_obj",
    "description": "Unlock a specific object, where the url contains the full path to the object",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_unlock_obj:",
      "\tadom: ${1:}",
      "\tobject_url_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_unlock_pkg": {
    "prefix": "fmgr_dvmdb_workspace_unlock_pkg",
    "description": "Unlock a specific package, where the url includes both the folder",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_unlock_pkg:",
      "\tadom: ${1:}",
      "\tpackage_path_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dynamic_address": {
    "prefix": "fmgr_dynamic_address",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_address:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_address: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_address_dynamicaddrmapping": {
    "prefix": "fmgr_dynamic_address_dynamicaddrmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_address_dynamicaddrmapping:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_address_dynamicaddrmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_certificate_local": {
    "prefix": "fmgr_dynamic_certificate_local",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_certificate_local:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_certificate_local: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_certificate_local_dynamicmapping": {
    "prefix": "fmgr_dynamic_certificate_local_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_certificate_local_dynamicmapping:",
      "\tadom: ${1:}",
      "\tlocal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_certificate_local_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_input_interface": {
    "prefix": "fmgr_dynamic_input_interface",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_input_interface:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_input_interface: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_input_interface_dynamicmapping": {
    "prefix": "fmgr_dynamic_input_interface_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_input_interface_dynamicmapping:",
      "\tadom: ${1:}",
      "\tinterface: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_input_interface_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_interface": {
    "prefix": "fmgr_dynamic_interface",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_interface:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_interface: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_interface_dynamicmapping": {
    "prefix": "fmgr_dynamic_interface_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_interface_dynamicmapping:",
      "\tadom: ${1:}",
      "\tinterface: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_interface_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_interface_platformmapping": {
    "prefix": "fmgr_dynamic_interface_platformmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_interface_platformmapping:",
      "\tadom: ${1:}",
      "\tinterface: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_interface_platformmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_ippool": {
    "prefix": "fmgr_dynamic_ippool",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_ippool:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_ippool: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_multicast_interface": {
    "prefix": "fmgr_dynamic_multicast_interface",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_multicast_interface:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_multicast_interface: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_multicast_interface_dynamicmapping": {
    "prefix": "fmgr_dynamic_multicast_interface_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_multicast_interface_dynamicmapping:",
      "\tadom: ${1:}",
      "\tinterface: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_multicast_interface_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_vip": {
    "prefix": "fmgr_dynamic_vip",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_vip:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_vip: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_members": {
    "prefix": "fmgr_dynamic_virtualwanlink_members",
    "description": "FortiGate interfaces added to the virtual-wan-link.",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_members:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_virtualwanlink_members: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_members_dynamicmapping": {
    "prefix": "fmgr_dynamic_virtualwanlink_members_dynamicmapping",
    "description": "FortiGate interfaces added to the virtual-wan-link.",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_members_dynamicmapping:",
      "\tadom: ${1:}",
      "\tmembers: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_virtualwanlink_members_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_neighbor": {
    "prefix": "fmgr_dynamic_virtualwanlink_neighbor",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_neighbor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_virtualwanlink_neighbor: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_neighbor_dynamicmapping": {
    "prefix": "fmgr_dynamic_virtualwanlink_neighbor_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_neighbor_dynamicmapping:",
      "\tadom: ${1:}",
      "\tneighbor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_virtualwanlink_neighbor_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_server": {
    "prefix": "fmgr_dynamic_virtualwanlink_server",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_server:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_virtualwanlink_server: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_server_dynamicmapping": {
    "prefix": "fmgr_dynamic_virtualwanlink_server_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_server_dynamicmapping:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_virtualwanlink_server_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_vpntunnel": {
    "prefix": "fmgr_dynamic_vpntunnel",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_vpntunnel:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_vpntunnel: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_vpntunnel_dynamicmapping": {
    "prefix": "fmgr_dynamic_vpntunnel_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_vpntunnel_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvpntunnel: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_vpntunnel_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_blockallowlist": {
    "prefix": "fmgr_emailfilter_blockallowlist",
    "description": "Configure anti-spam block/allow list.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_blockallowlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_blockallowlist: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_blockallowlist_entries": {
    "prefix": "fmgr_emailfilter_blockallowlist_entries",
    "description": "Anti-spam block/allow entries.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_blockallowlist_entries:",
      "\tadom: ${1:}",
      "\tblock-allow-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_blockallowlist_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_bwl": {
    "prefix": "fmgr_emailfilter_bwl",
    "description": "Configure anti-spam black/white list.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_bwl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_bwl: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_bwl_entries": {
    "prefix": "fmgr_emailfilter_bwl_entries",
    "description": "Anti-spam black/white list entries.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_bwl_entries:",
      "\tadom: ${1:}",
      "\tbwl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_bwl_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_bword": {
    "prefix": "fmgr_emailfilter_bword",
    "description": "Configure AntiSpam banned word list.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_bword:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_bword: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_bword_entries": {
    "prefix": "fmgr_emailfilter_bword_entries",
    "description": "Spam filter banned word.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_bword_entries:",
      "\tadom: ${1:}",
      "\tbword: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_bword_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_dnsbl": {
    "prefix": "fmgr_emailfilter_dnsbl",
    "description": "Configure AntiSpam DNSBL/ORBL.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_dnsbl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_dnsbl: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_dnsbl_entries": {
    "prefix": "fmgr_emailfilter_dnsbl_entries",
    "description": "Spam filter DNSBL and ORBL server.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_dnsbl_entries:",
      "\tadom: ${1:}",
      "\tdnsbl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_dnsbl_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_fortishield": {
    "prefix": "fmgr_emailfilter_fortishield",
    "description": "Configure FortiGuard - AntiSpam.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_fortishield:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#emailfilter_fortishield: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_emailfilter_iptrust": {
    "prefix": "fmgr_emailfilter_iptrust",
    "description": "Configure AntiSpam IP trust.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_iptrust:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_iptrust: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_iptrust_entries": {
    "prefix": "fmgr_emailfilter_iptrust_entries",
    "description": "Spam filter trusted IP addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_iptrust_entries:",
      "\tadom: ${1:}",
      "\tiptrust: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_iptrust_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_mheader": {
    "prefix": "fmgr_emailfilter_mheader",
    "description": "Configure AntiSpam MIME header.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_mheader:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_mheader: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_mheader_entries": {
    "prefix": "fmgr_emailfilter_mheader_entries",
    "description": "Spam filter mime header content.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_mheader_entries:",
      "\tadom: ${1:}",
      "\tmheader: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_mheader_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_options": {
    "prefix": "fmgr_emailfilter_options",
    "description": "Configure AntiSpam options.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_options:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#emailfilter_options: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_emailfilter_profile": {
    "prefix": "fmgr_emailfilter_profile",
    "description": "Configure Email Filter profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_filefilter": {
    "prefix": "fmgr_emailfilter_profile_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_filefilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_filefilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_filefilter_entries": {
    "prefix": "fmgr_emailfilter_profile_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_profile_filefilter_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_profile_gmail": {
    "prefix": "fmgr_emailfilter_profile_gmail",
    "description": "Gmail.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_gmail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_gmail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_imap": {
    "prefix": "fmgr_emailfilter_profile_imap",
    "description": "IMAP.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_imap:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_imap: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_mapi": {
    "prefix": "fmgr_emailfilter_profile_mapi",
    "description": "MAPI.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_mapi:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_mapi: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_msnhotmail": {
    "prefix": "fmgr_emailfilter_profile_msnhotmail",
    "description": "MSN Hotmail.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_msnhotmail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_msnhotmail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_otherwebmails": {
    "prefix": "fmgr_emailfilter_profile_otherwebmails",
    "description": "Other supported webmails.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_otherwebmails:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_otherwebmails: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_pop3": {
    "prefix": "fmgr_emailfilter_profile_pop3",
    "description": "POP3.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_pop3:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_pop3: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_smtp": {
    "prefix": "fmgr_emailfilter_profile_smtp",
    "description": "SMTP.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_smtp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_smtp: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_yahoomail": {
    "prefix": "fmgr_emailfilter_profile_yahoomail",
    "description": "Yahoo! Mail.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_yahoomail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_yahoomail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_endpointcontrol_fctems": {
    "prefix": "fmgr_endpointcontrol_fctems",
    "description": "Configure FortiClient Enterprise Management Server",
    "body": [
      "fortinet.fortimanager.fmgr_endpointcontrol_fctems:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#endpointcontrol_fctems: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_exec_fgfm_reclaimdevtunnel": {
    "prefix": "fmgr_exec_fgfm_reclaimdevtunnel",
    "description": "Reclaim management tunnel to device.",
    "body": [
      "fortinet.fortimanager.fmgr_exec_fgfm_reclaimdevtunnel:",
      "\tdevice_name: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#exec_fgfm_reclaimdevtunnel: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_export_playbooks": {
    "prefix": "fmgr_export_playbooks",
    "description": "Export fortimanager configuration as playbooks.",
    "body": [
      "fortinet.fortimanager.fmgr_export_playbooks:",
      "\texport_playbooks: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#workspace_locking_adom: ${5:}",
      "\t#workspace_locking_timeout: ${6:300}"
    ]
  },
  "fmgr_extendercontroller_dataplan": {
    "prefix": "fmgr_extendercontroller_dataplan",
    "description": "FortiExtender dataplan configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_dataplan:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_dataplan: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile": {
    "prefix": "fmgr_extendercontroller_extenderprofile",
    "description": "FortiExtender extender profile configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular",
    "description": "FortiExtender cellular configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_controllerreport": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_controllerreport",
    "description": "FortiExtender controller report configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_controllerreport:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_controllerreport: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_modem1": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_modem1",
    "description": "Configuration options for modem 1.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_modem1:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_modem1: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_modem1_autoswitch": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_modem1_autoswitch",
    "description": "FortiExtender auto switch configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_modem1_autoswitch:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_modem1_autoswitch: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_modem2": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_modem2",
    "description": "Configuration options for modem 2.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_modem2:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_modem2: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_modem2_autoswitch": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_modem2_autoswitch",
    "description": "FortiExtender auto switch configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_modem2_autoswitch:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_modem2_autoswitch: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_smsnotification": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_smsnotification",
    "description": "FortiExtender cellular SMS notification configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_smsnotification:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_smsnotification: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_smsnotification_alert": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_smsnotification_alert",
    "description": "SMS alert list.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_smsnotification_alert:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_smsnotification_alert: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_smsnotification_receiver": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_smsnotification_receiver",
    "description": "SMS notification receiver list.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_smsnotification_receiver:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#extendercontroller_extenderprofile_cellular_smsnotification_receiver: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_lanextension": {
    "prefix": "fmgr_extendercontroller_extenderprofile_lanextension",
    "description": "FortiExtender lan extension configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_lanextension:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_lanextension: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_lanextension_backhaul": {
    "prefix": "fmgr_extendercontroller_extenderprofile_lanextension_backhaul",
    "description": "LAN extension backhaul tunnel configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_lanextension_backhaul:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#extendercontroller_extenderprofile_lanextension_backhaul: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_extendercontroller_simprofile": {
    "prefix": "fmgr_extendercontroller_simprofile",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_simprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_simprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_simprofile_autoswitchprofile": {
    "prefix": "fmgr_extendercontroller_simprofile_autoswitchprofile",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_simprofile_autoswitchprofile:",
      "\tadom: ${1:}",
      "\tsim_profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_simprofile_autoswitchprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_template": {
    "prefix": "fmgr_extendercontroller_template",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_template: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_dataplan": {
    "prefix": "fmgr_extensioncontroller_dataplan",
    "description": "FortiExtender dataplan configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_dataplan:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_dataplan: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile": {
    "prefix": "fmgr_extensioncontroller_extenderprofile",
    "description": "FortiExtender extender profile configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular",
    "description": "FortiExtender cellular configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_controllerreport": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_controllerreport",
    "description": "FortiExtender controller report configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_controllerreport:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_controllerreport: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_modem1": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_modem1",
    "description": "Configuration options for modem 1.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_modem1:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_modem1: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_modem1_autoswitch": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_modem1_autoswitch",
    "description": "FortiExtender auto switch configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_modem1_autoswitch:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_modem1_autoswitch: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_modem2": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_modem2",
    "description": "Configuration options for modem 2.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_modem2:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_modem2: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_modem2_autoswitch": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_modem2_autoswitch",
    "description": "FortiExtender auto switch configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_modem2_autoswitch:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_modem2_autoswitch: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification",
    "description": "FortiExtender cellular SMS notification configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_smsnotification:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_smsnotification: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_alert": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_alert",
    "description": "SMS alert list.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_alert:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_smsnotification_alert: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_receiver": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_receiver",
    "description": "SMS notification receiver list.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_receiver:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#extensioncontroller_extenderprofile_cellular_smsnotification_receiver: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_lanextension": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_lanextension",
    "description": "FortiExtender lan extension configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_lanextension:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_lanextension: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_lanextension_backhaul": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_lanextension_backhaul",
    "description": "LAN extension backhaul tunnel configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_lanextension_backhaul:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#extensioncontroller_extenderprofile_lanextension_backhaul: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fact": {
    "prefix": "fmgr_fact",
    "description": "Gather fortimanager facts.",
    "body": [
      "fortinet.fortimanager.fmgr_fact:",
      "\tfacts: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_filefilter_profile": {
    "prefix": "fmgr_filefilter_profile",
    "description": "Configure file-filter profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_filefilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#filefilter_profile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_filefilter_profile_rules": {
    "prefix": "fmgr_filefilter_profile_rules",
    "description": "File filter rules.",
    "body": [
      "fortinet.fortimanager.fmgr_filefilter_profile_rules:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#filefilter_profile_rules: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy": {
    "prefix": "fmgr_firewall_accessproxy",
    "description": "Configure Access Proxy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_accessproxy: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_accessproxy6": {
    "prefix": "fmgr_firewall_accessproxy6",
    "description": "Configure IPv6 access proxy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_accessproxy6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway",
    "description": "Set IPv4 API Gateway.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy6_apigateway: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway6": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway6",
    "description": "Set IPv6 API Gateway.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway6:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy6_apigateway6: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway6_quic": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway6_quic",
    "description": "QUIC setting.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway6_quic:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy6_apigateway6_quic: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway6_realservers": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway6_realservers",
    "description": "Select the real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway6_realservers:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy6_apigateway6_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway6_sslciphersuites": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway6_sslciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway6_sslciphersuites:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy6_apigateway6_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway_quic": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway_quic",
    "description": "QUIC setting.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway_quic:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy6_apigateway_quic: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway_realservers": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway_realservers",
    "description": "Select the real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway_realservers:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy6_apigateway_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway_sslciphersuites": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway_sslciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway_sslciphersuites:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy6_apigateway_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway": {
    "prefix": "fmgr_firewall_accessproxy_apigateway",
    "description": "Set API Gateway.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_apigateway: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway6": {
    "prefix": "fmgr_firewall_accessproxy_apigateway6",
    "description": "Set IPv6 API Gateway.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway6:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_apigateway6: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway6_quic": {
    "prefix": "fmgr_firewall_accessproxy_apigateway6_quic",
    "description": "QUIC setting.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway6_quic:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_apigateway6_quic: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway6_realservers": {
    "prefix": "fmgr_firewall_accessproxy_apigateway6_realservers",
    "description": "Select the real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway6_realservers:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy_apigateway6_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway6_sslciphersuites": {
    "prefix": "fmgr_firewall_accessproxy_apigateway6_sslciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway6_sslciphersuites:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy_apigateway6_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway_quic": {
    "prefix": "fmgr_firewall_accessproxy_apigateway_quic",
    "description": "QUIC setting.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway_quic:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_apigateway_quic: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway_realservers": {
    "prefix": "fmgr_firewall_accessproxy_apigateway_realservers",
    "description": "Select the real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway_realservers:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy_apigateway_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway_sslciphersuites": {
    "prefix": "fmgr_firewall_accessproxy_apigateway_sslciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway_sslciphersuites:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy_apigateway_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_realservers": {
    "prefix": "fmgr_firewall_accessproxy_realservers",
    "description": "Select the SSL real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_realservers:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy_serverpubkeyauthsettings": {
    "prefix": "fmgr_firewall_accessproxy_serverpubkeyauthsettings",
    "description": "Server SSH public key authentication settings.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_serverpubkeyauthsettings:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_accessproxy_serverpubkeyauthsettings: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_accessproxy_serverpubkeyauthsettings_certextension": {
    "prefix": "fmgr_firewall_accessproxy_serverpubkeyauthsettings_certextension",
    "description": "Configure certificate extension for user certificate.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_serverpubkeyauthsettings_certextension:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_serverpubkeyauthsettings_certextension: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxyvirtualhost": {
    "prefix": "fmgr_firewall_accessproxyvirtualhost",
    "description": "Configure Access Proxy virtual hosts.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxyvirtualhost:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_accessproxyvirtualhost: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_address": {
    "prefix": "fmgr_firewall_address",
    "description": "Configure IPv4 addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_address: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_address6": {
    "prefix": "fmgr_firewall_address6",
    "description": "Configure IPv6 firewall addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_address6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_address6_dynamicmapping": {
    "prefix": "fmgr_firewall_address6_dynamicmapping",
    "description": "Configure IPv6 firewall addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_dynamicmapping:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6_dynamicmapping_subnetsegment": {
    "prefix": "fmgr_firewall_address6_dynamicmapping_subnetsegment",
    "description": "IPv6 subnet segments.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_dynamicmapping_subnetsegment:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tdynamic_mapping: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_address6_dynamicmapping_subnetsegment: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_address6_list": {
    "prefix": "fmgr_firewall_address6_list",
    "description": "IP address list.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_list:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_list: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6_profilelist": {
    "prefix": "fmgr_firewall_address6_profilelist",
    "description": "List of NSX service profiles that use this address.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_profilelist:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_profilelist: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6_subnetsegment": {
    "prefix": "fmgr_firewall_address6_subnetsegment",
    "description": "IPv6 subnet segments.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_subnetsegment:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_subnetsegment: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6_tagging": {
    "prefix": "fmgr_firewall_address6_tagging",
    "description": "Config object tagging",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_tagging:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6template": {
    "prefix": "fmgr_firewall_address6template",
    "description": "Configure IPv6 address templates.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_address6template: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_address6template_subnetsegment": {
    "prefix": "fmgr_firewall_address6template_subnetsegment",
    "description": "IPv6 subnet segments.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6template_subnetsegment:",
      "\taddress6-template: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6template_subnetsegment: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6template_subnetsegment_values": {
    "prefix": "fmgr_firewall_address6template_subnetsegment_values",
    "description": "Subnet segment values.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6template_subnetsegment_values:",
      "\taddress6-template: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tsubnet-segment: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_address6template_subnetsegment_values: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_address_dynamicmapping": {
    "prefix": "fmgr_firewall_address_dynamicmapping",
    "description": "Configure IPv4 addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address_dynamicmapping:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address_list": {
    "prefix": "fmgr_firewall_address_list",
    "description": "IP address list.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address_list:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address_list: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address_profilelist": {
    "prefix": "fmgr_firewall_address_profilelist",
    "description": "List of NSX service profiles that use this address.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address_profilelist:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address_profilelist: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address_tagging": {
    "prefix": "fmgr_firewall_address_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address_tagging:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_addrgrp": {
    "prefix": "fmgr_firewall_addrgrp",
    "description": "Configure IPv4 address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_addrgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_addrgrp6": {
    "prefix": "fmgr_firewall_addrgrp6",
    "description": "Configure IPv6 address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_addrgrp6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_addrgrp6_dynamicmapping": {
    "prefix": "fmgr_firewall_addrgrp6_dynamicmapping",
    "description": "Configure IPv6 address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp6_dynamicmapping:",
      "\taddrgrp6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_addrgrp6_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_addrgrp6_tagging": {
    "prefix": "fmgr_firewall_addrgrp6_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp6_tagging:",
      "\taddrgrp6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_addrgrp6_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_addrgrp_dynamicmapping": {
    "prefix": "fmgr_firewall_addrgrp_dynamicmapping",
    "description": "Configure IPv4 address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp_dynamicmapping:",
      "\taddrgrp: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_addrgrp_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_addrgrp_tagging": {
    "prefix": "fmgr_firewall_addrgrp_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp_tagging:",
      "\taddrgrp: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_addrgrp_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_carrierendpointbwl": {
    "prefix": "fmgr_firewall_carrierendpointbwl",
    "description": "Carrier end point black/white list tables.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_carrierendpointbwl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_carrierendpointbwl: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_carrierendpointbwl_entries": {
    "prefix": "fmgr_firewall_carrierendpointbwl_entries",
    "description": "Carrier end point black/white list.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_carrierendpointbwl_entries:",
      "\tadom: ${1:}",
      "\tcarrier-endpoint-bwl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_carrierendpointbwl_entries: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_casbprofile": {
    "prefix": "fmgr_firewall_casbprofile",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_casbprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_casbprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_casbprofile_saasapplication": {
    "prefix": "fmgr_firewall_casbprofile_saasapplication",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_casbprofile_saasapplication:",
      "\tadom: ${1:}",
      "\tcasb-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_casbprofile_saasapplication: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_casbprofile_saasapplication_accessrule": {
    "prefix": "fmgr_firewall_casbprofile_saasapplication_accessrule",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_casbprofile_saasapplication_accessrule:",
      "\tadom: ${1:}",
      "\tcasb-profile: ${2:}",
      "\tsaas-application: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_casbprofile_saasapplication_accessrule: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_casbprofile_saasapplication_customcontrol": {
    "prefix": "fmgr_firewall_casbprofile_saasapplication_customcontrol",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_casbprofile_saasapplication_customcontrol:",
      "\tadom: ${1:}",
      "\tcasb-profile: ${2:}",
      "\tsaas-application: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_casbprofile_saasapplication_customcontrol: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_casbprofile_saasapplication_customcontrol_option": {
    "prefix": "fmgr_firewall_casbprofile_saasapplication_customcontrol_option",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_casbprofile_saasapplication_customcontrol_option:",
      "\tadom: ${1:}",
      "\tcasb-profile: ${2:}",
      "\tcustom-control: ${3:}",
      "\tsaas-application: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#access_token: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#firewall_casbprofile_saasapplication_customcontrol_option: ${9:}",
      "\t#forticloud_access_token: ${10:}",
      "\t#proposed_method: ${11:update|set|add}",
      "\t#rc_failed: ${12:}",
      "\t#rc_succeeded: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_firewall_decryptedtrafficmirror": {
    "prefix": "fmgr_firewall_decryptedtrafficmirror",
    "description": "Configure decrypted traffic mirror.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_decryptedtrafficmirror:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_decryptedtrafficmirror: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_explicitproxyaddress": {
    "prefix": "fmgr_firewall_explicitproxyaddress",
    "description": "Explicit web proxy address configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_explicitproxyaddress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_explicitproxyaddress: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_explicitproxyaddress_headergroup": {
    "prefix": "fmgr_firewall_explicitproxyaddress_headergroup",
    "description": "HTTP header group.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_explicitproxyaddress_headergroup:",
      "\tadom: ${1:}",
      "\texplicit-proxy-address: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_explicitproxyaddress_headergroup: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_explicitproxyaddrgrp": {
    "prefix": "fmgr_firewall_explicitproxyaddrgrp",
    "description": "Explicit web proxy address group configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_explicitproxyaddrgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_explicitproxyaddrgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp": {
    "prefix": "fmgr_firewall_gtp",
    "description": "Configure GTP.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_apn": {
    "prefix": "fmgr_firewall_gtp_apn",
    "description": "APN.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_apn:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_apn: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_ieremovepolicy": {
    "prefix": "fmgr_firewall_gtp_ieremovepolicy",
    "description": "IE remove policy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_ieremovepolicy:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_ieremovepolicy: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_ievalidation": {
    "prefix": "fmgr_firewall_gtp_ievalidation",
    "description": "IE validation.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_ievalidation:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_ievalidation: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_imsi": {
    "prefix": "fmgr_firewall_gtp_imsi",
    "description": "IMSI.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_imsi:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_imsi: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_ippolicy": {
    "prefix": "fmgr_firewall_gtp_ippolicy",
    "description": "IP policy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_ippolicy:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_ippolicy: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_messagefilter": {
    "prefix": "fmgr_firewall_gtp_messagefilter",
    "description": "Message filter.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messagefilter:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messagefilter: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_messageratelimit": {
    "prefix": "fmgr_firewall_gtp_messageratelimit",
    "description": "Message rate limiting.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messageratelimit:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messageratelimit: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_messageratelimitv0": {
    "prefix": "fmgr_firewall_gtp_messageratelimitv0",
    "description": "Message rate limiting for GTP version 0.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messageratelimitv0:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messageratelimitv0: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_messageratelimitv1": {
    "prefix": "fmgr_firewall_gtp_messageratelimitv1",
    "description": "Message rate limiting for GTP version 1.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messageratelimitv1:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messageratelimitv1: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_messageratelimitv2": {
    "prefix": "fmgr_firewall_gtp_messageratelimitv2",
    "description": "Message rate limiting for GTP version 2.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messageratelimitv2:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messageratelimitv2: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_noippolicy": {
    "prefix": "fmgr_firewall_gtp_noippolicy",
    "description": "No IP policy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_noippolicy:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_noippolicy: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_perapnshaper": {
    "prefix": "fmgr_firewall_gtp_perapnshaper",
    "description": "Per APN shaper.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_perapnshaper:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_perapnshaper: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_policy": {
    "prefix": "fmgr_firewall_gtp_policy",
    "description": "Policy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_policy:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_policy: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_policyv2": {
    "prefix": "fmgr_firewall_gtp_policyv2",
    "description": "Apply allow or deny action to each GTPv2-c packet.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_policyv2:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_policyv2: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_identitybasedroute": {
    "prefix": "fmgr_firewall_identitybasedroute",
    "description": "Configure identity based routing.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_identitybasedroute:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_identitybasedroute: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_identitybasedroute_rule": {
    "prefix": "fmgr_firewall_identitybasedroute_rule",
    "description": "Rule.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_identitybasedroute_rule:",
      "\tadom: ${1:}",
      "\tidentity-based-route: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_identitybasedroute_rule: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_internetservice": {
    "prefix": "fmgr_firewall_internetservice",
    "description": "Show Internet Service application.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservice:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#firewall_internetservice: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_firewall_internetservice_entry": {
    "prefix": "fmgr_firewall_internetservice_entry",
    "description": "Entries in the Internet Service database.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservice_entry:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservice_entry: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetserviceaddition": {
    "prefix": "fmgr_firewall_internetserviceaddition",
    "description": "Configure Internet Services Addition.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetserviceaddition:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetserviceaddition: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetserviceaddition_entry": {
    "prefix": "fmgr_firewall_internetserviceaddition_entry",
    "description": "Entries added to the Internet Service addition database.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetserviceaddition_entry:",
      "\tadom: ${1:}",
      "\tinternet-service-addition: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_internetserviceaddition_entry: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_internetserviceaddition_entry_portrange": {
    "prefix": "fmgr_firewall_internetserviceaddition_entry_portrange",
    "description": "Port ranges in the custom entry.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetserviceaddition_entry_portrange:",
      "\tadom: ${1:}",
      "\tentry: ${2:}",
      "\tinternet-service-addition: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_internetserviceaddition_entry_portrange: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom": {
    "prefix": "fmgr_firewall_internetservicecustom",
    "description": "Configure custom Internet Services.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservicecustom: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom_disableentry": {
    "prefix": "fmgr_firewall_internetservicecustom_disableentry",
    "description": "Disable entries in the Internet Service database.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom_disableentry:",
      "\tadom: ${1:}",
      "\tinternet-service-custom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_internetservicecustom_disableentry: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom_disableentry_iprange": {
    "prefix": "fmgr_firewall_internetservicecustom_disableentry_iprange",
    "description": "IP ranges in the disable entry.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom_disableentry_iprange:",
      "\tadom: ${1:}",
      "\tdisable-entry: ${2:}",
      "\tinternet-service-custom: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_internetservicecustom_disableentry_iprange: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom_entry": {
    "prefix": "fmgr_firewall_internetservicecustom_entry",
    "description": "Entries added to the Internet Service database and custom database.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom_entry:",
      "\tadom: ${1:}",
      "\tinternet-service-custom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_internetservicecustom_entry: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom_entry_portrange": {
    "prefix": "fmgr_firewall_internetservicecustom_entry_portrange",
    "description": "Port ranges in the custom entry.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom_entry_portrange:",
      "\tadom: ${1:}",
      "\tentry: ${2:}",
      "\tinternet-service-custom: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_internetservicecustom_entry_portrange: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_internetservicecustomgroup": {
    "prefix": "fmgr_firewall_internetservicecustomgroup",
    "description": "Configure custom Internet Service group.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustomgroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservicecustomgroup: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetservicegroup": {
    "prefix": "fmgr_firewall_internetservicegroup",
    "description": "Configure group of Internet Service.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicegroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservicegroup: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetservicename": {
    "prefix": "fmgr_firewall_internetservicename",
    "description": "Define internet service names.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicename:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservicename: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_ippool": {
    "prefix": "fmgr_firewall_ippool",
    "description": "Configure IPv4 IP pools.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippool:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ippool: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_ippool6": {
    "prefix": "fmgr_firewall_ippool6",
    "description": "Configure IPv6 IP pools.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippool6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ippool6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_ippool6_dynamicmapping": {
    "prefix": "fmgr_firewall_ippool6_dynamicmapping",
    "description": "Configure IPv6 IP pools.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippool6_dynamicmapping:",
      "\tadom: ${1:}",
      "\tippool6: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_ippool6_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_ippool_dynamicmapping": {
    "prefix": "fmgr_firewall_ippool_dynamicmapping",
    "description": "Configure IPv4 IP pools.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippool_dynamicmapping:",
      "\tadom: ${1:}",
      "\tippool: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_ippool_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_ippoolgrp": {
    "prefix": "fmgr_firewall_ippoolgrp",
    "description": "Configure IPv4 pool groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippoolgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ippoolgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_ldbmonitor": {
    "prefix": "fmgr_firewall_ldbmonitor",
    "description": "Configure server load balancing health monitors.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ldbmonitor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ldbmonitor: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile": {
    "prefix": "fmgr_firewall_mmsprofile",
    "description": "Configure MMS profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_dupe": {
    "prefix": "fmgr_firewall_mmsprofile_dupe",
    "description": "Duplicate configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_dupe:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile_dupe: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_flood": {
    "prefix": "fmgr_firewall_mmsprofile_flood",
    "description": "Flood configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_flood:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile_flood: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_notification": {
    "prefix": "fmgr_firewall_mmsprofile_notification",
    "description": "Notification configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_notification:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile_notification: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_notifmsisdn": {
    "prefix": "fmgr_firewall_mmsprofile_notifmsisdn",
    "description": "Notification for MSISDNs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_notifmsisdn:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_mmsprofile_notifmsisdn: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_outbreakprevention": {
    "prefix": "fmgr_firewall_mmsprofile_outbreakprevention",
    "description": "Configure Virus Outbreak Prevention settings.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_outbreakprevention:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile_outbreakprevention: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_multicastaddress": {
    "prefix": "fmgr_firewall_multicastaddress",
    "description": "Configure multicast addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_multicastaddress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_multicastaddress: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_multicastaddress6": {
    "prefix": "fmgr_firewall_multicastaddress6",
    "description": "Configure IPv6 multicast address.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_multicastaddress6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_multicastaddress6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_multicastaddress6_tagging": {
    "prefix": "fmgr_firewall_multicastaddress6_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_multicastaddress6_tagging:",
      "\tadom: ${1:}",
      "\tmulticast-address6: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_multicastaddress6_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_multicastaddress_tagging": {
    "prefix": "fmgr_firewall_multicastaddress_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_multicastaddress_tagging:",
      "\tadom: ${1:}",
      "\tmulticast-address: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_multicastaddress_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_networkservicedynamic": {
    "prefix": "fmgr_firewall_networkservicedynamic",
    "description": "Configure Dynamic Network Services.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_networkservicedynamic:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_networkservicedynamic: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profilegroup": {
    "prefix": "fmgr_firewall_profilegroup",
    "description": "Configure profile groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profilegroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profilegroup: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions": {
    "prefix": "fmgr_firewall_profileprotocoloptions",
    "description": "Configure protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_cifs": {
    "prefix": "fmgr_firewall_profileprotocoloptions_cifs",
    "description": "Configure CIFS protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_cifs:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_cifs: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_cifs_filefilter": {
    "prefix": "fmgr_firewall_profileprotocoloptions_cifs_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_cifs_filefilter:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_cifs_filefilter: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_cifs_filefilter_entries": {
    "prefix": "fmgr_firewall_profileprotocoloptions_cifs_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_cifs_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_profileprotocoloptions_cifs_filefilter_entries: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_cifs_serverkeytab": {
    "prefix": "fmgr_firewall_profileprotocoloptions_cifs_serverkeytab",
    "description": "Server keytab.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_cifs_serverkeytab:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_profileprotocoloptions_cifs_serverkeytab: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_dns": {
    "prefix": "fmgr_firewall_profileprotocoloptions_dns",
    "description": "Configure DNS protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_dns:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_dns: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_ftp": {
    "prefix": "fmgr_firewall_profileprotocoloptions_ftp",
    "description": "Configure FTP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_ftp:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_ftp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_http": {
    "prefix": "fmgr_firewall_profileprotocoloptions_http",
    "description": "Configure HTTP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_http:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_http: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_imap": {
    "prefix": "fmgr_firewall_profileprotocoloptions_imap",
    "description": "Configure IMAP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_imap:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_imap: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_mailsignature": {
    "prefix": "fmgr_firewall_profileprotocoloptions_mailsignature",
    "description": "Configure Mail signature.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_mailsignature:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_mailsignature: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_mapi": {
    "prefix": "fmgr_firewall_profileprotocoloptions_mapi",
    "description": "Configure MAPI protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_mapi:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_mapi: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_nntp": {
    "prefix": "fmgr_firewall_profileprotocoloptions_nntp",
    "description": "Configure NNTP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_nntp:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_nntp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_pop3": {
    "prefix": "fmgr_firewall_profileprotocoloptions_pop3",
    "description": "Configure POP3 protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_pop3:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_pop3: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_smtp": {
    "prefix": "fmgr_firewall_profileprotocoloptions_smtp",
    "description": "Configure SMTP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_smtp:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_smtp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_ssh": {
    "prefix": "fmgr_firewall_profileprotocoloptions_ssh",
    "description": "Configure SFTP and SCP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_ssh:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_ssh: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_proxyaddress": {
    "prefix": "fmgr_firewall_proxyaddress",
    "description": "Web proxy address configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_proxyaddress: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_proxyaddress_headergroup": {
    "prefix": "fmgr_firewall_proxyaddress_headergroup",
    "description": "HTTP header group.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddress_headergroup:",
      "\tadom: ${1:}",
      "\tproxy-address: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_proxyaddress_headergroup: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_proxyaddress_tagging": {
    "prefix": "fmgr_firewall_proxyaddress_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddress_tagging:",
      "\tadom: ${1:}",
      "\tproxy-address: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_proxyaddress_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_proxyaddrgrp": {
    "prefix": "fmgr_firewall_proxyaddrgrp",
    "description": "Web proxy address group configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddrgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_proxyaddrgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_proxyaddrgrp_tagging": {
    "prefix": "fmgr_firewall_proxyaddrgrp_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddrgrp_tagging:",
      "\tadom: ${1:}",
      "\tproxy-addrgrp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_proxyaddrgrp_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_schedule_group": {
    "prefix": "fmgr_firewall_schedule_group",
    "description": "Schedule group configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_schedule_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_schedule_group: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_schedule_onetime": {
    "prefix": "fmgr_firewall_schedule_onetime",
    "description": "Onetime schedule configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_schedule_onetime:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_schedule_onetime: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_schedule_recurring": {
    "prefix": "fmgr_firewall_schedule_recurring",
    "description": "Recurring schedule configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_schedule_recurring:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_schedule_recurring: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_service_category": {
    "prefix": "fmgr_firewall_service_category",
    "description": "Configure service categories.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_service_category:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_service_category: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_service_custom": {
    "prefix": "fmgr_firewall_service_custom",
    "description": "Configure custom services.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_service_custom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_service_custom: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_service_group": {
    "prefix": "fmgr_firewall_service_group",
    "description": "Configure service groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_service_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_service_group: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_shaper_peripshaper": {
    "prefix": "fmgr_firewall_shaper_peripshaper",
    "description": "Configure per-IP traffic shaper.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_shaper_peripshaper:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_shaper_peripshaper: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_shaper_trafficshaper": {
    "prefix": "fmgr_firewall_shaper_trafficshaper",
    "description": "Configure shared traffic shaper.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_shaper_trafficshaper:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_shaper_trafficshaper: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_shapingprofile": {
    "prefix": "fmgr_firewall_shapingprofile",
    "description": "Configure shaping profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_shapingprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_shapingprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_shapingprofile_shapingentries": {
    "prefix": "fmgr_firewall_shapingprofile_shapingentries",
    "description": "Define shaping entries of this shaping profile.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_shapingprofile_shapingentries:",
      "\tadom: ${1:}",
      "\tshaping-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_shapingprofile_shapingentries: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_ssh_localca": {
    "prefix": "fmgr_firewall_ssh_localca",
    "description": "SSH proxy local CA.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ssh_localca:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ssh_localca: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile": {
    "prefix": "fmgr_firewall_sslsshprofile",
    "description": "Configure SSL/SSH protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_dot": {
    "prefix": "fmgr_firewall_sslsshprofile_dot",
    "description": "Configure DNS over TLS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_dot:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_dot: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_ftps": {
    "prefix": "fmgr_firewall_sslsshprofile_ftps",
    "description": "Configure FTPS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_ftps:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_ftps: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_https": {
    "prefix": "fmgr_firewall_sslsshprofile_https",
    "description": "Configure HTTPS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_https:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_https: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_imaps": {
    "prefix": "fmgr_firewall_sslsshprofile_imaps",
    "description": "Configure IMAPS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_imaps:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_imaps: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_pop3s": {
    "prefix": "fmgr_firewall_sslsshprofile_pop3s",
    "description": "Configure POP3S options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_pop3s:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_pop3s: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_smtps": {
    "prefix": "fmgr_firewall_sslsshprofile_smtps",
    "description": "Configure SMTPS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_smtps:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_smtps: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_ssh": {
    "prefix": "fmgr_firewall_sslsshprofile_ssh",
    "description": "Configure SSH options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_ssh:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_ssh: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_ssl": {
    "prefix": "fmgr_firewall_sslsshprofile_ssl",
    "description": "Configure SSL options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_ssl:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_ssl: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_sslexempt": {
    "prefix": "fmgr_firewall_sslsshprofile_sslexempt",
    "description": "Servers to exempt from SSL inspection.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_sslexempt:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_sslsshprofile_sslexempt: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_sslserver": {
    "prefix": "fmgr_firewall_sslsshprofile_sslserver",
    "description": "SSL servers.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_sslserver:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_sslsshprofile_sslserver: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_trafficclass": {
    "prefix": "fmgr_firewall_trafficclass",
    "description": "Configure names for shaping classes.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_trafficclass:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_trafficclass: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vendormac": {
    "prefix": "fmgr_firewall_vendormac",
    "description": "Show vendor and the MAC address they have.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vendormac:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#firewall_vendormac: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_firewall_vip": {
    "prefix": "fmgr_firewall_vip",
    "description": "Configure virtual IP for IPv4.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip46": {
    "prefix": "fmgr_firewall_vip46",
    "description": "Configure IPv4 to IPv6 virtual IPs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip46:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip46: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip46_dynamicmapping": {
    "prefix": "fmgr_firewall_vip46_dynamicmapping",
    "description": "Configure IPv4 to IPv6 virtual IPs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip46_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip46: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip46_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip46_realservers": {
    "prefix": "fmgr_firewall_vip46_realservers",
    "description": "Real servers.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip46_realservers:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip46: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip46_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6": {
    "prefix": "fmgr_firewall_vip6",
    "description": "Configure virtual IP for IPv6.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip64": {
    "prefix": "fmgr_firewall_vip64",
    "description": "Configure IPv6 to IPv4 virtual IPs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip64:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip64: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip64_dynamicmapping": {
    "prefix": "fmgr_firewall_vip64_dynamicmapping",
    "description": "Configure IPv6 to IPv4 virtual IPs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip64_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip64: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip64_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip64_realservers": {
    "prefix": "fmgr_firewall_vip64_realservers",
    "description": "Real servers.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip64_realservers:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip64: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip64_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6_dynamicmapping": {
    "prefix": "fmgr_firewall_vip6_dynamicmapping",
    "description": "Configure virtual IP for IPv6.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip6_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6_dynamicmapping_realservers": {
    "prefix": "fmgr_firewall_vip6_dynamicmapping_realservers",
    "description": "Select the real servers that this server load balancing VIP will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_dynamicmapping_realservers:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvip6: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_vip6_dynamicmapping_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_vip6_dynamicmapping_sslciphersuites": {
    "prefix": "fmgr_firewall_vip6_dynamicmapping_sslciphersuites",
    "description": "SSL/TLS cipher suites acceptable from a client, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_dynamicmapping_sslciphersuites:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvip6: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_vip6_dynamicmapping_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_vip6_realservers": {
    "prefix": "fmgr_firewall_vip6_realservers",
    "description": "Select the real servers that this server load balancing VIP will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_realservers:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip6_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6_sslciphersuites": {
    "prefix": "fmgr_firewall_vip6_sslciphersuites",
    "description": "SSL/TLS cipher suites acceptable from a client, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_sslciphersuites:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip6_sslciphersuites: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6_sslserverciphersuites": {
    "prefix": "fmgr_firewall_vip6_sslserverciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_sslserverciphersuites:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip6_sslserverciphersuites: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip_dynamicmapping": {
    "prefix": "fmgr_firewall_vip_dynamicmapping",
    "description": "Configure virtual IP for IPv4.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip_dynamicmapping_realservers": {
    "prefix": "fmgr_firewall_vip_dynamicmapping_realservers",
    "description": "Select the real servers that this server load balancing VIP will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_dynamicmapping_realservers:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvip: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_vip_dynamicmapping_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_vip_dynamicmapping_sslciphersuites": {
    "prefix": "fmgr_firewall_vip_dynamicmapping_sslciphersuites",
    "description": "SSL/TLS cipher suites acceptable from a client, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_dynamicmapping_sslciphersuites:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvip: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_vip_dynamicmapping_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_vip_quic": {
    "prefix": "fmgr_firewall_vip_quic",
    "description": "QUIC setting.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_quic:",
      "\tadom: ${1:}",
      "\tvip: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip_quic: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip_realservers": {
    "prefix": "fmgr_firewall_vip_realservers",
    "description": "Select the real servers that this server load balancing VIP will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_realservers:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip_sslciphersuites": {
    "prefix": "fmgr_firewall_vip_sslciphersuites",
    "description": "SSL/TLS cipher suites acceptable from a client, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_sslciphersuites:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip_sslciphersuites: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip_sslserverciphersuites": {
    "prefix": "fmgr_firewall_vip_sslserverciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_sslserverciphersuites:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip_sslserverciphersuites: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vipgrp": {
    "prefix": "fmgr_firewall_vipgrp",
    "description": "Configure IPv4 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vipgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vipgrp46": {
    "prefix": "fmgr_firewall_vipgrp46",
    "description": "Configure IPv4 to IPv6 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp46:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vipgrp46: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vipgrp6": {
    "prefix": "fmgr_firewall_vipgrp6",
    "description": "Configure IPv6 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vipgrp6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vipgrp64": {
    "prefix": "fmgr_firewall_vipgrp64",
    "description": "Configure IPv6 to IPv4 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp64:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vipgrp64: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vipgrp_dynamicmapping": {
    "prefix": "fmgr_firewall_vipgrp_dynamicmapping",
    "description": "Configure IPv4 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvipgrp: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vipgrp_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_wildcardfqdn_custom": {
    "prefix": "fmgr_firewall_wildcardfqdn_custom",
    "description": "Config global/VDOM Wildcard FQDN address.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_wildcardfqdn_custom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_wildcardfqdn_custom: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_wildcardfqdn_group": {
    "prefix": "fmgr_firewall_wildcardfqdn_group",
    "description": "Config global Wildcard FQDN address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_wildcardfqdn_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_wildcardfqdn_group: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fmg_device_blueprint": {
    "prefix": "fmgr_fmg_device_blueprint",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_device_blueprint:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#fmg_device_blueprint: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fmg_fabric_authorization_template": {
    "prefix": "fmgr_fmg_fabric_authorization_template",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_fabric_authorization_template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#fmg_fabric_authorization_template: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fmg_fabric_authorization_template_platforms": {
    "prefix": "fmgr_fmg_fabric_authorization_template_platforms",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_fabric_authorization_template_platforms:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\ttemplate: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#fmg_fabric_authorization_template_platforms: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fmg_variable": {
    "prefix": "fmgr_fmg_variable",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_variable:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#fmg_variable: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fmg_variable_dynamicmapping": {
    "prefix": "fmgr_fmg_variable_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_variable_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvariable: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#fmg_variable_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fmupdate_analyzer_virusreport": {
    "prefix": "fmgr_fmupdate_analyzer_virusreport",
    "description": "Send virus detection notification to FortiGuard.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_analyzer_virusreport:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_analyzer_virusreport: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_avips_advancedlog": {
    "prefix": "fmgr_fmupdate_avips_advancedlog",
    "description": "Enable/disable logging of FortiGuard antivirus and IPS update packages received by FortiManagers built-in FortiGuard.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_avips_advancedlog:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_avips_advancedlog: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_avips_webproxy": {
    "prefix": "fmgr_fmupdate_avips_webproxy",
    "description": "Configure the web proxy for use with FortiGuard antivirus and IPS updates.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_avips_webproxy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_avips_webproxy: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_customurllist": {
    "prefix": "fmgr_fmupdate_customurllist",
    "description": "Configure the URL database for rating and filtering.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_customurllist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_customurllist: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_diskquota": {
    "prefix": "fmgr_fmupdate_diskquota",
    "description": "Configure disk space available for use by the Upgrade Manager.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_diskquota:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_diskquota: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fctservices": {
    "prefix": "fmgr_fmupdate_fctservices",
    "description": "Configure FortiGuard to provide services to FortiClient installations.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fctservices:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fctservices: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting": {
    "prefix": "fmgr_fmupdate_fdssetting",
    "description": "Configure FortiGuard settings.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_pushoverride": {
    "prefix": "fmgr_fmupdate_fdssetting_pushoverride",
    "description": "Enable/disable push updates, and override the default IP address and port used by FortiGuard to send antivirus and IPS push messages for ...",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_pushoverride:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting_pushoverride: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_pushoverridetoclient": {
    "prefix": "fmgr_fmupdate_fdssetting_pushoverridetoclient",
    "description": "Enable/disable push updates, and override the default IP address and port used by FortiGuard to send antivirus and IPS push messages for ...",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_pushoverridetoclient:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting_pushoverridetoclient: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_pushoverridetoclient_announceip": {
    "prefix": "fmgr_fmupdate_fdssetting_pushoverridetoclient_announceip",
    "description": "Announce IP addresses for the device.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_pushoverridetoclient_announceip:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#fmupdate_fdssetting_pushoverridetoclient_announceip: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_serveroverride": {
    "prefix": "fmgr_fmupdate_fdssetting_serveroverride",
    "description": "Server override configure.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_serveroverride:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting_serveroverride: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_serveroverride_servlist": {
    "prefix": "fmgr_fmupdate_fdssetting_serveroverride_servlist",
    "description": "Override server.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_serveroverride_servlist:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#fmupdate_fdssetting_serveroverride_servlist: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_updateschedule": {
    "prefix": "fmgr_fmupdate_fdssetting_updateschedule",
    "description": "Configure the schedule when built-in FortiGuard retrieves antivirus and IPS updates.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_updateschedule:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting_updateschedule: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fwmsetting": {
    "prefix": "fmgr_fmupdate_fwmsetting",
    "description": "Configure firmware management settings.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fwmsetting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fwmsetting: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fwmsetting_upgradetimeout": {
    "prefix": "fmgr_fmupdate_fwmsetting_upgradetimeout",
    "description": "Configure the timeout value of image upgrade process.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fwmsetting_upgradetimeout:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fwmsetting_upgradetimeout: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_multilayer": {
    "prefix": "fmgr_fmupdate_multilayer",
    "description": "Configure multilayer mode.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_multilayer:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_multilayer: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_publicnetwork": {
    "prefix": "fmgr_fmupdate_publicnetwork",
    "description": "Enable/disable access to the public FortiGuard.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_publicnetwork:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_publicnetwork: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_serveraccesspriorities": {
    "prefix": "fmgr_fmupdate_serveraccesspriorities",
    "description": "Configure priorities for FortiGate units accessing antivirus updates and web filtering services.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_serveraccesspriorities:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_serveraccesspriorities: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_serveraccesspriorities_privateserver": {
    "prefix": "fmgr_fmupdate_serveraccesspriorities_privateserver",
    "description": "Configure multiple FortiManager units and private servers.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_serveraccesspriorities_privateserver:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#fmupdate_serveraccesspriorities_privateserver: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_fmupdate_serveroverridestatus": {
    "prefix": "fmgr_fmupdate_serveroverridestatus",
    "description": "Configure strict/loose server override.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_serveroverridestatus:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_serveroverridestatus: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_service": {
    "prefix": "fmgr_fmupdate_service",
    "description": "Enable/disable services provided by the built-in FortiGuard.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_service:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_service: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_webspam_fgdsetting": {
    "prefix": "fmgr_fmupdate_webspam_fgdsetting",
    "description": "Configure the FortiGuard run parameters.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_webspam_fgdsetting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_webspam_fgdsetting: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_webspam_fgdsetting_serveroverride": {
    "prefix": "fmgr_fmupdate_webspam_fgdsetting_serveroverride",
    "description": "Server override configure.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_webspam_fgdsetting_serveroverride:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_webspam_fgdsetting_serveroverride: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_webspam_fgdsetting_serveroverride_servlist": {
    "prefix": "fmgr_fmupdate_webspam_fgdsetting_serveroverride_servlist",
    "description": "Override server.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_webspam_fgdsetting_serveroverride_servlist:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#fmupdate_webspam_fgdsetting_serveroverride_servlist: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_fmupdate_webspam_webproxy": {
    "prefix": "fmgr_fmupdate_webspam_webproxy",
    "description": "Configure the web proxy for use with FortiGuard antivirus and IPS updates.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_webspam_webproxy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_webspam_webproxy: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fsp_vlan": {
    "prefix": "fmgr_fsp_vlan",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#fsp_vlan: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver": {
    "prefix": "fmgr_fsp_vlan_dhcpserver",
    "description": "Configure DHCP servers.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver:",
      "\tadom: ${1:}",
      "\tvlan: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#fsp_vlan_dhcpserver: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver_excluderange": {
    "prefix": "fmgr_fsp_vlan_dhcpserver_excluderange",
    "description": "Exclude one or more ranges of IP addresses from being assigned to clients.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver_excluderange:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dhcpserver_excluderange: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver_iprange": {
    "prefix": "fmgr_fsp_vlan_dhcpserver_iprange",
    "description": "DHCP IP range configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver_iprange:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dhcpserver_iprange: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver_options": {
    "prefix": "fmgr_fsp_vlan_dhcpserver_options",
    "description": "DHCP options.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver_options:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dhcpserver_options: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver_reservedaddress": {
    "prefix": "fmgr_fsp_vlan_dhcpserver_reservedaddress",
    "description": "Options for the DHCP server to assign IP settings to specific MAC addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver_reservedaddress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dhcpserver_reservedaddress: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dynamicmapping: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver",
    "description": "Configure DHCP servers.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver_excluderange": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver_excluderange",
    "description": "Exclude one or more ranges of IP addresses from being assigned to clients.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver_excluderange:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver_excluderange: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver_iprange": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver_iprange",
    "description": "DHCP IP range configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver_iprange:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver_iprange: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver_options": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver_options",
    "description": "DHCP options.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver_options:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver_options: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver_reservedaddress": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver_reservedaddress",
    "description": "Options for the DHCP server to assign IP settings to specific MAC addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver_reservedaddress:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver_reservedaddress: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dynamicmapping_interface: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6",
    "description": "IPv6 of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist",
    "description": "Advertised IPv6 delegated prefix list.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr",
    "description": "Extra IPv6 address prefixes of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist",
    "description": "Advertised prefix list.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_vrrp6": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_vrrp6",
    "description": "IPv6 VRRP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6_vrrp6:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6_vrrp6: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_secondaryip": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_secondaryip",
    "description": "Second IP address of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_secondaryip:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_secondaryip: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_vrrp": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_vrrp",
    "description": "VRRP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_vrrp:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_vrrp: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_vrrp_proxyarp": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_vrrp_proxyarp",
    "description": "VRRP Proxy ARP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_vrrp_proxyarp:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\tvrrp: ${5:}",
      "\t#access_token: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#fsp_vlan_dynamicmapping_interface_vrrp_proxyarp: ${10:}",
      "\t#proposed_method: ${11:update|set|add}",
      "\t#rc_failed: ${12:}",
      "\t#rc_succeeded: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_fsp_vlan_interface": {
    "prefix": "fmgr_fsp_vlan_interface",
    "description": "Configure interfaces.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface:",
      "\tadom: ${1:}",
      "\tvlan: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#fsp_vlan_interface: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6",
    "description": "IPv6 of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6:",
      "\tadom: ${1:}",
      "\tvlan: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#fsp_vlan_interface_ipv6: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6_ip6delegatedprefixlist": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6_ip6delegatedprefixlist",
    "description": "Advertised IPv6 delegated prefix list.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6_ip6delegatedprefixlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_ipv6_ip6delegatedprefixlist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6_ip6extraaddr": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6_ip6extraaddr",
    "description": "Extra IPv6 address prefixes of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6_ip6extraaddr:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_ipv6_ip6extraaddr: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6_ip6prefixlist": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6_ip6prefixlist",
    "description": "Advertised prefix list.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6_ip6prefixlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_ipv6_ip6prefixlist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6_vrrp6": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6_vrrp6",
    "description": "IPv6 VRRP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6_vrrp6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_ipv6_vrrp6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_secondaryip": {
    "prefix": "fmgr_fsp_vlan_interface_secondaryip",
    "description": "Second IP address of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_secondaryip:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_secondaryip: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_vrrp": {
    "prefix": "fmgr_fsp_vlan_interface_vrrp",
    "description": "VRRP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_vrrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_vrrp: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_vrrp_proxyarp": {
    "prefix": "fmgr_fsp_vlan_interface_vrrp_proxyarp",
    "description": "VRRP Proxy ARP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_vrrp_proxyarp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\tvrrp: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_interface_vrrp_proxyarp: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_generic": {
    "prefix": "fmgr_generic",
    "description": "Build and send generic FortiManager API request.",
    "body": [
      "fortinet.fortimanager.fmgr_generic:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#forticloud_access_token: ${3:}",
      "\t#json: ${4:}",
      "\t#method: ${5:}",
      "\t#params: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_gtp_apn": {
    "prefix": "fmgr_gtp_apn",
    "description": "Configure APN for GTP.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_apn:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_apn: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_apngrp": {
    "prefix": "fmgr_gtp_apngrp",
    "description": "Configure APN groups for GTP.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_apngrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_apngrp: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_iewhitelist": {
    "prefix": "fmgr_gtp_iewhitelist",
    "description": "IE white list.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_iewhitelist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_iewhitelist: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_iewhitelist_entries": {
    "prefix": "fmgr_gtp_iewhitelist_entries",
    "description": "Entries of white list",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_iewhitelist_entries:",
      "\tadom: ${1:}",
      "\tie-white-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#gtp_iewhitelist_entries: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_gtp_messagefilterv0v1": {
    "prefix": "fmgr_gtp_messagefilterv0v1",
    "description": "Message filter for GTPv0/v1 messages.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_messagefilterv0v1:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_messagefilterv0v1: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_messagefilterv2": {
    "prefix": "fmgr_gtp_messagefilterv2",
    "description": "Message filter for GTPv2 messages.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_messagefilterv2:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_messagefilterv2: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_tunnellimit": {
    "prefix": "fmgr_gtp_tunnellimit",
    "description": "GTP tunnel limiter.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_tunnellimit:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_tunnellimit: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqp3gppcellular": {
    "prefix": "fmgr_hotspot20_anqp3gppcellular",
    "description": "Configure 3GPP public land mobile network",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqp3gppcellular:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqp3gppcellular: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqp3gppcellular_mccmnclist": {
    "prefix": "fmgr_hotspot20_anqp3gppcellular_mccmnclist",
    "description": "Mobile Country Code and Mobile Network Code configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqp3gppcellular_mccmnclist:",
      "\tadom: ${1:}",
      "\tanqp-3gpp-cellular: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqp3gppcellular_mccmnclist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_anqpipaddresstype": {
    "prefix": "fmgr_hotspot20_anqpipaddresstype",
    "description": "Configure IP address type availability.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpipaddresstype:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpipaddresstype: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqpnairealm": {
    "prefix": "fmgr_hotspot20_anqpnairealm",
    "description": "Configure network access identifier",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnairealm:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpnairealm: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqpnairealm_nailist": {
    "prefix": "fmgr_hotspot20_anqpnairealm_nailist",
    "description": "NAI list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnairealm_nailist:",
      "\tadom: ${1:}",
      "\tanqp-nai-realm: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqpnairealm_nailist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_anqpnairealm_nailist_eapmethod": {
    "prefix": "fmgr_hotspot20_anqpnairealm_nailist_eapmethod",
    "description": "EAP Methods.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnairealm_nailist_eapmethod:",
      "\tadom: ${1:}",
      "\tanqp-nai-realm: ${2:}",
      "\tnai-list: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#hotspot20_anqpnairealm_nailist_eapmethod: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam": {
    "prefix": "fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam",
    "description": "EAP auth param.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam:",
      "\tadom: ${1:}",
      "\tanqp-nai-realm: ${2:}",
      "\teap-method: ${3:}",
      "\tnai-list: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#access_token: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#hotspot20_anqpnairealm_nailist_eapmethod_authparam: ${10:}",
      "\t#proposed_method: ${11:update|set|add}",
      "\t#rc_failed: ${12:}",
      "\t#rc_succeeded: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_hotspot20_anqpnetworkauthtype": {
    "prefix": "fmgr_hotspot20_anqpnetworkauthtype",
    "description": "Configure network authentication type.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnetworkauthtype:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpnetworkauthtype: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqproamingconsortium": {
    "prefix": "fmgr_hotspot20_anqproamingconsortium",
    "description": "Configure roaming consortium.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqproamingconsortium:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqproamingconsortium: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqproamingconsortium_oilist": {
    "prefix": "fmgr_hotspot20_anqproamingconsortium_oilist",
    "description": "Organization identifier list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqproamingconsortium_oilist:",
      "\tadom: ${1:}",
      "\tanqp-roaming-consortium: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqproamingconsortium_oilist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_anqpvenuename": {
    "prefix": "fmgr_hotspot20_anqpvenuename",
    "description": "Configure venue name duple.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpvenuename:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpvenuename: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqpvenuename_valuelist": {
    "prefix": "fmgr_hotspot20_anqpvenuename_valuelist",
    "description": "Name list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpvenuename_valuelist:",
      "\tadom: ${1:}",
      "\tanqp-venue-name: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqpvenuename_valuelist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_anqpvenueurl": {
    "prefix": "fmgr_hotspot20_anqpvenueurl",
    "description": "Configure venue URL.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpvenueurl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpvenueurl: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqpvenueurl_valuelist": {
    "prefix": "fmgr_hotspot20_anqpvenueurl_valuelist",
    "description": "URL list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpvenueurl_valuelist:",
      "\tadom: ${1:}",
      "\tanqp-venue-url: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqpvenueurl_valuelist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qpadviceofcharge": {
    "prefix": "fmgr_hotspot20_h2qpadviceofcharge",
    "description": "Configure advice of charge.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpadviceofcharge:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qpadviceofcharge: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qpadviceofcharge_aoclist": {
    "prefix": "fmgr_hotspot20_h2qpadviceofcharge_aoclist",
    "description": "AOC list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpadviceofcharge_aoclist:",
      "\tadom: ${1:}",
      "\th2qp-advice-of-charge: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qpadviceofcharge_aoclist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo": {
    "prefix": "fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo",
    "description": "Plan info.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo:",
      "\tadom: ${1:}",
      "\taoc-list: ${2:}",
      "\th2qp-advice-of-charge: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#hotspot20_h2qpadviceofcharge_aoclist_planinfo: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_hotspot20_h2qpconncapability": {
    "prefix": "fmgr_hotspot20_h2qpconncapability",
    "description": "Configure connection capability.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpconncapability:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qpconncapability: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qpoperatorname": {
    "prefix": "fmgr_hotspot20_h2qpoperatorname",
    "description": "Configure operator friendly name.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpoperatorname:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qpoperatorname: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qpoperatorname_valuelist": {
    "prefix": "fmgr_hotspot20_h2qpoperatorname_valuelist",
    "description": "Name list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpoperatorname_valuelist:",
      "\tadom: ${1:}",
      "\th2qp-operator-name: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qpoperatorname_valuelist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovider": {
    "prefix": "fmgr_hotspot20_h2qposuprovider",
    "description": "Configure online sign up",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovider:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qposuprovider: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovider_friendlyname": {
    "prefix": "fmgr_hotspot20_h2qposuprovider_friendlyname",
    "description": "OSU provider friendly name.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovider_friendlyname:",
      "\tadom: ${1:}",
      "\th2qp-osu-provider: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qposuprovider_friendlyname: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovider_servicedescription": {
    "prefix": "fmgr_hotspot20_h2qposuprovider_servicedescription",
    "description": "OSU service name.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovider_servicedescription:",
      "\tadom: ${1:}",
      "\th2qp-osu-provider: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qposuprovider_servicedescription: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovidernai": {
    "prefix": "fmgr_hotspot20_h2qposuprovidernai",
    "description": "Configure online sign up",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovidernai:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qposuprovidernai: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovidernai_nailist": {
    "prefix": "fmgr_hotspot20_h2qposuprovidernai_nailist",
    "description": "OSU NAI list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovidernai_nailist:",
      "\tadom: ${1:}",
      "\th2qp-osu-provider-nai: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qposuprovidernai_nailist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qptermsandconditions": {
    "prefix": "fmgr_hotspot20_h2qptermsandconditions",
    "description": "Configure terms and conditions.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qptermsandconditions:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qptermsandconditions: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qpwanmetric": {
    "prefix": "fmgr_hotspot20_h2qpwanmetric",
    "description": "Configure WAN metrics.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpwanmetric:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qpwanmetric: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_hsprofile": {
    "prefix": "fmgr_hotspot20_hsprofile",
    "description": "Configure hotspot profile.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_hsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_hsprofile: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_icon": {
    "prefix": "fmgr_hotspot20_icon",
    "description": "Configure OSU provider icon.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_icon:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_icon: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_icon_iconlist": {
    "prefix": "fmgr_hotspot20_icon_iconlist",
    "description": "Icon list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_icon_iconlist:",
      "\tadom: ${1:}",
      "\ticon: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_icon_iconlist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_qosmap": {
    "prefix": "fmgr_hotspot20_qosmap",
    "description": "Configure QoS map set.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_qosmap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_qosmap: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_qosmap_dscpexcept": {
    "prefix": "fmgr_hotspot20_qosmap_dscpexcept",
    "description": "Differentiated Services Code Point",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_qosmap_dscpexcept:",
      "\tadom: ${1:}",
      "\tqos-map: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_qosmap_dscpexcept: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_qosmap_dscprange": {
    "prefix": "fmgr_hotspot20_qosmap_dscprange",
    "description": "Differentiated Services Code Point",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_qosmap_dscprange:",
      "\tadom: ${1:}",
      "\tqos-map: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_qosmap_dscprange: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_icap_profile": {
    "prefix": "fmgr_icap_profile",
    "description": "Configure ICAP profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#icap_profile: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_icap_profile_icapheaders": {
    "prefix": "fmgr_icap_profile_icapheaders",
    "description": "Configure ICAP forwarded request headers.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_profile_icapheaders:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#icap_profile_icapheaders: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_icap_profile_respmodforwardrules": {
    "prefix": "fmgr_icap_profile_respmodforwardrules",
    "description": "ICAP response mode forward rules.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_profile_respmodforwardrules:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#icap_profile_respmodforwardrules: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_icap_profile_respmodforwardrules_headergroup": {
    "prefix": "fmgr_icap_profile_respmodforwardrules_headergroup",
    "description": "HTTP header group.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_profile_respmodforwardrules_headergroup:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\trespmod-forward-rules: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#icap_profile_respmodforwardrules_headergroup: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_icap_server": {
    "prefix": "fmgr_icap_server",
    "description": "Configure ICAP servers.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_server:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#icap_server: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_ips_baseline_sensor": {
    "prefix": "fmgr_ips_baseline_sensor",
    "description": "Configure IPS sensor.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#ips_baseline_sensor: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_entries": {
    "prefix": "fmgr_ips_baseline_sensor_entries",
    "description": "IPS sensor filter.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_entries:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#ips_baseline_sensor_entries: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_entries_exemptip": {
    "prefix": "fmgr_ips_baseline_sensor_entries_exemptip",
    "description": "Traffic from selected source or destination IP addresses is exempt from this signature.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_entries_exemptip:",
      "\tadom: ${1:}",
      "\tentries: ${2:}",
      "\tsensor: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#ips_baseline_sensor_entries_exemptip: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_filter": {
    "prefix": "fmgr_ips_baseline_sensor_filter",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_filter:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#ips_baseline_sensor_filter: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_override": {
    "prefix": "fmgr_ips_baseline_sensor_override",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_override:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#ips_baseline_sensor_override: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_override_exemptip": {
    "prefix": "fmgr_ips_baseline_sensor_override_exemptip",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_override_exemptip:",
      "\tadom: ${1:}",
      "\toverride: ${2:}",
      "\tsensor: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#ips_baseline_sensor_override_exemptip: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_ips_custom": {
    "prefix": "fmgr_ips_custom",
    "description": "Configure IPS custom signature.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_custom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#ips_custom: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_ips_sensor": {
    "prefix": "fmgr_ips_sensor",
    "description": "Configure IPS sensor.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_sensor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#ips_sensor: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_ips_sensor_entries": {
    "prefix": "fmgr_ips_sensor_entries",
    "description": "IPS sensor filter.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_sensor_entries:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#ips_sensor_entries: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_ips_sensor_entries_exemptip": {
    "prefix": "fmgr_ips_sensor_entries_exemptip",
    "description": "Traffic from selected source or destination IP addresses is exempt from this signature.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_sensor_entries_exemptip:",
      "\tadom: ${1:}",
      "\tentries: ${2:}",
      "\tsensor: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#ips_sensor_entries_exemptip: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_log_customfield": {
    "prefix": "fmgr_log_customfield",
    "description": "Configure custom log fields.",
    "body": [
      "fortinet.fortimanager.fmgr_log_customfield:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#log_customfield: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_log_npuserver": {
    "prefix": "fmgr_log_npuserver",
    "description": "Configure all the log servers and create the server groups.",
    "body": [
      "fortinet.fortimanager.fmgr_log_npuserver:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#log_npuserver: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_log_npuserver_servergroup": {
    "prefix": "fmgr_log_npuserver_servergroup",
    "description": "create server group.",
    "body": [
      "fortinet.fortimanager.fmgr_log_npuserver_servergroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#log_npuserver_servergroup: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_log_npuserver_serverinfo": {
    "prefix": "fmgr_log_npuserver_serverinfo",
    "description": "configure server info.",
    "body": [
      "fortinet.fortimanager.fmgr_log_npuserver_serverinfo:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#log_npuserver_serverinfo: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_metafields_system_admin_user": {
    "prefix": "fmgr_metafields_system_admin_user",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_metafields_system_admin_user:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#metafields_system_admin_user: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_move": {
    "prefix": "fmgr_move",
    "description": "Move fortimanager defined Object.",
    "body": [
      "fortinet.fortimanager.fmgr_move:",
      "\tmove: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_mpskprofile": {
    "prefix": "fmgr_mpskprofile",
    "description": "Configure MPSK profile.",
    "body": [
      "fortinet.fortimanager.fmgr_mpskprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#mpskprofile: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_mpskprofile_mpskgroup": {
    "prefix": "fmgr_mpskprofile_mpskgroup",
    "description": "List of multiple PSK groups.",
    "body": [
      "fortinet.fortimanager.fmgr_mpskprofile_mpskgroup:",
      "\tadom: ${1:}",
      "\tmpsk-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#mpskprofile_mpskgroup: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_mpskprofile_mpskgroup_mpskkey": {
    "prefix": "fmgr_mpskprofile_mpskgroup_mpskkey",
    "description": "List of multiple PSK entries.",
    "body": [
      "fortinet.fortimanager.fmgr_mpskprofile_mpskgroup_mpskkey:",
      "\tadom: ${1:}",
      "\tmpsk-group: ${2:}",
      "\tmpsk-profile: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#mpskprofile_mpskgroup_mpskkey: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_nacprofile": {
    "prefix": "fmgr_nacprofile",
    "description": "Configure WiFi network access control",
    "body": [
      "fortinet.fortimanager.fmgr_nacprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#nacprofile: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_authentication_rule": {
    "prefix": "fmgr_pkg_authentication_rule",
    "description": "Configure Authentication Rules.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_authentication_rule:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_authentication_rule: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_authentication_setting": {
    "prefix": "fmgr_pkg_authentication_setting",
    "description": "Configure authentication setting.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_authentication_setting:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_authentication_setting: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_central_dnat": {
    "prefix": "fmgr_pkg_central_dnat",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_central_dnat:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_central_dnat: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_central_dnat6": {
    "prefix": "fmgr_pkg_central_dnat6",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_central_dnat6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_central_dnat6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_acl": {
    "prefix": "fmgr_pkg_firewall_acl",
    "description": "Configure IPv4 access control list.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_acl:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_acl: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_acl6": {
    "prefix": "fmgr_pkg_firewall_acl6",
    "description": "Configure IPv6 access control list.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_acl6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_acl6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_centralsnatmap": {
    "prefix": "fmgr_pkg_firewall_centralsnatmap",
    "description": "Configure central SNAT policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_centralsnatmap:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_centralsnatmap: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_consolidated_policy": {
    "prefix": "fmgr_pkg_firewall_consolidated_policy",
    "description": "Configure consolidated IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_consolidated_policy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_consolidated_policy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_consolidated_policy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_consolidated_policy_sectionvalue",
    "description": "Configure consolidated IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_consolidated_policy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_consolidated_policy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_dospolicy": {
    "prefix": "fmgr_pkg_firewall_dospolicy",
    "description": "Configure IPv4 DoS policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_dospolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_dospolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_dospolicy6": {
    "prefix": "fmgr_pkg_firewall_dospolicy6",
    "description": "Configure IPv6 DoS policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_dospolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_dospolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_dospolicy6_anomaly": {
    "prefix": "fmgr_pkg_firewall_dospolicy6_anomaly",
    "description": "Anomaly name.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_dospolicy6_anomaly:",
      "\tDoS-policy6: ${1:}",
      "\tadom: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_dospolicy6_anomaly: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_dospolicy_anomaly": {
    "prefix": "fmgr_pkg_firewall_dospolicy_anomaly",
    "description": "Anomaly name.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_dospolicy_anomaly:",
      "\tDoS-policy: ${1:}",
      "\tadom: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_dospolicy_anomaly: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_explicitproxypolicy": {
    "prefix": "fmgr_pkg_firewall_explicitproxypolicy",
    "description": "Configure Explicit proxy policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_explicitproxypolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_explicitproxypolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_explicitproxypolicy_identitybasedpolicy": {
    "prefix": "fmgr_pkg_firewall_explicitproxypolicy_identitybasedpolicy",
    "description": "Identity-based policy.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_explicitproxypolicy_identitybasedpolicy:",
      "\tadom: ${1:}",
      "\texplicit-proxy-policy: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_explicitproxypolicy_identitybasedpolicy: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_explicitproxypolicy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_explicitproxypolicy_sectionvalue",
    "description": "Configure Explicit proxy policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_explicitproxypolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\texplicit-proxy-policy: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_explicitproxypolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_hyperscalepolicy": {
    "prefix": "fmgr_pkg_firewall_hyperscalepolicy",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_hyperscalepolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_hyperscalepolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_hyperscalepolicy46": {
    "prefix": "fmgr_pkg_firewall_hyperscalepolicy46",
    "description": "Configure IPv4 to IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_hyperscalepolicy46:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_hyperscalepolicy46: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_hyperscalepolicy6": {
    "prefix": "fmgr_pkg_firewall_hyperscalepolicy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_hyperscalepolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_hyperscalepolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_hyperscalepolicy64": {
    "prefix": "fmgr_pkg_firewall_hyperscalepolicy64",
    "description": "Configure IPv6 to IPv4 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_hyperscalepolicy64:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_hyperscalepolicy64: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_interfacepolicy": {
    "prefix": "fmgr_pkg_firewall_interfacepolicy",
    "description": "Configure IPv4 interface policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_interfacepolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_interfacepolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_interfacepolicy6": {
    "prefix": "fmgr_pkg_firewall_interfacepolicy6",
    "description": "Configure IPv6 interface policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_interfacepolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_interfacepolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_interfacepolicy6_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_interfacepolicy6_sectionvalue",
    "description": "Configure IPv6 interface policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_interfacepolicy6_sectionvalue:",
      "\tadom: ${1:}",
      "\tinterface-policy6: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_interfacepolicy6_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_interfacepolicy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_interfacepolicy_sectionvalue",
    "description": "Configure IPv4 interface policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_interfacepolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\tinterface-policy: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_interfacepolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_localinpolicy": {
    "prefix": "fmgr_pkg_firewall_localinpolicy",
    "description": "Configure user defined IPv4 local-in policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_localinpolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_localinpolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_localinpolicy6": {
    "prefix": "fmgr_pkg_firewall_localinpolicy6",
    "description": "Configure user defined IPv6 local-in policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_localinpolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_localinpolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_multicastpolicy": {
    "prefix": "fmgr_pkg_firewall_multicastpolicy",
    "description": "Configure multicast NAT policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_multicastpolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_multicastpolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_multicastpolicy6": {
    "prefix": "fmgr_pkg_firewall_multicastpolicy6",
    "description": "Configure IPv6 multicast NAT policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_multicastpolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_multicastpolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy": {
    "prefix": "fmgr_pkg_firewall_policy",
    "description": "Configure IPv4 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_policy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy46": {
    "prefix": "fmgr_pkg_firewall_policy46",
    "description": "Configure IPv4 to IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy46:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_policy46: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy6": {
    "prefix": "fmgr_pkg_firewall_policy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_policy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy64": {
    "prefix": "fmgr_pkg_firewall_policy64",
    "description": "Configure IPv6 to IPv4 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy64:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_policy64: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy6_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_policy6_sectionvalue",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy6_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_policy6_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_policy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_policy_sectionvalue",
    "description": "Configure IPv4 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_policy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_policy_vpndstnode": {
    "prefix": "fmgr_pkg_firewall_policy_vpndstnode",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy_vpndstnode:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_policy_vpndstnode: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_policy_vpnsrcnode": {
    "prefix": "fmgr_pkg_firewall_policy_vpnsrcnode",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy_vpnsrcnode:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_policy_vpnsrcnode: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_proxypolicy": {
    "prefix": "fmgr_pkg_firewall_proxypolicy",
    "description": "Configure proxy policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_proxypolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_proxypolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_proxypolicy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_proxypolicy_sectionvalue",
    "description": "Configure proxy policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_proxypolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tproxy-policy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_proxypolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_securitypolicy": {
    "prefix": "fmgr_pkg_firewall_securitypolicy",
    "description": "Configure NGFW IPv4/IPv6 application policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_securitypolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_securitypolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_securitypolicy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_securitypolicy_sectionvalue",
    "description": "Configure NGFW IPv4/IPv6 application policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_securitypolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tsecurity-policy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_securitypolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_shapingpolicy": {
    "prefix": "fmgr_pkg_firewall_shapingpolicy",
    "description": "Configure shaping policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_shapingpolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_shapingpolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_footer_policy": {
    "prefix": "fmgr_pkg_footer_policy",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_footer_policy:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_footer_policy: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_footer_policy6": {
    "prefix": "fmgr_pkg_footer_policy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_footer_policy6:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_footer_policy6: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_footer_shapingpolicy": {
    "prefix": "fmgr_pkg_footer_shapingpolicy",
    "description": "Configure shaping policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_footer_shapingpolicy:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_footer_shapingpolicy: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_header_policy": {
    "prefix": "fmgr_pkg_header_policy",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_header_policy:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_header_policy: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_header_policy6": {
    "prefix": "fmgr_pkg_header_policy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_header_policy6:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_header_policy6: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_header_shapingpolicy": {
    "prefix": "fmgr_pkg_header_shapingpolicy",
    "description": "Configure shaping policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_header_shapingpolicy:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_header_shapingpolicy: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_user_nacpolicy": {
    "prefix": "fmgr_pkg_user_nacpolicy",
    "description": "Configure NAC policy matching pattern to identify matching NAC devices.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_user_nacpolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_user_nacpolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_meta_reference": {
    "prefix": "fmgr_pm_config_meta_reference",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_meta_reference:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_config_meta_reference: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_address": {
    "prefix": "fmgr_pm_config_metafields_firewall_address",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_address:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_address: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_addrgrp": {
    "prefix": "fmgr_pm_config_metafields_firewall_addrgrp",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_addrgrp:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_addrgrp: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_centralsnatmap": {
    "prefix": "fmgr_pm_config_metafields_firewall_centralsnatmap",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_centralsnatmap:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_centralsnatmap: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_policy": {
    "prefix": "fmgr_pm_config_metafields_firewall_policy",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_policy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_policy: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_service_custom": {
    "prefix": "fmgr_pm_config_metafields_firewall_service_custom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_service_custom:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_service_custom: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_service_group": {
    "prefix": "fmgr_pm_config_metafields_firewall_service_group",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_service_group:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_service_group: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_consolidated_policy": {
    "prefix": "fmgr_pm_config_pblock_firewall_consolidated_policy",
    "description": "Configure consolidated IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_consolidated_policy:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_config_pblock_firewall_consolidated_policy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_consolidated_policy_sectionvalue": {
    "prefix": "fmgr_pm_config_pblock_firewall_consolidated_policy_sectionvalue",
    "description": "Configure consolidated IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_consolidated_policy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pm_config_pblock_firewall_consolidated_policy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_policy": {
    "prefix": "fmgr_pm_config_pblock_firewall_policy",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_policy:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_config_pblock_firewall_policy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_policy6": {
    "prefix": "fmgr_pm_config_pblock_firewall_policy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_policy6:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_config_pblock_firewall_policy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_policy6_sectionvalue": {
    "prefix": "fmgr_pm_config_pblock_firewall_policy6_sectionvalue",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_policy6_sectionvalue:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tpolicy6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pm_config_pblock_firewall_policy6_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_policy_sectionvalue": {
    "prefix": "fmgr_pm_config_pblock_firewall_policy_sectionvalue",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_policy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pm_config_pblock_firewall_policy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_securitypolicy": {
    "prefix": "fmgr_pm_config_pblock_firewall_securitypolicy",
    "description": "Configure NGFW IPv4/IPv6 application policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_securitypolicy:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_config_pblock_firewall_securitypolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_securitypolicy_sectionvalue": {
    "prefix": "fmgr_pm_config_pblock_firewall_securitypolicy_sectionvalue",
    "description": "Configure NGFW IPv4/IPv6 application policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_securitypolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tsecurity-policy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pm_config_pblock_firewall_securitypolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pm_config_reset_database": {
    "prefix": "fmgr_pm_config_reset_database",
    "description": "Reset Global ADOM to a specific version.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_reset_database:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_reset_database: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_config_upgrade": {
    "prefix": "fmgr_pm_config_upgrade",
    "description": "Upgrade an ADOM to the next version.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_upgrade:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_config_workspace_commit": {
    "prefix": "fmgr_pm_config_workspace_commit",
    "description": "Commit changes to an ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_workspace_commit:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_config_workspace_lock": {
    "prefix": "fmgr_pm_config_workspace_lock",
    "description": "Lock an ADOM in workspace mode.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_workspace_lock:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_config_workspace_unlock": {
    "prefix": "fmgr_pm_config_workspace_unlock",
    "description": "Unlock an ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_workspace_unlock:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_devprof_adom": {
    "prefix": "fmgr_pm_devprof_adom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_devprof_adom:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_devprof_adom: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_pm_devprof_pkg": {
    "prefix": "fmgr_pm_devprof_pkg",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_devprof_pkg:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_devprof_pkg: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_devprof_scopemember": {
    "prefix": "fmgr_pm_devprof_scopemember",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_devprof_scopemember:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_devprof_scopemember: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_pblock_adom": {
    "prefix": "fmgr_pm_pblock_adom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pblock_adom:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_pblock_adom: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_pm_pblock_obj": {
    "prefix": "fmgr_pm_pblock_obj",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pblock_obj:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_pblock_obj: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_pkg": {
    "prefix": "fmgr_pm_pkg",
    "description": "Policy package or folder.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pkg:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_pkg: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_pkg_adom": {
    "prefix": "fmgr_pm_pkg_adom",
    "description": "Policy package or folder.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pkg_adom:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_pkg_adom: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_pm_pkg_global": {
    "prefix": "fmgr_pm_pkg_global",
    "description": "Policy package or folder.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pkg_global:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_pkg_global: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_pkg_scopemember": {
    "prefix": "fmgr_pm_pkg_scopemember",
    "description": "Policy package or folder.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pkg_scopemember:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_pkg_scopemember: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_wanprof_adom": {
    "prefix": "fmgr_pm_wanprof_adom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_wanprof_adom:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_wanprof_adom: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_pm_wanprof_pkg": {
    "prefix": "fmgr_pm_wanprof_pkg",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_wanprof_pkg:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_wanprof_pkg: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_wanprof_scopemember": {
    "prefix": "fmgr_pm_wanprof_scopemember",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_wanprof_scopemember:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_wanprof_scopemember: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_qosprofile": {
    "prefix": "fmgr_qosprofile",
    "description": "Configure WiFi quality of service",
    "body": [
      "fortinet.fortimanager.fmgr_qosprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#qosprofile: ${8:}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_region": {
    "prefix": "fmgr_region",
    "description": "Configure FortiAP regions",
    "body": [
      "fortinet.fortimanager.fmgr_region:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#region: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_rename": {
    "prefix": "fmgr_rename",
    "description": "Rename an object in FortiManager.",
    "body": [
      "fortinet.fortimanager.fmgr_rename:",
      "\trename: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_router_accesslist": {
    "prefix": "fmgr_router_accesslist",
    "description": "Configure access lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_accesslist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_accesslist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_accesslist6": {
    "prefix": "fmgr_router_accesslist6",
    "description": "Configure IPv6 access lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_accesslist6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_accesslist6: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_accesslist6_rule": {
    "prefix": "fmgr_router_accesslist6_rule",
    "description": "Rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_accesslist6_rule:",
      "\taccess-list6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_accesslist6_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_accesslist_rule": {
    "prefix": "fmgr_router_accesslist_rule",
    "description": "Rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_accesslist_rule:",
      "\taccess-list: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_accesslist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_aspathlist": {
    "prefix": "fmgr_router_aspathlist",
    "description": "Configure Autonomous System",
    "body": [
      "fortinet.fortimanager.fmgr_router_aspathlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_aspathlist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_aspathlist_rule": {
    "prefix": "fmgr_router_aspathlist_rule",
    "description": "AS path list rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_aspathlist_rule:",
      "\tadom: ${1:}",
      "\taspath-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_aspathlist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_communitylist": {
    "prefix": "fmgr_router_communitylist",
    "description": "Configure community lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_communitylist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_communitylist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_communitylist_rule": {
    "prefix": "fmgr_router_communitylist_rule",
    "description": "Community list rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_communitylist_rule:",
      "\tadom: ${1:}",
      "\tcommunity-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_communitylist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_prefixlist": {
    "prefix": "fmgr_router_prefixlist",
    "description": "Configure IPv4 prefix lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_prefixlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_prefixlist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_prefixlist6": {
    "prefix": "fmgr_router_prefixlist6",
    "description": "Configure IPv6 prefix lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_prefixlist6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_prefixlist6: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_prefixlist6_rule": {
    "prefix": "fmgr_router_prefixlist6_rule",
    "description": "IPv6 prefix list rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_prefixlist6_rule:",
      "\tadom: ${1:}",
      "\tprefix-list6: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_prefixlist6_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_prefixlist_rule": {
    "prefix": "fmgr_router_prefixlist_rule",
    "description": "IPv4 prefix list rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_prefixlist_rule:",
      "\tadom: ${1:}",
      "\tprefix-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_prefixlist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_routemap": {
    "prefix": "fmgr_router_routemap",
    "description": "Configure route maps.",
    "body": [
      "fortinet.fortimanager.fmgr_router_routemap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_routemap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_routemap_rule": {
    "prefix": "fmgr_router_routemap_rule",
    "description": "Rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_routemap_rule:",
      "\tadom: ${1:}",
      "\troute-map: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_routemap_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_securityconsole_abort": {
    "prefix": "fmgr_securityconsole_abort",
    "description": "Abort and cancel a security console task.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_abort:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_abort: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_assign_package": {
    "prefix": "fmgr_securityconsole_assign_package",
    "description": "Assign or unassign global policy package to ADOM packages.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_assign_package:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_assign_package: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_cliprof_check": {
    "prefix": "fmgr_securityconsole_cliprof_check",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_cliprof_check:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_cliprof_check: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_import_dev_objs": {
    "prefix": "fmgr_securityconsole_import_dev_objs",
    "description": "Import objects from device to ADOM, or from ADOM to Global.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_import_dev_objs:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_import_dev_objs: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_install_device": {
    "prefix": "fmgr_securityconsole_install_device",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_install_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_install_device: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_install_objects_v2": {
    "prefix": "fmgr_securityconsole_install_objects_v2",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_install_objects_v2:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_install_objects_v2: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_install_package": {
    "prefix": "fmgr_securityconsole_install_package",
    "description": "Copy and install a policy package to devices.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_install_package:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_install_package: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_install_preview": {
    "prefix": "fmgr_securityconsole_install_preview",
    "description": "Generate install preview for a device.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_install_preview:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_install_preview: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_package_cancel_install": {
    "prefix": "fmgr_securityconsole_package_cancel_install",
    "description": "Cancel policy install and clear preview cache.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_package_cancel_install:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_package_cancel_install: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_package_clone": {
    "prefix": "fmgr_securityconsole_package_clone",
    "description": "Clone a policy package within the same ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_package_clone:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_package_clone: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_package_commit": {
    "prefix": "fmgr_securityconsole_package_commit",
    "description": "Install policies to device from preview cache.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_package_commit:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_package_commit: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_package_move": {
    "prefix": "fmgr_securityconsole_package_move",
    "description": "Move and/or rename a policy package within the same ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_package_move:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_package_move: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_pblock_clone": {
    "prefix": "fmgr_securityconsole_pblock_clone",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_pblock_clone:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_pblock_clone: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_preview_result": {
    "prefix": "fmgr_securityconsole_preview_result",
    "description": "Retrieve the result of previous install/preview command.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_preview_result:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_preview_result: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_reinstall_package": {
    "prefix": "fmgr_securityconsole_reinstall_package",
    "description": "Re-install a policy package that had been previously installed.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_reinstall_package:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_reinstall_package: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_sign_certificate_template": {
    "prefix": "fmgr_securityconsole_sign_certificate_template",
    "description": "Generate and sign certificate on the target device.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_sign_certificate_template:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_sign_certificate_template: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_template_cli_preview": {
    "prefix": "fmgr_securityconsole_template_cli_preview",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_template_cli_preview:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_template_cli_preview: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_spamfilter_bwl": {
    "prefix": "fmgr_spamfilter_bwl",
    "description": "Configure anti-spam black/white list.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_bwl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_bwl: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_bwl_entries": {
    "prefix": "fmgr_spamfilter_bwl_entries",
    "description": "Anti-spam black/white list entries.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_bwl_entries:",
      "\tadom: ${1:}",
      "\tbwl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_bwl_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_bword": {
    "prefix": "fmgr_spamfilter_bword",
    "description": "Configure AntiSpam banned word list.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_bword:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_bword: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_bword_entries": {
    "prefix": "fmgr_spamfilter_bword_entries",
    "description": "Spam filter banned word.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_bword_entries:",
      "\tadom: ${1:}",
      "\tbword: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_bword_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_dnsbl": {
    "prefix": "fmgr_spamfilter_dnsbl",
    "description": "Configure AntiSpam DNSBL/ORBL.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_dnsbl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_dnsbl: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_dnsbl_entries": {
    "prefix": "fmgr_spamfilter_dnsbl_entries",
    "description": "Spam filter DNSBL and ORBL server.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_dnsbl_entries:",
      "\tadom: ${1:}",
      "\tdnsbl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_dnsbl_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_iptrust": {
    "prefix": "fmgr_spamfilter_iptrust",
    "description": "Configure AntiSpam IP trust.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_iptrust:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_iptrust: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_iptrust_entries": {
    "prefix": "fmgr_spamfilter_iptrust_entries",
    "description": "Spam filter trusted IP addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_iptrust_entries:",
      "\tadom: ${1:}",
      "\tiptrust: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_iptrust_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_mheader": {
    "prefix": "fmgr_spamfilter_mheader",
    "description": "Configure AntiSpam MIME header.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_mheader:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_mheader: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_mheader_entries": {
    "prefix": "fmgr_spamfilter_mheader_entries",
    "description": "Spam filter mime header content.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_mheader_entries:",
      "\tadom: ${1:}",
      "\tmheader: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_mheader_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_profile": {
    "prefix": "fmgr_spamfilter_profile",
    "description": "Configure AntiSpam profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_gmail": {
    "prefix": "fmgr_spamfilter_profile_gmail",
    "description": "Gmail.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_gmail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_gmail: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_imap": {
    "prefix": "fmgr_spamfilter_profile_imap",
    "description": "IMAP.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_imap:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_imap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_mapi": {
    "prefix": "fmgr_spamfilter_profile_mapi",
    "description": "MAPI.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_mapi:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_mapi: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_msnhotmail": {
    "prefix": "fmgr_spamfilter_profile_msnhotmail",
    "description": "MSN Hotmail.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_msnhotmail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_msnhotmail: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_pop3": {
    "prefix": "fmgr_spamfilter_profile_pop3",
    "description": "POP3.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_pop3:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_pop3: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_smtp": {
    "prefix": "fmgr_spamfilter_profile_smtp",
    "description": "SMTP.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_smtp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_smtp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_yahoomail": {
    "prefix": "fmgr_spamfilter_profile_yahoomail",
    "description": "Yahoo! Mail.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_yahoomail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_yahoomail: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_sshfilter_profile": {
    "prefix": "fmgr_sshfilter_profile",
    "description": "SSH filter profile.",
    "body": [
      "fortinet.fortimanager.fmgr_sshfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#sshfilter_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_sshfilter_profile_filefilter": {
    "prefix": "fmgr_sshfilter_profile_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_sshfilter_profile_filefilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#sshfilter_profile_filefilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_sshfilter_profile_filefilter_entries": {
    "prefix": "fmgr_sshfilter_profile_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_sshfilter_profile_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#sshfilter_profile_filefilter_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_sshfilter_profile_shellcommands": {
    "prefix": "fmgr_sshfilter_profile_shellcommands",
    "description": "SSH command filter.",
    "body": [
      "fortinet.fortimanager.fmgr_sshfilter_profile_shellcommands:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#sshfilter_profile_shellcommands: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_acl_group": {
    "prefix": "fmgr_switchcontroller_acl_group",
    "description": "Configure ACL groups to be applied on managed FortiSwitch ports.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_acl_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_acl_group: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_acl_ingress": {
    "prefix": "fmgr_switchcontroller_acl_ingress",
    "description": "Configure ingress ACL policies to be applied on managed FortiSwitch ports.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_acl_ingress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_acl_ingress: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_acl_ingress_action": {
    "prefix": "fmgr_switchcontroller_acl_ingress_action",
    "description": "ACL actions.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_acl_ingress_action:",
      "\tadom: ${1:}",
      "\tingress: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_acl_ingress_action: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_acl_ingress_classifier": {
    "prefix": "fmgr_switchcontroller_acl_ingress_classifier",
    "description": "ACL classifiers.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_acl_ingress_classifier:",
      "\tadom: ${1:}",
      "\tingress: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_acl_ingress_classifier: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_customcommand": {
    "prefix": "fmgr_switchcontroller_customcommand",
    "description": "Configure the FortiGate switch controller to send custom commands to managed FortiSwitch devices.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_customcommand:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_customcommand: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_dsl_policy": {
    "prefix": "fmgr_switchcontroller_dsl_policy",
    "description": "DSL policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_dsl_policy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_dsl_policy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_dynamicportpolicy": {
    "prefix": "fmgr_switchcontroller_dynamicportpolicy",
    "description": "Configure Dynamic port policy to be applied on the managed FortiSwitch ports through DPP device.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_dynamicportpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_dynamicportpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_dynamicportpolicy_policy": {
    "prefix": "fmgr_switchcontroller_dynamicportpolicy_policy",
    "description": "Port policies with matching criteria and actions.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_dynamicportpolicy_policy:",
      "\tadom: ${1:}",
      "\tdynamic-port-policy: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_dynamicportpolicy_policy: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_fortilinksettings": {
    "prefix": "fmgr_switchcontroller_fortilinksettings",
    "description": "Configure integrated FortiLink settings for FortiSwitch.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_fortilinksettings:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_fortilinksettings: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_fortilinksettings_nacports": {
    "prefix": "fmgr_switchcontroller_fortilinksettings_nacports",
    "description": "NAC specific configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_fortilinksettings_nacports:",
      "\tadom: ${1:}",
      "\tfortilink-settings: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_fortilinksettings_nacports: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_lldpprofile": {
    "prefix": "fmgr_switchcontroller_lldpprofile",
    "description": "Configure FortiSwitch LLDP profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_lldpprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_lldpprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_lldpprofile_customtlvs": {
    "prefix": "fmgr_switchcontroller_lldpprofile_customtlvs",
    "description": "Configuration method to edit custom TLV entries.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_lldpprofile_customtlvs:",
      "\tadom: ${1:}",
      "\tlldp-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_lldpprofile_customtlvs: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_lldpprofile_medlocationservice": {
    "prefix": "fmgr_switchcontroller_lldpprofile_medlocationservice",
    "description": "Configuration method to edit Media Endpoint Discovery",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_lldpprofile_medlocationservice:",
      "\tadom: ${1:}",
      "\tlldp-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_lldpprofile_medlocationservice: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_lldpprofile_mednetworkpolicy": {
    "prefix": "fmgr_switchcontroller_lldpprofile_mednetworkpolicy",
    "description": "Configuration method to edit Media Endpoint Discovery",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_lldpprofile_mednetworkpolicy:",
      "\tadom: ${1:}",
      "\tlldp-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_lldpprofile_mednetworkpolicy: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_macpolicy": {
    "prefix": "fmgr_switchcontroller_macpolicy",
    "description": "Configure MAC policy to be applied on the managed FortiSwitch devices through NAC device.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_macpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_macpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch": {
    "prefix": "fmgr_switchcontroller_managedswitch",
    "description": "Configure FortiSwitch devices that are managed by this FortiGate.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_managedswitch: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_8021xsettings": {
    "prefix": "fmgr_switchcontroller_managedswitch_8021xsettings",
    "description": "Configuration method to edit FortiSwitch 802.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_8021xsettings:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_customcommand": {
    "prefix": "fmgr_switchcontroller_managedswitch_customcommand",
    "description": "Configuration method to edit FortiSwitch commands to be pushed to this FortiSwitch device upon rebooting the FortiGate switch controller ...",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_customcommand:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_customcommand: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_dhcpsnoopingstaticclient": {
    "prefix": "fmgr_switchcontroller_managedswitch_dhcpsnoopingstaticclient",
    "description": "Configure FortiSwitch DHCP snooping static clients.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_dhcpsnoopingstaticclient:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_dhcpsnoopingstaticclient: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_igmpsnooping": {
    "prefix": "fmgr_switchcontroller_managedswitch_igmpsnooping",
    "description": "Configure FortiSwitch IGMP snooping global settings.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_igmpsnooping:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_ipsourceguard": {
    "prefix": "fmgr_switchcontroller_managedswitch_ipsourceguard",
    "description": "IP source guard.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_ipsourceguard:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_ipsourceguard: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_ipsourceguard_bindingentry": {
    "prefix": "fmgr_switchcontroller_managedswitch_ipsourceguard_bindingentry",
    "description": "IP and MAC address configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_ipsourceguard_bindingentry:",
      "\tadom: ${1:}",
      "\tip-source-guard: ${2:}",
      "\tmanaged-switch: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#switchcontroller_managedswitch_ipsourceguard_bindingentry: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_mirror": {
    "prefix": "fmgr_switchcontroller_managedswitch_mirror",
    "description": "Configuration method to edit FortiSwitch packet mirror.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_mirror:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvdom: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_ports": {
    "prefix": "fmgr_switchcontroller_managedswitch_ports",
    "description": "Managed-switch port list.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_ports:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_ports: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_ports_dhcpsnoopoption82override": {
    "prefix": "fmgr_switchcontroller_managedswitch_ports_dhcpsnoopoption82override",
    "description": "Configure DHCP snooping option 82 override.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_ports_dhcpsnoopoption82override:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tports: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#switchcontroller_managedswitch_ports_dhcpsnoopoption82override: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_remotelog": {
    "prefix": "fmgr_switchcontroller_managedswitch_remotelog",
    "description": "Configure logging by FortiSwitch device to a remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_remotelog:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_remotelog: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_routeoffloadrouter": {
    "prefix": "fmgr_switchcontroller_managedswitch_routeoffloadrouter",
    "description": "Configure route offload MCLAG IP address.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_routeoffloadrouter:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_routeoffloadrouter: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmpcommunity": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmpcommunity",
    "description": "Configuration method to edit Simple Network Management Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmpcommunity:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_snmpcommunity: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmpcommunity_hosts": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmpcommunity_hosts",
    "description": "Configure IPv4 SNMP managers",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmpcommunity_hosts:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tsnmp-community: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#switchcontroller_managedswitch_snmpcommunity_hosts: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmpsysinfo": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmpsysinfo",
    "description": "Configuration method to edit Simple Network Management Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmpsysinfo:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_managedswitch_snmpsysinfo: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmptrapthreshold": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmptrapthreshold",
    "description": "Configuration method to edit Simple Network Management Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmptrapthreshold:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_managedswitch_snmptrapthreshold: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmpuser": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmpuser",
    "description": "Configuration method to edit Simple Network Management Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmpuser:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_snmpuser: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_staticmac": {
    "prefix": "fmgr_switchcontroller_managedswitch_staticmac",
    "description": "Configuration method to edit FortiSwitch Static and Sticky MAC.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_staticmac:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvdom: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_stormcontrol": {
    "prefix": "fmgr_switchcontroller_managedswitch_stormcontrol",
    "description": "Configuration method to edit FortiSwitch storm control for measuring traffic activity using data rates to prevent traffic disruption.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_stormcontrol:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_stpinstance": {
    "prefix": "fmgr_switchcontroller_managedswitch_stpinstance",
    "description": "Configuration method to edit Spanning Tree Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_stpinstance:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvdom: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_stpsettings": {
    "prefix": "fmgr_switchcontroller_managedswitch_stpsettings",
    "description": "Configuration method to edit Spanning Tree Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_stpsettings:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_switchlog": {
    "prefix": "fmgr_switchcontroller_managedswitch_switchlog",
    "description": "Configuration method to edit FortiSwitch logging settings",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_switchlog:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_switchstpsettings": {
    "prefix": "fmgr_switchcontroller_managedswitch_switchstpsettings",
    "description": "Configure spanning tree protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_switchstpsettings:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_ptp_profile": {
    "prefix": "fmgr_switchcontroller_ptp_profile",
    "description": "Global PTP profile.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_ptp_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_ptp_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_dot1pmap": {
    "prefix": "fmgr_switchcontroller_qos_dot1pmap",
    "description": "Configure FortiSwitch QoS 802.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_dot1pmap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_qos_dot1pmap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_ipdscpmap": {
    "prefix": "fmgr_switchcontroller_qos_ipdscpmap",
    "description": "Configure FortiSwitch QoS IP precedence/DSCP.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_ipdscpmap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_qos_ipdscpmap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_ipdscpmap_map": {
    "prefix": "fmgr_switchcontroller_qos_ipdscpmap_map",
    "description": "Maps between IP-DSCP value to COS queue.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_ipdscpmap_map:",
      "\tadom: ${1:}",
      "\tip-dscp-map: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_qos_ipdscpmap_map: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_qos_qospolicy": {
    "prefix": "fmgr_switchcontroller_qos_qospolicy",
    "description": "Configure FortiSwitch QoS policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_qospolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_qos_qospolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_queuepolicy": {
    "prefix": "fmgr_switchcontroller_qos_queuepolicy",
    "description": "Configure FortiSwitch QoS egress queue policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_queuepolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_qos_queuepolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_queuepolicy_cosqueue": {
    "prefix": "fmgr_switchcontroller_qos_queuepolicy_cosqueue",
    "description": "COS queue configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_queuepolicy_cosqueue:",
      "\tadom: ${1:}",
      "\tqueue-policy: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_qos_queuepolicy_cosqueue: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_securitypolicy_8021x": {
    "prefix": "fmgr_switchcontroller_securitypolicy_8021x",
    "description": "Configure 802.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_securitypolicy_8021x:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_securitypolicy_8021x: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_securitypolicy_captiveportal": {
    "prefix": "fmgr_switchcontroller_securitypolicy_captiveportal",
    "description": "Names of VLANs that use captive portal authentication.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_securitypolicy_captiveportal:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_securitypolicy_captiveportal: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_switchinterfacetag": {
    "prefix": "fmgr_switchcontroller_switchinterfacetag",
    "description": "Configure switch object tags.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_switchinterfacetag:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_switchinterfacetag: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_trafficpolicy": {
    "prefix": "fmgr_switchcontroller_trafficpolicy",
    "description": "Configure FortiSwitch traffic policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_trafficpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_trafficpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_vlanpolicy": {
    "prefix": "fmgr_switchcontroller_vlanpolicy",
    "description": "Configure VLAN policy to be applied on the managed FortiSwitch ports through dynamic-port-policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_vlanpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_vlanpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_sys_api_sdnconnector": {
    "prefix": "fmgr_sys_api_sdnconnector",
    "description": "Query SDN connector data.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_api_sdnconnector:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_api_sdnconnector: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_cloud_orchest": {
    "prefix": "fmgr_sys_cloud_orchest",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_sys_cloud_orchest:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_cloud_orchest: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_generate_wsdl": {
    "prefix": "fmgr_sys_generate_wsdl",
    "description": "Generate WSDL for specific module and objects.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_generate_wsdl:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_generate_wsdl: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_hitcount": {
    "prefix": "fmgr_sys_hitcount",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_sys_hitcount:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_hitcount: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_login_challenge": {
    "prefix": "fmgr_sys_login_challenge",
    "description": "Answer a log in challenge question, used following a login/user or login/challenge command.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_login_challenge:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_login_challenge: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_login_user": {
    "prefix": "fmgr_sys_login_user",
    "description": "Log into the device with user name and password.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_login_user:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_login_user: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_logout": {
    "prefix": "fmgr_sys_logout",
    "description": "Log out a session.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_logout:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_sys_proxy_json": {
    "prefix": "fmgr_sys_proxy_json",
    "description": "Send and receive JSON request to/from managed devices.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_proxy_json:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_proxy_json: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_reboot": {
    "prefix": "fmgr_sys_reboot",
    "description": "Restart FortiManager.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_reboot:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_reboot: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_task_result": {
    "prefix": "fmgr_sys_task_result",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_sys_task_result:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_task_result: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_system_admin_group": {
    "prefix": "fmgr_system_admin_group",
    "description": "User group.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_group: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_group_member": {
    "prefix": "fmgr_system_admin_group_member",
    "description": "Group members.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_group_member:",
      "\tgroup: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_group_member: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_ldap": {
    "prefix": "fmgr_system_admin_ldap",
    "description": "LDAP server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_ldap:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_ldap: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_ldap_adom": {
    "prefix": "fmgr_system_admin_ldap_adom",
    "description": "Admin domain.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_ldap_adom:",
      "\tldap: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_ldap_adom: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_profile": {
    "prefix": "fmgr_system_admin_profile",
    "description": "Admin profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_profile: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_profile_datamaskcustomfields": {
    "prefix": "fmgr_system_admin_profile_datamaskcustomfields",
    "description": "Customized datamask fields.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_profile_datamaskcustomfields:",
      "\tprofile: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_profile_datamaskcustomfields: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_radius": {
    "prefix": "fmgr_system_admin_radius",
    "description": "Configure radius.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_radius:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_radius: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_setting": {
    "prefix": "fmgr_system_admin_setting",
    "description": "Admin setting.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_admin_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_admin_tacacs": {
    "prefix": "fmgr_system_admin_tacacs",
    "description": "TACACS+ server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_tacacs:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_tacacs: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_user": {
    "prefix": "fmgr_system_admin_user",
    "description": "Admin user.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_user: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_user_adom": {
    "prefix": "fmgr_system_admin_user_adom",
    "description": "Admin domain.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_adom:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_adom: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_adomexclude": {
    "prefix": "fmgr_system_admin_user_adomexclude",
    "description": "Excluding admin domain.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_adomexclude:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_adomexclude: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_appfilter": {
    "prefix": "fmgr_system_admin_user_appfilter",
    "description": "App filter.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_appfilter:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_appfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_dashboard": {
    "prefix": "fmgr_system_admin_user_dashboard",
    "description": "Custom dashboard widgets.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_dashboard:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_dashboard: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_dashboardtabs": {
    "prefix": "fmgr_system_admin_user_dashboardtabs",
    "description": "Custom dashboard.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_dashboardtabs:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_dashboardtabs: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_ipsfilter": {
    "prefix": "fmgr_system_admin_user_ipsfilter",
    "description": "IPS filter.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_ipsfilter:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_ipsfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_metadata": {
    "prefix": "fmgr_system_admin_user_metadata",
    "description": "Configure meta data.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_metadata:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_metadata: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_policypackage": {
    "prefix": "fmgr_system_admin_user_policypackage",
    "description": "Policy package access.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_policypackage:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_policypackage: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_restrictdevvdom": {
    "prefix": "fmgr_system_admin_user_restrictdevvdom",
    "description": "Restricted to these devices/VDOMs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_restrictdevvdom:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_restrictdevvdom: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_webfilter": {
    "prefix": "fmgr_system_admin_user_webfilter",
    "description": "Web filter.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_webfilter:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_webfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_alertconsole": {
    "prefix": "fmgr_system_alertconsole",
    "description": "Alert console.",
    "body": [
      "fortinet.fortimanager.fmgr_system_alertconsole:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_alertconsole: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_alertemail": {
    "prefix": "fmgr_system_alertemail",
    "description": "Configure alertemail.",
    "body": [
      "fortinet.fortimanager.fmgr_system_alertemail:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_alertemail: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_alertevent": {
    "prefix": "fmgr_system_alertevent",
    "description": "Alert events.",
    "body": [
      "fortinet.fortimanager.fmgr_system_alertevent:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_alertevent: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_alertevent_alertdestination": {
    "prefix": "fmgr_system_alertevent_alertdestination",
    "description": "Alert destination.",
    "body": [
      "fortinet.fortimanager.fmgr_system_alertevent_alertdestination:",
      "\talert-event: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_alertevent_alertdestination: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_autodelete": {
    "prefix": "fmgr_system_autodelete",
    "description": "Automatic deletion policy for logs, reports, archived, and quarantined files.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_autodelete_dlpfilesautodeletion": {
    "prefix": "fmgr_system_autodelete_dlpfilesautodeletion",
    "description": "Automatic deletion policy for DLP archives.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete_dlpfilesautodeletion:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete_dlpfilesautodeletion: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_autodelete_logautodeletion": {
    "prefix": "fmgr_system_autodelete_logautodeletion",
    "description": "Automatic deletion policy for device logs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete_logautodeletion:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete_logautodeletion: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_autodelete_quarantinefilesautodeletion": {
    "prefix": "fmgr_system_autodelete_quarantinefilesautodeletion",
    "description": "Automatic deletion policy for quarantined files.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete_quarantinefilesautodeletion:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete_quarantinefilesautodeletion: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_autodelete_reportautodeletion": {
    "prefix": "fmgr_system_autodelete_reportautodeletion",
    "description": "Automatic deletion policy for reports.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete_reportautodeletion:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete_reportautodeletion: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_backup_allsettings": {
    "prefix": "fmgr_system_backup_allsettings",
    "description": "Scheduled backup settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_backup_allsettings:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_backup_allsettings: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_certificate_ca": {
    "prefix": "fmgr_system_certificate_ca",
    "description": "CA certificate.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_ca:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_ca: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_certificate_crl": {
    "prefix": "fmgr_system_certificate_crl",
    "description": "Certificate Revocation List.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_crl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_crl: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_certificate_local": {
    "prefix": "fmgr_system_certificate_local",
    "description": "Local keys and certificates.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_local:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_local: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_certificate_oftp": {
    "prefix": "fmgr_system_certificate_oftp",
    "description": "OFTP certificates and keys.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_oftp:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_certificate_oftp: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_certificate_remote": {
    "prefix": "fmgr_system_certificate_remote",
    "description": "Remote certificate.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_remote:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_remote: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_certificate_ssh": {
    "prefix": "fmgr_system_certificate_ssh",
    "description": "SSH certificates and keys.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_ssh:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_ssh: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_connector": {
    "prefix": "fmgr_system_connector",
    "description": "Configure connector.",
    "body": [
      "fortinet.fortimanager.fmgr_system_connector:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_connector: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_csf": {
    "prefix": "fmgr_system_csf",
    "description": "Add this device to a Security Fabric or set up a new Security Fabric on this device.",
    "body": [
      "fortinet.fortimanager.fmgr_system_csf:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_csf: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_csf_fabricconnector": {
    "prefix": "fmgr_system_csf_fabricconnector",
    "description": "Fabric connector configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_csf_fabricconnector:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_csf_fabricconnector: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_csf_trustedlist": {
    "prefix": "fmgr_system_csf_trustedlist",
    "description": "Pre-authorized and blocked security fabric nodes.",
    "body": [
      "fortinet.fortimanager.fmgr_system_csf_trustedlist:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_csf_trustedlist: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_customlanguage": {
    "prefix": "fmgr_system_customlanguage",
    "description": "Configure custom languages.",
    "body": [
      "fortinet.fortimanager.fmgr_system_customlanguage:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_customlanguage: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_dhcp_server": {
    "prefix": "fmgr_system_dhcp_server",
    "description": "Configure DHCP servers.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_dhcp_server: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_dhcp_server_excluderange": {
    "prefix": "fmgr_system_dhcp_server_excluderange",
    "description": "Exclude one or more ranges of IP addresses from being assigned to clients.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server_excluderange:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_dhcp_server_excluderange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_dhcp_server_iprange": {
    "prefix": "fmgr_system_dhcp_server_iprange",
    "description": "DHCP IP range configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server_iprange:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_dhcp_server_iprange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_dhcp_server_options": {
    "prefix": "fmgr_system_dhcp_server_options",
    "description": "DHCP options.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server_options:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_dhcp_server_options: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_dhcp_server_reservedaddress": {
    "prefix": "fmgr_system_dhcp_server_reservedaddress",
    "description": "Options for the DHCP server to assign IP settings to specific MAC addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server_reservedaddress:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_dhcp_server_reservedaddress: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_dm": {
    "prefix": "fmgr_system_dm",
    "description": "Configure dm.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dm:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_dm: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_dns": {
    "prefix": "fmgr_system_dns",
    "description": "DNS configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dns:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_dns: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_docker": {
    "prefix": "fmgr_system_docker",
    "description": "Docker host.",
    "body": [
      "fortinet.fortimanager.fmgr_system_docker:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_docker: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_externalresource": {
    "prefix": "fmgr_system_externalresource",
    "description": "Configure external resource.",
    "body": [
      "fortinet.fortimanager.fmgr_system_externalresource:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_externalresource: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_fips": {
    "prefix": "fmgr_system_fips",
    "description": "Settings for FIPS-CC mode.",
    "body": [
      "fortinet.fortimanager.fmgr_system_fips:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_fips: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_fortiguard": {
    "prefix": "fmgr_system_fortiguard",
    "description": "Configure FortiGuard services.",
    "body": [
      "fortinet.fortimanager.fmgr_system_fortiguard:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_fortiguard: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_fortiview_autocache": {
    "prefix": "fmgr_system_fortiview_autocache",
    "description": "FortiView auto-cache settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_fortiview_autocache:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_fortiview_autocache: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_fortiview_setting": {
    "prefix": "fmgr_system_fortiview_setting",
    "description": "FortiView settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_fortiview_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_fortiview_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_geoipcountry": {
    "prefix": "fmgr_system_geoipcountry",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_system_geoipcountry:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_geoipcountry: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_geoipoverride": {
    "prefix": "fmgr_system_geoipoverride",
    "description": "Configure geographical location mapping for IP address",
    "body": [
      "fortinet.fortimanager.fmgr_system_geoipoverride:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_geoipoverride: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_geoipoverride_ip6range": {
    "prefix": "fmgr_system_geoipoverride_ip6range",
    "description": "Table of IPv6 ranges assigned to country.",
    "body": [
      "fortinet.fortimanager.fmgr_system_geoipoverride_ip6range:",
      "\tadom: ${1:}",
      "\tgeoip-override: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_geoipoverride_ip6range: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_geoipoverride_iprange": {
    "prefix": "fmgr_system_geoipoverride_iprange",
    "description": "Table of IP ranges assigned to country.",
    "body": [
      "fortinet.fortimanager.fmgr_system_geoipoverride_iprange:",
      "\tadom: ${1:}",
      "\tgeoip-override: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_geoipoverride_iprange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_global": {
    "prefix": "fmgr_system_global",
    "description": "Global range attributes.",
    "body": [
      "fortinet.fortimanager.fmgr_system_global:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_global: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_guiact": {
    "prefix": "fmgr_system_guiact",
    "description": "System settings through GUI.",
    "body": [
      "fortinet.fortimanager.fmgr_system_guiact:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_guiact: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_ha": {
    "prefix": "fmgr_system_ha",
    "description": "HA configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ha:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_ha: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_ha_monitoredinterfaces": {
    "prefix": "fmgr_system_ha_monitoredinterfaces",
    "description": "Monitored interfaces.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ha_monitoredinterfaces:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_ha_monitoredinterfaces: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_ha_monitoredips": {
    "prefix": "fmgr_system_ha_monitoredips",
    "description": "Monitored IP addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ha_monitoredips:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_ha_monitoredips: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_ha_peer": {
    "prefix": "fmgr_system_ha_peer",
    "description": "Peer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ha_peer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_ha_peer: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_hascheduledcheck": {
    "prefix": "fmgr_system_hascheduledcheck",
    "description": "Scheduled HA integrity check.",
    "body": [
      "fortinet.fortimanager.fmgr_system_hascheduledcheck:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_hascheduledcheck: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_interface": {
    "prefix": "fmgr_system_interface",
    "description": "Interface configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_interface: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_interface_ipv6": {
    "prefix": "fmgr_system_interface_ipv6",
    "description": "IPv6 of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_system_interface_ipv6:",
      "\tinterface: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_interface_ipv6: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_interface_member": {
    "prefix": "fmgr_system_interface_member",
    "description": "Physical interfaces that belong to the aggregate or redundant interface.",
    "body": [
      "fortinet.fortimanager.fmgr_system_interface_member:",
      "\tinterface: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_interface_member: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_localinpolicy": {
    "prefix": "fmgr_system_localinpolicy",
    "description": "IPv4 local in policy configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_localinpolicy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_localinpolicy: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_localinpolicy6": {
    "prefix": "fmgr_system_localinpolicy6",
    "description": "IPv6 local in policy configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_localinpolicy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_localinpolicy6: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_locallog_disk_filter": {
    "prefix": "fmgr_system_locallog_disk_filter",
    "description": "Filter for disk logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_disk_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_disk_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_disk_setting": {
    "prefix": "fmgr_system_locallog_disk_setting",
    "description": "Settings for local disk logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_disk_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_disk_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer2_filter": {
    "prefix": "fmgr_system_locallog_fortianalyzer2_filter",
    "description": "Filter for FortiAnalyzer2 logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer2_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer2_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer2_setting": {
    "prefix": "fmgr_system_locallog_fortianalyzer2_setting",
    "description": "Settings for locallog to fortianalyzer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer2_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer2_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer3_filter": {
    "prefix": "fmgr_system_locallog_fortianalyzer3_filter",
    "description": "Filter for FortiAnalyzer3 logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer3_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer3_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer3_setting": {
    "prefix": "fmgr_system_locallog_fortianalyzer3_setting",
    "description": "Settings for locallog to fortianalyzer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer3_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer3_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer_filter": {
    "prefix": "fmgr_system_locallog_fortianalyzer_filter",
    "description": "Filter for FortiAnalyzer logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer_setting": {
    "prefix": "fmgr_system_locallog_fortianalyzer_setting",
    "description": "Settings for locallog to fortianalyzer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_memory_filter": {
    "prefix": "fmgr_system_locallog_memory_filter",
    "description": "Filter for memory logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_memory_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_memory_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_memory_setting": {
    "prefix": "fmgr_system_locallog_memory_setting",
    "description": "Settings for memory buffer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_memory_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_memory_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_setting": {
    "prefix": "fmgr_system_locallog_setting",
    "description": "Settings for locallog logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd2_filter": {
    "prefix": "fmgr_system_locallog_syslogd2_filter",
    "description": "Filter for syslog logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd2_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd2_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd2_setting": {
    "prefix": "fmgr_system_locallog_syslogd2_setting",
    "description": "Settings for remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd2_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd2_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd3_filter": {
    "prefix": "fmgr_system_locallog_syslogd3_filter",
    "description": "Filter for syslog logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd3_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd3_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd3_setting": {
    "prefix": "fmgr_system_locallog_syslogd3_setting",
    "description": "Settings for remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd3_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd3_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd_filter": {
    "prefix": "fmgr_system_locallog_syslogd_filter",
    "description": "Filter for syslog logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd_setting": {
    "prefix": "fmgr_system_locallog_syslogd_setting",
    "description": "Settings for remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_alert": {
    "prefix": "fmgr_system_log_alert",
    "description": "Log based alert settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_alert:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_alert: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_devicedisable": {
    "prefix": "fmgr_system_log_devicedisable",
    "description": "Disable client device logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_devicedisable:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_log_devicedisable: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_log_fospolicystats": {
    "prefix": "fmgr_system_log_fospolicystats",
    "description": "FortiOS policy statistics settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_fospolicystats:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_fospolicystats: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_interfacestats": {
    "prefix": "fmgr_system_log_interfacestats",
    "description": "Interface statistics settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_interfacestats:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_interfacestats: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_ioc": {
    "prefix": "fmgr_system_log_ioc",
    "description": "IoC settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_ioc:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_ioc: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_maildomain": {
    "prefix": "fmgr_system_log_maildomain",
    "description": "FortiMail domain setting.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_maildomain:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_log_maildomain: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_log_ratelimit": {
    "prefix": "fmgr_system_log_ratelimit",
    "description": "Logging rate limit.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_ratelimit:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_ratelimit: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_ratelimit_device": {
    "prefix": "fmgr_system_log_ratelimit_device",
    "description": "Device log rate limit.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_ratelimit_device:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_log_ratelimit_device: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_log_ratelimit_ratelimits": {
    "prefix": "fmgr_system_log_ratelimit_ratelimits",
    "description": "Per device or ADOM log rate limits.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_ratelimit_ratelimits:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_log_ratelimit_ratelimits: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_log_settings": {
    "prefix": "fmgr_system_log_settings",
    "description": "Log settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_settings:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_settings: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_settings_rollinganalyzer": {
    "prefix": "fmgr_system_log_settings_rollinganalyzer",
    "description": "Log rolling policy for Network Analyzer logs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_settings_rollinganalyzer:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_settings_rollinganalyzer: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_settings_rollinglocal": {
    "prefix": "fmgr_system_log_settings_rollinglocal",
    "description": "Log rolling policy for local logs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_settings_rollinglocal:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_settings_rollinglocal: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_settings_rollingregular": {
    "prefix": "fmgr_system_log_settings_rollingregular",
    "description": "Log rolling policy for device logs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_settings_rollingregular:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_settings_rollingregular: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_topology": {
    "prefix": "fmgr_system_log_topology",
    "description": "Logging topology settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_topology:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_topology: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_logfetch_clientprofile": {
    "prefix": "fmgr_system_logfetch_clientprofile",
    "description": "Log-fetch client profile settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_logfetch_clientprofile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_logfetch_clientprofile: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_logfetch_clientprofile_devicefilter": {
    "prefix": "fmgr_system_logfetch_clientprofile_devicefilter",
    "description": "List of device filter.",
    "body": [
      "fortinet.fortimanager.fmgr_system_logfetch_clientprofile_devicefilter:",
      "\tclient-profile: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_logfetch_clientprofile_devicefilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_logfetch_clientprofile_logfilter": {
    "prefix": "fmgr_system_logfetch_clientprofile_logfilter",
    "description": "Log content filters.",
    "body": [
      "fortinet.fortimanager.fmgr_system_logfetch_clientprofile_logfilter:",
      "\tclient-profile: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_logfetch_clientprofile_logfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_logfetch_serversettings": {
    "prefix": "fmgr_system_logfetch_serversettings",
    "description": "Log-fetch server settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_logfetch_serversettings:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_logfetch_serversettings: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_mail": {
    "prefix": "fmgr_system_mail",
    "description": "Alert emails.",
    "body": [
      "fortinet.fortimanager.fmgr_system_mail:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_mail: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_mcpolicydisabledadoms": {
    "prefix": "fmgr_system_mcpolicydisabledadoms",
    "description": "Multicast policy disabled adoms.",
    "body": [
      "fortinet.fortimanager.fmgr_system_mcpolicydisabledadoms:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_mcpolicydisabledadoms: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_meta": {
    "prefix": "fmgr_system_meta",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_system_meta:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_meta: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_meta_sysmetafields": {
    "prefix": "fmgr_system_meta_sysmetafields",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_system_meta_sysmetafields:",
      "\tadom: ${1:}",
      "\tmeta: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_meta_sysmetafields: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_metadata_admins": {
    "prefix": "fmgr_system_metadata_admins",
    "description": "Configure admins.",
    "body": [
      "fortinet.fortimanager.fmgr_system_metadata_admins:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_metadata_admins: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu": {
    "prefix": "fmgr_system_npu",
    "description": "Configure NPU attributes.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_backgroundssescan": {
    "prefix": "fmgr_system_npu_backgroundssescan",
    "description": "Configure driver background scan for SSE.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_backgroundssescan:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_backgroundssescan: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_dosoptions": {
    "prefix": "fmgr_system_npu_dosoptions",
    "description": "NPU DoS configurations.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_dosoptions:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_dosoptions: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_dswdtsprofile": {
    "prefix": "fmgr_system_npu_dswdtsprofile",
    "description": "Configure NPU DSW DTS profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_dswdtsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_dswdtsprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_dswqueuedtsprofile": {
    "prefix": "fmgr_system_npu_dswqueuedtsprofile",
    "description": "Configure NPU DSW Queue DTS profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_dswqueuedtsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_dswqueuedtsprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_fpanomaly": {
    "prefix": "fmgr_system_npu_fpanomaly",
    "description": "NP6Lite anomaly protection",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_fpanomaly:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_fpanomaly: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_hpe": {
    "prefix": "fmgr_system_npu_hpe",
    "description": "Host protection engine configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_hpe:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_hpe: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_ipreassembly": {
    "prefix": "fmgr_system_npu_ipreassembly",
    "description": "IP reassebmly engine configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_ipreassembly:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_ipreassembly: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_isfnpqueues": {
    "prefix": "fmgr_system_npu_isfnpqueues",
    "description": "Configure queues of switch port connected to NP6 XAUI on ingress path.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_isfnpqueues:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_isfnpqueues: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_npqueues": {
    "prefix": "fmgr_system_npu_npqueues",
    "description": "Configure queue assignment on NP7.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_npqueues: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_npqueues_ethernettype": {
    "prefix": "fmgr_system_npu_npqueues_ethernettype",
    "description": "Configure a NP7 QoS Ethernet Type.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_ethernettype:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_ethernettype: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_npqueues_ipprotocol": {
    "prefix": "fmgr_system_npu_npqueues_ipprotocol",
    "description": "Configure a NP7 QoS IP Protocol.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_ipprotocol:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_ipprotocol: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_npqueues_ipservice": {
    "prefix": "fmgr_system_npu_npqueues_ipservice",
    "description": "Configure a NP7 QoS IP Service.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_ipservice:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_ipservice: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_npqueues_profile": {
    "prefix": "fmgr_system_npu_npqueues_profile",
    "description": "Configure a NP7 class profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_npqueues_scheduler": {
    "prefix": "fmgr_system_npu_npqueues_scheduler",
    "description": "Configure a NP7 QoS Scheduler.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_scheduler:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_scheduler: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_portcpumap": {
    "prefix": "fmgr_system_npu_portcpumap",
    "description": "Configure NPU interface to CPU core mapping.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_portcpumap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_portcpumap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_portnpumap": {
    "prefix": "fmgr_system_npu_portnpumap",
    "description": "Configure port to NPU group mapping.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_portnpumap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_portnpumap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_portpathoption": {
    "prefix": "fmgr_system_npu_portpathoption",
    "description": "Configure port using NPU or Intel-NIC.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_portpathoption:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_portpathoption: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_priorityprotocol": {
    "prefix": "fmgr_system_npu_priorityprotocol",
    "description": "Configure NPU priority protocol.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_priorityprotocol:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_priorityprotocol: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_ssehascan": {
    "prefix": "fmgr_system_npu_ssehascan",
    "description": "Configure driver HA scan for SSE.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_ssehascan:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_ssehascan: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_swehhash": {
    "prefix": "fmgr_system_npu_swehhash",
    "description": "Configure switch enhanced hashing.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_swehhash:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_swehhash: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_swtrhash": {
    "prefix": "fmgr_system_npu_swtrhash",
    "description": "Configure switch traditional hashing.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_swtrhash:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_swtrhash: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_tcptimeoutprofile": {
    "prefix": "fmgr_system_npu_tcptimeoutprofile",
    "description": "Configure TCP timeout profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_tcptimeoutprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_tcptimeoutprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_udptimeoutprofile": {
    "prefix": "fmgr_system_npu_udptimeoutprofile",
    "description": "Configure UDP timeout profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_udptimeoutprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_udptimeoutprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_ntp": {
    "prefix": "fmgr_system_ntp",
    "description": "NTP settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ntp:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_ntp: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_ntp_ntpserver": {
    "prefix": "fmgr_system_ntp_ntpserver",
    "description": "NTP server.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ntp_ntpserver:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_ntp_ntpserver: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_objecttag": {
    "prefix": "fmgr_system_objecttag",
    "description": "Configure object tags.",
    "body": [
      "fortinet.fortimanager.fmgr_system_objecttag:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_objecttag: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_objecttagging": {
    "prefix": "fmgr_system_objecttagging",
    "description": "Configure object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_objecttagging:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_objecttagging: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_passwordpolicy": {
    "prefix": "fmgr_system_passwordpolicy",
    "description": "Password policy.",
    "body": [
      "fortinet.fortimanager.fmgr_system_passwordpolicy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_passwordpolicy: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_replacemsggroup": {
    "prefix": "fmgr_system_replacemsggroup",
    "description": "Configure replacement message groups.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_replacemsggroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_replacemsggroup_admin": {
    "prefix": "fmgr_system_replacemsggroup_admin",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_admin:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_admin: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_alertmail": {
    "prefix": "fmgr_system_replacemsggroup_alertmail",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_alertmail:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_alertmail: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_auth": {
    "prefix": "fmgr_system_replacemsggroup_auth",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_auth:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_auth: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_automation": {
    "prefix": "fmgr_system_replacemsggroup_automation",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_automation:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_automation: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_custommessage": {
    "prefix": "fmgr_system_replacemsggroup_custommessage",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_custommessage:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_custommessage: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_devicedetectionportal": {
    "prefix": "fmgr_system_replacemsggroup_devicedetectionportal",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_devicedetectionportal:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_devicedetectionportal: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_ec": {
    "prefix": "fmgr_system_replacemsggroup_ec",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_ec:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_ec: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_fortiguardwf": {
    "prefix": "fmgr_system_replacemsggroup_fortiguardwf",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_fortiguardwf:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_fortiguardwf: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_ftp": {
    "prefix": "fmgr_system_replacemsggroup_ftp",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_ftp:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_ftp: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_http": {
    "prefix": "fmgr_system_replacemsggroup_http",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_http:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_http: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_icap": {
    "prefix": "fmgr_system_replacemsggroup_icap",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_icap:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_icap: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mail": {
    "prefix": "fmgr_system_replacemsggroup_mail",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mail:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mail: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mm1": {
    "prefix": "fmgr_system_replacemsggroup_mm1",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mm1:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mm1: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mm3": {
    "prefix": "fmgr_system_replacemsggroup_mm3",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mm3:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mm3: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mm4": {
    "prefix": "fmgr_system_replacemsggroup_mm4",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mm4:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mm4: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mm7": {
    "prefix": "fmgr_system_replacemsggroup_mm7",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mm7:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mm7: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mms": {
    "prefix": "fmgr_system_replacemsggroup_mms",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mms:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mms: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_nacquar": {
    "prefix": "fmgr_system_replacemsggroup_nacquar",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_nacquar:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_nacquar: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_nntp": {
    "prefix": "fmgr_system_replacemsggroup_nntp",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_nntp:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_nntp: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_spam": {
    "prefix": "fmgr_system_replacemsggroup_spam",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_spam:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_spam: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_sslvpn": {
    "prefix": "fmgr_system_replacemsggroup_sslvpn",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_sslvpn:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_sslvpn: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_trafficquota": {
    "prefix": "fmgr_system_replacemsggroup_trafficquota",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_trafficquota:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_trafficquota: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_utm": {
    "prefix": "fmgr_system_replacemsggroup_utm",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_utm:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_utm: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_webproxy": {
    "prefix": "fmgr_system_replacemsggroup_webproxy",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_webproxy:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_webproxy: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsgimage": {
    "prefix": "fmgr_system_replacemsgimage",
    "description": "Configure replacement message images.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsgimage:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_replacemsgimage: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_report_autocache": {
    "prefix": "fmgr_system_report_autocache",
    "description": "Report auto-cache settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_autocache:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_report_autocache: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_report_estbrowsetime": {
    "prefix": "fmgr_system_report_estbrowsetime",
    "description": "Report estimated browse time settings",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_estbrowsetime:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_report_estbrowsetime: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_report_group": {
    "prefix": "fmgr_system_report_group",
    "description": "Report group.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_report_group: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_report_group_chartalternative": {
    "prefix": "fmgr_system_report_group_chartalternative",
    "description": "Chart alternatives.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_group_chartalternative:",
      "\tgroup: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_report_group_chartalternative: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_report_group_groupby": {
    "prefix": "fmgr_system_report_group_groupby",
    "description": "Group-by variables.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_group_groupby:",
      "\tgroup: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_report_group_groupby: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_report_setting": {
    "prefix": "fmgr_system_report_setting",
    "description": "Report settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_report_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_route": {
    "prefix": "fmgr_system_route",
    "description": "Routing table configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_route:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_route: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_route6": {
    "prefix": "fmgr_system_route6",
    "description": "Routing table configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_route6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_route6: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_saml": {
    "prefix": "fmgr_system_saml",
    "description": "Global settings for SAML authentication.",
    "body": [
      "fortinet.fortimanager.fmgr_system_saml:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_saml: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_saml_fabricidp": {
    "prefix": "fmgr_system_saml_fabricidp",
    "description": "Authorized identity providers.",
    "body": [
      "fortinet.fortimanager.fmgr_system_saml_fabricidp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_saml_fabricidp: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sdnconnector": {
    "prefix": "fmgr_system_sdnconnector",
    "description": "Configure connection to SDN Connector.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_sdnconnector: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_sdnconnector_compartmentlist": {
    "prefix": "fmgr_system_sdnconnector_compartmentlist",
    "description": "Configure OCI compartment list.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_compartmentlist:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_compartmentlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_externalaccountlist": {
    "prefix": "fmgr_system_sdnconnector_externalaccountlist",
    "description": "Configure AWS external account list.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_externalaccountlist:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_externalaccountlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_externalip": {
    "prefix": "fmgr_system_sdnconnector_externalip",
    "description": "Configure GCP external IP.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_externalip:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_externalip: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_forwardingrule": {
    "prefix": "fmgr_system_sdnconnector_forwardingrule",
    "description": "Configure GCP forwarding rule.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_forwardingrule:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_forwardingrule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_gcpprojectlist": {
    "prefix": "fmgr_system_sdnconnector_gcpprojectlist",
    "description": "Configure GCP project list.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_gcpprojectlist:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_gcpprojectlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_nic": {
    "prefix": "fmgr_system_sdnconnector_nic",
    "description": "Configure Azure network interface.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_nic:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_nic: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_nic_ip": {
    "prefix": "fmgr_system_sdnconnector_nic_ip",
    "description": "Configure IP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_nic_ip:",
      "\tadom: ${1:}",
      "\tnic: ${2:}",
      "\tsdn-connector: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#system_sdnconnector_nic_ip: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_system_sdnconnector_ociregionlist": {
    "prefix": "fmgr_system_sdnconnector_ociregionlist",
    "description": "Configure OCI region list.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_ociregionlist:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_ociregionlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_route": {
    "prefix": "fmgr_system_sdnconnector_route",
    "description": "Configure GCP route.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_route:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_route: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_routetable": {
    "prefix": "fmgr_system_sdnconnector_routetable",
    "description": "Configure Azure route table.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_routetable:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_routetable: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_routetable_route": {
    "prefix": "fmgr_system_sdnconnector_routetable_route",
    "description": "Configure Azure route.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_routetable_route:",
      "\tadom: ${1:}",
      "\troute-table: ${2:}",
      "\tsdn-connector: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#system_sdnconnector_routetable_route: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_system_sdnproxy": {
    "prefix": "fmgr_system_sdnproxy",
    "description": "Configure SDN proxy.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnproxy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_sdnproxy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_smsserver": {
    "prefix": "fmgr_system_smsserver",
    "description": "Configure SMS server for sending SMS messages to support user authentication.",
    "body": [
      "fortinet.fortimanager.fmgr_system_smsserver:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_smsserver: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_sniffer": {
    "prefix": "fmgr_system_sniffer",
    "description": "Interface sniffer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sniffer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sniffer: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_snmp_community": {
    "prefix": "fmgr_system_snmp_community",
    "description": "SNMP community configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_community:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_snmp_community: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_snmp_community_hosts": {
    "prefix": "fmgr_system_snmp_community_hosts",
    "description": "Allow hosts configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_community_hosts:",
      "\tcommunity: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_snmp_community_hosts: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_snmp_community_hosts6": {
    "prefix": "fmgr_system_snmp_community_hosts6",
    "description": "Allow hosts configuration for IPv6.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_community_hosts6:",
      "\tcommunity: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_snmp_community_hosts6: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_snmp_sysinfo": {
    "prefix": "fmgr_system_snmp_sysinfo",
    "description": "SNMP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_sysinfo:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_snmp_sysinfo: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_snmp_user": {
    "prefix": "fmgr_system_snmp_user",
    "description": "SNMP user configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_snmp_user: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_socfabric": {
    "prefix": "fmgr_system_socfabric",
    "description": "SOC Fabric.",
    "body": [
      "fortinet.fortimanager.fmgr_system_socfabric:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_socfabric: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_socfabric_trustedlist": {
    "prefix": "fmgr_system_socfabric_trustedlist",
    "description": "Pre-authorized security fabric nodes",
    "body": [
      "fortinet.fortimanager.fmgr_system_socfabric_trustedlist:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_socfabric_trustedlist: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sql": {
    "prefix": "fmgr_system_sql",
    "description": "SQL settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sql:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_sql: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_sql_customindex": {
    "prefix": "fmgr_system_sql_customindex",
    "description": "List of SQL index fields.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sql_customindex:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sql_customindex: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sql_customskipidx": {
    "prefix": "fmgr_system_sql_customskipidx",
    "description": "List of aditional SQL skip index fields.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sql_customskipidx:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sql_customskipidx: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sql_tsindexfield": {
    "prefix": "fmgr_system_sql_tsindexfield",
    "description": "List of SQL text search index fields.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sql_tsindexfield:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sql_tsindexfield: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sslciphersuites": {
    "prefix": "fmgr_system_sslciphersuites",
    "description": "Configure preferred SSL/TLS cipher suites",
    "body": [
      "fortinet.fortimanager.fmgr_system_sslciphersuites:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sslciphersuites: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_syslog": {
    "prefix": "fmgr_system_syslog",
    "description": "Syslog servers.",
    "body": [
      "fortinet.fortimanager.fmgr_system_syslog:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_syslog: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_virtualwirepair": {
    "prefix": "fmgr_system_virtualwirepair",
    "description": "Configure virtual wire pairs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_virtualwirepair:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_virtualwirepair: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_webproxy": {
    "prefix": "fmgr_system_webproxy",
    "description": "Configure system web proxy.",
    "body": [
      "fortinet.fortimanager.fmgr_system_webproxy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_webproxy: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_workflow_approvalmatrix": {
    "prefix": "fmgr_system_workflow_approvalmatrix",
    "description": "workflow approval matrix.",
    "body": [
      "fortinet.fortimanager.fmgr_system_workflow_approvalmatrix:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_workflow_approvalmatrix: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_workflow_approvalmatrix_approver": {
    "prefix": "fmgr_system_workflow_approvalmatrix_approver",
    "description": "Approver.",
    "body": [
      "fortinet.fortimanager.fmgr_system_workflow_approvalmatrix_approver:",
      "\tapproval-matrix: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_workflow_approvalmatrix_approver: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_template": {
    "prefix": "fmgr_template",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#template: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_templategroup": {
    "prefix": "fmgr_templategroup",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_templategroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#templategroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_um_image_upgrade": {
    "prefix": "fmgr_um_image_upgrade",
    "description": "The older API for updating the firmware of specific device.",
    "body": [
      "fortinet.fortimanager.fmgr_um_image_upgrade:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#um_image_upgrade: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_um_image_upgrade_ext": {
    "prefix": "fmgr_um_image_upgrade_ext",
    "description": "Update the firmware of specific device.",
    "body": [
      "fortinet.fortimanager.fmgr_um_image_upgrade_ext:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#um_image_upgrade_ext: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_user_adgrp": {
    "prefix": "fmgr_user_adgrp",
    "description": "Configure FSSO groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_adgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_adgrp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_certificate": {
    "prefix": "fmgr_user_certificate",
    "description": "Configure certificate users.",
    "body": [
      "fortinet.fortimanager.fmgr_user_certificate:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_certificate: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_clearpass": {
    "prefix": "fmgr_user_clearpass",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_clearpass:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_clearpass: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_connector": {
    "prefix": "fmgr_user_connector",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_connector:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_connector: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_device": {
    "prefix": "fmgr_user_device",
    "description": "Configure devices.",
    "body": [
      "fortinet.fortimanager.fmgr_user_device:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_device: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_device_dynamicmapping": {
    "prefix": "fmgr_user_device_dynamicmapping",
    "description": "Configure devices.",
    "body": [
      "fortinet.fortimanager.fmgr_user_device_dynamicmapping:",
      "\tadom: ${1:}",
      "\tdevice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_device_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_device_tagging": {
    "prefix": "fmgr_user_device_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_user_device_tagging:",
      "\tadom: ${1:}",
      "\tdevice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_device_tagging: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_deviceaccesslist": {
    "prefix": "fmgr_user_deviceaccesslist",
    "description": "Configure device access control lists.",
    "body": [
      "fortinet.fortimanager.fmgr_user_deviceaccesslist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_deviceaccesslist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_deviceaccesslist_devicelist": {
    "prefix": "fmgr_user_deviceaccesslist_devicelist",
    "description": "Device list.",
    "body": [
      "fortinet.fortimanager.fmgr_user_deviceaccesslist_devicelist:",
      "\tadom: ${1:}",
      "\tdevice-access-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_deviceaccesslist_devicelist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_devicecategory": {
    "prefix": "fmgr_user_devicecategory",
    "description": "Configure device categories.",
    "body": [
      "fortinet.fortimanager.fmgr_user_devicecategory:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_devicecategory: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_devicegroup": {
    "prefix": "fmgr_user_devicegroup",
    "description": "Configure device groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_devicegroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_devicegroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_devicegroup_dynamicmapping": {
    "prefix": "fmgr_user_devicegroup_dynamicmapping",
    "description": "Configure device groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_devicegroup_dynamicmapping:",
      "\tadom: ${1:}",
      "\tdevice-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_devicegroup_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_devicegroup_tagging": {
    "prefix": "fmgr_user_devicegroup_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_user_devicegroup_tagging:",
      "\tadom: ${1:}",
      "\tdevice-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_devicegroup_tagging: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_domaincontroller": {
    "prefix": "fmgr_user_domaincontroller",
    "description": "Configure domain controller entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_domaincontroller:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_domaincontroller: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_domaincontroller_extraserver": {
    "prefix": "fmgr_user_domaincontroller_extraserver",
    "description": "extra servers.",
    "body": [
      "fortinet.fortimanager.fmgr_user_domaincontroller_extraserver:",
      "\tadom: ${1:}",
      "\tdomain-controller: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_domaincontroller_extraserver: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_exchange": {
    "prefix": "fmgr_user_exchange",
    "description": "Configure MS Exchange server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_exchange:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_exchange: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_flexvm": {
    "prefix": "fmgr_user_flexvm",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_flexvm:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_flexvm: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_fortitoken": {
    "prefix": "fmgr_user_fortitoken",
    "description": "Configure FortiToken.",
    "body": [
      "fortinet.fortimanager.fmgr_user_fortitoken:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_fortitoken: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_fsso": {
    "prefix": "fmgr_user_fsso",
    "description": "Configure Fortinet Single Sign On",
    "body": [
      "fortinet.fortimanager.fmgr_user_fsso:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_fsso: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_fsso_dynamicmapping": {
    "prefix": "fmgr_user_fsso_dynamicmapping",
    "description": "Configure Fortinet Single Sign On",
    "body": [
      "fortinet.fortimanager.fmgr_user_fsso_dynamicmapping:",
      "\tadom: ${1:}",
      "\tfsso: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_fsso_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_fssopolling": {
    "prefix": "fmgr_user_fssopolling",
    "description": "Configure FSSO active directory servers for polling mode.",
    "body": [
      "fortinet.fortimanager.fmgr_user_fssopolling:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_fssopolling: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_fssopolling_adgrp": {
    "prefix": "fmgr_user_fssopolling_adgrp",
    "description": "LDAP Group Info.",
    "body": [
      "fortinet.fortimanager.fmgr_user_fssopolling_adgrp:",
      "\tadom: ${1:}",
      "\tfsso-polling: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_fssopolling_adgrp: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_group": {
    "prefix": "fmgr_user_group",
    "description": "Configure user groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_group: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_group_dynamicmapping": {
    "prefix": "fmgr_user_group_dynamicmapping",
    "description": "Configure user groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_dynamicmapping:",
      "\tadom: ${1:}",
      "\tgroup: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_group_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_group_dynamicmapping_guest": {
    "prefix": "fmgr_user_group_dynamicmapping_guest",
    "description": "Guest User.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_dynamicmapping_guest:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tgroup: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#user_group_dynamicmapping_guest: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_user_group_dynamicmapping_match": {
    "prefix": "fmgr_user_group_dynamicmapping_match",
    "description": "Group matches.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_dynamicmapping_match:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tgroup: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#user_group_dynamicmapping_match: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_user_group_dynamicmapping_sslvpnoschecklist": {
    "prefix": "fmgr_user_group_dynamicmapping_sslvpnoschecklist",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_dynamicmapping_sslvpnoschecklist:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tgroup: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_group_dynamicmapping_sslvpnoschecklist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_group_guest": {
    "prefix": "fmgr_user_group_guest",
    "description": "Guest User.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_guest:",
      "\tadom: ${1:}",
      "\tgroup: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_group_guest: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_group_match": {
    "prefix": "fmgr_user_group_match",
    "description": "Group matches.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_match:",
      "\tadom: ${1:}",
      "\tgroup: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_group_match: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_json": {
    "prefix": "fmgr_user_json",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_json:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_json: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_krbkeytab": {
    "prefix": "fmgr_user_krbkeytab",
    "description": "Configure Kerberos keytab entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_krbkeytab:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_krbkeytab: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_ldap": {
    "prefix": "fmgr_user_ldap",
    "description": "Configure LDAP server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_ldap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_ldap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_ldap_dynamicmapping": {
    "prefix": "fmgr_user_ldap_dynamicmapping",
    "description": "Configure LDAP server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_ldap_dynamicmapping:",
      "\tadom: ${1:}",
      "\tldap: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_ldap_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_local": {
    "prefix": "fmgr_user_local",
    "description": "Configure local users.",
    "body": [
      "fortinet.fortimanager.fmgr_user_local:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_local: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_nsx": {
    "prefix": "fmgr_user_nsx",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_nsx:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_nsx: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_nsx_service": {
    "prefix": "fmgr_user_nsx_service",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_nsx_service:",
      "\tadom: ${1:}",
      "\tnsx: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_nsx_service: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_passwordpolicy": {
    "prefix": "fmgr_user_passwordpolicy",
    "description": "Configure user password policy.",
    "body": [
      "fortinet.fortimanager.fmgr_user_passwordpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_passwordpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_peer": {
    "prefix": "fmgr_user_peer",
    "description": "Configure peer users.",
    "body": [
      "fortinet.fortimanager.fmgr_user_peer:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_peer: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_peergrp": {
    "prefix": "fmgr_user_peergrp",
    "description": "Configure peer groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_peergrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_peergrp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_pop3": {
    "prefix": "fmgr_user_pop3",
    "description": "POP3 server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_user_pop3:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_pop3: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_pxgrid": {
    "prefix": "fmgr_user_pxgrid",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_pxgrid:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_pxgrid: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_radius": {
    "prefix": "fmgr_user_radius",
    "description": "Configure RADIUS server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_radius:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_radius: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_radius_accountingserver": {
    "prefix": "fmgr_user_radius_accountingserver",
    "description": "Additional accounting servers.",
    "body": [
      "fortinet.fortimanager.fmgr_user_radius_accountingserver:",
      "\tadom: ${1:}",
      "\tradius: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_radius_accountingserver: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_radius_dynamicmapping": {
    "prefix": "fmgr_user_radius_dynamicmapping",
    "description": "Configure RADIUS server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_radius_dynamicmapping:",
      "\tadom: ${1:}",
      "\tradius: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_radius_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_radius_dynamicmapping_accountingserver": {
    "prefix": "fmgr_user_radius_dynamicmapping_accountingserver",
    "description": "Additional accounting servers.",
    "body": [
      "fortinet.fortimanager.fmgr_user_radius_dynamicmapping_accountingserver:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tradius: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#user_radius_dynamicmapping_accountingserver: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_user_saml": {
    "prefix": "fmgr_user_saml",
    "description": "SAML server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_user_saml:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_saml: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_saml_dynamicmapping": {
    "prefix": "fmgr_user_saml_dynamicmapping",
    "description": "SAML server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_user_saml_dynamicmapping:",
      "\tadom: ${1:}",
      "\tsaml: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_saml_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_securityexemptlist": {
    "prefix": "fmgr_user_securityexemptlist",
    "description": "Configure security exemption list.",
    "body": [
      "fortinet.fortimanager.fmgr_user_securityexemptlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_securityexemptlist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_securityexemptlist_rule": {
    "prefix": "fmgr_user_securityexemptlist_rule",
    "description": "Configure rules for exempting users from captive portal authentication.",
    "body": [
      "fortinet.fortimanager.fmgr_user_securityexemptlist_rule:",
      "\tadom: ${1:}",
      "\tsecurity-exempt-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_securityexemptlist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_tacacs": {
    "prefix": "fmgr_user_tacacs",
    "description": "Configure TACACS+ server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_tacacs:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_tacacs: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_tacacs_dynamicmapping": {
    "prefix": "fmgr_user_tacacs_dynamicmapping",
    "description": "Configure TACACS+ server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_tacacs_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\ttacacs+: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_tacacs_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_vcenter": {
    "prefix": "fmgr_user_vcenter",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_vcenter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_vcenter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_vcenter_rule": {
    "prefix": "fmgr_user_vcenter_rule",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_vcenter_rule:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvcenter: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_vcenter_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_utmprofile": {
    "prefix": "fmgr_utmprofile",
    "description": "Configure UTM",
    "body": [
      "fortinet.fortimanager.fmgr_utmprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#utmprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vap": {
    "prefix": "fmgr_vap",
    "description": "Configure Virtual Access Points",
    "body": [
      "fortinet.fortimanager.fmgr_vap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vap_dynamicmapping": {
    "prefix": "fmgr_vap_dynamicmapping",
    "description": "Configure Virtual Access Points",
    "body": [
      "fortinet.fortimanager.fmgr_vap_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vap_macfilterlist": {
    "prefix": "fmgr_vap_macfilterlist",
    "description": "Create a list of MAC addresses for MAC address filtering.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_macfilterlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_macfilterlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vap_mpskkey": {
    "prefix": "fmgr_vap_mpskkey",
    "description": "Pre-shared keys that can be used to connect to this virtual access point.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_mpskkey:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_mpskkey: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vap_portalmessageoverrides": {
    "prefix": "fmgr_vap_portalmessageoverrides",
    "description": "Individual message overrides.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_portalmessageoverrides:",
      "\tadom: ${1:}",
      "\tvap: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vap_portalmessageoverrides: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vap_vlanname": {
    "prefix": "fmgr_vap_vlanname",
    "description": "Table for mapping VLAN name to VLAN ID.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_vlanname:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_vlanname: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vap_vlanpool": {
    "prefix": "fmgr_vap_vlanpool",
    "description": "VLAN pool.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_vlanpool:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_vlanpool: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vapgroup": {
    "prefix": "fmgr_vapgroup",
    "description": "Configure virtual Access Point",
    "body": [
      "fortinet.fortimanager.fmgr_vapgroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vapgroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_videofilter_profile": {
    "prefix": "fmgr_videofilter_profile",
    "description": "Configure VideoFilter profile.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#videofilter_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_videofilter_profile_fortiguardcategory": {
    "prefix": "fmgr_videofilter_profile_fortiguardcategory",
    "description": "Configure FortiGuard categories.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_profile_fortiguardcategory:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#videofilter_profile_fortiguardcategory: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_videofilter_profile_fortiguardcategory_filters": {
    "prefix": "fmgr_videofilter_profile_fortiguardcategory_filters",
    "description": "Configure VideoFilter FortiGuard category.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_profile_fortiguardcategory_filters:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#videofilter_profile_fortiguardcategory_filters: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_videofilter_youtubechannelfilter": {
    "prefix": "fmgr_videofilter_youtubechannelfilter",
    "description": "Configure YouTube channel filter.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_youtubechannelfilter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#videofilter_youtubechannelfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_videofilter_youtubechannelfilter_entries": {
    "prefix": "fmgr_videofilter_youtubechannelfilter_entries",
    "description": "YouTube filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_youtubechannelfilter_entries:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tyoutube-channel-filter: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#videofilter_youtubechannelfilter_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_virtualpatch_profile": {
    "prefix": "fmgr_virtualpatch_profile",
    "description": "Configure virtual-patch profile.",
    "body": [
      "fortinet.fortimanager.fmgr_virtualpatch_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#virtualpatch_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_virtualpatch_profile_exemption": {
    "prefix": "fmgr_virtualpatch_profile_exemption",
    "description": "Exempt devices or rules.",
    "body": [
      "fortinet.fortimanager.fmgr_virtualpatch_profile_exemption:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#virtualpatch_profile_exemption: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_voip_profile": {
    "prefix": "fmgr_voip_profile",
    "description": "Configure VoIP profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_voip_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#voip_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_voip_profile_msrp": {
    "prefix": "fmgr_voip_profile_msrp",
    "description": "MSRP.",
    "body": [
      "fortinet.fortimanager.fmgr_voip_profile_msrp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#voip_profile_msrp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_voip_profile_sccp": {
    "prefix": "fmgr_voip_profile_sccp",
    "description": "SCCP.",
    "body": [
      "fortinet.fortimanager.fmgr_voip_profile_sccp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#voip_profile_sccp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_voip_profile_sip": {
    "prefix": "fmgr_voip_profile_sip",
    "description": "SIP.",
    "body": [
      "fortinet.fortimanager.fmgr_voip_profile_sip:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#voip_profile_sip: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_certificate_ca": {
    "prefix": "fmgr_vpn_certificate_ca",
    "description": "CA certificate.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_certificate_ca:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_certificate_ca: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_certificate_ocspserver": {
    "prefix": "fmgr_vpn_certificate_ocspserver",
    "description": "OCSP server configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_certificate_ocspserver:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_certificate_ocspserver: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_certificate_remote": {
    "prefix": "fmgr_vpn_certificate_remote",
    "description": "Remote certificate as a PEM file.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_certificate_remote:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_certificate_remote: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_ipsec_fec": {
    "prefix": "fmgr_vpn_ipsec_fec",
    "description": "Configure Forward Error Correction",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_ipsec_fec:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_ipsec_fec: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_ipsec_fec_mappings": {
    "prefix": "fmgr_vpn_ipsec_fec_mappings",
    "description": "FEC redundancy mapping table.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_ipsec_fec_mappings:",
      "\tadom: ${1:}",
      "\tfec: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpn_ipsec_fec_mappings: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpn_ssl_settings": {
    "prefix": "fmgr_vpn_ssl_settings",
    "description": "Configure SSL VPN.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_ssl_settings:",
      "\tdevice: ${1:}",
      "\tvdom: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_ssl_settings: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_ssl_settings_authenticationrule": {
    "prefix": "fmgr_vpn_ssl_settings_authenticationrule",
    "description": "Authentication rule for SSL VPN.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_ssl_settings_authenticationrule:",
      "\tdevice: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpn_ssl_settings_authenticationrule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_node": {
    "prefix": "fmgr_vpnmgr_node",
    "description": "VPN node for VPN Manager.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnmgr_node: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnmgr_node_iprange": {
    "prefix": "fmgr_vpnmgr_node_iprange",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node_iprange:",
      "\tadom: ${1:}",
      "\tnode: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnmgr_node_iprange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_node_ipv4excluderange": {
    "prefix": "fmgr_vpnmgr_node_ipv4excluderange",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node_ipv4excluderange:",
      "\tadom: ${1:}",
      "\tnode: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnmgr_node_ipv4excluderange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_node_protectedsubnet": {
    "prefix": "fmgr_vpnmgr_node_protectedsubnet",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node_protectedsubnet:",
      "\tadom: ${1:}",
      "\tnode: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnmgr_node_protectedsubnet: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_node_summaryaddr": {
    "prefix": "fmgr_vpnmgr_node_summaryaddr",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node_summaryaddr:",
      "\tadom: ${1:}",
      "\tnode: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnmgr_node_summaryaddr: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_vpntable": {
    "prefix": "fmgr_vpnmgr_vpntable",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_vpntable:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnmgr_vpntable: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_hostchecksoftware": {
    "prefix": "fmgr_vpnsslweb_hostchecksoftware",
    "description": "SSL-VPN host check software.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_hostchecksoftware:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_hostchecksoftware: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_hostchecksoftware_checkitemlist": {
    "prefix": "fmgr_vpnsslweb_hostchecksoftware_checkitemlist",
    "description": "Check item list.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_hostchecksoftware_checkitemlist:",
      "\tadom: ${1:}",
      "\thost-check-software: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_hostchecksoftware_checkitemlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_portal": {
    "prefix": "fmgr_vpnsslweb_portal",
    "description": "Portal.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_portal: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_bookmarkgroup": {
    "prefix": "fmgr_vpnsslweb_portal_bookmarkgroup",
    "description": "Portal bookmark group.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_bookmarkgroup:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_portal_bookmarkgroup: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks": {
    "prefix": "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks",
    "description": "Bookmark table.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks:",
      "\tadom: ${1:}",
      "\tbookmark-group: ${2:}",
      "\tportal: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#vpnsslweb_portal_bookmarkgroup_bookmarks: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks_formdata": {
    "prefix": "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks_formdata",
    "description": "Form data.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks_formdata:",
      "\tadom: ${1:}",
      "\tbookmark-group: ${2:}",
      "\tbookmarks: ${3:}",
      "\tportal: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#access_token: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#vpnsslweb_portal_bookmarkgroup_bookmarks_formdata: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_landingpage": {
    "prefix": "fmgr_vpnsslweb_portal_landingpage",
    "description": "Landing page options.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_landingpage:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_portal_landingpage: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_landingpage_formdata": {
    "prefix": "fmgr_vpnsslweb_portal_landingpage_formdata",
    "description": "Form data.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_landingpage_formdata:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_portal_landingpage_formdata: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_macaddrcheckrule": {
    "prefix": "fmgr_vpnsslweb_portal_macaddrcheckrule",
    "description": "Client MAC address check rule.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_macaddrcheckrule:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_portal_macaddrcheckrule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_oschecklist": {
    "prefix": "fmgr_vpnsslweb_portal_oschecklist",
    "description": "SSL VPN OS checks.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_oschecklist:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_portal_oschecklist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_splitdns": {
    "prefix": "fmgr_vpnsslweb_portal_splitdns",
    "description": "Split DNS for SSL VPN.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_splitdns:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_portal_splitdns: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_realm": {
    "prefix": "fmgr_vpnsslweb_realm",
    "description": "Realm.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_realm:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_realm: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_virtualdesktopapplist": {
    "prefix": "fmgr_vpnsslweb_virtualdesktopapplist",
    "description": "SSL-VPN virtual desktop application list.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_virtualdesktopapplist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_virtualdesktopapplist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_virtualdesktopapplist_apps": {
    "prefix": "fmgr_vpnsslweb_virtualdesktopapplist_apps",
    "description": "Applications.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_virtualdesktopapplist_apps:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvirtual-desktop-app-list: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_virtualdesktopapplist_apps: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_mainclass": {
    "prefix": "fmgr_waf_mainclass",
    "description": "Hidden table for datasource.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_mainclass:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_mainclass: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile": {
    "prefix": "fmgr_waf_profile",
    "description": "Web application firewall configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_addresslist": {
    "prefix": "fmgr_waf_profile_addresslist",
    "description": "Black address list and white address list.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_addresslist:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_addresslist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint": {
    "prefix": "fmgr_waf_profile_constraint",
    "description": "WAF HTTP protocol restrictions.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_contentlength": {
    "prefix": "fmgr_waf_profile_constraint_contentlength",
    "description": "HTTP content length in request.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_contentlength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_contentlength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_exception": {
    "prefix": "fmgr_waf_profile_constraint_exception",
    "description": "HTTP constraint exception.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_exception:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#waf_profile_constraint_exception: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_profile_constraint_headerlength": {
    "prefix": "fmgr_waf_profile_constraint_headerlength",
    "description": "HTTP header length in request.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_headerlength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_headerlength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_hostname": {
    "prefix": "fmgr_waf_profile_constraint_hostname",
    "description": "Enable/disable hostname check.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_hostname:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_hostname: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_linelength": {
    "prefix": "fmgr_waf_profile_constraint_linelength",
    "description": "HTTP line length in request.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_linelength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_linelength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_malformed": {
    "prefix": "fmgr_waf_profile_constraint_malformed",
    "description": "Enable/disable malformed HTTP request check.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_malformed:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_malformed: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_maxcookie": {
    "prefix": "fmgr_waf_profile_constraint_maxcookie",
    "description": "Maximum number of cookies in HTTP request.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_maxcookie:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_maxcookie: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_maxheaderline": {
    "prefix": "fmgr_waf_profile_constraint_maxheaderline",
    "description": "Maximum number of HTTP header line.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_maxheaderline:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_maxheaderline: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_maxrangesegment": {
    "prefix": "fmgr_waf_profile_constraint_maxrangesegment",
    "description": "Maximum number of range segments in HTTP range line.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_maxrangesegment:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_maxrangesegment: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_maxurlparam": {
    "prefix": "fmgr_waf_profile_constraint_maxurlparam",
    "description": "Maximum number of parameters in URL.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_maxurlparam:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_maxurlparam: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_method": {
    "prefix": "fmgr_waf_profile_constraint_method",
    "description": "Enable/disable HTTP method check.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_method:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_method: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_paramlength": {
    "prefix": "fmgr_waf_profile_constraint_paramlength",
    "description": "Maximum length of parameter in URL, HTTP POST request or HTTP body.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_paramlength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_paramlength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_urlparamlength": {
    "prefix": "fmgr_waf_profile_constraint_urlparamlength",
    "description": "Maximum length of parameter in URL.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_urlparamlength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_urlparamlength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_version": {
    "prefix": "fmgr_waf_profile_constraint_version",
    "description": "Enable/disable HTTP version check.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_version:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_version: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_method": {
    "prefix": "fmgr_waf_profile_method",
    "description": "Method restriction.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_method:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_method: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_method_methodpolicy": {
    "prefix": "fmgr_waf_profile_method_methodpolicy",
    "description": "HTTP method policy.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_method_methodpolicy:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#waf_profile_method_methodpolicy: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_profile_signature": {
    "prefix": "fmgr_waf_profile_signature",
    "description": "WAF signatures.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_signature:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_signature: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_signature_customsignature": {
    "prefix": "fmgr_waf_profile_signature_customsignature",
    "description": "Custom signature.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_signature_customsignature:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#waf_profile_signature_customsignature: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_profile_signature_mainclass": {
    "prefix": "fmgr_waf_profile_signature_mainclass",
    "description": "Main signature class.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_signature_mainclass:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_signature_mainclass: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_urlaccess": {
    "prefix": "fmgr_waf_profile_urlaccess",
    "description": "URL access list",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_urlaccess:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#waf_profile_urlaccess: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_profile_urlaccess_accesspattern": {
    "prefix": "fmgr_waf_profile_urlaccess_accesspattern",
    "description": "URL access pattern.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_urlaccess_accesspattern:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\turl-access: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#waf_profile_urlaccess_accesspattern: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_waf_signature": {
    "prefix": "fmgr_waf_signature",
    "description": "Hidden table for datasource.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_signature:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_signature: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_subclass": {
    "prefix": "fmgr_waf_subclass",
    "description": "Hidden table for datasource.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_subclass:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_subclass: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wagprofile": {
    "prefix": "fmgr_wagprofile",
    "description": "Configure wireless access gateway",
    "body": [
      "fortinet.fortimanager.fmgr_wagprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wagprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_authgroup": {
    "prefix": "fmgr_wanopt_authgroup",
    "description": "Configure WAN optimization authentication groups.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_authgroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_authgroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_peer": {
    "prefix": "fmgr_wanopt_peer",
    "description": "Configure WAN optimization peers.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_peer:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_peer: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile": {
    "prefix": "fmgr_wanopt_profile",
    "description": "Configure WAN optimization profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_cifs": {
    "prefix": "fmgr_wanopt_profile_cifs",
    "description": "Enable/disable CIFS",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_cifs:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_cifs: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_ftp": {
    "prefix": "fmgr_wanopt_profile_ftp",
    "description": "Enable/disable FTP WAN Optimization and configure FTP WAN Optimization features.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_ftp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_ftp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_http": {
    "prefix": "fmgr_wanopt_profile_http",
    "description": "Enable/disable HTTP WAN Optimization and configure HTTP WAN Optimization features.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_http:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_http: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_mapi": {
    "prefix": "fmgr_wanopt_profile_mapi",
    "description": "Enable/disable MAPI email WAN Optimization and configure MAPI WAN Optimization features.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_mapi:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_mapi: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_tcp": {
    "prefix": "fmgr_wanopt_profile_tcp",
    "description": "Enable/disable TCP WAN Optimization and configure TCP WAN Optimization features.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_tcp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_tcp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan": {
    "prefix": "fmgr_wanprof_system_sdwan",
    "description": "Configure redundant internet connections using SD-WAN",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan:",
      "\tadom: ${1:}",
      "\twanprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanprof_system_sdwan: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_duplication": {
    "prefix": "fmgr_wanprof_system_sdwan_duplication",
    "description": "Create SD-WAN duplication rule.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_duplication:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_duplication: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_healthcheck": {
    "prefix": "fmgr_wanprof_system_sdwan_healthcheck",
    "description": "SD-WAN status checking or health checking.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_healthcheck:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_healthcheck: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_healthcheck_sla": {
    "prefix": "fmgr_wanprof_system_sdwan_healthcheck_sla",
    "description": "Service level agreement",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_healthcheck_sla:",
      "\tadom: ${1:}",
      "\thealth-check: ${2:}",
      "\tstate: ${3:present|absent}",
      "\twanprof: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#wanprof_system_sdwan_healthcheck_sla: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_members": {
    "prefix": "fmgr_wanprof_system_sdwan_members",
    "description": "FortiGate interfaces added to the SD-WAN.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_members:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_members: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_neighbor": {
    "prefix": "fmgr_wanprof_system_sdwan_neighbor",
    "description": "Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_neighbor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_neighbor: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_service": {
    "prefix": "fmgr_wanprof_system_sdwan_service",
    "description": "Create SD-WAN rules",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_service:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_service: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_service_sla": {
    "prefix": "fmgr_wanprof_system_sdwan_service_sla",
    "description": "Service level agreement",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_service_sla:",
      "\tadom: ${1:}",
      "\tservice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\twanprof: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#wanprof_system_sdwan_service_sla: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_zone": {
    "prefix": "fmgr_wanprof_system_sdwan_zone",
    "description": "Configure SD-WAN zones.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_zone:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_zone: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink": {
    "prefix": "fmgr_wanprof_system_virtualwanlink",
    "description": "Configure redundant internet connections using SD-WAN",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink:",
      "\tadom: ${1:}",
      "\twanprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanprof_system_virtualwanlink: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_healthcheck": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_healthcheck",
    "description": "SD-WAN status checking or health checking.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_healthcheck:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_virtualwanlink_healthcheck: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_healthcheck_sla": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_healthcheck_sla",
    "description": "Service level agreement",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_healthcheck_sla:",
      "\tadom: ${1:}",
      "\thealth-check: ${2:}",
      "\tstate: ${3:present|absent}",
      "\twanprof: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#wanprof_system_virtualwanlink_healthcheck_sla: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_members": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_members",
    "description": "Physical FortiGate interfaces added to the virtual-wan-link.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_members:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_virtualwanlink_members: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_neighbor": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_neighbor",
    "description": "SD-WAN neighbor table.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_neighbor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_virtualwanlink_neighbor: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_service": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_service",
    "description": "Create SD-WAN rules or priority rules",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_service:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_virtualwanlink_service: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_service_sla": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_service_sla",
    "description": "Service level agreement",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_service_sla:",
      "\tadom: ${1:}",
      "\tservice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\twanprof: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#wanprof_system_virtualwanlink_service_sla: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_webfilter_categories": {
    "prefix": "fmgr_webfilter_categories",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_categories:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_categories: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_content": {
    "prefix": "fmgr_webfilter_content",
    "description": "Configure Web filter banned word table.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_content:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_content: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_content_entries": {
    "prefix": "fmgr_webfilter_content_entries",
    "description": "Configure banned word entries.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_content_entries:",
      "\tadom: ${1:}",
      "\tcontent: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_content_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_contentheader": {
    "prefix": "fmgr_webfilter_contentheader",
    "description": "Configure content types used by Web filter.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_contentheader:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_contentheader: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_contentheader_entries": {
    "prefix": "fmgr_webfilter_contentheader_entries",
    "description": "Configure content types used by web filter.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_contentheader_entries:",
      "\tadom: ${1:}",
      "\tcontent-header: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_contentheader_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_ftgdlocalcat": {
    "prefix": "fmgr_webfilter_ftgdlocalcat",
    "description": "Configure FortiGuard Web Filter local categories.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_ftgdlocalcat:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_ftgdlocalcat: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_ftgdlocalrating": {
    "prefix": "fmgr_webfilter_ftgdlocalrating",
    "description": "Configure local FortiGuard Web Filter local ratings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_ftgdlocalrating:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_ftgdlocalrating: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile": {
    "prefix": "fmgr_webfilter_profile",
    "description": "Configure Web filter profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_antiphish": {
    "prefix": "fmgr_webfilter_profile_antiphish",
    "description": "AntiPhishing profile.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_antiphish:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_antiphish: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_antiphish_custompatterns": {
    "prefix": "fmgr_webfilter_profile_antiphish_custompatterns",
    "description": "Custom username and password regex patterns.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_antiphish_custompatterns:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_antiphish_custompatterns: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_antiphish_inspectionentries": {
    "prefix": "fmgr_webfilter_profile_antiphish_inspectionentries",
    "description": "AntiPhishing entries.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_antiphish_inspectionentries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_antiphish_inspectionentries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_filefilter": {
    "prefix": "fmgr_webfilter_profile_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_filefilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_filefilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_filefilter_entries": {
    "prefix": "fmgr_webfilter_profile_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_filefilter_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_ftgdwf": {
    "prefix": "fmgr_webfilter_profile_ftgdwf",
    "description": "FortiGuard Web Filter settings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_ftgdwf:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_ftgdwf: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_ftgdwf_filters": {
    "prefix": "fmgr_webfilter_profile_ftgdwf_filters",
    "description": "FortiGuard filters.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_ftgdwf_filters:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_ftgdwf_filters: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_ftgdwf_quota": {
    "prefix": "fmgr_webfilter_profile_ftgdwf_quota",
    "description": "FortiGuard traffic quota settings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_ftgdwf_quota:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_ftgdwf_quota: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_override": {
    "prefix": "fmgr_webfilter_profile_override",
    "description": "Web Filter override settings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_override:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_override: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_urlextraction": {
    "prefix": "fmgr_webfilter_profile_urlextraction",
    "description": "Configure URL Extraction",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_urlextraction:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_urlextraction: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_web": {
    "prefix": "fmgr_webfilter_profile_web",
    "description": "Web content filtering settings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_web:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_web: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_youtubechannelfilter": {
    "prefix": "fmgr_webfilter_profile_youtubechannelfilter",
    "description": "YouTube channel filter.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_youtubechannelfilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_youtubechannelfilter: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_urlfilter": {
    "prefix": "fmgr_webfilter_urlfilter",
    "description": "Configure URL filter lists.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_urlfilter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_urlfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_urlfilter_entries": {
    "prefix": "fmgr_webfilter_urlfilter_entries",
    "description": "URL filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_urlfilter_entries:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\turlfilter: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_urlfilter_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webproxy_forwardserver": {
    "prefix": "fmgr_webproxy_forwardserver",
    "description": "Configure forward-server addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_forwardserver:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webproxy_forwardserver: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webproxy_forwardservergroup": {
    "prefix": "fmgr_webproxy_forwardservergroup",
    "description": "Configure a forward server group consisting or multiple forward servers.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_forwardservergroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webproxy_forwardservergroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webproxy_forwardservergroup_serverlist": {
    "prefix": "fmgr_webproxy_forwardservergroup_serverlist",
    "description": "Add web forward servers to a list to form a server group.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_forwardservergroup_serverlist:",
      "\tadom: ${1:}",
      "\tforward-server-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webproxy_forwardservergroup_serverlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webproxy_profile": {
    "prefix": "fmgr_webproxy_profile",
    "description": "Configure web proxy profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webproxy_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webproxy_profile_headers": {
    "prefix": "fmgr_webproxy_profile_headers",
    "description": "Configure HTTP forwarded requests headers.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_profile_headers:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webproxy_profile_headers: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webproxy_wisp": {
    "prefix": "fmgr_webproxy_wisp",
    "description": "Configure Wireless Internet service provider",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_wisp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webproxy_wisp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_widsprofile": {
    "prefix": "fmgr_widsprofile",
    "description": "Configure wireless intrusion detection system",
    "body": [
      "fortinet.fortimanager.fmgr_widsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#widsprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_accesscontrollist": {
    "prefix": "fmgr_wireless_accesscontrollist",
    "description": "Configure WiFi bridge access control list.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_accesscontrollist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_accesscontrollist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_accesscontrollist_layer3ipv4rules": {
    "prefix": "fmgr_wireless_accesscontrollist_layer3ipv4rules",
    "description": "AP ACL layer3 ipv4 rule list.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_accesscontrollist_layer3ipv4rules:",
      "\taccess-control-list: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wireless_accesscontrollist_layer3ipv4rules: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wireless_accesscontrollist_layer3ipv6rules": {
    "prefix": "fmgr_wireless_accesscontrollist_layer3ipv6rules",
    "description": "AP ACL layer3 ipv6 rule list.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_accesscontrollist_layer3ipv6rules:",
      "\taccess-control-list: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wireless_accesscontrollist_layer3ipv6rules: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wireless_address": {
    "prefix": "fmgr_wireless_address",
    "description": "Configure the client with its MAC address.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_address:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_address: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_addrgrp": {
    "prefix": "fmgr_wireless_addrgrp",
    "description": "Configure the MAC address group.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_addrgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_addrgrp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_ssidpolicy": {
    "prefix": "fmgr_wireless_ssidpolicy",
    "description": "Configure WiFi SSID policies.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_ssidpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_ssidpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_syslogprofile": {
    "prefix": "fmgr_wireless_syslogprofile",
    "description": "Configure Wireless Termination Points",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_syslogprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_syslogprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wtpprofile": {
    "prefix": "fmgr_wtpprofile",
    "description": "Configure WTP profiles or FortiAP profiles that define radio settings for manageable FortiAP platforms.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile: ${12:}"
    ]
  },
  "fmgr_wtpprofile_denymaclist": {
    "prefix": "fmgr_wtpprofile_denymaclist",
    "description": "List of MAC addresses that are denied access to this WTP, FortiAP, or AP.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_denymaclist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twtp-profile: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}",
      "\t#wtpprofile_denymaclist: ${13:}"
    ]
  },
  "fmgr_wtpprofile_eslsesdongle": {
    "prefix": "fmgr_wtpprofile_eslsesdongle",
    "description": "ESL SES-imagotag dongle configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_eslsesdongle:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_eslsesdongle: ${12:}"
    ]
  },
  "fmgr_wtpprofile_lan": {
    "prefix": "fmgr_wtpprofile_lan",
    "description": "WTP LAN port mapping.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_lan:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_lan: ${12:}"
    ]
  },
  "fmgr_wtpprofile_lbs": {
    "prefix": "fmgr_wtpprofile_lbs",
    "description": "Set various location based service",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_lbs:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_lbs: ${12:}"
    ]
  },
  "fmgr_wtpprofile_platform": {
    "prefix": "fmgr_wtpprofile_platform",
    "description": "WTP, FortiAP, or AP platform.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_platform:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_platform: ${12:}"
    ]
  },
  "fmgr_wtpprofile_radio1": {
    "prefix": "fmgr_wtpprofile_radio1",
    "description": "Configuration options for radio 1.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_radio1:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_radio1: ${12:}"
    ]
  },
  "fmgr_wtpprofile_radio2": {
    "prefix": "fmgr_wtpprofile_radio2",
    "description": "Configuration options for radio 2.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_radio2:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_radio2: ${12:}"
    ]
  },
  "fmgr_wtpprofile_radio3": {
    "prefix": "fmgr_wtpprofile_radio3",
    "description": "Configuration options for radio 3.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_radio3:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_radio3: ${12:}"
    ]
  },
  "fmgr_wtpprofile_radio4": {
    "prefix": "fmgr_wtpprofile_radio4",
    "description": "Configuration options for radio 4.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_radio4:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_radio4: ${12:}"
    ]
  },
  "fmgr_wtpprofile_splittunnelingacl": {
    "prefix": "fmgr_wtpprofile_splittunnelingacl",
    "description": "Split tunneling ACL filter list.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_splittunnelingacl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twtp-profile: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}",
      "\t#wtpprofile_splittunnelingacl: ${13:}"
    ]
  },
  "fortios_alertemail_setting": {
    "prefix": "fortios_alertemail_setting",
    "description": "Configure alert email settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_alertemail_setting:",
      "\t#access_token: ${1:}",
      "\t#alertemail_setting: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_antivirus_exempt_list": {
    "prefix": "fortios_antivirus_exempt_list",
    "description": "Configure a list of hashes to be exempt from AV scanning in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_exempt_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#antivirus_exempt_list: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_antivirus_heuristic": {
    "prefix": "fortios_antivirus_heuristic",
    "description": "Configure global heuristic options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_heuristic:",
      "\t#access_token: ${1:}",
      "\t#antivirus_heuristic: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_antivirus_mms_checksum": {
    "prefix": "fortios_antivirus_mms_checksum",
    "description": "Configure MMS content checksum list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_mms_checksum:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#antivirus_mms_checksum: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_antivirus_notification": {
    "prefix": "fortios_antivirus_notification",
    "description": "Configure AntiVirus notification lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_notification:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#antivirus_notification: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_antivirus_profile": {
    "prefix": "fortios_antivirus_profile",
    "description": "Configure AntiVirus profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#antivirus_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_antivirus_quarantine": {
    "prefix": "fortios_antivirus_quarantine",
    "description": "Configure quarantine options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_quarantine:",
      "\t#access_token: ${1:}",
      "\t#antivirus_quarantine: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_antivirus_settings": {
    "prefix": "fortios_antivirus_settings",
    "description": "Configure AntiVirus settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_settings:",
      "\t#access_token: ${1:}",
      "\t#antivirus_settings: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_application_custom": {
    "prefix": "fortios_application_custom",
    "description": "Configure custom application signatures in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_custom: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_application_group": {
    "prefix": "fortios_application_group",
    "description": "Configure firewall application groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_group: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_application_list": {
    "prefix": "fortios_application_list",
    "description": "Configure application control lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_list: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_application_name": {
    "prefix": "fortios_application_name",
    "description": "Configure application signatures in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_name:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_name: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_application_rule_settings": {
    "prefix": "fortios_application_rule_settings",
    "description": "Configure application rule settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_rule_settings:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_rule_settings: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_authentication_rule": {
    "prefix": "fortios_authentication_rule",
    "description": "Configure Authentication Rules in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_authentication_rule:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#authentication_rule: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_authentication_scheme": {
    "prefix": "fortios_authentication_scheme",
    "description": "Configure Authentication Schemes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_authentication_scheme:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#authentication_scheme: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_authentication_setting": {
    "prefix": "fortios_authentication_setting",
    "description": "Configure authentication setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_authentication_setting:",
      "\t#access_token: ${1:}",
      "\t#authentication_setting: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_automation_setting": {
    "prefix": "fortios_automation_setting",
    "description": "Automation setting configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_automation_setting:",
      "\t#access_token: ${1:}",
      "\t#automation_setting: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_casb_profile": {
    "prefix": "fortios_casb_profile",
    "description": "Configure CASB profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_casb_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#casb_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_casb_saas_application": {
    "prefix": "fortios_casb_saas_application",
    "description": "Configure CASB SaaS application in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_casb_saas_application:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#casb_saas_application: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_casb_user_activity": {
    "prefix": "fortios_casb_user_activity",
    "description": "Configure CASB user activity in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_casb_user_activity:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#casb_user_activity: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_certificate_ca": {
    "prefix": "fortios_certificate_ca",
    "description": "CA certificate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_certificate_ca:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#certificate_ca: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_certificate_crl": {
    "prefix": "fortios_certificate_crl",
    "description": "Certificate Revocation List as a PEM file in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_certificate_crl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#certificate_crl: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_certificate_local": {
    "prefix": "fortios_certificate_local",
    "description": "Local keys and certificates in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_certificate_local:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#certificate_local: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_certificate_remote": {
    "prefix": "fortios_certificate_remote",
    "description": "Remote certificate as a PEM file in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_certificate_remote:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#certificate_remote: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_cifs_domain_controller": {
    "prefix": "fortios_cifs_domain_controller",
    "description": "Define known domain controller servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_cifs_domain_controller:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#cifs_domain_controller: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_cifs_profile": {
    "prefix": "fortios_cifs_profile",
    "description": "Configure CIFS profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_cifs_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#cifs_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_configuration_fact": {
    "prefix": "fortios_configuration_fact",
    "description": "Retrieve Facts of FortiOS Configurable Objects.",
    "body": [
      "fortinet.fortios.fortios_configuration_fact:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#filters: ${3:}",
      "\t#formatters: ${4:}",
      "\t#params: ${5:}",
      "\t#selector: ${6:system_vdom|system_global|system_accprofile|system_vdom-link|system_switch-interface|system_object-tagging|system_interface|system_password-policy|system_password-policy-guest-admin|system_sms-server|system_custom-language|system_admin|system_api-user|system_sso-admin|system_sso-forticloud-admin|system_sso-fortigate-cloud-admin|system_settings|system_sit-tunnel|system_fsso-polling|system_ha|system_ha-monitor|system_storage|system_dedicated-mgmt|system_arp-table|system_ipv6-neighbor-cache|system_dns|system_ddns|system_sflow|system_vdom-sflow|system_netflow|system_vdom-netflow|system_vdom-dns|system_replacemsg-image|system_replacemsg-group|system.snmp_sysinfo|system.snmp_mib-view|system.snmp_community|system.snmp_user|system.autoupdate_schedule|system.autoupdate_tunneling|system_session-ttl|system.dhcp_server|system.dhcp6_server|system_alias|system_auto-script|system_management-tunnel|system_central-management|system_zone|system_sdn-proxy|system_sdn-connector|system_ipv6-tunnel|system_external-resource|system_ips-urlfilter-dns|system_ips-urlfilter-dns6|system_network-visibility|system_sdwan|system_evpn|system_gre-tunnel|system_ipsec-aggregate|system_ipip-tunnel|system_mobile-tunnel|system_pppoe-interface|system_vxlan|system_geneve|system_virtual-wire-pair|system_dns-database|system_dns-server|system_resource-limits|system_vdom-property|system_speed-test-server|system.lldp_network-policy|system_pcp-server|system_speed-test-schedule|system_speed-test-setting|system_standalone-cluster|system_fortiguard|system_ips|system_email-server|system_alarm|system_mac-address-table|system_session-helper|system_proxy-arp|system_fips-cc|system_tos-based-priority|system_dscp-based-priority|system_probe-response|system_link-monitor|system_auto-install|system_console|system_ntp|system_ptp|system_wccp|system_dns64|system_vdom-radius-server|system_ftm-push|system_geoip-override|system_fortisandbox|system_fortindr|system_affinity-interrupt|system_affinity-packet-redistribution|system_vdom-exception|system_csf|system_automation-trigger|system_automation-action|system_automation-destination|system_automation-stitch|system_nd-proxy|system_saml|system_federated-upgrade|system_device-upgrade|system_vne-tunnel|system_ike|system_acme|system_ipam|system_fabric-vpn|wireless-controller_inter-controller|wireless-controller_global|wireless-controller.hotspot20_anqp-venue-name|wireless-controller.hotspot20_anqp-venue-url|wireless-controller.hotspot20_anqp-network-auth-type|wireless-controller.hotspot20_anqp-roaming-consortium|wireless-controller.hotspot20_anqp-nai-realm|wireless-controller.hotspot20_anqp-3gpp-cellular|wireless-controller.hotspot20_anqp-ip-address-type|wireless-controller.hotspot20_h2qp-operator-name|wireless-controller.hotspot20_h2qp-wan-metric|wireless-controller.hotspot20_h2qp-conn-capability|wireless-controller.hotspot20_icon|wireless-controller.hotspot20_h2qp-osu-provider|wireless-controller.hotspot20_qos-map|wireless-controller.hotspot20_h2qp-advice-of-charge|wireless-controller.hotspot20_h2qp-osu-provider-nai|wireless-controller.hotspot20_h2qp-terms-and-conditions|wireless-controller.hotspot20_hs-profile|wireless-controller_vap|wireless-controller_timers|wireless-controller_setting|wireless-controller_log|wireless-controller_apcfg-profile|wireless-controller_bonjour-profile|wireless-controller_arrp-profile|wireless-controller_region|wireless-controller_vap-group|wireless-controller_wids-profile|wireless-controller_ble-profile|wireless-controller_syslog-profile|wireless-controller_wtp-profile|wireless-controller_wtp|wireless-controller_wtp-group|wireless-controller_qos-profile|wireless-controller_wag-profile|wireless-controller_utm-profile|wireless-controller_snmp|wireless-controller_mpsk-profile|wireless-controller_nac-profile|wireless-controller_ssid-policy|wireless-controller_access-control-list|wireless-controller_ap-status|switch-controller_traffic-policy|switch-controller_fortilink-settings|switch-controller_switch-interface-tag|switch-controller_802-1X-settings|switch-controller.security-policy_802-1X|switch-controller.security-policy_local-access|switch-controller_location|switch-controller_lldp-settings|switch-controller_lldp-profile|switch-controller.qos_dot1p-map|switch-controller.qos_ip-dscp-map|switch-controller.qos_queue-policy|switch-controller.qos_qos-policy|switch-controller_storm-control-policy|switch-controller.auto-config_policy|switch-controller.auto-config_default|switch-controller.auto-config_custom|switch-controller.initial-config_template|switch-controller.initial-config_vlans|switch-controller_switch-profile|switch-controller_custom-command|switch-controller_virtual-port-pool|switch-controller.ptp_profile|switch-controller.ptp_interface-policy|switch-controller_vlan-policy|switch-controller.acl_ingress|switch-controller.acl_group|switch-controller_dynamic-port-policy|switch-controller_managed-switch|switch-controller_switch-group|switch-controller_stp-settings|switch-controller_stp-instance|switch-controller_storm-control|switch-controller_global|switch-controller_system|switch-controller_switch-log|switch-controller_igmp-snooping|switch-controller_sflow|switch-controller_quarantine|switch-controller_network-monitor-settings|switch-controller_flow-tracking|switch-controller_snmp-sysinfo|switch-controller_snmp-trap-threshold|switch-controller_snmp-community|switch-controller_snmp-user|switch-controller_traffic-sniffer|switch-controller_remote-log|switch-controller_mac-policy|firewall_address|firewall_multicast-address|firewall_address6-template|firewall_address6|firewall_multicast-address6|firewall_addrgrp|firewall_addrgrp6|firewall.wildcard-fqdn_custom|firewall.wildcard-fqdn_group|firewall_traffic-class|firewall.service_category|firewall.service_custom|firewall.service_group|firewall_internet-service-name|firewall_internet-service-group|firewall_internet-service-extension|firewall_internet-service-custom|firewall_internet-service-addition|firewall_internet-service-append|firewall_internet-service-custom-group|firewall_internet-service-definition|firewall_network-service-dynamic|firewall.shaper_traffic-shaper|firewall.shaper_per-ip-shaper|firewall_proxy-address|firewall_proxy-addrgrp|firewall.schedule_onetime|firewall.schedule_recurring|firewall.schedule_group|firewall_ippool|firewall_ippool6|firewall_ldb-monitor|firewall_vip|firewall_vip6|firewall_vipgrp|firewall_vipgrp6|firewall.ssh_local-key|firewall.ssh_local-ca|firewall.ssh_setting|firewall.ssh_host-key|firewall_decrypted-traffic-mirror|firewall_access-proxy-virtual-host|firewall_access-proxy-ssh-client-cert|firewall_access-proxy|firewall_access-proxy6|firewall.ipmacbinding_setting|firewall.ipmacbinding_table|firewall_profile-protocol-options|firewall_ssl-ssh-profile|firewall_ssl-server|firewall_profile-group|firewall_identity-based-route|firewall_auth-portal|firewall_security-policy|firewall_policy|firewall_shaping-policy|firewall_shaping-profile|firewall_local-in-policy|firewall_local-in-policy6|firewall_ttl-policy|firewall_proxy-policy|firewall_dnstranslation|firewall_multicast-policy|firewall_multicast-policy6|firewall_interface-policy|firewall_interface-policy6|firewall_DoS-policy|firewall_DoS-policy6|firewall_sniffer|firewall_central-snat-map|firewall.ssl_setting|firewall_ip-translation|firewall_ipv6-eh-filter|firewall_global|vpn.certificate_ca|vpn.certificate_remote|vpn.certificate_local|vpn.certificate_crl|vpn.certificate_ocsp-server|vpn.certificate_setting|vpn.ssl.web_realm|vpn.ssl.web_host-check-software|vpn.ssl.web_portal|vpn.ssl.web_user-group-bookmark|vpn.ssl.web_user-bookmark|vpn.ssl_settings|vpn.ssl_client|vpn_kmip-server|vpn.ipsec_phase1|vpn.ipsec_phase2|vpn.ipsec_manualkey|vpn.ipsec_concentrator|vpn.ipsec_fec|vpn.ipsec_phase1-interface|vpn.ipsec_phase2-interface|vpn.ipsec_manualkey-interface|vpn.ipsec_forticlient|vpn_pptp|vpn_l2tp|certificate_ca|certificate_remote|certificate_local|certificate_crl|webfilter_ftgd-local-cat|webfilter_content|webfilter_content-header|webfilter_urlfilter|webfilter_ips-urlfilter-setting|webfilter_ips-urlfilter-setting6|webfilter_ips-urlfilter-cache-setting|webfilter_profile|webfilter_fortiguard|webfilter_override|webfilter_ftgd-local-rating|webfilter_search-engine|ips_sensor|ips_custom|ips_global|ips_settings|sctp-filter_profile|web-proxy_profile|web-proxy_global|web-proxy_explicit|web-proxy_forward-server|web-proxy_forward-server-group|web-proxy_debug-url|web-proxy_wisp|web-proxy_fast-fallback|web-proxy_url-match|wanopt_webcache|wanopt_settings|wanopt_peer|wanopt_auth-group|wanopt_profile|wanopt_content-delivery-network-rule|wanopt_cache-service|wanopt_remote-storage|ftp-proxy_explicit|application_custom|application_list|application_group|dlp_data-type|dlp_dictionary|dlp_sensor|dlp_filepattern|dlp_sensitivity|dlp_fp-doc-source|dlp_profile|dlp_settings|videofilter_youtube-key|videofilter_youtube-channel-filter|videofilter_profile|emailfilter_bword|emailfilter_block-allow-list|emailfilter_mheader|emailfilter_dnsbl|emailfilter_iptrust|emailfilter_profile|emailfilter_fortishield|emailfilter_options|log_threat-weight|log_custom-field|log.syslogd_setting|log.syslogd_override-setting|log.syslogd_filter|log.syslogd_override-filter|log.syslogd2_setting|log.syslogd2_override-setting|log.syslogd2_filter|log.syslogd2_override-filter|log.syslogd3_setting|log.syslogd3_override-setting|log.syslogd3_filter|log.syslogd3_override-filter|log.syslogd4_setting|log.syslogd4_override-setting|log.syslogd4_filter|log.syslogd4_override-filter|log.webtrends_setting|log.webtrends_filter|log.memory_global-setting|log.memory_setting|log.memory_filter|log.disk_setting|log.disk_filter|log_eventfilter|log.fortiguard_setting|log.fortiguard_override-setting|log.fortiguard_filter|log.fortiguard_override-filter|log.tacacs+accounting_setting|log.tacacs+accounting_filter|log.tacacs+accounting2_setting|log.tacacs+accounting2_filter|log.tacacs+accounting3_setting|log.tacacs+accounting3_filter|log.null-device_setting|log.null-device_filter|log_setting|log_gui-display|log.fortianalyzer_setting|log.fortianalyzer_override-setting|log.fortianalyzer_filter|log.fortianalyzer_override-filter|log.fortianalyzer2_setting|log.fortianalyzer2_override-setting|log.fortianalyzer2_filter|log.fortianalyzer2_override-filter|log.fortianalyzer3_setting|log.fortianalyzer3_override-setting|log.fortianalyzer3_filter|log.fortianalyzer3_override-filter|log.fortianalyzer-cloud_setting|log.fortianalyzer-cloud_override-setting|log.fortianalyzer-cloud_filter|log.fortianalyzer-cloud_override-filter|icap_server|icap_server-group|icap_profile|user_certificate|user_radius|user_tacacs+|user_exchange|user_ldap|user_krb-keytab|user_domain-controller|user_pop3|user_saml|user_fsso|user_adgrp|user_fsso-polling|user_fortitoken|user_password-policy|user_local|user_setting|user_peer|user_peergrp|user_quarantine|user_group|user_security-exempt-list|user_nac-policy|voip_profile|dnsfilter_domain-filter|dnsfilter_profile|nsxt_setting|nsxt_service-chain|antivirus_settings|antivirus_quarantine|antivirus_exempt-list|antivirus_profile|ssh-filter_profile|file-filter_profile|virtual-patch_profile|report_layout|report_setting|waf_main-class|waf_sub-class|waf_signature|waf_profile|casb_saas-application|casb_user-activity|casb_profile|authentication_scheme|authentication_rule|authentication_setting|extension-controller_dataplan|extension-controller_extender-profile|extension-controller_extender|extension-controller_fortigate-profile|extension-controller_fortigate|endpoint-control_fctems|endpoint-control_settings|endpoint-control_fctems-override|alertemail_setting|router_access-list|router_access-list6|router_aspath-list|router_prefix-list|router_prefix-list6|router_key-chain|router_community-list|router_extcommunity-list|router_route-map|router_rip|router_ripng|router_static|router_policy|router_policy6|router_static6|router_ospf|router_ospf6|router_bgp|router_isis|router_multicast-flow|router_multicast|router_multicast6|router_auth-path|router_setting|router_bfd|router_bfd6|automation_setting|dpdk_global|dpdk_cpus|system_isf-queue-profile|system_npu|system_np6|system_modem|system.3g-modem_custom|system_lte-modem|firewall_acl|firewall_acl6|monitoring_np6-ipsec-engine|monitoring_npu-hpe|switch-controller.ptp_settings|switch-controller.ptp_policy|system_physical-switch|system_virtual-switch|system_stp|system_gi-gk|firewall_gtp|firewall_pfcp|vpn_ocvpn|gtp_apn|gtp_apngrp|gtp_message-filter-v0v1|gtp_message-filter-v2|gtp_rat-timeout-profile|gtp_ie-allow-list|gtp_tunnel-limit|gtp_apn-shaper|pfcp_message-filter|system.replacemsg_mail|system.replacemsg_http|system.replacemsg_webproxy|system.replacemsg_ftp|system.replacemsg_fortiguard-wf|system.replacemsg_spam|system.replacemsg_alertmail|system.replacemsg_admin|system.replacemsg_auth|system.replacemsg_sslvpn|system.replacemsg_nac-quar|system.replacemsg_traffic-quota|system.replacemsg_utm|system.replacemsg_icap|system.replacemsg_automation|system_status|system.performance_status|system.performance_top|system.performance.firewall_packet-distribution|system.performance.firewall_statistics|system_session|system_session6|system_cmdb|system_fortiguard-service|system_fortianalyzer-connectivity|system.checksum_status|system_mgmt-csum|system_ha-nonsync-csum|system_fortiguard-log-service|system_central-mgmt|system.info.admin_status|system.info.admin_ssh|system_geoip-country|system_cluster-sync|system_arp|system_startup-error-log|system.source-ip_status|system.auto-update_status|system.auto-update_versions|system.session-info_list|system.session-info_expectation|system.session-info_full-stat|system.session-info_statistics|system.session-info_ttl|system.session-helper-info_list|system.ip-conflict_status|wireless-controller_scan|wireless-controller_wlchanlistlic|wireless-controller_status|wireless-controller_wtp-status|wireless-controller_client-info|wireless-controller_vap-status|wireless-controller_rf-analysis|wireless-controller_spectral-info|ipsec_tunnel|firewall_city|firewall_region|firewall_country|firewall_internet-service|firewall_internet-service-reputation|firewall_internet-service-sld|firewall_internet-service-ipbl-vendor|firewall_internet-service-ipbl-reason|firewall_internet-service-owner|firewall_internet-service-list|firewall_internet-service-botnet|firewall_vendor-mac|firewall_vendor-mac-summary|firewall.shaper_traffic|firewall.shaper_per-ip|firewall.iprope_list|firewall.iprope.appctrl_list|firewall.iprope.appctrl_status|firewall_proute|firewall_proute6|vpn.ssl_monitor|vpn.ipsec.stats_crypto|vpn.ipsec.stats_tunnel|vpn.ipsec.tunnel_details|vpn.ipsec.tunnel_summary|vpn.ipsec.tunnel_name|vpn.ike_gateway|vpn.status_l2tp|vpn.status_pptp|vpn.status.ssl_list|vpn.status.ssl_hw-acceleration-status|webfilter_categories|webfilter_ftgd-statistics|webfilter_status|webfilter_override-usr|ips_view-map|ips_decoder|ips_rule|ips_rule-settings|ips_session|application_name|application_rule-settings|report.sql_status|extender-controller_dataplan|extender-controller_extender-profile|extender-controller_extender|router_info|router_info6|hardware_status|hardware_cpu|hardware_memory|hardware_nic|hardware.npu.np6_port-list|hardware.npu.np6_dce|hardware.npu.np6_session-stats|hardware.npu.np6_sse-stats|hardware.npu.np6_ipsec-stats|hardware.npu.np6_synproxy-stats|mgmt-data_status|extender_sys-info|extender_extender-info|extender_session-info|extender_datachannel-info|extender_fexwan|extender_modem-status|extender_lte-carrier-list|extender_lte-carrier-by-mcc-mnc|wireless-controller_address|wireless-controller_addrgrp|system_fortiai|system_fortimanager|system_fm|system_nat64|firewall_vip46|firewall_vip64|firewall_vipgrp46|firewall_vipgrp64|firewall_policy64|firewall_policy46|system.autoupdate_push-update|switch-controller_nac-settings|switch-controller_port-policy|switch-controller_nac-device|emailfilter_bwl|antivirus_heuristic|credential-store_domain-controller|report_dataset|report_chart|report_style|report_theme|gtp_ie-white-list|system.replacemsg_nntp|system.replacemsg_device-detection-portal|switch-controller_poe|cifs_domain-controller|cifs_profile|system.replacemsg_mms|system.replacemsg_mm1|system.replacemsg_mm3|system.replacemsg_mm4|system.replacemsg_mm7|system_virtual-wan-link|system_mem-mgr|firewall_carrier-endpoint-bwl|firewall_mms-profile|firewall.consolidated_policy|firewall_policy6|antivirus_notification|antivirus_mms-checksum|system_smc-ntp|switch-controller_vlan|switch-controller.security-policy_captive-portal|user_device|user_device-group|endpoint-control_client|system.replacemsg_ec|dlp_fp-sensitivity|spamfilter_bword|spamfilter_bwl|spamfilter_mheader|spamfilter_dnsbl|spamfilter_iptrust|spamfilter_profile|spamfilter_fortishield|spamfilter_options|user_device-category|user_device-access-list|switch-controller_mac-sync-settings|endpoint-control_forticlient-ems|endpoint-control_profile|endpoint-control_forticlient-registration-sync|endpoint-control_registered-forticlient}",
      "\t#selectors: ${7:}",
      "\t#sorters: ${8:}",
      "\t#vdom: ${9:root}"
    ]
  },
  "fortios_credential_store_domain_controller": {
    "prefix": "fortios_credential_store_domain_controller",
    "description": "Define known domain controller servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_credential_store_domain_controller:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#credential_store_domain_controller: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_data_type": {
    "prefix": "fortios_dlp_data_type",
    "description": "Configure predefined data type used by DLP blocking in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_data_type:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_data_type: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_dictionary": {
    "prefix": "fortios_dlp_dictionary",
    "description": "Configure dictionaries used by DLP blocking in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_dictionary:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_dictionary: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_filepattern": {
    "prefix": "fortios_dlp_filepattern",
    "description": "Configure file patterns used by DLP blocking in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_filepattern:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_filepattern: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_fp_doc_source": {
    "prefix": "fortios_dlp_fp_doc_source",
    "description": "Create a DLP fingerprint database by allowing the FortiGate to access a file server containing files from which to create fingerprints in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_fp_doc_source:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_fp_doc_source: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_fp_sensitivity": {
    "prefix": "fortios_dlp_fp_sensitivity",
    "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_fp_sensitivity:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_fp_sensitivity: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_profile": {
    "prefix": "fortios_dlp_profile",
    "description": "Configure DLP profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_sensitivity": {
    "prefix": "fortios_dlp_sensitivity",
    "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_sensitivity:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_sensitivity: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_sensor": {
    "prefix": "fortios_dlp_sensor",
    "description": "Configure sensors used by DLP blocking in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_sensor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_sensor: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_settings": {
    "prefix": "fortios_dlp_settings",
    "description": "Designate logical storage for DLP fingerprint database in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_settings:",
      "\t#access_token: ${1:}",
      "\t#dlp_settings: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_dnsfilter_domain_filter": {
    "prefix": "fortios_dnsfilter_domain_filter",
    "description": "Configure DNS domain filters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dnsfilter_domain_filter:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dnsfilter_domain_filter: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dnsfilter_profile": {
    "prefix": "fortios_dnsfilter_profile",
    "description": "Configure DNS domain filter profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dnsfilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dnsfilter_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dpdk_cpus": {
    "prefix": "fortios_dpdk_cpus",
    "description": "Configure CPUs enabled to run engines in each DPDK stage in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dpdk_cpus:",
      "\t#access_token: ${1:}",
      "\t#dpdk_cpus: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_dpdk_global": {
    "prefix": "fortios_dpdk_global",
    "description": "Configure global DPDK options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dpdk_global:",
      "\t#access_token: ${1:}",
      "\t#dpdk_global: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_emailfilter_block_allow_list": {
    "prefix": "fortios_emailfilter_block_allow_list",
    "description": "Configure anti-spam block/allow list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_block_allow_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_block_allow_list: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_bwl": {
    "prefix": "fortios_emailfilter_bwl",
    "description": "Configure anti-spam black/white list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_bwl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_bwl: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_bword": {
    "prefix": "fortios_emailfilter_bword",
    "description": "Configure AntiSpam banned word list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_bword:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_bword: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_dnsbl": {
    "prefix": "fortios_emailfilter_dnsbl",
    "description": "Configure AntiSpam DNSBL/ORBL in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_dnsbl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_dnsbl: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_fortishield": {
    "prefix": "fortios_emailfilter_fortishield",
    "description": "Configure FortiGuard - AntiSpam in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_fortishield:",
      "\t#access_token: ${1:}",
      "\t#emailfilter_fortishield: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_emailfilter_iptrust": {
    "prefix": "fortios_emailfilter_iptrust",
    "description": "Configure AntiSpam IP trust in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_iptrust:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_iptrust: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_mheader": {
    "prefix": "fortios_emailfilter_mheader",
    "description": "Configure AntiSpam MIME header in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_mheader:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_mheader: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_options": {
    "prefix": "fortios_emailfilter_options",
    "description": "Configure AntiSpam options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_options:",
      "\t#access_token: ${1:}",
      "\t#emailfilter_options: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_emailfilter_profile": {
    "prefix": "fortios_emailfilter_profile",
    "description": "Configure Email Filter profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_client": {
    "prefix": "fortios_endpoint_control_client",
    "description": "Configure endpoint control client lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_client:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_client: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_fctems": {
    "prefix": "fortios_endpoint_control_fctems",
    "description": "Configure FortiClient Enterprise Management Server (EMS) entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_fctems:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_fctems: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_fctems_override": {
    "prefix": "fortios_endpoint_control_fctems_override",
    "description": "Configure FortiClient Enterprise Management Server (EMS) entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_fctems_override:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_fctems_override: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_forticlient_ems": {
    "prefix": "fortios_endpoint_control_forticlient_ems",
    "description": "Configure FortiClient Enterprise Management Server (EMS) entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_forticlient_ems:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_forticlient_ems: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_forticlient_registration_sync": {
    "prefix": "fortios_endpoint_control_forticlient_registration_sync",
    "description": "Configure FortiClient registration synchronization settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_forticlient_registration_sync:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_forticlient_registration_sync: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_profile": {
    "prefix": "fortios_endpoint_control_profile",
    "description": "Configure FortiClient endpoint control profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_registered_forticlient": {
    "prefix": "fortios_endpoint_control_registered_forticlient",
    "description": "Registered FortiClient list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_registered_forticlient:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_registered_forticlient: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_settings": {
    "prefix": "fortios_endpoint_control_settings",
    "description": "Configure endpoint control settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#endpoint_control_settings: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_export_config_playbook": {
    "prefix": "fortios_export_config_playbook",
    "description": "Collect the current configurations of the modules and convert then into playbooks.",
    "body": [
      "fortinet.fortios.fortios_export_config_playbook:",
      "\toutput_path: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#filters: ${4:}",
      "\t#formatters: ${5:}",
      "\t#params: ${6:}",
      "\t#selector: ${7:system_vdom|system_global|system_accprofile|system_vdom-link|system_switch-interface|system_object-tagging|system_interface|system_password-policy|system_password-policy-guest-admin|system_sms-server|system_custom-language|system_admin|system_api-user|system_sso-admin|system_sso-forticloud-admin|system_sso-fortigate-cloud-admin|system_settings|system_sit-tunnel|system_fsso-polling|system_ha|system_ha-monitor|system_storage|system_dedicated-mgmt|system_arp-table|system_ipv6-neighbor-cache|system_dns|system_ddns|system_sflow|system_vdom-sflow|system_netflow|system_vdom-netflow|system_vdom-dns|system_replacemsg-image|system_replacemsg-group|system.snmp_sysinfo|system.snmp_mib-view|system.snmp_community|system.snmp_user|system.autoupdate_schedule|system.autoupdate_tunneling|system_session-ttl|system.dhcp_server|system.dhcp6_server|system_alias|system_auto-script|system_management-tunnel|system_central-management|system_zone|system_sdn-proxy|system_sdn-connector|system_ipv6-tunnel|system_external-resource|system_ips-urlfilter-dns|system_ips-urlfilter-dns6|system_network-visibility|system_sdwan|system_evpn|system_gre-tunnel|system_ipsec-aggregate|system_ipip-tunnel|system_mobile-tunnel|system_pppoe-interface|system_vxlan|system_geneve|system_virtual-wire-pair|system_dns-database|system_dns-server|system_resource-limits|system_vdom-property|system_speed-test-server|system.lldp_network-policy|system_pcp-server|system_speed-test-schedule|system_speed-test-setting|system_standalone-cluster|system_fortiguard|system_ips|system_email-server|system_alarm|system_mac-address-table|system_session-helper|system_proxy-arp|system_fips-cc|system_tos-based-priority|system_dscp-based-priority|system_probe-response|system_link-monitor|system_auto-install|system_console|system_ntp|system_ptp|system_wccp|system_dns64|system_vdom-radius-server|system_ftm-push|system_geoip-override|system_fortisandbox|system_fortindr|system_affinity-interrupt|system_affinity-packet-redistribution|system_vdom-exception|system_csf|system_automation-trigger|system_automation-action|system_automation-destination|system_automation-stitch|system_nd-proxy|system_saml|system_federated-upgrade|system_device-upgrade|system_vne-tunnel|system_ike|system_acme|system_ipam|system_fabric-vpn|wireless-controller_inter-controller|wireless-controller_global|wireless-controller.hotspot20_anqp-venue-name|wireless-controller.hotspot20_anqp-venue-url|wireless-controller.hotspot20_anqp-network-auth-type|wireless-controller.hotspot20_anqp-roaming-consortium|wireless-controller.hotspot20_anqp-nai-realm|wireless-controller.hotspot20_anqp-3gpp-cellular|wireless-controller.hotspot20_anqp-ip-address-type|wireless-controller.hotspot20_h2qp-operator-name|wireless-controller.hotspot20_h2qp-wan-metric|wireless-controller.hotspot20_h2qp-conn-capability|wireless-controller.hotspot20_icon|wireless-controller.hotspot20_h2qp-osu-provider|wireless-controller.hotspot20_qos-map|wireless-controller.hotspot20_h2qp-advice-of-charge|wireless-controller.hotspot20_h2qp-osu-provider-nai|wireless-controller.hotspot20_h2qp-terms-and-conditions|wireless-controller.hotspot20_hs-profile|wireless-controller_vap|wireless-controller_timers|wireless-controller_setting|wireless-controller_log|wireless-controller_apcfg-profile|wireless-controller_bonjour-profile|wireless-controller_arrp-profile|wireless-controller_region|wireless-controller_vap-group|wireless-controller_wids-profile|wireless-controller_ble-profile|wireless-controller_syslog-profile|wireless-controller_wtp-profile|wireless-controller_wtp|wireless-controller_wtp-group|wireless-controller_qos-profile|wireless-controller_wag-profile|wireless-controller_utm-profile|wireless-controller_snmp|wireless-controller_mpsk-profile|wireless-controller_nac-profile|wireless-controller_ssid-policy|wireless-controller_access-control-list|wireless-controller_ap-status|switch-controller_traffic-policy|switch-controller_fortilink-settings|switch-controller_switch-interface-tag|switch-controller_802-1X-settings|switch-controller.security-policy_802-1X|switch-controller.security-policy_local-access|switch-controller_location|switch-controller_lldp-settings|switch-controller_lldp-profile|switch-controller.qos_dot1p-map|switch-controller.qos_ip-dscp-map|switch-controller.qos_queue-policy|switch-controller.qos_qos-policy|switch-controller_storm-control-policy|switch-controller.auto-config_policy|switch-controller.auto-config_default|switch-controller.auto-config_custom|switch-controller.initial-config_template|switch-controller.initial-config_vlans|switch-controller_switch-profile|switch-controller_custom-command|switch-controller_virtual-port-pool|switch-controller.ptp_profile|switch-controller.ptp_interface-policy|switch-controller_vlan-policy|switch-controller.acl_ingress|switch-controller.acl_group|switch-controller_dynamic-port-policy|switch-controller_managed-switch|switch-controller_switch-group|switch-controller_stp-settings|switch-controller_stp-instance|switch-controller_storm-control|switch-controller_global|switch-controller_system|switch-controller_switch-log|switch-controller_igmp-snooping|switch-controller_sflow|switch-controller_quarantine|switch-controller_network-monitor-settings|switch-controller_flow-tracking|switch-controller_snmp-sysinfo|switch-controller_snmp-trap-threshold|switch-controller_snmp-community|switch-controller_snmp-user|switch-controller_traffic-sniffer|switch-controller_remote-log|switch-controller_mac-policy|firewall_address|firewall_multicast-address|firewall_address6-template|firewall_address6|firewall_multicast-address6|firewall_addrgrp|firewall_addrgrp6|firewall.wildcard-fqdn_custom|firewall.wildcard-fqdn_group|firewall_traffic-class|firewall.service_category|firewall.service_custom|firewall.service_group|firewall_internet-service-name|firewall_internet-service-group|firewall_internet-service-extension|firewall_internet-service-custom|firewall_internet-service-addition|firewall_internet-service-append|firewall_internet-service-custom-group|firewall_internet-service-definition|firewall_network-service-dynamic|firewall.shaper_traffic-shaper|firewall.shaper_per-ip-shaper|firewall_proxy-address|firewall_proxy-addrgrp|firewall.schedule_onetime|firewall.schedule_recurring|firewall.schedule_group|firewall_ippool|firewall_ippool6|firewall_ldb-monitor|firewall_vip|firewall_vip6|firewall_vipgrp|firewall_vipgrp6|firewall.ssh_local-key|firewall.ssh_local-ca|firewall.ssh_setting|firewall.ssh_host-key|firewall_decrypted-traffic-mirror|firewall_access-proxy-virtual-host|firewall_access-proxy-ssh-client-cert|firewall_access-proxy|firewall_access-proxy6|firewall.ipmacbinding_setting|firewall.ipmacbinding_table|firewall_profile-protocol-options|firewall_ssl-ssh-profile|firewall_ssl-server|firewall_profile-group|firewall_identity-based-route|firewall_auth-portal|firewall_security-policy|firewall_policy|firewall_shaping-policy|firewall_shaping-profile|firewall_local-in-policy|firewall_local-in-policy6|firewall_ttl-policy|firewall_proxy-policy|firewall_dnstranslation|firewall_multicast-policy|firewall_multicast-policy6|firewall_interface-policy|firewall_interface-policy6|firewall_DoS-policy|firewall_DoS-policy6|firewall_sniffer|firewall_central-snat-map|firewall.ssl_setting|firewall_ip-translation|firewall_ipv6-eh-filter|firewall_global|vpn.certificate_ca|vpn.certificate_remote|vpn.certificate_local|vpn.certificate_crl|vpn.certificate_ocsp-server|vpn.certificate_setting|vpn.ssl.web_realm|vpn.ssl.web_host-check-software|vpn.ssl.web_portal|vpn.ssl.web_user-group-bookmark|vpn.ssl.web_user-bookmark|vpn.ssl_settings|vpn.ssl_client|vpn_kmip-server|vpn.ipsec_phase1|vpn.ipsec_phase2|vpn.ipsec_manualkey|vpn.ipsec_concentrator|vpn.ipsec_fec|vpn.ipsec_phase1-interface|vpn.ipsec_phase2-interface|vpn.ipsec_manualkey-interface|vpn.ipsec_forticlient|vpn_pptp|vpn_l2tp|certificate_ca|certificate_remote|certificate_local|certificate_crl|webfilter_ftgd-local-cat|webfilter_content|webfilter_content-header|webfilter_urlfilter|webfilter_ips-urlfilter-setting|webfilter_ips-urlfilter-setting6|webfilter_ips-urlfilter-cache-setting|webfilter_profile|webfilter_fortiguard|webfilter_override|webfilter_ftgd-local-rating|webfilter_search-engine|ips_sensor|ips_custom|ips_global|ips_settings|sctp-filter_profile|web-proxy_profile|web-proxy_global|web-proxy_explicit|web-proxy_forward-server|web-proxy_forward-server-group|web-proxy_debug-url|web-proxy_wisp|web-proxy_fast-fallback|web-proxy_url-match|wanopt_webcache|wanopt_settings|wanopt_peer|wanopt_auth-group|wanopt_profile|wanopt_content-delivery-network-rule|wanopt_cache-service|wanopt_remote-storage|ftp-proxy_explicit|application_custom|application_list|application_group|dlp_data-type|dlp_dictionary|dlp_sensor|dlp_filepattern|dlp_sensitivity|dlp_fp-doc-source|dlp_profile|dlp_settings|videofilter_youtube-key|videofilter_youtube-channel-filter|videofilter_profile|emailfilter_bword|emailfilter_block-allow-list|emailfilter_mheader|emailfilter_dnsbl|emailfilter_iptrust|emailfilter_profile|emailfilter_fortishield|emailfilter_options|log_threat-weight|log_custom-field|log.syslogd_setting|log.syslogd_override-setting|log.syslogd_filter|log.syslogd_override-filter|log.syslogd2_setting|log.syslogd2_override-setting|log.syslogd2_filter|log.syslogd2_override-filter|log.syslogd3_setting|log.syslogd3_override-setting|log.syslogd3_filter|log.syslogd3_override-filter|log.syslogd4_setting|log.syslogd4_override-setting|log.syslogd4_filter|log.syslogd4_override-filter|log.webtrends_setting|log.webtrends_filter|log.memory_global-setting|log.memory_setting|log.memory_filter|log.disk_setting|log.disk_filter|log_eventfilter|log.fortiguard_setting|log.fortiguard_override-setting|log.fortiguard_filter|log.fortiguard_override-filter|log.tacacs+accounting_setting|log.tacacs+accounting_filter|log.tacacs+accounting2_setting|log.tacacs+accounting2_filter|log.tacacs+accounting3_setting|log.tacacs+accounting3_filter|log.null-device_setting|log.null-device_filter|log_setting|log_gui-display|log.fortianalyzer_setting|log.fortianalyzer_override-setting|log.fortianalyzer_filter|log.fortianalyzer_override-filter|log.fortianalyzer2_setting|log.fortianalyzer2_override-setting|log.fortianalyzer2_filter|log.fortianalyzer2_override-filter|log.fortianalyzer3_setting|log.fortianalyzer3_override-setting|log.fortianalyzer3_filter|log.fortianalyzer3_override-filter|log.fortianalyzer-cloud_setting|log.fortianalyzer-cloud_override-setting|log.fortianalyzer-cloud_filter|log.fortianalyzer-cloud_override-filter|icap_server|icap_server-group|icap_profile|user_certificate|user_radius|user_tacacs+|user_exchange|user_ldap|user_krb-keytab|user_domain-controller|user_pop3|user_saml|user_fsso|user_adgrp|user_fsso-polling|user_fortitoken|user_password-policy|user_local|user_setting|user_peer|user_peergrp|user_quarantine|user_group|user_security-exempt-list|user_nac-policy|voip_profile|dnsfilter_domain-filter|dnsfilter_profile|nsxt_setting|nsxt_service-chain|antivirus_settings|antivirus_quarantine|antivirus_exempt-list|antivirus_profile|ssh-filter_profile|file-filter_profile|virtual-patch_profile|report_layout|report_setting|waf_main-class|waf_sub-class|waf_signature|waf_profile|casb_saas-application|casb_user-activity|casb_profile|authentication_scheme|authentication_rule|authentication_setting|extension-controller_dataplan|extension-controller_extender-profile|extension-controller_extender|extension-controller_fortigate-profile|extension-controller_fortigate|endpoint-control_fctems|endpoint-control_settings|endpoint-control_fctems-override|alertemail_setting|router_access-list|router_access-list6|router_aspath-list|router_prefix-list|router_prefix-list6|router_key-chain|router_community-list|router_extcommunity-list|router_route-map|router_rip|router_ripng|router_static|router_policy|router_policy6|router_static6|router_ospf|router_ospf6|router_bgp|router_isis|router_multicast-flow|router_multicast|router_multicast6|router_auth-path|router_setting|router_bfd|router_bfd6|automation_setting|dpdk_global|dpdk_cpus|system_isf-queue-profile|system_npu|system_np6|system_modem|system.3g-modem_custom|system_lte-modem|firewall_acl|firewall_acl6|monitoring_np6-ipsec-engine|monitoring_npu-hpe|switch-controller.ptp_settings|switch-controller.ptp_policy|system_physical-switch|system_virtual-switch|system_stp|system_gi-gk|firewall_gtp|firewall_pfcp|vpn_ocvpn|gtp_apn|gtp_apngrp|gtp_message-filter-v0v1|gtp_message-filter-v2|gtp_rat-timeout-profile|gtp_ie-allow-list|gtp_tunnel-limit|gtp_apn-shaper|pfcp_message-filter|system.replacemsg_mail|system.replacemsg_http|system.replacemsg_webproxy|system.replacemsg_ftp|system.replacemsg_fortiguard-wf|system.replacemsg_spam|system.replacemsg_alertmail|system.replacemsg_admin|system.replacemsg_auth|system.replacemsg_sslvpn|system.replacemsg_nac-quar|system.replacemsg_traffic-quota|system.replacemsg_utm|system.replacemsg_icap|system.replacemsg_automation|system_status|system.performance_status|system.performance_top|system.performance.firewall_packet-distribution|system.performance.firewall_statistics|system_session|system_session6|system_cmdb|system_fortiguard-service|system_fortianalyzer-connectivity|system.checksum_status|system_mgmt-csum|system_ha-nonsync-csum|system_fortiguard-log-service|system_central-mgmt|system.info.admin_status|system.info.admin_ssh|system_geoip-country|system_cluster-sync|system_arp|system_startup-error-log|system.source-ip_status|system.auto-update_status|system.auto-update_versions|system.session-info_list|system.session-info_expectation|system.session-info_full-stat|system.session-info_statistics|system.session-info_ttl|system.session-helper-info_list|system.ip-conflict_status|wireless-controller_scan|wireless-controller_wlchanlistlic|wireless-controller_status|wireless-controller_wtp-status|wireless-controller_client-info|wireless-controller_vap-status|wireless-controller_rf-analysis|wireless-controller_spectral-info|ipsec_tunnel|firewall_city|firewall_region|firewall_country|firewall_internet-service|firewall_internet-service-reputation|firewall_internet-service-sld|firewall_internet-service-ipbl-vendor|firewall_internet-service-ipbl-reason|firewall_internet-service-owner|firewall_internet-service-list|firewall_internet-service-botnet|firewall_vendor-mac|firewall_vendor-mac-summary|firewall.shaper_traffic|firewall.shaper_per-ip|firewall.iprope_list|firewall.iprope.appctrl_list|firewall.iprope.appctrl_status|firewall_proute|firewall_proute6|vpn.ssl_monitor|vpn.ipsec.stats_crypto|vpn.ipsec.stats_tunnel|vpn.ipsec.tunnel_details|vpn.ipsec.tunnel_summary|vpn.ipsec.tunnel_name|vpn.ike_gateway|vpn.status_l2tp|vpn.status_pptp|vpn.status.ssl_list|vpn.status.ssl_hw-acceleration-status|webfilter_categories|webfilter_ftgd-statistics|webfilter_status|webfilter_override-usr|ips_view-map|ips_decoder|ips_rule|ips_rule-settings|ips_session|application_name|application_rule-settings|report.sql_status|extender-controller_dataplan|extender-controller_extender-profile|extender-controller_extender|router_info|router_info6|hardware_status|hardware_cpu|hardware_memory|hardware_nic|hardware.npu.np6_port-list|hardware.npu.np6_dce|hardware.npu.np6_session-stats|hardware.npu.np6_sse-stats|hardware.npu.np6_ipsec-stats|hardware.npu.np6_synproxy-stats|mgmt-data_status|extender_sys-info|extender_extender-info|extender_session-info|extender_datachannel-info|extender_fexwan|extender_modem-status|extender_lte-carrier-list|extender_lte-carrier-by-mcc-mnc|wireless-controller_address|wireless-controller_addrgrp|system_fortiai|system_fortimanager|system_fm|system_nat64|firewall_vip46|firewall_vip64|firewall_vipgrp46|firewall_vipgrp64|firewall_policy64|firewall_policy46|system.autoupdate_push-update|switch-controller_nac-settings|switch-controller_port-policy|switch-controller_nac-device|emailfilter_bwl|antivirus_heuristic|credential-store_domain-controller|report_dataset|report_chart|report_style|report_theme|gtp_ie-white-list|system.replacemsg_nntp|system.replacemsg_device-detection-portal|switch-controller_poe|cifs_domain-controller|cifs_profile|system.replacemsg_mms|system.replacemsg_mm1|system.replacemsg_mm3|system.replacemsg_mm4|system.replacemsg_mm7|system_virtual-wan-link|system_mem-mgr|firewall_carrier-endpoint-bwl|firewall_mms-profile|firewall.consolidated_policy|firewall_policy6|antivirus_notification|antivirus_mms-checksum|system_smc-ntp|switch-controller_vlan|switch-controller.security-policy_captive-portal|user_device|user_device-group|endpoint-control_client|system.replacemsg_ec|dlp_fp-sensitivity|spamfilter_bword|spamfilter_bwl|spamfilter_mheader|spamfilter_dnsbl|spamfilter_iptrust|spamfilter_profile|spamfilter_fortishield|spamfilter_options|user_device-category|user_device-access-list|switch-controller_mac-sync-settings|endpoint-control_forticlient-ems|endpoint-control_profile|endpoint-control_forticlient-registration-sync|endpoint-control_registered-forticlient}",
      "\t#selectors: ${8:}",
      "\t#sorters: ${9:}",
      "\t#vdom: ${10:root}"
    ]
  },
  "fortios_extender_controller_dataplan": {
    "prefix": "fortios_extender_controller_dataplan",
    "description": "FortiExtender dataplan configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_controller_dataplan:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extender_controller_dataplan: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extender_controller_extender": {
    "prefix": "fortios_extender_controller_extender",
    "description": "Extender controller configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_controller_extender:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extender_controller_extender: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extender_controller_extender_profile": {
    "prefix": "fortios_extender_controller_extender_profile",
    "description": "FortiExtender extender profile configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_controller_extender_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extender_controller_extender_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extender_extender_info": {
    "prefix": "fortios_extender_extender_info",
    "description": "Display FortiExtender struct information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_extender_info:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_extender_info: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extender_lte_carrier_by_mcc_mnc": {
    "prefix": "fortios_extender_lte_carrier_by_mcc_mnc",
    "description": "Display FortiExtender modem carrier based on MCC and MNC in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_lte_carrier_by_mcc_mnc:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_lte_carrier_by_mcc_mnc: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extender_lte_carrier_list": {
    "prefix": "fortios_extender_lte_carrier_list",
    "description": "Display FortiExtender modem carrier list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_lte_carrier_list:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_lte_carrier_list: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extender_modem_status": {
    "prefix": "fortios_extender_modem_status",
    "description": "Display detailed FortiExtender modem status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_modem_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_modem_status: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extender_sys_info": {
    "prefix": "fortios_extender_sys_info",
    "description": "Display detailed FortiExtender system information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_sys_info:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_sys_info: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extension_controller_dataplan": {
    "prefix": "fortios_extension_controller_dataplan",
    "description": "FortiExtender dataplan configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_dataplan:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_dataplan: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extension_controller_extender": {
    "prefix": "fortios_extension_controller_extender",
    "description": "Extender controller configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_extender:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_extender: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extension_controller_extender_profile": {
    "prefix": "fortios_extension_controller_extender_profile",
    "description": "FortiExtender extender profile configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_extender_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_extender_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extension_controller_fortigate": {
    "prefix": "fortios_extension_controller_fortigate",
    "description": "FortiGate controller configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_fortigate:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_fortigate: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extension_controller_fortigate_profile": {
    "prefix": "fortios_extension_controller_fortigate_profile",
    "description": "FortiGate connector profile configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_fortigate_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_fortigate_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_file_filter_profile": {
    "prefix": "fortios_file_filter_profile",
    "description": "Configure file-filter profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_file_filter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#file_filter_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_access_proxy": {
    "prefix": "fortios_firewall_access_proxy",
    "description": "Configure IPv4 access proxy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_access_proxy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_access_proxy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_access_proxy6": {
    "prefix": "fortios_firewall_access_proxy6",
    "description": "Configure IPv6 access proxy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_access_proxy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_access_proxy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_access_proxy_ssh_client_cert": {
    "prefix": "fortios_firewall_access_proxy_ssh_client_cert",
    "description": "Configure Access Proxy SSH client certificate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_access_proxy_ssh_client_cert:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_access_proxy_ssh_client_cert: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_access_proxy_virtual_host": {
    "prefix": "fortios_firewall_access_proxy_virtual_host",
    "description": "Configure Access Proxy virtual hosts in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_access_proxy_virtual_host:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_access_proxy_virtual_host: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_acl": {
    "prefix": "fortios_firewall_acl",
    "description": "Configure IPv4 access control list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_acl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_acl: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_acl6": {
    "prefix": "fortios_firewall_acl6",
    "description": "Configure IPv6 access control list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_acl6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_acl6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_address": {
    "prefix": "fortios_firewall_address",
    "description": "Configure IPv4 addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_address:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_address: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_address6": {
    "prefix": "fortios_firewall_address6",
    "description": "Configure IPv6 firewall addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_address6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_address6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_address6_template": {
    "prefix": "fortios_firewall_address6_template",
    "description": "Configure IPv6 address templates in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_address6_template:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_address6_template: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_addrgrp": {
    "prefix": "fortios_firewall_addrgrp",
    "description": "Configure IPv4 address groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_addrgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_addrgrp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_addrgrp6": {
    "prefix": "fortios_firewall_addrgrp6",
    "description": "Configure IPv6 address groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_addrgrp6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_addrgrp6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_auth_portal": {
    "prefix": "fortios_firewall_auth_portal",
    "description": "Configure firewall authentication portals in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_auth_portal:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_auth_portal: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_carrier_endpoint_bwl": {
    "prefix": "fortios_firewall_carrier_endpoint_bwl",
    "description": "Carrier end point black/white list tables in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_carrier_endpoint_bwl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_carrier_endpoint_bwl: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_central_snat_map": {
    "prefix": "fortios_firewall_central_snat_map",
    "description": "Configure IPv4 and IPv6 central SNAT policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_central_snat_map:",
      "\t#access_token: ${1:}",
      "\t#action: ${2:move}",
      "\t#after: ${3:}",
      "\t#before: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_central_snat_map: ${6:}",
      "\t#member_path: ${7:}",
      "\t#member_state: ${8:present|absent}",
      "\t#self: ${9:}",
      "\t#state: ${10:present|absent}",
      "\t#vdom: ${11:root}"
    ]
  },
  "fortios_firewall_city": {
    "prefix": "fortios_firewall_city",
    "description": "Define city table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_city:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_city: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_consolidated_policy": {
    "prefix": "fortios_firewall_consolidated_policy",
    "description": "Configure consolidated IPv4/IPv6 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_consolidated_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_consolidated_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_country": {
    "prefix": "fortios_firewall_country",
    "description": "Define country table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_country:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_country: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_decrypted_traffic_mirror": {
    "prefix": "fortios_firewall_decrypted_traffic_mirror",
    "description": "Configure decrypted traffic mirror in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_decrypted_traffic_mirror:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_decrypted_traffic_mirror: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_dnstranslation": {
    "prefix": "fortios_firewall_dnstranslation",
    "description": "Configure DNS translation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_dnstranslation:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_dnstranslation: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_dos_policy": {
    "prefix": "fortios_firewall_dos_policy",
    "description": "Configure IPv4 DoS policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_dos_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_dos_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_dos_policy6": {
    "prefix": "fortios_firewall_dos_policy6",
    "description": "Configure IPv6 DoS policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_dos_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_dos_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_global": {
    "prefix": "fortios_firewall_global",
    "description": "Global firewall settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_global: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_gtp": {
    "prefix": "fortios_firewall_gtp",
    "description": "Configure GTP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_gtp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_gtp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_identity_based_route": {
    "prefix": "fortios_firewall_identity_based_route",
    "description": "Configure identity based routing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_identity_based_route:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_identity_based_route: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_interface_policy": {
    "prefix": "fortios_firewall_interface_policy",
    "description": "Configure IPv4 interface policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_interface_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_interface_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_interface_policy6": {
    "prefix": "fortios_firewall_interface_policy6",
    "description": "Configure IPv6 interface policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_interface_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_interface_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service": {
    "prefix": "fortios_firewall_internet_service",
    "description": "Show Internet Service application in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_addition": {
    "prefix": "fortios_firewall_internet_service_addition",
    "description": "Configure Internet Services Addition in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_addition:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_addition: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_append": {
    "prefix": "fortios_firewall_internet_service_append",
    "description": "Configure additional port mappings for Internet Services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_append:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_internet_service_append: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_internet_service_botnet": {
    "prefix": "fortios_firewall_internet_service_botnet",
    "description": "Show Internet Service botnet in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_botnet:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_botnet: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_custom": {
    "prefix": "fortios_firewall_internet_service_custom",
    "description": "Configure custom Internet Services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_custom: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_custom_group": {
    "prefix": "fortios_firewall_internet_service_custom_group",
    "description": "Configure custom Internet Service group in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_custom_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_custom_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_definition": {
    "prefix": "fortios_firewall_internet_service_definition",
    "description": "Configure Internet Service definition in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_definition:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_definition: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_extension": {
    "prefix": "fortios_firewall_internet_service_extension",
    "description": "Configure Internet Services Extension in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_extension:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_extension: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_group": {
    "prefix": "fortios_firewall_internet_service_group",
    "description": "Configure group of Internet Service in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_ipbl_reason": {
    "prefix": "fortios_firewall_internet_service_ipbl_reason",
    "description": "IP block list reason in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_ipbl_reason:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_ipbl_reason: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_ipbl_vendor": {
    "prefix": "fortios_firewall_internet_service_ipbl_vendor",
    "description": "IP block list vendor in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_ipbl_vendor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_ipbl_vendor: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_list": {
    "prefix": "fortios_firewall_internet_service_list",
    "description": "Internet Service list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_list: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_name": {
    "prefix": "fortios_firewall_internet_service_name",
    "description": "Define internet service names in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_name:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_name: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_owner": {
    "prefix": "fortios_firewall_internet_service_owner",
    "description": "Internet Service owner in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_owner:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_owner: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_reputation": {
    "prefix": "fortios_firewall_internet_service_reputation",
    "description": "Show Internet Service reputation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_reputation:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_reputation: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_sld": {
    "prefix": "fortios_firewall_internet_service_sld",
    "description": "Internet Service Second Level Domain in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_sld:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_sld: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ip_translation": {
    "prefix": "fortios_firewall_ip_translation",
    "description": "Configure firewall IP-translation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ip_translation:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ip_translation: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ipmacbinding_setting": {
    "prefix": "fortios_firewall_ipmacbinding_setting",
    "description": "Configure IP to MAC binding settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ipmacbinding_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_ipmacbinding_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ipmacbinding_table": {
    "prefix": "fortios_firewall_ipmacbinding_table",
    "description": "Configure IP to MAC address pairs in the IP/MAC binding table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ipmacbinding_table:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ipmacbinding_table: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ippool": {
    "prefix": "fortios_firewall_ippool",
    "description": "Configure IPv4 IP pools in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ippool:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ippool: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ippool6": {
    "prefix": "fortios_firewall_ippool6",
    "description": "Configure IPv6 IP pools in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ippool6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ippool6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_iprope_list": {
    "prefix": "fortios_firewall_iprope_list",
    "description": "List in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_iprope_list:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_iprope_list: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ipv6_eh_filter": {
    "prefix": "fortios_firewall_ipv6_eh_filter",
    "description": "Configure IPv6 extension header filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ipv6_eh_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_ipv6_eh_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ldb_monitor": {
    "prefix": "fortios_firewall_ldb_monitor",
    "description": "Configure server load balancing health monitors in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ldb_monitor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ldb_monitor: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_local_in_policy": {
    "prefix": "fortios_firewall_local_in_policy",
    "description": "Configure user defined IPv4 local-in policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_local_in_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_local_in_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_local_in_policy6": {
    "prefix": "fortios_firewall_local_in_policy6",
    "description": "Configure user defined IPv6 local-in policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_local_in_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_local_in_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_mms_profile": {
    "prefix": "fortios_firewall_mms_profile",
    "description": "Configure MMS profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_mms_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_mms_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_multicast_address": {
    "prefix": "fortios_firewall_multicast_address",
    "description": "Configure multicast addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_multicast_address:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_multicast_address: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_multicast_address6": {
    "prefix": "fortios_firewall_multicast_address6",
    "description": "Configure IPv6 multicast address in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_multicast_address6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_multicast_address6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_multicast_policy": {
    "prefix": "fortios_firewall_multicast_policy",
    "description": "Configure multicast NAT policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_multicast_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_multicast_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_multicast_policy6": {
    "prefix": "fortios_firewall_multicast_policy6",
    "description": "Configure IPv6 multicast NAT policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_multicast_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_multicast_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_network_service_dynamic": {
    "prefix": "fortios_firewall_network_service_dynamic",
    "description": "Configure Dynamic Network Services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_network_service_dynamic:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_network_service_dynamic: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_pfcp": {
    "prefix": "fortios_firewall_pfcp",
    "description": "Configure PFCP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_pfcp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_pfcp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_policy": {
    "prefix": "fortios_firewall_policy",
    "description": "Configure IPv4/IPv6 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_policy:",
      "\t#access_token: ${1:}",
      "\t#action: ${2:move}",
      "\t#after: ${3:}",
      "\t#before: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_policy: ${6:}",
      "\t#member_path: ${7:}",
      "\t#member_state: ${8:present|absent}",
      "\t#self: ${9:}",
      "\t#state: ${10:present|absent}",
      "\t#vdom: ${11:root}"
    ]
  },
  "fortios_firewall_policy46": {
    "prefix": "fortios_firewall_policy46",
    "description": "Configure IPv4 to IPv6 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_policy46:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_policy46: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_policy6": {
    "prefix": "fortios_firewall_policy6",
    "description": "Configure IPv6 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_policy64": {
    "prefix": "fortios_firewall_policy64",
    "description": "Configure IPv6 to IPv4 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_policy64:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_policy64: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_profile_group": {
    "prefix": "fortios_firewall_profile_group",
    "description": "Configure profile groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_profile_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_profile_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_profile_protocol_options": {
    "prefix": "fortios_firewall_profile_protocol_options",
    "description": "Configure protocol options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_profile_protocol_options:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_profile_protocol_options: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_proute": {
    "prefix": "fortios_firewall_proute",
    "description": "List policy routing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_proute:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_proute: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_proxy_address": {
    "prefix": "fortios_firewall_proxy_address",
    "description": "Configure web proxy address in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_proxy_address:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_proxy_address: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_proxy_addrgrp": {
    "prefix": "fortios_firewall_proxy_addrgrp",
    "description": "Configure web proxy address group in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_proxy_addrgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_proxy_addrgrp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_proxy_policy": {
    "prefix": "fortios_firewall_proxy_policy",
    "description": "Configure proxy policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_proxy_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_proxy_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_region": {
    "prefix": "fortios_firewall_region",
    "description": "Define region table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_region:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_region: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_schedule_group": {
    "prefix": "fortios_firewall_schedule_group",
    "description": "Schedule group configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_schedule_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_schedule_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_schedule_onetime": {
    "prefix": "fortios_firewall_schedule_onetime",
    "description": "Onetime schedule configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_schedule_onetime:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_schedule_onetime: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_schedule_recurring": {
    "prefix": "fortios_firewall_schedule_recurring",
    "description": "Recurring schedule configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_schedule_recurring:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_schedule_recurring: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_security_policy": {
    "prefix": "fortios_firewall_security_policy",
    "description": "Configure NGFW IPv4/IPv6 application policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_security_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_security_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_service_category": {
    "prefix": "fortios_firewall_service_category",
    "description": "Configure service categories in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_service_category:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_service_category: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_service_custom": {
    "prefix": "fortios_firewall_service_custom",
    "description": "Configure custom services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_service_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_service_custom: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_service_group": {
    "prefix": "fortios_firewall_service_group",
    "description": "Configure service groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_service_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_service_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_shaper_per_ip_shaper": {
    "prefix": "fortios_firewall_shaper_per_ip_shaper",
    "description": "Configure per-IP traffic shaper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_shaper_per_ip_shaper:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_shaper_per_ip_shaper: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_shaper_traffic_shaper": {
    "prefix": "fortios_firewall_shaper_traffic_shaper",
    "description": "Configure shared traffic shaper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_shaper_traffic_shaper:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_shaper_traffic_shaper: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_shaping_policy": {
    "prefix": "fortios_firewall_shaping_policy",
    "description": "Configure shaping policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_shaping_policy:",
      "\t#access_token: ${1:}",
      "\t#action: ${2:move}",
      "\t#after: ${3:}",
      "\t#before: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_shaping_policy: ${6:}",
      "\t#member_path: ${7:}",
      "\t#member_state: ${8:present|absent}",
      "\t#self: ${9:}",
      "\t#state: ${10:present|absent}",
      "\t#vdom: ${11:root}"
    ]
  },
  "fortios_firewall_shaping_profile": {
    "prefix": "fortios_firewall_shaping_profile",
    "description": "Configure shaping profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_shaping_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_shaping_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_sniffer": {
    "prefix": "fortios_firewall_sniffer",
    "description": "Configure sniffer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_sniffer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_sniffer: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssh_host_key": {
    "prefix": "fortios_firewall_ssh_host_key",
    "description": "SSH proxy host public keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssh_host_key:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssh_host_key: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssh_local_ca": {
    "prefix": "fortios_firewall_ssh_local_ca",
    "description": "SSH proxy local CA in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssh_local_ca:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssh_local_ca: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssh_local_key": {
    "prefix": "fortios_firewall_ssh_local_key",
    "description": "SSH proxy local keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssh_local_key:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssh_local_key: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssh_setting": {
    "prefix": "fortios_firewall_ssh_setting",
    "description": "SSH proxy settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssh_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_ssh_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ssl_server": {
    "prefix": "fortios_firewall_ssl_server",
    "description": "Configure SSL servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssl_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssl_server: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssl_setting": {
    "prefix": "fortios_firewall_ssl_setting",
    "description": "SSL proxy settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssl_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_ssl_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ssl_ssh_profile": {
    "prefix": "fortios_firewall_ssl_ssh_profile",
    "description": "Configure SSL/SSH protocol options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssl_ssh_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssl_ssh_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_traffic_class": {
    "prefix": "fortios_firewall_traffic_class",
    "description": "Configure names for shaping classes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_traffic_class:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_traffic_class: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ttl_policy": {
    "prefix": "fortios_firewall_ttl_policy",
    "description": "Configure TTL policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ttl_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ttl_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vendor_mac": {
    "prefix": "fortios_firewall_vendor_mac",
    "description": "Show vendor and the MAC address they have in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vendor_mac:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vendor_mac: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vip": {
    "prefix": "fortios_firewall_vip",
    "description": "Configure virtual IP for IPv4 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vip:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vip: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vip46": {
    "prefix": "fortios_firewall_vip46",
    "description": "Configure IPv4 to IPv6 virtual IPs in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vip46:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vip46: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vip6": {
    "prefix": "fortios_firewall_vip6",
    "description": "Configure virtual IP for IPv6 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vip6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vip6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vip64": {
    "prefix": "fortios_firewall_vip64",
    "description": "Configure IPv6 to IPv4 virtual IPs in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vip64:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vip64: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vipgrp": {
    "prefix": "fortios_firewall_vipgrp",
    "description": "Configure IPv4 virtual IP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vipgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vipgrp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vipgrp46": {
    "prefix": "fortios_firewall_vipgrp46",
    "description": "Configure IPv4 to IPv6 virtual IP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vipgrp46:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vipgrp46: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vipgrp6": {
    "prefix": "fortios_firewall_vipgrp6",
    "description": "Configure IPv6 virtual IP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vipgrp6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vipgrp6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vipgrp64": {
    "prefix": "fortios_firewall_vipgrp64",
    "description": "Configure IPv6 to IPv4 virtual IP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vipgrp64:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vipgrp64: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_wildcard_fqdn_custom": {
    "prefix": "fortios_firewall_wildcard_fqdn_custom",
    "description": "Config global/VDOM Wildcard FQDN address in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_wildcard_fqdn_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_wildcard_fqdn_custom: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_wildcard_fqdn_group": {
    "prefix": "fortios_firewall_wildcard_fqdn_group",
    "description": "Config global Wildcard FQDN address groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_wildcard_fqdn_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_wildcard_fqdn_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ftp_proxy_explicit": {
    "prefix": "fortios_ftp_proxy_explicit",
    "description": "Configure explicit FTP proxy settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ftp_proxy_explicit:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#ftp_proxy_explicit: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_gtp_apn": {
    "prefix": "fortios_gtp_apn",
    "description": "Configure APN for GTP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_apn:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_apn: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_apn_shaper": {
    "prefix": "fortios_gtp_apn_shaper",
    "description": "Global per-APN shaper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_apn_shaper:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_apn_shaper: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_apngrp": {
    "prefix": "fortios_gtp_apngrp",
    "description": "Configure APN groups for GTP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_apngrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_apngrp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_ie_allow_list": {
    "prefix": "fortios_gtp_ie_allow_list",
    "description": "IE allow list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_ie_allow_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_ie_allow_list: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_ie_white_list": {
    "prefix": "fortios_gtp_ie_white_list",
    "description": "IE white list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_ie_white_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_ie_white_list: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_message_filter_v0v1": {
    "prefix": "fortios_gtp_message_filter_v0v1",
    "description": "Message filter for GTPv0/v1 messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_message_filter_v0v1:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_message_filter_v0v1: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_message_filter_v2": {
    "prefix": "fortios_gtp_message_filter_v2",
    "description": "Message filter for GTPv2 messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_message_filter_v2:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_message_filter_v2: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_rat_timeout_profile": {
    "prefix": "fortios_gtp_rat_timeout_profile",
    "description": "RAT timeout profil in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_rat_timeout_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_rat_timeout_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_tunnel_limit": {
    "prefix": "fortios_gtp_tunnel_limit",
    "description": "GTP tunnel limiter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_tunnel_limit:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_tunnel_limit: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_hardware_nic": {
    "prefix": "fortios_hardware_nic",
    "description": "Display NIC information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_hardware_nic:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#hardware_nic: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_hardware_npu_np6_dce": {
    "prefix": "fortios_hardware_npu_np6_dce",
    "description": "Show NP6 non-zero subengine drop counters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_hardware_npu_np6_dce:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#hardware_npu_np6_dce: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_hardware_npu_np6_session_stats": {
    "prefix": "fortios_hardware_npu_np6_session_stats",
    "description": "Show NP6 session offloading statistics counters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_hardware_npu_np6_session_stats:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#hardware_npu_np6_session_stats: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_hardware_npu_np6_sse_stats": {
    "prefix": "fortios_hardware_npu_np6_sse_stats",
    "description": "Show NP6 hardware session statistics counters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_hardware_npu_np6_sse_stats:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#hardware_npu_np6_sse_stats: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_icap_profile": {
    "prefix": "fortios_icap_profile",
    "description": "Configure ICAP profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_icap_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#icap_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_icap_server": {
    "prefix": "fortios_icap_server",
    "description": "Configure ICAP servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_icap_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#icap_server: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_icap_server_group": {
    "prefix": "fortios_icap_server_group",
    "description": "Configure an ICAP server group consisting of multiple forward servers. Supports failover and load balancing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_icap_server_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#icap_server_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_custom": {
    "prefix": "fortios_ips_custom",
    "description": "Configure IPS custom signature in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_custom: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_decoder": {
    "prefix": "fortios_ips_decoder",
    "description": "Configure IPS decoder in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_decoder:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_decoder: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_global": {
    "prefix": "fortios_ips_global",
    "description": "Configure IPS global parameter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#ips_global: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_ips_rule": {
    "prefix": "fortios_ips_rule",
    "description": "Configure IPS rules in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_rule:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_rule: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_rule_settings": {
    "prefix": "fortios_ips_rule_settings",
    "description": "Configure IPS rule setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_rule_settings:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_rule_settings: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_sensor": {
    "prefix": "fortios_ips_sensor",
    "description": "Configure IPS sensor in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_sensor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_sensor: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_settings": {
    "prefix": "fortios_ips_settings",
    "description": "Configure IPS VDOM parameter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#ips_settings: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_ips_view_map": {
    "prefix": "fortios_ips_view_map",
    "description": "Configure IPS view-map in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_view_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_view_map: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_json_generic": {
    "prefix": "fortios_json_generic",
    "description": "Config Fortinet's FortiOS and FortiGate with json generic method.",
    "body": [
      "fortinet.fortios.fortios_json_generic:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#json_generic: ${3:}",
      "\t#vdom: ${4:root}"
    ]
  },
  "fortios_log_custom_field": {
    "prefix": "fortios_log_custom_field",
    "description": "Configure custom log fields in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_custom_field:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#log_custom_field: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_log_disk_filter": {
    "prefix": "fortios_log_disk_filter",
    "description": "Configure filters for local disk logging. Use these filters to determine the log messages to record according to severity and type in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_disk_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_disk_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_disk_setting": {
    "prefix": "fortios_log_disk_setting",
    "description": "Settings for local disk logging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_disk_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_disk_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_eventfilter": {
    "prefix": "fortios_log_eventfilter",
    "description": "Configure log event filters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_eventfilter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_eventfilter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fact": {
    "prefix": "fortios_log_fact",
    "description": "Retrieve log data of fortios log objects.",
    "body": [
      "fortinet.fortios.fortios_log_fact:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#filters: ${3:}",
      "\t#formatters: ${4:}",
      "\t#params: ${5:}",
      "\t#selector: ${6:disk_virus_archive|memory_virus_archive|fortianalyzer_virus_archive|forticloud_virus_archive|disk_ips_archive|disk_app-ctrl_archive|memory_ips_archive|memory_app-ctrl_archive|fortianalyzer_ips_archive|fortianalyzer_app-ctrl_archive|forticloud_ips_archive|forticloud_app-ctrl_archive|disk_ips_archive-download|disk_app-ctrl_archive-download|memory_ips_archive-download|memory_app-ctrl_archive-download|fortianalyzer_ips_archive-download|fortianalyzer_app-ctrl_archive-download|forticloud_ips_archive-download|forticloud_app-ctrl_archive-download|disk_virus_raw|disk_webfilter_raw|disk_waf_raw|disk_ips_raw|disk_anomaly_raw|disk_app-ctrl_raw|disk_cifs_raw|disk_emailfilter_raw|disk_dlp_raw|disk_voip_raw|disk_gtp_raw|disk_dns_raw|disk_ssh_raw|disk_ssl_raw|disk_file-filter_raw|memory_virus_raw|memory_webfilter_raw|memory_waf_raw|memory_ips_raw|memory_anomaly_raw|memory_app-ctrl_raw|memory_cifs_raw|memory_emailfilter_raw|memory_dlp_raw|memory_voip_raw|memory_gtp_raw|memory_dns_raw|memory_ssh_raw|memory_ssl_raw|memory_file-filter_raw|fortianalyzer_virus_raw|fortianalyzer_webfilter_raw|fortianalyzer_waf_raw|fortianalyzer_ips_raw|fortianalyzer_anomaly_raw|fortianalyzer_app-ctrl_raw|fortianalyzer_cifs_raw|fortianalyzer_emailfilter_raw|fortianalyzer_dlp_raw|fortianalyzer_voip_raw|fortianalyzer_gtp_raw|fortianalyzer_dns_raw|fortianalyzer_ssh_raw|fortianalyzer_ssl_raw|fortianalyzer_file-filter_raw|forticloud_virus_raw|forticloud_webfilter_raw|forticloud_waf_raw|forticloud_ips_raw|forticloud_anomaly_raw|forticloud_app-ctrl_raw|forticloud_cifs_raw|forticloud_emailfilter_raw|forticloud_dlp_raw|forticloud_voip_raw|forticloud_gtp_raw|forticloud_dns_raw|forticloud_ssh_raw|forticloud_ssl_raw|forticloud_file-filter_raw|disk_event_vpn|disk_event_user|disk_event_router|disk_event_wireless|disk_event_wad|disk_event_endpoint|disk_event_ha|disk_event_compliance-check|disk_event_system|disk_event_connector|disk_event_security-rating|disk_event_fortiextender|disk_traffic_forward|disk_traffic_local|disk_traffic_multicast|disk_traffic_sniffer|disk_traffic_fortiview|disk_traffic_threat|memory_event_vpn|memory_event_user|memory_event_router|memory_event_wireless|memory_event_wad|memory_event_endpoint|memory_event_ha|memory_event_compliance-check|memory_event_system|memory_event_connector|memory_event_security-rating|memory_event_fortiextender|memory_traffic_forward|memory_traffic_local|memory_traffic_multicast|memory_traffic_sniffer|memory_traffic_fortiview|memory_traffic_threat|fortianalyzer_event_vpn|fortianalyzer_event_user|fortianalyzer_event_router|fortianalyzer_event_wireless|fortianalyzer_event_wad|fortianalyzer_event_endpoint|fortianalyzer_event_ha|fortianalyzer_event_compliance-check|fortianalyzer_event_system|fortianalyzer_event_connector|fortianalyzer_event_security-rating|fortianalyzer_event_fortiextender|fortianalyzer_traffic_forward|fortianalyzer_traffic_local|fortianalyzer_traffic_multicast|fortianalyzer_traffic_sniffer|fortianalyzer_traffic_fortiview|fortianalyzer_traffic_threat|forticloud_event_vpn|forticloud_event_user|forticloud_event_router|forticloud_event_wireless|forticloud_event_wad|forticloud_event_endpoint|forticloud_event_ha|forticloud_event_compliance-check|forticloud_event_system|forticloud_event_connector|forticloud_event_security-rating|forticloud_event_fortiextender|forticloud_traffic_forward|forticloud_traffic_local|forticloud_traffic_multicast|forticloud_traffic_sniffer|forticloud_traffic_fortiview|forticloud_traffic_threat}",
      "\t#selectors: ${7:}",
      "\t#sorters: ${8:}",
      "\t#vdom: ${9:root}"
    ]
  },
  "fortios_log_fortianalyzer2_filter": {
    "prefix": "fortios_log_fortianalyzer2_filter",
    "description": "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer2_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer2_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer2_override_filter": {
    "prefix": "fortios_log_fortianalyzer2_override_filter",
    "description": "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer2_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer2_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer2_override_setting": {
    "prefix": "fortios_log_fortianalyzer2_override_setting",
    "description": "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer2_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer2_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer2_setting": {
    "prefix": "fortios_log_fortianalyzer2_setting",
    "description": "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer2_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer2_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer3_filter": {
    "prefix": "fortios_log_fortianalyzer3_filter",
    "description": "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer3_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer3_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer3_override_filter": {
    "prefix": "fortios_log_fortianalyzer3_override_filter",
    "description": "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer3_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer3_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer3_override_setting": {
    "prefix": "fortios_log_fortianalyzer3_override_setting",
    "description": "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer3_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer3_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer3_setting": {
    "prefix": "fortios_log_fortianalyzer3_setting",
    "description": "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer3_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer3_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_cloud_filter": {
    "prefix": "fortios_log_fortianalyzer_cloud_filter",
    "description": "Filters for FortiAnalyzer Cloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_cloud_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_cloud_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_cloud_override_filter": {
    "prefix": "fortios_log_fortianalyzer_cloud_override_filter",
    "description": "Override filters for FortiAnalyzer Cloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_cloud_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_cloud_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_cloud_override_setting": {
    "prefix": "fortios_log_fortianalyzer_cloud_override_setting",
    "description": "Override FortiAnalyzer Cloud settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_cloud_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_cloud_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_cloud_setting": {
    "prefix": "fortios_log_fortianalyzer_cloud_setting",
    "description": "Global FortiAnalyzer Cloud settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_cloud_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_cloud_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_filter": {
    "prefix": "fortios_log_fortianalyzer_filter",
    "description": "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_override_filter": {
    "prefix": "fortios_log_fortianalyzer_override_filter",
    "description": "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_override_setting": {
    "prefix": "fortios_log_fortianalyzer_override_setting",
    "description": "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_setting": {
    "prefix": "fortios_log_fortianalyzer_setting",
    "description": "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortiguard_filter": {
    "prefix": "fortios_log_fortiguard_filter",
    "description": "Filters for FortiCloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortiguard_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortiguard_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortiguard_override_filter": {
    "prefix": "fortios_log_fortiguard_override_filter",
    "description": "Override filters for FortiCloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortiguard_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortiguard_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortiguard_override_setting": {
    "prefix": "fortios_log_fortiguard_override_setting",
    "description": "Override global FortiCloud logging settings for this VDOM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortiguard_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortiguard_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortiguard_setting": {
    "prefix": "fortios_log_fortiguard_setting",
    "description": "Configure logging to FortiCloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortiguard_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortiguard_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_gui_display": {
    "prefix": "fortios_log_gui_display",
    "description": "Configure how log messages are displayed on the GUI in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_gui_display:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_gui_display: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_memory_filter": {
    "prefix": "fortios_log_memory_filter",
    "description": "Filters for memory buffer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_memory_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_memory_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_memory_global_setting": {
    "prefix": "fortios_log_memory_global_setting",
    "description": "Global settings for memory logging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_memory_global_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_memory_global_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_memory_setting": {
    "prefix": "fortios_log_memory_setting",
    "description": "Settings for memory buffer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_memory_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_memory_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_null_device_filter": {
    "prefix": "fortios_log_null_device_filter",
    "description": "Filters for null device logging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_null_device_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_null_device_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_null_device_setting": {
    "prefix": "fortios_log_null_device_setting",
    "description": "Settings for null device logging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_null_device_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_null_device_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_setting": {
    "prefix": "fortios_log_setting",
    "description": "Configure general log settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd2_filter": {
    "prefix": "fortios_log_syslogd2_filter",
    "description": "Filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd2_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd2_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd2_override_filter": {
    "prefix": "fortios_log_syslogd2_override_filter",
    "description": "Override filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd2_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd2_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd2_override_setting": {
    "prefix": "fortios_log_syslogd2_override_setting",
    "description": "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd2_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd2_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd2_setting": {
    "prefix": "fortios_log_syslogd2_setting",
    "description": "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd2_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd2_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd3_filter": {
    "prefix": "fortios_log_syslogd3_filter",
    "description": "Filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd3_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd3_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd3_override_filter": {
    "prefix": "fortios_log_syslogd3_override_filter",
    "description": "Override filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd3_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd3_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd3_override_setting": {
    "prefix": "fortios_log_syslogd3_override_setting",
    "description": "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd3_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd3_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd3_setting": {
    "prefix": "fortios_log_syslogd3_setting",
    "description": "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd3_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd3_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd4_filter": {
    "prefix": "fortios_log_syslogd4_filter",
    "description": "Filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd4_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd4_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd4_override_filter": {
    "prefix": "fortios_log_syslogd4_override_filter",
    "description": "Override filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd4_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd4_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd4_override_setting": {
    "prefix": "fortios_log_syslogd4_override_setting",
    "description": "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd4_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd4_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd4_setting": {
    "prefix": "fortios_log_syslogd4_setting",
    "description": "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd4_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd4_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd_filter": {
    "prefix": "fortios_log_syslogd_filter",
    "description": "Filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd_override_filter": {
    "prefix": "fortios_log_syslogd_override_filter",
    "description": "Override filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd_override_setting": {
    "prefix": "fortios_log_syslogd_override_setting",
    "description": "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd_setting": {
    "prefix": "fortios_log_syslogd_setting",
    "description": "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting2_filter": {
    "prefix": "fortios_log_tacacsplusaccounting2_filter",
    "description": "Settings for TACACS+ accounting events filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting2_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting2_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting2_setting": {
    "prefix": "fortios_log_tacacsplusaccounting2_setting",
    "description": "Settings for TACACS+ accounting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting2_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting2_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting3_filter": {
    "prefix": "fortios_log_tacacsplusaccounting3_filter",
    "description": "Settings for TACACS+ accounting events filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting3_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting3_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting3_setting": {
    "prefix": "fortios_log_tacacsplusaccounting3_setting",
    "description": "Settings for TACACS+ accounting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting3_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting3_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting_filter": {
    "prefix": "fortios_log_tacacsplusaccounting_filter",
    "description": "Settings for TACACS+ accounting events filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting_setting": {
    "prefix": "fortios_log_tacacsplusaccounting_setting",
    "description": "Settings for TACACS+ accounting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_threat_weight": {
    "prefix": "fortios_log_threat_weight",
    "description": "Configure threat weight settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_threat_weight:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_threat_weight: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_webtrends_filter": {
    "prefix": "fortios_log_webtrends_filter",
    "description": "Filters for WebTrends in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_webtrends_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_webtrends_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_webtrends_setting": {
    "prefix": "fortios_log_webtrends_setting",
    "description": "Settings for WebTrends in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_webtrends_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_webtrends_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_monitor": {
    "prefix": "fortios_monitor",
    "description": "Ansible Module for FortiOS Monitor API",
    "body": [
      "fortinet.fortios.fortios_monitor:",
      "\tselector: ${1:check.endpoint-control.registration-password|quarantine.endpoint-control.registration|unquarantine.endpoint-control.registration|block.endpoint-control.registration|unblock.endpoint-control.registration|deregister.endpoint-control.registration|clear_counters.firewall.acl|clear_counters.firewall.acl6|reset.firewall.policy|clear_counters.firewall.policy|reset.firewall.policy6|clear_counters.firewall.policy6|clear_counters.firewall.proxy-policy|clear_all.firewall.session|close.firewall.session|reset.firewall.shaper|reset.firewall.per-ip-shaper|cancel.fortiview.session|upgrade.license.database|reset.log.stats|login.registration.forticloud|create.registration.forticloud|logout.registration.forticloud|login.registration.forticare|create.registration.forticare|add-license.registration.forticare|add-license.registration.vdom|toggle-vdom-mode.system.admin|generate-key.system.api-user|update-comments.system.config-revision|delete.system.config-revision|save.system.config-revision|system.disconnect-admins|set.system.time|reboot.system.os|shutdown.system.os|revoke.system.dhcp|revoke.system.dhcp6|upgrade.system.firmware|start.system.fsck|system.change-password|system.password-policy-conform|reset.system.modem|connect.system.modem|disconnect.system.modem|update.system.modem|restart.system.sniffer|start.system.sniffer|stop.system.sniffer|test.system.automation-stitch|update.switch-controller.managed-switch|restart.switch-controller.managed-switch|poe-reset.switch-controller.managed-switch|factory-reset.switch-controller.managed-switch|download.switch-controller.fsw-firmware|push.switch-controller.fsw-firmware|upload.switch-controller.fsw-firmware|dhcp-renew.system.interface|start.system.usb-log|stop.system.usb-log|eject.system.usb-device|update.system.fortiguard|clear-statistics.system.fortiguard|test-availability.system.fortiguard|config.system.fortimanager|backup-action.system.fortimanager|dump.system.com-log|update.system.ha-peer|disconnect.system.ha-peer|run.system.compliance|restore.system.config|upload.system.vmlicense|trigger.system.security-rating|reset.extender-controller.extender|validate-gcp-key.system.sdn-connector|deauth.user.firewall|clear_users.user.banned|add_users.user.banned|clear_all.user.banned|activate.user.fortitoken|refresh.user.fortitoken|provision.user.fortitoken|send-activation.user.fortitoken|import-trial.user.fortitoken|import-mobile.user.fortitoken|import-seed.user.fortitoken|refresh-server.user.fsso|test-connect.user.radius|test.user.tacacs-plus|delete.webfilter.override|reset.webfilter.category-quota|tunnel_up.vpn.ipsec|tunnel_down.vpn.ipsec|tunnel_reset_stats.vpn.ipsec|clear_tunnel.vpn.ssl|delete.vpn.ssl|import.vpn-certificate.ca|import.vpn-certificate.crl|import.vpn-certificate.local|import.vpn-certificate.remote|generate.vpn-certificate.csr|reset.wanopt.history|reset.wanopt.webcache|reset.wanopt.peer_stats|reset.webcache.stats|set_status.wifi.managed_ap|download.wifi.firmware|push.wifi.firmware|upload.wifi.firmware|restart.wifi.managed_ap|reset.wifi.euclid|clear_all.wifi.rogue_ap|set_status.wifi.rogue_ap|reset.firewall.consolidated-policy|clear_counters.firewall.consolidated-policy|clear_counters.firewall.security-policy|add.firewall.clearpass-address|delete.firewall.clearpass-address|delete.log.local-report|migrate.registration.forticloud|change-vdom-mode.system.admin|delete.system.config-script|run.system.config-script|upload.system.config-script|diagnose.extender-controller.extender|upgrade.extender-controller.extender|add.nsx.service|update.system.sdn-connector|import.web-ui.language|create.web-ui.custom-language|update.web-ui.custom-language|email.user.guest|sms.user.guest|utm.rating-lookup|connect.wifi.network|scan.wifi.network|upload.wifi.region-image|refresh.azure.application-list|verify-cert.endpoint-control.ems|geoip.geoip-query|transfer.registration.forticare|register-device.registration.forticloud|register-appliance.system.csf|clear.system.sniffer|webhook.system.automation-stitch|format.system.logdisk|speed-test-trigger.system.interface|read-info.system.certificate|provision-user.vpn.ssl|upload.webproxy.pacfile|disassociate.wifi.client|start.wifi.spectrum|keep-alive.wifi.spectrum|stop.wifi.spectrum|start.wifi.vlan-probe|stop.wifi.vlan-probe|generate-keys.wifi.ssid|save.system.config|led-blink.wifi.managed_ap|auth.user.firewall|remove.user.device|clear.vpn.ike|reset.firewall.multicast-policy|reset.firewall.multicast-policy6|clear_counters.firewall.multicast-policy|clear_counters.firewall.multicast-policy6|clear-soft-in.router.bgp|clear-soft-out.router.bgp|enable-app-bandwidth-tracking.system.traffic-history|refresh.system.external-resource|reset.firewall.central-snat-map|clear-counters.firewall.central-snat-map|reset.firewall.dnat|clear-counters.firewall.dnat|close-multiple.firewall.session|close-multiple.firewall.session6|close-all.firewall.session|clear.system.crash-log|backup.system.config|abort.user.query|create.vpn-certificate.local|flush.firewall.gtp|kill.system.process|upload.system.hscalefw-license|download.system.vmlicense|start.network.debug-flow|stop.network.debug-flow|upload.system.lte-modem|upgrade.system.lte-modem|port-stats-reset.switch-controller.managed-switch|bounce-port.switch-controller.managed-switch|set-tier1.switch-controller.mclag-icl|wake-on-lan.system.interface|manual-update.system.fortiguard|purdue-level.user.device|deregister-device.registration.forticare|soft-reset-neighbor.router.bgp|download-eval.system.vmlicense|dynamic.system.external-resource|pse-config.switch-controller.recommendation|update.switch-controller.isl-lockdown|clear-counters.firewall.ztna-firewall-policy|update.forticonverter.eligibility|create.forticonverter.ticket|update.forticonverter.sn-list|upload.forticonverter.config|update.forticonverter.intf-list|forticonverter.set-source-sn|submit.forticonverter.intf-mapping|submit.forticonverter.mgmt-intf|submit.forticonverter.notes|submit.forticonverter.ticket|update.forticonverter.submitted-info|start.forticonverter.download|trial.user.fortitoken-cloud|unverify-cert.endpoint-control.ems|update-global-label.firewall.policy|update-global-label.firewall.security-policy|set-tier-plus.switch-controller.mclag-icl|user.password-policy-conform|change-password.user.local}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#params: ${4:}",
      "\t#vdom: ${5:root}"
    ]
  },
  "fortios_monitor_fact": {
    "prefix": "fortios_monitor_fact",
    "description": "Retrieve Facts of FortiOS Monitor Objects.",
    "body": [
      "fortinet.fortios.fortios_monitor_fact:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#filters: ${3:}",
      "\t#formatters: ${4:}",
      "\t#params: ${5:}",
      "\t#selector: ${6:endpoint-control_profile_xml|endpoint-control_record-list|endpoint-control_registration_summary|endpoint-control_installer|endpoint-control_installer_download|endpoint-control_avatar_download|firewall_health|firewall_local-in|firewall_acl|firewall_acl6|firewall_internet-service-match|firewall_internet-service-details|firewall_policy|firewall_policy6|firewall_proxy-policy|firewall_policy-lookup|firewall_session|firewall_shaper|firewall_per-ip-shaper|firewall_load-balance|firewall_address-fqdns|firewall_address-fqdns6|firewall_ippool|firewall_address-dynamic|firewall_address6-dynamic|fortiview_statistics|fortiview_sandbox-file-details|geoip_geoip-query|ips_rate-based|license_status|license_forticare-resellers|license_forticare-org-list|log_current-disk-usage|log_device_state|log_forticloud|log_fortianalyzer|log_fortianalyzer-queue|log_hourly-disk-usage|log_historic-daily-remote-logs|log_stats|log_forticloud-report_download|log_ips-archive_download|log_policy-archive_download|log_av-archive_download|log_event|registration_forticloud_disclaimer|registration_forticloud_domains|router_ipv4|router_ipv6|router_statistics|router_lookup|router_policy|router_policy6|system_config-revision|system_config-revision_file|system_config-revision_info|system_current-admins|system_time|system_global-resources|system_vdom-resource|system_dhcp|system_firmware|system_firmware_upgrade-paths|system_storage|system_csf|system_csf_pending-authorizations|system_modem|system_3g-modem|system_resource_usage|system_sniffer|system_sniffer_download|system_automation-stitch_stats|switch-controller_managed-switch|switch-controller_managed-switch_faceplate-xml|switch-controller_managed-switch_dhcp-snooping|switch-controller_fsw-firmware|switch-controller_detected-device|switch-controller_validate-switch-prefix|system_interface|system_interface_dhcp-status|system_available-interfaces|system_acquired-dns|system_resolve-fqdn|system_nat46-ippools|system_usb-log|system_ipconf|system_fortiguard_server-info|system_fortimanager_status|system_fortimanager_backup-summary|system_fortimanager_backup-details|system_available-certificates|system_certificate_download|system_debug_download|system_com-log_update|system_com-log_download|system_botnet_stat|system_botnet|system_botnet-domains|system_botnet-domains_stat|system_botnet-domains_hits|system_ha-statistics|system_ha-history|system_ha-checksums|system_ha-peer|system_link-monitor|system_config_backup|system_config_usb-filelist|system_sandbox_stats|system_sandbox_status|system_sandbox_test-connect|system_object_usage|system_object-tagging_usage|system_status|system_timezone|system_sensor-info|system_security-rating|system_security-rating_history|system_security-rating_status|system_security-rating_lang|system_fortiguard-blacklist|system_check-port-availability|system_external-resource_entry-list|extender-controller_extender|system_sdn-connector_status|user_firewall|user_banned|user_fortitoken|user_detected-device|user_device|user_device-type|user_device-category|user_fsso|utm_rating-lookup|utm_app-lookup|utm_application-categories|utm_antivirus_stats|virtual-wan_health-check|virtual-wan_members|webfilter_override|webfilter_malicious-urls|webfilter_malicious-urls_stat|webfilter_category-quota|webfilter_fortiguard-categories|webfilter_trusted-urls|vpn_ipsec|vpn_one-click_members|vpn_one-click_status|vpn_ssl|vpn_ssl_stats|wanopt_history|wanopt_webcache|wanopt_peer_stats|webproxy_pacfile_download|webcache_stats|wifi_client|wifi_managed_ap|wifi_firmware|wifi_ap_status|wifi_interfering_ap|wifi_euclid|wifi_rogue_ap|wifi_spectrum|endpoint-control_summary|endpoint-control_ems_status|firewall_consolidated-policy|firewall_security-policy|firewall_uuid-list|firewall_uuid-type-lookup|fortiguard_redirect-portal|firewall_sdn-connector-filters|fortiview_sandbox-file-list|ips_metadata|ips_anomaly|license_fortianalyzer-status|log_forticloud-report-list|log_local-report-list|log_local-report_download|network_lldp_neighbors|network_lldp_ports|network_dns_latency|network_fortiguard_live-services-latency|network_ddns_servers|network_ddns_lookup|router_lookup-policy|system_config-script|system_config-sync_status|system_vdom-link|switch-controller_managed-switch_transceivers|system_interface_poe|system_trusted-cert-authorities|system_sandbox_cloud-regions|system_interface_transceivers|system_vm-information|system_security-rating_supported-reports|nsx_service_status|nsx_instance|system_sdn-connector_nsx-security-tags|web-ui_custom-language_download|user_collected-email|user_info_query|user_info_thumbnail|utm_blacklisted-certificates|utm_blacklisted-certificates_statistics|virtual-wan_interface-log|virtual-wan_sla-log|vpn_ocvpn_members|vpn_ocvpn_status|vpn_ocvpn_meta|wifi_network_list|wifi_network_status|wifi_region-image|azure_application-list|endpoint-control_ems_cert-status|endpoint-control_ems_status-summary|fortiguard_service-communication-stats|network_reverse-ip-lookup|registration_forticloud_device-status|switch-controller_managed-switch_health|switch-controller_managed-switch_cable-status|switch-controller_mclag-icl_eligible-peer|system_interface_speed-test-status|user_fortitoken-cloud_status|wifi_vlan-probe|firewall_ippool_mapping|network_arp|system_interface-connected-admins-info|system_ntp_status|system_config-error-log_download|system_running-processes|user_device_query|ips_exceed-scan-range|firewall_multicast-policy|firewall_multicast-policy6|firewall_gtp-statistics|firewall_gtp-runtime-statistics|router_bgp_neighbors|router_bgp_neighbors6|router_bgp_paths|router_bgp_paths6|router_ospf_neighbors|system_automation-action_stats|switch-controller_matched-devices|system_ha-table-checksums|system_sandbox_connection|system_traffic-history_interface|system_traffic-history_top-applications|videofilter_fortiguard-categories|firewall_central-snat-map|firewall_dnat|ips_hold-signatures|router_bgp_paths-statistics|system_lte-modem_status|system_global-search|switch-controller_managed-switch_status|switch-controller_managed-switch_port-stats|switch-controller_managed-switch_models|system_interface_kernel-interfaces|system_config_restore-status|wifi_meta|wifi_ap_channels|wifi_ap-names|firewall_internet-service-reputation|firewall_shaper_multi-class-shaper|log_forticloud_connection|system_performance_status|system_ipam_list|system_ipam_status|system_acme-certificate-status|system_crash-log_download|user_banned_check|user_info_thumbnail-file|vpn-certificate_cert-name-available|wifi_unassociated-devices|wifi_matched-devices|firewall_proxy_sessions|firewall_gtp|fortiview_proxy-statistics|system_ha-hw-interface|user_firewall_count|firewall_internet-service-basic|firewall_vip-overlap|switch-controller_managed-switch_port-health|switch-controller_managed-switch_tx-rx|firewall_network-service-dynamic|system_ipam_utilization|system_ha-nonsync-checksums|wifi_station-capability|fortiguard_answers|ips_session_performance|switch-controller_nac-device_stats|switch-controller_isl-lockdown_status|wifi_nac-device_stats|firewall_sessions|fortiview_realtime-statistics|fortiview_historical-statistics|fortiview_realtime-proxy-statistics|log_feature-set|forticonverter_eligibility|forticonverter_ticket_status|forticonverter_sn-list|forticonverter_intf-list|forticonverter_custom-operation_status|forticonverter_intf-mapping|forticonverter_mgmt-intf|forticonverter_notes|forticonverter_download_ready|forticonverter_file_download|forticonverter_download_status|switch-controller_managed-switch_bios|system_available-interfaces_meta|system_central-management_status|user_device_stats|casb_saas-application_details|switch-controller_mclag-icl_tier-plus-candidates|extension-controller_fortigate|extension-controller_lan-extension-vdom-status|user_proxy|user_proxy_count}",
      "\t#selectors: ${7:}",
      "\t#sorters: ${8:}",
      "\t#vdom: ${9:root}"
    ]
  },
  "fortios_monitoring_np6_ipsec_engine": {
    "prefix": "fortios_monitoring_np6_ipsec_engine",
    "description": "Configure NP6 IPsec engine status monitoring in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_monitoring_np6_ipsec_engine:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#monitoring_np6_ipsec_engine: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_monitoring_npu_hpe": {
    "prefix": "fortios_monitoring_npu_hpe",
    "description": "Configure npu-hpe status monitoring in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_monitoring_npu_hpe:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#monitoring_npu_hpe: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_nsxt_service_chain": {
    "prefix": "fortios_nsxt_service_chain",
    "description": "Configure NSX-T service chain in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_nsxt_service_chain:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#nsxt_service_chain: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_nsxt_setting": {
    "prefix": "fortios_nsxt_setting",
    "description": "Configure NSX-T setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_nsxt_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#nsxt_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_pfcp_message_filter": {
    "prefix": "fortios_pfcp_message_filter",
    "description": "Message filter for PFCP messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_pfcp_message_filter:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#pfcp_message_filter: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_chart": {
    "prefix": "fortios_report_chart",
    "description": "Report chart widget configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_chart:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_chart: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_dataset": {
    "prefix": "fortios_report_dataset",
    "description": "Report dataset configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_dataset:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_dataset: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_layout": {
    "prefix": "fortios_report_layout",
    "description": "Report layout configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_layout:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_layout: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_setting": {
    "prefix": "fortios_report_setting",
    "description": "Report setting configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#report_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_report_style": {
    "prefix": "fortios_report_style",
    "description": "Report style configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_style:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_style: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_theme": {
    "prefix": "fortios_report_theme",
    "description": "Report themes configuratio in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_theme:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_theme: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_access_list": {
    "prefix": "fortios_router_access_list",
    "description": "Configure access lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_access_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_access_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_access_list6": {
    "prefix": "fortios_router_access_list6",
    "description": "Configure IPv6 access lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_access_list6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_access_list6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_aspath_list": {
    "prefix": "fortios_router_aspath_list",
    "description": "Configure Autonomous System (AS) path lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_aspath_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_aspath_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_auth_path": {
    "prefix": "fortios_router_auth_path",
    "description": "Configure authentication based routing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_auth_path:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_auth_path: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_bfd": {
    "prefix": "fortios_router_bfd",
    "description": "Configure BFD in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_bfd:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_bfd: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_bfd6": {
    "prefix": "fortios_router_bfd6",
    "description": "Configure IPv6 BFD in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_bfd6:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_bfd6: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_bgp": {
    "prefix": "fortios_router_bgp",
    "description": "Configure BGP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_bgp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_bgp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_community_list": {
    "prefix": "fortios_router_community_list",
    "description": "Configure community lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_community_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_community_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_extcommunity_list": {
    "prefix": "fortios_router_extcommunity_list",
    "description": "Configure extended community lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_extcommunity_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_extcommunity_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_isis": {
    "prefix": "fortios_router_isis",
    "description": "Configure IS-IS in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_isis:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_isis: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_key_chain": {
    "prefix": "fortios_router_key_chain",
    "description": "Configure key-chain in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_key_chain:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_key_chain: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_multicast": {
    "prefix": "fortios_router_multicast",
    "description": "Configure router multicast in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_multicast:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_multicast: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_multicast6": {
    "prefix": "fortios_router_multicast6",
    "description": "Configure IPv6 multicast in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_multicast6:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_multicast6: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_multicast_flow": {
    "prefix": "fortios_router_multicast_flow",
    "description": "Configure multicast-flow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_multicast_flow:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_multicast_flow: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_ospf": {
    "prefix": "fortios_router_ospf",
    "description": "Configure OSPF in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_ospf:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_ospf: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_ospf6": {
    "prefix": "fortios_router_ospf6",
    "description": "Configure IPv6 OSPF in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_ospf6:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_ospf6: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_policy": {
    "prefix": "fortios_router_policy",
    "description": "Configure IPv4 routing policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_policy6": {
    "prefix": "fortios_router_policy6",
    "description": "Configure IPv6 routing policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_policy6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_prefix_list": {
    "prefix": "fortios_router_prefix_list",
    "description": "Configure IPv4 prefix lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_prefix_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_prefix_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_prefix_list6": {
    "prefix": "fortios_router_prefix_list6",
    "description": "Configure IPv6 prefix lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_prefix_list6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_prefix_list6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_rip": {
    "prefix": "fortios_router_rip",
    "description": "Configure RIP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_rip:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_rip: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_ripng": {
    "prefix": "fortios_router_ripng",
    "description": "Configure RIPng in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_ripng:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_ripng: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_route_map": {
    "prefix": "fortios_router_route_map",
    "description": "Configure route maps in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_route_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_route_map: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_setting": {
    "prefix": "fortios_router_setting",
    "description": "Configure router settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_static": {
    "prefix": "fortios_router_static",
    "description": "Configure IPv4 static routing tables in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_static:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_static: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_static6": {
    "prefix": "fortios_router_static6",
    "description": "Configure IPv6 static routing tables in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_static6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_static6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_sctp_filter_profile": {
    "prefix": "fortios_sctp_filter_profile",
    "description": "Configure SCTP filter profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_sctp_filter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#sctp_filter_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_bwl": {
    "prefix": "fortios_spamfilter_bwl",
    "description": "Configure anti-spam black/white list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_bwl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_bwl: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_bword": {
    "prefix": "fortios_spamfilter_bword",
    "description": "Configure AntiSpam banned word list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_bword:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_bword: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_dnsbl": {
    "prefix": "fortios_spamfilter_dnsbl",
    "description": "Configure AntiSpam DNSBL/ORBL in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_dnsbl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_dnsbl: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_fortishield": {
    "prefix": "fortios_spamfilter_fortishield",
    "description": "Configure FortiGuard - AntiSpam in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_fortishield:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#spamfilter_fortishield: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_spamfilter_iptrust": {
    "prefix": "fortios_spamfilter_iptrust",
    "description": "Configure AntiSpam IP trust in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_iptrust:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_iptrust: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_mheader": {
    "prefix": "fortios_spamfilter_mheader",
    "description": "Configure AntiSpam MIME header in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_mheader:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_mheader: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_options": {
    "prefix": "fortios_spamfilter_options",
    "description": "Configure AntiSpam options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_options:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#spamfilter_options: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_spamfilter_profile": {
    "prefix": "fortios_spamfilter_profile",
    "description": "Configure AntiSpam profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ssh_filter_profile": {
    "prefix": "fortios_ssh_filter_profile",
    "description": "Configure SSH filter profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ssh_filter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#ssh_filter_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_802_1x_settings": {
    "prefix": "fortios_switch_controller_802_1x_settings",
    "description": "Configure global 802.1X settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_802_1x_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_802_1x_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_acl_group": {
    "prefix": "fortios_switch_controller_acl_group",
    "description": "Configure ACL groups to be applied on managed FortiSwitch ports in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_acl_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_acl_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_acl_ingress": {
    "prefix": "fortios_switch_controller_acl_ingress",
    "description": "Configure ingress ACL policies to be applied on managed FortiSwitch ports in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_acl_ingress:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_acl_ingress: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_auto_config_custom": {
    "prefix": "fortios_switch_controller_auto_config_custom",
    "description": "Policies which can override the 'default' for specific ISL/ICL/FortiLink interface in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_auto_config_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_auto_config_custom: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_auto_config_default": {
    "prefix": "fortios_switch_controller_auto_config_default",
    "description": "Policies which are applied automatically to all ISL/ICL/FortiLink interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_auto_config_default:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_auto_config_default: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_auto_config_policy": {
    "prefix": "fortios_switch_controller_auto_config_policy",
    "description": "Policy definitions which can define the behavior on auto configured interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_auto_config_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_auto_config_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_custom_command": {
    "prefix": "fortios_switch_controller_custom_command",
    "description": "Configure the FortiGate switch controller to send custom commands to managed FortiSwitch devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_custom_command:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_custom_command: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_dynamic_port_policy": {
    "prefix": "fortios_switch_controller_dynamic_port_policy",
    "description": "Configure Dynamic port policy to be applied on the managed FortiSwitch ports through DPP device in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_dynamic_port_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_dynamic_port_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_flow_tracking": {
    "prefix": "fortios_switch_controller_flow_tracking",
    "description": "Configure FortiSwitch flow tracking and export via ipfix/netflow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_flow_tracking:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_flow_tracking: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_fortilink_settings": {
    "prefix": "fortios_switch_controller_fortilink_settings",
    "description": "Configure integrated FortiLink settings for FortiSwitch in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_fortilink_settings:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_fortilink_settings: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_global": {
    "prefix": "fortios_switch_controller_global",
    "description": "Configure FortiSwitch global settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_global: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_igmp_snooping": {
    "prefix": "fortios_switch_controller_igmp_snooping",
    "description": "Configure FortiSwitch IGMP snooping global settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_igmp_snooping:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_igmp_snooping: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_initial_config_template": {
    "prefix": "fortios_switch_controller_initial_config_template",
    "description": "Configure template for auto-generated VLANs in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_initial_config_template:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_initial_config_template: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_initial_config_vlans": {
    "prefix": "fortios_switch_controller_initial_config_vlans",
    "description": "Configure initial template for auto-generated VLAN interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_initial_config_vlans:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_initial_config_vlans: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_lldp_profile": {
    "prefix": "fortios_switch_controller_lldp_profile",
    "description": "Configure FortiSwitch LLDP profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_lldp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_lldp_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_lldp_settings": {
    "prefix": "fortios_switch_controller_lldp_settings",
    "description": "Configure FortiSwitch LLDP settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_lldp_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_lldp_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_location": {
    "prefix": "fortios_switch_controller_location",
    "description": "Configure FortiSwitch location services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_location:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_location: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_mac_policy": {
    "prefix": "fortios_switch_controller_mac_policy",
    "description": "Configure MAC policy to be applied on the managed FortiSwitch devices through NAC device in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_mac_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_mac_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_mac_sync_settings": {
    "prefix": "fortios_switch_controller_mac_sync_settings",
    "description": "Configure global MAC synchronization settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_mac_sync_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_mac_sync_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_managed_switch": {
    "prefix": "fortios_switch_controller_managed_switch",
    "description": "Configure FortiSwitch devices that are managed by this FortiGate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_managed_switch:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_managed_switch: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_nac_device": {
    "prefix": "fortios_switch_controller_nac_device",
    "description": "Configure/list NAC devices learned on the managed FortiSwitch ports which matches NAC policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_nac_device:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_nac_device: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_nac_settings": {
    "prefix": "fortios_switch_controller_nac_settings",
    "description": "Configure integrated NAC settings for FortiSwitch in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_nac_settings:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_nac_settings: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_network_monitor_settings": {
    "prefix": "fortios_switch_controller_network_monitor_settings",
    "description": "Configure network monitor settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_network_monitor_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_network_monitor_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_poe": {
    "prefix": "fortios_switch_controller_poe",
    "description": "List PoE end-points status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_poe:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_poe: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_port_policy": {
    "prefix": "fortios_switch_controller_port_policy",
    "description": "Configure port policy to be applied on the managed FortiSwitch ports through NAC device in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_port_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_port_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_ptp_interface_policy": {
    "prefix": "fortios_switch_controller_ptp_interface_policy",
    "description": "PTP interface-policy configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_ptp_interface_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_ptp_interface_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_ptp_policy": {
    "prefix": "fortios_switch_controller_ptp_policy",
    "description": "PTP policy configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_ptp_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_ptp_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_ptp_profile": {
    "prefix": "fortios_switch_controller_ptp_profile",
    "description": "Global PTP profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_ptp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_ptp_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_ptp_settings": {
    "prefix": "fortios_switch_controller_ptp_settings",
    "description": "Global PTP settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_ptp_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_ptp_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_qos_dot1p_map": {
    "prefix": "fortios_switch_controller_qos_dot1p_map",
    "description": "Configure FortiSwitch QoS 802.1p in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_qos_dot1p_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_qos_dot1p_map: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_qos_ip_dscp_map": {
    "prefix": "fortios_switch_controller_qos_ip_dscp_map",
    "description": "Configure FortiSwitch QoS IP precedence/DSCP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_qos_ip_dscp_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_qos_ip_dscp_map: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_qos_qos_policy": {
    "prefix": "fortios_switch_controller_qos_qos_policy",
    "description": "Configure FortiSwitch QoS policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_qos_qos_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_qos_qos_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_qos_queue_policy": {
    "prefix": "fortios_switch_controller_qos_queue_policy",
    "description": "Configure FortiSwitch QoS egress queue policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_qos_queue_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_qos_queue_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_quarantine": {
    "prefix": "fortios_switch_controller_quarantine",
    "description": "Configure FortiSwitch quarantine support in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_quarantine:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_quarantine: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_remote_log": {
    "prefix": "fortios_switch_controller_remote_log",
    "description": "Configure logging by FortiSwitch device to a remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_remote_log:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_remote_log: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_security_policy_802_1x": {
    "prefix": "fortios_switch_controller_security_policy_802_1x",
    "description": "Configure 802.1x MAC Authentication Bypass (MAB) policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_security_policy_802_1x:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_security_policy_802_1x: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_security_policy_captive_portal": {
    "prefix": "fortios_switch_controller_security_policy_captive_portal",
    "description": "Names of VLANs that use captive portal authentication in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_security_policy_captive_portal:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_security_policy_captive_portal: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_security_policy_local_access": {
    "prefix": "fortios_switch_controller_security_policy_local_access",
    "description": "Configure allowaccess list for mgmt and internal interfaces on managed FortiSwitch units in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_security_policy_local_access:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_security_policy_local_access: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_sflow": {
    "prefix": "fortios_switch_controller_sflow",
    "description": "Configure FortiSwitch sFlow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_sflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_sflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_snmp_community": {
    "prefix": "fortios_switch_controller_snmp_community",
    "description": "Configure FortiSwitch SNMP v1/v2c communities globally in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_snmp_community:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_snmp_community: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_snmp_sysinfo": {
    "prefix": "fortios_switch_controller_snmp_sysinfo",
    "description": "Configure FortiSwitch SNMP system information globally in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_snmp_sysinfo:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_snmp_sysinfo: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_snmp_trap_threshold": {
    "prefix": "fortios_switch_controller_snmp_trap_threshold",
    "description": "Configure FortiSwitch SNMP trap threshold values globally in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_snmp_trap_threshold:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_snmp_trap_threshold: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_snmp_user": {
    "prefix": "fortios_switch_controller_snmp_user",
    "description": "Configure FortiSwitch SNMP v3 users globally in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_snmp_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_snmp_user: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_storm_control": {
    "prefix": "fortios_switch_controller_storm_control",
    "description": "Configure FortiSwitch storm control in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_storm_control:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_storm_control: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_storm_control_policy": {
    "prefix": "fortios_switch_controller_storm_control_policy",
    "description": "Configure FortiSwitch storm control policy to be applied on managed-switch ports in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_storm_control_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_storm_control_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_stp_instance": {
    "prefix": "fortios_switch_controller_stp_instance",
    "description": "Configure FortiSwitch multiple spanning tree protocol (MSTP) instances in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_stp_instance:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_stp_instance: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_stp_settings": {
    "prefix": "fortios_switch_controller_stp_settings",
    "description": "Configure FortiSwitch spanning tree protocol (STP) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_stp_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_stp_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_switch_group": {
    "prefix": "fortios_switch_controller_switch_group",
    "description": "Configure FortiSwitch switch groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_switch_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_switch_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_switch_interface_tag": {
    "prefix": "fortios_switch_controller_switch_interface_tag",
    "description": "Configure switch object tags in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_switch_interface_tag:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_switch_interface_tag: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_switch_log": {
    "prefix": "fortios_switch_controller_switch_log",
    "description": "Configure FortiSwitch logging (logs are transferred to and inserted into FortiGate event log) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_switch_log:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_switch_log: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_switch_profile": {
    "prefix": "fortios_switch_controller_switch_profile",
    "description": "Configure FortiSwitch switch profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_switch_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_switch_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_system": {
    "prefix": "fortios_switch_controller_system",
    "description": "Configure system-wide switch controller settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_system:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_system: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_traffic_policy": {
    "prefix": "fortios_switch_controller_traffic_policy",
    "description": "Configure FortiSwitch traffic policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_traffic_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_traffic_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_traffic_sniffer": {
    "prefix": "fortios_switch_controller_traffic_sniffer",
    "description": "Configure FortiSwitch RSPAN/ERSPAN traffic sniffing parameters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_traffic_sniffer:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_traffic_sniffer: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_virtual_port_pool": {
    "prefix": "fortios_switch_controller_virtual_port_pool",
    "description": "Configure virtual pool in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_virtual_port_pool:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_virtual_port_pool: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_vlan": {
    "prefix": "fortios_switch_controller_vlan",
    "description": "Configure VLANs for switch controller in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_vlan:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_vlan: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_vlan_policy": {
    "prefix": "fortios_switch_controller_vlan_policy",
    "description": "Configure VLAN policy to be applied on the managed FortiSwitch ports through dynamic-port-policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_vlan_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_vlan_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_3g_modem_custom": {
    "prefix": "fortios_system_3g_modem_custom",
    "description": "3G MODEM custom in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_3g_modem_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_3g_modem_custom: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_accprofile": {
    "prefix": "fortios_system_accprofile",
    "description": "Configure access profiles for system administrators in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_accprofile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_accprofile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_acme": {
    "prefix": "fortios_system_acme",
    "description": "Configure ACME client in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_acme:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_acme: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_admin": {
    "prefix": "fortios_system_admin",
    "description": "Configure admin users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_affinity_interrupt": {
    "prefix": "fortios_system_affinity_interrupt",
    "description": "Configure interrupt affinity in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_affinity_interrupt:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_affinity_interrupt: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_affinity_packet_redistribution": {
    "prefix": "fortios_system_affinity_packet_redistribution",
    "description": "Configure packet redistribution in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_affinity_packet_redistribution:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_affinity_packet_redistribution: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_alarm": {
    "prefix": "fortios_system_alarm",
    "description": "Configure alarm in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_alarm:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_alarm: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_alias": {
    "prefix": "fortios_system_alias",
    "description": "Configure alias command in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_alias:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_alias: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_api_user": {
    "prefix": "fortios_system_api_user",
    "description": "Configure API users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_api_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_api_user: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_arp_table": {
    "prefix": "fortios_system_arp_table",
    "description": "Configure ARP table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_arp_table:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_arp_table: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_auto_install": {
    "prefix": "fortios_system_auto_install",
    "description": "Configure USB auto installation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_auto_install:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_auto_install: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_auto_script": {
    "prefix": "fortios_system_auto_script",
    "description": "Configure auto script in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_auto_script:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_auto_script: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_automation_action": {
    "prefix": "fortios_system_automation_action",
    "description": "Action for automation stitches in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_automation_action:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_automation_action: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_automation_destination": {
    "prefix": "fortios_system_automation_destination",
    "description": "Automation destinations in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_automation_destination:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_automation_destination: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_automation_stitch": {
    "prefix": "fortios_system_automation_stitch",
    "description": "Automation stitches in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_automation_stitch:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_automation_stitch: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_automation_trigger": {
    "prefix": "fortios_system_automation_trigger",
    "description": "Trigger for automation stitches in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_automation_trigger:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_automation_trigger: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_autoupdate_push_update": {
    "prefix": "fortios_system_autoupdate_push_update",
    "description": "Configure push updates in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_autoupdate_push_update:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_autoupdate_push_update: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_autoupdate_schedule": {
    "prefix": "fortios_system_autoupdate_schedule",
    "description": "Configure update schedule in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_autoupdate_schedule:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_autoupdate_schedule: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_autoupdate_tunneling": {
    "prefix": "fortios_system_autoupdate_tunneling",
    "description": "Configure web proxy tunneling for the FDN in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_autoupdate_tunneling:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_autoupdate_tunneling: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_central_management": {
    "prefix": "fortios_system_central_management",
    "description": "Configure central management in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_central_management:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_central_management: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_cluster_sync": {
    "prefix": "fortios_system_cluster_sync",
    "description": "Configure FortiGate Session Life Support Protocol (FGSP) session synchronization in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_cluster_sync:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_cluster_sync: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_console": {
    "prefix": "fortios_system_console",
    "description": "Configure console in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_console:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_console: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_csf": {
    "prefix": "fortios_system_csf",
    "description": "Add this FortiGate to a Security Fabric or set up a new Security Fabric on this FortiGate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_csf:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_csf: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_custom_language": {
    "prefix": "fortios_system_custom_language",
    "description": "Configure custom languages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_custom_language:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_custom_language: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ddns": {
    "prefix": "fortios_system_ddns",
    "description": "Configure DDNS in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ddns:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ddns: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dedicated_mgmt": {
    "prefix": "fortios_system_dedicated_mgmt",
    "description": "Configure dedicated management in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dedicated_mgmt:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_dedicated_mgmt: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_device_upgrade": {
    "prefix": "fortios_system_device_upgrade",
    "description": "Independent upgrades for managed devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_device_upgrade:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_device_upgrade: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dhcp6_server": {
    "prefix": "fortios_system_dhcp6_server",
    "description": "Configure DHCPv6 servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dhcp6_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dhcp6_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dhcp_server": {
    "prefix": "fortios_system_dhcp_server",
    "description": "Configure DHCP servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dhcp_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dhcp_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dns": {
    "prefix": "fortios_system_dns",
    "description": "Configure DNS in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dns:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_dns: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_dns64": {
    "prefix": "fortios_system_dns64",
    "description": "Configure DNS64 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dns64:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_dns64: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_dns_database": {
    "prefix": "fortios_system_dns_database",
    "description": "Configure DNS databases in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dns_database:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dns_database: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dns_server": {
    "prefix": "fortios_system_dns_server",
    "description": "Configure DNS servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dns_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dns_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dscp_based_priority": {
    "prefix": "fortios_system_dscp_based_priority",
    "description": "Configure DSCP based priority table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dscp_based_priority:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dscp_based_priority: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_email_server": {
    "prefix": "fortios_system_email_server",
    "description": "Configure the email server used by the FortiGate various things. For example, for sending email messages to users to support user authentication features in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_email_server:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_email_server: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_evpn": {
    "prefix": "fortios_system_evpn",
    "description": "Configure EVPN instance in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_evpn:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_evpn: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_external_resource": {
    "prefix": "fortios_system_external_resource",
    "description": "Configure external resource in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_external_resource:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_external_resource: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_fabric_vpn": {
    "prefix": "fortios_system_fabric_vpn",
    "description": "Setup for self orchestrated fabric auto discovery VPN in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fabric_vpn:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fabric_vpn: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_federated_upgrade": {
    "prefix": "fortios_system_federated_upgrade",
    "description": "Coordinate federated upgrades within the Security Fabric in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_federated_upgrade:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_federated_upgrade: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fips_cc": {
    "prefix": "fortios_system_fips_cc",
    "description": "Configure FIPS-CC mode in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fips_cc:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fips_cc: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fm": {
    "prefix": "fortios_system_fm",
    "description": "Configure FM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fm:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fm: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortiai": {
    "prefix": "fortios_system_fortiai",
    "description": "Configure FortiAI in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortiai:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortiai: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortiguard": {
    "prefix": "fortios_system_fortiguard",
    "description": "Configure FortiGuard services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortiguard:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortiguard: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortimanager": {
    "prefix": "fortios_system_fortimanager",
    "description": "Configure FortiManager in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortimanager:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortimanager: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortindr": {
    "prefix": "fortios_system_fortindr",
    "description": "Configure FortiNDR in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortindr:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortindr: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortisandbox": {
    "prefix": "fortios_system_fortisandbox",
    "description": "Configure FortiSandbox in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortisandbox:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortisandbox: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fsso_polling": {
    "prefix": "fortios_system_fsso_polling",
    "description": "Configure Fortinet Single Sign On (FSSO) server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fsso_polling:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fsso_polling: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ftm_push": {
    "prefix": "fortios_system_ftm_push",
    "description": "Configure FortiToken Mobile push services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ftm_push:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ftm_push: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_geneve": {
    "prefix": "fortios_system_geneve",
    "description": "Configure GENEVE devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_geneve:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_geneve: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_geoip_country": {
    "prefix": "fortios_system_geoip_country",
    "description": "Define geoip country name-ID table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_geoip_country:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_geoip_country: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_geoip_override": {
    "prefix": "fortios_system_geoip_override",
    "description": "Configure geographical location mapping for IP address(es) to override mappings from FortiGuard in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_geoip_override:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_geoip_override: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_gi_gk": {
    "prefix": "fortios_system_gi_gk",
    "description": "Configure Gi Firewall Gatekeeper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_gi_gk:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_gi_gk: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_global": {
    "prefix": "fortios_system_global",
    "description": "Configure global attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_global: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_gre_tunnel": {
    "prefix": "fortios_system_gre_tunnel",
    "description": "Configure GRE tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_gre_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_gre_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ha": {
    "prefix": "fortios_system_ha",
    "description": "Configure HA in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ha:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ha: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ha_monitor": {
    "prefix": "fortios_system_ha_monitor",
    "description": "Configure HA monitor in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ha_monitor:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ha_monitor: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ike": {
    "prefix": "fortios_system_ike",
    "description": "Configure IKE global attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ike:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ike: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_interface": {
    "prefix": "fortios_system_interface",
    "description": "Configure interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_interface: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ipam": {
    "prefix": "fortios_system_ipam",
    "description": "Configure IP address management services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipam:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ipam: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ipip_tunnel": {
    "prefix": "fortios_system_ipip_tunnel",
    "description": "Configure IP in IP Tunneling in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipip_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ipip_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ips": {
    "prefix": "fortios_system_ips",
    "description": "Configure IPS system settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ips:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ips: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ips_urlfilter_dns": {
    "prefix": "fortios_system_ips_urlfilter_dns",
    "description": "Configure IPS URL filter DNS servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ips_urlfilter_dns:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ips_urlfilter_dns: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ips_urlfilter_dns6": {
    "prefix": "fortios_system_ips_urlfilter_dns6",
    "description": "Configure IPS URL filter IPv6 DNS servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ips_urlfilter_dns6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ips_urlfilter_dns6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ipsec_aggregate": {
    "prefix": "fortios_system_ipsec_aggregate",
    "description": "Configure an aggregate of IPsec tunnels in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipsec_aggregate:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ipsec_aggregate: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ipv6_neighbor_cache": {
    "prefix": "fortios_system_ipv6_neighbor_cache",
    "description": "Configure IPv6 neighbor cache table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipv6_neighbor_cache:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ipv6_neighbor_cache: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ipv6_tunnel": {
    "prefix": "fortios_system_ipv6_tunnel",
    "description": "Configure IPv6/IPv4 in IPv6 tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipv6_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ipv6_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_isf_queue_profile": {
    "prefix": "fortios_system_isf_queue_profile",
    "description": "Create a queue profile of switch in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_isf_queue_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_isf_queue_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_link_monitor": {
    "prefix": "fortios_system_link_monitor",
    "description": "Configure Link Health Monitor in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_link_monitor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_link_monitor: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_lldp_network_policy": {
    "prefix": "fortios_system_lldp_network_policy",
    "description": "Configure LLDP network policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_lldp_network_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_lldp_network_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_lte_modem": {
    "prefix": "fortios_system_lte_modem",
    "description": "Configure USB LTE/WIMAX devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_lte_modem:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_lte_modem: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_mac_address_table": {
    "prefix": "fortios_system_mac_address_table",
    "description": "Configure MAC address tables in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_mac_address_table:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_mac_address_table: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_management_tunnel": {
    "prefix": "fortios_system_management_tunnel",
    "description": "Management tunnel configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_management_tunnel:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_management_tunnel: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_mem_mgr": {
    "prefix": "fortios_system_mem_mgr",
    "description": "Configure memory manager in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_mem_mgr:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_mem_mgr: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_mobile_tunnel": {
    "prefix": "fortios_system_mobile_tunnel",
    "description": "Configure Mobile tunnels, an implementation of Network Mobility (NEMO) extensions for Mobile IPv4 RFC5177 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_mobile_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_mobile_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_modem": {
    "prefix": "fortios_system_modem",
    "description": "Configure MODEM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_modem:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_modem: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_nat64": {
    "prefix": "fortios_system_nat64",
    "description": "Configure NAT64 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_nat64:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_nat64: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_nd_proxy": {
    "prefix": "fortios_system_nd_proxy",
    "description": "Configure IPv6 neighbor discovery proxy (RFC4389) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_nd_proxy:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_nd_proxy: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_netflow": {
    "prefix": "fortios_system_netflow",
    "description": "Configure NetFlow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_netflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_netflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_network_visibility": {
    "prefix": "fortios_system_network_visibility",
    "description": "Configure network visibility settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_network_visibility:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_network_visibility: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_np6": {
    "prefix": "fortios_system_np6",
    "description": "Configure NP6 attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_np6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_np6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_npu": {
    "prefix": "fortios_system_npu",
    "description": "Configure NPU attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_npu:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_npu: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ntp": {
    "prefix": "fortios_system_ntp",
    "description": "Configure system NTP information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ntp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ntp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_object_tagging": {
    "prefix": "fortios_system_object_tagging",
    "description": "Configure object tagging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_object_tagging:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_object_tagging: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_password_policy": {
    "prefix": "fortios_system_password_policy",
    "description": "Configure password policy for locally defined administrator passwords and IPsec VPN pre-shared keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_password_policy:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_password_policy: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_password_policy_guest_admin": {
    "prefix": "fortios_system_password_policy_guest_admin",
    "description": "Configure the password policy for guest administrators in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_password_policy_guest_admin:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_password_policy_guest_admin: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_pcp_server": {
    "prefix": "fortios_system_pcp_server",
    "description": "Configure PCP server information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_pcp_server:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_pcp_server: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_performance_top": {
    "prefix": "fortios_system_performance_top",
    "description": "Display information about the top CPU processes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_performance_top:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_performance_top: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_physical_switch": {
    "prefix": "fortios_system_physical_switch",
    "description": "Configure physical switches in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_physical_switch:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_physical_switch: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_pppoe_interface": {
    "prefix": "fortios_system_pppoe_interface",
    "description": "Configure the PPPoE interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_pppoe_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_pppoe_interface: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_probe_response": {
    "prefix": "fortios_system_probe_response",
    "description": "Configure system probe response in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_probe_response:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_probe_response: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_proxy_arp": {
    "prefix": "fortios_system_proxy_arp",
    "description": "Configure proxy-ARP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_proxy_arp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_proxy_arp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ptp": {
    "prefix": "fortios_system_ptp",
    "description": "Configure system PTP information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ptp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ptp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_replacemsg_admin": {
    "prefix": "fortios_system_replacemsg_admin",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_alertmail": {
    "prefix": "fortios_system_replacemsg_alertmail",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_alertmail:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_alertmail: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_auth": {
    "prefix": "fortios_system_replacemsg_auth",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_auth:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_auth: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_automation": {
    "prefix": "fortios_system_replacemsg_automation",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_automation:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_automation: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_device_detection_portal": {
    "prefix": "fortios_system_replacemsg_device_detection_portal",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_device_detection_portal:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_device_detection_portal: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_ec": {
    "prefix": "fortios_system_replacemsg_ec",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_ec:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_ec: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_fortiguard_wf": {
    "prefix": "fortios_system_replacemsg_fortiguard_wf",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_fortiguard_wf:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_fortiguard_wf: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_ftp": {
    "prefix": "fortios_system_replacemsg_ftp",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_ftp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_ftp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_group": {
    "prefix": "fortios_system_replacemsg_group",
    "description": "Configure replacement message groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_http": {
    "prefix": "fortios_system_replacemsg_http",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_http:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_http: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_icap": {
    "prefix": "fortios_system_replacemsg_icap",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_icap:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_icap: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_image": {
    "prefix": "fortios_system_replacemsg_image",
    "description": "Configure replacement message images in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_image:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_image: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mail": {
    "prefix": "fortios_system_replacemsg_mail",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mail:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mail: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mm1": {
    "prefix": "fortios_system_replacemsg_mm1",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mm1:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mm1: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mm3": {
    "prefix": "fortios_system_replacemsg_mm3",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mm3:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mm3: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mm4": {
    "prefix": "fortios_system_replacemsg_mm4",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mm4:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mm4: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mm7": {
    "prefix": "fortios_system_replacemsg_mm7",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mm7:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mm7: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mms": {
    "prefix": "fortios_system_replacemsg_mms",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mms:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mms: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_nac_quar": {
    "prefix": "fortios_system_replacemsg_nac_quar",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_nac_quar:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_nac_quar: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_nntp": {
    "prefix": "fortios_system_replacemsg_nntp",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_nntp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_nntp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_spam": {
    "prefix": "fortios_system_replacemsg_spam",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_spam:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_spam: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_sslvpn": {
    "prefix": "fortios_system_replacemsg_sslvpn",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_sslvpn:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_sslvpn: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_traffic_quota": {
    "prefix": "fortios_system_replacemsg_traffic_quota",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_traffic_quota:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_traffic_quota: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_utm": {
    "prefix": "fortios_system_replacemsg_utm",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_utm:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_utm: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_webproxy": {
    "prefix": "fortios_system_replacemsg_webproxy",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_webproxy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_webproxy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_resource_limits": {
    "prefix": "fortios_system_resource_limits",
    "description": "Configure resource limits in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_resource_limits:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_resource_limits: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_saml": {
    "prefix": "fortios_system_saml",
    "description": "Global settings for SAML authentication in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_saml:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_saml: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sdn_connector": {
    "prefix": "fortios_system_sdn_connector",
    "description": "Configure connection to SDN Connector in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sdn_connector:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sdn_connector: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_sdn_proxy": {
    "prefix": "fortios_system_sdn_proxy",
    "description": "Configure SDN proxy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sdn_proxy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sdn_proxy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_sdwan": {
    "prefix": "fortios_system_sdwan",
    "description": "Configure redundant Internet connections with multiple outbound links and health-check profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sdwan:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_sdwan: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_session_helper": {
    "prefix": "fortios_system_session_helper",
    "description": "Configure session helper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_session_helper:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_session_helper: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_session_ttl": {
    "prefix": "fortios_system_session_ttl",
    "description": "Configure global session TTL timers for this FortiGate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_session_ttl:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_session_ttl: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_settings": {
    "prefix": "fortios_system_settings",
    "description": "Configure VDOM settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sflow": {
    "prefix": "fortios_system_sflow",
    "description": "Configure sFlow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_sflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sit_tunnel": {
    "prefix": "fortios_system_sit_tunnel",
    "description": "Configure IPv6 tunnel over IPv4 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sit_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sit_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_smc_ntp": {
    "prefix": "fortios_system_smc_ntp",
    "description": "Configure SMC NTP information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_smc_ntp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_smc_ntp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sms_server": {
    "prefix": "fortios_system_sms_server",
    "description": "Configure SMS server for sending SMS messages to support user authentication in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sms_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sms_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_snmp_community": {
    "prefix": "fortios_system_snmp_community",
    "description": "SNMP community configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_snmp_community:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_snmp_community: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_snmp_mib_view": {
    "prefix": "fortios_system_snmp_mib_view",
    "description": "SNMP Access Control MIB View configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_snmp_mib_view:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_snmp_mib_view: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_snmp_sysinfo": {
    "prefix": "fortios_system_snmp_sysinfo",
    "description": "SNMP system info configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_snmp_sysinfo:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_snmp_sysinfo: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_snmp_user": {
    "prefix": "fortios_system_snmp_user",
    "description": "SNMP user configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_snmp_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_snmp_user: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_speed_test_schedule": {
    "prefix": "fortios_system_speed_test_schedule",
    "description": "Speed test schedule for each interface in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_speed_test_schedule:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_speed_test_schedule: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_speed_test_server": {
    "prefix": "fortios_system_speed_test_server",
    "description": "Configure speed test server list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_speed_test_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_speed_test_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_speed_test_setting": {
    "prefix": "fortios_system_speed_test_setting",
    "description": "Configure speed test setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_speed_test_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_speed_test_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sso_admin": {
    "prefix": "fortios_system_sso_admin",
    "description": "Configure SSO admin users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sso_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sso_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_sso_forticloud_admin": {
    "prefix": "fortios_system_sso_forticloud_admin",
    "description": "Configure FortiCloud SSO admin users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sso_forticloud_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sso_forticloud_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_sso_fortigate_cloud_admin": {
    "prefix": "fortios_system_sso_fortigate_cloud_admin",
    "description": "Configure FortiCloud SSO admin users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sso_fortigate_cloud_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sso_fortigate_cloud_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_standalone_cluster": {
    "prefix": "fortios_system_standalone_cluster",
    "description": "Configure FortiGate Session Life Support Protocol (FGSP) cluster attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_standalone_cluster:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_standalone_cluster: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_storage": {
    "prefix": "fortios_system_storage",
    "description": "Configure logical storage in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_storage:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_storage: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_stp": {
    "prefix": "fortios_system_stp",
    "description": "Configure Spanning Tree Protocol (STP) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_stp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_stp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_switch_interface": {
    "prefix": "fortios_system_switch_interface",
    "description": "Configure software switch interfaces by grouping physical and WiFi interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_switch_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_switch_interface: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_tos_based_priority": {
    "prefix": "fortios_system_tos_based_priority",
    "description": "Configure Type of Service (ToS) based priority table to set network traffic priorities in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_tos_based_priority:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_tos_based_priority: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom": {
    "prefix": "fortios_system_vdom",
    "description": "Configure virtual domain in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_dns": {
    "prefix": "fortios_system_vdom_dns",
    "description": "Configure DNS servers for a non-management VDOM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_dns:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_vdom_dns: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_vdom_exception": {
    "prefix": "fortios_system_vdom_exception",
    "description": "Global configuration objects that can be configured independently across different ha peers for all VDOMs or for the defined VDOM scope in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_exception:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom_exception: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_link": {
    "prefix": "fortios_system_vdom_link",
    "description": "Configure VDOM links in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_link:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom_link: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_netflow": {
    "prefix": "fortios_system_vdom_netflow",
    "description": "Configure NetFlow per VDOM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_netflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_vdom_netflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_vdom_property": {
    "prefix": "fortios_system_vdom_property",
    "description": "Configure VDOM property in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_property:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom_property: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_radius_server": {
    "prefix": "fortios_system_vdom_radius_server",
    "description": "Configure a RADIUS server to use as a RADIUS Single Sign On (RSSO) server for this VDOM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_radius_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom_radius_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_sflow": {
    "prefix": "fortios_system_vdom_sflow",
    "description": "Configure sFlow per VDOM to add or change the IP address and UDP port that FortiGate sFlow agents in this VDOM use to send sFlow datagrams to an sFlow collector in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_sflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_vdom_sflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_virtual_switch": {
    "prefix": "fortios_system_virtual_switch",
    "description": "Configure virtual hardware switch interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_virtual_switch:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_virtual_switch: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_virtual_wan_link": {
    "prefix": "fortios_system_virtual_wan_link",
    "description": "Configure redundant internet connections using SD-WAN (formerly virtual WAN link) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_virtual_wan_link:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_virtual_wan_link: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_virtual_wire_pair": {
    "prefix": "fortios_system_virtual_wire_pair",
    "description": "Configure virtual wire pairs in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_virtual_wire_pair:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_virtual_wire_pair: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vne_tunnel": {
    "prefix": "fortios_system_vne_tunnel",
    "description": "Configure virtual network enabler tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vne_tunnel:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_vne_tunnel: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_vxlan": {
    "prefix": "fortios_system_vxlan",
    "description": "Configure VXLAN devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vxlan:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vxlan: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_wccp": {
    "prefix": "fortios_system_wccp",
    "description": "Configure WCCP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_wccp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_wccp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_zone": {
    "prefix": "fortios_system_zone",
    "description": "Configure zones to group two or more interfaces. When a zone is created you can configure policies for the zone instead of individual interfaces in the zone in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_zone:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_zone: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_adgrp": {
    "prefix": "fortios_user_adgrp",
    "description": "Configure FSSO groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_adgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_adgrp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_certificate": {
    "prefix": "fortios_user_certificate",
    "description": "Configure certificate users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_certificate:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_certificate: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_device": {
    "prefix": "fortios_user_device",
    "description": "Configure devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_device:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_device: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_device_access_list": {
    "prefix": "fortios_user_device_access_list",
    "description": "Configure device access control lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_device_access_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_device_access_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_device_category": {
    "prefix": "fortios_user_device_category",
    "description": "Configure device categories in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_device_category:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_device_category: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_device_group": {
    "prefix": "fortios_user_device_group",
    "description": "Configure device groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_device_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_device_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_domain_controller": {
    "prefix": "fortios_user_domain_controller",
    "description": "Configure domain controller entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_domain_controller:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_domain_controller: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_exchange": {
    "prefix": "fortios_user_exchange",
    "description": "Configure MS Exchange server entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_exchange:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_exchange: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_fortitoken": {
    "prefix": "fortios_user_fortitoken",
    "description": "Configure FortiToken in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_fortitoken:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_fortitoken: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_fsso": {
    "prefix": "fortios_user_fsso",
    "description": "Configure Fortinet Single Sign On (FSSO) agents in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_fsso:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_fsso: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_fsso_polling": {
    "prefix": "fortios_user_fsso_polling",
    "description": "Configure FSSO active directory servers for polling mode in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_fsso_polling:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_fsso_polling: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_group": {
    "prefix": "fortios_user_group",
    "description": "Configure user groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_krb_keytab": {
    "prefix": "fortios_user_krb_keytab",
    "description": "Configure Kerberos keytab entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_krb_keytab:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_krb_keytab: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_ldap": {
    "prefix": "fortios_user_ldap",
    "description": "Configure LDAP server entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_ldap:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_ldap: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_local": {
    "prefix": "fortios_user_local",
    "description": "Configure local users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_local:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_local: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_nac_policy": {
    "prefix": "fortios_user_nac_policy",
    "description": "Configure NAC policy matching pattern to identify matching NAC devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_nac_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_nac_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_password_policy": {
    "prefix": "fortios_user_password_policy",
    "description": "Configure user password policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_password_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_password_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_peer": {
    "prefix": "fortios_user_peer",
    "description": "Configure peer users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_peer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_peer: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_peergrp": {
    "prefix": "fortios_user_peergrp",
    "description": "Configure peer groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_peergrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_peergrp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_pop3": {
    "prefix": "fortios_user_pop3",
    "description": "POP3 server entry configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_pop3:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_pop3: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_quarantine": {
    "prefix": "fortios_user_quarantine",
    "description": "Configure quarantine support in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_quarantine:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#user_quarantine: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_user_radius": {
    "prefix": "fortios_user_radius",
    "description": "Configure RADIUS server entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_radius:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_radius: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_saml": {
    "prefix": "fortios_user_saml",
    "description": "SAML server entry configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_saml:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_saml: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_security_exempt_list": {
    "prefix": "fortios_user_security_exempt_list",
    "description": "Configure security exemption list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_security_exempt_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_security_exempt_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_setting": {
    "prefix": "fortios_user_setting",
    "description": "Configure user authentication setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#user_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_user_tacacsplus": {
    "prefix": "fortios_user_tacacsplus",
    "description": "Configure TACACS+ server entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_tacacsplus:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_tacacsplus: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_videofilter_profile": {
    "prefix": "fortios_videofilter_profile",
    "description": "Configure VideoFilter profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_videofilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#videofilter_profile: ${7:}"
    ]
  },
  "fortios_videofilter_youtube_channel_filter": {
    "prefix": "fortios_videofilter_youtube_channel_filter",
    "description": "Configure YouTube channel filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_videofilter_youtube_channel_filter:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#videofilter_youtube_channel_filter: ${7:}"
    ]
  },
  "fortios_videofilter_youtube_key": {
    "prefix": "fortios_videofilter_youtube_key",
    "description": "Configure YouTube API keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_videofilter_youtube_key:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#videofilter_youtube_key: ${7:}"
    ]
  },
  "fortios_virtual_patch_profile": {
    "prefix": "fortios_virtual_patch_profile",
    "description": "Configure virtual-patch profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_virtual_patch_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#virtual_patch_profile: ${7:}"
    ]
  },
  "fortios_voip_profile": {
    "prefix": "fortios_voip_profile",
    "description": "Configure VoIP profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_voip_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#voip_profile: ${7:}"
    ]
  },
  "fortios_vpn_certificate_ca": {
    "prefix": "fortios_vpn_certificate_ca",
    "description": "CA certificate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_ca:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_ca: ${7:}"
    ]
  },
  "fortios_vpn_certificate_crl": {
    "prefix": "fortios_vpn_certificate_crl",
    "description": "Certificate Revocation List as a PEM file in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_crl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_crl: ${7:}"
    ]
  },
  "fortios_vpn_certificate_local": {
    "prefix": "fortios_vpn_certificate_local",
    "description": "Local keys and certificates in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_local:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_local: ${7:}"
    ]
  },
  "fortios_vpn_certificate_ocsp_server": {
    "prefix": "fortios_vpn_certificate_ocsp_server",
    "description": "OCSP server configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_ocsp_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_ocsp_server: ${7:}"
    ]
  },
  "fortios_vpn_certificate_remote": {
    "prefix": "fortios_vpn_certificate_remote",
    "description": "Remote certificate as a PEM file in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_remote:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_remote: ${7:}"
    ]
  },
  "fortios_vpn_certificate_setting": {
    "prefix": "fortios_vpn_certificate_setting",
    "description": "VPN certificate setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_certificate_setting: ${6:}"
    ]
  },
  "fortios_vpn_ike_gateway": {
    "prefix": "fortios_vpn_ike_gateway",
    "description": "List gateways in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ike_gateway:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_ike_gateway: ${6:}"
    ]
  },
  "fortios_vpn_ipsec_concentrator": {
    "prefix": "fortios_vpn_ipsec_concentrator",
    "description": "Concentrator configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_concentrator:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_concentrator: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_fec": {
    "prefix": "fortios_vpn_ipsec_fec",
    "description": "Configure Forward Error Correction (FEC) mapping profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_fec:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_fec: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_forticlient": {
    "prefix": "fortios_vpn_ipsec_forticlient",
    "description": "Configure FortiClient policy realm in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_forticlient:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_forticlient: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_manualkey": {
    "prefix": "fortios_vpn_ipsec_manualkey",
    "description": "Configure IPsec manual keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_manualkey:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_manualkey: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_manualkey_interface": {
    "prefix": "fortios_vpn_ipsec_manualkey_interface",
    "description": "Configure IPsec manual keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_manualkey_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_manualkey_interface: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_phase1": {
    "prefix": "fortios_vpn_ipsec_phase1",
    "description": "Configure VPN remote gateway in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_phase1:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_phase1: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_phase1_interface": {
    "prefix": "fortios_vpn_ipsec_phase1_interface",
    "description": "Configure VPN remote gateway in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_phase1_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_phase1_interface: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_phase2": {
    "prefix": "fortios_vpn_ipsec_phase2",
    "description": "Configure VPN autokey tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_phase2:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_phase2: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_phase2_interface": {
    "prefix": "fortios_vpn_ipsec_phase2_interface",
    "description": "Configure VPN autokey tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_phase2_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_phase2_interface: ${7:}"
    ]
  },
  "fortios_vpn_kmip_server": {
    "prefix": "fortios_vpn_kmip_server",
    "description": "KMIP server entry configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_kmip_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_kmip_server: ${7:}"
    ]
  },
  "fortios_vpn_l2tp": {
    "prefix": "fortios_vpn_l2tp",
    "description": "Configure L2TP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_l2tp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_l2tp: ${6:}"
    ]
  },
  "fortios_vpn_ocvpn": {
    "prefix": "fortios_vpn_ocvpn",
    "description": "Configure Overlay Controller VPN settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ocvpn:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_ocvpn: ${6:}"
    ]
  },
  "fortios_vpn_pptp": {
    "prefix": "fortios_vpn_pptp",
    "description": "Configure PPTP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_pptp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_pptp: ${6:}"
    ]
  },
  "fortios_vpn_ssl_client": {
    "prefix": "fortios_vpn_ssl_client",
    "description": "Client in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_client:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_client: ${7:}"
    ]
  },
  "fortios_vpn_ssl_settings": {
    "prefix": "fortios_vpn_ssl_settings",
    "description": "Configure SSL-VPN in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_ssl_settings: ${6:}"
    ]
  },
  "fortios_vpn_ssl_web_host_check_software": {
    "prefix": "fortios_vpn_ssl_web_host_check_software",
    "description": "SSL-VPN host check software in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_host_check_software:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_host_check_software: ${7:}"
    ]
  },
  "fortios_vpn_ssl_web_portal": {
    "prefix": "fortios_vpn_ssl_web_portal",
    "description": "Portal in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_portal:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_portal: ${7:}"
    ]
  },
  "fortios_vpn_ssl_web_realm": {
    "prefix": "fortios_vpn_ssl_web_realm",
    "description": "Realm in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_realm:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_realm: ${7:}"
    ]
  },
  "fortios_vpn_ssl_web_user_bookmark": {
    "prefix": "fortios_vpn_ssl_web_user_bookmark",
    "description": "Configure SSL-VPN user bookmark in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_user_bookmark:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_user_bookmark: ${7:}"
    ]
  },
  "fortios_vpn_ssl_web_user_group_bookmark": {
    "prefix": "fortios_vpn_ssl_web_user_group_bookmark",
    "description": "Configure SSL-VPN user group bookmark in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_user_group_bookmark:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_user_group_bookmark: ${7:}"
    ]
  },
  "fortios_waf_main_class": {
    "prefix": "fortios_waf_main_class",
    "description": "Hidden table for datasource in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_waf_main_class:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#waf_main_class: ${7:}"
    ]
  },
  "fortios_waf_profile": {
    "prefix": "fortios_waf_profile",
    "description": "Configure Web application firewall configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_waf_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#waf_profile: ${7:}"
    ]
  },
  "fortios_waf_signature": {
    "prefix": "fortios_waf_signature",
    "description": "Hidden table for datasource in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_waf_signature:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#waf_signature: ${7:}"
    ]
  },
  "fortios_waf_sub_class": {
    "prefix": "fortios_waf_sub_class",
    "description": "Hidden table for datasource in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_waf_sub_class:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#waf_sub_class: ${7:}"
    ]
  },
  "fortios_wanopt_auth_group": {
    "prefix": "fortios_wanopt_auth_group",
    "description": "Configure WAN optimization authentication groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_auth_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wanopt_auth_group: ${7:}"
    ]
  },
  "fortios_wanopt_cache_service": {
    "prefix": "fortios_wanopt_cache_service",
    "description": "Designate cache-service for wan-optimization and webcache in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_cache_service:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wanopt_cache_service: ${6:}"
    ]
  },
  "fortios_wanopt_content_delivery_network_rule": {
    "prefix": "fortios_wanopt_content_delivery_network_rule",
    "description": "Configure WAN optimization content delivery network rules in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_content_delivery_network_rule:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wanopt_content_delivery_network_rule: ${7:}"
    ]
  },
  "fortios_wanopt_peer": {
    "prefix": "fortios_wanopt_peer",
    "description": "Configure WAN optimization peers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_peer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wanopt_peer: ${7:}"
    ]
  },
  "fortios_wanopt_profile": {
    "prefix": "fortios_wanopt_profile",
    "description": "Configure WAN optimization profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wanopt_profile: ${7:}"
    ]
  },
  "fortios_wanopt_remote_storage": {
    "prefix": "fortios_wanopt_remote_storage",
    "description": "Configure a remote cache device as Web cache storage in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_remote_storage:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wanopt_remote_storage: ${6:}"
    ]
  },
  "fortios_wanopt_settings": {
    "prefix": "fortios_wanopt_settings",
    "description": "Configure WAN optimization settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wanopt_settings: ${6:}"
    ]
  },
  "fortios_wanopt_webcache": {
    "prefix": "fortios_wanopt_webcache",
    "description": "Configure global Web cache settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_webcache:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wanopt_webcache: ${6:}"
    ]
  },
  "fortios_web_proxy_debug_url": {
    "prefix": "fortios_web_proxy_debug_url",
    "description": "Configure debug URL addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_debug_url:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_debug_url: ${7:}"
    ]
  },
  "fortios_web_proxy_explicit": {
    "prefix": "fortios_web_proxy_explicit",
    "description": "Configure explicit Web proxy settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_explicit:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#web_proxy_explicit: ${6:}"
    ]
  },
  "fortios_web_proxy_fast_fallback": {
    "prefix": "fortios_web_proxy_fast_fallback",
    "description": "Proxy destination connection fast-fallback in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_fast_fallback:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_fast_fallback: ${7:}"
    ]
  },
  "fortios_web_proxy_forward_server": {
    "prefix": "fortios_web_proxy_forward_server",
    "description": "Configure forward-server addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_forward_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_forward_server: ${7:}"
    ]
  },
  "fortios_web_proxy_forward_server_group": {
    "prefix": "fortios_web_proxy_forward_server_group",
    "description": "Configure a forward server group consisting or multiple forward servers. Supports failover and load balancing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_forward_server_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_forward_server_group: ${7:}"
    ]
  },
  "fortios_web_proxy_global": {
    "prefix": "fortios_web_proxy_global",
    "description": "Configure Web proxy global settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#web_proxy_global: ${6:}"
    ]
  },
  "fortios_web_proxy_profile": {
    "prefix": "fortios_web_proxy_profile",
    "description": "Configure web proxy profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_profile: ${7:}"
    ]
  },
  "fortios_web_proxy_url_match": {
    "prefix": "fortios_web_proxy_url_match",
    "description": "Exempt URLs from web proxy forwarding and caching in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_url_match:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_url_match: ${7:}"
    ]
  },
  "fortios_web_proxy_wisp": {
    "prefix": "fortios_web_proxy_wisp",
    "description": "Configure Websense Integrated Services Protocol (WISP) servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_wisp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_wisp: ${7:}"
    ]
  },
  "fortios_webfilter_content": {
    "prefix": "fortios_webfilter_content",
    "description": "Configure Web filter banned word table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_content:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_content: ${7:}"
    ]
  },
  "fortios_webfilter_content_header": {
    "prefix": "fortios_webfilter_content_header",
    "description": "Configure content types used by Web filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_content_header:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_content_header: ${7:}"
    ]
  },
  "fortios_webfilter_fortiguard": {
    "prefix": "fortios_webfilter_fortiguard",
    "description": "Configure FortiGuard Web Filter service in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_fortiguard:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_fortiguard: ${6:}"
    ]
  },
  "fortios_webfilter_ftgd_local_cat": {
    "prefix": "fortios_webfilter_ftgd_local_cat",
    "description": "Configure FortiGuard Web Filter local categories in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ftgd_local_cat:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_ftgd_local_cat: ${7:}"
    ]
  },
  "fortios_webfilter_ftgd_local_rating": {
    "prefix": "fortios_webfilter_ftgd_local_rating",
    "description": "Configure local FortiGuard Web Filter local ratings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ftgd_local_rating:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_ftgd_local_rating: ${7:}"
    ]
  },
  "fortios_webfilter_ips_urlfilter_cache_setting": {
    "prefix": "fortios_webfilter_ips_urlfilter_cache_setting",
    "description": "Configure IPS URL filter cache settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ips_urlfilter_cache_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_ips_urlfilter_cache_setting: ${6:}"
    ]
  },
  "fortios_webfilter_ips_urlfilter_setting": {
    "prefix": "fortios_webfilter_ips_urlfilter_setting",
    "description": "Configure IPS URL filter settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ips_urlfilter_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_ips_urlfilter_setting: ${6:}"
    ]
  },
  "fortios_webfilter_ips_urlfilter_setting6": {
    "prefix": "fortios_webfilter_ips_urlfilter_setting6",
    "description": "Configure IPS URL filter settings for IPv6 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ips_urlfilter_setting6:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_ips_urlfilter_setting6: ${6:}"
    ]
  },
  "fortios_webfilter_override": {
    "prefix": "fortios_webfilter_override",
    "description": "Configure FortiGuard Web Filter administrative overrides in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_override:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_override: ${7:}"
    ]
  },
  "fortios_webfilter_profile": {
    "prefix": "fortios_webfilter_profile",
    "description": "Configure Web filter profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_profile: ${7:}"
    ]
  },
  "fortios_webfilter_search_engine": {
    "prefix": "fortios_webfilter_search_engine",
    "description": "Configure web filter search engines in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_search_engine:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_search_engine: ${7:}"
    ]
  },
  "fortios_webfilter_status": {
    "prefix": "fortios_webfilter_status",
    "description": "Display rating info in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_status: ${6:}"
    ]
  },
  "fortios_webfilter_urlfilter": {
    "prefix": "fortios_webfilter_urlfilter",
    "description": "Configure URL filter lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_urlfilter:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_urlfilter: ${7:}"
    ]
  },
  "fortios_wireless_controller_access_control_list": {
    "prefix": "fortios_wireless_controller_access_control_list",
    "description": "Configure WiFi bridge access control list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_access_control_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_access_control_list: ${7:}"
    ]
  },
  "fortios_wireless_controller_address": {
    "prefix": "fortios_wireless_controller_address",
    "description": "Configure the client with its MAC address in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_address:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_address: ${7:}"
    ]
  },
  "fortios_wireless_controller_addrgrp": {
    "prefix": "fortios_wireless_controller_addrgrp",
    "description": "Configure the MAC address group in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_addrgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_addrgrp: ${7:}"
    ]
  },
  "fortios_wireless_controller_ap_status": {
    "prefix": "fortios_wireless_controller_ap_status",
    "description": "Configure access point status (rogue | accepted | suppressed) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_ap_status:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_ap_status: ${7:}"
    ]
  },
  "fortios_wireless_controller_apcfg_profile": {
    "prefix": "fortios_wireless_controller_apcfg_profile",
    "description": "Configure AP local configuration profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_apcfg_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_apcfg_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_arrp_profile": {
    "prefix": "fortios_wireless_controller_arrp_profile",
    "description": "Configure WiFi Automatic Radio Resource Provisioning (ARRP) profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_arrp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_arrp_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_ble_profile": {
    "prefix": "fortios_wireless_controller_ble_profile",
    "description": "Configure Bluetooth Low Energy profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_ble_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_ble_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_bonjour_profile": {
    "prefix": "fortios_wireless_controller_bonjour_profile",
    "description": "Configure Bonjour profiles. Bonjour is Apple's zero configuration networking protocol. Bonjour profiles allow APs and FortiAPs to connnect to networks using Bonjour in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_bonjour_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_bonjour_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_client_info": {
    "prefix": "fortios_wireless_controller_client_info",
    "description": "Wireless controller client-info in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_client_info:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_client_info: ${6:}"
    ]
  },
  "fortios_wireless_controller_global": {
    "prefix": "fortios_wireless_controller_global",
    "description": "Configure wireless controller global settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_global: ${6:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_3gpp_cellular": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_3gpp_cellular",
    "description": "Configure 3GPP public land mobile network (PLMN) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_3gpp_cellular:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_3gpp_cellular: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_ip_address_type": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_ip_address_type",
    "description": "Configure IP address type availability in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_ip_address_type:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_ip_address_type: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_nai_realm": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_nai_realm",
    "description": "Configure network access identifier (NAI) realm in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_nai_realm:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_nai_realm: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_network_auth_type": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_network_auth_type",
    "description": "Configure network authentication type in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_network_auth_type:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_network_auth_type: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_roaming_consortium": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_roaming_consortium",
    "description": "Configure roaming consortium in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_roaming_consortium:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_roaming_consortium: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_venue_name": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_venue_name",
    "description": "Configure venue name duple in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_venue_name:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_venue_name: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_venue_url": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_venue_url",
    "description": "Configure venue URL in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_venue_url:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_venue_url: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_advice_of_charge": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_advice_of_charge",
    "description": "Configure advice of charge in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_advice_of_charge:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_advice_of_charge: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_conn_capability": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_conn_capability",
    "description": "Configure connection capability in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_conn_capability:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_conn_capability: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_operator_name": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_operator_name",
    "description": "Configure operator friendly name in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_operator_name:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_operator_name: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_osu_provider": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_osu_provider",
    "description": "Configure online sign up (OSU) provider list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_osu_provider:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_osu_provider: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_osu_provider_nai": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_osu_provider_nai",
    "description": "Configure online sign up (OSU) provider NAI list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_osu_provider_nai:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_osu_provider_nai: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_terms_and_conditions": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_terms_and_conditions",
    "description": "Configure terms and conditions in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_terms_and_conditions:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_terms_and_conditions: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_wan_metric": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_wan_metric",
    "description": "Configure WAN metrics in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_wan_metric:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_wan_metric: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_hs_profile": {
    "prefix": "fortios_wireless_controller_hotspot20_hs_profile",
    "description": "Configure hotspot profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_hs_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_hs_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_icon": {
    "prefix": "fortios_wireless_controller_hotspot20_icon",
    "description": "Configure OSU provider icon in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_icon:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_icon: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_qos_map": {
    "prefix": "fortios_wireless_controller_hotspot20_qos_map",
    "description": "Configure QoS map set in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_qos_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_qos_map: ${7:}"
    ]
  },
  "fortios_wireless_controller_inter_controller": {
    "prefix": "fortios_wireless_controller_inter_controller",
    "description": "Configure inter wireless controller operation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_inter_controller:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_inter_controller: ${6:}"
    ]
  },
  "fortios_wireless_controller_log": {
    "prefix": "fortios_wireless_controller_log",
    "description": "Configure wireless controller event log filters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_log:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_log: ${6:}"
    ]
  },
  "fortios_wireless_controller_mpsk_profile": {
    "prefix": "fortios_wireless_controller_mpsk_profile",
    "description": "Configure MPSK profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_mpsk_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_mpsk_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_nac_profile": {
    "prefix": "fortios_wireless_controller_nac_profile",
    "description": "Configure WiFi network access control (NAC) profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_nac_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_nac_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_qos_profile": {
    "prefix": "fortios_wireless_controller_qos_profile",
    "description": "Configure WiFi quality of service (QoS) profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_qos_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_qos_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_region": {
    "prefix": "fortios_wireless_controller_region",
    "description": "Configure FortiAP regions (for floor plans and maps) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_region:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_region: ${7:}"
    ]
  },
  "fortios_wireless_controller_rf_analysis": {
    "prefix": "fortios_wireless_controller_rf_analysis",
    "description": "Wireless controller rf-analysis in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_rf_analysis:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_rf_analysis: ${6:}"
    ]
  },
  "fortios_wireless_controller_setting": {
    "prefix": "fortios_wireless_controller_setting",
    "description": "VDOM wireless controller configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_setting: ${6:}"
    ]
  },
  "fortios_wireless_controller_snmp": {
    "prefix": "fortios_wireless_controller_snmp",
    "description": "Configure SNMP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_snmp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_snmp: ${6:}"
    ]
  },
  "fortios_wireless_controller_spectral_info": {
    "prefix": "fortios_wireless_controller_spectral_info",
    "description": "Wireless controller spectrum analysis in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_spectral_info:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_spectral_info: ${6:}"
    ]
  },
  "fortios_wireless_controller_ssid_policy": {
    "prefix": "fortios_wireless_controller_ssid_policy",
    "description": "Configure WiFi SSID policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_ssid_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_ssid_policy: ${7:}"
    ]
  },
  "fortios_wireless_controller_status": {
    "prefix": "fortios_wireless_controller_status",
    "description": "Wireless controller status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_status: ${6:}"
    ]
  },
  "fortios_wireless_controller_syslog_profile": {
    "prefix": "fortios_wireless_controller_syslog_profile",
    "description": "Configure Wireless Termination Points (WTP) system log server profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_syslog_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_syslog_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_timers": {
    "prefix": "fortios_wireless_controller_timers",
    "description": "Configure CAPWAP timers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_timers:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_timers: ${6:}"
    ]
  },
  "fortios_wireless_controller_utm_profile": {
    "prefix": "fortios_wireless_controller_utm_profile",
    "description": "Configure UTM (Unified Threat Management) profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_utm_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_utm_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_vap": {
    "prefix": "fortios_wireless_controller_vap",
    "description": "Configure Virtual Access Points (VAPs) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_vap:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_vap: ${7:}"
    ]
  },
  "fortios_wireless_controller_vap_group": {
    "prefix": "fortios_wireless_controller_vap_group",
    "description": "Configure virtual Access Point (VAP) groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_vap_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_vap_group: ${7:}"
    ]
  },
  "fortios_wireless_controller_vap_status": {
    "prefix": "fortios_wireless_controller_vap_status",
    "description": "Wireless controller VAP-status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_vap_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_vap_status: ${6:}"
    ]
  },
  "fortios_wireless_controller_wag_profile": {
    "prefix": "fortios_wireless_controller_wag_profile",
    "description": "Configure wireless access gateway (WAG) profiles used for tunnels on AP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wag_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wag_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_wids_profile": {
    "prefix": "fortios_wireless_controller_wids_profile",
    "description": "Configure wireless intrusion detection system (WIDS) profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wids_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wids_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_wtp": {
    "prefix": "fortios_wireless_controller_wtp",
    "description": "Configure Wireless Termination Points (WTPs), that is, FortiAPs or APs to be managed by FortiGate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wtp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wtp: ${7:}"
    ]
  },
  "fortios_wireless_controller_wtp_group": {
    "prefix": "fortios_wireless_controller_wtp_group",
    "description": "Configure WTP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wtp_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wtp_group: ${7:}"
    ]
  },
  "fortios_wireless_controller_wtp_profile": {
    "prefix": "fortios_wireless_controller_wtp_profile",
    "description": "Configure WTP profiles or FortiAP profiles that define radio settings for manageable FortiAP platforms in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wtp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wtp_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_wtp_status": {
    "prefix": "fortios_wireless_controller_wtp_status",
    "description": "Wireless controller WTP-status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wtp_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_wtp_status: ${6:}"
    ]
  },
  "frr_bgp": {
    "prefix": "frr_bgp",
    "description": "Configure global BGP settings on Free Range Routing(FRR).",
    "body": [
      "frr.frr.frr_bgp:",
      "\t#config: ${1:}",
      "\t#operation: ${2:#merge|replace|override|delete}"
    ]
  },
  "frr_facts": {
    "prefix": "frr_facts",
    "description": "Collect facts from remote devices running Free Range Routing (FRR).",
    "body": [
      "frr.frr.frr_facts:",
      "\t#gather_subset: ${1:!config}"
    ]
  },
  "geo_rep": {
    "prefix": "geo_rep",
    "description": "Manage geo-replication sessions",
    "body": [
      "gluster.gluster.geo_rep:",
      "\taction: ${1:create|start|stop|delete|pause|resume|config}",
      "\t#changelog_log_level: ${2:}",
      "\t#checkpoint: ${3:}",
      "\t#force: ${4:}",
      "\t#georepuser: ${5:}",
      "\t#gluster_log_file: ${6:}",
      "\t#gluster_log_level: ${7:}",
      "\t#ignore_deletes: ${8:}",
      "\t#log_file: ${9:}",
      "\t#log_level: ${10:}",
      "\t#log_rsync_performance: ${11:}",
      "\t#mastervol: ${12:}",
      "\t#meta_volume_mnt: ${13:}",
      "\t#rsync_command: ${14:}",
      "\t#rsync_options: ${15:}",
      "\t#slavevol: ${16:}",
      "\t#ssh_command: ${17:}",
      "\t#sync_acls: ${18:}",
      "\t#sync_jobs: ${19:}",
      "\t#sync_xattrs: ${20:}",
      "\t#timeout: ${21:}",
      "\t#use_meta_volume: ${22:}",
      "\t#use_tarssh: ${23:}",
      "\t#volume_id: ${24:}"
    ]
  },
  "gluster_heal_info": {
    "prefix": "gluster_heal_info",
    "description": "Gather information on self-heal or rebalance status",
    "body": [
      "gluster.gluster.gluster_heal_info:",
      "\tname: ${1:}",
      "\t#status_filter: ${2:#self-heal|rebalance}"
    ]
  },
  "gluster_peer": {
    "prefix": "gluster_peer",
    "description": "Attach/Detach peers to/from the cluster",
    "body": [
      "gluster.gluster.gluster_peer:",
      "\tnodes: ${1:}",
      "\tstate: ${2:#present|absent}",
      "\t#force: ${3:false}"
    ]
  },
  "gluster_volume": {
    "prefix": "gluster_volume",
    "description": "Manage GlusterFS volumes",
    "body": [
      "gluster.gluster.gluster_volume:",
      "\tname: ${1:}",
      "\tstate: ${2:absent|present|started|stopped}",
      "\t#arbiters: ${3:}",
      "\t#bricks: ${4:}",
      "\t#cluster: ${5:}",
      "\t#directory: ${6:}",
      "\t#disperses: ${7:}",
      "\t#force: ${8:}",
      "\t#host: ${9:}",
      "\t#options: ${10:}",
      "\t#quota: ${11:}",
      "\t#rebalance: ${12:false}",
      "\t#redundancies: ${13:}",
      "\t#replicas: ${14:}",
      "\t#start_on_create: ${15:true}",
      "\t#stripes: ${16:}",
      "\t#transport: ${17:#tcp|rdma|tcp,rdma}"
    ]
  },
  "gcp_appengine_firewall_rule": {
    "prefix": "gcp_appengine_firewall_rule",
    "description": "Creates a GCP FirewallRule",
    "body": [
      "google.cloud.gcp_appengine_firewall_rule:",
      "\taction: ${1:}",
      "\tauth_kind: ${2:application|machineaccount|serviceaccount|accesstoken}",
      "\tsource_range: ${3:}",
      "\t#access_token: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#priority: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_appengine_firewall_rule_info": {
    "prefix": "gcp_appengine_firewall_rule_info",
    "description": "Gather info for GCP FirewallRule",
    "body": [
      "google.cloud.gcp_appengine_firewall_rule_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_bigquery_dataset": {
    "prefix": "gcp_bigquery_dataset",
    "description": "Creates a GCP Dataset",
    "body": [
      "google.cloud.gcp_bigquery_dataset:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tdataset_reference: ${2:}",
      "\t#access: ${3:}",
      "\t#access_token: ${4:}",
      "\t#default_encryption_configuration: ${5:}",
      "\t#default_partition_expiration_ms: ${6:}",
      "\t#default_table_expiration_ms: ${7:}",
      "\t#description: ${8:}",
      "\t#env_type: ${9:}",
      "\t#friendly_name: ${10:}",
      "\t#labels: ${11:}",
      "\t#location: ${12:US}",
      "\t#name: ${13:}",
      "\t#project: ${14:}",
      "\t#scopes: ${15:}",
      "\t#service_account_contents: ${16:}",
      "\t#service_account_email: ${17:}",
      "\t#service_account_file: ${18:}",
      "\t#state: ${19:#present|absent}"
    ]
  },
  "gcp_bigquery_dataset_info": {
    "prefix": "gcp_bigquery_dataset_info",
    "description": "Gather info for GCP Dataset",
    "body": [
      "google.cloud.gcp_bigquery_dataset_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_bigquery_table": {
    "prefix": "gcp_bigquery_table",
    "description": "Creates a GCP Table",
    "body": [
      "google.cloud.gcp_bigquery_table:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#clustering: ${3:}",
      "\t#dataset: ${4:}",
      "\t#description: ${5:}",
      "\t#encryption_configuration: ${6:}",
      "\t#env_type: ${7:}",
      "\t#expiration_time: ${8:}",
      "\t#external_data_configuration: ${9:}",
      "\t#friendly_name: ${10:}",
      "\t#labels: ${11:}",
      "\t#name: ${12:}",
      "\t#num_rows: ${13:}",
      "\t#project: ${14:}",
      "\t#schema: ${15:}",
      "\t#scopes: ${16:}",
      "\t#service_account_contents: ${17:}",
      "\t#service_account_email: ${18:}",
      "\t#service_account_file: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#table_reference: ${21:}",
      "\t#time_partitioning: ${22:}",
      "\t#view: ${23:}"
    ]
  },
  "gcp_bigquery_table_info": {
    "prefix": "gcp_bigquery_table_info",
    "description": "Gather info for GCP Table",
    "body": [
      "google.cloud.gcp_bigquery_table_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#dataset: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_bigtable_instance": {
    "prefix": "gcp_bigtable_instance",
    "description": "Creates a GCP Instance",
    "body": [
      "google.cloud.gcp_bigtable_instance:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#clusters: ${3:}",
      "\t#display_name: ${4:}",
      "\t#env_type: ${5:}",
      "\t#labels: ${6:}",
      "\t#name: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#type: ${14:}"
    ]
  },
  "gcp_bigtable_instance_info": {
    "prefix": "gcp_bigtable_instance_info",
    "description": "Gather info for GCP Instance",
    "body": [
      "google.cloud.gcp_bigtable_instance_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_cloudbuild_trigger": {
    "prefix": "gcp_cloudbuild_trigger",
    "description": "Creates a GCP Trigger",
    "body": [
      "google.cloud.gcp_cloudbuild_trigger:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#build: ${3:}",
      "\t#description: ${4:}",
      "\t#disabled: ${5:}",
      "\t#env_type: ${6:}",
      "\t#filename: ${7:}",
      "\t#github: ${8:}",
      "\t#id: ${9:}",
      "\t#ignored_files: ${10:}",
      "\t#included_files: ${11:}",
      "\t#name: ${12:}",
      "\t#project: ${13:}",
      "\t#pubsub_config: ${14:}",
      "\t#scopes: ${15:}",
      "\t#service_account_contents: ${16:}",
      "\t#service_account_email: ${17:}",
      "\t#service_account_file: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#substitutions: ${20:}",
      "\t#tags: ${21:}",
      "\t#trigger_template: ${22:}",
      "\t#webhook_config: ${23:}"
    ]
  },
  "gcp_cloudbuild_trigger_info": {
    "prefix": "gcp_cloudbuild_trigger_info",
    "description": "Gather info for GCP Trigger",
    "body": [
      "google.cloud.gcp_cloudbuild_trigger_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_cloudfunctions_cloud_function": {
    "prefix": "gcp_cloudfunctions_cloud_function",
    "description": "Creates a GCP CloudFunction",
    "body": [
      "google.cloud.gcp_cloudfunctions_cloud_function:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tlocation: ${2:}",
      "\tname: ${3:}",
      "\t#access_token: ${4:}",
      "\t#available_memory_mb: ${5:}",
      "\t#description: ${6:}",
      "\t#entry_point: ${7:}",
      "\t#env_type: ${8:}",
      "\t#environment_variables: ${9:}",
      "\t#event_trigger: ${10:}",
      "\t#https_trigger: ${11:}",
      "\t#labels: ${12:}",
      "\t#project: ${13:}",
      "\t#runtime: ${14:}",
      "\t#scopes: ${15:}",
      "\t#service_account_contents: ${16:}",
      "\t#service_account_email: ${17:}",
      "\t#service_account_file: ${18:}",
      "\t#source_archive_url: ${19:}",
      "\t#source_repository: ${20:}",
      "\t#source_upload_url: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#timeout: ${23:}",
      "\t#trigger_http: ${24:}"
    ]
  },
  "gcp_cloudfunctions_cloud_function_info": {
    "prefix": "gcp_cloudfunctions_cloud_function_info",
    "description": "Gather info for GCP CloudFunction",
    "body": [
      "google.cloud.gcp_cloudfunctions_cloud_function_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tlocation: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_cloudscheduler_job": {
    "prefix": "gcp_cloudscheduler_job",
    "description": "Creates a GCP Job",
    "body": [
      "google.cloud.gcp_cloudscheduler_job:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\t#access_token: ${4:}",
      "\t#app_engine_http_target: ${5:}",
      "\t#attempt_deadline: ${6:180s}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#http_target: ${9:}",
      "\t#project: ${10:}",
      "\t#pubsub_target: ${11:}",
      "\t#retry_config: ${12:}",
      "\t#schedule: ${13:}",
      "\t#scopes: ${14:}",
      "\t#service_account_contents: ${15:}",
      "\t#service_account_email: ${16:}",
      "\t#service_account_file: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#time_zone: ${19:Etc/UTC}"
    ]
  },
  "gcp_cloudscheduler_job_info": {
    "prefix": "gcp_cloudscheduler_job_info",
    "description": "Gather info for GCP Job",
    "body": [
      "google.cloud.gcp_cloudscheduler_job_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_cloudtasks_queue": {
    "prefix": "gcp_cloudtasks_queue",
    "description": "Creates a GCP Queue",
    "body": [
      "google.cloud.gcp_cloudtasks_queue:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tlocation: ${2:}",
      "\t#access_token: ${3:}",
      "\t#app_engine_routing_override: ${4:}",
      "\t#env_type: ${5:}",
      "\t#name: ${6:}",
      "\t#project: ${7:}",
      "\t#rate_limits: ${8:}",
      "\t#retry_config: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#stackdriver_logging_config: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#status: ${16:}"
    ]
  },
  "gcp_cloudtasks_queue_info": {
    "prefix": "gcp_cloudtasks_queue_info",
    "description": "Gather info for GCP Queue",
    "body": [
      "google.cloud.gcp_cloudtasks_queue_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tlocation: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_address": {
    "prefix": "gcp_compute_address",
    "description": "Creates a GCP Address",
    "body": [
      "google.cloud.gcp_compute_address:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\t#access_token: ${4:}",
      "\t#address: ${5:}",
      "\t#address_type: ${6:EXTERNAL}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#network: ${9:}",
      "\t#network_tier: ${10:}",
      "\t#prefix_length: ${11:}",
      "\t#project: ${12:}",
      "\t#purpose: ${13:}",
      "\t#scopes: ${14:}",
      "\t#service_account_contents: ${15:}",
      "\t#service_account_email: ${16:}",
      "\t#service_account_file: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#subnetwork: ${19:}"
    ]
  },
  "gcp_compute_address_info": {
    "prefix": "gcp_compute_address_info",
    "description": "Gather info for GCP Address",
    "body": [
      "google.cloud.gcp_compute_address_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_autoscaler": {
    "prefix": "gcp_compute_autoscaler",
    "description": "Creates a GCP Autoscaler",
    "body": [
      "google.cloud.gcp_compute_autoscaler:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tautoscaling_policy: ${2:}",
      "\tname: ${3:}",
      "\ttarget: ${4:}",
      "\tzone: ${5:}",
      "\t#access_token: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#project: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_autoscaler_info": {
    "prefix": "gcp_compute_autoscaler_info",
    "description": "Gather info for GCP Autoscaler",
    "body": [
      "google.cloud.gcp_compute_autoscaler_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_backend_bucket": {
    "prefix": "gcp_compute_backend_bucket",
    "description": "Creates a GCP BackendBucket",
    "body": [
      "google.cloud.gcp_compute_backend_bucket:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tbucket_name: ${2:}",
      "\tname: ${3:}",
      "\t#access_token: ${4:}",
      "\t#cdn_policy: ${5:}",
      "\t#custom_response_headers: ${6:}",
      "\t#description: ${7:}",
      "\t#enable_cdn: ${8:}",
      "\t#env_type: ${9:}",
      "\t#project: ${10:}",
      "\t#scopes: ${11:}",
      "\t#service_account_contents: ${12:}",
      "\t#service_account_email: ${13:}",
      "\t#service_account_file: ${14:}",
      "\t#state: ${15:#present|absent}"
    ]
  },
  "gcp_compute_backend_bucket_info": {
    "prefix": "gcp_compute_backend_bucket_info",
    "description": "Gather info for GCP BackendBucket",
    "body": [
      "google.cloud.gcp_compute_backend_bucket_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_backend_service": {
    "prefix": "gcp_compute_backend_service",
    "description": "Creates a GCP BackendService",
    "body": [
      "google.cloud.gcp_compute_backend_service:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#affinity_cookie_ttl_sec: ${4:}",
      "\t#backends: ${5:}",
      "\t#cdn_policy: ${6:}",
      "\t#circuit_breakers: ${7:}",
      "\t#connection_draining: ${8:}",
      "\t#consistent_hash: ${9:}",
      "\t#custom_request_headers: ${10:}",
      "\t#custom_response_headers: ${11:}",
      "\t#description: ${12:}",
      "\t#enable_cdn: ${13:}",
      "\t#env_type: ${14:}",
      "\t#health_checks: ${15:}",
      "\t#iap: ${16:}",
      "\t#load_balancing_scheme: ${17:EXTERNAL}",
      "\t#locality_lb_policy: ${18:}",
      "\t#log_config: ${19:}",
      "\t#outlier_detection: ${20:}",
      "\t#port_name: ${21:}",
      "\t#project: ${22:}",
      "\t#protocol: ${23:}",
      "\t#scopes: ${24:}",
      "\t#security_policy: ${25:}",
      "\t#service_account_contents: ${26:}",
      "\t#service_account_email: ${27:}",
      "\t#service_account_file: ${28:}",
      "\t#session_affinity: ${29:}",
      "\t#state: ${30:#present|absent}",
      "\t#timeout_sec: ${31:}"
    ]
  },
  "gcp_compute_backend_service_info": {
    "prefix": "gcp_compute_backend_service_info",
    "description": "Gather info for GCP BackendService",
    "body": [
      "google.cloud.gcp_compute_backend_service_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_disk": {
    "prefix": "gcp_compute_disk",
    "description": "Creates a GCP Disk",
    "body": [
      "google.cloud.gcp_compute_disk:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tzone: ${3:}",
      "\t#access_token: ${4:}",
      "\t#description: ${5:}",
      "\t#disk_encryption_key: ${6:}",
      "\t#env_type: ${7:}",
      "\t#labels: ${8:}",
      "\t#licenses: ${9:}",
      "\t#physical_block_size_bytes: ${10:}",
      "\t#project: ${11:}",
      "\t#provisioned_iops: ${12:}",
      "\t#scopes: ${13:}",
      "\t#service_account_contents: ${14:}",
      "\t#service_account_email: ${15:}",
      "\t#service_account_file: ${16:}",
      "\t#size_gb: ${17:}",
      "\t#source_image: ${18:}",
      "\t#source_image_encryption_key: ${19:}",
      "\t#source_snapshot: ${20:}",
      "\t#source_snapshot_encryption_key: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#type: ${23:}"
    ]
  },
  "gcp_compute_disk_info": {
    "prefix": "gcp_compute_disk_info",
    "description": "Gather info for GCP Disk",
    "body": [
      "google.cloud.gcp_compute_disk_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_external_vpn_gateway": {
    "prefix": "gcp_compute_external_vpn_gateway",
    "description": "Creates a GCP ExternalVpnGateway",
    "body": [
      "google.cloud.gcp_compute_external_vpn_gateway:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#description: ${4:}",
      "\t#env_type: ${5:}",
      "\t#interfaces: ${6:}",
      "\t#project: ${7:}",
      "\t#redundancy_type: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_compute_external_vpn_gateway_info": {
    "prefix": "gcp_compute_external_vpn_gateway_info",
    "description": "Gather info for GCP ExternalVpnGateway",
    "body": [
      "google.cloud.gcp_compute_external_vpn_gateway_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_firewall": {
    "prefix": "gcp_compute_firewall",
    "description": "Creates a GCP Firewall",
    "body": [
      "google.cloud.gcp_compute_firewall:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#allowed: ${4:}",
      "\t#denied: ${5:}",
      "\t#description: ${6:}",
      "\t#destination_ranges: ${7:}",
      "\t#direction: ${8:}",
      "\t#disabled: ${9:}",
      "\t#env_type: ${10:}",
      "\t#log_config: ${11:}",
      "\t#network: ${12:{'selfLink': 'global/networks/default'\\}}",
      "\t#priority: ${13:1000}",
      "\t#project: ${14:}",
      "\t#scopes: ${15:}",
      "\t#service_account_contents: ${16:}",
      "\t#service_account_email: ${17:}",
      "\t#service_account_file: ${18:}",
      "\t#source_ranges: ${19:}",
      "\t#source_service_accounts: ${20:}",
      "\t#source_tags: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#target_service_accounts: ${23:}",
      "\t#target_tags: ${24:}"
    ]
  },
  "gcp_compute_firewall_info": {
    "prefix": "gcp_compute_firewall_info",
    "description": "Gather info for GCP Firewall",
    "body": [
      "google.cloud.gcp_compute_firewall_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_forwarding_rule": {
    "prefix": "gcp_compute_forwarding_rule",
    "description": "Creates a GCP ForwardingRule",
    "body": [
      "google.cloud.gcp_compute_forwarding_rule:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\t#access_token: ${4:}",
      "\t#all_ports: ${5:}",
      "\t#allow_global_access: ${6:}",
      "\t#backend_service: ${7:}",
      "\t#description: ${8:}",
      "\t#env_type: ${9:}",
      "\t#ip_address: ${10:}",
      "\t#ip_protocol: ${11:}",
      "\t#is_mirroring_collector: ${12:}",
      "\t#load_balancing_scheme: ${13:}",
      "\t#network: ${14:}",
      "\t#network_tier: ${15:}",
      "\t#port_range: ${16:}",
      "\t#ports: ${17:}",
      "\t#project: ${18:}",
      "\t#scopes: ${19:}",
      "\t#service_account_contents: ${20:}",
      "\t#service_account_email: ${21:}",
      "\t#service_account_file: ${22:}",
      "\t#service_label: ${23:}",
      "\t#state: ${24:#present|absent}",
      "\t#subnetwork: ${25:}",
      "\t#target: ${26:}"
    ]
  },
  "gcp_compute_forwarding_rule_info": {
    "prefix": "gcp_compute_forwarding_rule_info",
    "description": "Gather info for GCP ForwardingRule",
    "body": [
      "google.cloud.gcp_compute_forwarding_rule_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_global_address": {
    "prefix": "gcp_compute_global_address",
    "description": "Creates a GCP GlobalAddress",
    "body": [
      "google.cloud.gcp_compute_global_address:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#address: ${4:}",
      "\t#address_type: ${5:EXTERNAL}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#ip_version: ${8:}",
      "\t#network: ${9:}",
      "\t#prefix_length: ${10:}",
      "\t#project: ${11:}",
      "\t#purpose: ${12:}",
      "\t#scopes: ${13:}",
      "\t#service_account_contents: ${14:}",
      "\t#service_account_email: ${15:}",
      "\t#service_account_file: ${16:}",
      "\t#state: ${17:#present|absent}"
    ]
  },
  "gcp_compute_global_address_info": {
    "prefix": "gcp_compute_global_address_info",
    "description": "Gather info for GCP GlobalAddress",
    "body": [
      "google.cloud.gcp_compute_global_address_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_global_forwarding_rule": {
    "prefix": "gcp_compute_global_forwarding_rule",
    "description": "Creates a GCP GlobalForwardingRule",
    "body": [
      "google.cloud.gcp_compute_global_forwarding_rule:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\ttarget: ${3:}",
      "\t#access_token: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#ip_address: ${7:}",
      "\t#ip_protocol: ${8:}",
      "\t#ip_version: ${9:}",
      "\t#load_balancing_scheme: ${10:EXTERNAL}",
      "\t#metadata_filters: ${11:}",
      "\t#network: ${12:}",
      "\t#port_range: ${13:}",
      "\t#project: ${14:}",
      "\t#scopes: ${15:}",
      "\t#service_account_contents: ${16:}",
      "\t#service_account_email: ${17:}",
      "\t#service_account_file: ${18:}",
      "\t#state: ${19:#present|absent}"
    ]
  },
  "gcp_compute_global_forwarding_rule_info": {
    "prefix": "gcp_compute_global_forwarding_rule_info",
    "description": "Gather info for GCP GlobalForwardingRule",
    "body": [
      "google.cloud.gcp_compute_global_forwarding_rule_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_health_check": {
    "prefix": "gcp_compute_health_check",
    "description": "Creates a GCP HealthCheck",
    "body": [
      "google.cloud.gcp_compute_health_check:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#check_interval_sec: ${4:5}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#grpc_health_check: ${7:}",
      "\t#healthy_threshold: ${8:2}",
      "\t#http2_health_check: ${9:}",
      "\t#http_health_check: ${10:}",
      "\t#https_health_check: ${11:}",
      "\t#log_config: ${12:}",
      "\t#project: ${13:}",
      "\t#scopes: ${14:}",
      "\t#service_account_contents: ${15:}",
      "\t#service_account_email: ${16:}",
      "\t#service_account_file: ${17:}",
      "\t#ssl_health_check: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#tcp_health_check: ${20:}",
      "\t#timeout_sec: ${21:5}",
      "\t#type: ${22:}",
      "\t#unhealthy_threshold: ${23:2}"
    ]
  },
  "gcp_compute_health_check_info": {
    "prefix": "gcp_compute_health_check_info",
    "description": "Gather info for GCP HealthCheck",
    "body": [
      "google.cloud.gcp_compute_health_check_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_http_health_check": {
    "prefix": "gcp_compute_http_health_check",
    "description": "Creates a GCP HttpHealthCheck",
    "body": [
      "google.cloud.gcp_compute_http_health_check:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#check_interval_sec: ${4:5}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#healthy_threshold: ${7:}",
      "\t#host: ${8:}",
      "\t#port: ${9:}",
      "\t#project: ${10:}",
      "\t#request_path: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#timeout_sec: ${17:}",
      "\t#unhealthy_threshold: ${18:}"
    ]
  },
  "gcp_compute_http_health_check_info": {
    "prefix": "gcp_compute_http_health_check_info",
    "description": "Gather info for GCP HttpHealthCheck",
    "body": [
      "google.cloud.gcp_compute_http_health_check_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_https_health_check": {
    "prefix": "gcp_compute_https_health_check",
    "description": "Creates a GCP HttpsHealthCheck",
    "body": [
      "google.cloud.gcp_compute_https_health_check:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#check_interval_sec: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#healthy_threshold: ${7:}",
      "\t#host: ${8:}",
      "\t#port: ${9:}",
      "\t#project: ${10:}",
      "\t#request_path: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#timeout_sec: ${17:}",
      "\t#unhealthy_threshold: ${18:}"
    ]
  },
  "gcp_compute_https_health_check_info": {
    "prefix": "gcp_compute_https_health_check_info",
    "description": "Gather info for GCP HttpsHealthCheck",
    "body": [
      "google.cloud.gcp_compute_https_health_check_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_image": {
    "prefix": "gcp_compute_image",
    "description": "Creates a GCP Image",
    "body": [
      "google.cloud.gcp_compute_image:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#description: ${4:}",
      "\t#disk_size_gb: ${5:}",
      "\t#env_type: ${6:}",
      "\t#family: ${7:}",
      "\t#guest_os_features: ${8:}",
      "\t#image_encryption_key: ${9:}",
      "\t#labels: ${10:}",
      "\t#licenses: ${11:}",
      "\t#project: ${12:}",
      "\t#raw_disk: ${13:}",
      "\t#scopes: ${14:}",
      "\t#service_account_contents: ${15:}",
      "\t#service_account_email: ${16:}",
      "\t#service_account_file: ${17:}",
      "\t#source_disk: ${18:}",
      "\t#source_disk_encryption_key: ${19:}",
      "\t#source_disk_id: ${20:}",
      "\t#source_image: ${21:}",
      "\t#source_snapshot: ${22:}",
      "\t#source_type: ${23:}",
      "\t#state: ${24:#present|absent}"
    ]
  },
  "gcp_compute_image_info": {
    "prefix": "gcp_compute_image_info",
    "description": "Gather info for GCP Image",
    "body": [
      "google.cloud.gcp_compute_image_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_instance": {
    "prefix": "gcp_compute_instance",
    "description": "Creates a GCP Instance",
    "body": [
      "google.cloud.gcp_compute_instance:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#can_ip_forward: ${4:}",
      "\t#confidential_instance_config: ${5:}",
      "\t#deletion_protection: ${6:}",
      "\t#disks: ${7:}",
      "\t#env_type: ${8:}",
      "\t#guest_accelerators: ${9:}",
      "\t#hostname: ${10:}",
      "\t#labels: ${11:}",
      "\t#machine_type: ${12:}",
      "\t#metadata: ${13:}",
      "\t#min_cpu_platform: ${14:}",
      "\t#name: ${15:}",
      "\t#network_interfaces: ${16:}",
      "\t#project: ${17:}",
      "\t#scheduling: ${18:}",
      "\t#scopes: ${19:}",
      "\t#service_account_contents: ${20:}",
      "\t#service_account_email: ${21:}",
      "\t#service_account_file: ${22:}",
      "\t#service_accounts: ${23:}",
      "\t#shielded_instance_config: ${24:}",
      "\t#state: ${25:#present|absent}",
      "\t#status: ${26:}",
      "\t#tags: ${27:}"
    ]
  },
  "gcp_compute_instance_group": {
    "prefix": "gcp_compute_instance_group",
    "description": "Creates a GCP InstanceGroup",
    "body": [
      "google.cloud.gcp_compute_instance_group:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#description: ${4:}",
      "\t#env_type: ${5:}",
      "\t#instances: ${6:}",
      "\t#name: ${7:}",
      "\t#named_ports: ${8:}",
      "\t#network: ${9:}",
      "\t#project: ${10:}",
      "\t#region: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#subnetwork: ${17:}"
    ]
  },
  "gcp_compute_instance_group_info": {
    "prefix": "gcp_compute_instance_group_info",
    "description": "Gather info for GCP InstanceGroup",
    "body": [
      "google.cloud.gcp_compute_instance_group_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_instance_group_manager": {
    "prefix": "gcp_compute_instance_group_manager",
    "description": "Creates a GCP InstanceGroupManager",
    "body": [
      "google.cloud.gcp_compute_instance_group_manager:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tbase_instance_name: ${2:}",
      "\tinstance_template: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#access_token: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#named_ports: ${9:}",
      "\t#project: ${10:}",
      "\t#scopes: ${11:}",
      "\t#service_account_contents: ${12:}",
      "\t#service_account_email: ${13:}",
      "\t#service_account_file: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#target_pools: ${16:}",
      "\t#target_size: ${17:}"
    ]
  },
  "gcp_compute_instance_group_manager_info": {
    "prefix": "gcp_compute_instance_group_manager_info",
    "description": "Gather info for GCP InstanceGroupManager",
    "body": [
      "google.cloud.gcp_compute_instance_group_manager_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_instance_info": {
    "prefix": "gcp_compute_instance_info",
    "description": "Gather info for GCP Instance",
    "body": [
      "google.cloud.gcp_compute_instance_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_instance_template": {
    "prefix": "gcp_compute_instance_template",
    "description": "Creates a GCP InstanceTemplate",
    "body": [
      "google.cloud.gcp_compute_instance_template:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#description: ${4:}",
      "\t#env_type: ${5:}",
      "\t#project: ${6:}",
      "\t#properties: ${7:}",
      "\t#scopes: ${8:}",
      "\t#service_account_contents: ${9:}",
      "\t#service_account_email: ${10:}",
      "\t#service_account_file: ${11:}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "gcp_compute_instance_template_info": {
    "prefix": "gcp_compute_instance_template_info",
    "description": "Gather info for GCP InstanceTemplate",
    "body": [
      "google.cloud.gcp_compute_instance_template_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_interconnect_attachment": {
    "prefix": "gcp_compute_interconnect_attachment",
    "description": "Creates a GCP InterconnectAttachment",
    "body": [
      "google.cloud.gcp_compute_interconnect_attachment:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\trouter: ${4:}",
      "\t#access_token: ${5:}",
      "\t#admin_enabled: ${6:true}",
      "\t#bandwidth: ${7:}",
      "\t#candidate_subnets: ${8:}",
      "\t#description: ${9:}",
      "\t#edge_availability_domain: ${10:}",
      "\t#encryption: ${11:NONE}",
      "\t#env_type: ${12:}",
      "\t#interconnect: ${13:}",
      "\t#ipsec_internal_addresses: ${14:}",
      "\t#mtu: ${15:}",
      "\t#project: ${16:}",
      "\t#scopes: ${17:}",
      "\t#service_account_contents: ${18:}",
      "\t#service_account_email: ${19:}",
      "\t#service_account_file: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#type: ${22:}",
      "\t#vlan_tag8021q: ${23:}"
    ]
  },
  "gcp_compute_interconnect_attachment_info": {
    "prefix": "gcp_compute_interconnect_attachment_info",
    "description": "Gather info for GCP InterconnectAttachment",
    "body": [
      "google.cloud.gcp_compute_interconnect_attachment_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_network": {
    "prefix": "gcp_compute_network",
    "description": "Creates a GCP Network",
    "body": [
      "google.cloud.gcp_compute_network:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#auto_create_subnetworks: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#mtu: ${7:}",
      "\t#project: ${8:}",
      "\t#routing_config: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_network_endpoint_group": {
    "prefix": "gcp_compute_network_endpoint_group",
    "description": "Creates a GCP NetworkEndpointGroup",
    "body": [
      "google.cloud.gcp_compute_network_endpoint_group:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tnetwork: ${3:}",
      "\tzone: ${4:}",
      "\t#access_token: ${5:}",
      "\t#default_port: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#network_endpoint_type: ${9:GCE_VM_IP_PORT}",
      "\t#project: ${10:}",
      "\t#scopes: ${11:}",
      "\t#service_account_contents: ${12:}",
      "\t#service_account_email: ${13:}",
      "\t#service_account_file: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#subnetwork: ${16:}"
    ]
  },
  "gcp_compute_network_endpoint_group_info": {
    "prefix": "gcp_compute_network_endpoint_group_info",
    "description": "Gather info for GCP NetworkEndpointGroup",
    "body": [
      "google.cloud.gcp_compute_network_endpoint_group_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_network_info": {
    "prefix": "gcp_compute_network_info",
    "description": "Gather info for GCP Network",
    "body": [
      "google.cloud.gcp_compute_network_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_node_group": {
    "prefix": "gcp_compute_node_group",
    "description": "Creates a GCP NodeGroup",
    "body": [
      "google.cloud.gcp_compute_node_group:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tnode_template: ${2:}",
      "\tsize: ${3:}",
      "\tzone: ${4:}",
      "\t#access_token: ${5:}",
      "\t#autoscaling_policy: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#maintenance_policy: ${9:DEFAULT}",
      "\t#maintenance_window: ${10:}",
      "\t#name: ${11:}",
      "\t#project: ${12:}",
      "\t#scopes: ${13:}",
      "\t#service_account_contents: ${14:}",
      "\t#service_account_email: ${15:}",
      "\t#service_account_file: ${16:}",
      "\t#state: ${17:#present|absent}"
    ]
  },
  "gcp_compute_node_group_info": {
    "prefix": "gcp_compute_node_group_info",
    "description": "Gather info for GCP NodeGroup",
    "body": [
      "google.cloud.gcp_compute_node_group_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_node_template": {
    "prefix": "gcp_compute_node_template",
    "description": "Creates a GCP NodeTemplate",
    "body": [
      "google.cloud.gcp_compute_node_template:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#cpu_overcommit_type: ${4:NONE}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#name: ${7:}",
      "\t#node_affinity_labels: ${8:}",
      "\t#node_type: ${9:}",
      "\t#node_type_flexibility: ${10:}",
      "\t#project: ${11:}",
      "\t#scopes: ${12:}",
      "\t#server_binding: ${13:}",
      "\t#service_account_contents: ${14:}",
      "\t#service_account_email: ${15:}",
      "\t#service_account_file: ${16:}",
      "\t#state: ${17:#present|absent}"
    ]
  },
  "gcp_compute_node_template_info": {
    "prefix": "gcp_compute_node_template_info",
    "description": "Gather info for GCP NodeTemplate",
    "body": [
      "google.cloud.gcp_compute_node_template_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_region_autoscaler": {
    "prefix": "gcp_compute_region_autoscaler",
    "description": "Creates a GCP RegionAutoscaler",
    "body": [
      "google.cloud.gcp_compute_region_autoscaler:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tautoscaling_policy: ${2:}",
      "\tname: ${3:}",
      "\tregion: ${4:}",
      "\ttarget: ${5:}",
      "\t#access_token: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#project: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_region_autoscaler_info": {
    "prefix": "gcp_compute_region_autoscaler_info",
    "description": "Gather info for GCP RegionAutoscaler",
    "body": [
      "google.cloud.gcp_compute_region_autoscaler_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_region_backend_service": {
    "prefix": "gcp_compute_region_backend_service",
    "description": "Creates a GCP RegionBackendService",
    "body": [
      "google.cloud.gcp_compute_region_backend_service:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\t#access_token: ${4:}",
      "\t#affinity_cookie_ttl_sec: ${5:}",
      "\t#backends: ${6:}",
      "\t#cdn_policy: ${7:}",
      "\t#circuit_breakers: ${8:}",
      "\t#connection_draining: ${9:}",
      "\t#consistent_hash: ${10:}",
      "\t#description: ${11:}",
      "\t#enable_cdn: ${12:}",
      "\t#env_type: ${13:}",
      "\t#failover_policy: ${14:}",
      "\t#health_checks: ${15:}",
      "\t#load_balancing_scheme: ${16:INTERNAL}",
      "\t#locality_lb_policy: ${17:}",
      "\t#log_config: ${18:}",
      "\t#network: ${19:}",
      "\t#outlier_detection: ${20:}",
      "\t#port_name: ${21:}",
      "\t#project: ${22:}",
      "\t#protocol: ${23:}",
      "\t#scopes: ${24:}",
      "\t#service_account_contents: ${25:}",
      "\t#service_account_email: ${26:}",
      "\t#service_account_file: ${27:}",
      "\t#session_affinity: ${28:}",
      "\t#state: ${29:#present|absent}",
      "\t#timeout_sec: ${30:}"
    ]
  },
  "gcp_compute_region_backend_service_info": {
    "prefix": "gcp_compute_region_backend_service_info",
    "description": "Gather info for GCP RegionBackendService",
    "body": [
      "google.cloud.gcp_compute_region_backend_service_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_region_disk": {
    "prefix": "gcp_compute_region_disk",
    "description": "Creates a GCP RegionDisk",
    "body": [
      "google.cloud.gcp_compute_region_disk:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\treplica_zones: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#disk_encryption_key: ${7:}",
      "\t#env_type: ${8:}",
      "\t#labels: ${9:}",
      "\t#licenses: ${10:}",
      "\t#physical_block_size_bytes: ${11:}",
      "\t#project: ${12:}",
      "\t#scopes: ${13:}",
      "\t#service_account_contents: ${14:}",
      "\t#service_account_email: ${15:}",
      "\t#service_account_file: ${16:}",
      "\t#size_gb: ${17:}",
      "\t#source_snapshot: ${18:}",
      "\t#source_snapshot_encryption_key: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#type: ${21:}"
    ]
  },
  "gcp_compute_region_disk_info": {
    "prefix": "gcp_compute_region_disk_info",
    "description": "Gather info for GCP RegionDisk",
    "body": [
      "google.cloud.gcp_compute_region_disk_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_region_health_check": {
    "prefix": "gcp_compute_region_health_check",
    "description": "Creates a GCP RegionHealthCheck",
    "body": [
      "google.cloud.gcp_compute_region_health_check:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#check_interval_sec: ${4:5}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#grpc_health_check: ${7:}",
      "\t#healthy_threshold: ${8:2}",
      "\t#http2_health_check: ${9:}",
      "\t#http_health_check: ${10:}",
      "\t#https_health_check: ${11:}",
      "\t#log_config: ${12:}",
      "\t#project: ${13:}",
      "\t#region: ${14:}",
      "\t#scopes: ${15:}",
      "\t#service_account_contents: ${16:}",
      "\t#service_account_email: ${17:}",
      "\t#service_account_file: ${18:}",
      "\t#ssl_health_check: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#tcp_health_check: ${21:}",
      "\t#timeout_sec: ${22:5}",
      "\t#type: ${23:}",
      "\t#unhealthy_threshold: ${24:2}"
    ]
  },
  "gcp_compute_region_health_check_info": {
    "prefix": "gcp_compute_region_health_check_info",
    "description": "Gather info for GCP RegionHealthCheck",
    "body": [
      "google.cloud.gcp_compute_region_health_check_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#region: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_region_instance_group_manager": {
    "prefix": "gcp_compute_region_instance_group_manager",
    "description": "Creates a GCP RegionInstanceGroupManager",
    "body": [
      "google.cloud.gcp_compute_region_instance_group_manager:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tbase_instance_name: ${2:}",
      "\tinstance_template: ${3:}",
      "\tname: ${4:}",
      "\tregion: ${5:}",
      "\t#access_token: ${6:}",
      "\t#auto_healing_policies: ${7:}",
      "\t#description: ${8:}",
      "\t#env_type: ${9:}",
      "\t#named_ports: ${10:}",
      "\t#project: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#target_pools: ${17:}",
      "\t#target_size: ${18:}"
    ]
  },
  "gcp_compute_region_instance_group_manager_info": {
    "prefix": "gcp_compute_region_instance_group_manager_info",
    "description": "Gather info for GCP RegionInstanceGroupManager",
    "body": [
      "google.cloud.gcp_compute_region_instance_group_manager_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_region_target_http_proxy": {
    "prefix": "gcp_compute_region_target_http_proxy",
    "description": "Creates a GCP RegionTargetHttpProxy",
    "body": [
      "google.cloud.gcp_compute_region_target_http_proxy:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\turl_map: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_compute_region_target_http_proxy_info": {
    "prefix": "gcp_compute_region_target_http_proxy_info",
    "description": "Gather info for GCP RegionTargetHttpProxy",
    "body": [
      "google.cloud.gcp_compute_region_target_http_proxy_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_region_target_https_proxy": {
    "prefix": "gcp_compute_region_target_https_proxy",
    "description": "Creates a GCP RegionTargetHttpsProxy",
    "body": [
      "google.cloud.gcp_compute_region_target_https_proxy:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\tssl_certificates: ${4:}",
      "\turl_map: ${5:}",
      "\t#access_token: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#project: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_region_target_https_proxy_info": {
    "prefix": "gcp_compute_region_target_https_proxy_info",
    "description": "Gather info for GCP RegionTargetHttpsProxy",
    "body": [
      "google.cloud.gcp_compute_region_target_https_proxy_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_region_url_map": {
    "prefix": "gcp_compute_region_url_map",
    "description": "Creates a GCP RegionUrlMap",
    "body": [
      "google.cloud.gcp_compute_region_url_map:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\t#access_token: ${4:}",
      "\t#default_service: ${5:}",
      "\t#default_url_redirect: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#host_rules: ${9:}",
      "\t#path_matchers: ${10:}",
      "\t#project: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#tests: ${17:}"
    ]
  },
  "gcp_compute_region_url_map_info": {
    "prefix": "gcp_compute_region_url_map_info",
    "description": "Gather info for GCP RegionUrlMap",
    "body": [
      "google.cloud.gcp_compute_region_url_map_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_reservation": {
    "prefix": "gcp_compute_reservation",
    "description": "Creates a GCP Reservation",
    "body": [
      "google.cloud.gcp_compute_reservation:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tspecific_reservation: ${3:}",
      "\tzone: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#specific_reservation_required: ${13:false}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_reservation_info": {
    "prefix": "gcp_compute_reservation_info",
    "description": "Gather info for GCP Reservation",
    "body": [
      "google.cloud.gcp_compute_reservation_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_resource_policy": {
    "prefix": "gcp_compute_resource_policy",
    "description": "Creates a GCP ResourcePolicy",
    "body": [
      "google.cloud.gcp_compute_resource_policy:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\t#access_token: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#group_placement_policy: ${7:}",
      "\t#instance_schedule_policy: ${8:}",
      "\t#project: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#snapshot_schedule_policy: ${14:}",
      "\t#state: ${15:#present|absent}"
    ]
  },
  "gcp_compute_resource_policy_info": {
    "prefix": "gcp_compute_resource_policy_info",
    "description": "Gather info for GCP ResourcePolicy",
    "body": [
      "google.cloud.gcp_compute_resource_policy_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_route": {
    "prefix": "gcp_compute_route",
    "description": "Creates a GCP Route",
    "body": [
      "google.cloud.gcp_compute_route:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tdest_range: ${2:}",
      "\tname: ${3:}",
      "\tnetwork: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#next_hop_gateway: ${8:}",
      "\t#next_hop_ilb: ${9:}",
      "\t#next_hop_instance: ${10:}",
      "\t#next_hop_ip: ${11:}",
      "\t#next_hop_vpn_tunnel: ${12:}",
      "\t#priority: ${13:}",
      "\t#project: ${14:}",
      "\t#scopes: ${15:}",
      "\t#service_account_contents: ${16:}",
      "\t#service_account_email: ${17:}",
      "\t#service_account_file: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#tags: ${20:}"
    ]
  },
  "gcp_compute_route_info": {
    "prefix": "gcp_compute_route_info",
    "description": "Gather info for GCP Route",
    "body": [
      "google.cloud.gcp_compute_route_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_router": {
    "prefix": "gcp_compute_router",
    "description": "Creates a GCP Router",
    "body": [
      "google.cloud.gcp_compute_router:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tnetwork: ${3:}",
      "\tregion: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bgp: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#project: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_router_info": {
    "prefix": "gcp_compute_router_info",
    "description": "Gather info for GCP Router",
    "body": [
      "google.cloud.gcp_compute_router_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_snapshot": {
    "prefix": "gcp_compute_snapshot",
    "description": "Creates a GCP Snapshot",
    "body": [
      "google.cloud.gcp_compute_snapshot:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tsource_disk: ${3:}",
      "\t#access_token: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#labels: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#snapshot_encryption_key: ${13:}",
      "\t#source_disk_encryption_key: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#storage_locations: ${16:}",
      "\t#zone: ${17:}"
    ]
  },
  "gcp_compute_snapshot_info": {
    "prefix": "gcp_compute_snapshot_info",
    "description": "Gather info for GCP Snapshot",
    "body": [
      "google.cloud.gcp_compute_snapshot_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_ssl_certificate": {
    "prefix": "gcp_compute_ssl_certificate",
    "description": "Creates a GCP SslCertificate",
    "body": [
      "google.cloud.gcp_compute_ssl_certificate:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tcertificate: ${2:}",
      "\tprivate_key: ${3:}",
      "\t#access_token: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#name: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_compute_ssl_certificate_info": {
    "prefix": "gcp_compute_ssl_certificate_info",
    "description": "Gather info for GCP SslCertificate",
    "body": [
      "google.cloud.gcp_compute_ssl_certificate_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_ssl_policy": {
    "prefix": "gcp_compute_ssl_policy",
    "description": "Creates a GCP SslPolicy",
    "body": [
      "google.cloud.gcp_compute_ssl_policy:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#custom_features: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#min_tls_version: ${7:}",
      "\t#profile: ${8:}",
      "\t#project: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_ssl_policy_info": {
    "prefix": "gcp_compute_ssl_policy_info",
    "description": "Gather info for GCP SslPolicy",
    "body": [
      "google.cloud.gcp_compute_ssl_policy_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_subnetwork": {
    "prefix": "gcp_compute_subnetwork",
    "description": "Creates a GCP Subnetwork",
    "body": [
      "google.cloud.gcp_compute_subnetwork:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tip_cidr_range: ${2:}",
      "\tname: ${3:}",
      "\tnetwork: ${4:}",
      "\tregion: ${5:}",
      "\t#access_token: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#private_ip_google_access: ${9:}",
      "\t#private_ipv6_google_access: ${10:}",
      "\t#project: ${11:}",
      "\t#scopes: ${12:}",
      "\t#secondary_ip_ranges: ${13:}",
      "\t#service_account_contents: ${14:}",
      "\t#service_account_email: ${15:}",
      "\t#service_account_file: ${16:}",
      "\t#state: ${17:#present|absent}"
    ]
  },
  "gcp_compute_subnetwork_info": {
    "prefix": "gcp_compute_subnetwork_info",
    "description": "Gather info for GCP Subnetwork",
    "body": [
      "google.cloud.gcp_compute_subnetwork_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_target_http_proxy": {
    "prefix": "gcp_compute_target_http_proxy",
    "description": "Creates a GCP TargetHttpProxy",
    "body": [
      "google.cloud.gcp_compute_target_http_proxy:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\turl_map: ${3:}",
      "\t#access_token: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#project: ${7:}",
      "\t#proxy_bind: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_compute_target_http_proxy_info": {
    "prefix": "gcp_compute_target_http_proxy_info",
    "description": "Gather info for GCP TargetHttpProxy",
    "body": [
      "google.cloud.gcp_compute_target_http_proxy_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_target_https_proxy": {
    "prefix": "gcp_compute_target_https_proxy",
    "description": "Creates a GCP TargetHttpsProxy",
    "body": [
      "google.cloud.gcp_compute_target_https_proxy:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tssl_certificates: ${3:}",
      "\turl_map: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#project: ${8:}",
      "\t#proxy_bind: ${9:}",
      "\t#quic_override: ${10:}",
      "\t#scopes: ${11:}",
      "\t#service_account_contents: ${12:}",
      "\t#service_account_email: ${13:}",
      "\t#service_account_file: ${14:}",
      "\t#ssl_policy: ${15:}",
      "\t#state: ${16:#present|absent}"
    ]
  },
  "gcp_compute_target_https_proxy_info": {
    "prefix": "gcp_compute_target_https_proxy_info",
    "description": "Gather info for GCP TargetHttpsProxy",
    "body": [
      "google.cloud.gcp_compute_target_https_proxy_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_target_instance": {
    "prefix": "gcp_compute_target_instance",
    "description": "Creates a GCP TargetInstance",
    "body": [
      "google.cloud.gcp_compute_target_instance:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tinstance: ${2:}",
      "\tname: ${3:}",
      "\tzone: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#nat_policy: ${8:NO_NAT}",
      "\t#project: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_target_instance_info": {
    "prefix": "gcp_compute_target_instance_info",
    "description": "Gather info for GCP TargetInstance",
    "body": [
      "google.cloud.gcp_compute_target_instance_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_target_pool": {
    "prefix": "gcp_compute_target_pool",
    "description": "Creates a GCP TargetPool",
    "body": [
      "google.cloud.gcp_compute_target_pool:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\t#access_token: ${4:}",
      "\t#backup_pool: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#failover_ratio: ${8:}",
      "\t#health_check: ${9:}",
      "\t#instances: ${10:}",
      "\t#project: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#session_affinity: ${16:}",
      "\t#state: ${17:#present|absent}"
    ]
  },
  "gcp_compute_target_pool_info": {
    "prefix": "gcp_compute_target_pool_info",
    "description": "Gather info for GCP TargetPool",
    "body": [
      "google.cloud.gcp_compute_target_pool_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_target_ssl_proxy": {
    "prefix": "gcp_compute_target_ssl_proxy",
    "description": "Creates a GCP TargetSslProxy",
    "body": [
      "google.cloud.gcp_compute_target_ssl_proxy:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tservice: ${3:}",
      "\tssl_certificates: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#project: ${8:}",
      "\t#proxy_header: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#ssl_policy: ${14:}",
      "\t#state: ${15:#present|absent}"
    ]
  },
  "gcp_compute_target_ssl_proxy_info": {
    "prefix": "gcp_compute_target_ssl_proxy_info",
    "description": "Gather info for GCP TargetSslProxy",
    "body": [
      "google.cloud.gcp_compute_target_ssl_proxy_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_target_tcp_proxy": {
    "prefix": "gcp_compute_target_tcp_proxy",
    "description": "Creates a GCP TargetTcpProxy",
    "body": [
      "google.cloud.gcp_compute_target_tcp_proxy:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tservice: ${3:}",
      "\t#access_token: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#project: ${7:}",
      "\t#proxy_bind: ${8:}",
      "\t#proxy_header: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_compute_target_tcp_proxy_info": {
    "prefix": "gcp_compute_target_tcp_proxy_info",
    "description": "Gather info for GCP TargetTcpProxy",
    "body": [
      "google.cloud.gcp_compute_target_tcp_proxy_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_target_vpn_gateway": {
    "prefix": "gcp_compute_target_vpn_gateway",
    "description": "Creates a GCP TargetVpnGateway",
    "body": [
      "google.cloud.gcp_compute_target_vpn_gateway:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tnetwork: ${3:}",
      "\tregion: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_compute_target_vpn_gateway_info": {
    "prefix": "gcp_compute_target_vpn_gateway_info",
    "description": "Gather info for GCP TargetVpnGateway",
    "body": [
      "google.cloud.gcp_compute_target_vpn_gateway_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_compute_url_map": {
    "prefix": "gcp_compute_url_map",
    "description": "Creates a GCP UrlMap",
    "body": [
      "google.cloud.gcp_compute_url_map:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#default_route_action: ${4:}",
      "\t#default_service: ${5:}",
      "\t#default_url_redirect: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#header_action: ${9:}",
      "\t#host_rules: ${10:}",
      "\t#path_matchers: ${11:}",
      "\t#project: ${12:}",
      "\t#scopes: ${13:}",
      "\t#service_account_contents: ${14:}",
      "\t#service_account_email: ${15:}",
      "\t#service_account_file: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#tests: ${18:}"
    ]
  },
  "gcp_compute_url_map_info": {
    "prefix": "gcp_compute_url_map_info",
    "description": "Gather info for GCP UrlMap",
    "body": [
      "google.cloud.gcp_compute_url_map_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#filters: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_compute_vpn_tunnel": {
    "prefix": "gcp_compute_vpn_tunnel",
    "description": "Creates a GCP VpnTunnel",
    "body": [
      "google.cloud.gcp_compute_vpn_tunnel:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\tregion: ${3:}",
      "\tshared_secret: ${4:}",
      "\t#access_token: ${5:}",
      "\t#description: ${6:}",
      "\t#env_type: ${7:}",
      "\t#ike_version: ${8:2}",
      "\t#local_traffic_selector: ${9:}",
      "\t#peer_external_gateway: ${10:}",
      "\t#peer_external_gateway_interface: ${11:}",
      "\t#peer_gcp_gateway: ${12:}",
      "\t#peer_ip: ${13:}",
      "\t#project: ${14:}",
      "\t#remote_traffic_selector: ${15:}",
      "\t#router: ${16:}",
      "\t#scopes: ${17:}",
      "\t#service_account_contents: ${18:}",
      "\t#service_account_email: ${19:}",
      "\t#service_account_file: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#target_vpn_gateway: ${22:}",
      "\t#vpn_gateway: ${23:}",
      "\t#vpn_gateway_interface: ${24:}"
    ]
  },
  "gcp_compute_vpn_tunnel_info": {
    "prefix": "gcp_compute_vpn_tunnel_info",
    "description": "Gather info for GCP VpnTunnel",
    "body": [
      "google.cloud.gcp_compute_vpn_tunnel_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#filters: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_container_cluster": {
    "prefix": "gcp_container_cluster",
    "description": "Creates a GCP Cluster",
    "body": [
      "google.cloud.gcp_container_cluster:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tlocation: ${2:}",
      "\t#access_token: ${3:}",
      "\t#addons_config: ${4:}",
      "\t#binary_authorization: ${5:}",
      "\t#cluster_ipv4_cidr: ${6:}",
      "\t#database_encryption: ${7:}",
      "\t#default_max_pods_constraint: ${8:}",
      "\t#description: ${9:}",
      "\t#enable_kubernetes_alpha: ${10:}",
      "\t#enable_tpu: ${11:}",
      "\t#env_type: ${12:}",
      "\t#initial_cluster_version: ${13:}",
      "\t#initial_node_count: ${14:}",
      "\t#ip_allocation_policy: ${15:}",
      "\t#kubectl_context: ${16:}",
      "\t#kubectl_path: ${17:}",
      "\t#legacy_abac: ${18:}",
      "\t#locations: ${19:}",
      "\t#logging_service: ${20:}",
      "\t#master_auth: ${21:}",
      "\t#master_authorized_networks_config: ${22:}",
      "\t#monitoring_service: ${23:}",
      "\t#name: ${24:}",
      "\t#network: ${25:}",
      "\t#network_config: ${26:}",
      "\t#network_policy: ${27:}",
      "\t#node_config: ${28:}",
      "\t#private_cluster_config: ${29:}",
      "\t#project: ${30:}",
      "\t#release_channel: ${31:}",
      "\t#resource_labels: ${32:}",
      "\t#scopes: ${33:}",
      "\t#service_account_contents: ${34:}",
      "\t#service_account_email: ${35:}",
      "\t#service_account_file: ${36:}",
      "\t#shielded_nodes: ${37:}",
      "\t#state: ${38:#present|absent}",
      "\t#subnetwork: ${39:}"
    ]
  },
  "gcp_container_cluster_info": {
    "prefix": "gcp_container_cluster_info",
    "description": "Gather info for GCP Cluster",
    "body": [
      "google.cloud.gcp_container_cluster_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tlocation: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_container_node_pool": {
    "prefix": "gcp_container_node_pool",
    "description": "Creates a GCP NodePool",
    "body": [
      "google.cloud.gcp_container_node_pool:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tcluster: ${2:}",
      "\tinitial_node_count: ${3:}",
      "\tlocation: ${4:}",
      "\t#access_token: ${5:}",
      "\t#autoscaling: ${6:}",
      "\t#conditions: ${7:}",
      "\t#config: ${8:}",
      "\t#env_type: ${9:}",
      "\t#management: ${10:}",
      "\t#max_pods_constraint: ${11:}",
      "\t#name: ${12:}",
      "\t#project: ${13:}",
      "\t#scopes: ${14:}",
      "\t#service_account_contents: ${15:}",
      "\t#service_account_email: ${16:}",
      "\t#service_account_file: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#version: ${19:}"
    ]
  },
  "gcp_container_node_pool_info": {
    "prefix": "gcp_container_node_pool_info",
    "description": "Gather info for GCP NodePool",
    "body": [
      "google.cloud.gcp_container_node_pool_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tcluster: ${2:}",
      "\tlocation: ${3:}",
      "\t#access_token: ${4:}",
      "\t#env_type: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}"
    ]
  },
  "gcp_dns_managed_zone": {
    "prefix": "gcp_dns_managed_zone",
    "description": "Creates a GCP ManagedZone",
    "body": [
      "google.cloud.gcp_dns_managed_zone:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tdescription: ${2:}",
      "\tdns_name: ${3:}",
      "\tname: ${4:}",
      "\t#access_token: ${5:}",
      "\t#dnssec_config: ${6:}",
      "\t#env_type: ${7:}",
      "\t#forwarding_config: ${8:}",
      "\t#labels: ${9:}",
      "\t#name_server_set: ${10:}",
      "\t#peering_config: ${11:}",
      "\t#private_visibility_config: ${12:}",
      "\t#project: ${13:}",
      "\t#scopes: ${14:}",
      "\t#service_account_contents: ${15:}",
      "\t#service_account_email: ${16:}",
      "\t#service_account_file: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#visibility: ${19:public}"
    ]
  },
  "gcp_dns_managed_zone_info": {
    "prefix": "gcp_dns_managed_zone_info",
    "description": "Gather info for GCP ManagedZone",
    "body": [
      "google.cloud.gcp_dns_managed_zone_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#dns_name: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_dns_resource_record_set": {
    "prefix": "gcp_dns_resource_record_set",
    "description": "Creates a GCP ResourceRecordSet",
    "body": [
      "google.cloud.gcp_dns_resource_record_set:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tmanaged_zone: ${2:}",
      "\tname: ${3:}",
      "\ttype: ${4:}",
      "\t#access_token: ${5:}",
      "\t#env_type: ${6:}",
      "\t#project: ${7:}",
      "\t#scopes: ${8:}",
      "\t#service_account_contents: ${9:}",
      "\t#service_account_email: ${10:}",
      "\t#service_account_file: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#target: ${13:}",
      "\t#ttl: ${14:}"
    ]
  },
  "gcp_dns_resource_record_set_info": {
    "prefix": "gcp_dns_resource_record_set_info",
    "description": "Gather info for GCP ResourceRecordSet",
    "body": [
      "google.cloud.gcp_dns_resource_record_set_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tmanaged_zone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_filestore_instance": {
    "prefix": "gcp_filestore_instance",
    "description": "Creates a GCP Instance",
    "body": [
      "google.cloud.gcp_filestore_instance:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tfile_shares: ${2:}",
      "\tname: ${3:}",
      "\tnetworks: ${4:}",
      "\ttier: ${5:}",
      "\tzone: ${6:}",
      "\t#access_token: ${7:}",
      "\t#description: ${8:}",
      "\t#env_type: ${9:}",
      "\t#labels: ${10:}",
      "\t#project: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#state: ${16:#present|absent}"
    ]
  },
  "gcp_filestore_instance_info": {
    "prefix": "gcp_filestore_instance_info",
    "description": "Gather info for GCP Instance",
    "body": [
      "google.cloud.gcp_filestore_instance_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tzone: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_iam_role": {
    "prefix": "gcp_iam_role",
    "description": "Creates a GCP Role",
    "body": [
      "google.cloud.gcp_iam_role:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#description: ${4:}",
      "\t#env_type: ${5:}",
      "\t#included_permissions: ${6:}",
      "\t#project: ${7:}",
      "\t#scopes: ${8:}",
      "\t#service_account_contents: ${9:}",
      "\t#service_account_email: ${10:}",
      "\t#service_account_file: ${11:}",
      "\t#stage: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#title: ${14:}"
    ]
  },
  "gcp_iam_role_info": {
    "prefix": "gcp_iam_role_info",
    "description": "Gather info for GCP Role",
    "body": [
      "google.cloud.gcp_iam_role_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_iam_service_account": {
    "prefix": "gcp_iam_service_account",
    "description": "Creates a GCP ServiceAccount",
    "body": [
      "google.cloud.gcp_iam_service_account:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#display_name: ${3:}",
      "\t#env_type: ${4:}",
      "\t#name: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}",
      "\t#state: ${11:#present|absent}"
    ]
  },
  "gcp_iam_service_account_info": {
    "prefix": "gcp_iam_service_account_info",
    "description": "Gather info for GCP ServiceAccount",
    "body": [
      "google.cloud.gcp_iam_service_account_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_iam_service_account_key": {
    "prefix": "gcp_iam_service_account_key",
    "description": "Creates a GCP ServiceAccountKey",
    "body": [
      "google.cloud.gcp_iam_service_account_key:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#key_algorithm: ${4:}",
      "\t#path: ${5:}",
      "\t#private_key_type: ${6:}",
      "\t#project: ${7:}",
      "\t#scopes: ${8:}",
      "\t#service_account: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_kms_crypto_key": {
    "prefix": "gcp_kms_crypto_key",
    "description": "Creates a GCP CryptoKey",
    "body": [
      "google.cloud.gcp_kms_crypto_key:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tkey_ring: ${2:}",
      "\tname: ${3:}",
      "\t#access_token: ${4:}",
      "\t#env_type: ${5:}",
      "\t#labels: ${6:}",
      "\t#project: ${7:}",
      "\t#purpose: ${8:ENCRYPT_DECRYPT}",
      "\t#rotation_period: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#skip_initial_version_creation: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#version_template: ${16:}"
    ]
  },
  "gcp_kms_crypto_key_info": {
    "prefix": "gcp_kms_crypto_key_info",
    "description": "Gather info for GCP CryptoKey",
    "body": [
      "google.cloud.gcp_kms_crypto_key_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tkey_ring: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_kms_key_ring": {
    "prefix": "gcp_kms_key_ring",
    "description": "Creates a GCP KeyRing",
    "body": [
      "google.cloud.gcp_kms_key_ring:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tlocation: ${2:}",
      "\tname: ${3:}",
      "\t#access_token: ${4:}",
      "\t#env_type: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}",
      "\t#state: ${11:#present|absent}"
    ]
  },
  "gcp_kms_key_ring_info": {
    "prefix": "gcp_kms_key_ring_info",
    "description": "Gather info for GCP KeyRing",
    "body": [
      "google.cloud.gcp_kms_key_ring_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tlocation: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_logging_metric": {
    "prefix": "gcp_logging_metric",
    "description": "Creates a GCP Metric",
    "body": [
      "google.cloud.gcp_logging_metric:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tfilter: ${2:}",
      "\tmetric_descriptor: ${3:}",
      "\tname: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bucket_options: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#label_extractors: ${9:}",
      "\t#project: ${10:}",
      "\t#scopes: ${11:}",
      "\t#service_account_contents: ${12:}",
      "\t#service_account_email: ${13:}",
      "\t#service_account_file: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#value_extractor: ${16:}"
    ]
  },
  "gcp_logging_metric_info": {
    "prefix": "gcp_logging_metric_info",
    "description": "Gather info for GCP Metric",
    "body": [
      "google.cloud.gcp_logging_metric_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_mlengine_model": {
    "prefix": "gcp_mlengine_model",
    "description": "Creates a GCP Model",
    "body": [
      "google.cloud.gcp_mlengine_model:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#default_version: ${4:}",
      "\t#description: ${5:}",
      "\t#env_type: ${6:}",
      "\t#labels: ${7:}",
      "\t#online_prediction_console_logging: ${8:}",
      "\t#online_prediction_logging: ${9:}",
      "\t#project: ${10:}",
      "\t#regions: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#state: ${16:#present|absent}"
    ]
  },
  "gcp_mlengine_model_info": {
    "prefix": "gcp_mlengine_model_info",
    "description": "Gather info for GCP Model",
    "body": [
      "google.cloud.gcp_mlengine_model_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_mlengine_version": {
    "prefix": "gcp_mlengine_version",
    "description": "Creates a GCP Version",
    "body": [
      "google.cloud.gcp_mlengine_version:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tdeployment_uri: ${2:}",
      "\tmodel: ${3:}",
      "\tname: ${4:}",
      "\t#access_token: ${5:}",
      "\t#auto_scaling: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#framework: ${9:}",
      "\t#is_default: ${10:}",
      "\t#labels: ${11:}",
      "\t#machine_type: ${12:}",
      "\t#manual_scaling: ${13:}",
      "\t#prediction_class: ${14:}",
      "\t#project: ${15:}",
      "\t#python_version: ${16:}",
      "\t#runtime_version: ${17:}",
      "\t#scopes: ${18:}",
      "\t#service_account: ${19:}",
      "\t#service_account_contents: ${20:}",
      "\t#service_account_email: ${21:}",
      "\t#service_account_file: ${22:}",
      "\t#state: ${23:#present|absent}"
    ]
  },
  "gcp_mlengine_version_info": {
    "prefix": "gcp_mlengine_version_info",
    "description": "Gather info for GCP Version",
    "body": [
      "google.cloud.gcp_mlengine_version_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tmodel: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_pubsub_subscription": {
    "prefix": "gcp_pubsub_subscription",
    "description": "Creates a GCP Subscription",
    "body": [
      "google.cloud.gcp_pubsub_subscription:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\ttopic: ${3:}",
      "\t#access_token: ${4:}",
      "\t#ack_deadline_seconds: ${5:}",
      "\t#dead_letter_policy: ${6:}",
      "\t#enable_message_ordering: ${7:}",
      "\t#env_type: ${8:}",
      "\t#expiration_policy: ${9:}",
      "\t#filter: ${10:}",
      "\t#labels: ${11:}",
      "\t#message_retention_duration: ${12:604800s}",
      "\t#project: ${13:}",
      "\t#push_config: ${14:}",
      "\t#retain_acked_messages: ${15:}",
      "\t#retry_policy: ${16:}",
      "\t#scopes: ${17:}",
      "\t#service_account_contents: ${18:}",
      "\t#service_account_email: ${19:}",
      "\t#service_account_file: ${20:}",
      "\t#state: ${21:#present|absent}"
    ]
  },
  "gcp_pubsub_subscription_info": {
    "prefix": "gcp_pubsub_subscription_info",
    "description": "Gather info for GCP Subscription",
    "body": [
      "google.cloud.gcp_pubsub_subscription_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_pubsub_topic": {
    "prefix": "gcp_pubsub_topic",
    "description": "Creates a GCP Topic",
    "body": [
      "google.cloud.gcp_pubsub_topic:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#kms_key_name: ${5:}",
      "\t#labels: ${6:}",
      "\t#message_storage_policy: ${7:}",
      "\t#project: ${8:}",
      "\t#schema_settings: ${9:}",
      "\t#scopes: ${10:}",
      "\t#service_account_contents: ${11:}",
      "\t#service_account_email: ${12:}",
      "\t#service_account_file: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "gcp_pubsub_topic_info": {
    "prefix": "gcp_pubsub_topic_info",
    "description": "Gather info for GCP Topic",
    "body": [
      "google.cloud.gcp_pubsub_topic_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_redis_instance": {
    "prefix": "gcp_redis_instance",
    "description": "Creates a GCP Instance",
    "body": [
      "google.cloud.gcp_redis_instance:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tmemory_size_gb: ${2:}",
      "\tname: ${3:}",
      "\tregion: ${4:}",
      "\t#access_token: ${5:}",
      "\t#alternative_location_id: ${6:}",
      "\t#auth_enabled: ${7:false}",
      "\t#authorized_network: ${8:}",
      "\t#connect_mode: ${9:DIRECT_PEERING}",
      "\t#display_name: ${10:}",
      "\t#env_type: ${11:}",
      "\t#labels: ${12:}",
      "\t#location_id: ${13:}",
      "\t#project: ${14:}",
      "\t#redis_configs: ${15:}",
      "\t#redis_version: ${16:}",
      "\t#reserved_ip_range: ${17:}",
      "\t#scopes: ${18:}",
      "\t#service_account_contents: ${19:}",
      "\t#service_account_email: ${20:}",
      "\t#service_account_file: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#tier: ${23:BASIC}",
      "\t#transit_encryption_mode: ${24:DISABLED}"
    ]
  },
  "gcp_redis_instance_info": {
    "prefix": "gcp_redis_instance_info",
    "description": "Gather info for GCP Instance",
    "body": [
      "google.cloud.gcp_redis_instance_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tregion: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_resourcemanager_project": {
    "prefix": "gcp_resourcemanager_project",
    "description": "Creates a GCP Project",
    "body": [
      "google.cloud.gcp_resourcemanager_project:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tid: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#labels: ${5:}",
      "\t#name: ${6:}",
      "\t#parent: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_resourcemanager_project_info": {
    "prefix": "gcp_resourcemanager_project_info",
    "description": "Gather info for GCP Project",
    "body": [
      "google.cloud.gcp_resourcemanager_project_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#page_size: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_runtimeconfig_config": {
    "prefix": "gcp_runtimeconfig_config",
    "description": "Creates a GCP Config",
    "body": [
      "google.cloud.gcp_runtimeconfig_config:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#description: ${4:}",
      "\t#env_type: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}",
      "\t#state: ${11:#present|absent}"
    ]
  },
  "gcp_runtimeconfig_config_info": {
    "prefix": "gcp_runtimeconfig_config_info",
    "description": "Gather info for GCP Config",
    "body": [
      "google.cloud.gcp_runtimeconfig_config_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_runtimeconfig_variable": {
    "prefix": "gcp_runtimeconfig_variable",
    "description": "Creates a GCP Variable",
    "body": [
      "google.cloud.gcp_runtimeconfig_variable:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tconfig: ${2:}",
      "\tname: ${3:}",
      "\t#access_token: ${4:}",
      "\t#env_type: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#text: ${12:}",
      "\t#value: ${13:}"
    ]
  },
  "gcp_runtimeconfig_variable_info": {
    "prefix": "gcp_runtimeconfig_variable_info",
    "description": "Gather info for GCP Variable",
    "body": [
      "google.cloud.gcp_runtimeconfig_variable_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tconfig: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_serviceusage_service": {
    "prefix": "gcp_serviceusage_service",
    "description": "Creates a GCP Service",
    "body": [
      "google.cloud.gcp_serviceusage_service:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#disable_dependent_services: ${4:}",
      "\t#env_type: ${5:}",
      "\t#project: ${6:}",
      "\t#scopes: ${7:}",
      "\t#service_account_contents: ${8:}",
      "\t#service_account_email: ${9:}",
      "\t#service_account_file: ${10:}",
      "\t#state: ${11:#present|absent}"
    ]
  },
  "gcp_serviceusage_service_info": {
    "prefix": "gcp_serviceusage_service_info",
    "description": "Gather info for GCP Service",
    "body": [
      "google.cloud.gcp_serviceusage_service_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_sourcerepo_repository": {
    "prefix": "gcp_sourcerepo_repository",
    "description": "Creates a GCP Repository",
    "body": [
      "google.cloud.gcp_sourcerepo_repository:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}",
      "\t#state: ${10:#present|absent}"
    ]
  },
  "gcp_sourcerepo_repository_info": {
    "prefix": "gcp_sourcerepo_repository_info",
    "description": "Gather info for GCP Repository",
    "body": [
      "google.cloud.gcp_sourcerepo_repository_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_spanner_database": {
    "prefix": "gcp_spanner_database",
    "description": "Creates a GCP Database",
    "body": [
      "google.cloud.gcp_spanner_database:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tinstance: ${2:}",
      "\tname: ${3:}",
      "\t#access_token: ${4:}",
      "\t#encryption_config: ${5:}",
      "\t#env_type: ${6:}",
      "\t#extra_statements: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_spanner_database_info": {
    "prefix": "gcp_spanner_database_info",
    "description": "Gather info for GCP Database",
    "body": [
      "google.cloud.gcp_spanner_database_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tinstance: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_spanner_instance": {
    "prefix": "gcp_spanner_instance",
    "description": "Creates a GCP Instance",
    "body": [
      "google.cloud.gcp_spanner_instance:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tconfig: ${2:}",
      "\tdisplay_name: ${3:}",
      "\tname: ${4:}",
      "\t#access_token: ${5:}",
      "\t#env_type: ${6:}",
      "\t#labels: ${7:}",
      "\t#node_count: ${8:}",
      "\t#processing_units: ${9:}",
      "\t#project: ${10:}",
      "\t#scopes: ${11:}",
      "\t#service_account_contents: ${12:}",
      "\t#service_account_email: ${13:}",
      "\t#service_account_file: ${14:}",
      "\t#state: ${15:#present|absent}"
    ]
  },
  "gcp_spanner_instance_info": {
    "prefix": "gcp_spanner_instance_info",
    "description": "Gather info for GCP Instance",
    "body": [
      "google.cloud.gcp_spanner_instance_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_sql_database": {
    "prefix": "gcp_sql_database",
    "description": "Creates a GCP Database",
    "body": [
      "google.cloud.gcp_sql_database:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tinstance: ${2:}",
      "\tname: ${3:}",
      "\t#access_token: ${4:}",
      "\t#charset: ${5:}",
      "\t#collation: ${6:}",
      "\t#env_type: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_sql_database_info": {
    "prefix": "gcp_sql_database_info",
    "description": "Gather info for GCP Database",
    "body": [
      "google.cloud.gcp_sql_database_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tinstance: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_sql_instance": {
    "prefix": "gcp_sql_instance",
    "description": "Creates a GCP Instance",
    "body": [
      "google.cloud.gcp_sql_instance:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${2:}",
      "\t#access_token: ${3:}",
      "\t#backend_type: ${4:}",
      "\t#connection_name: ${5:}",
      "\t#database_version: ${6:}",
      "\t#disk_encryption_configuration: ${7:}",
      "\t#disk_encryption_status: ${8:}",
      "\t#env_type: ${9:}",
      "\t#failover_replica: ${10:}",
      "\t#instance_type: ${11:}",
      "\t#ipv6_address: ${12:}",
      "\t#master_instance_name: ${13:}",
      "\t#max_disk_size: ${14:}",
      "\t#project: ${15:}",
      "\t#region: ${16:}",
      "\t#replica_configuration: ${17:}",
      "\t#scopes: ${18:}",
      "\t#service_account_contents: ${19:}",
      "\t#service_account_email: ${20:}",
      "\t#service_account_file: ${21:}",
      "\t#settings: ${22:}",
      "\t#state: ${23:#present|absent}"
    ]
  },
  "gcp_sql_instance_info": {
    "prefix": "gcp_sql_instance_info",
    "description": "Gather info for GCP Instance",
    "body": [
      "google.cloud.gcp_sql_instance_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}"
    ]
  },
  "gcp_sql_ssl_cert": {
    "prefix": "gcp_sql_ssl_cert",
    "description": "Creates a GCP SslCert",
    "body": [
      "google.cloud.gcp_sql_ssl_cert:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tinstance: ${2:}",
      "\t#access_token: ${3:}",
      "\t#cert: ${4:}",
      "\t#cert_serial_number: ${5:}",
      "\t#common_name: ${6:}",
      "\t#create_time: ${7:}",
      "\t#env_type: ${8:}",
      "\t#expiration_time: ${9:}",
      "\t#private_key: ${10:}",
      "\t#project: ${11:}",
      "\t#scopes: ${12:}",
      "\t#service_account_contents: ${13:}",
      "\t#service_account_email: ${14:}",
      "\t#service_account_file: ${15:}",
      "\t#sha1_fingerprint: ${16:}",
      "\t#state: ${17:#present|absent}"
    ]
  },
  "gcp_sql_user": {
    "prefix": "gcp_sql_user",
    "description": "Creates a GCP User",
    "body": [
      "google.cloud.gcp_sql_user:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\thost: ${2:}",
      "\tinstance: ${3:}",
      "\tname: ${4:}",
      "\t#access_token: ${5:}",
      "\t#env_type: ${6:}",
      "\t#password: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "gcp_sql_user_info": {
    "prefix": "gcp_sql_user_info",
    "description": "Gather info for GCP User",
    "body": [
      "google.cloud.gcp_sql_user_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tinstance: ${2:}",
      "\t#access_token: ${3:}",
      "\t#env_type: ${4:}",
      "\t#project: ${5:}",
      "\t#scopes: ${6:}",
      "\t#service_account_contents: ${7:}",
      "\t#service_account_email: ${8:}",
      "\t#service_account_file: ${9:}"
    ]
  },
  "gcp_storage_bucket": {
    "prefix": "gcp_storage_bucket",
    "description": "Creates a GCP Bucket",
    "body": [
      "google.cloud.gcp_storage_bucket:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#acl: ${3:}",
      "\t#cors: ${4:}",
      "\t#default_event_based_hold: ${5:}",
      "\t#default_object_acl: ${6:}",
      "\t#env_type: ${7:}",
      "\t#labels: ${8:}",
      "\t#lifecycle: ${9:}",
      "\t#location: ${10:}",
      "\t#logging: ${11:}",
      "\t#metageneration: ${12:}",
      "\t#name: ${13:}",
      "\t#owner: ${14:}",
      "\t#predefined_default_object_acl: ${15:}",
      "\t#project: ${16:}",
      "\t#scopes: ${17:}",
      "\t#service_account_contents: ${18:}",
      "\t#service_account_email: ${19:}",
      "\t#service_account_file: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#storage_class: ${22:}",
      "\t#versioning: ${23:}",
      "\t#website: ${24:}"
    ]
  },
  "gcp_storage_bucket_access_control": {
    "prefix": "gcp_storage_bucket_access_control",
    "description": "Creates a GCP BucketAccessControl",
    "body": [
      "google.cloud.gcp_storage_bucket_access_control:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tbucket: ${2:}",
      "\tentity: ${3:}",
      "\t#access_token: ${4:}",
      "\t#env_type: ${5:}",
      "\t#project: ${6:}",
      "\t#role: ${7:}",
      "\t#scopes: ${8:}",
      "\t#service_account_contents: ${9:}",
      "\t#service_account_email: ${10:}",
      "\t#service_account_file: ${11:}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "gcp_storage_default_object_acl": {
    "prefix": "gcp_storage_default_object_acl",
    "description": "Creates a GCP DefaultObjectACL",
    "body": [
      "google.cloud.gcp_storage_default_object_acl:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tbucket: ${2:}",
      "\tentity: ${3:}",
      "\trole: ${4:}",
      "\t#access_token: ${5:}",
      "\t#env_type: ${6:}",
      "\t#project: ${7:}",
      "\t#scopes: ${8:}",
      "\t#service_account_contents: ${9:}",
      "\t#service_account_email: ${10:}",
      "\t#service_account_file: ${11:}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "gcp_storage_object": {
    "prefix": "gcp_storage_object",
    "description": "Creates a GCP Object",
    "body": [
      "google.cloud.gcp_storage_object:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\tsrc: ${2:}",
      "\t#access_token: ${3:}",
      "\t#action: ${4:download|upload|delete}",
      "\t#bucket: ${5:}",
      "\t#dest: ${6:}",
      "\t#env_type: ${7:}",
      "\t#project: ${8:}",
      "\t#scopes: ${9:}",
      "\t#service_account_contents: ${10:}",
      "\t#service_account_email: ${11:}",
      "\t#service_account_file: ${12:}"
    ]
  },
  "gcp_tpu_node": {
    "prefix": "gcp_tpu_node",
    "description": "Creates a GCP Node",
    "body": [
      "google.cloud.gcp_tpu_node:",
      "\taccelerator_type: ${1:}",
      "\tauth_kind: ${2:application|machineaccount|serviceaccount|accesstoken}",
      "\tname: ${3:}",
      "\ttensorflow_version: ${4:}",
      "\t#access_token: ${5:}",
      "\t#cidr_block: ${6:}",
      "\t#description: ${7:}",
      "\t#env_type: ${8:}",
      "\t#labels: ${9:}",
      "\t#network: ${10:}",
      "\t#project: ${11:}",
      "\t#scheduling_config: ${12:}",
      "\t#scopes: ${13:}",
      "\t#service_account_contents: ${14:}",
      "\t#service_account_email: ${15:}",
      "\t#service_account_file: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#use_service_networking: ${18:false}",
      "\t#zone: ${19:}"
    ]
  },
  "gcp_tpu_node_info": {
    "prefix": "gcp_tpu_node_info",
    "description": "Gather info for GCP Node",
    "body": [
      "google.cloud.gcp_tpu_node_info:",
      "\tauth_kind: ${1:application|machineaccount|serviceaccount|accesstoken}",
      "\t#access_token: ${2:}",
      "\t#env_type: ${3:}",
      "\t#project: ${4:}",
      "\t#scopes: ${5:}",
      "\t#service_account_contents: ${6:}",
      "\t#service_account_email: ${7:}",
      "\t#service_account_file: ${8:}",
      "\t#zone: ${9:}"
    ]
  },
  "alert_contact_point": {
    "prefix": "alert_contact_point",
    "description": "Manage Alerting Contact points in Grafana",
    "body": [
      "grafana.grafana.alert_contact_point:",
      "\tgrafana_api_key: ${1:}",
      "\tgrafana_url: ${2:}",
      "\tname: ${3:}",
      "\tsettings: ${4:}",
      "\ttype: ${5:}",
      "\tuid: ${6:}",
      "\t#disableResolveMessage: ${7:false}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "alert_notification_policy": {
    "prefix": "alert_notification_policy",
    "description": "Manage Alerting Policies points in Grafana",
    "body": [
      "grafana.grafana.alert_notification_policy:",
      "\tgrafana_api_key: ${1:}",
      "\tgrafana_url: ${2:}",
      "\troutes: ${3:}",
      "\t#Continue: ${4:false}",
      "\t#groupByStr: ${5:[]}",
      "\t#groupInterval: ${6:5m}",
      "\t#groupWait: ${7:30s}",
      "\t#muteTimeIntervals: ${8:[]}",
      "\t#objectMatchers: ${9:[]}",
      "\t#repeatInterval: ${10:4h}",
      "\t#rootPolicyReceiver: ${11:grafana-default-email}"
    ]
  },
  "cloud_api_key": {
    "prefix": "cloud_api_key",
    "description": "Manage Grafana Cloud API keys",
    "body": [
      "grafana.grafana.cloud_api_key:",
      "\texisting_cloud_api_key: ${1:}",
      "\tname: ${2:}",
      "\torg_slug: ${3:}",
      "\trole: ${4:Admin|Viewer|Editor|MetricsPublisher}",
      "\t#fail_if_already_created: ${5:true}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "cloud_plugin": {
    "prefix": "cloud_plugin",
    "description": "Manage Grafana Cloud Plugins",
    "body": [
      "grafana.grafana.cloud_plugin:",
      "\tcloud_api_key: ${1:}",
      "\tname: ${2:}",
      "\tstack_slug: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#version: ${5:latest}"
    ]
  },
  "cloud_stack": {
    "prefix": "cloud_stack",
    "description": "Manage Grafana Cloud stack",
    "body": [
      "grafana.grafana.cloud_stack:",
      "\tcloud_api_key: ${1:}",
      "\tname: ${2:}",
      "\torg_slug: ${3:}",
      "\tstack_slug: ${4:}",
      "\t#region: ${5:#us|us-azure|eu|au|eu-azure|prod-ap-southeast-0|prod-gb-south-0|prod-eu-west-3}",
      "\t#state: ${6:#present|absent}",
      "\t#url: ${7:}"
    ]
  },
  "dashboard": {
    "prefix": "dashboard",
    "description": "Manage Dashboards in Grafana",
    "body": [
      "grafana.grafana.dashboard:",
      "\tdashboard: ${1:}",
      "\tgrafana_api_key: ${2:}",
      "\tgrafana_url: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "datasource": {
    "prefix": "datasource",
    "description": "Manage Data sources in Grafana",
    "body": [
      "grafana.grafana.datasource:",
      "\tdataSource: ${1:}",
      "\tgrafana_api_key: ${2:}",
      "\tgrafana_url: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "folder": {
    "prefix": "folder",
    "description": "Manage Folders in Grafana",
    "body": [
      "grafana.grafana.folder:",
      "\tgrafana_api_key: ${1:}",
      "\tgrafana_url: ${2:}",
      "\ttitle: ${3:}",
      "\tuid: ${4:}",
      "\t#overwrite: ${5:true}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "certificate": {
    "prefix": "certificate",
    "description": "Create and manage certificates on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.certificate:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#certificate: ${3:}",
      "\t#domain_names: ${4:[]}",
      "\t#id: ${5:}",
      "\t#labels: ${6:}",
      "\t#name: ${7:}",
      "\t#private_key: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#type: ${10:#uploaded|managed}"
    ]
  },
  "certificate_info": {
    "prefix": "certificate_info",
    "description": "Gather infos about your Hetzner Cloud certificates.",
    "body": [
      "hetzner.hcloud.certificate_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#label_selector: ${4:}",
      "\t#name: ${5:}"
    ]
  },
  "datacenter_info": {
    "prefix": "datacenter_info",
    "description": "Gather info about the Hetzner Cloud datacenters.",
    "body": [
      "hetzner.hcloud.datacenter_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#name: ${4:}"
    ]
  },
  "firewall": {
    "prefix": "firewall",
    "description": "Create and manage firewalls on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.firewall:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#labels: ${4:}",
      "\t#name: ${5:}",
      "\t#rules: ${6:}",
      "\t#state: ${7:absent|#present}"
    ]
  },
  "iso_info": {
    "prefix": "iso_info",
    "description": "Gather infos about the Hetzner Cloud ISO list.",
    "body": [
      "hetzner.hcloud.iso_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#architecture: ${3:x86|arm}",
      "\t#id: ${4:}",
      "\t#include_architecture_wildcard: ${5:}",
      "\t#name: ${6:}"
    ]
  },
  "load_balancer": {
    "prefix": "load_balancer",
    "description": "Create and manage cloud Load Balancers on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.load_balancer:",
      "\tapi_token: ${1:}",
      "\t#algorithm: ${2:#round_robin|least_connections}",
      "\t#api_endpoint: ${3:https://api.hetzner.cloud/v1}",
      "\t#delete_protection: ${4:}",
      "\t#disable_public_interface: ${5:false}",
      "\t#id: ${6:}",
      "\t#labels: ${7:}",
      "\t#load_balancer_type: ${8:}",
      "\t#location: ${9:}",
      "\t#name: ${10:}",
      "\t#network_zone: ${11:}",
      "\t#state: ${12:absent|#present}"
    ]
  },
  "load_balancer_info": {
    "prefix": "load_balancer_info",
    "description": "Gather infos about your Hetzner Cloud Load Balancers.",
    "body": [
      "hetzner.hcloud.load_balancer_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#label_selector: ${4:}",
      "\t#name: ${5:}"
    ]
  },
  "load_balancer_network": {
    "prefix": "load_balancer_network",
    "description": "Manage the relationship between Hetzner Cloud Networks and Load Balancers",
    "body": [
      "hetzner.hcloud.load_balancer_network:",
      "\tapi_token: ${1:}",
      "\tload_balancer: ${2:}",
      "\tnetwork: ${3:}",
      "\t#api_endpoint: ${4:https://api.hetzner.cloud/v1}",
      "\t#ip: ${5:}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "load_balancer_service": {
    "prefix": "load_balancer_service",
    "description": "Create and manage the services of cloud Load Balancers on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.load_balancer_service:",
      "\tapi_token: ${1:}",
      "\tlisten_port: ${2:}",
      "\tload_balancer: ${3:}",
      "\t#api_endpoint: ${4:https://api.hetzner.cloud/v1}",
      "\t#destination_port: ${5:}",
      "\t#health_check: ${6:}",
      "\t#http: ${7:}",
      "\t#protocol: ${8:http|https|tcp}",
      "\t#proxyprotocol: ${9:false}",
      "\t#state: ${10:absent|#present}"
    ]
  },
  "load_balancer_target": {
    "prefix": "load_balancer_target",
    "description": "Manage Hetzner Cloud Load Balancer targets",
    "body": [
      "hetzner.hcloud.load_balancer_target:",
      "\tapi_token: ${1:}",
      "\tload_balancer: ${2:}",
      "\ttype: ${3:server|label_selector|ip}",
      "\t#api_endpoint: ${4:https://api.hetzner.cloud/v1}",
      "\t#ip: ${5:}",
      "\t#label_selector: ${6:}",
      "\t#server: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#use_private_ip: ${9:false}"
    ]
  },
  "load_balancer_type_info": {
    "prefix": "load_balancer_type_info",
    "description": "Gather infos about the Hetzner Cloud Load Balancer types.",
    "body": [
      "hetzner.hcloud.load_balancer_type_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#name: ${4:}"
    ]
  },
  "location_info": {
    "prefix": "location_info",
    "description": "Gather infos about your Hetzner Cloud locations.",
    "body": [
      "hetzner.hcloud.location_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#name: ${4:}"
    ]
  },
  "network_info": {
    "prefix": "network_info",
    "description": "Gather info about your Hetzner Cloud networks.",
    "body": [
      "hetzner.hcloud.network_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#label_selector: ${4:}",
      "\t#name: ${5:}"
    ]
  },
  "placement_group": {
    "prefix": "placement_group",
    "description": "Create and manage placement groups on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.placement_group:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#labels: ${4:}",
      "\t#name: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#type: ${7:}"
    ]
  },
  "primary_ip": {
    "prefix": "primary_ip",
    "description": "Create and manage cloud Primary IPs on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.primary_ip:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#auto_delete: ${3:false}",
      "\t#datacenter: ${4:}",
      "\t#delete_protection: ${5:}",
      "\t#id: ${6:}",
      "\t#labels: ${7:}",
      "\t#name: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#type: ${10:ipv4|ipv6}"
    ]
  },
  "primary_ip_info": {
    "prefix": "primary_ip_info",
    "description": "Gather infos about the Hetzner Cloud Primary IPs.",
    "body": [
      "hetzner.hcloud.primary_ip_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#label_selector: ${4:}",
      "\t#name: ${5:}"
    ]
  },
  "rdns": {
    "prefix": "rdns",
    "description": "Create and manage reverse DNS entries on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.rdns:",
      "\tapi_token: ${1:}",
      "\tip_address: ${2:}",
      "\t#api_endpoint: ${3:https://api.hetzner.cloud/v1}",
      "\t#dns_ptr: ${4:}",
      "\t#floating_ip: ${5:}",
      "\t#load_balancer: ${6:}",
      "\t#primary_ip: ${7:}",
      "\t#server: ${8:}",
      "\t#state: ${9:absent|#present}"
    ]
  },
  "route": {
    "prefix": "route",
    "description": "Create and delete cloud routes on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.route:",
      "\tapi_token: ${1:}",
      "\tdestination: ${2:}",
      "\tgateway: ${3:}",
      "\tnetwork: ${4:}",
      "\t#api_endpoint: ${5:https://api.hetzner.cloud/v1}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "server_network": {
    "prefix": "server_network",
    "description": "Manage the relationship between Hetzner Cloud Networks and servers",
    "body": [
      "hetzner.hcloud.server_network:",
      "\tapi_token: ${1:}",
      "\tnetwork: ${2:}",
      "\tserver: ${3:}",
      "\t#alias_ips: ${4:}",
      "\t#api_endpoint: ${5:https://api.hetzner.cloud/v1}",
      "\t#ip: ${6:}",
      "\t#state: ${7:absent|#present}"
    ]
  },
  "server_type_info": {
    "prefix": "server_type_info",
    "description": "Gather infos about the Hetzner Cloud server types.",
    "body": [
      "hetzner.hcloud.server_type_info:",
      "\tapi_token: ${1:}",
      "\t#api_endpoint: ${2:https://api.hetzner.cloud/v1}",
      "\t#id: ${3:}",
      "\t#name: ${4:}"
    ]
  },
  "subnetwork": {
    "prefix": "subnetwork",
    "description": "Manage cloud subnetworks on the Hetzner Cloud.",
    "body": [
      "hetzner.hcloud.subnetwork:",
      "\tapi_token: ${1:}",
      "\tip_range: ${2:}",
      "\tnetwork: ${3:}",
      "\tnetwork_zone: ${4:}",
      "\ttype: ${5:server|cloud|vswitch}",
      "\t#api_endpoint: ${6:https://api.hetzner.cloud/v1}",
      "\t#state: ${7:absent|#present}",
      "\t#vswitch_id: ${8:}"
    ]
  },
  "qradar_analytics_rules": {
    "prefix": "qradar_analytics_rules",
    "description": "Qradar Analytics Rules Management resource module",
    "body": [
      "ibm.qradar.qradar_analytics_rules:",
      "\t#config: ${1:}",
      "\t#state: ${2:merged|gathered|deleted}"
    ]
  },
  "deploy": {
    "prefix": "deploy",
    "description": "Trigger a qradar configuration deployment",
    "body": [
      "ibm.qradar.deploy:",
      "\t#type: ${1:#INCREMENTAL|FULL}"
    ]
  },
  "qradar_log_sources_management": {
    "prefix": "qradar_log_sources_management",
    "description": "Qradar Log Sources Management resource module",
    "body": [
      "ibm.qradar.qradar_log_sources_management:",
      "\t#config: ${1:}",
      "\t#state: ${2:merged|replaced|gathered|deleted}"
    ]
  },
  "offense_action": {
    "prefix": "offense_action",
    "description": "Take action on a QRadar Offense",
    "body": [
      "ibm.qradar.offense_action:",
      "\tid: ${1:}",
      "\t#assigned_to: ${2:}",
      "\t#closing_reason: ${3:}",
      "\t#closing_reason_id: ${4:}",
      "\t#follow_up: ${5:}",
      "\t#protected: ${6:}",
      "\t#status: ${7:open|OPEN|hidden|HIDDEN|closed|CLOSED}"
    ]
  },
  "offense_info": {
    "prefix": "offense_info",
    "description": "Obtain information about one or many QRadar Offenses, with filter options",
    "body": [
      "ibm.qradar.offense_info:",
      "\t#assigned_to: ${1:}",
      "\t#closing_reason: ${2:}",
      "\t#closing_reason_id: ${3:}",
      "\t#follow_up: ${4:}",
      "\t#id: ${5:}",
      "\t#name: ${6:}",
      "\t#protected: ${7:}",
      "\t#status: ${8:#open|OPEN|hidden|HIDDEN|closed|CLOSED}"
    ]
  },
  "offense_note": {
    "prefix": "offense_note",
    "description": "Create or update a QRadar Offense Note",
    "body": [
      "ibm.qradar.offense_note:",
      "\tid: ${1:}",
      "\tnote_text: ${2:}"
    ]
  },
  "ibm_sv_manage_awss3_cloudaccount": {
    "prefix": "ibm_sv_manage_awss3_cloudaccount",
    "description": "This module configures and manages Amazon Simple Storage Service (Amazon S3) cloud account on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_awss3_cloudaccount:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#accesskeyid: ${4:}",
      "\t#bucketprefix: ${5:}",
      "\t#domain: ${6:}",
      "\t#downbandwidthmbits: ${7:}",
      "\t#encrypt: ${8:yes|no}",
      "\t#ignorefailures: ${9:}",
      "\t#importsystem: ${10:}",
      "\t#log_path: ${11:}",
      "\t#mode: ${12:import|normal}",
      "\t#old_name: ${13:}",
      "\t#password: ${14:}",
      "\t#refresh: ${15:}",
      "\t#region: ${16:}",
      "\t#resetusagehistory: ${17:}",
      "\t#secretaccesskey: ${18:}",
      "\t#token: ${19:}",
      "\t#upbandwidthmbits: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:false}"
    ]
  },
  "ibm_sv_manage_cloud_backups": {
    "prefix": "ibm_sv_manage_cloud_backups",
    "description": "This module configures and manages cloud backups on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_cloud_backups:",
      "\tclustername: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#all: ${3:}",
      "\t#domain: ${4:}",
      "\t#full: ${5:}",
      "\t#generation: ${6:}",
      "\t#log_path: ${7:}",
      "\t#password: ${8:}",
      "\t#token: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:false}",
      "\t#volume_UID: ${12:}",
      "\t#volume_name: ${13:}",
      "\t#volumegroup_name: ${14:}"
    ]
  },
  "ibm_sv_manage_fc_partnership": {
    "prefix": "ibm_sv_manage_fc_partnership",
    "description": "This module configures and manages Fibre Channel (FC) partnership on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_fc_partnership:",
      "\tclustername: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#backgroundcopyrate: ${3:}",
      "\t#domain: ${4:}",
      "\t#linkbandwidthmbits: ${5:}",
      "\t#log_path: ${6:}",
      "\t#password: ${7:}",
      "\t#pbrinuse: ${8:yes|no}",
      "\t#remote_clustername: ${9:}",
      "\t#remote_domain: ${10:}",
      "\t#remote_password: ${11:}",
      "\t#remote_system: ${12:}",
      "\t#remote_token: ${13:}",
      "\t#remote_username: ${14:}",
      "\t#remote_validate_certs: ${15:false}",
      "\t#start: ${16:}",
      "\t#stop: ${17:}",
      "\t#token: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:false}"
    ]
  },
  "ibm_sv_manage_fcportsetmember": {
    "prefix": "ibm_sv_manage_fcportsetmember",
    "description": "This module manages addition or removal of ports to or from the Fibre Channel(FC) portsets on IBM Storage Virtualize family systems.",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_fcportsetmember:",
      "\tclustername: ${1:}",
      "\tfcportid: ${2:}",
      "\tname: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#domain: ${5:}",
      "\t#log_path: ${6:}",
      "\t#password: ${7:}",
      "\t#token: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:false}"
    ]
  },
  "ibm_sv_manage_ip_partnership": {
    "prefix": "ibm_sv_manage_ip_partnership",
    "description": "This module manages IP partnerships on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_ip_partnership:",
      "\tclustername: ${1:}",
      "\tremote_clustername: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#backgroundcopyrate: ${4:}",
      "\t#compressed: ${5:yes|no}",
      "\t#domain: ${6:}",
      "\t#link1: ${7:}",
      "\t#link2: ${8:}",
      "\t#linkbandwidthmbits: ${9:}",
      "\t#log_path: ${10:}",
      "\t#password: ${11:}",
      "\t#remote_cluster_id: ${12:}",
      "\t#remote_clusterip: ${13:}",
      "\t#remote_domain: ${14:}",
      "\t#remote_link1: ${15:}",
      "\t#remote_link2: ${16:}",
      "\t#remote_password: ${17:}",
      "\t#remote_token: ${18:}",
      "\t#remote_username: ${19:}",
      "\t#remote_validate_certs: ${20:false}",
      "\t#token: ${21:}",
      "\t#type: ${22:ipv4|ipv6}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:false}"
    ]
  },
  "ibm_sv_manage_provisioning_policy": {
    "prefix": "ibm_sv_manage_provisioning_policy",
    "description": "This module configures and manages provisioning policies on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_provisioning_policy:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#capacitysaving: ${4:drivebased|thin|compressed}",
      "\t#deduplicated: ${5:false}",
      "\t#domain: ${6:}",
      "\t#log_path: ${7:}",
      "\t#old_name: ${8:}",
      "\t#password: ${9:}",
      "\t#token: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:false}"
    ]
  },
  "ibm_sv_manage_replication_policy": {
    "prefix": "ibm_sv_manage_replication_policy",
    "description": "This module configures and manages replication policies on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_replication_policy:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#domain: ${4:}",
      "\t#location1iogrp: ${5:}",
      "\t#location1system: ${6:}",
      "\t#location2iogrp: ${7:}",
      "\t#location2system: ${8:}",
      "\t#log_path: ${9:}",
      "\t#password: ${10:}",
      "\t#rpoalert: ${11:}",
      "\t#token: ${12:}",
      "\t#topology: ${13:2-site-async-dr|2-site-ha}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:false}"
    ]
  },
  "ibm_sv_manage_security": {
    "prefix": "ibm_sv_manage_security",
    "description": "This module manages security options on IBM Storage Virtualize family storage systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_security:",
      "\tclustername: ${1:}",
      "\t#checkpasswordhistory: ${2:yes|no}",
      "\t#clitimeout: ${3:}",
      "\t#disablesuperusercim: ${4:yes|no}",
      "\t#disablesuperusergui: ${5:yes|no}",
      "\t#disablesuperuserrest: ${6:yes|no}",
      "\t#domain: ${7:}",
      "\t#expirywarning: ${8:}",
      "\t#guitimeout: ${9:}",
      "\t#lockoutperiod: ${10:}",
      "\t#log_path: ${11:}",
      "\t#maxfailedlogins: ${12:}",
      "\t#maxpasswordhistory: ${13:}",
      "\t#minpasswordage: ${14:}",
      "\t#minpasswordlength: ${15:}",
      "\t#password: ${16:}",
      "\t#passworddigits: ${17:}",
      "\t#passwordexpiry: ${18:}",
      "\t#passwordlowercase: ${19:}",
      "\t#passwordspecialchars: ${20:}",
      "\t#passworduppercase: ${21:}",
      "\t#resetsshprotocol: ${22:}",
      "\t#restapitimeout: ${23:}",
      "\t#sshgracetime: ${24:}",
      "\t#sshmaxtries: ${25:}",
      "\t#sshprotocol: ${26:}",
      "\t#superuserlocking: ${27:enable|disable}",
      "\t#superusermultifactor: ${28:yes|no}",
      "\t#superuserpasswordkeyrequired: ${29:yes|no}",
      "\t#token: ${30:}",
      "\t#username: ${31:}",
      "\t#validate_certs: ${32:false}"
    ]
  },
  "ibm_sv_manage_snapshot": {
    "prefix": "ibm_sv_manage_snapshot",
    "description": "This module manages snapshots (PiT image of a volume) on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_snapshot:",
      "\tclustername: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#domain: ${3:}",
      "\t#ignorelegacy: ${4:false}",
      "\t#log_path: ${5:}",
      "\t#name: ${6:}",
      "\t#old_name: ${7:}",
      "\t#ownershipgroup: ${8:}",
      "\t#password: ${9:}",
      "\t#retentiondays: ${10:}",
      "\t#safeguarded: ${11:}",
      "\t#snapshot_pool: ${12:}",
      "\t#src_volume_names: ${13:}",
      "\t#src_volumegroup_name: ${14:}",
      "\t#token: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:false}"
    ]
  },
  "ibm_sv_manage_snapshotpolicy": {
    "prefix": "ibm_sv_manage_snapshotpolicy",
    "description": "This module manages snapshot policy configuration on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_snapshotpolicy:",
      "\tclustername: ${1:}",
      "\tstate: ${2:present|absent|suspend|resume}",
      "\t#backupinterval: ${3:}",
      "\t#backupstarttime: ${4:}",
      "\t#backupunit: ${5:minute|hour|day|week|month}",
      "\t#domain: ${6:}",
      "\t#log_path: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#removefromvolumegroups: ${10:}",
      "\t#retentiondays: ${11:}",
      "\t#token: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:false}"
    ]
  },
  "ibm_sv_manage_ssl_certificate": {
    "prefix": "ibm_sv_manage_ssl_certificate",
    "description": "This module exports existing system-signed certificate on to IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_ssl_certificate:",
      "\tclustername: ${1:}",
      "\t#certificate_type: ${2:#system}",
      "\t#domain: ${3:}",
      "\t#log_path: ${4:}",
      "\t#password: ${5:}",
      "\t#token: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:false}"
    ]
  },
  "ibm_sv_manage_storage_partition": {
    "prefix": "ibm_sv_manage_storage_partition",
    "description": "This module manages storage partition on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_storage_partition:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#deletenonpreferredmanagementobjects: ${4:}",
      "\t#deletepreferredmanagementcopy: ${5:}",
      "\t#deletepreferredmanagementobjects: ${6:}",
      "\t#domain: ${7:}",
      "\t#log_path: ${8:}",
      "\t#noreplicationpolicy: ${9:}",
      "\t#password: ${10:}",
      "\t#preferredmanagementsystem: ${11:}",
      "\t#replicationpolicy: ${12:}",
      "\t#token: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:false}"
    ]
  },
  "ibm_sv_manage_syslog_server": {
    "prefix": "ibm_sv_manage_syslog_server",
    "description": "This module manages syslog server on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_syslog_server:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#audit: ${4:off|on}",
      "\t#cadf: ${5:off|on}",
      "\t#domain: ${6:}",
      "\t#error: ${7:off|on}",
      "\t#facility: ${8:}",
      "\t#info: ${9:off|on}",
      "\t#ip: ${10:}",
      "\t#log_path: ${11:}",
      "\t#login: ${12:off|on}",
      "\t#old_name: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#protocol: ${16:tcp|udp}",
      "\t#token: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:false}",
      "\t#warning: ${20:off|on}"
    ]
  },
  "ibm_sv_manage_truststore_for_replication": {
    "prefix": "ibm_sv_manage_truststore_for_replication",
    "description": "This module manages certificate trust stores for replication on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_manage_truststore_for_replication:",
      "\tclustername: ${1:}",
      "\tremote_clustername: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tusername: ${4:}",
      "\t#key_filename: ${5:}",
      "\t#log_path: ${6:}",
      "\t#name: ${7:}",
      "\t#password: ${8:}",
      "\t#remote_password: ${9:}",
      "\t#remote_username: ${10:}",
      "\t#usesshkey: ${11:yes|#no}"
    ]
  },
  "ibm_sv_restore_cloud_backup": {
    "prefix": "ibm_sv_restore_cloud_backup",
    "description": "This module restores the cloud backup on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_restore_cloud_backup:",
      "\tclustername: ${1:}",
      "\ttarget_volume_name: ${2:}",
      "\t#cancel: ${3:}",
      "\t#deletelatergenerations: ${4:}",
      "\t#domain: ${5:}",
      "\t#generation: ${6:}",
      "\t#log_path: ${7:}",
      "\t#password: ${8:}",
      "\t#restoreuid: ${9:}",
      "\t#source_volume_uid: ${10:}",
      "\t#token: ${11:}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:false}"
    ]
  },
  "ibm_sv_switch_replication_direction": {
    "prefix": "ibm_sv_switch_replication_direction",
    "description": "This module switches the replication direction on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_sv_switch_replication_direction:",
      "\tclustername: ${1:}",
      "\tmode: ${2:independent|production}",
      "\tname: ${3:}",
      "\t#domain: ${4:}",
      "\t#log_path: ${5:}",
      "\t#password: ${6:}",
      "\t#token: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:false}"
    ]
  },
  "ibm_svc_auth": {
    "prefix": "ibm_svc_auth",
    "description": "This module generates an authentication token for a user on IBM Storage Virtualize family system",
    "body": [
      "ibm.storage_virtualize.ibm_svc_auth:",
      "\tclustername: ${1:}",
      "\t#domain: ${2:}",
      "\t#log_path: ${3:}",
      "\t#password: ${4:}",
      "\t#token: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:false}"
    ]
  },
  "ibm_svc_complete_initial_setup": {
    "prefix": "ibm_svc_complete_initial_setup",
    "description": "This module completes the initial setup configuration for LMC systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_complete_initial_setup:",
      "\tclustername: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#log_path: ${4:}"
    ]
  },
  "ibm_svc_host": {
    "prefix": "ibm_svc_host",
    "description": "This module manages hosts on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_host:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#domain: ${4:}",
      "\t#fcwwpn: ${5:}",
      "\t#hostcluster: ${6:}",
      "\t#iogrp: ${7:}",
      "\t#iscsiname: ${8:}",
      "\t#log_path: ${9:}",
      "\t#nohostcluster: ${10:}",
      "\t#nopartition: ${11:}",
      "\t#nqn: ${12:}",
      "\t#old_name: ${13:}",
      "\t#partition: ${14:}",
      "\t#password: ${15:}",
      "\t#portset: ${16:}",
      "\t#protocol: ${17:scsi|rdmanvme}",
      "\t#site: ${18:}",
      "\t#token: ${19:}",
      "\t#type: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:false}"
    ]
  },
  "ibm_svc_hostcluster": {
    "prefix": "ibm_svc_hostcluster",
    "description": "This module manages host cluster on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_hostcluster:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#domain: ${4:}",
      "\t#log_path: ${5:}",
      "\t#noownershipgroup: ${6:}",
      "\t#ownershipgroup: ${7:}",
      "\t#password: ${8:}",
      "\t#removeallhosts: ${9:}",
      "\t#token: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:false}"
    ]
  },
  "ibm_svc_info": {
    "prefix": "ibm_svc_info",
    "description": "This module gathers various information from the IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_info:",
      "\tclustername: ${1:}",
      "\t#domain: ${2:}",
      "\t#gather_subset: ${3:vol|pool|node|iog|host|hostvdiskmap|vdiskhostmap|hc|fcport|iscsiport|fc|fcmap|fcconsistgrp|rcrelationship|rcconsistgrp|vdiskcopy|targetportfc|array|system|cloudaccount|cloudaccountusage|ldapserver|drive|user|usergroup|ownershipgroup|partnership|replicationpolicy|cloudbackup|enclosurestats|cloudbackupgeneration|snapshotpolicy|snapshotpolicyschedule|volumegroup|volumegroupsnapshotpolicy|volumesnapshot|dnsserver|systemcertificate|sra|syslogserver|enclosurestatshistory|emailserver|emailuser|provisioningpolicy|volumegroupsnapshot|truststore|callhome|ip|portset|safeguardedpolicy|mdisk|safeguardedpolicyschedule|cloudimportcandidate|eventlog|driveclass|security|#all}",
      "\t#log_path: ${4:}",
      "\t#objectname: ${5:}",
      "\t#password: ${6:}",
      "\t#token: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:false}"
    ]
  },
  "ibm_svc_initial_setup": {
    "prefix": "ibm_svc_initial_setup",
    "description": "This module allows users to manage the initial setup configuration on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_initial_setup:",
      "\tclustername: ${1:}",
      "\t#cloud: ${2:}",
      "\t#compression: ${3:}",
      "\t#dnsip: ${4:}",
      "\t#dnsname: ${5:}",
      "\t#domain: ${6:}",
      "\t#easytier: ${7:}",
      "\t#encryption: ${8:on|off}",
      "\t#flash: ${9:}",
      "\t#license_key: ${10:}",
      "\t#log_path: ${11:}",
      "\t#ntpip: ${12:}",
      "\t#password: ${13:}",
      "\t#physical_flash: ${14:on|#off}",
      "\t#remote: ${15:}",
      "\t#system_name: ${16:}",
      "\t#time: ${17:}",
      "\t#timezone: ${18:}",
      "\t#token: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:false}",
      "\t#virtualization: ${22:}"
    ]
  },
  "ibm_svc_manage_callhome": {
    "prefix": "ibm_svc_manage_callhome",
    "description": "This module manages Call Home feature configuration on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_callhome:",
      "\tcallhome_type: ${1:cloud services|email|both}",
      "\tclustername: ${2:}",
      "\tstate: ${3:enabled|disabled}",
      "\t#address: ${4:}",
      "\t#censorcallhome: ${5:on|off}",
      "\t#city: ${6:}",
      "\t#company_name: ${7:}",
      "\t#contact_email: ${8:}",
      "\t#contact_name: ${9:}",
      "\t#country: ${10:}",
      "\t#domain: ${11:}",
      "\t#enhancedcallhome: ${12:on|off}",
      "\t#invemailinterval: ${13:}",
      "\t#inventory: ${14:on|off}",
      "\t#location: ${15:}",
      "\t#log_path: ${16:}",
      "\t#password: ${17:}",
      "\t#phonenumber_primary: ${18:}",
      "\t#phonenumber_secondary: ${19:}",
      "\t#postalcode: ${20:}",
      "\t#province: ${21:}",
      "\t#proxy_password: ${22:}",
      "\t#proxy_port: ${23:}",
      "\t#proxy_type: ${24:open_proxy|basic_authentication|certificate|no_proxy}",
      "\t#proxy_url: ${25:}",
      "\t#proxy_username: ${26:}",
      "\t#serverIP: ${27:}",
      "\t#serverPort: ${28:}",
      "\t#sslcert: ${29:}",
      "\t#token: ${30:}",
      "\t#username: ${31:}",
      "\t#validate_certs: ${32:false}"
    ]
  },
  "ibm_svc_manage_consistgrp_flashcopy": {
    "prefix": "ibm_svc_manage_consistgrp_flashcopy",
    "description": "This module manages FlashCopy consistency groups on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_consistgrp_flashcopy:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#domain: ${4:}",
      "\t#force: ${5:}",
      "\t#log_path: ${6:}",
      "\t#noownershipgroup: ${7:}",
      "\t#ownershipgroup: ${8:}",
      "\t#password: ${9:}",
      "\t#token: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:false}"
    ]
  },
  "ibm_svc_manage_cv": {
    "prefix": "ibm_svc_manage_cv",
    "description": "This module manages the change volume for a given volume on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_cv:",
      "\tclustername: ${1:}",
      "\tcvname: ${2:}",
      "\trname: ${3:}",
      "\tstate: ${4:absent|present}",
      "\t#basevolume: ${5:}",
      "\t#domain: ${6:}",
      "\t#ismaster: ${7:true}",
      "\t#log_path: ${8:}",
      "\t#password: ${9:}",
      "\t#token: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:false}"
    ]
  },
  "ibm_svc_manage_flashcopy": {
    "prefix": "ibm_svc_manage_flashcopy",
    "description": "This module manages FlashCopy mappings on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_flashcopy:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#consistgrp: ${4:}",
      "\t#copyrate: ${5:}",
      "\t#copytype: ${6:snapshot|clone|backup}",
      "\t#domain: ${7:}",
      "\t#force: ${8:}",
      "\t#grainsize: ${9:}",
      "\t#log_path: ${10:}",
      "\t#mdiskgrp: ${11:}",
      "\t#noconsistgrp: ${12:}",
      "\t#old_name: ${13:}",
      "\t#password: ${14:}",
      "\t#source: ${15:}",
      "\t#target: ${16:}",
      "\t#token: ${17:}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:false}"
    ]
  },
  "ibm_svc_manage_ip": {
    "prefix": "ibm_svc_manage_ip",
    "description": "This module manages IP provisioning on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_ip:",
      "\tclustername: ${1:}",
      "\tip_address: ${2:}",
      "\tnode: ${3:}",
      "\tport: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#domain: ${6:}",
      "\t#gateway: ${7:}",
      "\t#log_path: ${8:}",
      "\t#password: ${9:}",
      "\t#portset: ${10:}",
      "\t#shareip: ${11:}",
      "\t#subnet_prefix: ${12:}",
      "\t#token: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:false}",
      "\t#vlan: ${16:}"
    ]
  },
  "ibm_svc_manage_migration": {
    "prefix": "ibm_svc_manage_migration",
    "description": "This module manages volume migration between clusters on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_migration:",
      "\tclustername: ${1:}",
      "\t#domain: ${2:}",
      "\t#log_path: ${3:}",
      "\t#new_pool: ${4:}",
      "\t#password: ${5:}",
      "\t#relationship_name: ${6:}",
      "\t#remote_cluster: ${7:}",
      "\t#remote_password: ${8:}",
      "\t#remote_pool: ${9:}",
      "\t#remote_token: ${10:}",
      "\t#remote_username: ${11:}",
      "\t#remote_validate_certs: ${12:false}",
      "\t#replicate_hosts: ${13:false}",
      "\t#source_volume: ${14:}",
      "\t#state: ${15:initiate|switch|cleanup}",
      "\t#target_volume: ${16:}",
      "\t#token: ${17:}",
      "\t#type_of_migration: ${18:across_pools|#across_clusters}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:false}"
    ]
  },
  "ibm_svc_manage_mirrored_volume": {
    "prefix": "ibm_svc_manage_mirrored_volume",
    "description": "This module manages mirrored volumes on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_mirrored_volume:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#compressed: ${4:}",
      "\t#deduplicated: ${5:}",
      "\t#domain: ${6:}",
      "\t#grainsize: ${7:}",
      "\t#log_path: ${8:}",
      "\t#password: ${9:}",
      "\t#poolA: ${10:}",
      "\t#poolB: ${11:}",
      "\t#rsize: ${12:}",
      "\t#size: ${13:}",
      "\t#thin: ${14:}",
      "\t#token: ${15:}",
      "\t#type: ${16:local hyperswap|standard}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:false}"
    ]
  },
  "ibm_svc_manage_ownershipgroup": {
    "prefix": "ibm_svc_manage_ownershipgroup",
    "description": "This module manages ownership group on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_ownershipgroup:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#domain: ${4:}",
      "\t#keepobjects: ${5:}",
      "\t#log_path: ${6:}",
      "\t#password: ${7:}",
      "\t#token: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:false}"
    ]
  },
  "ibm_svc_manage_portset": {
    "prefix": "ibm_svc_manage_portset",
    "description": "This module manages portset configuration on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_portset:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#domain: ${4:}",
      "\t#log_path: ${5:}",
      "\t#noownershipgroup: ${6:}",
      "\t#old_name: ${7:}",
      "\t#ownershipgroup: ${8:}",
      "\t#password: ${9:}",
      "\t#portset_type: ${10:host|replication}",
      "\t#porttype: ${11:fc|ethernet}",
      "\t#token: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:false}"
    ]
  },
  "ibm_svc_manage_replication": {
    "prefix": "ibm_svc_manage_replication",
    "description": "This module manages remote copies (or rcrelationship) on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_replication:",
      "\tclustername: ${1:}",
      "\tstate: ${2:absent|present}",
      "\t#aux: ${3:}",
      "\t#consistgrp: ${4:}",
      "\t#copytype: ${5:metro|global|GMCV}",
      "\t#cyclingperiod: ${6:}",
      "\t#domain: ${7:}",
      "\t#force: ${8:}",
      "\t#log_path: ${9:}",
      "\t#master: ${10:}",
      "\t#name: ${11:}",
      "\t#noconsistgrp: ${12:false}",
      "\t#password: ${13:}",
      "\t#remotecluster: ${14:}",
      "\t#sync: ${15:false}",
      "\t#token: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:false}"
    ]
  },
  "ibm_svc_manage_replicationgroup": {
    "prefix": "ibm_svc_manage_replicationgroup",
    "description": "This module manages remote copy consistency group on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_replicationgroup:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#copytype: ${4:metro|global}",
      "\t#cyclingmode: ${5:multi|none}",
      "\t#cyclingperiod: ${6:}",
      "\t#domain: ${7:}",
      "\t#force: ${8:}",
      "\t#log_path: ${9:}",
      "\t#password: ${10:}",
      "\t#remotecluster: ${11:}",
      "\t#token: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:false}"
    ]
  },
  "ibm_svc_manage_safeguarded_policy": {
    "prefix": "ibm_svc_manage_safeguarded_policy",
    "description": "This module manages safeguarded policy configuration on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_safeguarded_policy:",
      "\tclustername: ${1:}",
      "\tstate: ${2:present|absent|suspend|resume}",
      "\t#backupinterval: ${3:}",
      "\t#backupstarttime: ${4:}",
      "\t#backupunit: ${5:minute|hour|day|week|month}",
      "\t#domain: ${6:}",
      "\t#log_path: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#retentiondays: ${10:}",
      "\t#token: ${11:}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:false}"
    ]
  },
  "ibm_svc_manage_sra": {
    "prefix": "ibm_svc_manage_sra",
    "description": "This module manages remote support assistance configuration on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_sra:",
      "\tclustername: ${1:}",
      "\tstate: ${2:enabled|disabled}",
      "\tsupport: ${3:remote|onsite}",
      "\t#domain: ${4:}",
      "\t#log_path: ${5:}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#sra_ip: ${8:}",
      "\t#sra_port: ${9:}",
      "\t#token: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:false}"
    ]
  },
  "ibm_svc_manage_user": {
    "prefix": "ibm_svc_manage_user",
    "description": "This module manages user on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_user:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#auth_type: ${4:usergrp}",
      "\t#domain: ${5:}",
      "\t#forcepasswordchange: ${6:}",
      "\t#keyfile: ${7:}",
      "\t#lock: ${8:}",
      "\t#log_path: ${9:}",
      "\t#nokey: ${10:}",
      "\t#nopassword: ${11:}",
      "\t#password: ${12:}",
      "\t#token: ${13:}",
      "\t#unlock: ${14:}",
      "\t#user_password: ${15:}",
      "\t#usergroup: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:false}"
    ]
  },
  "ibm_svc_manage_usergroup": {
    "prefix": "ibm_svc_manage_usergroup",
    "description": "This module manages user group on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_usergroup:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#domain: ${4:}",
      "\t#log_path: ${5:}",
      "\t#noownershipgroup: ${6:}",
      "\t#ownershipgroup: ${7:}",
      "\t#password: ${8:}",
      "\t#role: ${9:Monitor|CopyOperator|Service|FlashCopyAdmin|Administrator|SecurityAdmin|VasaProvider|RestrictedAdmin|3SiteAdmin}",
      "\t#token: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:false}"
    ]
  },
  "ibm_svc_manage_volume": {
    "prefix": "ibm_svc_manage_volume",
    "description": "This module manages standard volumes on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_volume:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#allow_hs: ${4:false}",
      "\t#buffersize: ${5:}",
      "\t#cloud_account_name: ${6:}",
      "\t#compressed: ${7:}",
      "\t#deduplicated: ${8:}",
      "\t#domain: ${9:}",
      "\t#enable_cloud_snapshot: ${10:}",
      "\t#iogrp: ${11:}",
      "\t#log_path: ${12:}",
      "\t#novolumegroup: ${13:}",
      "\t#old_name: ${14:}",
      "\t#password: ${15:}",
      "\t#pool: ${16:}",
      "\t#size: ${17:}",
      "\t#thin: ${18:}",
      "\t#token: ${19:}",
      "\t#unit: ${20:b|kb|#mb|gb|tb|pb}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:false}",
      "\t#volumegroup: ${23:}"
    ]
  },
  "ibm_svc_manage_volumegroup": {
    "prefix": "ibm_svc_manage_volumegroup",
    "description": "This module manages volume groups on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_manage_volumegroup:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#domain: ${4:}",
      "\t#fromsourcegroup: ${5:}",
      "\t#ignoreuserfcmaps: ${6:yes|no}",
      "\t#iogrp: ${7:}",
      "\t#log_path: ${8:}",
      "\t#noownershipgroup: ${9:}",
      "\t#nopartition: ${10:}",
      "\t#noreplicationpolicy: ${11:}",
      "\t#nosafeguardpolicy: ${12:}",
      "\t#nosnapshotpolicy: ${13:}",
      "\t#old_name: ${14:}",
      "\t#ownershipgroup: ${15:}",
      "\t#partition: ${16:}",
      "\t#password: ${17:}",
      "\t#policystarttime: ${18:}",
      "\t#pool: ${19:}",
      "\t#replicationpolicy: ${20:}",
      "\t#safeguarded: ${21:false}",
      "\t#safeguardpolicyname: ${22:}",
      "\t#snapshot: ${23:}",
      "\t#snapshotpolicy: ${24:}",
      "\t#snapshotpolicysuspended: ${25:yes|no}",
      "\t#token: ${26:}",
      "\t#type: ${27:clone|thinclone}",
      "\t#username: ${28:}",
      "\t#validate_certs: ${29:false}"
    ]
  },
  "ibm_svc_mdisk": {
    "prefix": "ibm_svc_mdisk",
    "description": "This module manages MDisks on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_mdisk:",
      "\tclustername: ${1:}",
      "\tmdiskgrp: ${2:}",
      "\tname: ${3:}",
      "\tstate: ${4:absent|present}",
      "\t#domain: ${5:}",
      "\t#drive: ${6:}",
      "\t#driveclass: ${7:}",
      "\t#drivecount: ${8:}",
      "\t#encrypt: ${9:yes|#no}",
      "\t#level: ${10:raid0|raid1|raid5|raid6|raid10}",
      "\t#log_path: ${11:}",
      "\t#old_name: ${12:}",
      "\t#password: ${13:}",
      "\t#stripewidth: ${14:}",
      "\t#token: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:false}"
    ]
  },
  "ibm_svc_mdiskgrp": {
    "prefix": "ibm_svc_mdiskgrp",
    "description": "This module manages pools on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_mdiskgrp:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#datareduction: ${4:yes|#no}",
      "\t#domain: ${5:}",
      "\t#easytier: ${6:on|#off|auto}",
      "\t#encrypt: ${7:yes|#no}",
      "\t#etfcmoverallocationmax: ${8:}",
      "\t#ext: ${9:}",
      "\t#log_path: ${10:}",
      "\t#noownershipgroup: ${11:}",
      "\t#noprovisioningpolicy: ${12:}",
      "\t#noquota: ${13:}",
      "\t#old_name: ${14:}",
      "\t#ownershipgroup: ${15:}",
      "\t#parentmdiskgrp: ${16:}",
      "\t#password: ${17:}",
      "\t#provisioningpolicy: ${18:}",
      "\t#replication_partner_clusterid: ${19:}",
      "\t#replicationpoollinkuid: ${20:}",
      "\t#resetreplicationpoollinkuid: ${21:}",
      "\t#safeguarded: ${22:}",
      "\t#size: ${23:}",
      "\t#token: ${24:}",
      "\t#unit: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:false}",
      "\t#vdiskprotectionenabled: ${28:yes|no}",
      "\t#warning: ${29:}"
    ]
  },
  "ibm_svc_start_stop_flashcopy": {
    "prefix": "ibm_svc_start_stop_flashcopy",
    "description": "This module starts or stops FlashCopy mapping and consistency groups on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_start_stop_flashcopy:",
      "\tclustername: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:started|stopped}",
      "\t#domain: ${4:}",
      "\t#force: ${5:}",
      "\t#isgroup: ${6:}",
      "\t#log_path: ${7:}",
      "\t#password: ${8:}",
      "\t#token: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:false}"
    ]
  },
  "ibm_svc_start_stop_replication": {
    "prefix": "ibm_svc_start_stop_replication",
    "description": "This module starts or stops remote copies on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_start_stop_replication:",
      "\tclustername: ${1:}",
      "\tstate: ${2:started|stopped}",
      "\t#access: ${3:false}",
      "\t#clean: ${4:false}",
      "\t#domain: ${5:}",
      "\t#force: ${6:}",
      "\t#isgroup: ${7:false}",
      "\t#log_path: ${8:}",
      "\t#name: ${9:}",
      "\t#password: ${10:}",
      "\t#primary: ${11:master|aux}",
      "\t#token: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:false}"
    ]
  },
  "ibm_svc_vol_map": {
    "prefix": "ibm_svc_vol_map",
    "description": "This module manages volume mapping on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svc_vol_map:",
      "\tclustername: ${1:}",
      "\tstate: ${2:absent|present}",
      "\tvolname: ${3:}",
      "\t#domain: ${4:}",
      "\t#host: ${5:}",
      "\t#hostcluster: ${6:}",
      "\t#log_path: ${7:}",
      "\t#password: ${8:}",
      "\t#scsi: ${9:}",
      "\t#token: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:false}"
    ]
  },
  "ibm_svcinfo_command": {
    "prefix": "ibm_svcinfo_command",
    "description": "This module implements SSH Client which helps to run svcinfo CLI command on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svcinfo_command:",
      "\tclustername: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#command: ${4:}",
      "\t#key_filename: ${5:}",
      "\t#log_path: ${6:}",
      "\t#usesshkey: ${7:yes|#no}"
    ]
  },
  "ibm_svctask_command": {
    "prefix": "ibm_svctask_command",
    "description": "This module implements SSH Client which helps to run svctask CLI command(s) on IBM Storage Virtualize family systems",
    "body": [
      "ibm.storage_virtualize.ibm_svctask_command:",
      "\tclustername: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\t#command: ${4:}",
      "\t#key_filename: ${5:}",
      "\t#log_path: ${6:}",
      "\t#usesshkey: ${7:yes|#no}"
    ]
  },
  "junos_acl_interfaces": {
    "prefix": "junos_acl_interfaces",
    "description": "ACL interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_acl_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_acls": {
    "prefix": "junos_acls",
    "description": "ACLs resource module",
    "body": [
      "junipernetworks.junos.junos_acls:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_banner": {
    "prefix": "junos_banner",
    "description": "Manage multiline banners on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_banner:",
      "\tbanner: ${1:login|motd}",
      "\t#active: ${2:true}",
      "\t#state: ${3:#present|absent}",
      "\t#text: ${4:}"
    ]
  },
  "junos_bgp_address_family": {
    "prefix": "junos_bgp_address_family",
    "description": "Manage BGP Address Family attributes of interfaces on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_bgp_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "junos_bgp_global": {
    "prefix": "junos_bgp_global",
    "description": "Manages BGP Global configuration on devices running Juniper JUNOS.",
    "body": [
      "junipernetworks.junos.junos_bgp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:purged|#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_command": {
    "prefix": "junos_command",
    "description": "Run arbitrary commands on an Juniper JUNOS device",
    "body": [
      "junipernetworks.junos.junos_command:",
      "\t#commands: ${1:}",
      "\t#display: ${2:text|json|xml|set}",
      "\t#interval: ${3:1}",
      "\t#match: ${4:any|#all}",
      "\t#retries: ${5:10}",
      "\t#rpcs: ${6:}",
      "\t#wait_for: ${7:}"
    ]
  },
  "junos_config": {
    "prefix": "junos_config",
    "description": "Manage configuration on devices running Juniper JUNOS",
    "body": [
      "junipernetworks.junos.junos_config:",
      "\t#backup: ${1:false}",
      "\t#backup_options: ${2:}",
      "\t#check_commit: ${3:false}",
      "\t#comment: ${4:configured by junos_config}",
      "\t#confirm: ${5:0}",
      "\t#confirm_commit: ${6:false}",
      "\t#lines: ${7:}",
      "\t#replace: ${8:}",
      "\t#rollback: ${9:}",
      "\t#src: ${10:}",
      "\t#src_format: ${11:xml|set|text|json}",
      "\t#update: ${12:#merge|override|replace|update}",
      "\t#zeroize: ${13:false}"
    ]
  },
  "junos_facts": {
    "prefix": "junos_facts",
    "description": "Collect facts from remote devices running Juniper Junos",
    "body": [
      "junipernetworks.junos.junos_facts:",
      "\t#available_network_resources: ${1:false}",
      "\t#config_format: ${2:xml|#text|set|json}",
      "\t#gather_network_resources: ${3:}",
      "\t#gather_subset: ${4:['min']}"
    ]
  },
  "junos_hostname": {
    "prefix": "junos_hostname",
    "description": "Manage Hostname server configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_hostname:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_interfaces": {
    "prefix": "junos_interfaces",
    "description": "Junos Interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_l2_interfaces": {
    "prefix": "junos_l2_interfaces",
    "description": "L2 interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_l3_interfaces": {
    "prefix": "junos_l3_interfaces",
    "description": "L3 interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_lacp": {
    "prefix": "junos_lacp",
    "description": "Global Link Aggregation Control Protocol (LACP) Junos resource module",
    "body": [
      "junipernetworks.junos.junos_lacp:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_lacp_interfaces": {
    "prefix": "junos_lacp_interfaces",
    "description": "LACP interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_lacp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_lag_interfaces": {
    "prefix": "junos_lag_interfaces",
    "description": "Link Aggregation Juniper JUNOS resource module",
    "body": [
      "junipernetworks.junos.junos_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_lldp_global": {
    "prefix": "junos_lldp_global",
    "description": "LLDP resource module",
    "body": [
      "junipernetworks.junos.junos_lldp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_lldp_interfaces": {
    "prefix": "junos_lldp_interfaces",
    "description": "LLDP interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_logging_global": {
    "prefix": "junos_logging_global",
    "description": "Manage logging configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_logging_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_netconf": {
    "prefix": "junos_netconf",
    "description": "Configures the Junos Netconf system service",
    "body": [
      "junipernetworks.junos.junos_netconf:",
      "\t#netconf_port: ${1:830}",
      "\t#state: ${2:#present|absent}"
    ]
  },
  "junos_ntp_global": {
    "prefix": "junos_ntp_global",
    "description": "Manage NTP configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_ntp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_ospf_interfaces": {
    "prefix": "junos_ospf_interfaces",
    "description": "OSPF Interfaces Resource Module.",
    "body": [
      "junipernetworks.junos.junos_ospf_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "junos_ospfv2": {
    "prefix": "junos_ospfv2",
    "description": "OSPFv2 resource module",
    "body": [
      "junipernetworks.junos.junos_ospfv2:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_ospfv3": {
    "prefix": "junos_ospfv3",
    "description": "OSPFv3 resource module",
    "body": [
      "junipernetworks.junos.junos_ospfv3:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_package": {
    "prefix": "junos_package",
    "description": "Installs packages on remote devices running Junos",
    "body": [
      "junipernetworks.junos.junos_package:",
      "\tsrc: ${1:}",
      "\t#force: ${2:false}",
      "\t#force_host: ${3:false}",
      "\t#issu: ${4:false}",
      "\t#no_copy: ${5:false}",
      "\t#provider: ${6:}",
      "\t#reboot: ${7:true}",
      "\t#ssh_config: ${8:}",
      "\t#ssh_private_key_file: ${9:}",
      "\t#unlink: ${10:false}",
      "\t#validate: ${11:true}",
      "\t#version: ${12:}"
    ]
  },
  "junos_ping": {
    "prefix": "junos_ping",
    "description": "Tests reachability using ping from devices running Juniper JUNOS",
    "body": [
      "junipernetworks.junos.junos_ping:",
      "\tdest: ${1:}",
      "\t#count: ${2:5}",
      "\t#df_bit: ${3:false}",
      "\t#interface: ${4:}",
      "\t#interval: ${5:}",
      "\t#rapid: ${6:false}",
      "\t#size: ${7:}",
      "\t#source: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#ttl: ${10:}"
    ]
  },
  "junos_prefix_lists": {
    "prefix": "junos_prefix_lists",
    "description": "Manage prefix-lists attributes of interfaces on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_prefix_lists:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "junos_routing_instances": {
    "prefix": "junos_routing_instances",
    "description": "Manage routing instances on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_routing_instances:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "junos_routing_options": {
    "prefix": "junos_routing_options",
    "description": "Manage routing-options configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_routing_options:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_rpc": {
    "prefix": "junos_rpc",
    "description": "Runs an arbitrary RPC over NetConf on an Juniper JUNOS device",
    "body": [
      "junipernetworks.junos.junos_rpc:",
      "\trpc: ${1:}",
      "\t#args: ${2:}",
      "\t#attrs: ${3:}",
      "\t#output: ${4:#xml|json|text}"
    ]
  },
  "junos_security_policies": {
    "prefix": "junos_security_policies",
    "description": "Create and manage security policies on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_security_policies:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "junos_security_policies_global": {
    "prefix": "junos_security_policies_global",
    "description": "Manage global security policy settings on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_security_policies_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "junos_security_zones": {
    "prefix": "junos_security_zones",
    "description": "Manage security zones on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_security_zones:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "junos_snmp_server": {
    "prefix": "junos_snmp_server",
    "description": "Manage SNMP server configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_snmp_server:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_static_routes": {
    "prefix": "junos_static_routes",
    "description": "Static routes resource module",
    "body": [
      "junipernetworks.junos.junos_static_routes:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_system": {
    "prefix": "junos_system",
    "description": "Manage the system attributes on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_system:",
      "\t#active: ${1:true}",
      "\t#domain_name: ${2:}",
      "\t#domain_search: ${3:}",
      "\t#hostname: ${4:}",
      "\t#name_servers: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "junos_user": {
    "prefix": "junos_user",
    "description": "Manage local user accounts on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_user:",
      "\t#active: ${1:true}",
      "\t#aggregate: ${2:}",
      "\t#encrypted_password: ${3:}",
      "\t#full_name: ${4:}",
      "\t#name: ${5:}",
      "\t#purge: ${6:false}",
      "\t#role: ${7:operator|read-only|super-user|unauthorized}",
      "\t#sshkey: ${8:}",
      "\t#state: ${9:#present|absent}"
    ]
  },
  "junos_vlans": {
    "prefix": "junos_vlans",
    "description": "VLANs resource module",
    "body": [
      "junipernetworks.junos.junos_vlans:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_vrf": {
    "prefix": "junos_vrf",
    "description": "Manage the VRF definitions on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_vrf:",
      "\t#active: ${1:true}",
      "\t#aggregate: ${2:}",
      "\t#description: ${3:}",
      "\t#interfaces: ${4:}",
      "\t#name: ${5:}",
      "\t#rd: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#table_label: ${8:true}",
      "\t#target: ${9:}"
    ]
  },
  "helm": {
    "prefix": "helm",
    "description": "Manages Kubernetes packages with the Helm package manager",
    "body": [
      "kubernetes.core.helm:",
      "\trelease_name: ${1:}",
      "\trelease_namespace: ${2:}",
      "\t#api_key: ${3:}",
      "\t#atomic: ${4:false}",
      "\t#binary_path: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#chart_ref: ${7:}",
      "\t#chart_repo_url: ${8:}",
      "\t#chart_version: ${9:}",
      "\t#context: ${10:}",
      "\t#create_namespace: ${11:false}",
      "\t#dependency_update: ${12:false}",
      "\t#disable_hook: ${13:false}",
      "\t#force: ${14:false}",
      "\t#history_max: ${15:}",
      "\t#host: ${16:}",
      "\t#kubeconfig: ${17:}",
      "\t#post_renderer: ${18:}",
      "\t#purge: ${19:true}",
      "\t#release_state: ${20:#present|absent}",
      "\t#release_values: ${21:{\\}}",
      "\t#replace: ${22:false}",
      "\t#set_values: ${23:}",
      "\t#skip_crds: ${24:false}",
      "\t#timeout: ${25:}",
      "\t#update_repo_cache: ${26:false}",
      "\t#validate_certs: ${27:true}",
      "\t#values_files: ${28:[]}",
      "\t#wait: ${29:false}",
      "\t#wait_timeout: ${30:}"
    ]
  },
  "helm_info": {
    "prefix": "helm_info",
    "description": "Get information from Helm package deployed inside the cluster",
    "body": [
      "kubernetes.core.helm_info:",
      "\trelease_name: ${1:}",
      "\trelease_namespace: ${2:}",
      "\t#api_key: ${3:}",
      "\t#binary_path: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#context: ${6:}",
      "\t#get_all_values: ${7:false}",
      "\t#host: ${8:}",
      "\t#kubeconfig: ${9:}",
      "\t#release_state: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "helm_plugin": {
    "prefix": "helm_plugin",
    "description": "Manage Helm plugins",
    "body": [
      "kubernetes.core.helm_plugin:",
      "\t#api_key: ${1:}",
      "\t#binary_path: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#context: ${4:}",
      "\t#host: ${5:}",
      "\t#kubeconfig: ${6:}",
      "\t#plugin_name: ${7:}",
      "\t#plugin_path: ${8:}",
      "\t#plugin_version: ${9:}",
      "\t#state: ${10:absent|#present|latest}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "helm_plugin_info": {
    "prefix": "helm_plugin_info",
    "description": "Gather information about Helm plugins",
    "body": [
      "kubernetes.core.helm_plugin_info:",
      "\t#api_key: ${1:}",
      "\t#binary_path: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#context: ${4:}",
      "\t#host: ${5:}",
      "\t#kubeconfig: ${6:}",
      "\t#plugin_name: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "helm_pull": {
    "prefix": "helm_pull",
    "description": "download a chart from a repository and (optionally) unpack it in local directory.",
    "body": [
      "kubernetes.core.helm_pull:",
      "\tchart_ref: ${1:}",
      "\tdestination: ${2:}",
      "\t#binary_path: ${3:}",
      "\t#chart_ca_cert: ${4:}",
      "\t#chart_devel: ${5:}",
      "\t#chart_ssl_cert_file: ${6:}",
      "\t#chart_ssl_key_file: ${7:}",
      "\t#chart_version: ${8:}",
      "\t#pass_credentials: ${9:false}",
      "\t#provenance: ${10:false}",
      "\t#repo_password: ${11:}",
      "\t#repo_url: ${12:}",
      "\t#repo_username: ${13:}",
      "\t#skip_tls_certs_check: ${14:false}",
      "\t#untar_chart: ${15:false}",
      "\t#verify_chart: ${16:false}",
      "\t#verify_chart_keyring: ${17:}"
    ]
  },
  "helm_repository": {
    "prefix": "helm_repository",
    "description": "Manage Helm repositories.",
    "body": [
      "kubernetes.core.helm_repository:",
      "\trepo_name: ${1:}",
      "\t#api_key: ${2:}",
      "\t#binary_path: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#context: ${5:}",
      "\t#force_update: ${6:false}",
      "\t#host: ${7:}",
      "\t#kubeconfig: ${8:}",
      "\t#pass_credentials: ${9:false}",
      "\t#repo_password: ${10:}",
      "\t#repo_state: ${11:#present|absent}",
      "\t#repo_url: ${12:}",
      "\t#repo_username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "helm_template": {
    "prefix": "helm_template",
    "description": "Render chart templates",
    "body": [
      "kubernetes.core.helm_template:",
      "\tchart_ref: ${1:}",
      "\t#binary_path: ${2:}",
      "\t#chart_repo_url: ${3:}",
      "\t#chart_version: ${4:}",
      "\t#dependency_update: ${5:false}",
      "\t#disable_hook: ${6:false}",
      "\t#include_crds: ${7:false}",
      "\t#output_dir: ${8:}",
      "\t#release_name: ${9:}",
      "\t#release_namespace: ${10:}",
      "\t#release_values: ${11:{\\}}",
      "\t#set_values: ${12:}",
      "\t#show_only: ${13:}",
      "\t#update_repo_cache: ${14:false}",
      "\t#values_files: ${15:[]}"
    ]
  },
  "k8s": {
    "prefix": "k8s",
    "description": "Manage Kubernetes (K8s) objects",
    "body": [
      "kubernetes.core.k8s:",
      "\t#api_key: ${1:}",
      "\t#api_version: ${2:v1}",
      "\t#append_hash: ${3:false}",
      "\t#apply: ${4:false}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#context: ${8:}",
      "\t#continue_on_error: ${9:false}",
      "\t#delete_options: ${10:}",
      "\t#force: ${11:false}",
      "\t#generate_name: ${12:}",
      "\t#host: ${13:}",
      "\t#impersonate_groups: ${14:}",
      "\t#impersonate_user: ${15:}",
      "\t#kind: ${16:}",
      "\t#kubeconfig: ${17:}",
      "\t#label_selectors: ${18:}",
      "\t#merge_type: ${19:json|merge|strategic-merge}",
      "\t#name: ${20:}",
      "\t#namespace: ${21:}",
      "\t#no_proxy: ${22:}",
      "\t#password: ${23:}",
      "\t#persist_config: ${24:}",
      "\t#proxy: ${25:}",
      "\t#proxy_headers: ${26:}",
      "\t#resource_definition: ${27:}",
      "\t#server_side_apply: ${28:}",
      "\t#src: ${29:}",
      "\t#state: ${30:absent|#present|patched}",
      "\t#template: ${31:}",
      "\t#username: ${32:}",
      "\t#validate: ${33:}",
      "\t#validate_certs: ${34:}",
      "\t#wait: ${35:false}",
      "\t#wait_condition: ${36:}",
      "\t#wait_sleep: ${37:5}",
      "\t#wait_timeout: ${38:120}"
    ]
  },
  "k8s_cluster_info": {
    "prefix": "k8s_cluster_info",
    "description": "Describe Kubernetes (K8s) cluster, APIs available and their respective versions",
    "body": [
      "kubernetes.core.k8s_cluster_info:",
      "\t#api_key: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#context: ${5:}",
      "\t#host: ${6:}",
      "\t#impersonate_groups: ${7:}",
      "\t#impersonate_user: ${8:}",
      "\t#invalidate_cache: ${9:true}",
      "\t#kubeconfig: ${10:}",
      "\t#no_proxy: ${11:}",
      "\t#password: ${12:}",
      "\t#persist_config: ${13:}",
      "\t#proxy: ${14:}",
      "\t#proxy_headers: ${15:}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:}"
    ]
  },
  "k8s_cp": {
    "prefix": "k8s_cp",
    "description": "Copy files and directories to and from pod.",
    "body": [
      "kubernetes.core.k8s_cp:",
      "\tnamespace: ${1:}",
      "\tpod: ${2:}",
      "\tremote_path: ${3:}",
      "\t#api_key: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#container: ${8:}",
      "\t#content: ${9:}",
      "\t#context: ${10:}",
      "\t#host: ${11:}",
      "\t#impersonate_groups: ${12:}",
      "\t#impersonate_user: ${13:}",
      "\t#kubeconfig: ${14:}",
      "\t#local_path: ${15:}",
      "\t#no_preserve: ${16:false}",
      "\t#no_proxy: ${17:}",
      "\t#password: ${18:}",
      "\t#persist_config: ${19:}",
      "\t#proxy: ${20:}",
      "\t#proxy_headers: ${21:}",
      "\t#state: ${22:#to_pod|from_pod}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:}"
    ]
  },
  "k8s_drain": {
    "prefix": "k8s_drain",
    "description": "Drain, Cordon, or Uncordon node in k8s cluster",
    "body": [
      "kubernetes.core.k8s_drain:",
      "\tname: ${1:}",
      "\t#api_key: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#context: ${6:}",
      "\t#delete_options: ${7:}",
      "\t#host: ${8:}",
      "\t#impersonate_groups: ${9:}",
      "\t#impersonate_user: ${10:}",
      "\t#kubeconfig: ${11:}",
      "\t#no_proxy: ${12:}",
      "\t#password: ${13:}",
      "\t#persist_config: ${14:}",
      "\t#proxy: ${15:}",
      "\t#proxy_headers: ${16:}",
      "\t#state: ${17:cordon|#drain|uncordon}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:}"
    ]
  },
  "k8s_exec": {
    "prefix": "k8s_exec",
    "description": "Execute command in Pod",
    "body": [
      "kubernetes.core.k8s_exec:",
      "\tcommand: ${1:}",
      "\tnamespace: ${2:}",
      "\tpod: ${3:}",
      "\t#api_key: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#container: ${8:}",
      "\t#context: ${9:}",
      "\t#host: ${10:}",
      "\t#impersonate_groups: ${11:}",
      "\t#impersonate_user: ${12:}",
      "\t#kubeconfig: ${13:}",
      "\t#no_proxy: ${14:}",
      "\t#password: ${15:}",
      "\t#persist_config: ${16:}",
      "\t#proxy: ${17:}",
      "\t#proxy_headers: ${18:}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "k8s_info": {
    "prefix": "k8s_info",
    "description": "Describe Kubernetes (K8s) objects",
    "body": [
      "kubernetes.core.k8s_info:",
      "\tkind: ${1:}",
      "\t#api_key: ${2:}",
      "\t#api_version: ${3:v1}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#context: ${7:}",
      "\t#field_selectors: ${8:}",
      "\t#host: ${9:}",
      "\t#impersonate_groups: ${10:}",
      "\t#impersonate_user: ${11:}",
      "\t#kubeconfig: ${12:}",
      "\t#label_selectors: ${13:}",
      "\t#name: ${14:}",
      "\t#namespace: ${15:}",
      "\t#no_proxy: ${16:}",
      "\t#password: ${17:}",
      "\t#persist_config: ${18:}",
      "\t#proxy: ${19:}",
      "\t#proxy_headers: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}",
      "\t#wait: ${23:false}",
      "\t#wait_condition: ${24:}",
      "\t#wait_sleep: ${25:5}",
      "\t#wait_timeout: ${26:120}"
    ]
  },
  "k8s_json_patch": {
    "prefix": "k8s_json_patch",
    "description": "Apply JSON patch operations to existing objects",
    "body": [
      "kubernetes.core.k8s_json_patch:",
      "\tkind: ${1:}",
      "\tname: ${2:}",
      "\tpatch: ${3:}",
      "\t#api_key: ${4:}",
      "\t#api_version: ${5:v1}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#context: ${9:}",
      "\t#host: ${10:}",
      "\t#impersonate_groups: ${11:}",
      "\t#impersonate_user: ${12:}",
      "\t#kubeconfig: ${13:}",
      "\t#namespace: ${14:}",
      "\t#no_proxy: ${15:}",
      "\t#password: ${16:}",
      "\t#persist_config: ${17:}",
      "\t#proxy: ${18:}",
      "\t#proxy_headers: ${19:}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:}",
      "\t#wait: ${22:false}",
      "\t#wait_condition: ${23:}",
      "\t#wait_sleep: ${24:5}",
      "\t#wait_timeout: ${25:120}"
    ]
  },
  "k8s_log": {
    "prefix": "k8s_log",
    "description": "Fetch logs from Kubernetes resources",
    "body": [
      "kubernetes.core.k8s_log:",
      "\t#all_containers: ${1:}",
      "\t#api_key: ${2:}",
      "\t#api_version: ${3:v1}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#container: ${7:}",
      "\t#context: ${8:}",
      "\t#host: ${9:}",
      "\t#impersonate_groups: ${10:}",
      "\t#impersonate_user: ${11:}",
      "\t#kind: ${12:Pod}",
      "\t#kubeconfig: ${13:}",
      "\t#label_selectors: ${14:}",
      "\t#name: ${15:}",
      "\t#namespace: ${16:}",
      "\t#no_proxy: ${17:}",
      "\t#password: ${18:}",
      "\t#persist_config: ${19:}",
      "\t#previous: ${20:false}",
      "\t#proxy: ${21:}",
      "\t#proxy_headers: ${22:}",
      "\t#since_seconds: ${23:}",
      "\t#tail_lines: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:}"
    ]
  },
  "k8s_rollback": {
    "prefix": "k8s_rollback",
    "description": "Rollback Kubernetes (K8S) Deployments and DaemonSets",
    "body": [
      "kubernetes.core.k8s_rollback:",
      "\t#api_key: ${1:}",
      "\t#api_version: ${2:v1}",
      "\t#ca_cert: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#context: ${6:}",
      "\t#field_selectors: ${7:}",
      "\t#host: ${8:}",
      "\t#impersonate_groups: ${9:}",
      "\t#impersonate_user: ${10:}",
      "\t#kind: ${11:}",
      "\t#kubeconfig: ${12:}",
      "\t#label_selectors: ${13:}",
      "\t#name: ${14:}",
      "\t#namespace: ${15:}",
      "\t#no_proxy: ${16:}",
      "\t#password: ${17:}",
      "\t#persist_config: ${18:}",
      "\t#proxy: ${19:}",
      "\t#proxy_headers: ${20:}",
      "\t#username: ${21:}",
      "\t#validate_certs: ${22:}"
    ]
  },
  "k8s_scale": {
    "prefix": "k8s_scale",
    "description": "Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job.",
    "body": [
      "kubernetes.core.k8s_scale:",
      "\treplicas: ${1:}",
      "\t#api_key: ${2:}",
      "\t#api_version: ${3:v1}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#context: ${7:}",
      "\t#continue_on_error: ${8:false}",
      "\t#current_replicas: ${9:}",
      "\t#host: ${10:}",
      "\t#impersonate_groups: ${11:}",
      "\t#impersonate_user: ${12:}",
      "\t#kind: ${13:}",
      "\t#kubeconfig: ${14:}",
      "\t#label_selectors: ${15:}",
      "\t#name: ${16:}",
      "\t#namespace: ${17:}",
      "\t#no_proxy: ${18:}",
      "\t#password: ${19:}",
      "\t#persist_config: ${20:}",
      "\t#proxy: ${21:}",
      "\t#proxy_headers: ${22:}",
      "\t#resource_definition: ${23:}",
      "\t#resource_version: ${24:}",
      "\t#src: ${25:}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}",
      "\t#wait: ${28:true}",
      "\t#wait_sleep: ${29:5}",
      "\t#wait_timeout: ${30:20}"
    ]
  },
  "k8s_service": {
    "prefix": "k8s_service",
    "description": "Manage Services on Kubernetes",
    "body": [
      "kubernetes.core.k8s_service:",
      "\tname: ${1:}",
      "\tnamespace: ${2:}",
      "\t#api_key: ${3:}",
      "\t#apply: ${4:false}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#context: ${8:}",
      "\t#force: ${9:false}",
      "\t#host: ${10:}",
      "\t#impersonate_groups: ${11:}",
      "\t#impersonate_user: ${12:}",
      "\t#kubeconfig: ${13:}",
      "\t#merge_type: ${14:json|merge|strategic-merge}",
      "\t#no_proxy: ${15:}",
      "\t#password: ${16:}",
      "\t#persist_config: ${17:}",
      "\t#ports: ${18:}",
      "\t#proxy: ${19:}",
      "\t#proxy_headers: ${20:}",
      "\t#resource_definition: ${21:}",
      "\t#selector: ${22:}",
      "\t#src: ${23:}",
      "\t#state: ${24:absent|#present}",
      "\t#type: ${25:NodePort|ClusterIP|LoadBalancer|ExternalName}",
      "\t#username: ${26:}",
      "\t#validate_certs: ${27:}"
    ]
  },
  "k8s_taint": {
    "prefix": "k8s_taint",
    "description": "Taint a node in a Kubernetes/OpenShift cluster",
    "body": [
      "kubernetes.core.k8s_taint:",
      "\tname: ${1:}",
      "\ttaints: ${2:}",
      "\t#api_key: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#context: ${7:}",
      "\t#host: ${8:}",
      "\t#impersonate_groups: ${9:}",
      "\t#impersonate_user: ${10:}",
      "\t#kubeconfig: ${11:}",
      "\t#no_proxy: ${12:}",
      "\t#password: ${13:}",
      "\t#persist_config: ${14:}",
      "\t#proxy: ${15:}",
      "\t#proxy_headers: ${16:}",
      "\t#replace: ${17:false}",
      "\t#state: ${18:#present|absent}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:}"
    ]
  },
  "na_santricity_discover": {
    "prefix": "na_santricity_discover",
    "description": "NetApp E-Series discover E-Series storage systems",
    "body": [
      "netapp_eseries.santricity.na_santricity_discover:",
      "\tsubnet_mask: ${1:}",
      "\t#ports: ${2:[8443]}",
      "\t#prefer_embedded: ${3:false}",
      "\t#proxy_password: ${4:}",
      "\t#proxy_url: ${5:}",
      "\t#proxy_username: ${6:}",
      "\t#proxy_validate_certs: ${7:true}"
    ]
  },
  "netapp_e_alerts": {
    "prefix": "netapp_e_alerts",
    "description": "NetApp E-Series manage email notification settings",
    "body": [
      "netapp_eseries.santricity.netapp_e_alerts:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\t#contact: ${4:}",
      "\t#log_path: ${5:}",
      "\t#recipients: ${6:}",
      "\t#sender: ${7:}",
      "\t#server: ${8:}",
      "\t#ssid: ${9:1}",
      "\t#state: ${10:#enabled|disabled}",
      "\t#test: ${11:false}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "netapp_e_amg": {
    "prefix": "netapp_e_amg",
    "description": "NetApp E-Series create, remove, and update asynchronous mirror groups",
    "body": [
      "netapp_eseries.santricity.netapp_e_amg:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tname: ${4:}",
      "\tsecondaryArrayId: ${5:}",
      "\tstate: ${6:absent|present}",
      "\t#interfaceType: ${7:iscsi|fibre}",
      "\t#manualSync: ${8:false}",
      "\t#new_name: ${9:}",
      "\t#recoveryWarnThresholdMinutes: ${10:20}",
      "\t#repoUtilizationWarnThreshold: ${11:80}",
      "\t#ssid: ${12:1}",
      "\t#syncIntervalMinutes: ${13:10}",
      "\t#syncWarnThresholdMinutes: ${14:10}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "netapp_e_amg_role": {
    "prefix": "netapp_e_amg_role",
    "description": "NetApp E-Series update the role of a storage array within an Asynchronous Mirror Group (AMG).",
    "body": [
      "netapp_eseries.santricity.netapp_e_amg_role:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tname: ${4:}",
      "\trole: ${5:primary|secondary}",
      "\tssid: ${6:}",
      "\t#force: ${7:false}",
      "\t#noSync: ${8:false}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "netapp_e_amg_sync": {
    "prefix": "netapp_e_amg_sync",
    "description": "NetApp E-Series conduct synchronization actions on asynchronous mirror groups.",
    "body": [
      "netapp_eseries.santricity.netapp_e_amg_sync:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tname: ${4:}",
      "\tstate: ${5:running|suspended}",
      "\t#delete_recovery_point: ${6:false}",
      "\t#ssid: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "netapp_e_asup": {
    "prefix": "netapp_e_asup",
    "description": "NetApp E-Series manage auto-support settings",
    "body": [
      "netapp_eseries.santricity.netapp_e_asup:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\t#active: ${4:true}",
      "\t#days: ${5:monday|tuesday|wednesday|thursday|friday|saturday|sunday}",
      "\t#end: ${6:24}",
      "\t#log_path: ${7:}",
      "\t#ssid: ${8:1}",
      "\t#start: ${9:0}",
      "\t#state: ${10:#enabled|disabled}",
      "\t#validate_certs: ${11:true}",
      "\t#verbose: ${12:false}"
    ]
  },
  "netapp_e_auditlog": {
    "prefix": "netapp_e_auditlog",
    "description": "NetApp E-Series manage audit-log configuration",
    "body": [
      "netapp_eseries.santricity.netapp_e_auditlog:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\t#force: ${4:false}",
      "\t#full_policy: ${5:#overWrite|preventSystemAccess}",
      "\t#log_level: ${6:all|#writeOnly}",
      "\t#log_path: ${7:}",
      "\t#max_records: ${8:50000}",
      "\t#ssid: ${9:1}",
      "\t#threshold: ${10:90}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "netapp_e_auth": {
    "prefix": "netapp_e_auth",
    "description": "NetApp E-Series set or update the password for a storage array.",
    "body": [
      "netapp_eseries.santricity.netapp_e_auth:",
      "\tnew_password: ${1:}",
      "\t#api_password: ${2:}",
      "\t#api_url: ${3:}",
      "\t#api_username: ${4:}",
      "\t#current_password: ${5:}",
      "\t#name: ${6:}",
      "\t#set_admin: ${7:false}",
      "\t#ssid: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "netapp_e_drive_firmware": {
    "prefix": "netapp_e_drive_firmware",
    "description": "NetApp E-Series manage drive firmware",
    "body": [
      "netapp_eseries.santricity.netapp_e_drive_firmware:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tfirmware: ${4:}",
      "\t#ignore_inaccessible_drives: ${5:false}",
      "\t#ssid: ${6:1}",
      "\t#upgrade_drives_online: ${7:true}",
      "\t#validate_certs: ${8:true}",
      "\t#wait_for_completion: ${9:false}"
    ]
  },
  "netapp_e_facts": {
    "prefix": "netapp_e_facts",
    "description": "NetApp E-Series retrieve facts about NetApp E-Series storage arrays",
    "body": [
      "netapp_eseries.santricity.netapp_e_facts:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\t#ssid: ${4:1}",
      "\t#validate_certs: ${5:true}"
    ]
  },
  "netapp_e_firmware": {
    "prefix": "netapp_e_firmware",
    "description": "NetApp E-Series manage firmware.",
    "body": [
      "netapp_eseries.santricity.netapp_e_firmware:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tfirmware: ${4:}",
      "\tnvsram: ${5:}",
      "\t#ignore_health_check: ${6:false}",
      "\t#ssid: ${7:1}",
      "\t#validate_certs: ${8:true}",
      "\t#wait_for_completion: ${9:false}"
    ]
  },
  "netapp_e_flashcache": {
    "prefix": "netapp_e_flashcache",
    "description": "NetApp E-Series manage SSD caches",
    "body": [
      "netapp_eseries.santricity.netapp_e_flashcache:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tname: ${4:}",
      "\tssid: ${5:}",
      "\tstate: ${6:#present|absent}",
      "\t#cache_size_min: ${7:}",
      "\t#criteria_disk_phy_type: ${8:sas|sas4k|fibre|fibre520b|scsi|sata|pata}",
      "\t#disk_count: ${9:}",
      "\t#disk_refs: ${10:}",
      "\t#io_type: ${11:#filesystem|database|media}",
      "\t#log_mode: ${12:}",
      "\t#log_path: ${13:}",
      "\t#size_unit: ${14:bytes|b|kb|mb|#gb|tb|pb|eb|zb|yb}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "netapp_e_global": {
    "prefix": "netapp_e_global",
    "description": "NetApp E-Series manage global settings configuration",
    "body": [
      "netapp_eseries.santricity.netapp_e_global:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\t#log_path: ${4:}",
      "\t#name: ${5:}",
      "\t#ssid: ${6:1}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "netapp_e_host": {
    "prefix": "netapp_e_host",
    "description": "NetApp E-Series manage eseries hosts",
    "body": [
      "netapp_eseries.santricity.netapp_e_host:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tname: ${4:}",
      "\t#force_port: ${5:}",
      "\t#group: ${6:}",
      "\t#host_type: ${7:}",
      "\t#log_path: ${8:}",
      "\t#ports: ${9:}",
      "\t#ssid: ${10:1}",
      "\t#state: ${11:absent|#present}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "netapp_e_hostgroup": {
    "prefix": "netapp_e_hostgroup",
    "description": "NetApp E-Series manage array host groups",
    "body": [
      "netapp_eseries.santricity.netapp_e_hostgroup:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#hosts: ${5:}",
      "\t#id: ${6:}",
      "\t#name: ${7:}",
      "\t#new_name: ${8:}",
      "\t#ssid: ${9:1}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "netapp_e_iscsi_interface": {
    "prefix": "netapp_e_iscsi_interface",
    "description": "NetApp E-Series manage iSCSI interface configuration",
    "body": [
      "netapp_eseries.santricity.netapp_e_iscsi_interface:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tcontroller: ${4:A|B}",
      "\tname: ${5:}",
      "\t#address: ${6:}",
      "\t#config_method: ${7:#dhcp|static}",
      "\t#gateway: ${8:}",
      "\t#log_path: ${9:}",
      "\t#mtu: ${10:1500}",
      "\t#ssid: ${11:1}",
      "\t#state: ${12:#enabled|disabled}",
      "\t#subnet_mask: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "netapp_e_iscsi_target": {
    "prefix": "netapp_e_iscsi_target",
    "description": "NetApp E-Series manage iSCSI target configuration",
    "body": [
      "netapp_eseries.santricity.netapp_e_iscsi_target:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\t#chap_secret: ${4:}",
      "\t#log_path: ${5:}",
      "\t#name: ${6:}",
      "\t#ping: ${7:true}",
      "\t#ssid: ${8:1}",
      "\t#unnamed_discovery: ${9:true}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "netapp_e_ldap": {
    "prefix": "netapp_e_ldap",
    "description": "NetApp E-Series manage LDAP integration to use for authentication",
    "body": [
      "netapp_eseries.santricity.netapp_e_ldap:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tpassword: ${4:}",
      "\trole_mappings: ${5:}",
      "\tsearch_base: ${6:}",
      "\tserver: ${7:}",
      "\tusername: ${8:}",
      "\t#attributes: ${9:memberOf}",
      "\t#identifier: ${10:}",
      "\t#log_path: ${11:}",
      "\t#name: ${12:}",
      "\t#ssid: ${13:1}",
      "\t#state: ${14:#present|absent}",
      "\t#user_attribute: ${15:sAMAccountName}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "netapp_e_lun_mapping": {
    "prefix": "netapp_e_lun_mapping",
    "description": "NetApp E-Series create, delete, or modify lun mappings",
    "body": [
      "netapp_eseries.santricity.netapp_e_lun_mapping:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tstate: ${4:present|absent}",
      "\tvolume_name: ${5:}",
      "\t#lun: ${6:}",
      "\t#ssid: ${7:1}",
      "\t#target: ${8:}",
      "\t#target_type: ${9:host|group}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "netapp_e_mgmt_interface": {
    "prefix": "netapp_e_mgmt_interface",
    "description": "NetApp E-Series management interface configuration",
    "body": [
      "netapp_eseries.santricity.netapp_e_mgmt_interface:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tcontroller: ${4:A|B}",
      "\t#address: ${5:}",
      "\t#channel: ${6:}",
      "\t#config_method: ${7:dhcp|static}",
      "\t#dns_address: ${8:}",
      "\t#dns_address_backup: ${9:}",
      "\t#dns_config_method: ${10:dhcp|static}",
      "\t#gateway: ${11:}",
      "\t#log_path: ${12:}",
      "\t#name: ${13:}",
      "\t#ntp_address: ${14:}",
      "\t#ntp_address_backup: ${15:}",
      "\t#ntp_config_method: ${16:disable|dhcp|static}",
      "\t#ssh: ${17:}",
      "\t#ssid: ${18:1}",
      "\t#state: ${19:enable|disable}",
      "\t#subnet_mask: ${20:}",
      "\t#validate_certs: ${21:true}"
    ]
  },
  "netapp_e_snapshot_group": {
    "prefix": "netapp_e_snapshot_group",
    "description": "NetApp E-Series manage snapshot groups",
    "body": [
      "netapp_eseries.santricity.netapp_e_snapshot_group:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tbase_volume_name: ${4:}",
      "\tname: ${5:}",
      "\tstate: ${6:present|absent}",
      "\tstorage_pool_name: ${7:}",
      "\t#delete_limit: ${8:30}",
      "\t#full_policy: ${9:unknown|failbasewrites|#purgepit}",
      "\t#repo_pct: ${10:20}",
      "\t#rollback_priority: ${11:highest|high|#medium|low|lowest}",
      "\t#ssid: ${12:}",
      "\t#validate_certs: ${13:true}",
      "\t#warning_threshold: ${14:80}"
    ]
  },
  "netapp_e_snapshot_images": {
    "prefix": "netapp_e_snapshot_images",
    "description": "NetApp E-Series create and delete snapshot images",
    "body": [
      "netapp_eseries.santricity.netapp_e_snapshot_images:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tsnapshot_group: ${4:}",
      "\tstate: ${5:create|remove}",
      "\t#ssid: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "netapp_e_snapshot_volume": {
    "prefix": "netapp_e_snapshot_volume",
    "description": "NetApp E-Series manage snapshot volumes.",
    "body": [
      "netapp_eseries.santricity.netapp_e_snapshot_volume:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tname: ${4:}",
      "\tsnapshot_image_id: ${5:}",
      "\tssid: ${6:}",
      "\tstate: ${7:absent|present}",
      "\tstorage_pool_name: ${8:}",
      "\tview_mode: ${9:#readOnly|readWrite|modeUnknown|__Undefined}",
      "\t#full_threshold: ${10:85}",
      "\t#repo_percentage: ${11:20}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "netapp_e_storage_system": {
    "prefix": "netapp_e_storage_system",
    "description": "NetApp E-Series Web Services Proxy manage storage arrays",
    "body": [
      "netapp_eseries.santricity.netapp_e_storage_system:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tcontroller_addresses: ${4:}",
      "\tssid: ${5:}",
      "\tstate: ${6:present|absent}",
      "\t#array_password: ${7:}",
      "\t#array_status_timeout_sec: ${8:60}",
      "\t#array_wwn: ${9:}",
      "\t#enable_trace: ${10:false}",
      "\t#meta_tags: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "netapp_e_storagepool": {
    "prefix": "netapp_e_storagepool",
    "description": "NetApp E-Series manage volume groups and disk pools",
    "body": [
      "netapp_eseries.santricity.netapp_e_storagepool:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tname: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#criteria_drive_count: ${6:}",
      "\t#criteria_drive_interface_type: ${7:sas|sas4k|fibre|fibre520b|scsi|sata|pata}",
      "\t#criteria_drive_min_size: ${8:}",
      "\t#criteria_drive_require_da: ${9:false}",
      "\t#criteria_drive_require_fde: ${10:false}",
      "\t#criteria_drive_type: ${11:hdd|ssd}",
      "\t#criteria_min_usable_capacity: ${12:}",
      "\t#criteria_size_unit: ${13:bytes|b|kb|mb|#gb|tb|pb|eb|zb|yb}",
      "\t#erase_secured_drives: ${14:true}",
      "\t#raid_level: ${15:raidAll|raid0|raid1|raid3|raid5|raid6|#raidDiskPool}",
      "\t#remove_volumes: ${16:true}",
      "\t#reserve_drive_count: ${17:}",
      "\t#secure_pool: ${18:}",
      "\t#ssid: ${19:1}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "netapp_e_syslog": {
    "prefix": "netapp_e_syslog",
    "description": "NetApp E-Series manage syslog settings",
    "body": [
      "netapp_eseries.santricity.netapp_e_syslog:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\t#address: ${4:}",
      "\t#components: ${5:['auditLog']}",
      "\t#log_path: ${6:}",
      "\t#port: ${7:514}",
      "\t#protocol: ${8:#udp|tcp|tls}",
      "\t#ssid: ${9:1}",
      "\t#state: ${10:#present|absent}",
      "\t#test: ${11:false}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "netapp_e_volume": {
    "prefix": "netapp_e_volume",
    "description": "NetApp E-Series manage storage volumes (standard and thin)",
    "body": [
      "netapp_eseries.santricity.netapp_e_volume:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tname: ${4:}",
      "\tsize: ${5:}",
      "\tstate: ${6:present|absent}",
      "\t#cache_without_batteries: ${7:false}",
      "\t#data_assurance_enabled: ${8:false}",
      "\t#initialization_timeout: ${9:}",
      "\t#metadata: ${10:}",
      "\t#owning_controller: ${11:A|B}",
      "\t#read_ahead_enable: ${12:true}",
      "\t#read_cache_enable: ${13:true}",
      "\t#segment_size_kb: ${14:128}",
      "\t#size_unit: ${15:bytes|b|kb|mb|#gb|tb|pb|eb|zb|yb}",
      "\t#ssd_cache_enabled: ${16:false}",
      "\t#ssid: ${17:1}",
      "\t#storage_pool_name: ${18:}",
      "\t#thin_provision: ${19:false}",
      "\t#thin_volume_expansion_policy: ${20:#automatic|manual}",
      "\t#thin_volume_growth_alert_threshold: ${21:95}",
      "\t#thin_volume_max_repo_size: ${22:}",
      "\t#thin_volume_repo_size: ${23:}",
      "\t#validate_certs: ${24:true}",
      "\t#wait_for_initialization: ${25:false}",
      "\t#workload_name: ${26:}",
      "\t#write_cache_enable: ${27:true}"
    ]
  },
  "netapp_e_volume_copy": {
    "prefix": "netapp_e_volume_copy",
    "description": "NetApp E-Series create volume copy pairs",
    "body": [
      "netapp_eseries.santricity.netapp_e_volume_copy:",
      "\tapi_password: ${1:}",
      "\tapi_url: ${2:}",
      "\tapi_username: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#copy_priority: ${5:0}",
      "\t#create_copy_pair_if_does_not_exist: ${6:true}",
      "\t#destination_volume_id: ${7:}",
      "\t#onlineCopy: ${8:false}",
      "\t#search_volume_id: ${9:}",
      "\t#source_volume_id: ${10:}",
      "\t#ssid: ${11:1}",
      "\t#start_stop_copy: ${12:start|stop}",
      "\t#targetWriteProtected: ${13:true}",
      "\t#validate_certs: ${14:true}",
      "\t#volume_copy_pair_id: ${15:}"
    ]
  },
  "cs_account": {
    "prefix": "cs_account",
    "description": "Manages accounts on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_account:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account_type: ${5:#user|root_admin|domain_admin}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#domain: ${9:ROOT}",
      "\t#email: ${10:}",
      "\t#first_name: ${11:}",
      "\t#last_name: ${12:}",
      "\t#ldap_domain: ${13:}",
      "\t#ldap_type: ${14:#GROUP|OU}",
      "\t#network_domain: ${15:}",
      "\t#password: ${16:}",
      "\t#poll_async: ${17:true}",
      "\t#role: ${18:}",
      "\t#state: ${19:#present|absent|enabled|disabled|locked|unlocked}",
      "\t#timezone: ${20:}",
      "\t#username: ${21:}"
    ]
  },
  "cs_affinitygroup": {
    "prefix": "cs_affinitygroup",
    "description": "Manages affinity groups on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_affinitygroup:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#affinity_type: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#description: ${10:}",
      "\t#domain: ${11:}",
      "\t#poll_async: ${12:true}",
      "\t#project: ${13:}",
      "\t#state: ${14:#present|absent}"
    ]
  },
  "cs_cluster": {
    "prefix": "cs_cluster",
    "description": "Manages host clusters on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_cluster:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#cluster_type: ${9:CloudManaged|ExternalManaged}",
      "\t#guest_vswitch_name: ${10:}",
      "\t#guest_vswitch_type: ${11:vmwaresvs|vmwaredvs}",
      "\t#hypervisor: ${12:}",
      "\t#ovm3_cluster: ${13:}",
      "\t#ovm3_pool: ${14:}",
      "\t#ovm3_vip: ${15:}",
      "\t#password: ${16:}",
      "\t#pod: ${17:}",
      "\t#public_vswitch_name: ${18:}",
      "\t#public_vswitch_type: ${19:vmwaresvs|vmwaredvs}",
      "\t#state: ${20:#present|absent|disabled|enabled}",
      "\t#url: ${21:}",
      "\t#username: ${22:}",
      "\t#vms_ip_address: ${23:}",
      "\t#vms_password: ${24:}",
      "\t#vms_username: ${25:}"
    ]
  },
  "cs_configuration": {
    "prefix": "cs_configuration",
    "description": "Manages configuration on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_configuration:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tvalue: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#cluster: ${10:}",
      "\t#domain: ${11:ROOT}",
      "\t#storage: ${12:}",
      "\t#zone: ${13:}"
    ]
  },
  "cs_disk_offering": {
    "prefix": "cs_disk_offering",
    "description": "Manages disk offerings on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_disk_offering:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#bytes_read_rate: ${8:}",
      "\t#bytes_write_rate: ${9:}",
      "\t#customized: ${10:}",
      "\t#disk_size: ${11:}",
      "\t#display_offering: ${12:}",
      "\t#display_text: ${13:}",
      "\t#domain: ${14:}",
      "\t#hypervisor_snapshot_reserve: ${15:}",
      "\t#iops_max: ${16:}",
      "\t#iops_min: ${17:}",
      "\t#iops_read_rate: ${18:}",
      "\t#iops_write_rate: ${19:}",
      "\t#provisioning_type: ${20:thin|sparse|fat}",
      "\t#state: ${21:#present|absent}",
      "\t#storage_tags: ${22:}",
      "\t#storage_type: ${23:local|shared}"
    ]
  },
  "cs_domain": {
    "prefix": "cs_domain",
    "description": "Manages domains on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_domain:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tpath: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#clean_up: ${8:false}",
      "\t#network_domain: ${9:}",
      "\t#poll_async: ${10:true}",
      "\t#state: ${11:#present|absent}"
    ]
  },
  "cs_facts": {
    "prefix": "cs_facts",
    "description": "Gather facts on instances of Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_facts:",
      "\t#filter: ${1:cloudstack_service_offering|cloudstack_availability_zone|cloudstack_public_hostname|cloudstack_public_ipv4|cloudstack_local_hostname|cloudstack_local_ipv4|cloudstack_instance_id|cloudstack_user_data}",
      "\t#meta_data_host: ${2:}"
    ]
  },
  "cs_firewall": {
    "prefix": "cs_firewall",
    "description": "Manages firewall rules on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_firewall:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tzone: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#cidrs: ${9:0.0.0.0/0}",
      "\t#domain: ${10:}",
      "\t#end_port: ${11:}",
      "\t#icmp_code: ${12:}",
      "\t#icmp_type: ${13:}",
      "\t#ip_address: ${14:}",
      "\t#network: ${15:}",
      "\t#poll_async: ${16:true}",
      "\t#project: ${17:}",
      "\t#protocol: ${18:#tcp|udp|icmp|all}",
      "\t#start_port: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#tags: ${21:}",
      "\t#type: ${22:#ingress|egress}"
    ]
  },
  "cs_host": {
    "prefix": "cs_host",
    "description": "Manages hosts on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_host:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#allocation_state: ${6:enabled|disabled|maintenance}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#cluster: ${10:}",
      "\t#host_tags: ${11:}",
      "\t#hypervisor: ${12:}",
      "\t#password: ${13:}",
      "\t#pod: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#url: ${16:}",
      "\t#username: ${17:}"
    ]
  },
  "cs_image_store": {
    "prefix": "cs_image_store",
    "description": "Manages CloudStack Image Stores.",
    "body": [
      "ngine_io.cloudstack.cs_image_store:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#force_recreate: ${9:false}",
      "\t#provider: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#url: ${12:}"
    ]
  },
  "cs_instance": {
    "prefix": "cs_instance",
    "description": "Manages instances and virtual machines on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_instance:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tzone: ${4:}",
      "\t#account: ${5:}",
      "\t#affinity_groups: ${6:}",
      "\t#allow_root_disk_shrink: ${7:false}",
      "\t#api_http_method: ${8:#get|post}",
      "\t#api_timeout: ${9:10}",
      "\t#api_verify_ssl_cert: ${10:}",
      "\t#cluster: ${11:}",
      "\t#cpu: ${12:}",
      "\t#cpu_speed: ${13:}",
      "\t#details: ${14:}",
      "\t#disk_offering: ${15:}",
      "\t#disk_size: ${16:}",
      "\t#display_name: ${17:}",
      "\t#domain: ${18:}",
      "\t#force: ${19:false}",
      "\t#group: ${20:}",
      "\t#host: ${21:}",
      "\t#hypervisor: ${22:}",
      "\t#ip6_address: ${23:}",
      "\t#ip_address: ${24:}",
      "\t#ip_to_networks: ${25:}",
      "\t#iso: ${26:}",
      "\t#keyboard: ${27:de|de-ch|es|fi|fr|fr-be|fr-ch|is|it|jp|nl-be|no|pt|uk|us}",
      "\t#memory: ${28:}",
      "\t#name: ${29:}",
      "\t#networks: ${30:}",
      "\t#pod: ${31:}",
      "\t#poll_async: ${32:true}",
      "\t#project: ${33:}",
      "\t#root_disk_size: ${34:}",
      "\t#security_groups: ${35:}",
      "\t#service_offering: ${36:}",
      "\t#ssh_key: ${37:}",
      "\t#state: ${38:deployed|started|stopped|restarted|restored|destroyed|expunged|#present|absent}",
      "\t#tags: ${39:}",
      "\t#template: ${40:}",
      "\t#template_filter: ${41:all|featured|self|selfexecutable|sharedexecutable|#executable|community}",
      "\t#user_data: ${42:}"
    ]
  },
  "cs_instance_info": {
    "prefix": "cs_instance_info",
    "description": "Gathering information from the API of instances from Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_instance_info:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\t#account: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#domain: ${8:}",
      "\t#host: ${9:}",
      "\t#name: ${10:}",
      "\t#project: ${11:}"
    ]
  },
  "cs_instance_nic": {
    "prefix": "cs_instance_nic",
    "description": "Manages NICs of an instance on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_instance_nic:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tnetwork: ${4:}",
      "\tvm: ${5:}",
      "\tzone: ${6:}",
      "\t#account: ${7:}",
      "\t#api_http_method: ${8:#get|post}",
      "\t#api_timeout: ${9:10}",
      "\t#api_verify_ssl_cert: ${10:}",
      "\t#domain: ${11:}",
      "\t#ip_address: ${12:}",
      "\t#poll_async: ${13:true}",
      "\t#project: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#vpc: ${16:}"
    ]
  },
  "cs_instance_nic_secondaryip": {
    "prefix": "cs_instance_nic_secondaryip",
    "description": "Manages secondary IPs of an instance on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_instance_nic_secondaryip:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tvm: ${4:}",
      "\tzone: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#domain: ${10:}",
      "\t#network: ${11:}",
      "\t#poll_async: ${12:true}",
      "\t#project: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#vm_guest_ip: ${15:}",
      "\t#vpc: ${16:}"
    ]
  },
  "cs_instance_password_reset": {
    "prefix": "cs_instance_password_reset",
    "description": "Allows resetting VM the default passwords on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_instance_password_reset:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tvm: ${4:}",
      "\tzone: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#domain: ${10:}",
      "\t#poll_async: ${11:true}",
      "\t#project: ${12:}"
    ]
  },
  "cs_instancegroup": {
    "prefix": "cs_instancegroup",
    "description": "Manages instance groups on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_instancegroup:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#domain: ${9:}",
      "\t#project: ${10:}",
      "\t#state: ${11:#present|absent}"
    ]
  },
  "cs_ip_address": {
    "prefix": "cs_ip_address",
    "description": "Manages public IP address associations on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_ip_address:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tzone: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#domain: ${9:}",
      "\t#ip_address: ${10:}",
      "\t#network: ${11:}",
      "\t#poll_async: ${12:true}",
      "\t#project: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#tags: ${15:}",
      "\t#vpc: ${16:}"
    ]
  },
  "cs_iso": {
    "prefix": "cs_iso",
    "description": "Manages ISO images on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_iso:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#bootable: ${9:}",
      "\t#checksum: ${10:}",
      "\t#cross_zones: ${11:false}",
      "\t#display_text: ${12:}",
      "\t#domain: ${13:}",
      "\t#is_dynamically_scalable: ${14:}",
      "\t#is_featured: ${15:}",
      "\t#is_public: ${16:}",
      "\t#is_ready: ${17:false}",
      "\t#iso_filter: ${18:featured|#self|selfexecutable|sharedexecutable|executable|community}",
      "\t#os_type: ${19:}",
      "\t#poll_async: ${20:true}",
      "\t#project: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#tags: ${23:}",
      "\t#url: ${24:}",
      "\t#zone: ${25:}"
    ]
  },
  "cs_loadbalancer_rule": {
    "prefix": "cs_loadbalancer_rule",
    "description": "Manages load balancer rules on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_loadbalancer_rule:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tip_address: ${4:}",
      "\tname: ${5:}",
      "\t#account: ${6:}",
      "\t#algorithm: ${7:#source|roundrobin|leastconn}",
      "\t#api_http_method: ${8:#get|post}",
      "\t#api_timeout: ${9:10}",
      "\t#api_verify_ssl_cert: ${10:}",
      "\t#cidr: ${11:}",
      "\t#description: ${12:}",
      "\t#domain: ${13:}",
      "\t#network: ${14:}",
      "\t#open_firewall: ${15:false}",
      "\t#poll_async: ${16:true}",
      "\t#private_port: ${17:}",
      "\t#project: ${18:}",
      "\t#protocol: ${19:}",
      "\t#public_port: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#tags: ${22:}",
      "\t#vpc: ${23:}",
      "\t#zone: ${24:}"
    ]
  },
  "cs_loadbalancer_rule_member": {
    "prefix": "cs_loadbalancer_rule_member",
    "description": "Manages load balancer rule members on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_loadbalancer_rule_member:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tvms: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#domain: ${10:}",
      "\t#ip_address: ${11:}",
      "\t#poll_async: ${12:true}",
      "\t#project: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#zone: ${15:}"
    ]
  },
  "cs_network": {
    "prefix": "cs_network",
    "description": "Manages networks on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_network:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#account: ${6:}",
      "\t#acl: ${7:}",
      "\t#acl_type: ${8:account|domain}",
      "\t#api_http_method: ${9:#get|post}",
      "\t#api_timeout: ${10:10}",
      "\t#api_verify_ssl_cert: ${11:}",
      "\t#cidr_ipv6: ${12:}",
      "\t#clean_up: ${13:false}",
      "\t#display_text: ${14:}",
      "\t#domain: ${15:}",
      "\t#end_ip: ${16:}",
      "\t#end_ipv6: ${17:}",
      "\t#gateway: ${18:}",
      "\t#gateway_ipv6: ${19:}",
      "\t#isolated_pvlan: ${20:}",
      "\t#netmask: ${21:}",
      "\t#network_domain: ${22:}",
      "\t#network_offering: ${23:}",
      "\t#poll_async: ${24:true}",
      "\t#project: ${25:}",
      "\t#start_ip: ${26:}",
      "\t#start_ipv6: ${27:}",
      "\t#state: ${28:#present|absent|restarted}",
      "\t#subdomain_access: ${29:}",
      "\t#tags: ${30:}",
      "\t#vlan: ${31:}",
      "\t#vpc: ${32:}"
    ]
  },
  "cs_network_acl": {
    "prefix": "cs_network_acl",
    "description": "Manages network access control lists (ACL) on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_network_acl:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tvpc: ${5:}",
      "\tzone: ${6:}",
      "\t#account: ${7:}",
      "\t#api_http_method: ${8:#get|post}",
      "\t#api_timeout: ${9:10}",
      "\t#api_verify_ssl_cert: ${10:}",
      "\t#description: ${11:}",
      "\t#domain: ${12:}",
      "\t#poll_async: ${13:true}",
      "\t#project: ${14:}",
      "\t#state: ${15:#present|absent}"
    ]
  },
  "cs_network_acl_rule": {
    "prefix": "cs_network_acl_rule",
    "description": "Manages network access control list (ACL) rules on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_network_acl_rule:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tnetwork_acl: ${4:}",
      "\trule_position: ${5:}",
      "\tvpc: ${6:}",
      "\tzone: ${7:}",
      "\t#account: ${8:}",
      "\t#action_policy: ${9:#allow|deny}",
      "\t#api_http_method: ${10:#get|post}",
      "\t#api_timeout: ${11:10}",
      "\t#api_verify_ssl_cert: ${12:}",
      "\t#cidrs: ${13:['0.0.0.0/0']}",
      "\t#domain: ${14:}",
      "\t#end_port: ${15:}",
      "\t#icmp_code: ${16:}",
      "\t#icmp_type: ${17:}",
      "\t#poll_async: ${18:true}",
      "\t#project: ${19:}",
      "\t#protocol: ${20:#tcp|udp|icmp|all|by_number}",
      "\t#protocol_number: ${21:}",
      "\t#start_port: ${22:}",
      "\t#state: ${23:#present|absent}",
      "\t#tags: ${24:}",
      "\t#traffic_type: ${25:#ingress|egress}"
    ]
  },
  "cs_network_offering": {
    "prefix": "cs_network_offering",
    "description": "Manages network offerings on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_network_offering:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#availability: ${8:}",
      "\t#conserve_mode: ${9:}",
      "\t#details: ${10:}",
      "\t#display_text: ${11:}",
      "\t#domains: ${12:}",
      "\t#egress_default_policy: ${13:allow|deny}",
      "\t#for_vpc: ${14:}",
      "\t#guest_ip_type: ${15:Shared|Isolated}",
      "\t#keepalive_enabled: ${16:}",
      "\t#max_connections: ${17:}",
      "\t#network_rate: ${18:}",
      "\t#persistent: ${19:}",
      "\t#service_capabilities: ${20:}",
      "\t#service_offering: ${21:}",
      "\t#service_providers: ${22:}",
      "\t#specify_ip_ranges: ${23:}",
      "\t#specify_vlan: ${24:}",
      "\t#state: ${25:enabled|#present|disabled|absent}",
      "\t#supported_services: ${26:Dns|PortForwarding|Dhcp|SourceNat|UserData|Firewall|StaticNat|Vpn|Lb}",
      "\t#tags: ${27:}",
      "\t#traffic_type: ${28:Guest}",
      "\t#zones: ${29:}"
    ]
  },
  "cs_physical_network": {
    "prefix": "cs_physical_network",
    "description": "Manages physical networks on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_physical_network:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#broadcast_domain_range: ${9:POD|ZONE}",
      "\t#domain: ${10:}",
      "\t#isolation_method: ${11:VLAN|VXLAN|GRE|L3}",
      "\t#network_speed: ${12:1G|10G}",
      "\t#nsps_disabled: ${13:}",
      "\t#nsps_enabled: ${14:}",
      "\t#poll_async: ${15:true}",
      "\t#state: ${16:#present|absent|disabled|enabled}",
      "\t#tags: ${17:}",
      "\t#vlan: ${18:}"
    ]
  },
  "cs_pod": {
    "prefix": "cs_pod",
    "description": "Manages pods on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_pod:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#end_ip: ${9:}",
      "\t#gateway: ${10:}",
      "\t#id: ${11:}",
      "\t#netmask: ${12:}",
      "\t#start_ip: ${13:}",
      "\t#state: ${14:#present|enabled|disabled|absent}"
    ]
  },
  "cs_portforward": {
    "prefix": "cs_portforward",
    "description": "Manages port forwarding rules on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_portforward:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tip_address: ${4:}",
      "\tprivate_port: ${5:}",
      "\tpublic_port: ${6:}",
      "\tzone: ${7:}",
      "\t#account: ${8:}",
      "\t#api_http_method: ${9:#get|post}",
      "\t#api_timeout: ${10:10}",
      "\t#api_verify_ssl_cert: ${11:}",
      "\t#domain: ${12:}",
      "\t#network: ${13:}",
      "\t#open_firewall: ${14:false}",
      "\t#poll_async: ${15:true}",
      "\t#private_end_port: ${16:}",
      "\t#project: ${17:}",
      "\t#protocol: ${18:#tcp|udp}",
      "\t#public_end_port: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#tags: ${21:}",
      "\t#vm: ${22:}",
      "\t#vm_guest_ip: ${23:}",
      "\t#vpc: ${24:}"
    ]
  },
  "cs_project": {
    "prefix": "cs_project",
    "description": "Manages projects on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_project:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#display_text: ${9:}",
      "\t#domain: ${10:}",
      "\t#poll_async: ${11:true}",
      "\t#state: ${12:#present|absent|active|suspended}",
      "\t#tags: ${13:}"
    ]
  },
  "cs_region": {
    "prefix": "cs_region",
    "description": "Manages regions on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_region:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tid: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#endpoint: ${8:}",
      "\t#name: ${9:}",
      "\t#state: ${10:#present|absent}"
    ]
  },
  "cs_resourcelimit": {
    "prefix": "cs_resourcelimit",
    "description": "Manages resource limits on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_resourcelimit:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tresource_type: ${4:instance|ip_address|volume|snapshot|template|network|vpc|cpu|memory|primary_storage|secondary_storage}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#domain: ${9:}",
      "\t#limit: ${10:-1}",
      "\t#project: ${11:}"
    ]
  },
  "cs_role": {
    "prefix": "cs_role",
    "description": "Manages user roles on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_role:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#description: ${8:}",
      "\t#role_type: ${9:#User|DomainAdmin|ResourceAdmin|Admin}",
      "\t#state: ${10:#present|absent}",
      "\t#uuid: ${11:}"
    ]
  },
  "cs_role_permission": {
    "prefix": "cs_role_permission",
    "description": "Manages role permissions on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_role_permission:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\trole: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#description: ${9:}",
      "\t#parent: ${10:}",
      "\t#permission: ${11:allow|#deny}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "cs_router": {
    "prefix": "cs_router",
    "description": "Manages routers on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_router:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#domain: ${9:}",
      "\t#poll_async: ${10:true}",
      "\t#project: ${11:}",
      "\t#service_offering: ${12:}",
      "\t#state: ${13:#present|absent|started|stopped|restarted}",
      "\t#zone: ${14:}"
    ]
  },
  "cs_securitygroup": {
    "prefix": "cs_securitygroup",
    "description": "Manages security groups on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_securitygroup:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#description: ${9:}",
      "\t#domain: ${10:}",
      "\t#project: ${11:}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "cs_securitygroup_rule": {
    "prefix": "cs_securitygroup_rule",
    "description": "Manages security group rules on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_securitygroup_rule:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tsecurity_group: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#cidr: ${8:0.0.0.0/0}",
      "\t#end_port: ${9:}",
      "\t#icmp_code: ${10:}",
      "\t#icmp_type: ${11:}",
      "\t#poll_async: ${12:true}",
      "\t#project: ${13:}",
      "\t#protocol: ${14:#tcp|udp|icmp|ah|esp|gre}",
      "\t#start_port: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#type: ${17:#ingress|egress}",
      "\t#user_security_group: ${18:}"
    ]
  },
  "cs_service_offering": {
    "prefix": "cs_service_offering",
    "description": "Manages service offerings on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_service_offering:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#cpu_number: ${8:}",
      "\t#cpu_speed: ${9:}",
      "\t#deployment_planner: ${10:}",
      "\t#disk_bytes_read_rate: ${11:}",
      "\t#disk_bytes_write_rate: ${12:}",
      "\t#disk_iops_max: ${13:}",
      "\t#disk_iops_min: ${14:}",
      "\t#disk_iops_read_rate: ${15:}",
      "\t#disk_iops_write_rate: ${16:}",
      "\t#display_text: ${17:}",
      "\t#domain: ${18:}",
      "\t#host_tags: ${19:}",
      "\t#hypervisor_snapshot_reserve: ${20:}",
      "\t#is_customized: ${21:}",
      "\t#is_iops_customized: ${22:}",
      "\t#is_system: ${23:false}",
      "\t#is_volatile: ${24:}",
      "\t#limit_cpu_usage: ${25:}",
      "\t#memory: ${26:}",
      "\t#network_rate: ${27:}",
      "\t#offer_ha: ${28:}",
      "\t#provisioning_type: ${29:thin|sparse|fat}",
      "\t#service_offering_details: ${30:}",
      "\t#state: ${31:#present|absent}",
      "\t#storage_tags: ${32:}",
      "\t#storage_type: ${33:local|shared}",
      "\t#system_vm_type: ${34:domainrouter|consoleproxy|secondarystoragevm}"
    ]
  },
  "cs_snapshot_policy": {
    "prefix": "cs_snapshot_policy",
    "description": "Manages volume snapshot policies on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_snapshot_policy:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\t#account: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#device_id: ${8:}",
      "\t#domain: ${9:}",
      "\t#interval_type: ${10:hourly|#daily|weekly|monthly}",
      "\t#max_snaps: ${11:8}",
      "\t#project: ${12:}",
      "\t#schedule: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#time_zone: ${15:UTC}",
      "\t#vm: ${16:}",
      "\t#volume: ${17:}",
      "\t#volume_type: ${18:DATADISK|ROOT}",
      "\t#vpc: ${19:}"
    ]
  },
  "cs_sshkeypair": {
    "prefix": "cs_sshkeypair",
    "description": "Manages SSH keys on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_sshkeypair:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#domain: ${9:}",
      "\t#project: ${10:}",
      "\t#public_key: ${11:}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "cs_staticnat": {
    "prefix": "cs_staticnat",
    "description": "Manages static NATs on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_staticnat:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tip_address: ${4:}",
      "\tzone: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#domain: ${10:}",
      "\t#network: ${11:}",
      "\t#poll_async: ${12:true}",
      "\t#project: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#vm: ${15:}",
      "\t#vm_guest_ip: ${16:}",
      "\t#vpc: ${17:}"
    ]
  },
  "cs_storage_pool": {
    "prefix": "cs_storage_pool",
    "description": "Manages Primary Storage Pools on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_storage_pool:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#allocation_state: ${6:enabled|disabled|maintenance}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#capacity_bytes: ${10:}",
      "\t#capacity_iops: ${11:}",
      "\t#cluster: ${12:}",
      "\t#hypervisor: ${13:}",
      "\t#managed: ${14:}",
      "\t#pod: ${15:}",
      "\t#provider: ${16:DefaultPrimary}",
      "\t#scope: ${17:cluster|zone}",
      "\t#state: ${18:#present|absent}",
      "\t#storage_tags: ${19:}",
      "\t#storage_url: ${20:}"
    ]
  },
  "cs_template": {
    "prefix": "cs_template",
    "description": "Manages templates on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_template:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#bits: ${9:32|#64}",
      "\t#checksum: ${10:}",
      "\t#cross_zones: ${11:false}",
      "\t#details: ${12:}",
      "\t#display_text: ${13:}",
      "\t#domain: ${14:}",
      "\t#format: ${15:QCOW2|RAW|VHD|OVA}",
      "\t#hypervisor: ${16:}",
      "\t#is_dynamically_scalable: ${17:}",
      "\t#is_extractable: ${18:}",
      "\t#is_featured: ${19:}",
      "\t#is_public: ${20:}",
      "\t#is_routing: ${21:}",
      "\t#mode: ${22:#http_download|ftp_upload}",
      "\t#os_type: ${23:}",
      "\t#password_enabled: ${24:}",
      "\t#poll_async: ${25:true}",
      "\t#project: ${26:}",
      "\t#requires_hvm: ${27:}",
      "\t#snapshot: ${28:}",
      "\t#sshkey_enabled: ${29:}",
      "\t#state: ${30:#present|absent|extracted}",
      "\t#tags: ${31:}",
      "\t#template_filter: ${32:all|featured|#self|selfexecutable|sharedexecutable|executable|community}",
      "\t#template_find_options: ${33:['display_text', 'checksum', 'cross_zones']}",
      "\t#template_tag: ${34:}",
      "\t#url: ${35:}",
      "\t#vm: ${36:}",
      "\t#zone: ${37:}"
    ]
  },
  "cs_traffic_type": {
    "prefix": "cs_traffic_type",
    "description": "Manages traffic types on CloudStack Physical Networks",
    "body": [
      "ngine_io.cloudstack.cs_traffic_type:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tphysical_network: ${4:}",
      "\ttraffic_type: ${5:Management|Guest|Public|Storage}",
      "\tzone: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#hyperv_networklabel: ${10:}",
      "\t#isolation_method: ${11:vlan|vxlan}",
      "\t#kvm_networklabel: ${12:}",
      "\t#ovm3_networklabel: ${13:}",
      "\t#poll_async: ${14:true}",
      "\t#state: ${15:#present|absent}",
      "\t#vlan: ${16:}",
      "\t#vmware_networklabel: ${17:}",
      "\t#xen_networklabel: ${18:}"
    ]
  },
  "cs_user": {
    "prefix": "cs_user",
    "description": "Manages users on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_user:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tusername: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#domain: ${9:ROOT}",
      "\t#email: ${10:}",
      "\t#first_name: ${11:}",
      "\t#keys_registered: ${12:false}",
      "\t#last_name: ${13:}",
      "\t#password: ${14:}",
      "\t#poll_async: ${15:true}",
      "\t#state: ${16:#present|absent|enabled|disabled|locked|unlocked}",
      "\t#timezone: ${17:}"
    ]
  },
  "cs_vlan_ip_range": {
    "prefix": "cs_vlan_ip_range",
    "description": "Manages VLAN IP ranges on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_vlan_ip_range:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tstart_ip: ${4:}",
      "\tzone: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#cidr_ipv6: ${10:}",
      "\t#domain: ${11:}",
      "\t#end_ip: ${12:}",
      "\t#end_ipv6: ${13:}",
      "\t#for_system_vms: ${14:false}",
      "\t#for_virtual_network: ${15:false}",
      "\t#gateway: ${16:}",
      "\t#gateway_ipv6: ${17:}",
      "\t#netmask: ${18:}",
      "\t#network: ${19:}",
      "\t#physical_network: ${20:}",
      "\t#pod: ${21:}",
      "\t#project: ${22:}",
      "\t#start_ipv6: ${23:}",
      "\t#state: ${24:#present|absent}",
      "\t#vlan: ${25:}"
    ]
  },
  "cs_vmsnapshot": {
    "prefix": "cs_vmsnapshot",
    "description": "Manages VM snapshots on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_vmsnapshot:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tvm: ${5:}",
      "\tzone: ${6:}",
      "\t#account: ${7:}",
      "\t#api_http_method: ${8:#get|post}",
      "\t#api_timeout: ${9:10}",
      "\t#api_verify_ssl_cert: ${10:}",
      "\t#description: ${11:}",
      "\t#domain: ${12:}",
      "\t#poll_async: ${13:true}",
      "\t#project: ${14:}",
      "\t#snapshot_memory: ${15:false}",
      "\t#state: ${16:#present|absent|revert}",
      "\t#tags: ${17:}"
    ]
  },
  "cs_volume": {
    "prefix": "cs_volume",
    "description": "Manages volumes on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_volume:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#custom_id: ${10:}",
      "\t#device_id: ${11:}",
      "\t#disk_offering: ${12:}",
      "\t#display_volume: ${13:}",
      "\t#domain: ${14:}",
      "\t#force: ${15:false}",
      "\t#format: ${16:QCOW2|RAW|VHD|VHDX|OVA}",
      "\t#max_iops: ${17:}",
      "\t#min_iops: ${18:}",
      "\t#mode: ${19:#http_download|ftp_upload}",
      "\t#poll_async: ${20:true}",
      "\t#project: ${21:}",
      "\t#shrink_ok: ${22:false}",
      "\t#size: ${23:}",
      "\t#snapshot: ${24:}",
      "\t#state: ${25:#present|absent|attached|detached|extracted|uploaded}",
      "\t#tags: ${26:}",
      "\t#url: ${27:}",
      "\t#vm: ${28:}"
    ]
  },
  "cs_vpc": {
    "prefix": "cs_vpc",
    "description": "Manages VPCs on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_vpc:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\tzone: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#cidr: ${10:}",
      "\t#clean_up: ${11:}",
      "\t#display_text: ${12:}",
      "\t#domain: ${13:}",
      "\t#network_domain: ${14:}",
      "\t#poll_async: ${15:true}",
      "\t#project: ${16:}",
      "\t#state: ${17:#present|absent|stopped|restarted}",
      "\t#tags: ${18:}",
      "\t#vpc_offering: ${19:}"
    ]
  },
  "cs_vpc_offering": {
    "prefix": "cs_vpc_offering",
    "description": "Manages vpc offerings on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_vpc_offering:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#display_text: ${8:}",
      "\t#poll_async: ${9:true}",
      "\t#service_capabilities: ${10:}",
      "\t#service_offering: ${11:}",
      "\t#service_providers: ${12:}",
      "\t#state: ${13:enabled|#present|disabled|absent}",
      "\t#supported_services: ${14:}"
    ]
  },
  "cs_vpn_connection": {
    "prefix": "cs_vpn_connection",
    "description": "Manages site-to-site VPN connections on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_vpn_connection:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tvpc: ${4:}",
      "\tvpn_customer_gateway: ${5:}",
      "\tzone: ${6:}",
      "\t#account: ${7:}",
      "\t#api_http_method: ${8:#get|post}",
      "\t#api_timeout: ${9:10}",
      "\t#api_verify_ssl_cert: ${10:}",
      "\t#domain: ${11:}",
      "\t#force: ${12:false}",
      "\t#passive: ${13:false}",
      "\t#poll_async: ${14:true}",
      "\t#project: ${15:}",
      "\t#state: ${16:#present|absent}"
    ]
  },
  "cs_vpn_customer_gateway": {
    "prefix": "cs_vpn_customer_gateway",
    "description": "Manages site-to-site VPN customer gateway configurations on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_vpn_customer_gateway:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#account: ${5:}",
      "\t#api_http_method: ${6:#get|post}",
      "\t#api_timeout: ${7:10}",
      "\t#api_verify_ssl_cert: ${8:}",
      "\t#cidrs: ${9:}",
      "\t#domain: ${10:}",
      "\t#dpd: ${11:}",
      "\t#esp_lifetime: ${12:}",
      "\t#esp_policy: ${13:}",
      "\t#force_encap: ${14:}",
      "\t#gateway: ${15:}",
      "\t#ike_lifetime: ${16:}",
      "\t#ike_policy: ${17:}",
      "\t#ipsec_psk: ${18:}",
      "\t#poll_async: ${19:true}",
      "\t#project: ${20:}",
      "\t#state: ${21:#present|absent}"
    ]
  },
  "cs_vpn_gateway": {
    "prefix": "cs_vpn_gateway",
    "description": "Manages site-to-site VPN gateways on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_vpn_gateway:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tvpc: ${4:}",
      "\tzone: ${5:}",
      "\t#account: ${6:}",
      "\t#api_http_method: ${7:#get|post}",
      "\t#api_timeout: ${8:10}",
      "\t#api_verify_ssl_cert: ${9:}",
      "\t#domain: ${10:}",
      "\t#poll_async: ${11:true}",
      "\t#project: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "cs_zone": {
    "prefix": "cs_zone",
    "description": "Manages zones on Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_zone:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#dhcp_provider: ${8:}",
      "\t#dns1: ${9:}",
      "\t#dns1_ipv6: ${10:}",
      "\t#dns2: ${11:}",
      "\t#dns2_ipv6: ${12:}",
      "\t#domain: ${13:}",
      "\t#guest_cidr_address: ${14:}",
      "\t#id: ${15:}",
      "\t#internal_dns1: ${16:}",
      "\t#internal_dns2: ${17:}",
      "\t#local_storage_enabled: ${18:}",
      "\t#network_domain: ${19:}",
      "\t#network_type: ${20:#Basic|Advanced}",
      "\t#securitygroups_enabled: ${21:}",
      "\t#state: ${22:#present|enabled|disabled|absent}"
    ]
  },
  "cs_zone_info": {
    "prefix": "cs_zone_info",
    "description": "Gathering information about zones from Apache CloudStack based clouds.",
    "body": [
      "ngine_io.cloudstack.cs_zone_info:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\t#api_http_method: ${4:#get|post}",
      "\t#api_timeout: ${5:10}",
      "\t#api_verify_ssl_cert: ${6:}",
      "\t#zone: ${7:}"
    ]
  },
  "exo_dns_domain": {
    "prefix": "exo_dns_domain",
    "description": "Manages domain records on Exoscale DNS API.",
    "body": [
      "ngine_io.exoscale.exo_dns_domain:",
      "\tname: ${1:}",
      "\t#api_key: ${2:}",
      "\t#api_region: ${3:cloudstack}",
      "\t#api_secret: ${4:}",
      "\t#api_timeout: ${5:10}",
      "\t#state: ${6:#present|absent}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "exo_dns_record": {
    "prefix": "exo_dns_record",
    "description": "Manages DNS records on Exoscale DNS.",
    "body": [
      "ngine_io.exoscale.exo_dns_record:",
      "\tdomain: ${1:}",
      "\t#api_key: ${2:}",
      "\t#api_region: ${3:cloudstack}",
      "\t#api_secret: ${4:}",
      "\t#api_timeout: ${5:10}",
      "\t#content: ${6:}",
      "\t#multiple: ${7:false}",
      "\t#name: ${8:\"\"}",
      "\t#prio: ${9:}",
      "\t#record_type: ${10:#A|ALIAS|CNAME|MX|SPF|URL|TXT|NS|SRV|NAPTR|PTR|AAAA|SSHFP|HINFO|POOL}",
      "\t#state: ${11:#present|absent}",
      "\t#ttl: ${12:3600}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "instance_rdns_record": {
    "prefix": "instance_rdns_record",
    "description": "Manages reverse DNS records for Exoscale compute instances.",
    "body": [
      "ngine_io.exoscale.instance_rdns_record:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tapi_url: ${3:}",
      "\tname: ${4:}",
      "\t#api_http_method: ${5:#get|post}",
      "\t#api_timeout: ${6:10}",
      "\t#api_verify_ssl_cert: ${7:}",
      "\t#content: ${8:}",
      "\t#state: ${9:#present|absent}"
    ]
  },
  "address_scope": {
    "prefix": "address_scope",
    "description": "Create or delete address scopes from OpenStack",
    "body": [
      "openstack.cloud.address_scope:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#extra_specs: ${9:{\\}}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#ip_version: ${11:#4|6}",
      "\t#is_shared: ${12:false}",
      "\t#project: ${13:}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "auth": {
    "prefix": "auth",
    "description": "Retrieve auth token from OpenStack cloud",
    "body": [
      "openstack.cloud.auth:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#interface: ${8:admin|internal|#public}",
      "\t#region_name: ${9:}",
      "\t#sdk_log_level: ${10:#INFO|DEBUG}",
      "\t#sdk_log_path: ${11:}",
      "\t#timeout: ${12:180}",
      "\t#validate_certs: ${13:}",
      "\t#wait: ${14:true}"
    ]
  },
  "baremetal_deploy_template": {
    "prefix": "baremetal_deploy_template",
    "description": "Create/Delete Bare Metal deploy template Resources from OpenStack",
    "body": [
      "openstack.cloud.baremetal_deploy_template:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#extra: ${8:}",
      "\t#id: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#name: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#steps: ${16:}",
      "\t#timeout: ${17:180}",
      "\t#validate_certs: ${18:}",
      "\t#wait: ${19:true}"
    ]
  },
  "baremetal_inspect": {
    "prefix": "baremetal_inspect",
    "description": "Explicitly triggers baremetal node introspection in ironic.",
    "body": [
      "openstack.cloud.baremetal_inspect:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#interface: ${8:admin|internal|#public}",
      "\t#mac: ${9:}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "baremetal_node": {
    "prefix": "baremetal_node",
    "description": "Create/Delete Bare Metal Resources from OpenStack",
    "body": [
      "openstack.cloud.baremetal_node:",
      "\tdriver_info: ${1:}",
      "\tnics: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#bios_interface: ${6:}",
      "\t#boot_interface: ${7:}",
      "\t#ca_cert: ${8:}",
      "\t#chassis_id: ${9:}",
      "\t#client_cert: ${10:}",
      "\t#client_key: ${11:}",
      "\t#cloud: ${12:}",
      "\t#console_interface: ${13:}",
      "\t#deploy_interface: ${14:}",
      "\t#driver: ${15:}",
      "\t#id: ${16:}",
      "\t#inspect_interface: ${17:}",
      "\t#interface: ${18:admin|internal|#public}",
      "\t#management_interface: ${19:}",
      "\t#name: ${20:}",
      "\t#network_interface: ${21:}",
      "\t#power_interface: ${22:}",
      "\t#properties: ${23:}",
      "\t#raid_interface: ${24:}",
      "\t#region_name: ${25:}",
      "\t#rescue_interface: ${26:}",
      "\t#resource_class: ${27:}",
      "\t#sdk_log_level: ${28:#INFO|DEBUG}",
      "\t#sdk_log_path: ${29:}",
      "\t#skip_update_of_masked_password: ${30:}",
      "\t#state: ${31:#present|absent}",
      "\t#storage_interface: ${32:}",
      "\t#timeout: ${33:1800}",
      "\t#validate_certs: ${34:}",
      "\t#vendor_interface: ${35:}",
      "\t#wait: ${36:true}"
    ]
  },
  "baremetal_node_action": {
    "prefix": "baremetal_node_action",
    "description": "Activate/Deactivate Bare Metal nodes from OpenStack",
    "body": [
      "openstack.cloud.baremetal_node_action:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#config_drive: ${9:}",
      "\t#deploy: ${10:true}",
      "\t#instance_info: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#maintenance: ${13:}",
      "\t#maintenance_reason: ${14:}",
      "\t#power: ${15:#present|absent|maintenance|on|off}",
      "\t#region_name: ${16:}",
      "\t#sdk_log_level: ${17:#INFO|DEBUG}",
      "\t#sdk_log_path: ${18:}",
      "\t#state: ${19:#present|absent|maintenance|on|off}",
      "\t#timeout: ${20:1800}",
      "\t#validate_certs: ${21:}",
      "\t#wait: ${22:true}"
    ]
  },
  "baremetal_node_info": {
    "prefix": "baremetal_node_info",
    "description": "Retrieve information about Bare Metal nodes from OpenStack",
    "body": [
      "openstack.cloud.baremetal_node_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#interface: ${8:admin|internal|#public}",
      "\t#mac: ${9:}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "baremetal_port": {
    "prefix": "baremetal_port",
    "description": "Create/Delete Bare Metal port Resources from OpenStack",
    "body": [
      "openstack.cloud.baremetal_port:",
      "\t#address: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#extra: ${9:}",
      "\t#id: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#is_pxe_enabled: ${12:}",
      "\t#local_link_connection: ${13:}",
      "\t#node: ${14:}",
      "\t#physical_network: ${15:}",
      "\t#port_group: ${16:}",
      "\t#region_name: ${17:}",
      "\t#sdk_log_level: ${18:#INFO|DEBUG}",
      "\t#sdk_log_path: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#timeout: ${21:180}",
      "\t#validate_certs: ${22:}",
      "\t#wait: ${23:true}"
    ]
  },
  "baremetal_port_info": {
    "prefix": "baremetal_port_info",
    "description": "Retrieve information about Bare Metal ports from OpenStack",
    "body": [
      "openstack.cloud.baremetal_port_info:",
      "\t#address: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#node: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#wait: ${17:true}"
    ]
  },
  "catalog_service": {
    "prefix": "catalog_service",
    "description": "Manage OpenStack services",
    "body": [
      "openstack.cloud.catalog_service:",
      "\tname: ${1:}",
      "\ttype: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#description: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#is_enabled: ${12:}",
      "\t#region_name: ${13:}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#timeout: ${17:180}",
      "\t#validate_certs: ${18:}",
      "\t#wait: ${19:true}"
    ]
  },
  "catalog_service_info": {
    "prefix": "catalog_service_info",
    "description": "Retrieve information about services from OpenStack",
    "body": [
      "openstack.cloud.catalog_service_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#interface: ${8:admin|internal|#public}",
      "\t#name: ${9:}",
      "\t#region_name: ${10:}",
      "\t#sdk_log_level: ${11:#INFO|DEBUG}",
      "\t#sdk_log_path: ${12:}",
      "\t#timeout: ${13:180}",
      "\t#validate_certs: ${14:}",
      "\t#wait: ${15:true}"
    ]
  },
  "coe_cluster": {
    "prefix": "coe_cluster",
    "description": "Manage COE cluster in OpenStack Cloud",
    "body": [
      "openstack.cloud.coe_cluster:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#cluster_template_id: ${9:}",
      "\t#discovery_url: ${10:}",
      "\t#flavor_id: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#is_floating_ip_enabled: ${13:}",
      "\t#keypair: ${14:}",
      "\t#labels: ${15:}",
      "\t#master_count: ${16:}",
      "\t#master_flavor_id: ${17:}",
      "\t#node_count: ${18:}",
      "\t#region_name: ${19:}",
      "\t#sdk_log_level: ${20:#INFO|DEBUG}",
      "\t#sdk_log_path: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#timeout: ${23:180}",
      "\t#validate_certs: ${24:}",
      "\t#wait: ${25:true}"
    ]
  },
  "coe_cluster_template": {
    "prefix": "coe_cluster_template",
    "description": "Manage COE cluster template in OpenStack Cloud",
    "body": [
      "openstack.cloud.coe_cluster_template:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#coe: ${9:kubernetes|swarm|mesos}",
      "\t#dns_nameserver: ${10:}",
      "\t#docker_storage_driver: ${11:devicemapper|overlay|overlay2}",
      "\t#docker_volume_size: ${12:}",
      "\t#external_network_id: ${13:}",
      "\t#fixed_network: ${14:}",
      "\t#fixed_subnet: ${15:}",
      "\t#flavor_id: ${16:}",
      "\t#http_proxy: ${17:}",
      "\t#https_proxy: ${18:}",
      "\t#image_id: ${19:}",
      "\t#interface: ${20:admin|internal|#public}",
      "\t#is_floating_ip_enabled: ${21:true}",
      "\t#is_master_lb_enabled: ${22:false}",
      "\t#is_public: ${23:}",
      "\t#is_registry_enabled: ${24:}",
      "\t#is_tls_disabled: ${25:}",
      "\t#keypair_id: ${26:}",
      "\t#labels: ${27:}",
      "\t#master_flavor_id: ${28:}",
      "\t#network_driver: ${29:flannel|calico|docker}",
      "\t#no_proxy: ${30:}",
      "\t#region_name: ${31:}",
      "\t#sdk_log_level: ${32:#INFO|DEBUG}",
      "\t#sdk_log_path: ${33:}",
      "\t#server_type: ${34:vm|bm}",
      "\t#state: ${35:#present|absent}",
      "\t#timeout: ${36:180}",
      "\t#validate_certs: ${37:}",
      "\t#volume_driver: ${38:cinder|rexray}",
      "\t#wait: ${39:true}"
    ]
  },
  "compute_flavor": {
    "prefix": "compute_flavor",
    "description": "Manage OpenStack compute flavors",
    "body": [
      "openstack.cloud.compute_flavor:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#disk: ${10:}",
      "\t#ephemeral: ${11:}",
      "\t#extra_specs: ${12:}",
      "\t#id: ${13:}",
      "\t#interface: ${14:admin|internal|#public}",
      "\t#is_public: ${15:}",
      "\t#ram: ${16:}",
      "\t#region_name: ${17:}",
      "\t#rxtx_factor: ${18:}",
      "\t#sdk_log_level: ${19:#INFO|DEBUG}",
      "\t#sdk_log_path: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#swap: ${22:}",
      "\t#timeout: ${23:180}",
      "\t#validate_certs: ${24:}",
      "\t#vcpus: ${25:}",
      "\t#wait: ${26:true}"
    ]
  },
  "compute_flavor_access": {
    "prefix": "compute_flavor_access",
    "description": "Manage access to OpenStack compute flavors",
    "body": [
      "openstack.cloud.compute_flavor_access:",
      "\tname: ${1:}",
      "\tproject: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#project_domain: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "compute_flavor_info": {
    "prefix": "compute_flavor_info",
    "description": "Fetch compute flavors from OpenStack cloud",
    "body": [
      "openstack.cloud.compute_flavor_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#ephemeral: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#limit: ${10:}",
      "\t#name: ${11:}",
      "\t#ram: ${12:}",
      "\t#region_name: ${13:}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#vcpus: ${18:}",
      "\t#wait: ${19:true}"
    ]
  },
  "compute_service_info": {
    "prefix": "compute_service_info",
    "description": "Fetch OpenStack Compute (Nova) services",
    "body": [
      "openstack.cloud.compute_service_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#binary: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#host: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "config": {
    "prefix": "config",
    "description": "Get OpenStack Client config",
    "body": [
      "openstack.cloud.config:",
      "\t#clouds: ${1:[]}"
    ]
  },
  "dns_zone": {
    "prefix": "dns_zone",
    "description": "Manage a OpenStack DNS zone.",
    "body": [
      "openstack.cloud.dns_zone:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#email: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#masters: ${12:}",
      "\t#region_name: ${13:}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#timeout: ${17:180}",
      "\t#ttl: ${18:}",
      "\t#type: ${19:primary|secondary}",
      "\t#validate_certs: ${20:}",
      "\t#wait: ${21:true}"
    ]
  },
  "dns_zone_info": {
    "prefix": "dns_zone_info",
    "description": "Getting information about dns zones",
    "body": [
      "openstack.cloud.dns_zone_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#description: ${8:}",
      "\t#email: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#name: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#timeout: ${15:180}",
      "\t#ttl: ${16:}",
      "\t#type: ${17:primary|secondary}",
      "\t#validate_certs: ${18:}",
      "\t#wait: ${19:true}"
    ]
  },
  "endpoint": {
    "prefix": "endpoint",
    "description": "Manage OpenStack Identity service endpoints",
    "body": [
      "openstack.cloud.endpoint:",
      "\tendpoint_interface: ${1:admin|public|internal}",
      "\tservice: ${2:}",
      "\turl: ${3:}",
      "\t#api_timeout: ${4:}",
      "\t#auth: ${5:}",
      "\t#auth_type: ${6:}",
      "\t#ca_cert: ${7:}",
      "\t#client_cert: ${8:}",
      "\t#client_key: ${9:}",
      "\t#cloud: ${10:}",
      "\t#enabled: ${11:true}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#region: ${13:}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "federation_idp": {
    "prefix": "federation_idp",
    "description": "Manage an identity provider in a OpenStack cloud",
    "body": [
      "openstack.cloud.federation_idp:",
      "\tid: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#domain_id: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#is_enabled: ${12:}",
      "\t#region_name: ${13:}",
      "\t#remote_ids: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "federation_idp_info": {
    "prefix": "federation_idp_info",
    "description": "Fetch OpenStack federation identity providers",
    "body": [
      "openstack.cloud.federation_idp_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#id: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#region_name: ${10:}",
      "\t#sdk_log_level: ${11:#INFO|DEBUG}",
      "\t#sdk_log_path: ${12:}",
      "\t#timeout: ${13:180}",
      "\t#validate_certs: ${14:}",
      "\t#wait: ${15:true}"
    ]
  },
  "federation_mapping": {
    "prefix": "federation_mapping",
    "description": "Manage a federation mapping",
    "body": [
      "openstack.cloud.federation_mapping:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#region_name: ${10:}",
      "\t#rules: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#wait: ${17:true}"
    ]
  },
  "federation_mapping_info": {
    "prefix": "federation_mapping_info",
    "description": "Fetch Keystone federation mappings",
    "body": [
      "openstack.cloud.federation_mapping_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#interface: ${8:admin|internal|#public}",
      "\t#name: ${9:}",
      "\t#region_name: ${10:}",
      "\t#sdk_log_level: ${11:#INFO|DEBUG}",
      "\t#sdk_log_path: ${12:}",
      "\t#timeout: ${13:180}",
      "\t#validate_certs: ${14:}",
      "\t#wait: ${15:true}"
    ]
  },
  "floating_ip": {
    "prefix": "floating_ip",
    "description": "Manage floating IP addresses for OpenStack servers",
    "body": [
      "openstack.cloud.floating_ip:",
      "\tserver: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#fixed_address: ${9:}",
      "\t#floating_ip_address: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#nat_destination: ${12:}",
      "\t#network: ${13:}",
      "\t#purge: ${14:false}",
      "\t#region_name: ${15:}",
      "\t#reuse: ${16:false}",
      "\t#sdk_log_level: ${17:#INFO|DEBUG}",
      "\t#sdk_log_path: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#timeout: ${20:180}",
      "\t#validate_certs: ${21:}",
      "\t#wait: ${22:true}"
    ]
  },
  "floating_ip_info": {
    "prefix": "floating_ip_info",
    "description": "Get information about floating ips",
    "body": [
      "openstack.cloud.floating_ip_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#description: ${8:}",
      "\t#fixed_ip_address: ${9:}",
      "\t#floating_ip_address: ${10:}",
      "\t#floating_network: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#port: ${13:}",
      "\t#project: ${14:}",
      "\t#region_name: ${15:}",
      "\t#router: ${16:}",
      "\t#sdk_log_level: ${17:#INFO|DEBUG}",
      "\t#sdk_log_path: ${18:}",
      "\t#status: ${19:active|down}",
      "\t#timeout: ${20:180}",
      "\t#validate_certs: ${21:}",
      "\t#wait: ${22:true}"
    ]
  },
  "group_assignment": {
    "prefix": "group_assignment",
    "description": "Assign OpenStack identity users to groups",
    "body": [
      "openstack.cloud.group_assignment:",
      "\tgroup: ${1:}",
      "\tuser: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#wait: ${17:true}"
    ]
  },
  "host_aggregate": {
    "prefix": "host_aggregate",
    "description": "Manage OpenStack host aggregates",
    "body": [
      "openstack.cloud.host_aggregate:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#availability_zone: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#hosts: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#metadata: ${12:}",
      "\t#purge_hosts: ${13:true}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "identity_domain": {
    "prefix": "identity_domain",
    "description": "Manage OpenStack identity (Keystone) domains",
    "body": [
      "openstack.cloud.identity_domain:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#is_enabled: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "identity_domain_info": {
    "prefix": "identity_domain_info",
    "description": "Fetch identity (Keystone) domains from OpenStack cloud",
    "body": [
      "openstack.cloud.identity_domain_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#filters: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "identity_group": {
    "prefix": "identity_group",
    "description": "Manage a OpenStack identity (Keystone) group",
    "body": [
      "openstack.cloud.identity_group:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#domain_id: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "identity_group_info": {
    "prefix": "identity_group_info",
    "description": "Fetch OpenStack identity (Keystone) groups",
    "body": [
      "openstack.cloud.identity_group_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#domain: ${8:}",
      "\t#filters: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#name: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#wait: ${17:true}"
    ]
  },
  "identity_role": {
    "prefix": "identity_role",
    "description": "Manage a OpenStack identity (Keystone) role",
    "body": [
      "openstack.cloud.identity_role:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#domain_id: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "identity_role_info": {
    "prefix": "identity_role_info",
    "description": "Fetch OpenStack identity (Keystone) roles",
    "body": [
      "openstack.cloud.identity_role_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#domain_id: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "identity_user": {
    "prefix": "identity_user",
    "description": "Manage a OpenStack identity (Keystone) user",
    "body": [
      "openstack.cloud.identity_user:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#default_project: ${9:}",
      "\t#description: ${10:}",
      "\t#domain: ${11:}",
      "\t#email: ${12:}",
      "\t#interface: ${13:admin|internal|#public}",
      "\t#is_enabled: ${14:true}",
      "\t#password: ${15:}",
      "\t#region_name: ${16:}",
      "\t#sdk_log_level: ${17:#INFO|DEBUG}",
      "\t#sdk_log_path: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#timeout: ${20:180}",
      "\t#update_password: ${21:always|#on_create}",
      "\t#validate_certs: ${22:}",
      "\t#wait: ${23:true}"
    ]
  },
  "identity_user_info": {
    "prefix": "identity_user_info",
    "description": "Fetch OpenStack identity (Keystone) users",
    "body": [
      "openstack.cloud.identity_user_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#domain: ${8:}",
      "\t#filters: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#name: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#wait: ${17:true}"
    ]
  },
  "image": {
    "prefix": "image",
    "description": "Manage images of OpenStack image (Glance) service.",
    "body": [
      "openstack.cloud.image:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#checksum: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#container_format: ${10:bare}",
      "\t#disk_format: ${11:qcow2}",
      "\t#filename: ${12:}",
      "\t#id: ${13:}",
      "\t#interface: ${14:admin|internal|#public}",
      "\t#is_protected: ${15:}",
      "\t#is_public: ${16:false}",
      "\t#kernel: ${17:}",
      "\t#min_disk: ${18:}",
      "\t#min_ram: ${19:}",
      "\t#owner: ${20:}",
      "\t#owner_domain: ${21:}",
      "\t#properties: ${22:{\\}}",
      "\t#ramdisk: ${23:}",
      "\t#region_name: ${24:}",
      "\t#sdk_log_level: ${25:#INFO|DEBUG}",
      "\t#sdk_log_path: ${26:}",
      "\t#state: ${27:#present|absent}",
      "\t#tags: ${28:[]}",
      "\t#timeout: ${29:180}",
      "\t#validate_certs: ${30:}",
      "\t#visibility: ${31:public|private|shared|community}",
      "\t#volume: ${32:}",
      "\t#wait: ${33:true}"
    ]
  },
  "image_info": {
    "prefix": "image_info",
    "description": "Fetch images from OpenStack image (Glance) service.",
    "body": [
      "openstack.cloud.image_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#filters: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "keypair": {
    "prefix": "keypair",
    "description": "Add/Delete a keypair from OpenStack",
    "body": [
      "openstack.cloud.keypair:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#public_key: ${10:}",
      "\t#public_key_file: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent|replace}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "keypair_info": {
    "prefix": "keypair_info",
    "description": "Get information about keypairs from OpenStack",
    "body": [
      "openstack.cloud.keypair_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#interface: ${8:admin|internal|#public}",
      "\t#limit: ${9:}",
      "\t#marker: ${10:}",
      "\t#name: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#timeout: ${15:180}",
      "\t#user_id: ${16:}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "keystone_federation_protocol": {
    "prefix": "keystone_federation_protocol",
    "description": "Manage a Keystone federation protocol",
    "body": [
      "openstack.cloud.keystone_federation_protocol:",
      "\tidp: ${1:}",
      "\tname: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#mapping: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "keystone_federation_protocol_info": {
    "prefix": "keystone_federation_protocol_info",
    "description": "Fetch Keystone federation protocols",
    "body": [
      "openstack.cloud.keystone_federation_protocol_info:",
      "\tidp: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "lb_health_monitor": {
    "prefix": "lb_health_monitor",
    "description": "Manage health monitor in a OpenStack load-balancer pool",
    "body": [
      "openstack.cloud.lb_health_monitor:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#delay: ${9:}",
      "\t#expected_codes: ${10:}",
      "\t#health_monitor_timeout: ${11:}",
      "\t#http_method: ${12:}",
      "\t#interface: ${13:admin|internal|#public}",
      "\t#is_admin_state_up: ${14:}",
      "\t#max_retries: ${15:}",
      "\t#max_retries_down: ${16:}",
      "\t#pool: ${17:}",
      "\t#region_name: ${18:}",
      "\t#sdk_log_level: ${19:#INFO|DEBUG}",
      "\t#sdk_log_path: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#timeout: ${22:180}",
      "\t#type: ${23:HTTP}",
      "\t#url_path: ${24:}",
      "\t#validate_certs: ${25:}",
      "\t#wait: ${26:true}"
    ]
  },
  "lb_listener": {
    "prefix": "lb_listener",
    "description": "Manage load-balancer listener in a OpenStack cloud",
    "body": [
      "openstack.cloud.lb_listener:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#default_tls_container_ref: ${9:}",
      "\t#description: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#is_admin_state_up: ${12:}",
      "\t#load_balancer: ${13:}",
      "\t#protocol: ${14:HTTP}",
      "\t#protocol_port: ${15:}",
      "\t#region_name: ${16:}",
      "\t#sdk_log_level: ${17:#INFO|DEBUG}",
      "\t#sdk_log_path: ${18:}",
      "\t#sni_container_refs: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#timeout: ${21:180}",
      "\t#timeout_client_data: ${22:}",
      "\t#timeout_member_data: ${23:}",
      "\t#validate_certs: ${24:}",
      "\t#wait: ${25:true}"
    ]
  },
  "lb_member": {
    "prefix": "lb_member",
    "description": "Manage members in a OpenStack load-balancer pool",
    "body": [
      "openstack.cloud.lb_member:",
      "\tname: ${1:}",
      "\tpool: ${2:}",
      "\t#address: ${3:}",
      "\t#api_timeout: ${4:}",
      "\t#auth: ${5:}",
      "\t#auth_type: ${6:}",
      "\t#ca_cert: ${7:}",
      "\t#client_cert: ${8:}",
      "\t#client_key: ${9:}",
      "\t#cloud: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#monitor_address: ${12:}",
      "\t#monitor_port: ${13:}",
      "\t#protocol_port: ${14:}",
      "\t#region_name: ${15:}",
      "\t#sdk_log_level: ${16:#INFO|DEBUG}",
      "\t#sdk_log_path: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#subnet_id: ${19:}",
      "\t#timeout: ${20:180}",
      "\t#validate_certs: ${21:}",
      "\t#wait: ${22:true}",
      "\t#weight: ${23:}"
    ]
  },
  "lb_pool": {
    "prefix": "lb_pool",
    "description": "Manage load-balancer pool in a OpenStack cloud.",
    "body": [
      "openstack.cloud.lb_pool:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#lb_algorithm: ${11:ROUND_ROBIN}",
      "\t#listener: ${12:}",
      "\t#loadbalancer: ${13:}",
      "\t#protocol: ${14:HTTP}",
      "\t#region_name: ${15:}",
      "\t#sdk_log_level: ${16:#INFO|DEBUG}",
      "\t#sdk_log_path: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#timeout: ${19:180}",
      "\t#validate_certs: ${20:}",
      "\t#wait: ${21:true}"
    ]
  },
  "loadbalancer": {
    "prefix": "loadbalancer",
    "description": "Manage Octavia load-balancer in an OpenStack cloud",
    "body": [
      "openstack.cloud.loadbalancer:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#assign_floating_ip: ${3:false}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#delete_floating_ip: ${10:false}",
      "\t#description: ${11:}",
      "\t#flavor: ${12:}",
      "\t#floating_ip_address: ${13:}",
      "\t#floating_ip_network: ${14:}",
      "\t#interface: ${15:admin|internal|#public}",
      "\t#region_name: ${16:}",
      "\t#sdk_log_level: ${17:#INFO|DEBUG}",
      "\t#sdk_log_path: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#timeout: ${20:180}",
      "\t#validate_certs: ${21:}",
      "\t#vip_address: ${22:}",
      "\t#vip_network: ${23:}",
      "\t#vip_port: ${24:}",
      "\t#vip_subnet: ${25:}",
      "\t#wait: ${26:true}"
    ]
  },
  "network": {
    "prefix": "network",
    "description": "Creates/removes networks from OpenStack",
    "body": [
      "openstack.cloud.network:",
      "\tname: ${1:}",
      "\t#admin_state_up: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#dns_domain: ${10:}",
      "\t#external: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#mtu: ${13:}",
      "\t#port_security_enabled: ${14:}",
      "\t#project: ${15:}",
      "\t#provider_network_type: ${16:}",
      "\t#provider_physical_network: ${17:}",
      "\t#provider_segmentation_id: ${18:}",
      "\t#region_name: ${19:}",
      "\t#sdk_log_level: ${20:#INFO|DEBUG}",
      "\t#sdk_log_path: ${21:}",
      "\t#shared: ${22:}",
      "\t#state: ${23:#present|absent}",
      "\t#timeout: ${24:180}",
      "\t#validate_certs: ${25:}",
      "\t#wait: ${26:true}"
    ]
  },
  "networks_info": {
    "prefix": "networks_info",
    "description": "Retrieve information about one or more OpenStack networks.",
    "body": [
      "openstack.cloud.networks_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#filters: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "neutron_rbac_policies_info": {
    "prefix": "neutron_rbac_policies_info",
    "description": "Fetch Neutron RBAC policies.",
    "body": [
      "openstack.cloud.neutron_rbac_policies_info:",
      "\t#action: ${1:access_as_shared|access_as_external}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#object_id: ${10:}",
      "\t#object_type: ${11:network|security_group|qos_policy}",
      "\t#policy_id: ${12:}",
      "\t#project: ${13:}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#target_project_id: ${17:}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "neutron_rbac_policy": {
    "prefix": "neutron_rbac_policy",
    "description": "Create or delete a Neutron RBAC policy.",
    "body": [
      "openstack.cloud.neutron_rbac_policy:",
      "\t#action: ${1:access_as_shared|access_as_external}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#id: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#object_id: ${11:}",
      "\t#object_type: ${12:network|security_group|qos_policy}",
      "\t#project_id: ${13:}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#target_project_id: ${18:}",
      "\t#timeout: ${19:180}",
      "\t#validate_certs: ${20:}",
      "\t#wait: ${21:true}"
    ]
  },
  "object": {
    "prefix": "object",
    "description": "Create or delete Swift objects in OpenStack clouds",
    "body": [
      "openstack.cloud.object:",
      "\tcontainer: ${1:}",
      "\tname: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#data: ${10:}",
      "\t#filename: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#region_name: ${13:}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#timeout: ${17:180}",
      "\t#validate_certs: ${18:}",
      "\t#wait: ${19:true}"
    ]
  },
  "object_container": {
    "prefix": "object_container",
    "description": "Manage a Swift container.",
    "body": [
      "openstack.cloud.object_container:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#delete_metadata_keys: ${9:}",
      "\t#delete_with_all_objects: ${10:false}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#metadata: ${12:}",
      "\t#read_ACL: ${13:}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}",
      "\t#write_ACL: ${21:}"
    ]
  },
  "port": {
    "prefix": "port",
    "description": "Add/Update/Delete ports from an OpenStack cloud.",
    "body": [
      "openstack.cloud.port:",
      "\tname: ${1:}",
      "\t#allowed_address_pairs: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#binding_profile: ${6:}",
      "\t#binding_vnic_type: ${7:normal|direct|direct-physical|macvtap|baremetal|virtio-forwarder}",
      "\t#ca_cert: ${8:}",
      "\t#client_cert: ${9:}",
      "\t#client_key: ${10:}",
      "\t#cloud: ${11:}",
      "\t#description: ${12:}",
      "\t#device_id: ${13:}",
      "\t#device_owner: ${14:}",
      "\t#dns_domain: ${15:}",
      "\t#dns_name: ${16:}",
      "\t#extra_dhcp_opts: ${17:}",
      "\t#fixed_ips: ${18:}",
      "\t#interface: ${19:admin|internal|#public}",
      "\t#is_admin_state_up: ${20:}",
      "\t#is_port_security_enabled: ${21:}",
      "\t#mac_address: ${22:}",
      "\t#network: ${23:}",
      "\t#no_security_groups: ${24:false}",
      "\t#region_name: ${25:}",
      "\t#sdk_log_level: ${26:#INFO|DEBUG}",
      "\t#sdk_log_path: ${27:}",
      "\t#security_groups: ${28:}",
      "\t#state: ${29:#present|absent}",
      "\t#timeout: ${30:180}",
      "\t#validate_certs: ${31:}",
      "\t#wait: ${32:true}"
    ]
  },
  "port_info": {
    "prefix": "port_info",
    "description": "Retrieve information about ports within OpenStack.",
    "body": [
      "openstack.cloud.port_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#filters: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "project": {
    "prefix": "project",
    "description": "Manage OpenStack Identity (Keystone) projects",
    "body": [
      "openstack.cloud.project:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#domain: ${10:}",
      "\t#extra_specs: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#is_enabled: ${13:}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "project_info": {
    "prefix": "project_info",
    "description": "Retrieve information about one or more OpenStack projects",
    "body": [
      "openstack.cloud.project_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#domain: ${8:}",
      "\t#filters: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#name: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#wait: ${17:true}"
    ]
  },
  "quota": {
    "prefix": "quota",
    "description": "Manage OpenStack Quotas",
    "body": [
      "openstack.cloud.quota:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#backup_gigabytes: ${5:}",
      "\t#backups: ${6:}",
      "\t#ca_cert: ${7:}",
      "\t#client_cert: ${8:}",
      "\t#client_key: ${9:}",
      "\t#cloud: ${10:}",
      "\t#cores: ${11:}",
      "\t#fixed_ips: ${12:}",
      "\t#floating_ips: ${13:}",
      "\t#gigabytes: ${14:}",
      "\t#groups: ${15:}",
      "\t#injected_file_content_bytes: ${16:}",
      "\t#injected_file_path_bytes: ${17:}",
      "\t#injected_files: ${18:}",
      "\t#instances: ${19:}",
      "\t#interface: ${20:admin|internal|#public}",
      "\t#key_pairs: ${21:}",
      "\t#load_balancers: ${22:}",
      "\t#metadata_items: ${23:}",
      "\t#networks: ${24:}",
      "\t#per_volume_gigabytes: ${25:}",
      "\t#pools: ${26:}",
      "\t#ports: ${27:}",
      "\t#ram: ${28:}",
      "\t#rbac_policies: ${29:}",
      "\t#region_name: ${30:}",
      "\t#routers: ${31:}",
      "\t#sdk_log_level: ${32:#INFO|DEBUG}",
      "\t#sdk_log_path: ${33:}",
      "\t#security_group_rules: ${34:}",
      "\t#security_groups: ${35:}",
      "\t#server_group_members: ${36:}",
      "\t#server_groups: ${37:}",
      "\t#snapshots: ${38:}",
      "\t#state: ${39:absent|#present}",
      "\t#subnet_pools: ${40:}",
      "\t#subnets: ${41:}",
      "\t#timeout: ${42:180}",
      "\t#validate_certs: ${43:}",
      "\t#volumes: ${44:}",
      "\t#wait: ${45:true}"
    ]
  },
  "recordset": {
    "prefix": "recordset",
    "description": "Manage OpenStack DNS recordsets",
    "body": [
      "openstack.cloud.recordset:",
      "\tname: ${1:}",
      "\tzone: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#description: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#records: ${12:}",
      "\t#recordset_type: ${13:a|aaaa|mx|cname|txt|ns|srv|ptr|caa}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:180}",
      "\t#ttl: ${19:}",
      "\t#validate_certs: ${20:}",
      "\t#wait: ${21:true}"
    ]
  },
  "resource": {
    "prefix": "resource",
    "description": "Manage a OpenStack cloud resource",
    "body": [
      "openstack.cloud.resource:",
      "\tattributes: ${1:}",
      "\tservice: ${2:}",
      "\ttype: ${3:}",
      "\t#api_timeout: ${4:}",
      "\t#auth: ${5:}",
      "\t#auth_type: ${6:}",
      "\t#ca_cert: ${7:}",
      "\t#client_cert: ${8:}",
      "\t#client_key: ${9:}",
      "\t#cloud: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#non_updateable_attributes: ${12:}",
      "\t#region_name: ${13:}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#timeout: ${17:180}",
      "\t#updateable_attributes: ${18:}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:false}"
    ]
  },
  "resources": {
    "prefix": "resources",
    "description": "List OpenStack cloud resources",
    "body": [
      "openstack.cloud.resources:",
      "\tservice: ${1:}",
      "\ttype: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#parameters: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#wait: ${17:true}"
    ]
  },
  "role_assignment": {
    "prefix": "role_assignment",
    "description": "Assign OpenStack identity groups and users to roles",
    "body": [
      "openstack.cloud.role_assignment:",
      "\trole: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#domain: ${9:}",
      "\t#group: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#project: ${12:}",
      "\t#region_name: ${13:}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#system: ${17:}",
      "\t#timeout: ${18:180}",
      "\t#user: ${19:}",
      "\t#validate_certs: ${20:}",
      "\t#wait: ${21:true}"
    ]
  },
  "router": {
    "prefix": "router",
    "description": "Create or delete routers from OpenStack",
    "body": [
      "openstack.cloud.router:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#enable_snat: ${9:}",
      "\t#external_fixed_ips: ${10:}",
      "\t#external_gateway_info: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#interfaces: ${13:}",
      "\t#is_admin_state_up: ${14:true}",
      "\t#network: ${15:}",
      "\t#project: ${16:}",
      "\t#region_name: ${17:}",
      "\t#sdk_log_level: ${18:#INFO|DEBUG}",
      "\t#sdk_log_path: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#timeout: ${21:180}",
      "\t#validate_certs: ${22:}",
      "\t#wait: ${23:true}"
    ]
  },
  "routers_info": {
    "prefix": "routers_info",
    "description": "Retrieve information about one or more OpenStack routers.",
    "body": [
      "openstack.cloud.routers_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#filters: ${8:{\\}}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "security_group": {
    "prefix": "security_group",
    "description": "Manage Neutron security groups of an OpenStack cloud.",
    "body": [
      "openstack.cloud.security_group:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#project: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#security_group_rules: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#stateful: ${17:}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "security_group_info": {
    "prefix": "security_group_info",
    "description": "Lists security groups",
    "body": [
      "openstack.cloud.security_group_info:",
      "\t#any_tags: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#name: ${11:}",
      "\t#not_any_tags: ${12:}",
      "\t#not_tags: ${13:}",
      "\t#project_id: ${14:}",
      "\t#region_name: ${15:}",
      "\t#revision_number: ${16:}",
      "\t#sdk_log_level: ${17:#INFO|DEBUG}",
      "\t#sdk_log_path: ${18:}",
      "\t#tags: ${19:}",
      "\t#timeout: ${20:180}",
      "\t#validate_certs: ${21:}",
      "\t#wait: ${22:true}"
    ]
  },
  "security_group_rule": {
    "prefix": "security_group_rule",
    "description": "Manage security group rules in OpenStack network (Neutron)",
    "body": [
      "openstack.cloud.security_group_rule:",
      "\tsecurity_group: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#direction: ${10:egress|#ingress}",
      "\t#ether_type: ${11:#IPv4|IPv6}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#port_range_max: ${13:}",
      "\t#port_range_min: ${14:}",
      "\t#project: ${15:}",
      "\t#protocol: ${16:}",
      "\t#region_name: ${17:}",
      "\t#remote_group: ${18:}",
      "\t#remote_ip_prefix: ${19:}",
      "\t#sdk_log_level: ${20:#INFO|DEBUG}",
      "\t#sdk_log_path: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#timeout: ${23:180}",
      "\t#validate_certs: ${24:}",
      "\t#wait: ${25:true}"
    ]
  },
  "security_group_rule_info": {
    "prefix": "security_group_rule_info",
    "description": "Fetch OpenStack network (Neutron) security group rules",
    "body": [
      "openstack.cloud.security_group_rule_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#description: ${8:}",
      "\t#direction: ${9:egress|ingress}",
      "\t#ether_type: ${10:IPv4|IPv6}",
      "\t#id: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#port_range_max: ${13:}",
      "\t#port_range_min: ${14:}",
      "\t#project: ${15:}",
      "\t#protocol: ${16:}",
      "\t#region_name: ${17:}",
      "\t#remote_group: ${18:}",
      "\t#remote_ip_prefix: ${19:}",
      "\t#revision_number: ${20:}",
      "\t#sdk_log_level: ${21:#INFO|DEBUG}",
      "\t#sdk_log_path: ${22:}",
      "\t#security_group: ${23:}",
      "\t#timeout: ${24:180}",
      "\t#validate_certs: ${25:}",
      "\t#wait: ${26:true}"
    ]
  },
  "server": {
    "prefix": "server",
    "description": "Create/Delete Compute Instances from OpenStack",
    "body": [
      "openstack.cloud.server:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#auto_ip: ${5:true}",
      "\t#availability_zone: ${6:}",
      "\t#boot_from_volume: ${7:false}",
      "\t#boot_volume: ${8:}",
      "\t#ca_cert: ${9:}",
      "\t#client_cert: ${10:}",
      "\t#client_key: ${11:}",
      "\t#cloud: ${12:}",
      "\t#config_drive: ${13:false}",
      "\t#delete_ips: ${14:false}",
      "\t#description: ${15:}",
      "\t#flavor: ${16:}",
      "\t#flavor_include: ${17:}",
      "\t#flavor_ram: ${18:}",
      "\t#floating_ip_pools: ${19:}",
      "\t#floating_ips: ${20:}",
      "\t#image: ${21:}",
      "\t#image_exclude: ${22:(deprecated)}",
      "\t#interface: ${23:admin|internal|#public}",
      "\t#key_name: ${24:}",
      "\t#metadata: ${25:}",
      "\t#network: ${26:}",
      "\t#nics: ${27:[]}",
      "\t#region_name: ${28:}",
      "\t#reuse_ips: ${29:true}",
      "\t#scheduler_hints: ${30:}",
      "\t#sdk_log_level: ${31:#INFO|DEBUG}",
      "\t#sdk_log_path: ${32:}",
      "\t#security_groups: ${33:[]}",
      "\t#state: ${34:#present|absent}",
      "\t#terminate_volume: ${35:false}",
      "\t#timeout: ${36:180}",
      "\t#userdata: ${37:}",
      "\t#validate_certs: ${38:}",
      "\t#volume_size: ${39:}",
      "\t#volumes: ${40:[]}",
      "\t#wait: ${41:true}"
    ]
  },
  "server_action": {
    "prefix": "server_action",
    "description": "Perform actions on OpenStack compute (Nova) instances",
    "body": [
      "openstack.cloud.server_action:",
      "\taction: ${1:lock|pause|reboot_hard|reboot_soft|rebuild|resume|shelve|shelve_offload|start|stop|suspend|unlock|unpause|unshelve}",
      "\tname: ${2:}",
      "\t#admin_password: ${3:}",
      "\t#all_projects: ${4:false}",
      "\t#api_timeout: ${5:}",
      "\t#auth: ${6:}",
      "\t#auth_type: ${7:}",
      "\t#ca_cert: ${8:}",
      "\t#client_cert: ${9:}",
      "\t#client_key: ${10:}",
      "\t#cloud: ${11:}",
      "\t#image: ${12:}",
      "\t#interface: ${13:admin|internal|#public}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#timeout: ${17:180}",
      "\t#validate_certs: ${18:}",
      "\t#wait: ${19:true}"
    ]
  },
  "server_group": {
    "prefix": "server_group",
    "description": "Manage OpenStack server groups",
    "body": [
      "openstack.cloud.server_group:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#policy: ${10:anti-affinity|affinity|soft-anti-affinity|soft-affinity}",
      "\t#region_name: ${11:}",
      "\t#rules: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "server_info": {
    "prefix": "server_info",
    "description": "Retrieve information about one or more compute instances",
    "body": [
      "openstack.cloud.server_info:",
      "\t#all_projects: ${1:false}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#detailed: ${9:false}",
      "\t#filters: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#name: ${12:}",
      "\t#region_name: ${13:}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "server_metadata": {
    "prefix": "server_metadata",
    "description": "Add/Update/Delete Metadata in Compute Instances from OpenStack",
    "body": [
      "openstack.cloud.server_metadata:",
      "\tmetadata: ${1:}",
      "\tname: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#wait: ${17:true}"
    ]
  },
  "server_volume": {
    "prefix": "server_volume",
    "description": "Attach/Detach Volumes from OpenStack VM's",
    "body": [
      "openstack.cloud.server_volume:",
      "\tserver: ${1:}",
      "\tvolume: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#device: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "stack": {
    "prefix": "stack",
    "description": "Add/Remove Heat Stack",
    "body": [
      "openstack.cloud.stack:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#environment: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#parameters: ${11:{\\}}",
      "\t#region_name: ${12:}",
      "\t#rollback: ${13:false}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#tags: ${17:}",
      "\t#template: ${18:}",
      "\t#timeout: ${19:3600}",
      "\t#validate_certs: ${20:}",
      "\t#wait: ${21:true}"
    ]
  },
  "stack_info": {
    "prefix": "stack_info",
    "description": "Retrieve information about Heat stacks",
    "body": [
      "openstack.cloud.stack_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#interface: ${8:admin|internal|#public}",
      "\t#name: ${9:}",
      "\t#owner: ${10:}",
      "\t#project: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#status: ${15:}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "subnet": {
    "prefix": "subnet",
    "description": "Add/Remove subnet to an OpenStack network",
    "body": [
      "openstack.cloud.subnet:",
      "\tname: ${1:}",
      "\t#allocation_pool_end: ${2:}",
      "\t#allocation_pool_start: ${3:}",
      "\t#api_timeout: ${4:}",
      "\t#auth: ${5:}",
      "\t#auth_type: ${6:}",
      "\t#ca_cert: ${7:}",
      "\t#cidr: ${8:}",
      "\t#client_cert: ${9:}",
      "\t#client_key: ${10:}",
      "\t#cloud: ${11:}",
      "\t#description: ${12:}",
      "\t#disable_gateway_ip: ${13:false}",
      "\t#dns_nameservers: ${14:}",
      "\t#extra_attrs: ${15:{\\}}",
      "\t#gateway_ip: ${16:}",
      "\t#host_routes: ${17:}",
      "\t#interface: ${18:admin|internal|#public}",
      "\t#ip_version: ${19:#4|6}",
      "\t#ipv6_address_mode: ${20:dhcpv6-stateful|dhcpv6-stateless|slaac}",
      "\t#ipv6_ra_mode: ${21:dhcpv6-stateful|dhcpv6-stateless|slaac}",
      "\t#is_dhcp_enabled: ${22:true}",
      "\t#network: ${23:}",
      "\t#prefix_length: ${24:}",
      "\t#project: ${25:}",
      "\t#region_name: ${26:}",
      "\t#sdk_log_level: ${27:#INFO|DEBUG}",
      "\t#sdk_log_path: ${28:}",
      "\t#state: ${29:#present|absent}",
      "\t#subnet_pool: ${30:}",
      "\t#timeout: ${31:180}",
      "\t#use_default_subnet_pool: ${32:}",
      "\t#validate_certs: ${33:}",
      "\t#wait: ${34:true}"
    ]
  },
  "subnet_pool": {
    "prefix": "subnet_pool",
    "description": "Create, update or delete a subnet pool from OpenStack",
    "body": [
      "openstack.cloud.subnet_pool:",
      "\tname: ${1:}",
      "\t#address_scope: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#default_prefix_length: ${10:}",
      "\t#default_quota: ${11:}",
      "\t#description: ${12:}",
      "\t#extra_specs: ${13:}",
      "\t#interface: ${14:admin|internal|#public}",
      "\t#is_default: ${15:}",
      "\t#is_shared: ${16:}",
      "\t#maximum_prefix_length: ${17:}",
      "\t#minimum_prefix_length: ${18:}",
      "\t#prefixes: ${19:}",
      "\t#project: ${20:}",
      "\t#region_name: ${21:}",
      "\t#sdk_log_level: ${22:#INFO|DEBUG}",
      "\t#sdk_log_path: ${23:}",
      "\t#state: ${24:#present|absent}",
      "\t#timeout: ${25:180}",
      "\t#validate_certs: ${26:}",
      "\t#wait: ${27:true}"
    ]
  },
  "subnets_info": {
    "prefix": "subnets_info",
    "description": "Retrieve information about one or more OpenStack subnets.",
    "body": [
      "openstack.cloud.subnets_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#filters: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#timeout: ${14:180}",
      "\t#validate_certs: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "volume": {
    "prefix": "volume",
    "description": "Create/Delete Cinder Volumes",
    "body": [
      "openstack.cloud.volume:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#availability_zone: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#description: ${10:}",
      "\t#image: ${11:}",
      "\t#interface: ${12:admin|internal|#public}",
      "\t#is_bootable: ${13:false}",
      "\t#is_multiattach: ${14:}",
      "\t#metadata: ${15:}",
      "\t#region_name: ${16:}",
      "\t#scheduler_hints: ${17:}",
      "\t#sdk_log_level: ${18:#INFO|DEBUG}",
      "\t#sdk_log_path: ${19:}",
      "\t#size: ${20:}",
      "\t#snapshot: ${21:}",
      "\t#state: ${22:#present|absent}",
      "\t#timeout: ${23:180}",
      "\t#validate_certs: ${24:}",
      "\t#volume: ${25:}",
      "\t#volume_type: ${26:}",
      "\t#wait: ${27:true}"
    ]
  },
  "volume_backup": {
    "prefix": "volume_backup",
    "description": "Add/Delete Volume backup",
    "body": [
      "openstack.cloud.volume_backup:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#force: ${10:false}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#is_incremental: ${12:false}",
      "\t#metadata: ${13:}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#snapshot: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#timeout: ${19:180}",
      "\t#validate_certs: ${20:}",
      "\t#volume: ${21:}",
      "\t#wait: ${22:true}"
    ]
  },
  "volume_backup_info": {
    "prefix": "volume_backup_info",
    "description": "Get Backups",
    "body": [
      "openstack.cloud.volume_backup_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#interface: ${8:admin|internal|#public}",
      "\t#name: ${9:}",
      "\t#region_name: ${10:}",
      "\t#sdk_log_level: ${11:#INFO|DEBUG}",
      "\t#sdk_log_path: ${12:}",
      "\t#timeout: ${13:180}",
      "\t#validate_certs: ${14:}",
      "\t#volume: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "volume_info": {
    "prefix": "volume_info",
    "description": "Retrieve information about volumes",
    "body": [
      "openstack.cloud.volume_info:",
      "\t#all_projects: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#details: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#name: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#status: ${15:}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "volume_snapshot": {
    "prefix": "volume_snapshot",
    "description": "Create/Delete Cinder Volume Snapshots",
    "body": [
      "openstack.cloud.volume_snapshot:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#force: ${10:false}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#volume: ${18:}",
      "\t#wait: ${19:true}"
    ]
  },
  "volume_snapshot_info": {
    "prefix": "volume_snapshot_info",
    "description": "Get volume snapshots",
    "body": [
      "openstack.cloud.volume_snapshot_info:",
      "\t#api_timeout: ${1:}",
      "\t#auth: ${2:}",
      "\t#auth_type: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#cloud: ${7:}",
      "\t#details: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#name: ${10:}",
      "\t#region_name: ${11:}",
      "\t#sdk_log_level: ${12:#INFO|DEBUG}",
      "\t#sdk_log_path: ${13:}",
      "\t#status: ${14:available|backing-up|creating|deleted|deleting|error|error_deleting|restoring|unmanaging}",
      "\t#timeout: ${15:180}",
      "\t#validate_certs: ${16:}",
      "\t#volume: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "volume_type": {
    "prefix": "volume_type",
    "description": "Manage OpenStack volume type",
    "body": [
      "openstack.cloud.volume_type:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#description: ${9:}",
      "\t#extra_specs: ${10:}",
      "\t#interface: ${11:admin|internal|#public}",
      "\t#is_public: ${12:}",
      "\t#region_name: ${13:}",
      "\t#sdk_log_level: ${14:#INFO|DEBUG}",
      "\t#sdk_log_path: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#timeout: ${17:180}",
      "\t#validate_certs: ${18:}",
      "\t#wait: ${19:true}"
    ]
  },
  "volume_type_access": {
    "prefix": "volume_type_access",
    "description": "Manage access to OpenStack block-storage volume type",
    "body": [
      "openstack.cloud.volume_type_access:",
      "\tname: ${1:}",
      "\tproject: ${2:}",
      "\t#api_timeout: ${3:}",
      "\t#auth: ${4:}",
      "\t#auth_type: ${5:}",
      "\t#ca_cert: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#cloud: ${9:}",
      "\t#interface: ${10:admin|internal|#public}",
      "\t#project_domain: ${11:}",
      "\t#region_name: ${12:}",
      "\t#sdk_log_level: ${13:#INFO|DEBUG}",
      "\t#sdk_log_path: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeout: ${16:180}",
      "\t#validate_certs: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "volume_type_encryption": {
    "prefix": "volume_type_encryption",
    "description": "Manage OpenStack volume type encryption",
    "body": [
      "openstack.cloud.volume_type_encryption:",
      "\tvolume_type: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#encryption_cipher: ${9:}",
      "\t#encryption_control_location: ${10:front-end|back-end}",
      "\t#encryption_key_size: ${11:128|256|512}",
      "\t#encryption_provider: ${12:}",
      "\t#interface: ${13:admin|internal|#public}",
      "\t#region_name: ${14:}",
      "\t#sdk_log_level: ${15:#INFO|DEBUG}",
      "\t#sdk_log_path: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timeout: ${18:180}",
      "\t#validate_certs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "volume_type_info": {
    "prefix": "volume_type_info",
    "description": "Get OpenStack volume type details",
    "body": [
      "openstack.cloud.volume_type_info:",
      "\tname: ${1:}",
      "\t#api_timeout: ${2:}",
      "\t#auth: ${3:}",
      "\t#auth_type: ${4:}",
      "\t#ca_cert: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#cloud: ${8:}",
      "\t#interface: ${9:admin|internal|#public}",
      "\t#region_name: ${10:}",
      "\t#sdk_log_level: ${11:#INFO|DEBUG}",
      "\t#sdk_log_path: ${12:}",
      "\t#timeout: ${13:180}",
      "\t#validate_certs: ${14:}",
      "\t#wait: ${15:true}"
    ]
  },
  "openvswitch_bond": {
    "prefix": "openvswitch_bond",
    "description": "Manage Open vSwitch bonds",
    "body": [
      "openvswitch.openvswitch.openvswitch_bond:",
      "\tbridge: ${1:}",
      "\tport: ${2:}",
      "\t#bond_downdelay: ${3:}",
      "\t#bond_mode: ${4:active-backup|balance-tcp|balance-slb}",
      "\t#bond_updelay: ${5:}",
      "\t#database_socket: ${6:}",
      "\t#external_ids: ${7:{\\}}",
      "\t#interfaces: ${8:}",
      "\t#lacp: ${9:active|passive|off}",
      "\t#other_config: ${10:{\\}}",
      "\t#set: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#timeout: ${13:5}"
    ]
  },
  "openvswitch_bridge": {
    "prefix": "openvswitch_bridge",
    "description": "Manage Open vSwitch bridges",
    "body": [
      "openvswitch.openvswitch.openvswitch_bridge:",
      "\tbridge: ${1:}",
      "\t#database_socket: ${2:}",
      "\t#external_ids: ${3:}",
      "\t#fail_mode: ${4:}",
      "\t#parent: ${5:}",
      "\t#set: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#timeout: ${8:5}",
      "\t#vlan: ${9:}"
    ]
  },
  "openvswitch_db": {
    "prefix": "openvswitch_db",
    "description": "Configure open vswitch database.",
    "body": [
      "openvswitch.openvswitch.openvswitch_db:",
      "\tcol: ${1:}",
      "\trecord: ${2:}",
      "\ttable: ${3:}",
      "\t#database_socket: ${4:}",
      "\t#key: ${5:}",
      "\t#state: ${6:#present|absent|read}",
      "\t#timeout: ${7:5}",
      "\t#value: ${8:}"
    ]
  },
  "openvswitch_port": {
    "prefix": "openvswitch_port",
    "description": "Manage Open vSwitch ports",
    "body": [
      "openvswitch.openvswitch.openvswitch_port:",
      "\tbridge: ${1:}",
      "\tport: ${2:}",
      "\t#database_socket: ${3:}",
      "\t#external_ids: ${4:{\\}}",
      "\t#set: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#tag: ${7:}",
      "\t#timeout: ${8:5}"
    ]
  },
  "ovirt_auth": {
    "prefix": "ovirt_auth",
    "description": "Module to manage authentication to oVirt/RHV",
    "body": [
      "ovirt.ovirt.ovirt_auth:",
      "\t#ca_file: ${1:}",
      "\t#compress: ${2:true}",
      "\t#headers: ${3:}",
      "\t#hostname: ${4:}",
      "\t#insecure: ${5:}",
      "\t#kerberos: ${6:false}",
      "\t#ovirt_auth: ${7:}",
      "\t#password: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#timeout: ${10:}",
      "\t#token: ${11:}",
      "\t#url: ${12:}",
      "\t#username: ${13:}"
    ]
  },
  "purefa_token": {
    "prefix": "purefa_token",
    "description": "Create or delete an API token for an existing admin user",
    "body": [
      "purestorage.flasharray.purefa_token:",
      "\t#fa_url: ${1:}",
      "\t#password: ${2:}",
      "\t#recreate: ${3:false}",
      "\t#state: ${4:#present|absent}",
      "\t#timeout: ${5:}",
      "\t#username: ${6:}"
    ]
  },
  "splunk_adaptive_response_notable_events": {
    "prefix": "splunk_adaptive_response_notable_events",
    "description": "Manage Adaptive Responses notable events resource module",
    "body": [
      "splunk.es.splunk_adaptive_response_notable_events:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered}"
    ]
  },
  "correlation_search_info": {
    "prefix": "correlation_search_info",
    "description": "Manage Splunk Enterprise Security Correlation Searches",
    "body": [
      "splunk.es.correlation_search_info:",
      "\t#name: ${1:}"
    ]
  },
  "splunk_correlation_searches": {
    "prefix": "splunk_correlation_searches",
    "description": "Splunk Enterprise Security Correlation searches resource module",
    "body": [
      "splunk.es.splunk_correlation_searches:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered}"
    ]
  },
  "splunk_data_inputs_monitor": {
    "prefix": "splunk_data_inputs_monitor",
    "description": "Splunk Data Inputs of type Monitor resource module",
    "body": [
      "splunk.es.splunk_data_inputs_monitor:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered}"
    ]
  },
  "splunk_data_inputs_network": {
    "prefix": "splunk_data_inputs_network",
    "description": "Manage Splunk Data Inputs of type TCP or UDP resource module",
    "body": [
      "splunk.es.splunk_data_inputs_network:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered}"
    ]
  },
  "redhat_manifest": {
    "prefix": "redhat_manifest",
    "description": "Interact with a Red Hat Satellite Subscription Manifest",
    "body": [
      "theforeman.foreman.redhat_manifest:",
      "\tpassword: ${1:}",
      "\tusername: ${2:}",
      "\t#content_access_mode: ${3:org_environment|#entitlement}",
      "\t#name: ${4:}",
      "\t#path: ${5:}",
      "\t#pool_id: ${6:}",
      "\t#pool_state: ${7:#present|absent}",
      "\t#portal: ${8:https://subscription.rhsm.redhat.com}",
      "\t#quantity: ${9:1}",
      "\t#state: ${10:#present|absent}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "appliance_access_consolecli": {
    "prefix": "appliance_access_consolecli",
    "description": "Set enabled state of the console-based controlled CLI (TTY1).",
    "body": [
      "vmware.vmware_rest.appliance_access_consolecli:",
      "\tenabled: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_access_consolecli_info": {
    "prefix": "appliance_access_consolecli_info",
    "description": "Get enabled state of the console-based controlled CLI (TTY1).",
    "body": [
      "vmware.vmware_rest.appliance_access_consolecli_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_access_dcui": {
    "prefix": "appliance_access_dcui",
    "description": "Set enabled state of Direct Console User Interface (DCUI TTY2).",
    "body": [
      "vmware.vmware_rest.appliance_access_dcui:",
      "\tenabled: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_access_dcui_info": {
    "prefix": "appliance_access_dcui_info",
    "description": "Get enabled state of Direct Console User Interface (DCUI TTY2).",
    "body": [
      "vmware.vmware_rest.appliance_access_dcui_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_access_shell": {
    "prefix": "appliance_access_shell",
    "description": "Set enabled state of BASH, that is, access to BASH from within the controlled CLI.",
    "body": [
      "vmware.vmware_rest.appliance_access_shell:",
      "\tenabled: ${1:}",
      "\ttimeout: ${2:}",
      "\tvcenter_hostname: ${3:}",
      "\tvcenter_password: ${4:}",
      "\tvcenter_username: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#state: ${7:#set}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "appliance_access_shell_info": {
    "prefix": "appliance_access_shell_info",
    "description": "Get enabled state of BASH, that is, access to BASH from within the controlled CLI.",
    "body": [
      "vmware.vmware_rest.appliance_access_shell_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_access_ssh": {
    "prefix": "appliance_access_ssh",
    "description": "Set enabled state of the SSH-based controlled CLI.",
    "body": [
      "vmware.vmware_rest.appliance_access_ssh:",
      "\tenabled: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_access_ssh_info": {
    "prefix": "appliance_access_ssh_info",
    "description": "Get enabled state of the SSH-based controlled CLI.",
    "body": [
      "vmware.vmware_rest.appliance_access_ssh_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_applmgmt_info": {
    "prefix": "appliance_health_applmgmt_info",
    "description": "Get health status of applmgmt services.",
    "body": [
      "vmware.vmware_rest.appliance_health_applmgmt_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_database_info": {
    "prefix": "appliance_health_database_info",
    "description": "Returns the health status of the database.",
    "body": [
      "vmware.vmware_rest.appliance_health_database_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_databasestorage_info": {
    "prefix": "appliance_health_databasestorage_info",
    "description": "Get database storage health.",
    "body": [
      "vmware.vmware_rest.appliance_health_databasestorage_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_load_info": {
    "prefix": "appliance_health_load_info",
    "description": "Get load health.",
    "body": [
      "vmware.vmware_rest.appliance_health_load_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_mem_info": {
    "prefix": "appliance_health_mem_info",
    "description": "Get memory health.",
    "body": [
      "vmware.vmware_rest.appliance_health_mem_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_softwarepackages_info": {
    "prefix": "appliance_health_softwarepackages_info",
    "description": "Get information on available software updates available in the remote vSphere Update Manager repository",
    "body": [
      "vmware.vmware_rest.appliance_health_softwarepackages_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_storage_info": {
    "prefix": "appliance_health_storage_info",
    "description": "Get storage health.",
    "body": [
      "vmware.vmware_rest.appliance_health_storage_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_swap_info": {
    "prefix": "appliance_health_swap_info",
    "description": "Get swap health.",
    "body": [
      "vmware.vmware_rest.appliance_health_swap_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_health_system_info": {
    "prefix": "appliance_health_system_info",
    "description": "Get overall health of system.",
    "body": [
      "vmware.vmware_rest.appliance_health_system_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_infraprofile_configs": {
    "prefix": "appliance_infraprofile_configs",
    "description": "Exports the desired profile specification.",
    "body": [
      "vmware.vmware_rest.appliance_infraprofile_configs:",
      "\tstate: ${1:export}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#description: ${5:}",
      "\t#encryption_key: ${6:}",
      "\t#profiles: ${7:}",
      "\t#session_timeout: ${8:}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}"
    ]
  },
  "appliance_infraprofile_configs_info": {
    "prefix": "appliance_infraprofile_configs_info",
    "description": "List all the profiles which are registered.",
    "body": [
      "vmware.vmware_rest.appliance_infraprofile_configs_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_localaccounts_globalpolicy": {
    "prefix": "appliance_localaccounts_globalpolicy",
    "description": "Set the global password policy.",
    "body": [
      "vmware.vmware_rest.appliance_localaccounts_globalpolicy:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#max_days: ${4:}",
      "\t#min_days: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#state: ${7:#set}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}",
      "\t#warn_days: ${10:}"
    ]
  },
  "appliance_localaccounts_globalpolicy_info": {
    "prefix": "appliance_localaccounts_globalpolicy_info",
    "description": "Get the global password policy.",
    "body": [
      "vmware.vmware_rest.appliance_localaccounts_globalpolicy_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_localaccounts_info": {
    "prefix": "appliance_localaccounts_info",
    "description": "Get the local user account information.",
    "body": [
      "vmware.vmware_rest.appliance_localaccounts_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#username: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "appliance_monitoring_info": {
    "prefix": "appliance_monitoring_info",
    "description": "Get monitored item info",
    "body": [
      "vmware.vmware_rest.appliance_monitoring_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#stat_id: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "appliance_monitoring_query": {
    "prefix": "appliance_monitoring_query",
    "description": "Get monitoring data.",
    "body": [
      "vmware.vmware_rest.appliance_monitoring_query:",
      "\tend_time: ${1:}",
      "\tfunction: ${2:AVG|COUNT|MAX|MIN}",
      "\tinterval: ${3:DAY1|HOURS2|HOURS6|MINUTES30|MINUTES5}",
      "\tnames: ${4:}",
      "\tstart_time: ${5:}",
      "\tvcenter_hostname: ${6:}",
      "\tvcenter_password: ${7:}",
      "\tvcenter_username: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#vcenter_rest_log_file: ${10:}",
      "\t#vcenter_validate_certs: ${11:true}"
    ]
  },
  "appliance_networking": {
    "prefix": "appliance_networking",
    "description": "Reset and restarts network configuration on all interfaces, also this will renew the DHCP lease for DHCP IP address.",
    "body": [
      "vmware.vmware_rest.appliance_networking:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#ipv6_enabled: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#present|reset}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_networking_dns_domains": {
    "prefix": "appliance_networking_dns_domains",
    "description": "Set DNS search domains.",
    "body": [
      "vmware.vmware_rest.appliance_networking_dns_domains:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#domain: ${4:}",
      "\t#domains: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#state: ${7:add|#set}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "appliance_networking_dns_domains_info": {
    "prefix": "appliance_networking_dns_domains_info",
    "description": "Get list of DNS search domains.",
    "body": [
      "vmware.vmware_rest.appliance_networking_dns_domains_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_networking_dns_hostname": {
    "prefix": "appliance_networking_dns_hostname",
    "description": "Set the Fully Qualified Domain Name.",
    "body": [
      "vmware.vmware_rest.appliance_networking_dns_hostname:",
      "\tname: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set|test}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_networking_dns_hostname_info": {
    "prefix": "appliance_networking_dns_hostname_info",
    "description": "Get the Fully Qualified Doman Name.",
    "body": [
      "vmware.vmware_rest.appliance_networking_dns_hostname_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_networking_dns_servers": {
    "prefix": "appliance_networking_dns_servers",
    "description": "Set the DNS server configuration",
    "body": [
      "vmware.vmware_rest.appliance_networking_dns_servers:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#mode: ${4:dhcp|is_static}",
      "\t#server: ${5:}",
      "\t#servers: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#state: ${8:add|#set|test}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}"
    ]
  },
  "appliance_networking_dns_servers_info": {
    "prefix": "appliance_networking_dns_servers_info",
    "description": "Get DNS server configuration.",
    "body": [
      "vmware.vmware_rest.appliance_networking_dns_servers_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_networking_firewall_inbound": {
    "prefix": "appliance_networking_firewall_inbound",
    "description": "Set the ordered list of firewall rules to allow or deny traffic from one or more incoming IP addresses",
    "body": [
      "vmware.vmware_rest.appliance_networking_firewall_inbound:",
      "\trules: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_networking_firewall_inbound_info": {
    "prefix": "appliance_networking_firewall_inbound_info",
    "description": "Get the ordered list of firewall rules",
    "body": [
      "vmware.vmware_rest.appliance_networking_firewall_inbound_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_networking_info": {
    "prefix": "appliance_networking_info",
    "description": "Get Networking information for all configured interfaces.",
    "body": [
      "vmware.vmware_rest.appliance_networking_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_networking_interfaces_info": {
    "prefix": "appliance_networking_interfaces_info",
    "description": "Get information about a particular network interface.",
    "body": [
      "vmware.vmware_rest.appliance_networking_interfaces_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#interface_name: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "appliance_networking_interfaces_ipv4": {
    "prefix": "appliance_networking_interfaces_ipv4",
    "description": "Set IPv4 network configuration for specific network interface.",
    "body": [
      "vmware.vmware_rest.appliance_networking_interfaces_ipv4:",
      "\tinterface_name: ${1:}",
      "\tmode: ${2:DHCP|STATIC|UNCONFIGURED}",
      "\tvcenter_hostname: ${3:}",
      "\tvcenter_password: ${4:}",
      "\tvcenter_username: ${5:}",
      "\t#address: ${6:}",
      "\t#default_gateway: ${7:}",
      "\t#prefix: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#state: ${10:#set}",
      "\t#vcenter_rest_log_file: ${11:}",
      "\t#vcenter_validate_certs: ${12:true}"
    ]
  },
  "appliance_networking_interfaces_ipv4_info": {
    "prefix": "appliance_networking_interfaces_ipv4_info",
    "description": "Get IPv4 network configuration for specific NIC.",
    "body": [
      "vmware.vmware_rest.appliance_networking_interfaces_ipv4_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#interface_name: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "appliance_networking_interfaces_ipv6": {
    "prefix": "appliance_networking_interfaces_ipv6",
    "description": "Set IPv6 network configuration for specific interface.",
    "body": [
      "vmware.vmware_rest.appliance_networking_interfaces_ipv6:",
      "\taddresses: ${1:}",
      "\tautoconf: ${2:}",
      "\tdefault_gateway: ${3:}",
      "\tdhcp: ${4:}",
      "\tinterface_name: ${5:}",
      "\tvcenter_hostname: ${6:}",
      "\tvcenter_password: ${7:}",
      "\tvcenter_username: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#state: ${10:#set}",
      "\t#vcenter_rest_log_file: ${11:}",
      "\t#vcenter_validate_certs: ${12:true}"
    ]
  },
  "appliance_networking_interfaces_ipv6_info": {
    "prefix": "appliance_networking_interfaces_ipv6_info",
    "description": "Get IPv6 network configuration for specific interface.",
    "body": [
      "vmware.vmware_rest.appliance_networking_interfaces_ipv6_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#interface_name: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "appliance_networking_noproxy": {
    "prefix": "appliance_networking_noproxy",
    "description": "Sets servers for which no proxy configuration should be applied",
    "body": [
      "vmware.vmware_rest.appliance_networking_noproxy:",
      "\tservers: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_networking_noproxy_info": {
    "prefix": "appliance_networking_noproxy_info",
    "description": "Returns servers for which no proxy configuration will be applied.",
    "body": [
      "vmware.vmware_rest.appliance_networking_noproxy_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_networking_proxy": {
    "prefix": "appliance_networking_proxy",
    "description": "Configures which proxy server to use for the specified protocol",
    "body": [
      "vmware.vmware_rest.appliance_networking_proxy:",
      "\tprotocol: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#config: ${5:}",
      "\t#enabled: ${6:}",
      "\t#host: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#server: ${10:}",
      "\t#session_timeout: ${11:}",
      "\t#state: ${12:absent|#set|test}",
      "\t#username: ${13:}",
      "\t#vcenter_rest_log_file: ${14:}",
      "\t#vcenter_validate_certs: ${15:true}"
    ]
  },
  "appliance_networking_proxy_info": {
    "prefix": "appliance_networking_proxy_info",
    "description": "Gets the proxy configuration for a specific protocol.",
    "body": [
      "vmware.vmware_rest.appliance_networking_proxy_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#protocol: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "appliance_ntp": {
    "prefix": "appliance_ntp",
    "description": "Set NTP servers",
    "body": [
      "vmware.vmware_rest.appliance_ntp:",
      "\tservers: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set|test}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_ntp_info": {
    "prefix": "appliance_ntp_info",
    "description": "Get the NTP configuration status",
    "body": [
      "vmware.vmware_rest.appliance_ntp_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_services": {
    "prefix": "appliance_services",
    "description": "Restarts a service",
    "body": [
      "vmware.vmware_rest.appliance_services:",
      "\tservice: ${1:}",
      "\tstate: ${2:restart|start|stop}",
      "\tvcenter_hostname: ${3:}",
      "\tvcenter_password: ${4:}",
      "\tvcenter_username: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_services_info": {
    "prefix": "appliance_services_info",
    "description": "Returns the state of a service.",
    "body": [
      "vmware.vmware_rest.appliance_services_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#service: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "appliance_shutdown": {
    "prefix": "appliance_shutdown",
    "description": "Cancel pending shutdown action.",
    "body": [
      "vmware.vmware_rest.appliance_shutdown:",
      "\tstate: ${1:cancel|poweroff|reboot}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#delay: ${5:}",
      "\t#reason: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "appliance_shutdown_info": {
    "prefix": "appliance_shutdown_info",
    "description": "Get details about the pending shutdown action.",
    "body": [
      "vmware.vmware_rest.appliance_shutdown_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_system_globalfips": {
    "prefix": "appliance_system_globalfips",
    "description": "Enable/Disable Global FIPS mode for the appliance",
    "body": [
      "vmware.vmware_rest.appliance_system_globalfips:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#enabled: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#present}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_system_globalfips_info": {
    "prefix": "appliance_system_globalfips_info",
    "description": "Get current appliance FIPS settings.",
    "body": [
      "vmware.vmware_rest.appliance_system_globalfips_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_system_storage": {
    "prefix": "appliance_system_storage",
    "description": "Resize all partitions to 100 percent of disk size.",
    "body": [
      "vmware.vmware_rest.appliance_system_storage:",
      "\tstate: ${1:resize|resize_ex}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "appliance_system_storage_info": {
    "prefix": "appliance_system_storage_info",
    "description": "Get disk to partition mapping.",
    "body": [
      "vmware.vmware_rest.appliance_system_storage_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_system_time_info": {
    "prefix": "appliance_system_time_info",
    "description": "Get system time.",
    "body": [
      "vmware.vmware_rest.appliance_system_time_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_system_time_timezone": {
    "prefix": "appliance_system_time_timezone",
    "description": "Set time zone.",
    "body": [
      "vmware.vmware_rest.appliance_system_time_timezone:",
      "\tname: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_system_time_timezone_info": {
    "prefix": "appliance_system_time_timezone_info",
    "description": "Get time zone.",
    "body": [
      "vmware.vmware_rest.appliance_system_time_timezone_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_system_version_info": {
    "prefix": "appliance_system_version_info",
    "description": "Get the version.",
    "body": [
      "vmware.vmware_rest.appliance_system_version_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_timesync": {
    "prefix": "appliance_timesync",
    "description": "Set time synchronization mode.",
    "body": [
      "vmware.vmware_rest.appliance_timesync:",
      "\tmode: ${1:DISABLED|HOST|NTP}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#set}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "appliance_timesync_info": {
    "prefix": "appliance_timesync_info",
    "description": "Get time synchronization mode.",
    "body": [
      "vmware.vmware_rest.appliance_timesync_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_update_info": {
    "prefix": "appliance_update_info",
    "description": "Gets the current status of the appliance update.",
    "body": [
      "vmware.vmware_rest.appliance_update_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "appliance_vmon_service": {
    "prefix": "appliance_vmon_service",
    "description": "Lists details of services managed by vMon.",
    "body": [
      "vmware.vmware_rest.appliance_vmon_service:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#service: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#startup_type: ${6:AUTOMATIC|DISABLED|MANUAL}",
      "\t#state: ${7:list_details|#present|restart|start|stop}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "appliance_vmon_service_info": {
    "prefix": "appliance_vmon_service_info",
    "description": "Returns the state of a service.",
    "body": [
      "vmware.vmware_rest.appliance_vmon_service_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#service: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "content_configuration": {
    "prefix": "content_configuration",
    "description": "Updates the configuration",
    "body": [
      "vmware.vmware_rest.content_configuration:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#automatic_sync_enabled: ${4:}",
      "\t#automatic_sync_start_hour: ${5:}",
      "\t#automatic_sync_stop_hour: ${6:}",
      "\t#maximum_concurrent_item_syncs: ${7:}",
      "\t#session_timeout: ${8:}",
      "\t#state: ${9:#present}",
      "\t#vcenter_rest_log_file: ${10:}",
      "\t#vcenter_validate_certs: ${11:true}"
    ]
  },
  "content_configuration_info": {
    "prefix": "content_configuration_info",
    "description": "Retrieves the current configuration values.",
    "body": [
      "vmware.vmware_rest.content_configuration_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}"
    ]
  },
  "content_library_item_info": {
    "prefix": "content_library_item_info",
    "description": "Returns the \\{@link ItemModel\\} with the given identifier.",
    "body": [
      "vmware.vmware_rest.content_library_item_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#library_id: ${4:}",
      "\t#library_item_id: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "content_locallibrary": {
    "prefix": "content_locallibrary",
    "description": "Creates a new local library.",
    "body": [
      "vmware.vmware_rest.content_locallibrary:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#client_token: ${4:}",
      "\t#creation_time: ${5:}",
      "\t#description: ${6:}",
      "\t#id: ${7:}",
      "\t#last_modified_time: ${8:}",
      "\t#last_sync_time: ${9:}",
      "\t#library_id: ${10:}",
      "\t#name: ${11:}",
      "\t#optimization_info: ${12:}",
      "\t#publish_info: ${13:}",
      "\t#server_guid: ${14:}",
      "\t#session_timeout: ${15:}",
      "\t#state: ${16:absent|#present|publish}",
      "\t#storage_backings: ${17:}",
      "\t#subscription_info: ${18:}",
      "\t#subscriptions: ${19:}",
      "\t#type: ${20:LOCAL|SUBSCRIBED}",
      "\t#vcenter_rest_log_file: ${21:}",
      "\t#vcenter_validate_certs: ${22:true}",
      "\t#version: ${23:}"
    ]
  },
  "content_locallibrary_info": {
    "prefix": "content_locallibrary_info",
    "description": "Returns a given local library.",
    "body": [
      "vmware.vmware_rest.content_locallibrary_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#library_id: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "content_subscribedlibrary": {
    "prefix": "content_subscribedlibrary",
    "description": "Creates a new subscribed library",
    "body": [
      "vmware.vmware_rest.content_subscribedlibrary:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#client_token: ${4:}",
      "\t#creation_time: ${5:}",
      "\t#description: ${6:}",
      "\t#id: ${7:}",
      "\t#last_modified_time: ${8:}",
      "\t#last_sync_time: ${9:}",
      "\t#library_id: ${10:}",
      "\t#name: ${11:}",
      "\t#optimization_info: ${12:}",
      "\t#publish_info: ${13:}",
      "\t#server_guid: ${14:}",
      "\t#session_timeout: ${15:}",
      "\t#state: ${16:absent|evict|#present|probe|sync}",
      "\t#storage_backings: ${17:}",
      "\t#subscription_info: ${18:}",
      "\t#type: ${19:LOCAL|SUBSCRIBED}",
      "\t#vcenter_rest_log_file: ${20:}",
      "\t#vcenter_validate_certs: ${21:true}",
      "\t#version: ${22:}"
    ]
  },
  "content_subscribedlibrary_info": {
    "prefix": "content_subscribedlibrary_info",
    "description": "Returns a given subscribed library.",
    "body": [
      "vmware.vmware_rest.content_subscribedlibrary_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#library_id: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "vcenter_cluster_info": {
    "prefix": "vcenter_cluster_info",
    "description": "Retrieves information about the cluster corresponding to \\{@param.name cluster\\}.",
    "body": [
      "vmware.vmware_rest.vcenter_cluster_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#cluster: ${4:}",
      "\t#clusters: ${5:}",
      "\t#datacenters: ${6:}",
      "\t#folders: ${7:}",
      "\t#names: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#vcenter_rest_log_file: ${10:}",
      "\t#vcenter_validate_certs: ${11:true}"
    ]
  },
  "vcenter_datacenter": {
    "prefix": "vcenter_datacenter",
    "description": "Create a new datacenter in the vCenter inventory",
    "body": [
      "vmware.vmware_rest.vcenter_datacenter:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#datacenter: ${4:}",
      "\t#folder: ${5:}",
      "\t#force: ${6:}",
      "\t#name: ${7:}",
      "\t#session_timeout: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#vcenter_rest_log_file: ${10:}",
      "\t#vcenter_validate_certs: ${11:true}"
    ]
  },
  "vcenter_datacenter_info": {
    "prefix": "vcenter_datacenter_info",
    "description": "Retrieves information about the datacenter corresponding to \\{@param.name datacenter\\}.",
    "body": [
      "vmware.vmware_rest.vcenter_datacenter_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#datacenter: ${4:}",
      "\t#datacenters: ${5:}",
      "\t#folders: ${6:}",
      "\t#names: ${7:}",
      "\t#session_timeout: ${8:}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}"
    ]
  },
  "vcenter_datastore_info": {
    "prefix": "vcenter_datastore_info",
    "description": "Retrieves information about the datastore indicated by \\{@param.name datastore\\}.",
    "body": [
      "vmware.vmware_rest.vcenter_datastore_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#datacenters: ${4:}",
      "\t#datastore: ${5:}",
      "\t#datastores: ${6:}",
      "\t#folders: ${7:}",
      "\t#names: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#types: ${10:}",
      "\t#vcenter_rest_log_file: ${11:}",
      "\t#vcenter_validate_certs: ${12:true}"
    ]
  },
  "vcenter_folder_info": {
    "prefix": "vcenter_folder_info",
    "description": "Returns information about at most 1000 visible (subject to permission checks) folders in vCenter matching the \\{@link FilterSpec\\}.",
    "body": [
      "vmware.vmware_rest.vcenter_folder_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#datacenters: ${4:}",
      "\t#folders: ${5:}",
      "\t#names: ${6:}",
      "\t#parent_folders: ${7:}",
      "\t#session_timeout: ${8:}",
      "\t#type: ${9:DATACENTER|DATASTORE|HOST|NETWORK|VIRTUAL_MACHINE}",
      "\t#vcenter_rest_log_file: ${10:}",
      "\t#vcenter_validate_certs: ${11:true}"
    ]
  },
  "vcenter_host": {
    "prefix": "vcenter_host",
    "description": "Add a new standalone host in the vCenter inventory",
    "body": [
      "vmware.vmware_rest.vcenter_host:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#folder: ${4:}",
      "\t#force_add: ${5:}",
      "\t#host: ${6:}",
      "\t#hostname: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:}",
      "\t#session_timeout: ${10:}",
      "\t#state: ${11:absent|connect|disconnect|#present}",
      "\t#thumbprint: ${12:}",
      "\t#thumbprint_verification: ${13:NONE|THUMBPRINT}",
      "\t#user_name: ${14:}",
      "\t#vcenter_rest_log_file: ${15:}",
      "\t#vcenter_validate_certs: ${16:true}"
    ]
  },
  "vcenter_host_info": {
    "prefix": "vcenter_host_info",
    "description": "Returns information about at most 2500 visible (subject to permission checks) hosts in vCenter matching the \\{@link FilterSpec\\}.",
    "body": [
      "vmware.vmware_rest.vcenter_host_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#clusters: ${4:}",
      "\t#connection_states: ${5:}",
      "\t#datacenters: ${6:}",
      "\t#folders: ${7:}",
      "\t#hosts: ${8:}",
      "\t#names: ${9:}",
      "\t#session_timeout: ${10:}",
      "\t#standalone: ${11:}",
      "\t#vcenter_rest_log_file: ${12:}",
      "\t#vcenter_validate_certs: ${13:true}"
    ]
  },
  "vcenter_network_info": {
    "prefix": "vcenter_network_info",
    "description": "Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the \\{@link FilterSpec\\}.",
    "body": [
      "vmware.vmware_rest.vcenter_network_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#datacenters: ${4:}",
      "\t#folders: ${5:}",
      "\t#names: ${6:}",
      "\t#networks: ${7:}",
      "\t#session_timeout: ${8:}",
      "\t#types: ${9:}",
      "\t#vcenter_rest_log_file: ${10:}",
      "\t#vcenter_validate_certs: ${11:true}"
    ]
  },
  "vcenter_ovf_libraryitem": {
    "prefix": "vcenter_ovf_libraryitem",
    "description": "Creates a library item in content library from a virtual machine or virtual appliance",
    "body": [
      "vmware.vmware_rest.vcenter_ovf_libraryitem:",
      "\ttarget: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#client_token: ${5:}",
      "\t#create_spec: ${6:}",
      "\t#deployment_spec: ${7:}",
      "\t#ovf_library_item_id: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#source: ${10:}",
      "\t#state: ${11:deploy|filter|#present}",
      "\t#vcenter_rest_log_file: ${12:}",
      "\t#vcenter_validate_certs: ${13:true}"
    ]
  },
  "vcenter_resourcepool": {
    "prefix": "vcenter_resourcepool",
    "description": "Creates a resource pool.",
    "body": [
      "vmware.vmware_rest.vcenter_resourcepool:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#cpu_allocation: ${4:}",
      "\t#memory_allocation: ${5:}",
      "\t#name: ${6:}",
      "\t#parent: ${7:}",
      "\t#resource_pool: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#state: ${10:absent|#present}",
      "\t#vcenter_rest_log_file: ${11:}",
      "\t#vcenter_validate_certs: ${12:true}"
    ]
  },
  "vcenter_resourcepool_info": {
    "prefix": "vcenter_resourcepool_info",
    "description": "Retrieves information about the resource pool indicated by \\{@param.name resourcePool\\}.",
    "body": [
      "vmware.vmware_rest.vcenter_resourcepool_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#clusters: ${4:}",
      "\t#datacenters: ${5:}",
      "\t#hosts: ${6:}",
      "\t#names: ${7:}",
      "\t#parent_resource_pools: ${8:}",
      "\t#resource_pool: ${9:}",
      "\t#resource_pools: ${10:}",
      "\t#session_timeout: ${11:}",
      "\t#vcenter_rest_log_file: ${12:}",
      "\t#vcenter_validate_certs: ${13:true}"
    ]
  },
  "vcenter_storage_policies_info": {
    "prefix": "vcenter_storage_policies_info",
    "description": "Returns information about at most 1024 visible (subject to permission checks) storage solicies availabe in vCenter",
    "body": [
      "vmware.vmware_rest.vcenter_storage_policies_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#policies: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "vcenter_vm": {
    "prefix": "vcenter_vm",
    "description": "Creates a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#bios_uuid: ${4:}",
      "\t#boot: ${5:}",
      "\t#boot_devices: ${6:}",
      "\t#cdroms: ${7:}",
      "\t#cpu: ${8:}",
      "\t#datastore: ${9:}",
      "\t#datastore_path: ${10:}",
      "\t#disconnect_all_nics: ${11:}",
      "\t#disks: ${12:}",
      "\t#disks_to_remove: ${13:}",
      "\t#disks_to_update: ${14:}",
      "\t#floppies: ${15:}",
      "\t#guest_OS: ${16:AMAZONLINUX2_64|AMAZONLINUX3_64|ASIANUX_3|ASIANUX_3_64|ASIANUX_4|ASIANUX_4_64|ASIANUX_5_64|ASIANUX_7_64|ASIANUX_8_64|ASIANUX_9_64|CENTOS|CENTOS_6|CENTOS_64|CENTOS_6_64|CENTOS_7|CENTOS_7_64|CENTOS_8_64|CENTOS_9_64|COREOS_64|CRXPOD_1|DARWIN|DARWIN_10|DARWIN_10_64|DARWIN_11|DARWIN_11_64|DARWIN_12_64|DARWIN_13_64|DARWIN_14_64|DARWIN_15_64|DARWIN_16_64|DARWIN_17_64|DARWIN_18_64|DARWIN_19_64|DARWIN_20_64|DARWIN_21_64|DARWIN_64|DEBIAN_10|DEBIAN_10_64|DEBIAN_11|DEBIAN_11_64|DEBIAN_4|DEBIAN_4_64|DEBIAN_5|DEBIAN_5_64|DEBIAN_6|DEBIAN_6_64|DEBIAN_7|DEBIAN_7_64|DEBIAN_8|DEBIAN_8_64|DEBIAN_9|DEBIAN_9_64|DOS|ECOMSTATION|ECOMSTATION_2|FEDORA|FEDORA_64|FREEBSD|FREEBSD_11|FREEBSD_11_64|FREEBSD_12|FREEBSD_12_64|FREEBSD_13|FREEBSD_13_64|FREEBSD_64|GENERIC_LINUX|MANDRAKE|MANDRIVA|MANDRIVA_64|NETWARE_4|NETWARE_5|NETWARE_6|NLD_9|OES|OPENSERVER_5|OPENSERVER_6|OPENSUSE|OPENSUSE_64|ORACLE_LINUX|ORACLE_LINUX_6|ORACLE_LINUX_64|ORACLE_LINUX_6_64|ORACLE_LINUX_7|ORACLE_LINUX_7_64|ORACLE_LINUX_8_64|ORACLE_LINUX_9_64|OS2|OTHER|OTHER_24X_LINUX|OTHER_24X_LINUX_64|OTHER_26X_LINUX|OTHER_26X_LINUX_64|OTHER_3X_LINUX|OTHER_3X_LINUX_64|OTHER_4X_LINUX|OTHER_4X_LINUX_64|OTHER_5X_LINUX|OTHER_5X_LINUX_64|OTHER_64|OTHER_LINUX|OTHER_LINUX_64|REDHAT|RHEL_2|RHEL_3|RHEL_3_64|RHEL_4|RHEL_4_64|RHEL_5|RHEL_5_64|RHEL_6|RHEL_6_64|RHEL_7|RHEL_7_64|RHEL_8_64|RHEL_9_64|SJDS|SLES|SLES_10|SLES_10_64|SLES_11|SLES_11_64|SLES_12|SLES_12_64|SLES_15_64|SLES_16_64|SLES_64|SOLARIS_10|SOLARIS_10_64|SOLARIS_11_64|SOLARIS_6|SOLARIS_7|SOLARIS_8|SOLARIS_9|SUSE|SUSE_64|TURBO_LINUX|TURBO_LINUX_64|UBUNTU|UBUNTU_64|UNIXWARE_7|VMKERNEL|VMKERNEL_5|VMKERNEL_6|VMKERNEL_65|VMKERNEL_7|VMWARE_PHOTON_64|WINDOWS_7|WINDOWS_7_64|WINDOWS_7_SERVER_64|WINDOWS_8|WINDOWS_8_64|WINDOWS_8_SERVER_64|WINDOWS_9|WINDOWS_9_64|WINDOWS_9_SERVER_64|WINDOWS_HYPERV|WINDOWS_SERVER_2019|WINDOWS_SERVER_2021|WIN_2000_ADV_SERV|WIN_2000_PRO|WIN_2000_SERV|WIN_31|WIN_95|WIN_98|WIN_LONGHORN|WIN_LONGHORN_64|WIN_ME|WIN_NET_BUSINESS|WIN_NET_DATACENTER|WIN_NET_DATACENTER_64|WIN_NET_ENTERPRISE|WIN_NET_ENTERPRISE_64|WIN_NET_STANDARD|WIN_NET_STANDARD_64|WIN_NET_WEB|WIN_NT|WIN_VISTA|WIN_VISTA_64|WIN_XP_HOME|WIN_XP_PRO|WIN_XP_PRO_64}",
      "\t#guest_customization_spec: ${17:}",
      "\t#hardware_version: ${18:VMX_03|VMX_04|VMX_06|VMX_07|VMX_08|VMX_09|VMX_10|VMX_11|VMX_12|VMX_13|VMX_14|VMX_15|VMX_16|VMX_17|VMX_18|VMX_19}",
      "\t#memory: ${19:}",
      "\t#name: ${20:}",
      "\t#nics: ${21:}",
      "\t#nics_to_update: ${22:}",
      "\t#parallel_ports: ${23:}",
      "\t#parallel_ports_to_update: ${24:}",
      "\t#path: ${25:}",
      "\t#placement: ${26:}",
      "\t#power_on: ${27:}",
      "\t#sata_adapters: ${28:}",
      "\t#scsi_adapters: ${29:}",
      "\t#serial_ports: ${30:}",
      "\t#serial_ports_to_update: ${31:}",
      "\t#session_timeout: ${32:}",
      "\t#source: ${33:}",
      "\t#state: ${34:absent|clone|instant_clone|#present|register|relocate|unregister}",
      "\t#storage_policy: ${35:}",
      "\t#vcenter_rest_log_file: ${36:}",
      "\t#vcenter_validate_certs: ${37:true}",
      "\t#vm: ${38:}"
    ]
  },
  "vcenter_vm_guest_customization": {
    "prefix": "vcenter_vm_guest_customization",
    "description": "Applies a customization specification on the virtual machine",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_customization:",
      "\tconfiguration_spec: ${1:}",
      "\tglobal_DNS_settings: ${2:}",
      "\tinterfaces: ${3:}",
      "\tvcenter_hostname: ${4:}",
      "\tvcenter_password: ${5:}",
      "\tvcenter_username: ${6:}",
      "\tvm: ${7:}",
      "\t#session_timeout: ${8:}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}"
    ]
  },
  "vcenter_vm_guest_filesystem_directories": {
    "prefix": "vcenter_vm_guest_filesystem_directories",
    "description": "Creates a directory in the guest operating system",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_filesystem_directories:",
      "\tcredentials: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\tvm: ${5:}",
      "\t#create_parents: ${6:}",
      "\t#new_path: ${7:}",
      "\t#parent_path: ${8:}",
      "\t#path: ${9:}",
      "\t#prefix: ${10:}",
      "\t#recursive: ${11:}",
      "\t#session_timeout: ${12:}",
      "\t#state: ${13:absent|create_temporary|move|#present}",
      "\t#suffix: ${14:}",
      "\t#vcenter_rest_log_file: ${15:}",
      "\t#vcenter_validate_certs: ${16:true}"
    ]
  },
  "vcenter_vm_guest_identity_info": {
    "prefix": "vcenter_vm_guest_identity_info",
    "description": "Return information about the guest.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_identity_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_guest_localfilesystem_info": {
    "prefix": "vcenter_vm_guest_localfilesystem_info",
    "description": "Returns details of the local file systems in the guest operating system.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_localfilesystem_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_guest_networking_info": {
    "prefix": "vcenter_vm_guest_networking_info",
    "description": "Returns information about the network configuration in the guest operating system.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_networking_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_guest_networking_interfaces_info": {
    "prefix": "vcenter_vm_guest_networking_interfaces_info",
    "description": "Returns information about the networking interfaces in the guest operating system.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_networking_interfaces_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_guest_networking_routes_info": {
    "prefix": "vcenter_vm_guest_networking_routes_info",
    "description": "Returns information about network routing in the guest operating system.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_networking_routes_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_guest_operations_info": {
    "prefix": "vcenter_vm_guest_operations_info",
    "description": "Get information about the guest operation status.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_operations_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_guest_power": {
    "prefix": "vcenter_vm_guest_power",
    "description": "Issues a request to the guest operating system asking it to perform a soft shutdown, standby (suspend) or soft reboot",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_power:",
      "\tstate: ${1:reboot|shutdown|standby}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\tvm: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "vcenter_vm_guest_power_info": {
    "prefix": "vcenter_vm_guest_power_info",
    "description": "Returns information about the guest operating system power state.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_guest_power_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_hardware": {
    "prefix": "vcenter_vm_hardware",
    "description": "Updates the virtual hardware settings of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#session_timeout: ${5:}",
      "\t#state: ${6:#present|upgrade}",
      "\t#upgrade_policy: ${7:AFTER_CLEAN_SHUTDOWN|ALWAYS|NEVER}",
      "\t#upgrade_version: ${8:VMX_03|VMX_04|VMX_06|VMX_07|VMX_08|VMX_09|VMX_10|VMX_11|VMX_12|VMX_13|VMX_14|VMX_15|VMX_16|VMX_17|VMX_18|VMX_19}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}",
      "\t#version: ${11:VMX_03|VMX_04|VMX_06|VMX_07|VMX_08|VMX_09|VMX_10|VMX_11|VMX_12|VMX_13|VMX_14|VMX_15|VMX_16|VMX_17|VMX_18|VMX_19}"
    ]
  },
  "vcenter_vm_hardware_adapter_sata": {
    "prefix": "vcenter_vm_hardware_adapter_sata",
    "description": "Adds a virtual SATA adapter to the virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_adapter_sata:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#adapter: ${5:}",
      "\t#bus: ${6:}",
      "\t#label: ${7:}",
      "\t#pci_slot_number: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#state: ${10:absent|#present}",
      "\t#type: ${11:AHCI}",
      "\t#vcenter_rest_log_file: ${12:}",
      "\t#vcenter_validate_certs: ${13:true}"
    ]
  },
  "vcenter_vm_hardware_adapter_sata_info": {
    "prefix": "vcenter_vm_hardware_adapter_sata_info",
    "description": "Returns information about a virtual SATA adapter.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_adapter_sata_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#adapter: ${5:}",
      "\t#label: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_hardware_adapter_scsi": {
    "prefix": "vcenter_vm_hardware_adapter_scsi",
    "description": "Adds a virtual SCSI adapter to the virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_adapter_scsi:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#adapter: ${5:}",
      "\t#bus: ${6:}",
      "\t#label: ${7:}",
      "\t#pci_slot_number: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#sharing: ${10:NONE|PHYSICAL|VIRTUAL}",
      "\t#state: ${11:absent|#present}",
      "\t#type: ${12:BUSLOGIC|LSILOGIC|LSILOGICSAS|PVSCSI}",
      "\t#vcenter_rest_log_file: ${13:}",
      "\t#vcenter_validate_certs: ${14:true}"
    ]
  },
  "vcenter_vm_hardware_adapter_scsi_info": {
    "prefix": "vcenter_vm_hardware_adapter_scsi_info",
    "description": "Returns information about a virtual SCSI adapter.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_adapter_scsi_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#adapter: ${5:}",
      "\t#label: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_hardware_boot": {
    "prefix": "vcenter_vm_hardware_boot",
    "description": "Updates the boot-related settings of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_boot:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#delay: ${5:}",
      "\t#efi_legacy_boot: ${6:}",
      "\t#enter_setup_mode: ${7:}",
      "\t#network_protocol: ${8:IPV4|IPV6}",
      "\t#retry: ${9:}",
      "\t#retry_delay: ${10:}",
      "\t#session_timeout: ${11:}",
      "\t#state: ${12:#present}",
      "\t#type: ${13:BIOS|EFI}",
      "\t#vcenter_rest_log_file: ${14:}",
      "\t#vcenter_validate_certs: ${15:true}"
    ]
  },
  "vcenter_vm_hardware_boot_device": {
    "prefix": "vcenter_vm_hardware_boot_device",
    "description": "Sets the virtual devices that will be used to boot the virtual machine",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_boot_device:",
      "\tdevices: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\tvm: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#state: ${7:#set}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_hardware_boot_device_info": {
    "prefix": "vcenter_vm_hardware_boot_device_info",
    "description": "Returns an ordered list of boot devices for the virtual machine",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_boot_device_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_hardware_boot_info": {
    "prefix": "vcenter_vm_hardware_boot_info",
    "description": "Returns the boot-related settings of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_boot_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_hardware_cdrom": {
    "prefix": "vcenter_vm_hardware_cdrom",
    "description": "Adds a virtual CD-ROM device to the virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_cdrom:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#allow_guest_control: ${5:}",
      "\t#backing: ${6:}",
      "\t#cdrom: ${7:}",
      "\t#ide: ${8:}",
      "\t#label: ${9:}",
      "\t#sata: ${10:}",
      "\t#session_timeout: ${11:}",
      "\t#start_connected: ${12:}",
      "\t#state: ${13:absent|connect|disconnect|#present}",
      "\t#type: ${14:IDE|SATA}",
      "\t#vcenter_rest_log_file: ${15:}",
      "\t#vcenter_validate_certs: ${16:true}"
    ]
  },
  "vcenter_vm_hardware_cdrom_info": {
    "prefix": "vcenter_vm_hardware_cdrom_info",
    "description": "Returns information about a virtual CD-ROM device.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_cdrom_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#cdrom: ${5:}",
      "\t#label: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_hardware_cpu": {
    "prefix": "vcenter_vm_hardware_cpu",
    "description": "Updates the CPU-related settings of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_cpu:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#cores_per_socket: ${5:}",
      "\t#count: ${6:}",
      "\t#hot_add_enabled: ${7:}",
      "\t#hot_remove_enabled: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#state: ${10:#present}",
      "\t#vcenter_rest_log_file: ${11:}",
      "\t#vcenter_validate_certs: ${12:true}"
    ]
  },
  "vcenter_vm_hardware_cpu_info": {
    "prefix": "vcenter_vm_hardware_cpu_info",
    "description": "Returns the CPU-related settings of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_cpu_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_hardware_disk": {
    "prefix": "vcenter_vm_hardware_disk",
    "description": "Adds a virtual disk to the virtual machine",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_disk:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#backing: ${5:}",
      "\t#disk: ${6:}",
      "\t#ide: ${7:}",
      "\t#label: ${8:}",
      "\t#new_vmdk: ${9:}",
      "\t#sata: ${10:}",
      "\t#scsi: ${11:}",
      "\t#session_timeout: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#type: ${14:IDE|SATA|SCSI}",
      "\t#vcenter_rest_log_file: ${15:}",
      "\t#vcenter_validate_certs: ${16:true}"
    ]
  },
  "vcenter_vm_hardware_disk_info": {
    "prefix": "vcenter_vm_hardware_disk_info",
    "description": "Returns information about a virtual disk.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_disk_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#disk: ${5:}",
      "\t#label: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_hardware_ethernet": {
    "prefix": "vcenter_vm_hardware_ethernet",
    "description": "Adds a virtual Ethernet adapter to the virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_ethernet:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#allow_guest_control: ${5:}",
      "\t#backing: ${6:}",
      "\t#label: ${7:}",
      "\t#mac_address: ${8:}",
      "\t#mac_type: ${9:ASSIGNED|GENERATED|MANUAL}",
      "\t#nic: ${10:}",
      "\t#pci_slot_number: ${11:}",
      "\t#session_timeout: ${12:}",
      "\t#start_connected: ${13:}",
      "\t#state: ${14:absent|connect|disconnect|#present}",
      "\t#type: ${15:E1000|E1000E|PCNET32|VMXNET|VMXNET2|VMXNET3}",
      "\t#upt_compatibility_enabled: ${16:}",
      "\t#vcenter_rest_log_file: ${17:}",
      "\t#vcenter_validate_certs: ${18:true}",
      "\t#wake_on_lan_enabled: ${19:}"
    ]
  },
  "vcenter_vm_hardware_ethernet_info": {
    "prefix": "vcenter_vm_hardware_ethernet_info",
    "description": "Returns information about a virtual Ethernet adapter.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_ethernet_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#label: ${5:}",
      "\t#nic: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_hardware_floppy": {
    "prefix": "vcenter_vm_hardware_floppy",
    "description": "Adds a virtual floppy drive to the virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_floppy:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#allow_guest_control: ${5:}",
      "\t#backing: ${6:}",
      "\t#floppy: ${7:}",
      "\t#label: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#start_connected: ${10:}",
      "\t#state: ${11:absent|connect|disconnect|#present}",
      "\t#vcenter_rest_log_file: ${12:}",
      "\t#vcenter_validate_certs: ${13:true}"
    ]
  },
  "vcenter_vm_hardware_floppy_info": {
    "prefix": "vcenter_vm_hardware_floppy_info",
    "description": "Returns information about a virtual floppy drive.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_floppy_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#floppy: ${5:}",
      "\t#label: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_hardware_info": {
    "prefix": "vcenter_vm_hardware_info",
    "description": "Returns the virtual hardware settings of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_hardware_memory": {
    "prefix": "vcenter_vm_hardware_memory",
    "description": "Updates the memory-related settings of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_memory:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#hot_add_enabled: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#size_MiB: ${7:}",
      "\t#state: ${8:#present}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}"
    ]
  },
  "vcenter_vm_hardware_memory_info": {
    "prefix": "vcenter_vm_hardware_memory_info",
    "description": "Returns the memory-related settings of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_memory_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_hardware_parallel": {
    "prefix": "vcenter_vm_hardware_parallel",
    "description": "Adds a virtual parallel port to the virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_parallel:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#allow_guest_control: ${5:}",
      "\t#backing: ${6:}",
      "\t#label: ${7:}",
      "\t#port: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#start_connected: ${10:}",
      "\t#state: ${11:absent|connect|disconnect|#present}",
      "\t#vcenter_rest_log_file: ${12:}",
      "\t#vcenter_validate_certs: ${13:true}"
    ]
  },
  "vcenter_vm_hardware_parallel_info": {
    "prefix": "vcenter_vm_hardware_parallel_info",
    "description": "Returns information about a virtual parallel port.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_parallel_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#label: ${5:}",
      "\t#port: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_hardware_serial": {
    "prefix": "vcenter_vm_hardware_serial",
    "description": "Adds a virtual serial port to the virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_serial:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#allow_guest_control: ${5:}",
      "\t#backing: ${6:}",
      "\t#label: ${7:}",
      "\t#port: ${8:}",
      "\t#session_timeout: ${9:}",
      "\t#start_connected: ${10:}",
      "\t#state: ${11:absent|connect|disconnect|#present}",
      "\t#vcenter_rest_log_file: ${12:}",
      "\t#vcenter_validate_certs: ${13:true}",
      "\t#yield_on_poll: ${14:}"
    ]
  },
  "vcenter_vm_hardware_serial_info": {
    "prefix": "vcenter_vm_hardware_serial_info",
    "description": "Returns information about a virtual serial port.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_hardware_serial_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#label: ${5:}",
      "\t#port: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#vcenter_rest_log_file: ${8:}",
      "\t#vcenter_validate_certs: ${9:true}"
    ]
  },
  "vcenter_vm_info": {
    "prefix": "vcenter_vm_info",
    "description": "Returns information about a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#clusters: ${4:}",
      "\t#datacenters: ${5:}",
      "\t#folders: ${6:}",
      "\t#hosts: ${7:}",
      "\t#names: ${8:}",
      "\t#power_states: ${9:}",
      "\t#resource_pools: ${10:}",
      "\t#session_timeout: ${11:}",
      "\t#vcenter_rest_log_file: ${12:}",
      "\t#vcenter_validate_certs: ${13:true}",
      "\t#vm: ${14:}",
      "\t#vms: ${15:}"
    ]
  },
  "vcenter_vm_libraryitem_info": {
    "prefix": "vcenter_vm_libraryitem_info",
    "description": "Returns the information about the library item associated with the virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_libraryitem_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_power": {
    "prefix": "vcenter_vm_power",
    "description": "Operate a boot, hard shutdown, hard reset or hard suspend on a guest.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_power:",
      "\tstate: ${1:reset|start|stop|suspend}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\tvm: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "vcenter_vm_power_info": {
    "prefix": "vcenter_vm_power_info",
    "description": "Returns the power state information of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_power_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_storage_policy": {
    "prefix": "vcenter_vm_storage_policy",
    "description": "Updates the storage policy configuration of a virtual machine and/or its associated virtual hard disks.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_storage_policy:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\tvm_home: ${5:}",
      "\t#disks: ${6:}",
      "\t#session_timeout: ${7:}",
      "\t#state: ${8:#present}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}"
    ]
  },
  "vcenter_vm_storage_policy_compliance": {
    "prefix": "vcenter_vm_storage_policy_compliance",
    "description": "Returns the storage policy Compliance \\{@link Info\\} of a virtual machine after explicitly re-computing compliance check.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_storage_policy_compliance:",
      "\tstate: ${1:check}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\tvm: ${5:}",
      "\tvm_home: ${6:}",
      "\t#disks: ${7:}",
      "\t#session_timeout: ${8:}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}"
    ]
  },
  "vcenter_vm_storage_policy_compliance_info": {
    "prefix": "vcenter_vm_storage_policy_compliance_info",
    "description": "Returns the cached storage policy compliance information of a virtual machine.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_storage_policy_compliance_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_storage_policy_info": {
    "prefix": "vcenter_vm_storage_policy_info",
    "description": "Returns Information about Storage Policy associated with a virtual machine's home directory and/or its virtual hard disks.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_storage_policy_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_tools": {
    "prefix": "vcenter_vm_tools",
    "description": "Update the properties of VMware Tools.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_tools:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\tvm: ${4:}",
      "\t#command_line_options: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#state: ${7:#present|upgrade}",
      "\t#upgrade_policy: ${8:MANUAL|UPGRADE_AT_POWER_CYCLE}",
      "\t#vcenter_rest_log_file: ${9:}",
      "\t#vcenter_validate_certs: ${10:true}"
    ]
  },
  "vcenter_vm_tools_info": {
    "prefix": "vcenter_vm_tools_info",
    "description": "Get the properties of VMware Tools.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_tools_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vm_tools_installer": {
    "prefix": "vcenter_vm_tools_installer",
    "description": "Connects the VMware Tools CD installer as a CD-ROM for the guest operating system",
    "body": [
      "vmware.vmware_rest.vcenter_vm_tools_installer:",
      "\tstate: ${1:connect|disconnect}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\tvm: ${5:}",
      "\t#session_timeout: ${6:}",
      "\t#vcenter_rest_log_file: ${7:}",
      "\t#vcenter_validate_certs: ${8:true}"
    ]
  },
  "vcenter_vm_tools_installer_info": {
    "prefix": "vcenter_vm_tools_installer_info",
    "description": "Get information about the VMware Tools installer.",
    "body": [
      "vmware.vmware_rest.vcenter_vm_tools_installer_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#vcenter_rest_log_file: ${5:}",
      "\t#vcenter_validate_certs: ${6:true}",
      "\t#vm: ${7:}"
    ]
  },
  "vcenter_vmtemplate_libraryitems": {
    "prefix": "vcenter_vmtemplate_libraryitems",
    "description": "Creates a library item in content library from a virtual machine",
    "body": [
      "vmware.vmware_rest.vcenter_vmtemplate_libraryitems:",
      "\tname: ${1:}",
      "\tvcenter_hostname: ${2:}",
      "\tvcenter_password: ${3:}",
      "\tvcenter_username: ${4:}",
      "\t#description: ${5:}",
      "\t#disk_storage: ${6:}",
      "\t#disk_storage_overrides: ${7:}",
      "\t#guest_customization: ${8:}",
      "\t#hardware_customization: ${9:}",
      "\t#library: ${10:}",
      "\t#placement: ${11:}",
      "\t#powered_on: ${12:}",
      "\t#session_timeout: ${13:}",
      "\t#source_vm: ${14:}",
      "\t#state: ${15:deploy|#present}",
      "\t#template_library_item: ${16:}",
      "\t#vcenter_rest_log_file: ${17:}",
      "\t#vcenter_validate_certs: ${18:true}",
      "\t#vm_home_storage: ${19:}"
    ]
  },
  "vcenter_vmtemplate_libraryitems_info": {
    "prefix": "vcenter_vmtemplate_libraryitems_info",
    "description": "Returns information about a virtual machine template contained in the library item specified by \\{@param.name templateLibraryItem\\}",
    "body": [
      "vmware.vmware_rest.vcenter_vmtemplate_libraryitems_info:",
      "\tvcenter_hostname: ${1:}",
      "\tvcenter_password: ${2:}",
      "\tvcenter_username: ${3:}",
      "\t#session_timeout: ${4:}",
      "\t#template_library_item: ${5:}",
      "\t#vcenter_rest_log_file: ${6:}",
      "\t#vcenter_validate_certs: ${7:true}"
    ]
  },
  "account_info": {
    "prefix": "account_info",
    "description": "Get information about the Vultr account",
    "body": [
      "vultr.cloud.account_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "bare_metal": {
    "prefix": "bare_metal",
    "description": "Manages bare metal machines on Vultr.",
    "body": [
      "vultr.cloud.bare_metal:",
      "\tapi_key: ${1:}",
      "\tlabel: ${2:}",
      "\tregion: ${3:}",
      "\t#activation_email: ${4:false}",
      "\t#api_endpoint: ${5:https://api.vultr.com/v2}",
      "\t#api_retries: ${6:5}",
      "\t#api_retry_max_delay: ${7:12}",
      "\t#api_timeout: ${8:180}",
      "\t#app: ${9:}",
      "\t#enable_ipv6: ${10:}",
      "\t#hostname: ${11:}",
      "\t#image: ${12:}",
      "\t#os: ${13:}",
      "\t#persistent_pxe: ${14:}",
      "\t#plan: ${15:}",
      "\t#reserved_ipv4: ${16:}",
      "\t#snapshot: ${17:}",
      "\t#ssh_keys: ${18:}",
      "\t#startup_script: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#tags: ${21:}",
      "\t#user_data: ${22:}",
      "\t#validate_certs: ${23:true}",
      "\t#vpc2s: ${24:}"
    ]
  },
  "block_storage": {
    "prefix": "block_storage",
    "description": "Manages block storage volumes on Vultr",
    "body": [
      "vultr.cloud.block_storage:",
      "\tapi_key: ${1:}",
      "\tlabel: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#attached_to_instance: ${7:}",
      "\t#block_type: ${8:#high_perf|storage_opt}",
      "\t#live: ${9:false}",
      "\t#region: ${10:}",
      "\t#size_gb: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "block_storage_info": {
    "prefix": "block_storage_info",
    "description": "Get information about the Vultr block storage",
    "body": [
      "vultr.cloud.block_storage_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "dns_domain": {
    "prefix": "dns_domain",
    "description": "Manages DNS domains on Vultr",
    "body": [
      "vultr.cloud.dns_domain:",
      "\tapi_key: ${1:}",
      "\tdomain: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#dns_sec: ${7:enabled|#disabled}",
      "\t#ip: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "dns_domain_info": {
    "prefix": "dns_domain_info",
    "description": "Gather information about the Vultr DNS domains",
    "body": [
      "vultr.cloud.dns_domain_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "dns_record": {
    "prefix": "dns_record",
    "description": "Manages DNS records on Vultr",
    "body": [
      "vultr.cloud.dns_record:",
      "\tapi_key: ${1:}",
      "\tdomain: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#data: ${7:}",
      "\t#multiple: ${8:false}",
      "\t#name: ${9:\"\"}",
      "\t#priority: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#ttl: ${12:300}",
      "\t#type: ${13:#A|AAAA|CNAME|NS|MX|SRV|TXT|CAA|SSHFP}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "firewall_group": {
    "prefix": "firewall_group",
    "description": "Manages firewall groups on Vultr",
    "body": [
      "vultr.cloud.firewall_group:",
      "\tapi_key: ${1:}",
      "\tdescription: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#state: ${7:#present|absent}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "firewall_group_info": {
    "prefix": "firewall_group_info",
    "description": "Gather information about the Vultr firewall groups",
    "body": [
      "vultr.cloud.firewall_group_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "firewall_rule": {
    "prefix": "firewall_rule",
    "description": "Manages firewall rules on Vultr",
    "body": [
      "vultr.cloud.firewall_rule:",
      "\tapi_key: ${1:}",
      "\tgroup: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#ip_type: ${7:#v4|v6}",
      "\t#notes: ${8:}",
      "\t#port: ${9:}",
      "\t#protocol: ${10:icmp|#tcp|udp|gre|esp|ah}",
      "\t#source: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#subnet: ${13:}",
      "\t#subnet_size: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "firewall_rule_info": {
    "prefix": "firewall_rule_info",
    "description": "Gather information about the Vultr firewall rules",
    "body": [
      "vultr.cloud.firewall_rule_info:",
      "\tapi_key: ${1:}",
      "\tgroup: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "instance": {
    "prefix": "instance",
    "description": "Manages server instances on Vultr.",
    "body": [
      "vultr.cloud.instance:",
      "\tapi_key: ${1:}",
      "\tlabel: ${2:}",
      "\tregion: ${3:}",
      "\t#activation_email: ${4:false}",
      "\t#api_endpoint: ${5:https://api.vultr.com/v2}",
      "\t#api_retries: ${6:5}",
      "\t#api_retry_max_delay: ${7:12}",
      "\t#api_timeout: ${8:180}",
      "\t#app: ${9:}",
      "\t#backups: ${10:}",
      "\t#ddos_protection: ${11:}",
      "\t#enable_ipv6: ${12:}",
      "\t#firewall_group: ${13:}",
      "\t#hostname: ${14:}",
      "\t#image: ${15:}",
      "\t#os: ${16:}",
      "\t#plan: ${17:}",
      "\t#reserved_ipv4: ${18:}",
      "\t#snapshot: ${19:}",
      "\t#ssh_keys: ${20:}",
      "\t#startup_script: ${21:}",
      "\t#state: ${22:#present|absent|started|stopped|restarted|reinstalled}",
      "\t#tags: ${23:}",
      "\t#user_data: ${24:}",
      "\t#validate_certs: ${25:true}",
      "\t#vpcs: ${26:}"
    ]
  },
  "instance_info": {
    "prefix": "instance_info",
    "description": "Get information about the Vultr instances",
    "body": [
      "vultr.cloud.instance_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#label: ${6:}",
      "\t#region: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "os_info": {
    "prefix": "os_info",
    "description": "Get information about the Vultr operation systems",
    "body": [
      "vultr.cloud.os_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "plan_info": {
    "prefix": "plan_info",
    "description": "Gather information about the Vultr plans",
    "body": [
      "vultr.cloud.plan_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "plan_metal_info": {
    "prefix": "plan_metal_info",
    "description": "Gather information about the Vultr bare metal plans",
    "body": [
      "vultr.cloud.plan_metal_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "region_info": {
    "prefix": "region_info",
    "description": "Gather information about the Vultr regions",
    "body": [
      "vultr.cloud.region_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "reserved_ip": {
    "prefix": "reserved_ip",
    "description": "Manages reserved IPs on Vultr",
    "body": [
      "vultr.cloud.reserved_ip:",
      "\tapi_key: ${1:}",
      "\tip_type: ${2:v4|v6}",
      "\tlabel: ${3:}",
      "\tregion: ${4:}",
      "\t#api_endpoint: ${5:https://api.vultr.com/v2}",
      "\t#api_retries: ${6:5}",
      "\t#api_retry_max_delay: ${7:12}",
      "\t#api_timeout: ${8:180}",
      "\t#instance_id: ${9:}",
      "\t#instance_name: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "snapshot": {
    "prefix": "snapshot",
    "description": "Manages snapshots on Vultr",
    "body": [
      "vultr.cloud.snapshot:",
      "\tapi_key: ${1:}",
      "\tdescription: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#instance: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#url: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "snapshot_info": {
    "prefix": "snapshot_info",
    "description": "Gather information about the Vultr snapshots",
    "body": [
      "vultr.cloud.snapshot_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "ssh_key": {
    "prefix": "ssh_key",
    "description": "Manages ssh keys on Vultr.",
    "body": [
      "vultr.cloud.ssh_key:",
      "\tapi_key: ${1:}",
      "\tname: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#ssh_key: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "ssh_key_info": {
    "prefix": "ssh_key_info",
    "description": "Get information about the Vultr SSH keys",
    "body": [
      "vultr.cloud.ssh_key_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "startup_script": {
    "prefix": "startup_script",
    "description": "Manages startup scripts on Vultr",
    "body": [
      "vultr.cloud.startup_script:",
      "\tapi_key: ${1:}",
      "\tname: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#script: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#type: ${9:#boot|pxe}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "startup_script_info": {
    "prefix": "startup_script_info",
    "description": "Gather information about the Vultr startup scripts",
    "body": [
      "vultr.cloud.startup_script_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "user": {
    "prefix": "user",
    "description": "Manages users on Vultr",
    "body": [
      "vultr.cloud.user:",
      "\tapi_key: ${1:}",
      "\tname: ${2:}",
      "\t#acls: ${3:manage_users|subscriptions_view|subscriptions|provisioning|billing|support|abuse|dns|upgrade|objstore|loadbalancer}",
      "\t#api_enabled: ${4:true}",
      "\t#api_endpoint: ${5:https://api.vultr.com/v2}",
      "\t#api_retries: ${6:5}",
      "\t#api_retry_max_delay: ${7:12}",
      "\t#api_timeout: ${8:180}",
      "\t#email: ${9:}",
      "\t#force: ${10:false}",
      "\t#password: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "user_info": {
    "prefix": "user_info",
    "description": "Get information about the Vultr users",
    "body": [
      "vultr.cloud.user_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "vpc": {
    "prefix": "vpc",
    "description": "Manages VPCs on Vultr",
    "body": [
      "vultr.cloud.vpc:",
      "\tapi_key: ${1:}",
      "\tdescription: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#region: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#v4_subnet: ${9:}",
      "\t#v4_subnet_mask: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vpc2": {
    "prefix": "vpc2",
    "description": "Manages VPCs 2.0 on Vultr",
    "body": [
      "vultr.cloud.vpc2:",
      "\tapi_key: ${1:}",
      "\tdescription: ${2:}",
      "\t#api_endpoint: ${3:https://api.vultr.com/v2}",
      "\t#api_retries: ${4:5}",
      "\t#api_retry_max_delay: ${5:12}",
      "\t#api_timeout: ${6:180}",
      "\t#ip_block: ${7:}",
      "\t#ip_type: ${8:#v4}",
      "\t#prefix_length: ${9:}",
      "\t#region: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vpc2_info": {
    "prefix": "vpc2_info",
    "description": "Gather information about the Vultr VPCs 2.0",
    "body": [
      "vultr.cloud.vpc2_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "vpc_info": {
    "prefix": "vpc_info",
    "description": "Gather information about the Vultr VPCs",
    "body": [
      "vultr.cloud.vpc_info:",
      "\tapi_key: ${1:}",
      "\t#api_endpoint: ${2:https://api.vultr.com/v2}",
      "\t#api_retries: ${3:5}",
      "\t#api_retry_max_delay: ${4:12}",
      "\t#api_timeout: ${5:180}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "vyos_banner": {
    "prefix": "vyos_banner",
    "description": "Manage multiline banners on VyOS devices",
    "body": [
      "vyos.vyos.vyos_banner:",
      "\tbanner: ${1:pre-login|post-login}",
      "\t#state: ${2:#present|absent}",
      "\t#text: ${3:}"
    ]
  },
  "vyos_bgp_address_family": {
    "prefix": "vyos_bgp_address_family",
    "description": "BGP Address Family Resource Module.",
    "body": [
      "vyos.vyos.vyos_bgp_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered|parsed|rendered|purged|overridden}"
    ]
  },
  "vyos_bgp_global": {
    "prefix": "vyos_bgp_global",
    "description": "BGP Global Resource Module.",
    "body": [
      "vyos.vyos.vyos_bgp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|purged|replaced|gathered|rendered|parsed}"
    ]
  },
  "vyos_command": {
    "prefix": "vyos_command",
    "description": "Run one or more commands on VyOS devices",
    "body": [
      "vyos.vyos.vyos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:9}",
      "\t#wait_for: ${5:}"
    ]
  },
  "vyos_config": {
    "prefix": "vyos_config",
    "description": "Manage VyOS configuration on remote device",
    "body": [
      "vyos.vyos.vyos_config:",
      "\t#backup: ${1:false}",
      "\t#backup_options: ${2:}",
      "\t#comment: ${3:configured by vyos_config}",
      "\t#config: ${4:}",
      "\t#lines: ${5:}",
      "\t#match: ${6:#line|none}",
      "\t#save: ${7:false}",
      "\t#src: ${8:}"
    ]
  },
  "vyos_facts": {
    "prefix": "vyos_facts",
    "description": "Get facts about vyos devices.",
    "body": [
      "vyos.vyos.vyos_facts:",
      "\t#available_network_resources: ${1:false}",
      "\t#gather_network_resources: ${2:}",
      "\t#gather_subset: ${3:min}"
    ]
  },
  "vyos_firewall_global": {
    "prefix": "vyos_firewall_global",
    "description": "FIREWALL global resource module",
    "body": [
      "vyos.vyos.vyos_firewall_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered|rendered|parsed}"
    ]
  },
  "vyos_firewall_interfaces": {
    "prefix": "vyos_firewall_interfaces",
    "description": "FIREWALL interfaces resource module",
    "body": [
      "vyos.vyos.vyos_firewall_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|rendered|gathered}"
    ]
  },
  "vyos_firewall_rules": {
    "prefix": "vyos_firewall_rules",
    "description": "FIREWALL rules resource module",
    "body": [
      "vyos.vyos.vyos_firewall_rules:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "vyos_hostname": {
    "prefix": "vyos_hostname",
    "description": "Manages hostname resource module",
    "body": [
      "vyos.vyos.vyos_hostname:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "vyos_interfaces": {
    "prefix": "vyos_interfaces",
    "description": "Interfaces resource module",
    "body": [
      "vyos.vyos.vyos_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "vyos_l3_interfaces": {
    "prefix": "vyos_l3_interfaces",
    "description": "L3 interfaces resource module",
    "body": [
      "vyos.vyos.vyos_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "vyos_lag_interfaces": {
    "prefix": "vyos_lag_interfaces",
    "description": "LAG interfaces resource module",
    "body": [
      "vyos.vyos.vyos_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "vyos_lldp_global": {
    "prefix": "vyos_lldp_global",
    "description": "LLDP global resource module",
    "body": [
      "vyos.vyos.vyos_lldp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered|rendered|parsed}"
    ]
  },
  "vyos_lldp_interfaces": {
    "prefix": "vyos_lldp_interfaces",
    "description": "LLDP interfaces resource module",
    "body": [
      "vyos.vyos.vyos_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|parsed|gathered}"
    ]
  },
  "vyos_logging_global": {
    "prefix": "vyos_logging_global",
    "description": "Logging resource module",
    "body": [
      "vyos.vyos.vyos_logging_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "vyos_ntp_global": {
    "prefix": "vyos_ntp_global",
    "description": "Manages ntp modules of Vyos network devices",
    "body": [
      "vyos.vyos.vyos_ntp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "vyos_ospf_interfaces": {
    "prefix": "vyos_ospf_interfaces",
    "description": "OSPF Interfaces Resource Module.",
    "body": [
      "vyos.vyos.vyos_ospf_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "vyos_ospfv2": {
    "prefix": "vyos_ospfv2",
    "description": "OSPFv2 resource module",
    "body": [
      "vyos.vyos.vyos_ospfv2:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|parsed|gathered|rendered}"
    ]
  },
  "vyos_ospfv3": {
    "prefix": "vyos_ospfv3",
    "description": "OSPFV3 resource module",
    "body": [
      "vyos.vyos.vyos_ospfv3:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|parsed|gathered|rendered}"
    ]
  },
  "vyos_ping": {
    "prefix": "vyos_ping",
    "description": "Tests reachability using ping from VyOS network devices",
    "body": [
      "vyos.vyos.vyos_ping:",
      "\tdest: ${1:}",
      "\t#count: ${2:5}",
      "\t#interval: ${3:}",
      "\t#size: ${4:}",
      "\t#source: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#ttl: ${7:}"
    ]
  },
  "vyos_prefix_lists": {
    "prefix": "vyos_prefix_lists",
    "description": "Prefix-Lists resource module for VyOS",
    "body": [
      "vyos.vyos.vyos_prefix_lists:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "vyos_route_maps": {
    "prefix": "vyos_route_maps",
    "description": "Route Map Resource Module.",
    "body": [
      "vyos.vyos.vyos_route_maps:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "vyos_snmp_server": {
    "prefix": "vyos_snmp_server",
    "description": "Manages snmp_server resource module",
    "body": [
      "vyos.vyos.vyos_snmp_server:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "vyos_static_routes": {
    "prefix": "vyos_static_routes",
    "description": "Static routes resource module",
    "body": [
      "vyos.vyos.vyos_static_routes:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "vyos_system": {
    "prefix": "vyos_system",
    "description": "Run \\`set system\\` commands on VyOS devices",
    "body": [
      "vyos.vyos.vyos_system:",
      "\t#domain_name: ${1:}",
      "\t#domain_search: ${2:}",
      "\t#host_name: ${3:}",
      "\t#name_server: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "vyos_user": {
    "prefix": "vyos_user",
    "description": "Manage the collection of local users on VyOS device",
    "body": [
      "vyos.vyos.vyos_user:",
      "\t#aggregate: ${1:}",
      "\t#configured_password: ${2:}",
      "\t#full_name: ${3:}",
      "\t#level: ${4:}",
      "\t#name: ${5:}",
      "\t#purge: ${6:false}",
      "\t#state: ${7:#present|absent}",
      "\t#update_password: ${8:on_create|#always}"
    ]
  },
  "vyos_vlan": {
    "prefix": "vyos_vlan",
    "description": "Manage VLANs on VyOS network devices",
    "body": [
      "vyos.vyos.vyos_vlan:",
      "\t#address: ${1:}",
      "\t#aggregate: ${2:}",
      "\t#associated_interfaces: ${3:}",
      "\t#delay: ${4:10}",
      "\t#interfaces: ${5:}",
      "\t#name: ${6:}",
      "\t#purge: ${7:false}",
      "\t#state: ${8:#present|absent}",
      "\t#vlan_id: ${9:}"
    ]
  },
  "cpm_alarm_info": {
    "prefix": "cpm_alarm_info",
    "description": "Get alarm information from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_alarm_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#use_https: ${4:true}",
      "\t#use_proxy: ${5:false}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "cpm_config_backup": {
    "prefix": "cpm_config_backup",
    "description": "Get parameters from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_config_backup:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#cpm_path: ${4:/tmp/}",
      "\t#use_https: ${5:true}",
      "\t#use_proxy: ${6:false}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "cpm_config_restore": {
    "prefix": "cpm_config_restore",
    "description": "Send operational parameters to WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_config_restore:",
      "\tcpm_filename: ${1:}",
      "\tcpm_password: ${2:}",
      "\tcpm_url: ${3:}",
      "\tcpm_username: ${4:}",
      "\t#cpm_path: ${5:/tmp/}",
      "\t#use_https: ${6:true}",
      "\t#use_proxy: ${7:false}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "cpm_current_info": {
    "prefix": "cpm_current_info",
    "description": "Get the Current Information of a WTI device",
    "body": [
      "wti.remote.cpm_current_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#cpm_enddate: ${4:}",
      "\t#cpm_startdate: ${5:}",
      "\t#use_https: ${6:true}",
      "\t#use_proxy: ${7:false}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "cpm_firmware_info": {
    "prefix": "cpm_firmware_info",
    "description": "Get firmware information from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_firmware_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#use_https: ${4:true}",
      "\t#use_proxy: ${5:false}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "cpm_firmware_update": {
    "prefix": "cpm_firmware_update",
    "description": "Set Serial port parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_firmware_update:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#cpm_file: ${4:}",
      "\t#cpm_path: ${5:/tmp/}",
      "\t#family: ${6:0|#1}",
      "\t#removefileonexit: ${7:0|#1}",
      "\t#use_force: ${8:false}",
      "\t#use_https: ${9:true}",
      "\t#use_proxy: ${10:false}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "cpm_hostname_config": {
    "prefix": "cpm_hostname_config",
    "description": "Set Hostname (Site ID), Location, Asset Tag parameters in WTI OOB and PDU devices.",
    "body": [
      "wti.remote.cpm_hostname_config:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#assettag: ${4:}",
      "\t#hostname: ${5:}",
      "\t#location: ${6:}",
      "\t#use_https: ${7:true}",
      "\t#use_proxy: ${8:false}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "cpm_hostname_info": {
    "prefix": "cpm_hostname_info",
    "description": "Get Hostname (Site ID), Location, Asset Tag parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_hostname_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#use_https: ${4:true}",
      "\t#use_proxy: ${5:false}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "cpm_interface_config": {
    "prefix": "cpm_interface_config",
    "description": "Set network interface parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_interface_config:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#interface: ${4:eth0|eth1|ppp0|qmimux0}",
      "\t#ipv4address: ${5:}",
      "\t#ipv4dhcpdefgateway: ${6:0|1}",
      "\t#ipv4dhcpenable: ${7:0|1}",
      "\t#ipv4dhcphostname: ${8:}",
      "\t#ipv4dhcplease: ${9:}",
      "\t#ipv4dhcpobdns: ${10:0|1}",
      "\t#ipv4dhcpupdns: ${11:0|1}",
      "\t#ipv4gateway: ${12:}",
      "\t#ipv4netmask: ${13:}",
      "\t#ipv6address: ${14:}",
      "\t#ipv6gateway: ${15:}",
      "\t#ipv6subnetprefix: ${16:}",
      "\t#negotiation: ${17:0|1|2|3|4|5|6}",
      "\t#use_https: ${18:true}",
      "\t#use_proxy: ${19:false}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "cpm_interface_info": {
    "prefix": "cpm_interface_info",
    "description": "Get network interface parameters from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_interface_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#face: ${4:}",
      "\t#interface: ${5:eth0|eth1|ppp0|qmimux0}",
      "\t#use_https: ${6:true}",
      "\t#use_proxy: ${7:false}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "cpm_iptables_config": {
    "prefix": "cpm_iptables_config",
    "description": "Set network IPTables parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_iptables_config:",
      "\tcommand: ${1:}",
      "\tcpm_password: ${2:}",
      "\tcpm_url: ${3:}",
      "\tcpm_username: ${4:}",
      "\t#clear: ${5:0|1}",
      "\t#index: ${6:}",
      "\t#protocol: ${7:0|1}",
      "\t#use_https: ${8:true}",
      "\t#use_proxy: ${9:false}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "cpm_iptables_info": {
    "prefix": "cpm_iptables_info",
    "description": "Get network IPTABLES parameters from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_iptables_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#use_https: ${4:true}",
      "\t#use_proxy: ${5:false}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "cpm_plugconfig": {
    "prefix": "cpm_plugconfig",
    "description": "Get and Set Plug Parameters on WTI OOB and PDU power devices",
    "body": [
      "wti.remote.cpm_plugconfig:",
      "\tcpm_action: ${1:getplugconfig|setplugconfig}",
      "\tcpm_password: ${2:}",
      "\tcpm_url: ${3:}",
      "\tcpm_username: ${4:}",
      "\tplug_id: ${5:}",
      "\t#plug_bootdelay: ${6:0|1|2|3|4|5|6|7|8|9}",
      "\t#plug_bootpriority: ${7:}",
      "\t#plug_default: ${8:0|1}",
      "\t#plug_name: ${9:}",
      "\t#use_https: ${10:true}",
      "\t#use_proxy: ${11:false}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "cpm_plugcontrol": {
    "prefix": "cpm_plugcontrol",
    "description": "Get and Set Plug actions on WTI OOB and PDU power devices",
    "body": [
      "wti.remote.cpm_plugcontrol:",
      "\tcpm_action: ${1:getplugcontrol|setplugcontrol}",
      "\tcpm_password: ${2:}",
      "\tcpm_url: ${3:}",
      "\tcpm_username: ${4:}",
      "\tplug_id: ${5:}",
      "\t#plug_state: ${6:on|off|boot|default}",
      "\t#use_https: ${7:true}",
      "\t#use_proxy: ${8:false}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "cpm_power_info": {
    "prefix": "cpm_power_info",
    "description": "Get the Power Information of a WTI device",
    "body": [
      "wti.remote.cpm_power_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#cpm_enddate: ${4:}",
      "\t#cpm_startdate: ${5:}",
      "\t#use_https: ${6:true}",
      "\t#use_proxy: ${7:false}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "cpm_serial_port_action_info": {
    "prefix": "cpm_serial_port_action_info",
    "description": "Get Serial port connection status in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_serial_port_action_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#port: ${4:['*']}",
      "\t#use_https: ${5:false}",
      "\t#use_proxy: ${6:false}",
      "\t#validate_certs: ${7:false}"
    ]
  },
  "cpm_serial_port_action_set": {
    "prefix": "cpm_serial_port_action_set",
    "description": "Set Serial port connection/disconnection commands in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_serial_port_action_set:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\tport: ${4:}",
      "\t#action: ${5:1|2}",
      "\t#portremote: ${6:}",
      "\t#use_https: ${7:true}",
      "\t#use_proxy: ${8:false}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "cpm_serial_port_config": {
    "prefix": "cpm_serial_port_config",
    "description": "Set Serial port parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_serial_port_config:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\tport: ${4:}",
      "\t#baud: ${5:0|1|2|3|4|5|6|7|8|9|10}",
      "\t#break_allow: ${6:}",
      "\t#cmd: ${7:0|1}",
      "\t#echo: ${8:}",
      "\t#handshake: ${9:0|1|2|3}",
      "\t#logoff: ${10:}",
      "\t#mode: ${11:0|1|2|3|4}",
      "\t#parity: ${12:0|1|2|3|4|5}",
      "\t#portname: ${13:}",
      "\t#seq: ${14:1|2|3}",
      "\t#stopbits: ${15:1|2}",
      "\t#tout: ${16:0|1|2|3|4|5}",
      "\t#use_https: ${17:true}",
      "\t#use_proxy: ${18:false}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "cpm_serial_port_info": {
    "prefix": "cpm_serial_port_info",
    "description": "Get Serial port parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_serial_port_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#port: ${4:['*']}",
      "\t#use_https: ${5:false}",
      "\t#use_proxy: ${6:false}",
      "\t#validate_certs: ${7:false}"
    ]
  },
  "cpm_snmp_config": {
    "prefix": "cpm_snmp_config",
    "description": "Set network IPTables parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_snmp_config:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\tinterface: ${4:eth0|eth1|ppp0|qmimux0}",
      "\t#authpass: ${5:}",
      "\t#authpriv: ${6:}",
      "\t#authproto: ${7:}",
      "\t#clear: ${8:0|1}",
      "\t#contact: ${9:}",
      "\t#enable: ${10:0|1}",
      "\t#index: ${11:}",
      "\t#location: ${12:}",
      "\t#privpass: ${13:}",
      "\t#privproto: ${14:}",
      "\t#protocol: ${15:0|1}",
      "\t#readonly: ${16:0|1}",
      "\t#rocommunity: ${17:}",
      "\t#rwcommunity: ${18:}",
      "\t#systemname: ${19:}",
      "\t#use_https: ${20:true}",
      "\t#use_proxy: ${21:false}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:true}",
      "\t#version: ${24:0|1|2}"
    ]
  },
  "cpm_snmp_info": {
    "prefix": "cpm_snmp_info",
    "description": "Get network SNMP parameters from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_snmp_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#interface: ${4:eth0|eth1|ppp0|qmimux0}",
      "\t#use_https: ${5:true}",
      "\t#use_proxy: ${6:false}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "cpm_status_info": {
    "prefix": "cpm_status_info",
    "description": "Get general status information from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_status_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#use_https: ${4:true}",
      "\t#use_proxy: ${5:false}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "cpm_syslog_client_config": {
    "prefix": "cpm_syslog_client_config",
    "description": "Set network SYSLOG Client parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_syslog_client_config:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#address: ${4:}",
      "\t#clear: ${5:0|1}",
      "\t#index: ${6:}",
      "\t#port: ${7:}",
      "\t#protocol: ${8:0|1}",
      "\t#secure: ${9:}",
      "\t#transport: ${10:}",
      "\t#use_https: ${11:true}",
      "\t#use_proxy: ${12:false}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "cpm_syslog_client_info": {
    "prefix": "cpm_syslog_client_info",
    "description": "Get network SYSLOG Client parameters from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_syslog_client_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#interface: ${4:eth0|eth1|ppp0|qmimux0}",
      "\t#use_https: ${5:true}",
      "\t#use_proxy: ${6:false}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "cpm_syslog_server_config": {
    "prefix": "cpm_syslog_server_config",
    "description": "Set network SYSLOG Server parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_syslog_server_config:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\tinterface: ${4:eth0|eth1|ppp0|qmimux0}",
      "\t#address: ${5:}",
      "\t#clear: ${6:0|1}",
      "\t#enable: ${7:0|1}",
      "\t#index: ${8:}",
      "\t#port: ${9:}",
      "\t#protocol: ${10:0|1}",
      "\t#secure: ${11:0|1}",
      "\t#transport: ${12:0|1}",
      "\t#use_https: ${13:true}",
      "\t#use_proxy: ${14:false}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "cpm_syslog_server_info": {
    "prefix": "cpm_syslog_server_info",
    "description": "Get network SYSLOG Server parameters from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_syslog_server_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#interface: ${4:eth0|eth1|ppp0|qmimux0}",
      "\t#use_https: ${5:true}",
      "\t#use_proxy: ${6:false}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "cpm_temp_info": {
    "prefix": "cpm_temp_info",
    "description": "Get temperature information from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_temp_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#use_https: ${4:true}",
      "\t#use_proxy: ${5:false}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "cpm_time_config": {
    "prefix": "cpm_time_config",
    "description": "Set Time/Date parameters in WTI OOB and PDU devices.",
    "body": [
      "wti.remote.cpm_time_config:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#date: ${4:}",
      "\t#ipv4address: ${5:}",
      "\t#ipv6address: ${6:}",
      "\t#ntpenable: ${7:0|1}",
      "\t#time: ${8:}",
      "\t#timeout: ${9:}",
      "\t#timezone: ${10:}",
      "\t#use_https: ${11:true}",
      "\t#use_proxy: ${12:false}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "cpm_time_info": {
    "prefix": "cpm_time_info",
    "description": "Get Time/Date parameters in WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_time_info:",
      "\tcpm_password: ${1:}",
      "\tcpm_url: ${2:}",
      "\tcpm_username: ${3:}",
      "\t#use_https: ${4:true}",
      "\t#use_proxy: ${5:false}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "cpm_user": {
    "prefix": "cpm_user",
    "description": "Get various status and parameters from WTI OOB and PDU devices",
    "body": [
      "wti.remote.cpm_user:",
      "\tcpm_action: ${1:getuser|adduser|edituser|deleteuser}",
      "\tcpm_password: ${2:}",
      "\tcpm_url: ${3:}",
      "\tcpm_username: ${4:}",
      "\tuser_name: ${5:}",
      "\t#use_https: ${6:true}",
      "\t#use_proxy: ${7:false}",
      "\t#user_accessapi: ${8:0|1}",
      "\t#user_accesslevel: ${9:0|1|2|3}",
      "\t#user_accessmonitor: ${10:0|1}",
      "\t#user_accessoutbound: ${11:0|1}",
      "\t#user_accessserial: ${12:0|1}",
      "\t#user_accessssh: ${13:0|1}",
      "\t#user_accessweb: ${14:0|1}",
      "\t#user_callbackphone: ${15:}",
      "\t#user_groupaccess: ${16:}",
      "\t#user_pass: ${17:}",
      "\t#user_plugaccess: ${18:}",
      "\t#user_portaccess: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  }
}
