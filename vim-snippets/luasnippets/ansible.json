{
  "add_host": {
    "prefix": "add_host",
    "description": "Add a host (and alternatively a group) to the ansible-playbook in-memory inventory",
    "body": [
      "ansible.builtin.add_host:",
      "\tname: ${1:}",
      "\t#groups: ${2:}"
    ],
    "luasnip": {
      "priority": -50
    }
  },
  "apt": {
    "prefix": "apt",
    "description": "Manages apt-packages",
    "body": [
      "ansible.builtin.apt:",
      "\t#allow_change_held_packages: ${1:false}",
      "\t#allow_downgrade: ${2:false}",
      "\t#allow_unauthenticated: ${3:false}",
      "\t#autoclean: ${4:false}",
      "\t#autoremove: ${5:false}",
      "\t#cache_valid_time: ${6:0}",
      "\t#clean: ${7:false}",
      "\t#deb: ${8:}",
      "\t#default_release: ${9:}",
      "\t#dpkg_options: ${10:force-confdef,force-confold}",
      "\t#fail_on_autoremove: ${11:false}",
      "\t#force: ${12:false}",
      "\t#force_apt_get: ${13:false}",
      "\t#install_recommends: ${14:}",
      "\t#lock_timeout: ${15:60}",
      "\t#name: ${16:}",
      "\t#only_upgrade: ${17:false}",
      "\t#policy_rc_d: ${18:}",
      "\t#purge: ${19:false}",
      "\t#state: ${20:absent|build-dep|latest|#present|fixed}",
      "\t#update_cache: ${21:}",
      "\t#update_cache_retries: ${22:5}",
      "\t#update_cache_retry_max_delay: ${23:12}",
      "\t#upgrade: ${24:dist|full|#no|safe|yes}"
    ]
  },
  "apt_key": {
    "prefix": "apt_key",
    "description": "Add or remove an apt key",
    "body": [
      "ansible.builtin.apt_key:",
      "\t#data: ${1:}",
      "\t#file: ${2:}",
      "\t#id: ${3:}",
      "\t#keyring: ${4:}",
      "\t#keyserver: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#url: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "apt_repository": {
    "prefix": "apt_repository",
    "description": "Add and remove APT repositories",
    "body": [
      "ansible.builtin.apt_repository:",
      "\trepo: ${1:}",
      "\t#codename: ${2:}",
      "\t#filename: ${3:}",
      "\t#install_python_apt: ${4:true}",
      "\t#mode: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#update_cache: ${7:true}",
      "\t#update_cache_retries: ${8:5}",
      "\t#update_cache_retry_max_delay: ${9:12}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "assemble": {
    "prefix": "assemble",
    "description": "Assemble configuration files from fragments",
    "body": [
      "ansible.builtin.assemble:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#decrypt: ${5:true}",
      "\t#delimiter: ${6:}",
      "\t#group: ${7:}",
      "\t#ignore_hidden: ${8:false}",
      "\t#mode: ${9:}",
      "\t#owner: ${10:}",
      "\t#regexp: ${11:}",
      "\t#remote_src: ${12:true}",
      "\t#selevel: ${13:}",
      "\t#serole: ${14:}",
      "\t#setype: ${15:}",
      "\t#seuser: ${16:}",
      "\t#unsafe_writes: ${17:false}",
      "\t#validate: ${18:}"
    ]
  },
  "assert": {
    "prefix": "assert",
    "description": "Asserts given expressions are true",
    "body": [
      "ansible.builtin.assert:",
      "\tthat: ${1:}",
      "\t#fail_msg: ${2:}",
      "\t#quiet: ${3:false}",
      "\t#success_msg: ${4:}"
    ]
  },
  "async_status": {
    "prefix": "async_status",
    "description": "Obtain status of asynchronous task",
    "body": [
      "ansible.builtin.async_status:",
      "\tjid: ${1:}",
      "\t#mode: ${2:cleanup|#status}"
    ]
  },
  "blockinfile": {
    "prefix": "blockinfile",
    "description": "Insert/update/remove a text block surrounded by marker lines",
    "body": [
      "ansible.builtin.blockinfile:",
      "\tpath: ${1:}",
      "\t#attributes: ${2:}",
      "\t#backup: ${3:false}",
      "\t#block: ${4:\"\"}",
      "\t#create: ${5:false}",
      "\t#group: ${6:}",
      "\t#insertafter: ${7:#EOF|*regex*}",
      "\t#insertbefore: ${8:BOF|*regex*}",
      "\t#marker: \\${9:# {mark\\} ANSIBLE MANAGED BLOCK\\}",
      "\t#marker_begin: ${10:BEGIN}",
      "\t#marker_end: ${11:END}",
      "\t#mode: ${12:}",
      "\t#owner: ${13:}",
      "\t#selevel: ${14:}",
      "\t#serole: ${15:}",
      "\t#setype: ${16:}",
      "\t#seuser: ${17:}",
      "\t#state: ${18:absent|#present}",
      "\t#unsafe_writes: ${19:false}",
      "\t#validate: ${20:}"
    ]
  },
  "command": {
    "prefix": "command",
    "description": "Execute commands on targets",
    "body": [
      "ansible.builtin.command:",
      "\t#argv: ${1:}",
      "\t#chdir: ${2:}",
      "\t#cmd: ${3:}",
      "\t#creates: ${4:}",
      "\t#${5:free_form: }",
      "\t#removes: ${6:}",
      "\t#stdin: ${7:}",
      "\t#stdin_add_newline: ${8:true}",
      "\t#strip_empty_ends: ${9:true}",
      "\t#warn: ${10:false}"
    ]
  },
  "copy": {
    "prefix": "copy",
    "description": "Copy files to remote locations",
    "body": [
      "ansible.builtin.copy:",
      "\tdest: ${1:}",
      "\t#attributes: ${2:}",
      "\t#backup: ${3:false}",
      "\t#checksum: ${4:}",
      "\t#content: ${5:}",
      "\t#decrypt: ${6:true}",
      "\t#directory_mode: ${7:}",
      "\t#follow: ${8:false}",
      "\t#force: ${9:true}",
      "\t#group: ${10:}",
      "\t#local_follow: ${11:true}",
      "\t#mode: ${12:}",
      "\t#owner: ${13:}",
      "\t#remote_src: ${14:false}",
      "\t#selevel: ${15:}",
      "\t#serole: ${16:}",
      "\t#setype: ${17:}",
      "\t#seuser: ${18:}",
      "\t#src: ${19:}",
      "\t#unsafe_writes: ${20:false}",
      "\t#validate: ${21:}"
    ]
  },
  "cron": {
    "prefix": "cron",
    "description": "Manage cron.d and crontab entries",
    "body": [
      "ansible.builtin.cron:",
      "\tname: ${1:}",
      "\t#backup: ${2:false}",
      "\t#cron_file: ${3:}",
      "\t#day: ${4:*}",
      "\t#disabled: ${5:false}",
      "\t#env: ${6:false}",
      "\t#hour: ${7:*}",
      "\t#insertafter: ${8:}",
      "\t#insertbefore: ${9:}",
      "\t#job: ${10:}",
      "\t#minute: ${11:*}",
      "\t#month: ${12:*}",
      "\t#special_time: ${13:annually|daily|hourly|monthly|reboot|weekly|yearly}",
      "\t#state: ${14:absent|#present}",
      "\t#user: ${15:}",
      "\t#weekday: ${16:*}"
    ]
  },
  "debconf": {
    "prefix": "debconf",
    "description": "Configure a .deb package",
    "body": [
      "ansible.builtin.debconf:",
      "\tname: ${1:}",
      "\t#question: ${2:}",
      "\t#unseen: ${3:false}",
      "\t#value: ${4:}",
      "\t#vtype: ${5:boolean|error|multiselect|note|password|seen|select|string|text|title}"
    ]
  },
  "debug": {
    "prefix": "debug",
    "description": "Print statements during execution",
    "body": [
      "ansible.builtin.debug:",
      "\t#msg: ${1:Hello world!}",
      "\t#var: ${2:}",
      "\t#verbosity: ${3:0}"
    ]
  },
  "dnf": {
    "prefix": "dnf",
    "description": "Manages packages with the I(dnf) package manager",
    "body": [
      "ansible.builtin.dnf:",
      "\tname: ${1:}",
      "\t#allow_downgrade: ${2:false}",
      "\t#allowerasing: ${3:false}",
      "\t#autoremove: ${4:false}",
      "\t#bugfix: ${5:false}",
      "\t#cacheonly: ${6:false}",
      "\t#conf_file: ${7:}",
      "\t#disable_excludes: ${8:}",
      "\t#disable_gpg_check: ${9:false}",
      "\t#disable_plugin: ${10:}",
      "\t#disablerepo: ${11:}",
      "\t#download_dir: ${12:}",
      "\t#download_only: ${13:false}",
      "\t#enable_plugin: ${14:}",
      "\t#enablerepo: ${15:}",
      "\t#exclude: ${16:}",
      "\t#install_repoquery: ${17:true}",
      "\t#install_weak_deps: ${18:true}",
      "\t#installroot: ${19:/}",
      "\t#list: ${20:}",
      "\t#lock_timeout: ${21:30}",
      "\t#nobest: ${22:false}",
      "\t#releasever: ${23:}",
      "\t#security: ${24:false}",
      "\t#skip_broken: ${25:false}",
      "\t#sslverify: ${26:true}",
      "\t#state: ${27:absent|present|installed|removed|latest}",
      "\t#update_cache: ${28:false}",
      "\t#update_only: ${29:false}",
      "\t#validate_certs: ${30:true}"
    ]
  },
  "dpkg_selections": {
    "prefix": "dpkg_selections",
    "description": "Dpkg package selection selections",
    "body": [
      "ansible.builtin.dpkg_selections:",
      "\tname: ${1:}",
      "\tselection: ${2:install|hold|deinstall|purge}"
    ]
  },
  "expect": {
    "prefix": "expect",
    "description": "Executes a command and responds to prompts",
    "body": [
      "ansible.builtin.expect:",
      "\tcommand: ${1:}",
      "\tresponses: ${2:}",
      "\t#chdir: ${3:}",
      "\t#creates: ${4:}",
      "\t#echo: ${5:false}",
      "\t#removes: ${6:}",
      "\t#timeout: ${7:30}"
    ]
  },
  "fail": {
    "prefix": "fail",
    "description": "Fail with custom message",
    "body": [
      "ansible.builtin.fail:",
      "\t#msg: ${1:Failed as requested from task}"
    ]
  },
  "fetch": {
    "prefix": "fetch",
    "description": "Fetch files from remote nodes",
    "body": [
      "ansible.builtin.fetch:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#fail_on_missing: ${3:true}",
      "\t#flat: ${4:false}",
      "\t#validate_checksum: ${5:true}"
    ]
  },
  "file": {
    "prefix": "file",
    "description": "Manage files and file properties",
    "body": [
      "ansible.builtin.file:",
      "\tpath: ${1:}",
      "\t#access_time: ${2:}",
      "\t#access_time_format: ${3:%Y%m%d%H%M.%S}",
      "\t#attributes: ${4:}",
      "\t#follow: ${5:true}",
      "\t#force: ${6:false}",
      "\t#group: ${7:}",
      "\t#mode: ${8:}",
      "\t#modification_time: ${9:}",
      "\t#modification_time_format: ${10:%Y%m%d%H%M.%S}",
      "\t#owner: ${11:}",
      "\t#recurse: ${12:false}",
      "\t#selevel: ${13:}",
      "\t#serole: ${14:}",
      "\t#setype: ${15:}",
      "\t#seuser: ${16:}",
      "\t#src: ${17:}",
      "\t#state: ${18:absent|directory|#file|hard|link|touch}",
      "\t#unsafe_writes: ${19:false}"
    ]
  },
  "find": {
    "prefix": "find",
    "description": "Return a list of files based on specific criteria",
    "body": [
      "ansible.builtin.find:",
      "\tpaths: ${1:}",
      "\t#age: ${2:}",
      "\t#age_stamp: ${3:atime|ctime|#mtime}",
      "\t#contains: ${4:}",
      "\t#depth: ${5:}",
      "\t#excludes: ${6:}",
      "\t#file_type: ${7:any|directory|#file|link}",
      "\t#follow: ${8:false}",
      "\t#get_checksum: ${9:false}",
      "\t#hidden: ${10:false}",
      "\t#patterns: ${11:[]}",
      "\t#read_whole_file: ${12:false}",
      "\t#recurse: ${13:false}",
      "\t#size: ${14:}",
      "\t#use_regex: ${15:false}"
    ]
  },
  "gather_facts": {
    "prefix": "gather_facts",
    "description": "Gathers facts about remote hosts",
    "body": [
      "ansible.builtin.gather_facts:",
      "\t#parallel: ${1:}"
    ]
  },
  "get_url": {
    "prefix": "get_url",
    "description": "Downloads files from HTTP, HTTPS, or FTP to node",
    "body": [
      "ansible.builtin.get_url:",
      "\tdest: ${1:}",
      "\turl: ${2:}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#checksum: ${5:\"\"}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#force: ${8:false}",
      "\t#force_basic_auth: ${9:false}",
      "\t#group: ${10:}",
      "\t#headers: ${11:}",
      "\t#http_agent: ${12:ansible-httpget}",
      "\t#mode: ${13:}",
      "\t#owner: ${14:}",
      "\t#selevel: ${15:}",
      "\t#serole: ${16:}",
      "\t#setype: ${17:}",
      "\t#seuser: ${18:}",
      "\t#sha256sum: ${19:\"\"}",
      "\t#timeout: ${20:10}",
      "\t#tmp_dest: ${21:}",
      "\t#unredirected_headers: ${22:[]}",
      "\t#unsafe_writes: ${23:false}",
      "\t#url_password: ${24:}",
      "\t#url_username: ${25:}",
      "\t#use_gssapi: ${26:false}",
      "\t#use_proxy: ${27:true}",
      "\t#validate_certs: ${28:true}"
    ]
  },
  "getent": {
    "prefix": "getent",
    "description": "A wrapper to the unix getent utility",
    "body": [
      "ansible.builtin.getent:",
      "\tdatabase: ${1:}",
      "\t#fail_key: ${2:true}",
      "\t#key: ${3:\"\"}",
      "\t#service: ${4:}",
      "\t#split: ${5:}"
    ]
  },
  "git": {
    "prefix": "git",
    "description": "Deploy software (or files) from git checkouts",
    "body": [
      "ansible.builtin.git:",
      "\tdest: ${1:}",
      "\trepo: ${2:}",
      "\t#accept_hostkey: ${3:false}",
      "\t#accept_newhostkey: ${4:false}",
      "\t#archive: ${5:}",
      "\t#archive_prefix: ${6:}",
      "\t#bare: ${7:false}",
      "\t#clone: ${8:true}",
      "\t#depth: ${9:}",
      "\t#executable: ${10:}",
      "\t#force: ${11:false}",
      "\t#gpg_whitelist: ${12:[]}",
      "\t#key_file: ${13:}",
      "\t#recursive: ${14:true}",
      "\t#reference: ${15:}",
      "\t#refspec: ${16:}",
      "\t#remote: ${17:origin}",
      "\t#separate_git_dir: ${18:}",
      "\t#single_branch: ${19:false}",
      "\t#ssh_opts: ${20:}",
      "\t#track_submodules: ${21:false}",
      "\t#umask: ${22:}",
      "\t#update: ${23:true}",
      "\t#verify_commit: ${24:false}",
      "\t#version: ${25:HEAD}"
    ]
  },
  "group_by": {
    "prefix": "group_by",
    "description": "Create Ansible groups based on facts",
    "body": [
      "ansible.builtin.group_by:",
      "\tkey: ${1:}",
      "\t#parents: ${2:all}"
    ]
  },
  "hostname": {
    "prefix": "hostname",
    "description": "Manage hostname",
    "body": [
      "ansible.builtin.hostname:",
      "\tname: ${1:}",
      "\t#use: ${2:alpine|debian|freebsd|generic|macos|macosx|darwin|openbsd|openrc|redhat|sles|solaris|systemd}"
    ]
  },
  "import_playbook": {
    "prefix": "import_playbook",
    "description": "Import a playbook",
    "body": [
      "ansible.builtin.import_playbook:",
      "\t#free-form: ${1:}"
    ]
  },
  "import_role": {
    "prefix": "import_role",
    "description": "Import a role into a play",
    "body": [
      "ansible.builtin.import_role:",
      "\tname: ${1:}",
      "\t#allow_duplicates: ${2:true}",
      "\t#defaults_from: ${3:main}",
      "\t#handlers_from: ${4:main}",
      "\t#rolespec_validate: ${5:true}",
      "\t#tasks_from: ${6:main}",
      "\t#vars_from: ${7:main}"
    ]
  },
  "import_tasks": {
    "prefix": "import_tasks",
    "description": "Import a task list",
    "body": [
      "ansible.builtin.import_tasks:",
      "\t#free-form: ${1:}"
    ]
  },
  "include": {
    "prefix": "include",
    "description": "Include a play or task list",
    "body": [
      "ansible.builtin.include:",
      "\t#free-form: ${1:}"
    ]
  },
  "include_role": {
    "prefix": "include_role",
    "description": "Load and execute a role",
    "body": [
      "ansible.builtin.include_role:",
      "\tname: ${1:}",
      "\t#allow_duplicates: ${2:true}",
      "\t#apply: ${3:}",
      "\t#defaults_from: ${4:main}",
      "\t#handlers_from: ${5:main}",
      "\t#public: ${6:false}",
      "\t#rolespec_validate: ${7:true}",
      "\t#tasks_from: ${8:main}",
      "\t#vars_from: ${9:main}"
    ]
  },
  "include_tasks": {
    "prefix": "include_tasks",
    "description": "Dynamically include a task list",
    "body": [
      "ansible.builtin.include_tasks:",
      "\t#apply: ${1:}",
      "\t#file: ${2:}",
      "\t#free-form: ${3:}"
    ]
  },
  "include_vars": {
    "prefix": "include_vars",
    "description": "Load variables from files, dynamically within a task",
    "body": [
      "ansible.builtin.include_vars:",
      "\t#depth: ${1:0}",
      "\t#dir: ${2:}",
      "\t#extensions: ${3:['json', 'yaml', 'yml']}",
      "\t#file: ${4:}",
      "\t#files_matching: ${5:}",
      "\t#free-form: ${6:}",
      "\t#hash_behaviour: ${7:replace|merge}",
      "\t#ignore_files: ${8:}",
      "\t#ignore_unknown_extensions: ${9:false}",
      "\t#name: ${10:}"
    ]
  },
  "iptables": {
    "prefix": "iptables",
    "description": "Modify iptables rules",
    "body": [
      "ansible.builtin.iptables:",
      "\t#action: ${1:#append|insert}",
      "\t#chain: ${2:}",
      "\t#chain_management: ${3:false}",
      "\t#comment: ${4:}",
      "\t#ctstate: ${5:[]}",
      "\t#destination: ${6:}",
      "\t#destination_port: ${7:}",
      "\t#destination_ports: ${8:}",
      "\t#dst_range: ${9:}",
      "\t#flush: ${10:false}",
      "\t#fragment: ${11:}",
      "\t#gateway: ${12:}",
      "\t#gid_owner: ${13:}",
      "\t#goto: ${14:}",
      "\t#icmp_type: ${15:}",
      "\t#in_interface: ${16:}",
      "\t#ip_version: ${17:#ipv4|ipv6}",
      "\t#jump: ${18:}",
      "\t#limit: ${19:}",
      "\t#limit_burst: ${20:}",
      "\t#log_level: ${21:0|1|2|3|4|5|6|7|emerg|alert|crit|error|warning|notice|info|debug}",
      "\t#log_prefix: ${22:}",
      "\t#match: ${23:[]}",
      "\t#match_set: ${24:}",
      "\t#match_set_flags: ${25:src|dst|src,dst|dst,src}",
      "\t#out_interface: ${26:}",
      "\t#policy: ${27:ACCEPT|DROP|QUEUE|RETURN}",
      "\t#protocol: ${28:}",
      "\t#reject_with: ${29:}",
      "\t#rule_num: ${30:}",
      "\t#set_counters: ${31:}",
      "\t#set_dscp_mark: ${32:}",
      "\t#set_dscp_mark_class: ${33:}",
      "\t#source: ${34:}",
      "\t#source_port: ${35:}",
      "\t#src_range: ${36:}",
      "\t#state: ${37:absent|#present}",
      "\t#syn: ${38:#ignore|match|negate}",
      "\t#table: ${39:#filter|nat|mangle|raw|security}",
      "\t#tcp_flags: ${40:{\\}}",
      "\t#to_destination: ${41:}",
      "\t#to_ports: ${42:}",
      "\t#to_source: ${43:}",
      "\t#uid_owner: ${44:}",
      "\t#wait: ${45:}"
    ]
  },
  "known_hosts": {
    "prefix": "known_hosts",
    "description": "Add or remove a host from the C(known_hosts) file",
    "body": [
      "ansible.builtin.known_hosts:",
      "\tname: ${1:}",
      "\t#hash_host: ${2:false}",
      "\t#key: ${3:}",
      "\t#path: ${4:~/.ssh/known_hosts}",
      "\t#state: ${5:absent|#present}"
    ]
  },
  "lineinfile": {
    "prefix": "lineinfile",
    "description": "Manage lines in text files",
    "body": [
      "ansible.builtin.lineinfile:",
      "\tpath: ${1:}",
      "\t#attributes: ${2:}",
      "\t#backrefs: ${3:false}",
      "\t#backup: ${4:false}",
      "\t#create: ${5:false}",
      "\t#firstmatch: ${6:false}",
      "\t#group: ${7:}",
      "\t#insertafter: ${8:#EOF|*regex*}",
      "\t#insertbefore: ${9:BOF|*regex*}",
      "\t#line: ${10:}",
      "\t#mode: ${11:}",
      "\t#others: ${12:}",
      "\t#owner: ${13:}",
      "\t#regexp: ${14:}",
      "\t#search_string: ${15:}",
      "\t#selevel: ${16:}",
      "\t#serole: ${17:}",
      "\t#setype: ${18:}",
      "\t#seuser: ${19:}",
      "\t#state: ${20:absent|#present}",
      "\t#unsafe_writes: ${21:false}",
      "\t#validate: ${22:}"
    ]
  },
  "meta": {
    "prefix": "meta",
    "description": "Execute Ansible 'actions'",
    "body": [
      "ansible.builtin.meta:",
      "\t${1:free_form: clear_facts|clear_host_errors|end_host|end_play|flush_handlers|noop|refresh_inventory|reset_connection|end_batch}"
    ]
  },
  "package": {
    "prefix": "package",
    "description": "Generic OS package manager",
    "body": [
      "ansible.builtin.package:",
      "\tname: ${1:}",
      "\tstate: ${2:}",
      "\t#use: ${3:auto}"
    ]
  },
  "package_facts": {
    "prefix": "package_facts",
    "description": "Package information as facts",
    "body": [
      "ansible.builtin.package_facts:",
      "\t#manager: ${1:['#auto', 'rpm', 'apt', 'portage', 'pkg', 'pacman', 'apk', 'pkg_info']}",
      "\t#strategy: ${2:#first|all}"
    ]
  },
  "pause": {
    "prefix": "pause",
    "description": "Pause playbook execution",
    "body": [
      "ansible.builtin.pause:",
      "\t#echo: ${1:true}",
      "\t#minutes: ${2:}",
      "\t#prompt: ${3:}",
      "\t#seconds: ${4:}"
    ]
  },
  "ping": {
    "prefix": "ping",
    "description": "Try to connect to host, verify a usable python and return C(pong) on success",
    "body": [
      "ansible.builtin.ping:",
      "\t#data: ${1:pong}"
    ]
  },
  "pip": {
    "prefix": "pip",
    "description": "Manages Python library dependencies",
    "body": [
      "ansible.builtin.pip:",
      "\t#chdir: ${1:}",
      "\t#editable: ${2:false}",
      "\t#executable: ${3:}",
      "\t#extra_args: ${4:}",
      "\t#name: ${5:}",
      "\t#requirements: ${6:}",
      "\t#state: ${7:absent|forcereinstall|latest|#present}",
      "\t#umask: ${8:}",
      "\t#version: ${9:}",
      "\t#virtualenv: ${10:}",
      "\t#virtualenv_command: ${11:virtualenv}",
      "\t#virtualenv_python: ${12:}",
      "\t#virtualenv_site_packages: ${13:false}"
    ]
  },
  "raw": {
    "prefix": "raw",
    "description": "Executes a low-down and dirty command",
    "body": [
      "ansible.builtin.raw:",
      "\t${1:free_form: }",
      "\t#executable: ${2:}"
    ]
  },
  "reboot": {
    "prefix": "reboot",
    "description": "Reboot a machine",
    "body": [
      "ansible.builtin.reboot:",
      "\t#boot_time_command: ${1:cat /proc/sys/kernel/random/boot_id}",
      "\t#connect_timeout: ${2:}",
      "\t#msg: ${3:Reboot initiated by Ansible}",
      "\t#post_reboot_delay: ${4:0}",
      "\t#pre_reboot_delay: ${5:0}",
      "\t#reboot_command: ${6:[determined based on target OS]}",
      "\t#reboot_timeout: ${7:600}",
      "\t#search_paths: ${8:['/sbin', '/bin', '/usr/sbin', '/usr/bin', '/usr/local/sbin']}",
      "\t#test_command: ${9:whoami}"
    ]
  },
  "replace": {
    "prefix": "replace",
    "description": "Replace all instances of a particular string in a file using a back-referenced regular expression",
    "body": [
      "ansible.builtin.replace:",
      "\tpath: ${1:}",
      "\tregexp: ${2:}",
      "\t#after: ${3:}",
      "\t#attributes: ${4:}",
      "\t#backup: ${5:false}",
      "\t#before: ${6:}",
      "\t#encoding: ${7:utf-8}",
      "\t#group: ${8:}",
      "\t#mode: ${9:}",
      "\t#others: ${10:}",
      "\t#owner: ${11:}",
      "\t#replace: ${12:}",
      "\t#selevel: ${13:}",
      "\t#serole: ${14:}",
      "\t#setype: ${15:}",
      "\t#seuser: ${16:}",
      "\t#unsafe_writes: ${17:false}",
      "\t#validate: ${18:}"
    ]
  },
  "rpm_key": {
    "prefix": "rpm_key",
    "description": "Adds or removes a gpg key from the rpm db",
    "body": [
      "ansible.builtin.rpm_key:",
      "\tkey: ${1:}",
      "\t#fingerprint: ${2:}",
      "\t#state: ${3:absent|#present}",
      "\t#validate_certs: ${4:true}"
    ]
  },
  "script": {
    "prefix": "script",
    "description": "Runs a local script on a remote node after transferring it",
    "body": [
      "ansible.builtin.script:",
      "\t#chdir: ${1:}",
      "\t#cmd: ${2:}",
      "\t#creates: ${3:}",
      "\t#decrypt: ${4:true}",
      "\t#executable: ${5:}",
      "\t#${6:free_form: }",
      "\t#removes: ${7:}"
    ]
  },
  "service": {
    "prefix": "service",
    "description": "Manage services",
    "body": [
      "ansible.builtin.service:",
      "\tname: ${1:}",
      "\t#arguments: ${2:}",
      "\t#enabled: ${3:}",
      "\t#pattern: ${4:}",
      "\t#runlevel: ${5:default}",
      "\t#sleep: ${6:}",
      "\t#state: ${7:reloaded|restarted|started|stopped}",
      "\t#use: ${8:auto}"
    ]
  },
  "service_facts": {
    "prefix": "service_facts",
    "description": "Return service state information as fact data",
    "body": "ansible.builtin.service_facts:"
  },
  "set_fact": {
    "prefix": "set_fact",
    "description": "Set host variable(s) and fact(s).",
    "body": [
      "ansible.builtin.set_fact:",
      "\tkey_value: ${1:}",
      "\t#cacheable: ${2:false}"
    ]
  },
  "set_stats": {
    "prefix": "set_stats",
    "description": "Define and display stats for the current ansible run",
    "body": [
      "ansible.builtin.set_stats:",
      "\tdata: ${1:}",
      "\t#aggregate: ${2:true}",
      "\t#per_host: ${3:false}"
    ]
  },
  "setup": {
    "prefix": "setup",
    "description": "Gathers facts about remote hosts",
    "body": [
      "ansible.builtin.setup:",
      "\t#fact_path: ${1:/etc/ansible/facts.d}",
      "\t#filter: ${2:[]}",
      "\t#gather_subset: ${3:all}",
      "\t#gather_timeout: ${4:10}"
    ]
  },
  "shell": {
    "prefix": "shell",
    "description": "Execute shell commands on targets",
    "body": [
      "ansible.builtin.shell:",
      "\t#chdir: ${1:}",
      "\t#cmd: ${2:}",
      "\t#creates: ${3:}",
      "\t#executable: ${4:}",
      "\t#${5:free_form: }",
      "\t#removes: ${6:}",
      "\t#stdin: ${7:}",
      "\t#stdin_add_newline: ${8:true}",
      "\t#warn: ${9:true}"
    ]
  },
  "slurp": {
    "prefix": "slurp",
    "description": "Slurps a file from remote nodes",
    "body": [
      "ansible.builtin.slurp:",
      "\tsrc: ${1:}"
    ]
  },
  "stat": {
    "prefix": "stat",
    "description": "Retrieve file or file system status",
    "body": [
      "ansible.builtin.stat:",
      "\tpath: ${1:}",
      "\t#checksum_algorithm: ${2:md5|#sha1|sha224|sha256|sha384|sha512}",
      "\t#follow: ${3:false}",
      "\t#get_attributes: ${4:true}",
      "\t#get_checksum: ${5:true}",
      "\t#get_mime: ${6:true}"
    ]
  },
  "subversion": {
    "prefix": "subversion",
    "description": "Deploys a subversion repository",
    "body": [
      "ansible.builtin.subversion:",
      "\trepo: ${1:}",
      "\t#checkout: ${2:true}",
      "\t#dest: ${3:}",
      "\t#executable: ${4:}",
      "\t#export: ${5:false}",
      "\t#force: ${6:false}",
      "\t#in_place: ${7:false}",
      "\t#password: ${8:}",
      "\t#revision: ${9:HEAD}",
      "\t#switch: ${10:true}",
      "\t#update: ${11:true}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:false}"
    ]
  },
  "systemd": {
    "prefix": "systemd",
    "description": "Manage systemd units",
    "body": [
      "ansible.builtin.systemd:",
      "\t#daemon_reexec: ${1:false}",
      "\t#daemon_reload: ${2:false}",
      "\t#enabled: ${3:}",
      "\t#force: ${4:}",
      "\t#masked: ${5:}",
      "\t#name: ${6:}",
      "\t#no_block: ${7:false}",
      "\t#scope: ${8:#system|user|global}",
      "\t#state: ${9:reloaded|restarted|started|stopped}"
    ]
  },
  "sysvinit": {
    "prefix": "sysvinit",
    "description": "Manage SysV services.",
    "body": [
      "ansible.builtin.sysvinit:",
      "\tname: ${1:}",
      "\t#arguments: ${2:}",
      "\t#daemonize: ${3:false}",
      "\t#enabled: ${4:}",
      "\t#pattern: ${5:}",
      "\t#runlevels: ${6:}",
      "\t#sleep: ${7:1}",
      "\t#state: ${8:started|stopped|restarted|reloaded}"
    ]
  },
  "tempfile": {
    "prefix": "tempfile",
    "description": "Creates temporary files and directories",
    "body": [
      "ansible.builtin.tempfile:",
      "\t#path: ${1:}",
      "\t#prefix: ${2:ansible.}",
      "\t#state: ${3:directory|#file}",
      "\t#suffix: ${4:\"\"}"
    ]
  },
  "template": {
    "prefix": "template",
    "description": "Template a file out to a target host",
    "body": [
      "ansible.builtin.template:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#block_end_string: ${5:%\\}}",
      "\t#block_start_string: \\${6:{%\\}",
      "\t#comment_end_string: ${7:}",
      "\t#comment_start_string: ${8:}",
      "\t#follow: ${9:false}",
      "\t#force: ${10:true}",
      "\t#group: ${11:}",
      "\t#lstrip_blocks: ${12:false}",
      "\t#mode: ${13:}",
      "\t#newline_sequence: ${14:#\\n|\\r|\\r\\n}",
      "\t#output_encoding: ${15:utf-8}",
      "\t#owner: ${16:}",
      "\t#selevel: ${17:}",
      "\t#serole: ${18:}",
      "\t#setype: ${19:}",
      "\t#seuser: ${20:}",
      "\t#trim_blocks: ${21:true}",
      "\t#unsafe_writes: ${22:false}",
      "\t#validate: ${23:}",
      "\t#variable_end_string: ${24:\\}\\}}",
      "\t#variable_start_string: \\${25:{{\\}"
    ]
  },
  "unarchive": {
    "prefix": "unarchive",
    "description": "Unpacks an archive after (optionally) copying it from the local machine",
    "body": [
      "ansible.builtin.unarchive:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#attributes: ${3:}",
      "\t#copy: ${4:true}",
      "\t#creates: ${5:}",
      "\t#decrypt: ${6:true}",
      "\t#exclude: ${7:[]}",
      "\t#extra_opts: ${8:\"\"}",
      "\t#group: ${9:}",
      "\t#include: ${10:[]}",
      "\t#io_buffer_size: ${11:65536}",
      "\t#keep_newer: ${12:false}",
      "\t#list_files: ${13:false}",
      "\t#mode: ${14:}",
      "\t#owner: ${15:}",
      "\t#remote_src: ${16:false}",
      "\t#selevel: ${17:}",
      "\t#serole: ${18:}",
      "\t#setype: ${19:}",
      "\t#seuser: ${20:}",
      "\t#unsafe_writes: ${21:false}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "uri": {
    "prefix": "uri",
    "description": "Interacts with webservices",
    "body": [
      "ansible.builtin.uri:",
      "\turl: ${1:}",
      "\t#attributes: ${2:}",
      "\t#body: ${3:}",
      "\t#body_format: ${4:form-urlencoded|json|#raw|form-multipart}",
      "\t#ca_path: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#creates: ${8:}",
      "\t#dest: ${9:}",
      "\t#follow_redirects: ${10:all|no|none|#safe|urllib2|yes}",
      "\t#force: ${11:false}",
      "\t#force_basic_auth: ${12:false}",
      "\t#group: ${13:}",
      "\t#headers: ${14:}",
      "\t#http_agent: ${15:ansible-httpget}",
      "\t#method: ${16:GET}",
      "\t#mode: ${17:}",
      "\t#owner: ${18:}",
      "\t#remote_src: ${19:false}",
      "\t#removes: ${20:}",
      "\t#return_content: ${21:false}",
      "\t#selevel: ${22:}",
      "\t#serole: ${23:}",
      "\t#setype: ${24:}",
      "\t#seuser: ${25:}",
      "\t#src: ${26:}",
      "\t#status_code: ${27:[200]}",
      "\t#timeout: ${28:30}",
      "\t#unix_socket: ${29:}",
      "\t#unredirected_headers: ${30:[]}",
      "\t#unsafe_writes: ${31:false}",
      "\t#url_password: ${32:}",
      "\t#url_username: ${33:}",
      "\t#use_gssapi: ${34:false}",
      "\t#use_proxy: ${35:true}",
      "\t#validate_certs: ${36:true}"
    ]
  },
  "validate_argument_spec": {
    "prefix": "validate_argument_spec",
    "description": "Validate role argument specs.",
    "body": [
      "ansible.builtin.validate_argument_spec:",
      "\targument_spec: ${1:}",
      "\t#provided_arguments: ${2:}"
    ]
  },
  "wait_for": {
    "prefix": "wait_for",
    "description": "Waits for a condition before continuing",
    "body": [
      "ansible.builtin.wait_for:",
      "\t#active_connection_states: ${1:['ESTABLISHED', 'FIN_WAIT1', 'FIN_WAIT2', 'SYN_RECV', 'SYN_SENT', 'TIME_WAIT']}",
      "\t#connect_timeout: ${2:5}",
      "\t#delay: ${3:0}",
      "\t#exclude_hosts: ${4:}",
      "\t#host: ${5:127.0.0.1}",
      "\t#msg: ${6:}",
      "\t#path: ${7:}",
      "\t#port: ${8:}",
      "\t#search_regex: ${9:}",
      "\t#sleep: ${10:1}",
      "\t#state: ${11:absent|drained|present|#started|stopped}",
      "\t#timeout: ${12:300}"
    ]
  },
  "wait_for_connection": {
    "prefix": "wait_for_connection",
    "description": "Waits until remote system is reachable/usable",
    "body": [
      "ansible.builtin.wait_for_connection:",
      "\t#connect_timeout: ${1:5}",
      "\t#delay: ${2:0}",
      "\t#sleep: ${3:1}",
      "\t#timeout: ${4:600}"
    ]
  },
  "yum": {
    "prefix": "yum",
    "description": "Manages packages with the I(yum) package manager",
    "body": [
      "ansible.builtin.yum:",
      "\t#allow_downgrade: ${1:false}",
      "\t#autoremove: ${2:false}",
      "\t#bugfix: ${3:false}",
      "\t#cacheonly: ${4:false}",
      "\t#conf_file: ${5:}",
      "\t#disable_excludes: ${6:}",
      "\t#disable_gpg_check: ${7:false}",
      "\t#disable_plugin: ${8:}",
      "\t#disablerepo: ${9:}",
      "\t#download_dir: ${10:}",
      "\t#download_only: ${11:false}",
      "\t#enable_plugin: ${12:}",
      "\t#enablerepo: ${13:}",
      "\t#exclude: ${14:}",
      "\t#install_repoquery: ${15:true}",
      "\t#install_weak_deps: ${16:true}",
      "\t#installroot: ${17:/}",
      "\t#list: ${18:}",
      "\t#lock_timeout: ${19:30}",
      "\t#name: ${20:}",
      "\t#releasever: ${21:}",
      "\t#security: ${22:false}",
      "\t#skip_broken: ${23:false}",
      "\t#sslverify: ${24:true}",
      "\t#state: ${25:absent|installed|latest|present|removed}",
      "\t#update_cache: ${26:false}",
      "\t#update_only: ${27:false}",
      "\t#use_backend: ${28:#auto|yum|yum4|dnf}",
      "\t#validate_certs: ${29:true}"
    ]
  },
  "yum_repository": {
    "prefix": "yum_repository",
    "description": "Add or remove YUM repositories",
    "body": [
      "ansible.builtin.yum_repository:",
      "\tname: ${1:}",
      "\t#async: ${2:true}",
      "\t#attributes: ${3:}",
      "\t#bandwidth: ${4:0}",
      "\t#baseurl: ${5:}",
      "\t#cost: ${6:1000}",
      "\t#deltarpm_metadata_percentage: ${7:100}",
      "\t#deltarpm_percentage: ${8:75}",
      "\t#description: ${9:}",
      "\t#enabled: ${10:}",
      "\t#enablegroups: ${11:}",
      "\t#exclude: ${12:}",
      "\t#failovermethod: ${13:#roundrobin|priority}",
      "\t#file: ${14:}",
      "\t#gpgcakey: ${15:}",
      "\t#gpgcheck: ${16:}",
      "\t#gpgkey: ${17:}",
      "\t#group: ${18:}",
      "\t#http_caching: ${19:#all|packages|none}",
      "\t#include: ${20:}",
      "\t#includepkgs: ${21:}",
      "\t#ip_resolve: ${22:4|6|IPv4|IPv6|#whatever}",
      "\t#keepalive: ${23:false}",
      "\t#keepcache: ${24:0|#1}",
      "\t#metadata_expire: ${25:21600}",
      "\t#metadata_expire_filter: ${26:never|read-only:past|#read-only:present|read-only:future}",
      "\t#metalink: ${27:}",
      "\t#mirrorlist: ${28:}",
      "\t#mirrorlist_expire: ${29:21600}",
      "\t#mode: ${30:}",
      "\t#module_hotfixes: ${31:}",
      "\t#owner: ${32:}",
      "\t#password: ${33:}",
      "\t#priority: ${34:99}",
      "\t#protect: ${35:false}",
      "\t#proxy: ${36:}",
      "\t#proxy_password: ${37:}",
      "\t#proxy_username: ${38:}",
      "\t#repo_gpgcheck: ${39:false}",
      "\t#reposdir: ${40:/etc/yum.repos.d}",
      "\t#retries: ${41:10}",
      "\t#s3_enabled: ${42:false}",
      "\t#selevel: ${43:}",
      "\t#serole: ${44:}",
      "\t#setype: ${45:}",
      "\t#seuser: ${46:}",
      "\t#skip_if_unavailable: ${47:false}",
      "\t#ssl_check_cert_permissions: ${48:false}",
      "\t#sslcacert: ${49:}",
      "\t#sslclientcert: ${50:}",
      "\t#sslclientkey: ${51:}",
      "\t#sslverify: ${52:true}",
      "\t#state: ${53:absent|#present}",
      "\t#throttle: ${54:}",
      "\t#timeout: ${55:30}",
      "\t#ui_repoid_vars: ${56:releasever basearch}",
      "\t#unsafe_writes: ${57:false}",
      "\t#username: ${58:}"
    ]
  },
  "cli_command": {
    "prefix": "cli_command",
    "description": "Run a cli command on cli-based network devices",
    "body": [
      "ansible.netcommon.cli_command:",
      "\tcommand: ${1:}",
      "\t#answer: ${2:}",
      "\t#check_all: ${3:false}",
      "\t#newline: ${4:true}",
      "\t#prompt: ${5:}",
      "\t#sendonly: ${6:false}"
    ]
  },
  "cli_config": {
    "prefix": "cli_config",
    "description": "Push text based configuration to network devices over network_cli",
    "body": [
      "ansible.netcommon.cli_config:",
      "\t#backup: ${1:false}",
      "\t#backup_options: ${2:}",
      "\t#commit: ${3:}",
      "\t#commit_comment: ${4:}",
      "\t#config: ${5:}",
      "\t#defaults: ${6:false}",
      "\t#diff_ignore_lines: ${7:}",
      "\t#diff_match: ${8:line|strict|exact|none}",
      "\t#diff_replace: ${9:line|block|config}",
      "\t#multiline_delimiter: ${10:}",
      "\t#replace: ${11:}",
      "\t#rollback: ${12:}"
    ]
  },
  "grpc_config": {
    "prefix": "grpc_config",
    "description": "Fetch configuration/state data from gRPC enabled target hosts.",
    "body": [
      "ansible.netcommon.grpc_config:",
      "\t#backup: ${1:false}",
      "\t#backup_options: ${2:}",
      "\t#config: ${3:}",
      "\t#state: ${4:}"
    ]
  },
  "grpc_get": {
    "prefix": "grpc_get",
    "description": "Fetch configuration/state data from gRPC enabled target hosts.",
    "body": [
      "ansible.netcommon.grpc_get:",
      "\t#command: ${1:}",
      "\t#data_type: ${2:}",
      "\t#display: ${3:}",
      "\t#section: ${4:}"
    ]
  },
  "net_get": {
    "prefix": "net_get",
    "description": "Copy a file from a network device to Ansible Controller",
    "body": [
      "ansible.netcommon.net_get:",
      "\tsrc: ${1:}",
      "\t#dest: ${2:['Same filename as specified in I(src). The path will be playbook root or role root directory if playbook is part of a role.']}",
      "\t#protocol: ${3:#scp|sftp}"
    ]
  },
  "net_ping": {
    "prefix": "net_ping",
    "description": "Tests reachability using ping from a network device",
    "body": [
      "ansible.netcommon.net_ping:",
      "\tdest: ${1:}",
      "\t#count: ${2:5}",
      "\t#source: ${3:}",
      "\t#state: ${4:absent|#present}",
      "\t#vrf: ${5:default}"
    ]
  },
  "net_put": {
    "prefix": "net_put",
    "description": "Copy a file from Ansible Controller to a network device",
    "body": [
      "ansible.netcommon.net_put:",
      "\tsrc: ${1:}",
      "\t#dest: ${2:['Filename from src and at default directory of user shell on network_os.']}",
      "\t#mode: ${3:#binary|text}",
      "\t#protocol: ${4:#scp|sftp}"
    ]
  },
  "netconf_config": {
    "prefix": "netconf_config",
    "description": "netconf device configuration",
    "body": [
      "ansible.netcommon.netconf_config:",
      "\t#backup: ${1:false}",
      "\t#backup_options: ${2:}",
      "\t#commit: ${3:true}",
      "\t#confirm: ${4:0}",
      "\t#confirm_commit: ${5:false}",
      "\t#content: ${6:}",
      "\t#default_operation: ${7:merge|replace|none}",
      "\t#delete: ${8:false}",
      "\t#error_option: ${9:#stop-on-error|continue-on-error|rollback-on-error}",
      "\t#format: ${10:xml|text|json}",
      "\t#get_filter: ${11:}",
      "\t#lock: ${12:never|#always|if-supported}",
      "\t#save: ${13:false}",
      "\t#source_datastore: ${14:}",
      "\t#target: ${15:#auto|candidate|running}",
      "\t#validate: ${16:false}"
    ]
  },
  "netconf_get": {
    "prefix": "netconf_get",
    "description": "Fetch configuration/state data from NETCONF enabled network devices.",
    "body": [
      "ansible.netcommon.netconf_get:",
      "\t#display: ${1:json|pretty|xml|native}",
      "\t#filter: ${2:}",
      "\t#lock: ${3:#never|always|if-supported}",
      "\t#source: ${4:running|candidate|startup}"
    ]
  },
  "netconf_rpc": {
    "prefix": "netconf_rpc",
    "description": "Execute operations on NETCONF enabled network devices.",
    "body": [
      "ansible.netcommon.netconf_rpc:",
      "\trpc: ${1:}",
      "\t#content: ${2:}",
      "\t#display: ${3:json|pretty|xml}",
      "\t#xmlns: ${4:}"
    ]
  },
  "network_resource": {
    "prefix": "network_resource",
    "description": "Manage resource modules",
    "body": [
      "ansible.netcommon.network_resource:",
      "\t#config: ${1:}",
      "\t#name: ${2:}",
      "\t#os_name: ${3:}",
      "\t#running_config: ${4:}",
      "\t#state: ${5:}"
    ]
  },
  "restconf_config": {
    "prefix": "restconf_config",
    "description": "Handles create, update, read and delete of configuration data on RESTCONF enabled devices.",
    "body": [
      "ansible.netcommon.restconf_config:",
      "\tpath: ${1:}",
      "\t#content: ${2:}",
      "\t#format: ${3:#json|xml}",
      "\t#method: ${4:#post|put|patch|delete}"
    ]
  },
  "restconf_get": {
    "prefix": "restconf_get",
    "description": "Fetch configuration/state data from RESTCONF enabled devices.",
    "body": [
      "ansible.netcommon.restconf_get:",
      "\tpath: ${1:}",
      "\t#content: ${2:config|nonconfig|all}",
      "\t#output: ${3:#json|xml}"
    ]
  },
  "telnet": {
    "prefix": "telnet",
    "description": "Executes a low-down and dirty telnet command",
    "body": [
      "ansible.netcommon.telnet:",
      "\tcommand: ${1:}",
      "\t#host: ${2:remote_addr}",
      "\t#login_prompt: ${3:login: }",
      "\t#password: ${4:}",
      "\t#password_prompt: ${5:Password: }",
      "\t#pause: ${6:1}",
      "\t#port: ${7:23}",
      "\t#prompts: ${8:['\\$']}",
      "\t#send_newline: ${9:false}",
      "\t#timeout: ${10:120}",
      "\t#user: ${11:remote_user}"
    ]
  },
  "acl": {
    "prefix": "acl",
    "description": "Set and retrieve file ACL information.",
    "body": [
      "ansible.posix.acl:",
      "\tpath: ${1:}",
      "\t#default: ${2:false}",
      "\t#entity: ${3:\"\"}",
      "\t#entry: ${4:}",
      "\t#etype: ${5:group|mask|other|user}",
      "\t#follow: ${6:true}",
      "\t#permissions: ${7:}",
      "\t#recalculate_mask: ${8:#default|mask|no_mask}",
      "\t#recursive: ${9:false}",
      "\t#state: ${10:absent|present|#query}",
      "\t#use_nfsv4_acls: ${11:false}"
    ]
  },
  "at": {
    "prefix": "at",
    "description": "Schedule the execution of a command or script file via the at command",
    "body": [
      "ansible.posix.at:",
      "\t#command: ${1:}",
      "\t#count: ${2:}",
      "\t#script_file: ${3:}",
      "\t#state: ${4:absent|#present}",
      "\t#unique: ${5:false}",
      "\t#units: ${6:minutes|hours|days|weeks}"
    ]
  },
  "authorized_key": {
    "prefix": "authorized_key",
    "description": "Adds or removes an SSH authorized key",
    "body": [
      "ansible.posix.authorized_key:",
      "\tkey: ${1:}",
      "\tuser: ${2:}",
      "\t#comment: ${3:}",
      "\t#exclusive: ${4:false}",
      "\t#follow: ${5:false}",
      "\t#key_options: ${6:}",
      "\t#manage_dir: ${7:true}",
      "\t#path: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "firewalld": {
    "prefix": "firewalld",
    "description": "Manage arbitrary ports/services with firewalld",
    "body": [
      "ansible.posix.firewalld:",
      "\tstate: ${1:absent|disabled|enabled|present}",
      "\t#icmp_block: ${2:}",
      "\t#icmp_block_inversion: ${3:}",
      "\t#immediate: ${4:false}",
      "\t#interface: ${5:}",
      "\t#masquerade: ${6:}",
      "\t#offline: ${7:}",
      "\t#permanent: ${8:}",
      "\t#port: ${9:}",
      "\t#port_forward: ${10:}",
      "\t#protocol: ${11:}",
      "\t#rich_rule: ${12:}",
      "\t#service: ${13:}",
      "\t#source: ${14:}",
      "\t#target: ${15:default|ACCEPT|DROP|%%REJECT%%}",
      "\t#timeout: ${16:0}",
      "\t#zone: ${17:}"
    ]
  },
  "firewalld_info": {
    "prefix": "firewalld_info",
    "description": "Gather information about firewalld",
    "body": [
      "ansible.posix.firewalld_info:",
      "\t#active_zones: ${1:false}",
      "\t#zones: ${2:}"
    ]
  },
  "mount": {
    "prefix": "mount",
    "description": "Control active and configured mount points",
    "body": [
      "ansible.posix.mount:",
      "\tpath: ${1:}",
      "\tstate: ${2:absent|absent_from_fstab|mounted|present|unmounted|remounted|ephemeral}",
      "\t#backup: ${3:false}",
      "\t#boot: ${4:true}",
      "\t#dump: ${5:0}",
      "\t#fstab: ${6:}",
      "\t#fstype: ${7:}",
      "\t#opts: ${8:}",
      "\t#passno: ${9:0}",
      "\t#src: ${10:}"
    ]
  },
  "patch": {
    "prefix": "patch",
    "description": "Apply patch files using the GNU patch tool",
    "body": [
      "ansible.posix.patch:",
      "\tsrc: ${1:}",
      "\t#backup: ${2:false}",
      "\t#basedir: ${3:}",
      "\t#binary: ${4:false}",
      "\t#dest: ${5:}",
      "\t#ignore_whitespace: ${6:false}",
      "\t#remote_src: ${7:false}",
      "\t#state: ${8:absent|#present}",
      "\t#strip: ${9:0}"
    ]
  },
  "rhel_facts": {
    "prefix": "rhel_facts",
    "description": "Facts module to set or override RHEL specific facts.",
    "body": "ansible.posix.rhel_facts:"
  },
  "rhel_rpm_ostree": {
    "prefix": "rhel_rpm_ostree",
    "description": "Ensure packages exist in a RHEL for Edge rpm-ostree based system",
    "body": [
      "ansible.posix.rhel_rpm_ostree:",
      "\t#name: ${1:[]}",
      "\t#state: ${2:absent|installed|latest|present|removed}"
    ]
  },
  "rpm_ostree_upgrade": {
    "prefix": "rpm_ostree_upgrade",
    "description": "Manage rpm-ostree upgrade transactions",
    "body": [
      "ansible.posix.rpm_ostree_upgrade:",
      "\t#allow_downgrade: ${1:false}",
      "\t#cache_only: ${2:false}",
      "\t#os: ${3:\"\"}",
      "\t#peer: ${4:false}"
    ]
  },
  "seboolean": {
    "prefix": "seboolean",
    "description": "Toggles SELinux booleans",
    "body": [
      "ansible.posix.seboolean:",
      "\tname: ${1:}",
      "\tstate: ${2:}",
      "\t#ignore_selinux_state: ${3:false}",
      "\t#persistent: ${4:false}"
    ]
  },
  "selinux": {
    "prefix": "selinux",
    "description": "Change policy and state of SELinux",
    "body": [
      "ansible.posix.selinux:",
      "\tstate: ${1:disabled|enforcing|permissive}",
      "\t#configfile: ${2:/etc/selinux/config}",
      "\t#policy: ${3:}",
      "\t#update_kernel_param: ${4:false}"
    ]
  },
  "synchronize": {
    "prefix": "synchronize",
    "description": "A wrapper around rsync to make common tasks in your playbooks quick and easy",
    "body": [
      "ansible.posix.synchronize:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#archive: ${3:true}",
      "\t#checksum: ${4:false}",
      "\t#compress: ${5:true}",
      "\t#copy_links: ${6:false}",
      "\t#delay_updates: ${7:true}",
      "\t#delete: ${8:false}",
      "\t#dest_port: ${9:}",
      "\t#dirs: ${10:false}",
      "\t#existing_only: ${11:false}",
      "\t#group: ${12:}",
      "\t#link_dest: ${13:}",
      "\t#links: ${14:}",
      "\t#mode: ${15:pull|#push}",
      "\t#owner: ${16:}",
      "\t#partial: ${17:false}",
      "\t#perms: ${18:}",
      "\t#private_key: ${19:}",
      "\t#recursive: ${20:}",
      "\t#rsync_opts: ${21:}",
      "\t#rsync_path: ${22:}",
      "\t#rsync_timeout: ${23:0}",
      "\t#set_remote_user: ${24:true}",
      "\t#ssh_connection_multiplexing: ${25:false}",
      "\t#times: ${26:}",
      "\t#use_ssh_args: ${27:false}",
      "\t#verify_host: ${28:false}"
    ]
  },
  "sysctl": {
    "prefix": "sysctl",
    "description": "Manage entries in sysctl.conf.",
    "body": [
      "ansible.posix.sysctl:",
      "\tname: ${1:}",
      "\t#ignoreerrors: ${2:false}",
      "\t#reload: ${3:true}",
      "\t#state: ${4:#present|absent}",
      "\t#sysctl_file: ${5:/etc/sysctl.conf}",
      "\t#sysctl_set: ${6:false}",
      "\t#value: ${7:}"
    ]
  },
  "cli_parse": {
    "prefix": "cli_parse",
    "description": "Parse cli output or text using a variety of parsers",
    "body": [
      "ansible.utils.cli_parse:",
      "\tparser: ${1:}",
      "\t#command: ${2:}",
      "\t#set_fact: ${3:}",
      "\t#text: ${4:}"
    ]
  },
  "fact_diff": {
    "prefix": "fact_diff",
    "description": "Find the difference between currently set facts",
    "body": [
      "ansible.utils.fact_diff:",
      "\tafter: ${1:}",
      "\tbefore: ${2:}",
      "\t#plugin: ${3:{\\}}"
    ]
  },
  "update_fact": {
    "prefix": "update_fact",
    "description": "Update currently set facts",
    "body": [
      "ansible.utils.update_fact:",
      "\tupdates: ${1:}"
    ]
  },
  "validate": {
    "prefix": "validate",
    "description": "Validate data with provided criteria",
    "body": [
      "ansible.utils.validate:",
      "\tcriteria: ${1:}",
      "\tdata: ${2:}",
      "\t#engine: ${3:ansible.utils.jsonschema}"
    ]
  },
  "win_acl": {
    "prefix": "win_acl",
    "description": "Set file/directory/registry/certificate permissions for a system user or group",
    "body": [
      "ansible.windows.win_acl:",
      "\tpath: ${1:}",
      "\trights: ${2:}",
      "\ttype: ${3:allow|deny}",
      "\tuser: ${4:}",
      "\t#follow: ${5:false}",
      "\t#inherit: ${6:ContainerInherit|ObjectInherit}",
      "\t#propagation: ${7:InheritOnly|#None|NoPropagateInherit}",
      "\t#state: ${8:absent|#present}"
    ]
  },
  "win_acl_inheritance": {
    "prefix": "win_acl_inheritance",
    "description": "Change ACL inheritance",
    "body": [
      "ansible.windows.win_acl_inheritance:",
      "\tpath: ${1:}",
      "\t#reorganize: ${2:false}",
      "\t#state: ${3:#absent|present}"
    ]
  },
  "win_certificate_store": {
    "prefix": "win_certificate_store",
    "description": "Manages the certificate store",
    "body": [
      "ansible.windows.win_certificate_store:",
      "\t#file_type: ${1:#der|pem|pkcs12}",
      "\t#key_exportable: ${2:true}",
      "\t#key_storage: ${3:#default|machine|user}",
      "\t#password: ${4:}",
      "\t#path: ${5:}",
      "\t#state: ${6:absent|exported|#present}",
      "\t#store_location: ${7:LocalMachine}",
      "\t#store_name: ${8:My}",
      "\t#store_type: ${9:#system|service}",
      "\t#thumbprint: ${10:}"
    ]
  },
  "win_command": {
    "prefix": "win_command",
    "description": "Executes a command on a remote Windows node",
    "body": [
      "ansible.windows.win_command:",
      "\t#_raw_params: ${1:}",
      "\t#argv: ${2:}",
      "\t#chdir: ${3:}",
      "\t#cmd: ${4:}",
      "\t#creates: ${5:}",
      "\t#output_encoding_override: ${6:}",
      "\t#removes: ${7:}",
      "\t#stdin: ${8:}"
    ]
  },
  "win_copy": {
    "prefix": "win_copy",
    "description": "Copies files to remote locations on windows hosts",
    "body": [
      "ansible.windows.win_copy:",
      "\tdest: ${1:}",
      "\t#backup: ${2:false}",
      "\t#content: ${3:}",
      "\t#decrypt: ${4:true}",
      "\t#force: ${5:true}",
      "\t#local_follow: ${6:true}",
      "\t#remote_src: ${7:false}",
      "\t#src: ${8:}"
    ]
  },
  "win_dns_client": {
    "prefix": "win_dns_client",
    "description": "Configures DNS lookup on Windows hosts",
    "body": [
      "ansible.windows.win_dns_client:",
      "\tadapter_names: ${1:}",
      "\tdns_servers: ${2:}"
    ]
  },
  "win_dsc": {
    "prefix": "win_dsc",
    "description": "Invokes a PowerShell DSC configuration",
    "body": [
      "ansible.windows.win_dsc:",
      "\t${1:free_form: }",
      "\tresource_name: ${2:}",
      "\t#module_version: ${3:latest}"
    ]
  },
  "win_environment": {
    "prefix": "win_environment",
    "description": "Modify environment variables on windows hosts",
    "body": [
      "ansible.windows.win_environment:",
      "\tlevel: ${1:machine|process|user}",
      "\t#name: ${2:}",
      "\t#state: ${3:absent|present}",
      "\t#value: ${4:}",
      "\t#variables: ${5:}"
    ]
  },
  "win_feature": {
    "prefix": "win_feature",
    "description": "Installs and uninstalls Windows Features on Windows Server",
    "body": [
      "ansible.windows.win_feature:",
      "\tname: ${1:}",
      "\t#include_management_tools: ${2:false}",
      "\t#include_sub_features: ${3:false}",
      "\t#source: ${4:}",
      "\t#state: ${5:absent|#present}"
    ]
  },
  "win_file": {
    "prefix": "win_file",
    "description": "Creates, touches or removes files or directories",
    "body": [
      "ansible.windows.win_file:",
      "\tpath: ${1:}",
      "\t#state: ${2:absent|directory|file|touch}"
    ]
  },
  "win_find": {
    "prefix": "win_find",
    "description": "Return a list of files based on specific criteria",
    "body": [
      "ansible.windows.win_find:",
      "\tpaths: ${1:}",
      "\t#age: ${2:}",
      "\t#age_stamp: ${3:atime|ctime|#mtime}",
      "\t#checksum_algorithm: ${4:md5|#sha1|sha256|sha384|sha512}",
      "\t#depth: ${5:}",
      "\t#file_type: ${6:directory|#file}",
      "\t#follow: ${7:false}",
      "\t#get_checksum: ${8:true}",
      "\t#hidden: ${9:false}",
      "\t#patterns: ${10:}",
      "\t#recurse: ${11:false}",
      "\t#size: ${12:}",
      "\t#use_regex: ${13:false}"
    ]
  },
  "win_get_url": {
    "prefix": "win_get_url",
    "description": "Downloads file from HTTP, HTTPS, or FTP to node",
    "body": [
      "ansible.windows.win_get_url:",
      "\tdest: ${1:}",
      "\turl: ${2:}",
      "\t#checksum: ${3:}",
      "\t#checksum_algorithm: ${4:md5|#sha1|sha256|sha384|sha512}",
      "\t#checksum_url: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_cert_password: ${7:}",
      "\t#follow_redirects: ${8:all|none|#safe}",
      "\t#force: ${9:true}",
      "\t#force_basic_auth: ${10:false}",
      "\t#headers: ${11:}",
      "\t#http_agent: ${12:ansible-httpget}",
      "\t#maximum_redirection: ${13:50}",
      "\t#proxy_password: ${14:}",
      "\t#proxy_url: ${15:}",
      "\t#proxy_use_default_credential: ${16:false}",
      "\t#proxy_username: ${17:}",
      "\t#url_method: ${18:}",
      "\t#url_password: ${19:}",
      "\t#url_timeout: ${20:30}",
      "\t#url_username: ${21:}",
      "\t#use_default_credential: ${22:false}",
      "\t#use_proxy: ${23:true}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "win_group": {
    "prefix": "win_group",
    "description": "Add and remove local groups",
    "body": [
      "ansible.windows.win_group:",
      "\tname: ${1:}",
      "\t#description: ${2:}",
      "\t#state: ${3:absent|#present}"
    ]
  },
  "win_group_membership": {
    "prefix": "win_group_membership",
    "description": "Manage Windows local group membership",
    "body": [
      "ansible.windows.win_group_membership:",
      "\tmembers: ${1:}",
      "\tname: ${2:}",
      "\t#state: ${3:absent|#present|pure}"
    ]
  },
  "win_hostname": {
    "prefix": "win_hostname",
    "description": "Manages local Windows computer name",
    "body": [
      "ansible.windows.win_hostname:",
      "\tname: ${1:}"
    ]
  },
  "win_optional_feature": {
    "prefix": "win_optional_feature",
    "description": "Manage optional Windows features",
    "body": [
      "ansible.windows.win_optional_feature:",
      "\tname: ${1:}",
      "\t#include_parent: ${2:false}",
      "\t#source: ${3:}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_owner": {
    "prefix": "win_owner",
    "description": "Set owner",
    "body": [
      "ansible.windows.win_owner:",
      "\tpath: ${1:}",
      "\tuser: ${2:}",
      "\t#recurse: ${3:false}"
    ]
  },
  "win_package": {
    "prefix": "win_package",
    "description": "Installs/uninstalls an installable package",
    "body": [
      "ansible.windows.win_package:",
      "\t#arguments: ${1:}",
      "\t#chdir: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_cert_password: ${4:}",
      "\t#creates_path: ${5:}",
      "\t#creates_service: ${6:}",
      "\t#creates_version: ${7:}",
      "\t#expected_return_code: ${8:[0, 3010]}",
      "\t#follow_redirects: ${9:all|none|#safe}",
      "\t#force_basic_auth: ${10:false}",
      "\t#headers: ${11:}",
      "\t#http_agent: ${12:ansible-httpget}",
      "\t#log_path: ${13:}",
      "\t#maximum_redirection: ${14:50}",
      "\t#path: ${15:}",
      "\t#product_id: ${16:}",
      "\t#provider: ${17:#auto|msi|msix|msp|registry}",
      "\t#proxy_password: ${18:}",
      "\t#proxy_url: ${19:}",
      "\t#proxy_use_default_credential: ${20:false}",
      "\t#proxy_username: ${21:}",
      "\t#state: ${22:absent|#present}",
      "\t#url_method: ${23:}",
      "\t#url_password: ${24:}",
      "\t#url_timeout: ${25:30}",
      "\t#url_username: ${26:}",
      "\t#use_default_credential: ${27:false}",
      "\t#use_proxy: ${28:true}",
      "\t#validate_certs: ${29:true}",
      "\t#wait_for_children: ${30:false}"
    ]
  },
  "win_path": {
    "prefix": "win_path",
    "description": "Manage Windows path environment variables",
    "body": [
      "ansible.windows.win_path:",
      "\telements: ${1:}",
      "\t#name: ${2:PATH}",
      "\t#scope: ${3:#machine|user}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_ping": {
    "prefix": "win_ping",
    "description": "A windows version of the classic ping module",
    "body": [
      "ansible.windows.win_ping:",
      "\t#data: ${1:pong}"
    ]
  },
  "win_powershell": {
    "prefix": "win_powershell",
    "description": "Run PowerShell scripts",
    "body": [
      "ansible.windows.win_powershell:",
      "\tscript: ${1:}",
      "\t#arguments: ${2:}",
      "\t#chdir: ${3:}",
      "\t#creates: ${4:}",
      "\t#depth: ${5:2}",
      "\t#error_action: ${6:silently_continue|#continue|stop}",
      "\t#executable: ${7:}",
      "\t#parameters: ${8:}",
      "\t#removes: ${9:}"
    ]
  },
  "win_reboot": {
    "prefix": "win_reboot",
    "description": "Reboot a windows machine",
    "body": [
      "ansible.windows.win_reboot:",
      "\t#boot_time_command: ${1:(Get-CimInstance -ClassName Win32_OperatingSystem -Property LastBootUpTime).LastBootUpTime.ToFileTime()}",
      "\t#connect_timeout: ${2:5}",
      "\t#msg: ${3:Reboot initiated by Ansible}",
      "\t#post_reboot_delay: ${4:0}",
      "\t#pre_reboot_delay: ${5:2}",
      "\t#reboot_timeout: ${6:600}",
      "\t#test_command: ${7:}"
    ]
  },
  "win_reg_stat": {
    "prefix": "win_reg_stat",
    "description": "Get information about Windows registry keys",
    "body": [
      "ansible.windows.win_reg_stat:",
      "\tpath: ${1:}",
      "\t#name: ${2:}"
    ]
  },
  "win_regedit": {
    "prefix": "win_regedit",
    "description": "Add, change, or remove registry keys and values",
    "body": [
      "ansible.windows.win_regedit:",
      "\tpath: ${1:}",
      "\t#data: ${2:}",
      "\t#delete_key: ${3:true}",
      "\t#hive: ${4:}",
      "\t#name: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#type: ${7:none|binary|dword|expandstring|multistring|#string|qword}"
    ]
  },
  "win_service": {
    "prefix": "win_service",
    "description": "Manage and query Windows services",
    "body": [
      "ansible.windows.win_service:",
      "\tname: ${1:}",
      "\t#dependencies: ${2:}",
      "\t#dependency_action: ${3:add|remove|#set}",
      "\t#description: ${4:}",
      "\t#desktop_interact: ${5:false}",
      "\t#display_name: ${6:}",
      "\t#error_control: ${7:critical|ignore|normal|severe}",
      "\t#failure_actions: ${8:}",
      "\t#failure_actions_on_non_crash_failure: ${9:}",
      "\t#failure_command: ${10:}",
      "\t#failure_reboot_msg: ${11:}",
      "\t#failure_reset_period_sec: ${12:}",
      "\t#force_dependent_services: ${13:false}",
      "\t#load_order_group: ${14:}",
      "\t#password: ${15:}",
      "\t#path: ${16:}",
      "\t#pre_shutdown_timeout_ms: ${17:}",
      "\t#required_privileges: ${18:}",
      "\t#service_type: ${19:user_own_process|user_share_process|win32_own_process|win32_share_process}",
      "\t#sid_info: ${20:none|restricted|unrestricted}",
      "\t#start_mode: ${21:auto|delayed|disabled|manual}",
      "\t#state: ${22:absent|paused|started|stopped|restarted}",
      "\t#update_password: ${23:always|on_create}",
      "\t#username: ${24:}"
    ]
  },
  "win_service_info": {
    "prefix": "win_service_info",
    "description": "Gather information about Windows services",
    "body": [
      "ansible.windows.win_service_info:",
      "\t#name: ${1:}"
    ]
  },
  "win_share": {
    "prefix": "win_share",
    "description": "Manage Windows shares",
    "body": [
      "ansible.windows.win_share:",
      "\tname: ${1:}",
      "\tpath: ${2:}",
      "\t#caching_mode: ${3:BranchCache|Documents|#Manual|None|Programs|Unknown}",
      "\t#change: ${4:}",
      "\t#deny: ${5:}",
      "\t#description: ${6:}",
      "\t#encrypt: ${7:false}",
      "\t#full: ${8:}",
      "\t#list: ${9:false}",
      "\t#read: ${10:}",
      "\t#rule_action: ${11:#set|add}",
      "\t#scope_name: ${12:}",
      "\t#state: ${13:absent|#present}"
    ]
  },
  "win_shell": {
    "prefix": "win_shell",
    "description": "Execute shell commands on target hosts",
    "body": [
      "ansible.windows.win_shell:",
      "\t${1:free_form: }",
      "\t#chdir: ${2:}",
      "\t#creates: ${3:}",
      "\t#executable: ${4:}",
      "\t#no_profile: ${5:false}",
      "\t#output_encoding_override: ${6:}",
      "\t#removes: ${7:}",
      "\t#stdin: ${8:}"
    ]
  },
  "win_stat": {
    "prefix": "win_stat",
    "description": "Get information about Windows files",
    "body": [
      "ansible.windows.win_stat:",
      "\tpath: ${1:}",
      "\t#checksum_algorithm: ${2:md5|#sha1|sha256|sha384|sha512}",
      "\t#follow: ${3:false}",
      "\t#get_checksum: ${4:true}",
      "\t#get_size: ${5:true}"
    ]
  },
  "win_tempfile": {
    "prefix": "win_tempfile",
    "description": "Creates temporary files and directories",
    "body": [
      "ansible.windows.win_tempfile:",
      "\t#path: ${1:%TEMP%}",
      "\t#prefix: ${2:ansible.}",
      "\t#state: ${3:directory|#file}",
      "\t#suffix: ${4:}"
    ]
  },
  "win_template": {
    "prefix": "win_template",
    "description": "Template a file out to a remote server",
    "body": [
      "ansible.windows.win_template:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#backup: ${3:false}",
      "\t#block_end_string: ${4:%\\}}",
      "\t#block_start_string: \\${5:{%\\}",
      "\t#force: ${6:true}",
      "\t#lstrip_blocks: ${7:false}",
      "\t#newline_sequence: ${8:\\n|\\r|#\\r\\n}",
      "\t#output_encoding: ${9:utf-8}",
      "\t#trim_blocks: ${10:true}",
      "\t#variable_end_string: ${11:\\}\\}}",
      "\t#variable_start_string: \\${12:{{\\}"
    ]
  },
  "win_updates": {
    "prefix": "win_updates",
    "description": "Download and install Windows updates",
    "body": [
      "ansible.windows.win_updates:",
      "\t#_operation: ${1:#start|cancel|poll}",
      "\t#_operation_options: ${2:}",
      "\t#accept_list: ${3:}",
      "\t#category_names: ${4:['CriticalUpdates', 'SecurityUpdates', 'UpdateRollups']}",
      "\t#log_path: ${5:}",
      "\t#reboot: ${6:false}",
      "\t#reboot_timeout: ${7:1200}",
      "\t#reject_list: ${8:}",
      "\t#server_selection: ${9:#default|managed_server|windows_update}",
      "\t#skip_optional: ${10:false}",
      "\t#state: ${11:#installed|searched|downloaded}"
    ]
  },
  "win_uri": {
    "prefix": "win_uri",
    "description": "Interacts with webservices",
    "body": [
      "ansible.windows.win_uri:",
      "\turl: ${1:}",
      "\t#body: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_cert_password: ${4:}",
      "\t#content_type: ${5:}",
      "\t#creates: ${6:}",
      "\t#dest: ${7:}",
      "\t#follow_redirects: ${8:all|none|#safe}",
      "\t#force_basic_auth: ${9:false}",
      "\t#headers: ${10:}",
      "\t#http_agent: ${11:ansible-httpget}",
      "\t#maximum_redirection: ${12:50}",
      "\t#proxy_password: ${13:}",
      "\t#proxy_url: ${14:}",
      "\t#proxy_use_default_credential: ${15:false}",
      "\t#proxy_username: ${16:}",
      "\t#removes: ${17:}",
      "\t#return_content: ${18:false}",
      "\t#status_code: ${19:[200]}",
      "\t#url_method: ${20:GET}",
      "\t#url_password: ${21:}",
      "\t#url_timeout: ${22:30}",
      "\t#url_username: ${23:}",
      "\t#use_default_credential: ${24:false}",
      "\t#use_proxy: ${25:true}",
      "\t#validate_certs: ${26:true}"
    ]
  },
  "win_user": {
    "prefix": "win_user",
    "description": "Manages local Windows user accounts",
    "body": [
      "ansible.windows.win_user:",
      "\tname: ${1:}",
      "\t#account_disabled: ${2:}",
      "\t#account_locked: ${3:}",
      "\t#description: ${4:}",
      "\t#fullname: ${5:}",
      "\t#groups: ${6:}",
      "\t#groups_action: ${7:add|#replace|remove}",
      "\t#home_directory: ${8:}",
      "\t#login_script: ${9:}",
      "\t#password: ${10:}",
      "\t#password_expired: ${11:}",
      "\t#password_never_expires: ${12:}",
      "\t#profile: ${13:}",
      "\t#state: ${14:absent|#present|query}",
      "\t#update_password: ${15:#always|on_create}",
      "\t#user_cannot_change_password: ${16:}"
    ]
  },
  "win_user_right": {
    "prefix": "win_user_right",
    "description": "Manage Windows User Rights",
    "body": [
      "ansible.windows.win_user_right:",
      "\tname: ${1:}",
      "\tusers: ${2:}",
      "\t#action: ${3:add|remove|#set}"
    ]
  },
  "win_wait_for": {
    "prefix": "win_wait_for",
    "description": "Waits for a condition before continuing",
    "body": [
      "ansible.windows.win_wait_for:",
      "\t#connect_timeout: ${1:5}",
      "\t#delay: ${2:}",
      "\t#exclude_hosts: ${3:}",
      "\t#host: ${4:127.0.0.1}",
      "\t#path: ${5:}",
      "\t#port: ${6:}",
      "\t#regex: ${7:}",
      "\t#sleep: ${8:1}",
      "\t#state: ${9:absent|drained|present|#started|stopped}",
      "\t#timeout: ${10:300}"
    ]
  },
  "win_whoami": {
    "prefix": "win_whoami",
    "description": "Get information about the current user and process",
    "body": "ansible.windows.win_whoami:"
  },
  "nxos_aaa_server": {
    "prefix": "nxos_aaa_server",
    "description": "Manages AAA server global configuration.",
    "body": [
      "cisco.nxos.nxos_aaa_server:",
      "\tserver_type: ${1:radius|tacacs}",
      "\t#deadtime: ${2:}",
      "\t#directed_request: ${3:enabled|disabled|default}",
      "\t#encrypt_type: ${4:0|7}",
      "\t#global_key: ${5:}",
      "\t#server_timeout: ${6:}",
      "\t#state: ${7:#present|default}"
    ]
  },
  "nxos_aaa_server_host": {
    "prefix": "nxos_aaa_server_host",
    "description": "Manages AAA server host-specific configuration.",
    "body": [
      "cisco.nxos.nxos_aaa_server_host:",
      "\taddress: ${1:}",
      "\tserver_type: ${2:radius|tacacs}",
      "\t#acct_port: ${3:}",
      "\t#auth_port: ${4:}",
      "\t#encrypt_type: ${5:0|7}",
      "\t#host_timeout: ${6:}",
      "\t#key: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#tacacs_port: ${9:}"
    ]
  },
  "nxos_acl_interfaces": {
    "prefix": "nxos_acl_interfaces",
    "description": "ACL interfaces resource module",
    "body": [
      "cisco.nxos.nxos_acl_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|gathered|#merged|overridden|rendered|replaced|parsed}"
    ]
  },
  "nxos_acls": {
    "prefix": "nxos_acls",
    "description": "ACLs resource module",
    "body": [
      "cisco.nxos.nxos_acls:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|gathered|#merged|overridden|rendered|replaced|parsed}"
    ]
  },
  "nxos_banner": {
    "prefix": "nxos_banner",
    "description": "Manage multiline banners on Cisco NXOS devices",
    "body": [
      "cisco.nxos.nxos_banner:",
      "\tbanner: ${1:exec|motd}",
      "\t#multiline_delimiter: ${2:@}",
      "\t#state: ${3:#present|absent}",
      "\t#text: ${4:}"
    ]
  },
  "nxos_bfd_global": {
    "prefix": "nxos_bfd_global",
    "description": "Bidirectional Forwarding Detection (BFD) global-level configuration",
    "body": [
      "cisco.nxos.nxos_bfd_global:",
      "\t#echo_interface: ${1:}",
      "\t#echo_rx_interval: ${2:}",
      "\t#fabricpath_interval: ${3:}",
      "\t#fabricpath_slow_timer: ${4:}",
      "\t#fabricpath_vlan: ${5:}",
      "\t#interval: ${6:}",
      "\t#ipv4_echo_rx_interval: ${7:}",
      "\t#ipv4_interval: ${8:}",
      "\t#ipv4_slow_timer: ${9:}",
      "\t#ipv6_echo_rx_interval: ${10:}",
      "\t#ipv6_interval: ${11:}",
      "\t#ipv6_slow_timer: ${12:}",
      "\t#slow_timer: ${13:}",
      "\t#startup_timer: ${14:}"
    ]
  },
  "nxos_bfd_interfaces": {
    "prefix": "nxos_bfd_interfaces",
    "description": "BFD interfaces resource module",
    "body": [
      "cisco.nxos.nxos_bfd_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_bgp_address_family": {
    "prefix": "nxos_bgp_address_family",
    "description": "BGP Address Family resource module.",
    "body": [
      "cisco.nxos.nxos_bgp_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_bgp_global": {
    "prefix": "nxos_bgp_global",
    "description": "BGP Global resource module.",
    "body": [
      "cisco.nxos.nxos_bgp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|purged|parsed|gathered|rendered}"
    ]
  },
  "nxos_bgp_neighbor_address_family": {
    "prefix": "nxos_bgp_neighbor_address_family",
    "description": "BGP Neighbor Address Family resource module.",
    "body": [
      "cisco.nxos.nxos_bgp_neighbor_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_bgp_templates": {
    "prefix": "nxos_bgp_templates",
    "description": "BGP Templates resource module.",
    "body": [
      "cisco.nxos.nxos_bgp_templates:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_command": {
    "prefix": "nxos_command",
    "description": "Run arbitrary command on Cisco NXOS devices",
    "body": [
      "cisco.nxos.nxos_command:",
      "\tcommands: ${1:}",
      "\t#interval: ${2:1}",
      "\t#match: ${3:any|#all}",
      "\t#retries: ${4:9}",
      "\t#wait_for: ${5:}"
    ]
  },
  "nxos_config": {
    "prefix": "nxos_config",
    "description": "Manage Cisco NXOS configuration sections",
    "body": [
      "cisco.nxos.nxos_config:",
      "\t#after: ${1:}",
      "\t#backup: ${2:false}",
      "\t#backup_options: ${3:}",
      "\t#before: ${4:}",
      "\t#defaults: ${5:false}",
      "\t#diff_against: ${6:startup|intended|running}",
      "\t#diff_ignore_lines: ${7:}",
      "\t#intended_config: ${8:}",
      "\t#lines: ${9:}",
      "\t#match: ${10:#line|strict|exact|none}",
      "\t#parents: ${11:}",
      "\t#replace: ${12:#line|block|config}",
      "\t#replace_src: ${13:}",
      "\t#running_config: ${14:}",
      "\t#save_when: ${15:always|#never|modified|changed}",
      "\t#src: ${16:}"
    ]
  },
  "nxos_evpn_global": {
    "prefix": "nxos_evpn_global",
    "description": "Handles the EVPN control plane for VXLAN.",
    "body": [
      "cisco.nxos.nxos_evpn_global:",
      "\tnv_overlay_evpn: ${1:}"
    ]
  },
  "nxos_evpn_vni": {
    "prefix": "nxos_evpn_vni",
    "description": "Manages Cisco EVPN VXLAN Network Identifier (VNI).",
    "body": [
      "cisco.nxos.nxos_evpn_vni:",
      "\tvni: ${1:}",
      "\t#route_distinguisher: ${2:}",
      "\t#route_target_both: ${3:}",
      "\t#route_target_export: ${4:}",
      "\t#route_target_import: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "nxos_facts": {
    "prefix": "nxos_facts",
    "description": "Gets facts about NX-OS switches",
    "body": [
      "cisco.nxos.nxos_facts:",
      "\t#available_network_resources: ${1:false}",
      "\t#gather_network_resources: ${2:}",
      "\t#gather_subset: ${3:min}"
    ]
  },
  "nxos_feature": {
    "prefix": "nxos_feature",
    "description": "Manage features in NX-OS switches.",
    "body": [
      "cisco.nxos.nxos_feature:",
      "\tfeature: ${1:}",
      "\t#state: ${2:#enabled|disabled}"
    ]
  },
  "nxos_file_copy": {
    "prefix": "nxos_file_copy",
    "description": "Copy a file to a remote NXOS device.",
    "body": [
      "cisco.nxos.nxos_file_copy:",
      "\t#connect_ssh_port: ${1:22}",
      "\t#file_pull: ${2:false}",
      "\t#file_pull_compact: ${3:false}",
      "\t#file_pull_kstack: ${4:false}",
      "\t#file_pull_protocol: ${5:#scp|sftp|ftp|http|https|tftp}",
      "\t#file_pull_timeout: ${6:300}",
      "\t#file_system: ${7:bootflash:}",
      "\t#local_file: ${8:}",
      "\t#local_file_directory: ${9:}",
      "\t#remote_file: ${10:}",
      "\t#remote_scp_server: ${11:}",
      "\t#remote_scp_server_password: ${12:}",
      "\t#remote_scp_server_user: ${13:}",
      "\t#vrf: ${14:management}"
    ]
  },
  "nxos_gir": {
    "prefix": "nxos_gir",
    "description": "Trigger a graceful removal or insertion (GIR) of the switch.",
    "body": [
      "cisco.nxos.nxos_gir:",
      "\t#state: ${1:#present|absent}",
      "\t#system_mode_maintenance: ${2:}",
      "\t#system_mode_maintenance_dont_generate_profile: ${3:}",
      "\t#system_mode_maintenance_on_reload_reset_reason: ${4:hw_error|svc_failure|kern_failure|wdog_timeout|fatal_error|lc_failure|match_any|manual_reload|any_other|maintenance}",
      "\t#system_mode_maintenance_shutdown: ${5:}",
      "\t#system_mode_maintenance_timeout: ${6:}"
    ]
  },
  "nxos_gir_profile_management": {
    "prefix": "nxos_gir_profile_management",
    "description": "Create a maintenance-mode or normal-mode profile for GIR.",
    "body": [
      "cisco.nxos.nxos_gir_profile_management:",
      "\tmode: ${1:maintenance|normal}",
      "\t#commands: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "nxos_hostname": {
    "prefix": "nxos_hostname",
    "description": "Hostname resource module.",
    "body": [
      "cisco.nxos.nxos_hostname:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_hsrp": {
    "prefix": "nxos_hsrp",
    "description": "Manages HSRP configuration on NX-OS switches.",
    "body": [
      "cisco.nxos.nxos_hsrp:",
      "\tgroup: ${1:}",
      "\tinterface: ${2:}",
      "\t#auth_string: ${3:}",
      "\t#auth_type: ${4:text|md5}",
      "\t#preempt: ${5:enabled|disabled}",
      "\t#priority: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#version: ${8:#1|2}",
      "\t#vip: ${9:}"
    ]
  },
  "nxos_hsrp_interfaces": {
    "prefix": "nxos_hsrp_interfaces",
    "description": "HSRP interfaces resource module",
    "body": [
      "cisco.nxos.nxos_hsrp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_igmp": {
    "prefix": "nxos_igmp",
    "description": "Manages IGMP global configuration.",
    "body": [
      "cisco.nxos.nxos_igmp:",
      "\t#enforce_rtr_alert: ${1:}",
      "\t#flush_routes: ${2:}",
      "\t#restart: ${3:false}",
      "\t#state: ${4:#present|default}"
    ]
  },
  "nxos_igmp_interface": {
    "prefix": "nxos_igmp_interface",
    "description": "Manages IGMP interface configuration.",
    "body": [
      "cisco.nxos.nxos_igmp_interface:",
      "\tinterface: ${1:}",
      "\t#group_timeout: ${2:}",
      "\t#immediate_leave: ${3:}",
      "\t#last_member_qrt: ${4:}",
      "\t#last_member_query_count: ${5:}",
      "\t#oif_ps: ${6:}",
      "\t#oif_routemap: ${7:}",
      "\t#querier_timeout: ${8:}",
      "\t#query_interval: ${9:}",
      "\t#query_mrt: ${10:}",
      "\t#report_llg: ${11:}",
      "\t#restart: ${12:false}",
      "\t#robustness: ${13:}",
      "\t#startup_query_count: ${14:}",
      "\t#startup_query_interval: ${15:}",
      "\t#state: ${16:#present|absent|default}",
      "\t#version: ${17:2|3|default}"
    ]
  },
  "nxos_igmp_snooping": {
    "prefix": "nxos_igmp_snooping",
    "description": "Manages IGMP snooping global configuration.",
    "body": [
      "cisco.nxos.nxos_igmp_snooping:",
      "\t#group_timeout: ${1:}",
      "\t#link_local_grp_supp: ${2:}",
      "\t#report_supp: ${3:}",
      "\t#snooping: ${4:}",
      "\t#state: ${5:#present|default}",
      "\t#v3_report_supp: ${6:}"
    ]
  },
  "nxos_install_os": {
    "prefix": "nxos_install_os",
    "description": "Set boot options like boot, kickstart image and issu.",
    "body": [
      "cisco.nxos.nxos_install_os:",
      "\tsystem_image_file: ${1:}",
      "\t#issu: ${2:required|desired|yes|#no}",
      "\t#kickstart_image_file: ${3:}"
    ]
  },
  "nxos_interfaces": {
    "prefix": "nxos_interfaces",
    "description": "Interfaces resource module",
    "body": [
      "cisco.nxos.nxos_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed|purged}"
    ]
  },
  "nxos_l2_interfaces": {
    "prefix": "nxos_l2_interfaces",
    "description": "L2 interfaces resource module",
    "body": [
      "cisco.nxos.nxos_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_l3_interfaces": {
    "prefix": "nxos_l3_interfaces",
    "description": "L3 interfaces resource module",
    "body": [
      "cisco.nxos.nxos_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lacp": {
    "prefix": "nxos_lacp",
    "description": "LACP resource module",
    "body": [
      "cisco.nxos.nxos_lacp:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lacp_interfaces": {
    "prefix": "nxos_lacp_interfaces",
    "description": "LACP interfaces resource module",
    "body": [
      "cisco.nxos.nxos_lacp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lag_interfaces": {
    "prefix": "nxos_lag_interfaces",
    "description": "LAG interfaces resource module",
    "body": [
      "cisco.nxos.nxos_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lldp_global": {
    "prefix": "nxos_lldp_global",
    "description": "LLDP resource module",
    "body": [
      "cisco.nxos.nxos_lldp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_lldp_interfaces": {
    "prefix": "nxos_lldp_interfaces",
    "description": "LLDP interfaces resource module",
    "body": [
      "cisco.nxos.nxos_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_logging_global": {
    "prefix": "nxos_logging_global",
    "description": "Logging resource module.",
    "body": [
      "cisco.nxos.nxos_logging_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_ntp_global": {
    "prefix": "nxos_ntp_global",
    "description": "NTP Global resource module.",
    "body": [
      "cisco.nxos.nxos_ntp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_nxapi": {
    "prefix": "nxos_nxapi",
    "description": "Manage NXAPI configuration on an NXOS device.",
    "body": [
      "cisco.nxos.nxos_nxapi:",
      "\t#http: ${1:true}",
      "\t#http_port: ${2:80}",
      "\t#https: ${3:false}",
      "\t#https_port: ${4:443}",
      "\t#sandbox: ${5:}",
      "\t#ssl_strong_ciphers: ${6:false}",
      "\t#state: ${7:#present|absent}",
      "\t#tlsv1_0: ${8:true}",
      "\t#tlsv1_1: ${9:false}",
      "\t#tlsv1_2: ${10:false}"
    ]
  },
  "nxos_ospf_interfaces": {
    "prefix": "nxos_ospf_interfaces",
    "description": "OSPF Interfaces Resource Module.",
    "body": [
      "cisco.nxos.nxos_ospf_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "nxos_ospfv2": {
    "prefix": "nxos_ospfv2",
    "description": "OSPFv2 resource module",
    "body": [
      "cisco.nxos.nxos_ospfv2:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "nxos_ospfv3": {
    "prefix": "nxos_ospfv3",
    "description": "OSPFv3 resource module",
    "body": [
      "cisco.nxos.nxos_ospfv3:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "nxos_overlay_global": {
    "prefix": "nxos_overlay_global",
    "description": "Configures anycast gateway MAC of the switch.",
    "body": [
      "cisco.nxos.nxos_overlay_global:",
      "\tanycast_gateway_mac: ${1:}"
    ]
  },
  "nxos_pim": {
    "prefix": "nxos_pim",
    "description": "Manages configuration of a PIM instance.",
    "body": [
      "cisco.nxos.nxos_pim:",
      "\t#bfd: ${1:enable|disable}",
      "\t#ssm_range: ${2:[]}"
    ]
  },
  "nxos_pim_interface": {
    "prefix": "nxos_pim_interface",
    "description": "Manages PIM interface configuration.",
    "body": [
      "cisco.nxos.nxos_pim_interface:",
      "\tinterface: ${1:}",
      "\t#bfd: ${2:enable|disable|default}",
      "\t#border: ${3:false}",
      "\t#dr_prio: ${4:}",
      "\t#hello_auth_key: ${5:}",
      "\t#hello_interval: ${6:}",
      "\t#hello_interval_ms: ${7:}",
      "\t#jp_policy_in: ${8:}",
      "\t#jp_policy_out: ${9:}",
      "\t#jp_type_in: ${10:prefix|routemap}",
      "\t#jp_type_out: ${11:prefix|routemap}",
      "\t#neighbor_policy: ${12:}",
      "\t#neighbor_type: ${13:prefix|routemap}",
      "\t#sparse: ${14:false}",
      "\t#state: ${15:#present|absent|default}"
    ]
  },
  "nxos_pim_rp_address": {
    "prefix": "nxos_pim_rp_address",
    "description": "Manages configuration of an PIM static RP address instance.",
    "body": [
      "cisco.nxos.nxos_pim_rp_address:",
      "\trp_address: ${1:}",
      "\t#bidir: ${2:}",
      "\t#group_list: ${3:}",
      "\t#prefix_list: ${4:}",
      "\t#route_map: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "nxos_ping": {
    "prefix": "nxos_ping",
    "description": "Tests reachability using ping from Nexus switch.",
    "body": [
      "cisco.nxos.nxos_ping:",
      "\tdest: ${1:}",
      "\t#count: ${2:5}",
      "\t#df_bit: ${3:false}",
      "\t#size: ${4:}",
      "\t#source: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#vrf: ${7:}"
    ]
  },
  "nxos_prefix_lists": {
    "prefix": "nxos_prefix_lists",
    "description": "Prefix-Lists resource module.",
    "body": [
      "cisco.nxos.nxos_prefix_lists:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_reboot": {
    "prefix": "nxos_reboot",
    "description": "Reboot a network device.",
    "body": [
      "cisco.nxos.nxos_reboot:",
      "\t#confirm: ${1:false}"
    ]
  },
  "nxos_rollback": {
    "prefix": "nxos_rollback",
    "description": "Set a checkpoint or rollback to a checkpoint.",
    "body": [
      "cisco.nxos.nxos_rollback:",
      "\t#checkpoint_file: ${1:}",
      "\t#rollback_to: ${2:}"
    ]
  },
  "nxos_route_maps": {
    "prefix": "nxos_route_maps",
    "description": "Route Maps resource module.",
    "body": [
      "cisco.nxos.nxos_route_maps:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_rpm": {
    "prefix": "nxos_rpm",
    "description": "Install patch or feature rpms on Cisco NX-OS devices.",
    "body": [
      "cisco.nxos.nxos_rpm:",
      "\t#aggregate: ${1:}",
      "\t#file_system: ${2:bootflash}",
      "\t#pkg: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "nxos_snapshot": {
    "prefix": "nxos_snapshot",
    "description": "Manage snapshots of the running states of selected features.",
    "body": [
      "cisco.nxos.nxos_snapshot:",
      "\taction: ${1:add|compare|create|delete|delete_all}",
      "\t#compare_option: ${2:summary|ipv4routes|ipv6routes}",
      "\t#comparison_results_file: ${3:}",
      "\t#description: ${4:}",
      "\t#element_key1: ${5:}",
      "\t#element_key2: ${6:}",
      "\t#path: ${7:./}",
      "\t#row_id: ${8:}",
      "\t#save_snapshot_locally: ${9:false}",
      "\t#section: ${10:}",
      "\t#show_command: ${11:}",
      "\t#snapshot1: ${12:}",
      "\t#snapshot2: ${13:}",
      "\t#snapshot_name: ${14:}"
    ]
  },
  "nxos_snmp_server": {
    "prefix": "nxos_snmp_server",
    "description": "SNMP Server resource module.",
    "body": [
      "cisco.nxos.nxos_snmp_server:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "nxos_static_routes": {
    "prefix": "nxos_static_routes",
    "description": "Static routes resource module",
    "body": [
      "cisco.nxos.nxos_static_routes:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:deleted|#merged|overridden|replaced|gathered|rendered|parsed}"
    ]
  },
  "nxos_system": {
    "prefix": "nxos_system",
    "description": "Manage the system attributes on Cisco NXOS devices",
    "body": [
      "cisco.nxos.nxos_system:",
      "\t#domain_lookup: ${1:}",
      "\t#domain_name: ${2:}",
      "\t#domain_search: ${3:}",
      "\t#hostname: ${4:}",
      "\t#name_servers: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#system_mtu: ${7:}"
    ]
  },
  "nxos_telemetry": {
    "prefix": "nxos_telemetry",
    "description": "TELEMETRY resource module",
    "body": [
      "cisco.nxos.nxos_telemetry:",
      "\t#config: ${1:}",
      "\t#state: ${2:#merged|replaced|deleted|gathered}"
    ]
  },
  "nxos_udld": {
    "prefix": "nxos_udld",
    "description": "Manages UDLD global configuration params.",
    "body": [
      "cisco.nxos.nxos_udld:",
      "\t#aggressive: ${1:enabled|disabled}",
      "\t#msg_time: ${2:}",
      "\t#reset: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "nxos_udld_interface": {
    "prefix": "nxos_udld_interface",
    "description": "Manages UDLD interface configuration params.",
    "body": [
      "cisco.nxos.nxos_udld_interface:",
      "\tinterface: ${1:}",
      "\tmode: ${2:enabled|disabled|aggressive}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "nxos_user": {
    "prefix": "nxos_user",
    "description": "Manage the collection of local users on Nexus devices",
    "body": [
      "cisco.nxos.nxos_user:",
      "\t#aggregate: ${1:}",
      "\t#configured_password: ${2:}",
      "\t#hashed_password: ${3:}",
      "\t#name: ${4:}",
      "\t#purge: ${5:false}",
      "\t#roles: ${6:}",
      "\t#sshkey: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#update_password: ${9:on_create|#always}"
    ]
  },
  "nxos_vlans": {
    "prefix": "nxos_vlans",
    "description": "VLANs resource module",
    "body": [
      "cisco.nxos.nxos_vlans:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "nxos_vpc": {
    "prefix": "nxos_vpc",
    "description": "Manages global VPC configuration",
    "body": [
      "cisco.nxos.nxos_vpc:",
      "\tdomain: ${1:}",
      "\t#auto_recovery: ${2:}",
      "\t#auto_recovery_reload_delay: ${3:}",
      "\t#delay_restore: ${4:}",
      "\t#delay_restore_interface_vlan: ${5:}",
      "\t#delay_restore_orphan_port: ${6:}",
      "\t#peer_gw: ${7:}",
      "\t#pkl_dest: ${8:}",
      "\t#pkl_src: ${9:}",
      "\t#pkl_vrf: ${10:}",
      "\t#role_priority: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#system_priority: ${13:}"
    ]
  },
  "nxos_vpc_interface": {
    "prefix": "nxos_vpc_interface",
    "description": "Manages interface VPC configuration",
    "body": [
      "cisco.nxos.nxos_vpc_interface:",
      "\tportchannel: ${1:}",
      "\t#peer_link: ${2:}",
      "\t#state: ${3:#present|absent}",
      "\t#vpc: ${4:}"
    ]
  },
  "nxos_vrf": {
    "prefix": "nxos_vrf",
    "description": "Manages global VRF configuration.",
    "body": [
      "cisco.nxos.nxos_vrf:",
      "\t#admin_state: ${1:#up|down}",
      "\t#aggregate: ${2:}",
      "\t#associated_interfaces: ${3:}",
      "\t#delay: ${4:10}",
      "\t#description: ${5:}",
      "\t#interfaces: ${6:}",
      "\t#name: ${7:}",
      "\t#purge: ${8:false}",
      "\t#rd: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#vni: ${11:}"
    ]
  },
  "nxos_vrf_af": {
    "prefix": "nxos_vrf_af",
    "description": "Manages VRF AF.",
    "body": [
      "cisco.nxos.nxos_vrf_af:",
      "\tafi: ${1:ipv4|ipv6}",
      "\tvrf: ${2:}",
      "\t#route_target_both_auto_evpn: ${3:}",
      "\t#route_targets: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "nxos_vrf_interface": {
    "prefix": "nxos_vrf_interface",
    "description": "Manages interface specific VRF configuration.",
    "body": [
      "cisco.nxos.nxos_vrf_interface:",
      "\tinterface: ${1:}",
      "\tvrf: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "nxos_vrrp": {
    "prefix": "nxos_vrrp",
    "description": "Manages VRRP configuration on NX-OS switches.",
    "body": [
      "cisco.nxos.nxos_vrrp:",
      "\tgroup: ${1:}",
      "\tinterface: ${2:}",
      "\t#admin_state: ${3:#shutdown|no shutdown|default}",
      "\t#authentication: ${4:}",
      "\t#interval: ${5:}",
      "\t#preempt: ${6:}",
      "\t#priority: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#vip: ${9:}"
    ]
  },
  "nxos_vtp_domain": {
    "prefix": "nxos_vtp_domain",
    "description": "Manages VTP domain configuration.",
    "body": [
      "cisco.nxos.nxos_vtp_domain:",
      "\tdomain: ${1:}"
    ]
  },
  "nxos_vtp_password": {
    "prefix": "nxos_vtp_password",
    "description": "Manages VTP password configuration.",
    "body": [
      "cisco.nxos.nxos_vtp_password:",
      "\t#state: ${1:#present|absent}",
      "\t#vtp_password: ${2:}"
    ]
  },
  "nxos_vtp_version": {
    "prefix": "nxos_vtp_version",
    "description": "Manages VTP version configuration.",
    "body": [
      "cisco.nxos.nxos_vtp_version:",
      "\tversion: ${1:1|2}"
    ]
  },
  "nxos_vxlan_vtep": {
    "prefix": "nxos_vxlan_vtep",
    "description": "Manages VXLAN Network Virtualization Endpoint (NVE).",
    "body": [
      "cisco.nxos.nxos_vxlan_vtep:",
      "\tinterface: ${1:}",
      "\t#advertise_virtual_rmac: ${2:}",
      "\t#description: ${3:}",
      "\t#global_ingress_replication_bgp: ${4:}",
      "\t#global_mcast_group_L2: ${5:}",
      "\t#global_mcast_group_L3: ${6:}",
      "\t#global_suppress_arp: ${7:}",
      "\t#host_reachability: ${8:}",
      "\t#multisite_border_gateway_interface: ${9:}",
      "\t#shutdown: ${10:}",
      "\t#source_interface: ${11:}",
      "\t#source_interface_hold_down_time: ${12:}",
      "\t#state: ${13:#present|absent}"
    ]
  },
  "nxos_vxlan_vtep_vni": {
    "prefix": "nxos_vxlan_vtep_vni",
    "description": "Creates a Virtual Network Identifier member (VNI)",
    "body": [
      "cisco.nxos.nxos_vxlan_vtep_vni:",
      "\tinterface: ${1:}",
      "\tvni: ${2:}",
      "\t#assoc_vrf: ${3:}",
      "\t#ingress_replication: ${4:bgp|static|default}",
      "\t#multicast_group: ${5:}",
      "\t#multisite_ingress_replication: ${6:disable|enable|optimized}",
      "\t#peer_list: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#suppress_arp: ${9:}",
      "\t#suppress_arp_disable: ${10:}"
    ]
  },
  "nxos_devicealias": {
    "prefix": "nxos_devicealias",
    "description": "Configuration of device alias for Cisco NXOS MDS Switches.",
    "body": [
      "cisco.nxos.nxos_devicealias:",
      "\t#da: ${1:}",
      "\t#distribute: ${2:}",
      "\t#mode: ${3:basic|enhanced}",
      "\t#rename: ${4:}"
    ]
  },
  "nxos_vsan": {
    "prefix": "nxos_vsan",
    "description": "Configuration of vsan for Cisco NXOS MDS Switches.",
    "body": [
      "cisco.nxos.nxos_vsan:",
      "\t#vsan: ${1:}"
    ]
  },
  "nxos_zone_zoneset": {
    "prefix": "nxos_zone_zoneset",
    "description": "Configuration of zone/zoneset for Cisco NXOS MDS Switches.",
    "body": [
      "cisco.nxos.nxos_zone_zoneset:",
      "\t#zone_zoneset_details: ${1:}"
    ]
  },
  "hetzner_dns_record": {
    "prefix": "hetzner_dns_record",
    "description": "Add or delete a single record in Hetzner DNS service",
    "body": [
      "community.dns.hetzner_dns_record:",
      "\thetzner_token: ${1:}",
      "\tstate: ${2:present|absent}",
      "\ttype: ${3:A|AAAA|CAA|CNAME|DANE|DS|HINFO|MX|NS|RP|SOA|SRV|TLSA|TXT}",
      "\tvalue: ${4:}",
      "\t#prefix: ${5:}",
      "\t#record: ${6:}",
      "\t#ttl: ${7:}",
      "\t#txt_character_encoding: ${8:decimal|octal}",
      "\t#txt_transformation: ${9:api|quoted|#unquoted}",
      "\t#zone_id: ${10:}",
      "\t#zone_name: ${11:}"
    ]
  },
  "hetzner_dns_record_info": {
    "prefix": "hetzner_dns_record_info",
    "description": "Retrieve records in Hetzner DNS service",
    "body": [
      "community.dns.hetzner_dns_record_info:",
      "\thetzner_token: ${1:}",
      "\t#prefix: ${2:}",
      "\t#record: ${3:}",
      "\t#txt_character_encoding: ${4:decimal|octal}",
      "\t#txt_transformation: ${5:api|quoted|#unquoted}",
      "\t#type: ${6:A|AAAA|CAA|CNAME|DANE|DS|HINFO|MX|NS|RP|SOA|SRV|TLSA|TXT}",
      "\t#what: ${7:#single_record|all_types_for_record|all_records}",
      "\t#zone_id: ${8:}",
      "\t#zone_name: ${9:}"
    ]
  },
  "hetzner_dns_record_set": {
    "prefix": "hetzner_dns_record_set",
    "description": "Add or delete record sets in Hetzner DNS service",
    "body": [
      "community.dns.hetzner_dns_record_set:",
      "\thetzner_token: ${1:}",
      "\tstate: ${2:present|absent}",
      "\ttype: ${3:A|AAAA|CAA|CNAME|DANE|DS|HINFO|MX|NS|RP|SOA|SRV|TLSA|TXT}",
      "\t#bulk_operation_threshold: ${4:2}",
      "\t#on_existing: ${5:#replace|keep_and_fail|keep_and_warn|keep}",
      "\t#prefix: ${6:}",
      "\t#record: ${7:}",
      "\t#ttl: ${8:}",
      "\t#txt_character_encoding: ${9:decimal|octal}",
      "\t#txt_transformation: ${10:api|quoted|#unquoted}",
      "\t#value: ${11:}",
      "\t#zone_id: ${12:}",
      "\t#zone_name: ${13:}"
    ]
  },
  "hetzner_dns_record_set_info": {
    "prefix": "hetzner_dns_record_set_info",
    "description": "Retrieve record sets in Hetzner DNS service",
    "body": [
      "community.dns.hetzner_dns_record_set_info:",
      "\thetzner_token: ${1:}",
      "\t#prefix: ${2:}",
      "\t#record: ${3:}",
      "\t#txt_character_encoding: ${4:decimal|octal}",
      "\t#txt_transformation: ${5:api|quoted|#unquoted}",
      "\t#type: ${6:A|AAAA|CAA|CNAME|DANE|DS|HINFO|MX|NS|RP|SOA|SRV|TLSA|TXT}",
      "\t#what: ${7:#single_record|all_types_for_record|all_records}",
      "\t#zone_id: ${8:}",
      "\t#zone_name: ${9:}"
    ]
  },
  "hetzner_dns_record_sets": {
    "prefix": "hetzner_dns_record_sets",
    "description": "Bulk synchronize DNS record sets in Hetzner DNS service",
    "body": [
      "community.dns.hetzner_dns_record_sets:",
      "\thetzner_token: ${1:}",
      "\trecord_sets: ${2:}",
      "\t#bulk_operation_threshold: ${3:2}",
      "\t#prune: ${4:false}",
      "\t#txt_character_encoding: ${5:decimal|octal}",
      "\t#txt_transformation: ${6:api|quoted|#unquoted}",
      "\t#zone_id: ${7:}",
      "\t#zone_name: ${8:}"
    ]
  },
  "hetzner_dns_zone_info": {
    "prefix": "hetzner_dns_zone_info",
    "description": "Retrieve zone information in Hetzner DNS service",
    "body": [
      "community.dns.hetzner_dns_zone_info:",
      "\thetzner_token: ${1:}",
      "\t#zone_id: ${2:}",
      "\t#zone_name: ${3:}"
    ]
  },
  "hosttech_dns_record": {
    "prefix": "hosttech_dns_record",
    "description": "Add or delete a single record in Hosttech DNS service",
    "body": [
      "community.dns.hosttech_dns_record:",
      "\tstate: ${1:present|absent}",
      "\ttype: ${2:A|AAAA|CAA|CNAME|MX|NS|PTR|SPF|SRV|TXT}",
      "\tvalue: ${3:}",
      "\t#hosttech_password: ${4:}",
      "\t#hosttech_token: ${5:}",
      "\t#hosttech_username: ${6:}",
      "\t#prefix: ${7:}",
      "\t#record: ${8:}",
      "\t#ttl: ${9:3600}",
      "\t#txt_character_encoding: ${10:decimal|octal}",
      "\t#txt_transformation: ${11:api|quoted|#unquoted}",
      "\t#zone_id: ${12:}",
      "\t#zone_name: ${13:}"
    ]
  },
  "hosttech_dns_record_info": {
    "prefix": "hosttech_dns_record_info",
    "description": "Retrieve records in Hosttech DNS service",
    "body": [
      "community.dns.hosttech_dns_record_info:",
      "\t#hosttech_password: ${1:}",
      "\t#hosttech_token: ${2:}",
      "\t#hosttech_username: ${3:}",
      "\t#prefix: ${4:}",
      "\t#record: ${5:}",
      "\t#txt_character_encoding: ${6:decimal|octal}",
      "\t#txt_transformation: ${7:api|quoted|#unquoted}",
      "\t#type: ${8:A|AAAA|CAA|CNAME|MX|NS|PTR|SPF|SRV|TXT}",
      "\t#what: ${9:#single_record|all_types_for_record|all_records}",
      "\t#zone_id: ${10:}",
      "\t#zone_name: ${11:}"
    ]
  },
  "hosttech_dns_record_set": {
    "prefix": "hosttech_dns_record_set",
    "description": "Add or delete record sets in Hosttech DNS service",
    "body": [
      "community.dns.hosttech_dns_record_set:",
      "\tstate: ${1:present|absent}",
      "\ttype: ${2:A|AAAA|CAA|CNAME|MX|NS|PTR|SPF|SRV|TXT}",
      "\t#hosttech_password: ${3:}",
      "\t#hosttech_token: ${4:}",
      "\t#hosttech_username: ${5:}",
      "\t#on_existing: ${6:#replace|keep_and_fail|keep_and_warn|keep}",
      "\t#prefix: ${7:}",
      "\t#record: ${8:}",
      "\t#ttl: ${9:3600}",
      "\t#txt_character_encoding: ${10:decimal|octal}",
      "\t#txt_transformation: ${11:api|quoted|#unquoted}",
      "\t#value: ${12:}",
      "\t#zone_id: ${13:}",
      "\t#zone_name: ${14:}"
    ]
  },
  "hosttech_dns_record_set_info": {
    "prefix": "hosttech_dns_record_set_info",
    "description": "Retrieve record sets in Hosttech DNS service",
    "body": [
      "community.dns.hosttech_dns_record_set_info:",
      "\t#hosttech_password: ${1:}",
      "\t#hosttech_token: ${2:}",
      "\t#hosttech_username: ${3:}",
      "\t#prefix: ${4:}",
      "\t#record: ${5:}",
      "\t#txt_character_encoding: ${6:decimal|octal}",
      "\t#txt_transformation: ${7:api|quoted|#unquoted}",
      "\t#type: ${8:A|AAAA|CAA|CNAME|MX|NS|PTR|SPF|SRV|TXT}",
      "\t#what: ${9:#single_record|all_types_for_record|all_records}",
      "\t#zone_id: ${10:}",
      "\t#zone_name: ${11:}"
    ]
  },
  "hosttech_dns_record_sets": {
    "prefix": "hosttech_dns_record_sets",
    "description": "Bulk synchronize DNS record sets in Hosttech DNS service",
    "body": [
      "community.dns.hosttech_dns_record_sets:",
      "\trecord_sets: ${1:}",
      "\t#hosttech_password: ${2:}",
      "\t#hosttech_token: ${3:}",
      "\t#hosttech_username: ${4:}",
      "\t#prune: ${5:false}",
      "\t#txt_character_encoding: ${6:decimal|octal}",
      "\t#txt_transformation: ${7:api|quoted|#unquoted}",
      "\t#zone_id: ${8:}",
      "\t#zone_name: ${9:}"
    ]
  },
  "hosttech_dns_zone_info": {
    "prefix": "hosttech_dns_zone_info",
    "description": "Retrieve zone information in Hosttech DNS service",
    "body": [
      "community.dns.hosttech_dns_zone_info:",
      "\t#hosttech_password: ${1:}",
      "\t#hosttech_token: ${2:}",
      "\t#hosttech_username: ${3:}",
      "\t#zone_id: ${4:}",
      "\t#zone_name: ${5:}"
    ]
  },
  "nameserver_info": {
    "prefix": "nameserver_info",
    "description": "Look up nameservers for a DNS name",
    "body": [
      "community.dns.nameserver_info:",
      "\tname: ${1:}",
      "\t#always_ask_default_resolver: ${2:true}",
      "\t#query_retry: ${3:3}",
      "\t#query_timeout: ${4:10}",
      "\t#resolve_addresses: ${5:false}",
      "\t#server: ${6:}",
      "\t#servfail_retries: ${7:0}"
    ]
  },
  "nameserver_record_info": {
    "prefix": "nameserver_record_info",
    "description": "Look up all records of a type from all nameservers for a DNS name",
    "body": [
      "community.dns.nameserver_record_info:",
      "\tname: ${1:}",
      "\ttype: ${2:A|ALL|AAAA|CAA|CNAME|DNAME|DNSKEY|DS|HINFO|LOC|MX|NAPTR|NS|NSEC|NSEC3|NSEC3PARAM|PTR|RP|RRSIG|SOA|SPF|SRV|SSHFP|TLSA|TXT}",
      "\t#always_ask_default_resolver: ${3:true}",
      "\t#query_retry: ${4:3}",
      "\t#query_timeout: ${5:10}",
      "\t#server: ${6:}",
      "\t#servfail_retries: ${7:0}"
    ]
  },
  "wait_for_txt": {
    "prefix": "wait_for_txt",
    "description": "Wait for TXT entries to be available on all authoritative nameservers",
    "body": [
      "community.dns.wait_for_txt:",
      "\trecords: ${1:}",
      "\t#always_ask_default_resolver: ${2:true}",
      "\t#max_sleep: ${3:10}",
      "\t#query_retry: ${4:3}",
      "\t#query_timeout: ${5:10}",
      "\t#server: ${6:}",
      "\t#servfail_retries: ${7:0}",
      "\t#timeout: ${8:}"
    ]
  },
  "aerospike_migrations": {
    "prefix": "aerospike_migrations",
    "description": "Check or wait for migrations between nodes",
    "body": [
      "community.general.aerospike_migrations:",
      "\tlocal_only: ${1:}",
      "\t#connect_timeout: ${2:1000}",
      "\t#consecutive_good_checks: ${3:3}",
      "\t#fail_on_cluster_change: ${4:true}",
      "\t#host: ${5:localhost}",
      "\t#migrate_rx_key: ${6:migrate_rx_partitions_remaining}",
      "\t#migrate_tx_key: ${7:migrate_tx_partitions_remaining}",
      "\t#min_cluster_size: ${8:1}",
      "\t#port: ${9:3000}",
      "\t#sleep_between_checks: ${10:60}",
      "\t#target_cluster_size: ${11:}",
      "\t#tries_limit: ${12:300}"
    ]
  },
  "airbrake_deployment": {
    "prefix": "airbrake_deployment",
    "description": "Notify airbrake about app deployments",
    "body": [
      "community.general.airbrake_deployment:",
      "\tenvironment: ${1:}",
      "\tproject_id: ${2:}",
      "\tproject_key: ${3:}",
      "\t#repo: ${4:}",
      "\t#revision: ${5:}",
      "\t#url: ${6:https://api.airbrake.io/api/v4/projects/}",
      "\t#user: ${7:}",
      "\t#validate_certs: ${8:true}",
      "\t#version: ${9:}"
    ]
  },
  "aix_devices": {
    "prefix": "aix_devices",
    "description": "Manages AIX devices",
    "body": [
      "community.general.aix_devices:",
      "\t#attributes: ${1:}",
      "\t#device: ${2:}",
      "\t#force: ${3:false}",
      "\t#recursive: ${4:false}",
      "\t#state: ${5:#available|defined|removed}"
    ]
  },
  "aix_filesystem": {
    "prefix": "aix_filesystem",
    "description": "Configure LVM and NFS file systems for AIX",
    "body": [
      "community.general.aix_filesystem:",
      "\tfilesystem: ${1:}",
      "\t#account_subsystem: ${2:false}",
      "\t#attributes: ${3:[\"agblksize='4096'\", \"isnapshot='no'\"]}",
      "\t#auto_mount: ${4:true}",
      "\t#device: ${5:}",
      "\t#fs_type: ${6:jfs2}",
      "\t#mount_group: ${7:}",
      "\t#nfs_server: ${8:}",
      "\t#permissions: ${9:ro|#rw}",
      "\t#rm_mount_point: ${10:false}",
      "\t#size: ${11:}",
      "\t#state: ${12:absent|mounted|#present|unmounted}",
      "\t#vg: ${13:}"
    ]
  },
  "aix_inittab": {
    "prefix": "aix_inittab",
    "description": "Manages the inittab on AIX",
    "body": [
      "community.general.aix_inittab:",
      "\tcommand: ${1:}",
      "\tname: ${2:}",
      "\trunlevel: ${3:}",
      "\t#action: ${4:boot|bootwait|hold|initdefault|off|once|ondemand|powerfail|powerwait|respawn|sysinit|wait}",
      "\t#insertafter: ${5:}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "aix_lvg": {
    "prefix": "aix_lvg",
    "description": "Manage LVM volume groups on AIX",
    "body": [
      "community.general.aix_lvg:",
      "\tvg: ${1:}",
      "\t#force: ${2:false}",
      "\t#pp_size: ${3:}",
      "\t#pvs: ${4:}",
      "\t#state: ${5:absent|#present|varyoff|varyon}",
      "\t#vg_type: ${6:big|#normal|scalable}"
    ]
  },
  "aix_lvol": {
    "prefix": "aix_lvol",
    "description": "Configure AIX LVM logical volumes",
    "body": [
      "community.general.aix_lvol:",
      "\tlv: ${1:}",
      "\tvg: ${2:}",
      "\t#copies: ${3:1}",
      "\t#lv_type: ${4:jfs2}",
      "\t#opts: ${5:\"\"}",
      "\t#policy: ${6:#maximum|minimum}",
      "\t#pvs: ${7:[]}",
      "\t#size: ${8:}",
      "\t#state: ${9:absent|#present}"
    ]
  },
  "alerta_customer": {
    "prefix": "alerta_customer",
    "description": "Manage customers in Alerta",
    "body": [
      "community.general.alerta_customer:",
      "\talerta_url: ${1:}",
      "\tcustomer: ${2:}",
      "\tmatch: ${3:}",
      "\t#api_key: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_username: ${6:}",
      "\t#state: ${7:absent|#present}"
    ]
  },
  "ali_instance": {
    "prefix": "ali_instance",
    "description": "Create, Start, Stop, Restart or Terminate an Instance in ECS; Add or Remove Instance to/from a Security Group",
    "body": [
      "community.general.ali_instance:",
      "\talicloud_region: ${1:}",
      "\t#alicloud_access_key: ${2:}",
      "\t#alicloud_assume_role: ${3:}",
      "\t#alicloud_assume_role_arn: ${4:}",
      "\t#alicloud_assume_role_session_expiration: ${5:}",
      "\t#alicloud_assume_role_session_name: ${6:}",
      "\t#alicloud_secret_key: ${7:}",
      "\t#alicloud_security_token: ${8:}",
      "\t#allocate_public_ip: ${9:false}",
      "\t#auto_renew: ${10:false}",
      "\t#auto_renew_period: ${11:1|2|3|6|12}",
      "\t#availability_zone: ${12:}",
      "\t#count: ${13:1}",
      "\t#count_tag: ${14:}",
      "\t#description: ${15:}",
      "\t#dry_run: ${16:false}",
      "\t#ecs_role_name: ${17:}",
      "\t#force: ${18:false}",
      "\t#host_name: ${19:}",
      "\t#image_id: ${20:}",
      "\t#include_data_disks: ${21:true}",
      "\t#instance_charge_type: ${22:PrePaid|#PostPaid}",
      "\t#instance_ids: ${23:}",
      "\t#instance_name: ${24:}",
      "\t#instance_type: ${25:}",
      "\t#internet_charge_type: ${26:#PayByBandwidth|PayByTraffic}",
      "\t#key_name: ${27:}",
      "\t#max_bandwidth_in: ${28:200}",
      "\t#max_bandwidth_out: ${29:0}",
      "\t#password: ${30:}",
      "\t#period: ${31:1}",
      "\t#period_unit: ${32:#Month|Week}",
      "\t#profile: ${33:}",
      "\t#purge_tags: ${34:false}",
      "\t#ram_role_name: ${35:}",
      "\t#security_groups: ${36:}",
      "\t#shared_credentials_file: ${37:}",
      "\t#spot_price_limit: ${38:}",
      "\t#spot_strategy: ${39:#NoSpot|SpotWithPriceLimit|SpotAsPriceGo}",
      "\t#state: ${40:#present|running|stopped|restarted|absent}",
      "\t#system_disk_category: ${41:#cloud_efficiency|cloud_ssd}",
      "\t#system_disk_description: ${42:}",
      "\t#system_disk_name: ${43:}",
      "\t#system_disk_size: ${44:40}",
      "\t#tags: ${45:}",
      "\t#unique_suffix: ${46:false}",
      "\t#user_data: ${47:}",
      "\t#vswitch_id: ${48:}"
    ]
  },
  "ali_instance_info": {
    "prefix": "ali_instance_info",
    "description": "Gather information on instances of Alibaba Cloud ECS",
    "body": [
      "community.general.ali_instance_info:",
      "\talicloud_region: ${1:}",
      "\t#alicloud_access_key: ${2:}",
      "\t#alicloud_assume_role: ${3:}",
      "\t#alicloud_assume_role_arn: ${4:}",
      "\t#alicloud_assume_role_session_expiration: ${5:}",
      "\t#alicloud_assume_role_session_name: ${6:}",
      "\t#alicloud_secret_key: ${7:}",
      "\t#alicloud_security_token: ${8:}",
      "\t#ecs_role_name: ${9:}",
      "\t#filters: ${10:}",
      "\t#name_prefix: ${11:}",
      "\t#profile: ${12:}",
      "\t#shared_credentials_file: ${13:}",
      "\t#tags: ${14:}"
    ]
  },
  "alternatives": {
    "prefix": "alternatives",
    "description": "Manages alternative programs for common commands",
    "body": [
      "community.general.alternatives:",
      "\tname: ${1:}",
      "\tpath: ${2:}",
      "\t#link: ${3:}",
      "\t#priority: ${4:}",
      "\t#state: ${5:present|#selected|auto|absent}",
      "\t#subcommands: ${6:}"
    ]
  },
  "ansible_galaxy_install": {
    "prefix": "ansible_galaxy_install",
    "description": "Install Ansible roles or collections using ansible-galaxy",
    "body": [
      "community.general.ansible_galaxy_install:",
      "\ttype: ${1:collection|role|both}",
      "\t#ack_ansible29: ${2:false}",
      "\t#ack_min_ansiblecore211: ${3:false}",
      "\t#dest: ${4:}",
      "\t#force: ${5:false}",
      "\t#name: ${6:}",
      "\t#no_deps: ${7:false}",
      "\t#requirements_file: ${8:}"
    ]
  },
  "apache2_mod_proxy": {
    "prefix": "apache2_mod_proxy",
    "description": "Set and/or get members' attributes of an Apache httpd 2.4 mod_proxy balancer pool",
    "body": [
      "community.general.apache2_mod_proxy:",
      "\tbalancer_vhost: ${1:}",
      "\t#balancer_url_suffix: ${2:/balancer-manager/}",
      "\t#member_host: ${3:}",
      "\t#state: ${4:}",
      "\t#tls: ${5:false}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "apache2_module": {
    "prefix": "apache2_module",
    "description": "Enables/disables a module of the Apache2 webserver",
    "body": [
      "community.general.apache2_module:",
      "\tname: ${1:}",
      "\t#force: ${2:false}",
      "\t#identifier: ${3:}",
      "\t#ignore_configcheck: ${4:false}",
      "\t#state: ${5:#present|absent}",
      "\t#warn_mpm_absent: ${6:true}"
    ]
  },
  "apk": {
    "prefix": "apk",
    "description": "Manages apk packages",
    "body": [
      "community.general.apk:",
      "\t#available: ${1:false}",
      "\t#name: ${2:}",
      "\t#no_cache: ${3:false}",
      "\t#repository: ${4:}",
      "\t#state: ${5:#present|absent|latest|installed|removed}",
      "\t#update_cache: ${6:false}",
      "\t#upgrade: ${7:false}",
      "\t#world: ${8:/etc/apk/world}"
    ]
  },
  "apt_repo": {
    "prefix": "apt_repo",
    "description": "Manage APT repositories via apt-repo",
    "body": [
      "community.general.apt_repo:",
      "\trepo: ${1:}",
      "\t#remove_others: ${2:false}",
      "\t#state: ${3:absent|#present}",
      "\t#update: ${4:false}"
    ]
  },
  "apt_rpm": {
    "prefix": "apt_rpm",
    "description": "APT-RPM package manager",
    "body": [
      "community.general.apt_rpm:",
      "\t#clean: ${1:false}",
      "\t#dist_upgrade: ${2:false}",
      "\t#package: ${3:}",
      "\t#state: ${4:absent|#present|installed|removed}",
      "\t#update_cache: ${5:false}",
      "\t#update_kernel: ${6:false}"
    ]
  },
  "archive": {
    "prefix": "archive",
    "description": "Creates a compressed archive of one or more files or trees",
    "body": [
      "community.general.archive:",
      "\tpath: ${1:}",
      "\t#attributes: ${2:}",
      "\t#dest: ${3:}",
      "\t#exclude_path: ${4:[]}",
      "\t#exclusion_patterns: ${5:}",
      "\t#force_archive: ${6:false}",
      "\t#format: ${7:bz2|#gz|tar|xz|zip}",
      "\t#group: ${8:}",
      "\t#mode: ${9:}",
      "\t#owner: ${10:}",
      "\t#remove: ${11:false}",
      "\t#selevel: ${12:}",
      "\t#serole: ${13:}",
      "\t#setype: ${14:}",
      "\t#seuser: ${15:}",
      "\t#unsafe_writes: ${16:false}"
    ]
  },
  "atomic_container": {
    "prefix": "atomic_container",
    "description": "Manage the containers on the atomic host platform",
    "body": [
      "community.general.atomic_container:",
      "\tbackend: ${1:docker|ostree}",
      "\timage: ${2:}",
      "\tname: ${3:}",
      "\t#mode: ${4:user|system}",
      "\t#rootfs: ${5:}",
      "\t#state: ${6:absent|#latest|present|rollback}",
      "\t#values: ${7:[]}"
    ]
  },
  "atomic_host": {
    "prefix": "atomic_host",
    "description": "Manage the atomic host platform",
    "body": [
      "community.general.atomic_host:",
      "\t#revision: ${1:latest}"
    ]
  },
  "atomic_image": {
    "prefix": "atomic_image",
    "description": "Manage the container images on the atomic host platform",
    "body": [
      "community.general.atomic_image:",
      "\tname: ${1:}",
      "\t#backend: ${2:docker|ostree}",
      "\t#started: ${3:true}",
      "\t#state: ${4:absent|#latest|present}"
    ]
  },
  "awall": {
    "prefix": "awall",
    "description": "Manage awall policies",
    "body": [
      "community.general.awall:",
      "\t#activate: ${1:false}",
      "\t#name: ${2:}",
      "\t#state: ${3:disabled|#enabled}"
    ]
  },
  "beadm": {
    "prefix": "beadm",
    "description": "Manage ZFS boot environments on FreeBSD/Solaris/illumos systems",
    "body": [
      "community.general.beadm:",
      "\tname: ${1:}",
      "\t#description: ${2:}",
      "\t#force: ${3:false}",
      "\t#mountpoint: ${4:}",
      "\t#options: ${5:}",
      "\t#snapshot: ${6:}",
      "\t#state: ${7:absent|activated|mounted|#present|unmounted}"
    ]
  },
  "bearychat": {
    "prefix": "bearychat",
    "description": "Send BearyChat notifications",
    "body": [
      "community.general.bearychat:",
      "\turl: ${1:}",
      "\t#attachments: ${2:}",
      "\t#channel: ${3:}",
      "\t#markdown: ${4:true}",
      "\t#text: ${5:}"
    ]
  },
  "bigpanda": {
    "prefix": "bigpanda",
    "description": "Notify BigPanda about deployments",
    "body": [
      "community.general.bigpanda:",
      "\tcomponent: ${1:}",
      "\tstate: ${2:started|finished|failed}",
      "\ttoken: ${3:}",
      "\tversion: ${4:}",
      "\t#deployment_message: ${5:}",
      "\t#description: ${6:}",
      "\t#env: ${7:}",
      "\t#hosts: ${8:}",
      "\t#owner: ${9:}",
      "\t#source_system: ${10:ansible}",
      "\t#url: ${11:https://api.bigpanda.io}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "bitbucket_access_key": {
    "prefix": "bitbucket_access_key",
    "description": "Manages Bitbucket repository access keys",
    "body": [
      "community.general.bitbucket_access_key:",
      "\tlabel: ${1:}",
      "\trepository: ${2:}",
      "\tstate: ${3:absent|present}",
      "\tworkspace: ${4:}",
      "\t#client_id: ${5:}",
      "\t#client_secret: ${6:}",
      "\t#key: ${7:}",
      "\t#password: ${8:}",
      "\t#user: ${9:}"
    ]
  },
  "bitbucket_pipeline_key_pair": {
    "prefix": "bitbucket_pipeline_key_pair",
    "description": "Manages Bitbucket pipeline SSH key pair",
    "body": [
      "community.general.bitbucket_pipeline_key_pair:",
      "\trepository: ${1:}",
      "\tstate: ${2:absent|present}",
      "\tworkspace: ${3:}",
      "\t#client_id: ${4:}",
      "\t#client_secret: ${5:}",
      "\t#password: ${6:}",
      "\t#private_key: ${7:}",
      "\t#public_key: ${8:}",
      "\t#user: ${9:}"
    ]
  },
  "bitbucket_pipeline_known_host": {
    "prefix": "bitbucket_pipeline_known_host",
    "description": "Manages Bitbucket pipeline known hosts",
    "body": [
      "community.general.bitbucket_pipeline_known_host:",
      "\tname: ${1:}",
      "\trepository: ${2:}",
      "\tstate: ${3:absent|present}",
      "\tworkspace: ${4:}",
      "\t#client_id: ${5:}",
      "\t#client_secret: ${6:}",
      "\t#key: ${7:}",
      "\t#password: ${8:}",
      "\t#user: ${9:}"
    ]
  },
  "bitbucket_pipeline_variable": {
    "prefix": "bitbucket_pipeline_variable",
    "description": "Manages Bitbucket pipeline variables",
    "body": [
      "community.general.bitbucket_pipeline_variable:",
      "\tname: ${1:}",
      "\trepository: ${2:}",
      "\tstate: ${3:absent|present}",
      "\tworkspace: ${4:}",
      "\t#client_id: ${5:}",
      "\t#client_secret: ${6:}",
      "\t#password: ${7:}",
      "\t#secured: ${8:false}",
      "\t#user: ${9:}",
      "\t#value: ${10:}"
    ]
  },
  "bower": {
    "prefix": "bower",
    "description": "Manage bower packages with bower",
    "body": [
      "community.general.bower:",
      "\tpath: ${1:}",
      "\t#name: ${2:}",
      "\t#offline: ${3:false}",
      "\t#production: ${4:false}",
      "\t#relative_execpath: ${5:}",
      "\t#state: ${6:#present|absent|latest}",
      "\t#version: ${7:}"
    ]
  },
  "btrfs_info": {
    "prefix": "btrfs_info",
    "description": "Query btrfs filesystem info",
    "body": "community.general.btrfs_info:"
  },
  "btrfs_subvolume": {
    "prefix": "btrfs_subvolume",
    "description": "Manage btrfs subvolumes",
    "body": [
      "community.general.btrfs_subvolume:",
      "\tname: ${1:}",
      "\t#automount: ${2:false}",
      "\t#default: ${3:false}",
      "\t#filesystem_device: ${4:}",
      "\t#filesystem_label: ${5:}",
      "\t#filesystem_uuid: ${6:}",
      "\t#recursive: ${7:false}",
      "\t#snapshot_conflict: ${8:#skip|clobber|error}",
      "\t#snapshot_source: ${9:}",
      "\t#state: ${10:absent|#present}"
    ]
  },
  "bundler": {
    "prefix": "bundler",
    "description": "Manage Ruby Gem dependencies with Bundler",
    "body": [
      "community.general.bundler:",
      "\t#binstub_directory: ${1:}",
      "\t#chdir: ${2:}",
      "\t#clean: ${3:false}",
      "\t#deployment_mode: ${4:false}",
      "\t#exclude_groups: ${5:}",
      "\t#executable: ${6:}",
      "\t#extra_args: ${7:}",
      "\t#gem_path: ${8:}",
      "\t#gemfile: ${9:}",
      "\t#local: ${10:false}",
      "\t#state: ${11:#present|latest}",
      "\t#user_install: ${12:true}"
    ]
  },
  "bzr": {
    "prefix": "bzr",
    "description": "Deploy software (or files) from bzr branches",
    "body": [
      "community.general.bzr:",
      "\tdest: ${1:}",
      "\tname: ${2:}",
      "\t#executable: ${3:}",
      "\t#force: ${4:false}",
      "\t#version: ${5:head}"
    ]
  },
  "campfire": {
    "prefix": "campfire",
    "description": "Send a message to Campfire",
    "body": [
      "community.general.campfire:",
      "\tmsg: ${1:}",
      "\troom: ${2:}",
      "\tsubscription: ${3:}",
      "\ttoken: ${4:}",
      "\t#notify: ${5:56k|bell|bezos|bueller|clowntown|cottoneyejoe|crickets|dadgummit|dangerzone|danielsan|deeper|drama|greatjob|greyjoy|guarantee|heygirl|horn|horror|inconceivable|live|loggins|makeitso|noooo|nyan|ohmy|ohyeah|pushit|rimshot|rollout|rumble|sax|secret|sexyback|story|tada|tmyk|trololo|trombone|unix|vuvuzela|what|whoomp|yeah|yodel}"
    ]
  },
  "capabilities": {
    "prefix": "capabilities",
    "description": "Manage Linux capabilities",
    "body": [
      "community.general.capabilities:",
      "\tcapability: ${1:}",
      "\tpath: ${2:}",
      "\t#state: ${3:absent|#present}"
    ]
  },
  "cargo": {
    "prefix": "cargo",
    "description": "Manage Rust packages with cargo",
    "body": [
      "community.general.cargo:",
      "\tname: ${1:}",
      "\t#executable: ${2:}",
      "\t#locked: ${3:false}",
      "\t#path: ${4:}",
      "\t#state: ${5:#present|absent|latest}",
      "\t#version: ${6:}"
    ]
  },
  "catapult": {
    "prefix": "catapult",
    "description": "Send a sms / mms using the catapult bandwidth api",
    "body": [
      "community.general.catapult:",
      "\tapi_secret: ${1:}",
      "\tapi_token: ${2:}",
      "\tdest: ${3:}",
      "\tmsg: ${4:}",
      "\tsrc: ${5:}",
      "\tuser_id: ${6:}",
      "\t#media: ${7:}"
    ]
  },
  "circonus_annotation": {
    "prefix": "circonus_annotation",
    "description": "Create an annotation in circonus",
    "body": [
      "community.general.circonus_annotation:",
      "\tapi_key: ${1:}",
      "\tcategory: ${2:}",
      "\tdescription: ${3:}",
      "\ttitle: ${4:}",
      "\t#duration: ${5:0}",
      "\t#start: ${6:}",
      "\t#stop: ${7:}"
    ]
  },
  "cisco_webex": {
    "prefix": "cisco_webex",
    "description": "Send a message to a Cisco Webex Teams Room or Individual",
    "body": [
      "community.general.cisco_webex:",
      "\tmsg: ${1:}",
      "\tpersonal_token: ${2:}",
      "\trecipient_id: ${3:}",
      "\trecipient_type: ${4:roomId|toPersonEmail|toPersonId}",
      "\t#msg_type: ${5:#text|markdown}"
    ]
  },
  "clc_aa_policy": {
    "prefix": "clc_aa_policy",
    "description": "Create or Delete Anti Affinity Policies at CenturyLink Cloud",
    "body": [
      "community.general.clc_aa_policy:",
      "\tlocation: ${1:}",
      "\tname: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "clc_alert_policy": {
    "prefix": "clc_alert_policy",
    "description": "Create or Delete Alert Policies at CenturyLink Cloud",
    "body": [
      "community.general.clc_alert_policy:",
      "\talias: ${1:}",
      "\t#alert_recipients: ${2:}",
      "\t#duration: ${3:}",
      "\t#id: ${4:}",
      "\t#metric: ${5:cpu|memory|disk}",
      "\t#name: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#threshold: ${8:}"
    ]
  },
  "clc_blueprint_package": {
    "prefix": "clc_blueprint_package",
    "description": "Deploys a blue print package on a set of servers in CenturyLink Cloud",
    "body": [
      "community.general.clc_blueprint_package:",
      "\tpackage_id: ${1:}",
      "\tserver_ids: ${2:}",
      "\t#package_params: ${3:{\\}}",
      "\t#state: ${4:#present}",
      "\t#wait: ${5:True}"
    ]
  },
  "clc_firewall_policy": {
    "prefix": "clc_firewall_policy",
    "description": "Create/delete/update firewall policies",
    "body": [
      "community.general.clc_firewall_policy:",
      "\tlocation: ${1:}",
      "\tsource_account_alias: ${2:}",
      "\t#destination: ${3:}",
      "\t#destination_account_alias: ${4:}",
      "\t#enabled: ${5:#True|False}",
      "\t#firewall_policy_id: ${6:}",
      "\t#ports: ${7:}",
      "\t#source: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#wait: ${10:True}"
    ]
  },
  "clc_group": {
    "prefix": "clc_group",
    "description": "Create/delete Server Groups at Centurylink Cloud",
    "body": [
      "community.general.clc_group:",
      "\tname: ${1:}",
      "\t#description: ${2:}",
      "\t#location: ${3:}",
      "\t#parent: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#wait: ${6:true}"
    ]
  },
  "clc_loadbalancer": {
    "prefix": "clc_loadbalancer",
    "description": "Create, Delete shared loadbalancers in CenturyLink Cloud",
    "body": [
      "community.general.clc_loadbalancer:",
      "\talias: ${1:}",
      "\tlocation: ${2:}",
      "\tname: ${3:}",
      "\t#description: ${4:}",
      "\t#method: ${5:leastConnection|roundRobin}",
      "\t#nodes: ${6:[]}",
      "\t#persistence: ${7:standard|sticky}",
      "\t#port: ${8:80|443}",
      "\t#state: ${9:#present|absent|port_absent|nodes_present|nodes_absent}",
      "\t#status: ${10:#enabled|disabled}"
    ]
  },
  "clc_modify_server": {
    "prefix": "clc_modify_server",
    "description": "Modify servers in CenturyLink Cloud",
    "body": [
      "community.general.clc_modify_server:",
      "\tserver_ids: ${1:}",
      "\t#alert_policy_id: ${2:}",
      "\t#alert_policy_name: ${3:}",
      "\t#anti_affinity_policy_id: ${4:}",
      "\t#anti_affinity_policy_name: ${5:}",
      "\t#cpu: ${6:}",
      "\t#memory: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#wait: ${9:true}"
    ]
  },
  "clc_publicip": {
    "prefix": "clc_publicip",
    "description": "Add and Delete public ips on servers in CenturyLink Cloud",
    "body": [
      "community.general.clc_publicip:",
      "\tserver_ids: ${1:}",
      "\t#ports: ${2:}",
      "\t#protocol: ${3:#TCP|UDP|ICMP}",
      "\t#state: ${4:#present|absent}",
      "\t#wait: ${5:true}"
    ]
  },
  "clc_server": {
    "prefix": "clc_server",
    "description": "Create, Delete, Start and Stop servers in CenturyLink Cloud",
    "body": [
      "community.general.clc_server:",
      "\t#add_public_ip: ${1:false}",
      "\t#additional_disks: ${2:[]}",
      "\t#alert_policy_id: ${3:}",
      "\t#alert_policy_name: ${4:}",
      "\t#alias: ${5:}",
      "\t#anti_affinity_policy_id: ${6:}",
      "\t#anti_affinity_policy_name: ${7:}",
      "\t#configuration_id: ${8:}",
      "\t#count: ${9:1}",
      "\t#count_group: ${10:}",
      "\t#cpu: ${11:1}",
      "\t#cpu_autoscale_policy_id: ${12:}",
      "\t#custom_fields: ${13:[]}",
      "\t#description: ${14:}",
      "\t#exact_count: ${15:}",
      "\t#group: ${16:Default Group}",
      "\t#ip_address: ${17:}",
      "\t#location: ${18:}",
      "\t#managed_os: ${19:false}",
      "\t#memory: ${20:1}",
      "\t#name: ${21:}",
      "\t#network_id: ${22:}",
      "\t#os_type: ${23:redHat6_64Bit|centOS6_64Bit|windows2012R2Standard_64Bit|ubuntu14_64Bit}",
      "\t#packages: ${24:[]}",
      "\t#password: ${25:}",
      "\t#primary_dns: ${26:}",
      "\t#public_ip_ports: ${27:[]}",
      "\t#public_ip_protocol: ${28:#TCP|UDP|ICMP}",
      "\t#secondary_dns: ${29:}",
      "\t#server_ids: ${30:[]}",
      "\t#source_server_password: ${31:}",
      "\t#state: ${32:#present|absent|started|stopped}",
      "\t#storage_type: ${33:#standard|hyperscale}",
      "\t#template: ${34:}",
      "\t#ttl: ${35:}",
      "\t#type: ${36:#standard|hyperscale|bareMetal}",
      "\t#wait: ${37:true}"
    ]
  },
  "clc_server_snapshot": {
    "prefix": "clc_server_snapshot",
    "description": "Create, Delete and Restore server snapshots in CenturyLink Cloud",
    "body": [
      "community.general.clc_server_snapshot:",
      "\tserver_ids: ${1:}",
      "\t#expiration_days: ${2:7}",
      "\t#state: ${3:#present|absent|restore}",
      "\t#wait: ${4:True}"
    ]
  },
  "cloud_init_data_facts": {
    "prefix": "cloud_init_data_facts",
    "description": "Retrieve facts of cloud-init",
    "body": [
      "community.general.cloud_init_data_facts:",
      "\t#filter: ${1:status|result}"
    ]
  },
  "cloudflare_dns": {
    "prefix": "cloudflare_dns",
    "description": "Manage Cloudflare DNS records",
    "body": [
      "community.general.cloudflare_dns:",
      "\tzone: ${1:}",
      "\t#account_api_key: ${2:}",
      "\t#account_email: ${3:}",
      "\t#algorithm: ${4:}",
      "\t#api_token: ${5:}",
      "\t#cert_usage: ${6:0|1|2|3}",
      "\t#flag: ${7:0|1}",
      "\t#hash_type: ${8:1|2}",
      "\t#key_tag: ${9:}",
      "\t#port: ${10:}",
      "\t#priority: ${11:1}",
      "\t#proto: ${12:}",
      "\t#proxied: ${13:false}",
      "\t#record: ${14:@}",
      "\t#selector: ${15:0|1}",
      "\t#service: ${16:}",
      "\t#solo: ${17:}",
      "\t#state: ${18:absent|#present}",
      "\t#tag: ${19:issue|issuewild|iodef}",
      "\t#timeout: ${20:30}",
      "\t#ttl: ${21:1}",
      "\t#type: ${22:A|AAAA|CNAME|DS|MX|NS|SPF|SRV|SSHFP|TLSA|CAA|TXT}",
      "\t#value: ${23:}",
      "\t#weight: ${24:1}"
    ]
  },
  "cobbler_sync": {
    "prefix": "cobbler_sync",
    "description": "Sync Cobbler",
    "body": [
      "community.general.cobbler_sync:",
      "\t#host: ${1:127.0.0.1}",
      "\t#password: ${2:}",
      "\t#port: ${3:}",
      "\t#use_ssl: ${4:true}",
      "\t#username: ${5:cobbler}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "cobbler_system": {
    "prefix": "cobbler_system",
    "description": "Manage system objects in Cobbler",
    "body": [
      "community.general.cobbler_system:",
      "\t#host: ${1:127.0.0.1}",
      "\t#interfaces: ${2:}",
      "\t#name: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:}",
      "\t#properties: ${6:}",
      "\t#state: ${7:absent|#present|query}",
      "\t#sync: ${8:false}",
      "\t#use_ssl: ${9:true}",
      "\t#username: ${10:cobbler}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "composer": {
    "prefix": "composer",
    "description": "Dependency Manager for PHP",
    "body": [
      "community.general.composer:",
      "\t#apcu_autoloader: ${1:false}",
      "\t#arguments: ${2:\"\"}",
      "\t#classmap_authoritative: ${3:false}",
      "\t#command: ${4:install}",
      "\t#composer_executable: ${5:}",
      "\t#executable: ${6:}",
      "\t#global_command: ${7:false}",
      "\t#ignore_platform_reqs: ${8:false}",
      "\t#no_dev: ${9:true}",
      "\t#no_plugins: ${10:false}",
      "\t#no_scripts: ${11:false}",
      "\t#optimize_autoloader: ${12:true}",
      "\t#prefer_dist: ${13:false}",
      "\t#prefer_source: ${14:false}",
      "\t#working_dir: ${15:}"
    ]
  },
  "consul": {
    "prefix": "consul",
    "description": "Add, modify & delete services within a consul cluster",
    "body": [
      "community.general.consul:",
      "\t#ack_params_state_absent: ${1:}",
      "\t#check_host: ${2:}",
      "\t#check_id: ${3:}",
      "\t#check_name: ${4:}",
      "\t#check_node: ${5:}",
      "\t#host: ${6:localhost}",
      "\t#http: ${7:}",
      "\t#interval: ${8:}",
      "\t#notes: ${9:}",
      "\t#port: ${10:8500}",
      "\t#scheme: ${11:http}",
      "\t#script: ${12:}",
      "\t#service_address: ${13:}",
      "\t#service_id: ${14:}",
      "\t#service_name: ${15:}",
      "\t#service_port: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#tags: ${18:}",
      "\t#tcp: ${19:}",
      "\t#timeout: ${20:}",
      "\t#token: ${21:}",
      "\t#ttl: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "consul_acl_bootstrap": {
    "prefix": "consul_acl_bootstrap",
    "description": "Bootstrap ACLs in Consul",
    "body": [
      "community.general.consul_acl_bootstrap:",
      "\t#bootstrap_secret: ${1:}",
      "\t#ca_path: ${2:}",
      "\t#host: ${3:localhost}",
      "\t#port: ${4:8500}",
      "\t#scheme: ${5:http}",
      "\t#state: ${6:#present|bootstrapped}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "consul_auth_method": {
    "prefix": "consul_auth_method",
    "description": "Manipulate Consul auth methods",
    "body": [
      "community.general.consul_auth_method:",
      "\tname: ${1:}",
      "\t#ca_path: ${2:}",
      "\t#config: ${3:}",
      "\t#description: ${4:}",
      "\t#display_name: ${5:}",
      "\t#host: ${6:localhost}",
      "\t#max_token_ttl: ${7:}",
      "\t#port: ${8:8500}",
      "\t#scheme: ${9:http}",
      "\t#state: ${10:#present|absent}",
      "\t#token: ${11:}",
      "\t#token_locality: ${12:local|global}",
      "\t#type: ${13:kubernetes|jwt|oidc|aws-iam}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "consul_binding_rule": {
    "prefix": "consul_binding_rule",
    "description": "Manipulate Consul binding rules",
    "body": [
      "community.general.consul_binding_rule:",
      "\tauth_method: ${1:}",
      "\tname: ${2:}",
      "\t#bind_name: ${3:}",
      "\t#bind_type: ${4:service|node|role|templated-policy}",
      "\t#bind_vars: ${5:}",
      "\t#ca_path: ${6:}",
      "\t#description: ${7:}",
      "\t#host: ${8:localhost}",
      "\t#port: ${9:8500}",
      "\t#scheme: ${10:http}",
      "\t#selector: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#token: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "consul_kv": {
    "prefix": "consul_kv",
    "description": "Manipulate entries in the key/value store of a consul cluster",
    "body": [
      "community.general.consul_kv:",
      "\tkey: ${1:}",
      "\t#cas: ${2:}",
      "\t#flags: ${3:}",
      "\t#host: ${4:localhost}",
      "\t#port: ${5:8500}",
      "\t#recurse: ${6:}",
      "\t#retrieve: ${7:true}",
      "\t#scheme: ${8:http}",
      "\t#session: ${9:}",
      "\t#state: ${10:absent|acquire|#present|release}",
      "\t#token: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#value: ${13:}"
    ]
  },
  "consul_policy": {
    "prefix": "consul_policy",
    "description": "Manipulate Consul policies",
    "body": [
      "community.general.consul_policy:",
      "\tname: ${1:}",
      "\t#ca_path: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:localhost}",
      "\t#port: ${5:8500}",
      "\t#rules: ${6:}",
      "\t#scheme: ${7:http}",
      "\t#state: ${8:#present|absent}",
      "\t#token: ${9:}",
      "\t#valid_datacenters: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "consul_role": {
    "prefix": "consul_role",
    "description": "Manipulate Consul roles",
    "body": [
      "community.general.consul_role:",
      "\tname: ${1:}",
      "\t#ca_path: ${2:}",
      "\t#description: ${3:}",
      "\t#host: ${4:localhost}",
      "\t#node_identities: ${5:}",
      "\t#policies: ${6:}",
      "\t#port: ${7:8500}",
      "\t#scheme: ${8:http}",
      "\t#service_identities: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#templated_policies: ${11:}",
      "\t#token: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "consul_session": {
    "prefix": "consul_session",
    "description": "Manipulate consul sessions",
    "body": [
      "community.general.consul_session:",
      "\t#behavior: ${1:delete|#release}",
      "\t#ca_path: ${2:}",
      "\t#checks: ${3:}",
      "\t#datacenter: ${4:}",
      "\t#delay: ${5:15}",
      "\t#host: ${6:localhost}",
      "\t#id: ${7:}",
      "\t#name: ${8:}",
      "\t#node: ${9:}",
      "\t#port: ${10:8500}",
      "\t#scheme: ${11:http}",
      "\t#state: ${12:absent|info|list|node|#present}",
      "\t#token: ${13:}",
      "\t#ttl: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "consul_token": {
    "prefix": "consul_token",
    "description": "Manipulate Consul tokens",
    "body": [
      "community.general.consul_token:",
      "\t#accessor_id: ${1:}",
      "\t#ca_path: ${2:}",
      "\t#description: ${3:}",
      "\t#expiration_ttl: ${4:}",
      "\t#host: ${5:localhost}",
      "\t#local: ${6:}",
      "\t#node_identities: ${7:}",
      "\t#policies: ${8:}",
      "\t#port: ${9:8500}",
      "\t#roles: ${10:}",
      "\t#scheme: ${11:http}",
      "\t#secret_id: ${12:}",
      "\t#service_identities: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#templated_policies: ${15:}",
      "\t#token: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "copr": {
    "prefix": "copr",
    "description": "Manage one of the Copr repositories",
    "body": [
      "community.general.copr:",
      "\tname: ${1:}",
      "\t#chroot: ${2:}",
      "\t#host: ${3:copr.fedorainfracloud.org}",
      "\t#protocol: ${4:https}",
      "\t#state: ${5:absent|#enabled|disabled}"
    ]
  },
  "cpanm": {
    "prefix": "cpanm",
    "description": "Manages Perl library dependencies",
    "body": [
      "community.general.cpanm:",
      "\t#executable: ${1:}",
      "\t#from_path: ${2:}",
      "\t#installdeps: ${3:false}",
      "\t#locallib: ${4:}",
      "\t#mirror: ${5:}",
      "\t#mirror_only: ${6:false}",
      "\t#mode: ${7:compatibility|new}",
      "\t#name: ${8:}",
      "\t#name_check: ${9:}",
      "\t#notest: ${10:false}",
      "\t#version: ${11:}"
    ]
  },
  "cronvar": {
    "prefix": "cronvar",
    "description": "Manage variables in crontabs",
    "body": [
      "community.general.cronvar:",
      "\tname: ${1:}",
      "\t#backup: ${2:false}",
      "\t#cron_file: ${3:}",
      "\t#insertafter: ${4:}",
      "\t#insertbefore: ${5:}",
      "\t#state: ${6:absent|#present}",
      "\t#user: ${7:}",
      "\t#value: ${8:}"
    ]
  },
  "crypttab": {
    "prefix": "crypttab",
    "description": "Encrypted Linux block devices",
    "body": [
      "community.general.crypttab:",
      "\tname: ${1:}",
      "\tstate: ${2:absent|opts_absent|opts_present|present}",
      "\t#backing_device: ${3:}",
      "\t#opts: ${4:}",
      "\t#password: ${5:}",
      "\t#path: ${6:/etc/crypttab}"
    ]
  },
  "datadog_downtime": {
    "prefix": "datadog_downtime",
    "description": "Manages Datadog downtimes",
    "body": [
      "community.general.datadog_downtime:",
      "\tapi_key: ${1:}",
      "\tapp_key: ${2:}",
      "\t#api_host: ${3:https://api.datadoghq.com}",
      "\t#downtime_message: ${4:}",
      "\t#end: ${5:}",
      "\t#id: ${6:}",
      "\t#monitor_id: ${7:}",
      "\t#monitor_tags: ${8:}",
      "\t#rrule: ${9:}",
      "\t#scope: ${10:}",
      "\t#start: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#timezone: ${13:}"
    ]
  },
  "datadog_event": {
    "prefix": "datadog_event",
    "description": "Posts events to Datadog  service",
    "body": [
      "community.general.datadog_event:",
      "\tapi_key: ${1:}",
      "\tapp_key: ${2:}",
      "\ttext: ${3:}",
      "\ttitle: ${4:}",
      "\t#aggregation_key: ${5:}",
      "\t#alert_type: ${6:error|warning|#info|success}",
      "\t#api_host: ${7:}",
      "\t#date_happened: ${8:}",
      "\t#host: ${9:}",
      "\t#priority: ${10:#normal|low}",
      "\t#tags: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "datadog_monitor": {
    "prefix": "datadog_monitor",
    "description": "Manages Datadog monitors",
    "body": [
      "community.general.datadog_monitor:",
      "\tapi_key: ${1:}",
      "\tapp_key: ${2:}",
      "\tname: ${3:}",
      "\tstate: ${4:present|absent|mute|unmute}",
      "\t#api_host: ${5:}",
      "\t#escalation_message: ${6:}",
      "\t#evaluation_delay: ${7:}",
      "\t#id: ${8:}",
      "\t#include_tags: ${9:true}",
      "\t#locked: ${10:false}",
      "\t#new_host_delay: ${11:}",
      "\t#no_data_timeframe: ${12:}",
      "\t#notification_message: ${13:}",
      "\t#notification_preset_name: ${14:show_all|hide_query|hide_handles|hide_all}",
      "\t#notify_audit: ${15:false}",
      "\t#notify_no_data: ${16:false}",
      "\t#priority: ${17:}",
      "\t#query: ${18:}",
      "\t#renotify_interval: ${19:}",
      "\t#renotify_occurrences: ${20:}",
      "\t#renotify_statuses: ${21:alert|warn|no data}",
      "\t#require_full_window: ${22:}",
      "\t#silenced: ${23:}",
      "\t#tags: ${24:}",
      "\t#thresholds: ${25:}",
      "\t#timeout_h: ${26:}",
      "\t#type: ${27:metric alert|service check|event alert|event-v2 alert|process alert|log alert|query alert|trace-analytics alert|rum alert|composite}"
    ]
  },
  "dconf": {
    "prefix": "dconf",
    "description": "Modify and read dconf database",
    "body": [
      "community.general.dconf:",
      "\tkey: ${1:}",
      "\t#state: ${2:read|#present|absent}",
      "\t#value: ${3:}"
    ]
  },
  "deploy_helper": {
    "prefix": "deploy_helper",
    "description": "Manages some of the steps common in deploying projects",
    "body": [
      "community.general.deploy_helper:",
      "\tpath: ${1:}",
      "\t#attributes: ${2:}",
      "\t#clean: ${3:true}",
      "\t#current_path: ${4:current}",
      "\t#group: ${5:}",
      "\t#keep_releases: ${6:5}",
      "\t#mode: ${7:}",
      "\t#owner: ${8:}",
      "\t#release: ${9:}",
      "\t#releases_path: ${10:releases}",
      "\t#selevel: ${11:}",
      "\t#serole: ${12:}",
      "\t#setype: ${13:}",
      "\t#seuser: ${14:}",
      "\t#shared_path: ${15:shared}",
      "\t#state: ${16:#present|finalize|absent|clean|query}",
      "\t#unfinished_filename: ${17:DEPLOY_UNFINISHED}",
      "\t#unsafe_writes: ${18:false}"
    ]
  },
  "dimensiondata_network": {
    "prefix": "dimensiondata_network",
    "description": "Create, update, and delete MCP 1.0 & 2.0 networks",
    "body": [
      "community.general.dimensiondata_network:",
      "\tlocation: ${1:}",
      "\tname: ${2:}",
      "\t#description: ${3:}",
      "\t#mcp_password: ${4:}",
      "\t#mcp_user: ${5:}",
      "\t#region: ${6:na}",
      "\t#service_plan: ${7:#ESSENTIALS|ADVANCED}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:true}",
      "\t#wait: ${10:false}",
      "\t#wait_poll_interval: ${11:2}",
      "\t#wait_time: ${12:600}"
    ]
  },
  "dimensiondata_vlan": {
    "prefix": "dimensiondata_vlan",
    "description": "Manage a VLAN in a Cloud Control network domain",
    "body": [
      "community.general.dimensiondata_vlan:",
      "\tlocation: ${1:}",
      "\tname: ${2:}",
      "\tnetwork_domain: ${3:}",
      "\t#allow_expand: ${4:false}",
      "\t#description: ${5:\"\"}",
      "\t#mcp_password: ${6:}",
      "\t#mcp_user: ${7:}",
      "\t#private_ipv4_base_address: ${8:\"\"}",
      "\t#private_ipv4_prefix_size: ${9:0}",
      "\t#region: ${10:na}",
      "\t#state: ${11:#present|absent|readonly}",
      "\t#validate_certs: ${12:true}",
      "\t#wait: ${13:false}",
      "\t#wait_poll_interval: ${14:2}",
      "\t#wait_time: ${15:600}"
    ]
  },
  "discord": {
    "prefix": "discord",
    "description": "Send Discord messages",
    "body": [
      "community.general.discord:",
      "\twebhook_id: ${1:}",
      "\twebhook_token: ${2:}",
      "\t#avatar_url: ${3:}",
      "\t#content: ${4:}",
      "\t#embeds: ${5:}",
      "\t#tts: ${6:false}",
      "\t#username: ${7:}"
    ]
  },
  "django_manage": {
    "prefix": "django_manage",
    "description": "Manages a Django application",
    "body": [
      "community.general.django_manage:",
      "\tcommand: ${1:}",
      "\tproject_path: ${2:}",
      "\t#ack_venv_creation_deprecation: ${3:}",
      "\t#apps: ${4:}",
      "\t#cache_table: ${5:}",
      "\t#clear: ${6:false}",
      "\t#database: ${7:}",
      "\t#failfast: ${8:false}",
      "\t#fixtures: ${9:}",
      "\t#link: ${10:}",
      "\t#merge: ${11:}",
      "\t#pythonpath: ${12:}",
      "\t#settings: ${13:}",
      "\t#skip: ${14:}",
      "\t#testrunner: ${15:}",
      "\t#virtualenv: ${16:}"
    ]
  },
  "dnf_config_manager": {
    "prefix": "dnf_config_manager",
    "description": "Enable or disable dnf repositories using config-manager",
    "body": [
      "community.general.dnf_config_manager:",
      "\t#name: ${1:[]}",
      "\t#state: ${2:#enabled|disabled}"
    ]
  },
  "dnf_versionlock": {
    "prefix": "dnf_versionlock",
    "description": "Locks package versions in C(dnf) based systems",
    "body": [
      "community.general.dnf_versionlock:",
      "\t#name: ${1:[]}",
      "\t#raw: ${2:false}",
      "\t#state: ${3:absent|clean|excluded|#present}"
    ]
  },
  "dnsimple": {
    "prefix": "dnsimple",
    "description": "Interface with dnsimple.com (a DNS hosting service)",
    "body": [
      "community.general.dnsimple:",
      "\t#account_api_token: ${1:}",
      "\t#account_email: ${2:}",
      "\t#domain: ${3:}",
      "\t#priority: ${4:}",
      "\t#record: ${5:}",
      "\t#record_ids: ${6:}",
      "\t#sandbox: ${7:false}",
      "\t#solo: ${8:false}",
      "\t#state: ${9:#present|absent}",
      "\t#ttl: ${10:3600}",
      "\t#type: ${11:A|ALIAS|CNAME|MX|SPF|URL|TXT|NS|SRV|NAPTR|PTR|AAAA|SSHFP|HINFO|POOL|CAA}",
      "\t#value: ${12:}"
    ]
  },
  "dnsimple_info": {
    "prefix": "dnsimple_info",
    "description": "Pull basic info from DNSimple API",
    "body": [
      "community.general.dnsimple_info:",
      "\taccount_id: ${1:}",
      "\tapi_key: ${2:}",
      "\t#name: ${3:}",
      "\t#record: ${4:}",
      "\t#sandbox: ${5:false}"
    ]
  },
  "dnsmadeeasy": {
    "prefix": "dnsmadeeasy",
    "description": "Interface with dnsmadeeasy.com (a DNS hosting service)",
    "body": [
      "community.general.dnsmadeeasy:",
      "\taccount_key: ${1:}",
      "\taccount_secret: ${2:}",
      "\tdomain: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#autoFailover: ${5:false}",
      "\t#contactList: ${6:}",
      "\t#failover: ${7:false}",
      "\t#httpFile: ${8:}",
      "\t#httpFqdn: ${9:}",
      "\t#httpQueryString: ${10:}",
      "\t#ip1: ${11:}",
      "\t#ip2: ${12:}",
      "\t#ip3: ${13:}",
      "\t#ip4: ${14:}",
      "\t#ip5: ${15:}",
      "\t#maxEmails: ${16:1}",
      "\t#monitor: ${17:false}",
      "\t#port: ${18:80}",
      "\t#protocol: ${19:TCP|UDP|#HTTP|DNS|SMTP|HTTPS}",
      "\t#record_name: ${20:}",
      "\t#record_ttl: ${21:1800}",
      "\t#record_type: ${22:A|AAAA|CNAME|ANAME|HTTPRED|MX|NS|PTR|SRV|TXT}",
      "\t#record_value: ${23:}",
      "\t#sandbox: ${24:false}",
      "\t#sensitivity: ${25:Low|#Medium|High}",
      "\t#systemDescription: ${26:\"\"}",
      "\t#validate_certs: ${27:true}"
    ]
  },
  "dpkg_divert": {
    "prefix": "dpkg_divert",
    "description": "Override a debian package's version of a file",
    "body": [
      "community.general.dpkg_divert:",
      "\tpath: ${1:}",
      "\t#divert: ${2:}",
      "\t#force: ${3:false}",
      "\t#holder: ${4:}",
      "\t#rename: ${5:false}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "easy_install": {
    "prefix": "easy_install",
    "description": "Installs Python libraries",
    "body": [
      "community.general.easy_install:",
      "\tname: ${1:}",
      "\t#executable: ${2:easy_install}",
      "\t#state: ${3:#present|latest}",
      "\t#virtualenv: ${4:}",
      "\t#virtualenv_command: ${5:virtualenv}",
      "\t#virtualenv_site_packages: ${6:false}"
    ]
  },
  "ejabberd_user": {
    "prefix": "ejabberd_user",
    "description": "Manages users for ejabberd servers",
    "body": [
      "community.general.ejabberd_user:",
      "\thost: ${1:}",
      "\tusername: ${2:}",
      "\t#logging: ${3:false}",
      "\t#password: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "elasticsearch_plugin": {
    "prefix": "elasticsearch_plugin",
    "description": "Manage Elasticsearch plugins",
    "body": [
      "community.general.elasticsearch_plugin:",
      "\tname: ${1:}",
      "\t#force: ${2:false}",
      "\t#plugin_bin: ${3:}",
      "\t#plugin_dir: ${4:/usr/share/elasticsearch/plugins/}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#src: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:1m}",
      "\t#url: ${10:}",
      "\t#version: ${11:}"
    ]
  },
  "emc_vnx_sg_member": {
    "prefix": "emc_vnx_sg_member",
    "description": "Manage storage group member on EMC VNX",
    "body": [
      "community.general.emc_vnx_sg_member:",
      "\tlunid: ${1:}",
      "\tname: ${2:}",
      "\tsp_address: ${3:}",
      "\t#sp_password: ${4:sysadmin}",
      "\t#sp_user: ${5:sysadmin}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "etcd3": {
    "prefix": "etcd3",
    "description": "Set or delete key value pairs from an etcd3 cluster",
    "body": [
      "community.general.etcd3:",
      "\tkey: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvalue: ${3:}",
      "\t#ca_cert: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#host: ${7:localhost}",
      "\t#password: ${8:}",
      "\t#port: ${9:2379}",
      "\t#timeout: ${10:}",
      "\t#user: ${11:}"
    ]
  },
  "facter": {
    "prefix": "facter",
    "description": "Runs the discovery program C(facter) on the remote system",
    "body": [
      "community.general.facter:",
      "\t#arguments: ${1:}"
    ]
  },
  "facter_facts": {
    "prefix": "facter_facts",
    "description": "Runs the discovery program C(facter) on the remote system and return Ansible facts",
    "body": [
      "community.general.facter_facts:",
      "\t#arguments: ${1:}"
    ]
  },
  "filesize": {
    "prefix": "filesize",
    "description": "Create a file with a given size, or resize it if it exists",
    "body": [
      "community.general.filesize:",
      "\tpath: ${1:}",
      "\tsize: ${2:}",
      "\t#attributes: ${3:}",
      "\t#blocksize: ${4:}",
      "\t#force: ${5:false}",
      "\t#group: ${6:}",
      "\t#mode: ${7:}",
      "\t#owner: ${8:}",
      "\t#selevel: ${9:}",
      "\t#serole: ${10:}",
      "\t#setype: ${11:}",
      "\t#seuser: ${12:}",
      "\t#source: ${13:/dev/zero}",
      "\t#sparse: ${14:false}",
      "\t#unsafe_writes: ${15:false}"
    ]
  },
  "filesystem": {
    "prefix": "filesystem",
    "description": "Makes a filesystem",
    "body": [
      "community.general.filesystem:",
      "\tdev: ${1:}",
      "\t#force: ${2:false}",
      "\t#fstype: ${3:btrfs|ext2|ext3|ext4|ext4dev|f2fs|lvm|ocfs2|reiserfs|xfs|vfat|swap|ufs}",
      "\t#opts: ${4:}",
      "\t#resizefs: ${5:false}",
      "\t#state: ${6:#present|absent}",
      "\t#uuid: ${7:}"
    ]
  },
  "flatpak": {
    "prefix": "flatpak",
    "description": "Manage flatpaks",
    "body": [
      "community.general.flatpak:",
      "\tname: ${1:}",
      "\t#executable: ${2:flatpak}",
      "\t#method: ${3:#system|user}",
      "\t#no_dependencies: ${4:false}",
      "\t#remote: ${5:flathub}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "flatpak_remote": {
    "prefix": "flatpak_remote",
    "description": "Manage flatpak repository remotes",
    "body": [
      "community.general.flatpak_remote:",
      "\tname: ${1:}",
      "\t#enabled: ${2:true}",
      "\t#executable: ${3:flatpak}",
      "\t#flatpakrepo_url: ${4:}",
      "\t#method: ${5:#system|user}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "gandi_livedns": {
    "prefix": "gandi_livedns",
    "description": "Manage Gandi LiveDNS records",
    "body": [
      "community.general.gandi_livedns:",
      "\tapi_key: ${1:}",
      "\tdomain: ${2:}",
      "\trecord: ${3:}",
      "\ttype: ${4:}",
      "\t#state: ${5:absent|#present}",
      "\t#ttl: ${6:}",
      "\t#values: ${7:}"
    ]
  },
  "gconftool2": {
    "prefix": "gconftool2",
    "description": "Edit GNOME Configurations",
    "body": [
      "community.general.gconftool2:",
      "\tkey: ${1:}",
      "\tstate: ${2:absent|present}",
      "\t#config_source: ${3:}",
      "\t#direct: ${4:false}",
      "\t#value: ${5:}",
      "\t#value_type: ${6:bool|float|int|string}"
    ]
  },
  "gconftool2_info": {
    "prefix": "gconftool2_info",
    "description": "Retrieve GConf configurations",
    "body": [
      "community.general.gconftool2_info:",
      "\tkey: ${1:}"
    ]
  },
  "gem": {
    "prefix": "gem",
    "description": "Manage Ruby gems",
    "body": [
      "community.general.gem:",
      "\tname: ${1:}",
      "\t#bindir: ${2:}",
      "\t#build_flags: ${3:}",
      "\t#env_shebang: ${4:false}",
      "\t#executable: ${5:}",
      "\t#force: ${6:false}",
      "\t#gem_source: ${7:}",
      "\t#include_dependencies: ${8:true}",
      "\t#include_doc: ${9:false}",
      "\t#install_dir: ${10:}",
      "\t#norc: ${11:true}",
      "\t#pre_release: ${12:false}",
      "\t#repository: ${13:}",
      "\t#state: ${14:#present|absent|latest}",
      "\t#user_install: ${15:true}",
      "\t#version: ${16:}"
    ]
  },
  "gio_mime": {
    "prefix": "gio_mime",
    "description": "Set default handler for MIME type, for applications using Gnome GIO",
    "body": [
      "community.general.gio_mime:",
      "\thandler: ${1:}",
      "\tmime_type: ${2:}"
    ]
  },
  "git_config": {
    "prefix": "git_config",
    "description": "Read and write git configuration",
    "body": [
      "community.general.git_config:",
      "\t#add_mode: ${1:add|#replace-all}",
      "\t#file: ${2:}",
      "\t#list_all: ${3:false}",
      "\t#name: ${4:}",
      "\t#repo: ${5:}",
      "\t#scope: ${6:file|local|global|system}",
      "\t#state: ${7:#present|absent}",
      "\t#value: ${8:}"
    ]
  },
  "git_config_info": {
    "prefix": "git_config_info",
    "description": "Read git configuration",
    "body": [
      "community.general.git_config_info:",
      "\t#name: ${1:}",
      "\t#path: ${2:}",
      "\t#scope: ${3:global|#system|local|file}"
    ]
  },
  "github_deploy_key": {
    "prefix": "github_deploy_key",
    "description": "Manages deploy keys for GitHub repositories",
    "body": [
      "community.general.github_deploy_key:",
      "\tkey: ${1:}",
      "\tname: ${2:}",
      "\towner: ${3:}",
      "\trepo: ${4:}",
      "\t#force: ${5:false}",
      "\t#github_url: ${6:https://api.github.com}",
      "\t#otp: ${7:}",
      "\t#password: ${8:}",
      "\t#read_only: ${9:true}",
      "\t#state: ${10:#present|absent}",
      "\t#token: ${11:}",
      "\t#username: ${12:}"
    ]
  },
  "github_issue": {
    "prefix": "github_issue",
    "description": "View GitHub issue",
    "body": [
      "community.general.github_issue:",
      "\tissue: ${1:}",
      "\torganization: ${2:}",
      "\trepo: ${3:}",
      "\t#action: ${4:#get_status}"
    ]
  },
  "github_key": {
    "prefix": "github_key",
    "description": "Manage GitHub access keys",
    "body": [
      "community.general.github_key:",
      "\tname: ${1:}",
      "\ttoken: ${2:}",
      "\t#force: ${3:true}",
      "\t#pubkey: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "github_release": {
    "prefix": "github_release",
    "description": "Interact with GitHub Releases",
    "body": [
      "community.general.github_release:",
      "\taction: ${1:latest_release|create_release}",
      "\trepo: ${2:}",
      "\tuser: ${3:}",
      "\t#body: ${4:}",
      "\t#draft: ${5:false}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#prerelease: ${8:false}",
      "\t#tag: ${9:}",
      "\t#target: ${10:}",
      "\t#token: ${11:}"
    ]
  },
  "github_repo": {
    "prefix": "github_repo",
    "description": "Manage your repositories on Github",
    "body": [
      "community.general.github_repo:",
      "\tname: ${1:}",
      "\t#access_token: ${2:}",
      "\t#api_url: ${3:https://api.github.com}",
      "\t#description: ${4:}",
      "\t#force_defaults: ${5:true}",
      "\t#organization: ${6:}",
      "\t#password: ${7:}",
      "\t#private: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#username: ${10:}"
    ]
  },
  "github_webhook": {
    "prefix": "github_webhook",
    "description": "Manage GitHub webhooks",
    "body": [
      "community.general.github_webhook:",
      "\trepository: ${1:}",
      "\turl: ${2:}",
      "\tuser: ${3:}",
      "\t#active: ${4:true}",
      "\t#content_type: ${5:#form|json}",
      "\t#events: ${6:}",
      "\t#github_url: ${7:https://api.github.com}",
      "\t#insecure_ssl: ${8:false}",
      "\t#password: ${9:}",
      "\t#secret: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#token: ${12:}"
    ]
  },
  "github_webhook_info": {
    "prefix": "github_webhook_info",
    "description": "Query information about GitHub webhooks",
    "body": [
      "community.general.github_webhook_info:",
      "\trepository: ${1:}",
      "\tuser: ${2:}",
      "\t#github_url: ${3:https://api.github.com}",
      "\t#password: ${4:}",
      "\t#token: ${5:}"
    ]
  },
  "gitlab_branch": {
    "prefix": "gitlab_branch",
    "description": "Create or delete a branch",
    "body": [
      "community.general.gitlab_branch:",
      "\tbranch: ${1:}",
      "\tproject: ${2:}",
      "\t#api_job_token: ${3:}",
      "\t#api_oauth_token: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token: ${6:}",
      "\t#api_url: ${7:}",
      "\t#api_username: ${8:}",
      "\t#ca_path: ${9:}",
      "\t#ref_branch: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "gitlab_deploy_key": {
    "prefix": "gitlab_deploy_key",
    "description": "Manages GitLab project deploy keys",
    "body": [
      "community.general.gitlab_deploy_key:",
      "\tkey: ${1:}",
      "\tproject: ${2:}",
      "\ttitle: ${3:}",
      "\t#api_job_token: ${4:}",
      "\t#api_oauth_token: ${5:}",
      "\t#api_password: ${6:}",
      "\t#api_token: ${7:}",
      "\t#api_url: ${8:}",
      "\t#api_username: ${9:}",
      "\t#ca_path: ${10:}",
      "\t#can_push: ${11:false}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "gitlab_group": {
    "prefix": "gitlab_group",
    "description": "Creates/updates/deletes GitLab Groups",
    "body": [
      "community.general.gitlab_group:",
      "\tname: ${1:}",
      "\t#api_job_token: ${2:}",
      "\t#api_oauth_token: ${3:}",
      "\t#api_password: ${4:}",
      "\t#api_token: ${5:}",
      "\t#api_url: ${6:}",
      "\t#api_username: ${7:}",
      "\t#auto_devops_enabled: ${8:}",
      "\t#avatar_path: ${9:}",
      "\t#ca_path: ${10:}",
      "\t#description: ${11:}",
      "\t#force_delete: ${12:false}",
      "\t#parent: ${13:}",
      "\t#path: ${14:}",
      "\t#project_creation_level: ${15:developer|maintainer|noone}",
      "\t#require_two_factor_authentication: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#subgroup_creation_level: ${18:maintainer|owner}",
      "\t#validate_certs: ${19:true}",
      "\t#visibility: ${20:#private|internal|public}"
    ]
  },
  "gitlab_group_members": {
    "prefix": "gitlab_group_members",
    "description": "Manage group members on GitLab Server",
    "body": [
      "community.general.gitlab_group_members:",
      "\tgitlab_group: ${1:}",
      "\t#access_level: ${2:guest|reporter|developer|maintainer|owner}",
      "\t#api_job_token: ${3:}",
      "\t#api_oauth_token: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token: ${6:}",
      "\t#api_url: ${7:}",
      "\t#api_username: ${8:}",
      "\t#ca_path: ${9:}",
      "\t#gitlab_user: ${10:}",
      "\t#gitlab_users_access: ${11:}",
      "\t#purge_users: ${12:guest|reporter|developer|maintainer|owner}",
      "\t#state: ${13:#present|absent}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "gitlab_group_variable": {
    "prefix": "gitlab_group_variable",
    "description": "Creates, updates, or deletes GitLab groups variables",
    "body": [
      "community.general.gitlab_group_variable:",
      "\tgroup: ${1:}",
      "\t#api_job_token: ${2:}",
      "\t#api_oauth_token: ${3:}",
      "\t#api_password: ${4:}",
      "\t#api_token: ${5:}",
      "\t#api_url: ${6:}",
      "\t#api_username: ${7:}",
      "\t#ca_path: ${8:}",
      "\t#purge: ${9:false}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}",
      "\t#variables: ${12:[]}",
      "\t#vars: ${13:{\\}}"
    ]
  },
  "gitlab_hook": {
    "prefix": "gitlab_hook",
    "description": "Manages GitLab project hooks",
    "body": [
      "community.general.gitlab_hook:",
      "\thook_url: ${1:}",
      "\tproject: ${2:}",
      "\t#api_job_token: ${3:}",
      "\t#api_oauth_token: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token: ${6:}",
      "\t#api_url: ${7:}",
      "\t#api_username: ${8:}",
      "\t#ca_path: ${9:}",
      "\t#hook_validate_certs: ${10:false}",
      "\t#issues_events: ${11:false}",
      "\t#job_events: ${12:false}",
      "\t#merge_requests_events: ${13:false}",
      "\t#note_events: ${14:false}",
      "\t#pipeline_events: ${15:false}",
      "\t#push_events: ${16:true}",
      "\t#push_events_branch_filter: ${17:\"\"}",
      "\t#state: ${18:#present|absent}",
      "\t#tag_push_events: ${19:false}",
      "\t#token: ${20:}",
      "\t#validate_certs: ${21:true}",
      "\t#wiki_page_events: ${22:false}"
    ]
  },
  "gitlab_instance_variable": {
    "prefix": "gitlab_instance_variable",
    "description": "Creates, updates, or deletes GitLab instance variables",
    "body": [
      "community.general.gitlab_instance_variable:",
      "\t#api_job_token: ${1:}",
      "\t#api_oauth_token: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token: ${4:}",
      "\t#api_url: ${5:}",
      "\t#api_username: ${6:}",
      "\t#ca_path: ${7:}",
      "\t#purge: ${8:false}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}",
      "\t#variables: ${11:[]}"
    ]
  },
  "gitlab_issue": {
    "prefix": "gitlab_issue",
    "description": "Create, update, or delete GitLab issues",
    "body": [
      "community.general.gitlab_issue:",
      "\tproject: ${1:}",
      "\ttitle: ${2:}",
      "\t#api_job_token: ${3:}",
      "\t#api_oauth_token: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token: ${6:}",
      "\t#api_url: ${7:}",
      "\t#api_username: ${8:}",
      "\t#assignee_ids: ${9:}",
      "\t#ca_path: ${10:}",
      "\t#description: ${11:}",
      "\t#description_path: ${12:}",
      "\t#issue_type: ${13:#issue|incident|test_case}",
      "\t#labels: ${14:}",
      "\t#milestone_group_id: ${15:}",
      "\t#milestone_search: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#state_filter: ${18:#opened|closed}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "gitlab_label": {
    "prefix": "gitlab_label",
    "description": "Creates/updates/deletes GitLab Labels belonging to project or group.",
    "body": [
      "community.general.gitlab_label:",
      "\t#api_job_token: ${1:}",
      "\t#api_oauth_token: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token: ${4:}",
      "\t#api_url: ${5:}",
      "\t#api_username: ${6:}",
      "\t#ca_path: ${7:}",
      "\t#group: ${8:}",
      "\t#labels: ${9:[]}",
      "\t#project: ${10:}",
      "\t#purge: ${11:false}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "gitlab_merge_request": {
    "prefix": "gitlab_merge_request",
    "description": "Create, update, or delete GitLab merge requests",
    "body": [
      "community.general.gitlab_merge_request:",
      "\tproject: ${1:}",
      "\tsource_branch: ${2:}",
      "\ttarget_branch: ${3:}",
      "\ttitle: ${4:}",
      "\t#api_job_token: ${5:}",
      "\t#api_oauth_token: ${6:}",
      "\t#api_password: ${7:}",
      "\t#api_token: ${8:}",
      "\t#api_url: ${9:}",
      "\t#api_username: ${10:}",
      "\t#assignee_ids: ${11:}",
      "\t#ca_path: ${12:}",
      "\t#description: ${13:}",
      "\t#description_path: ${14:}",
      "\t#labels: ${15:\"\"}",
      "\t#remove_source_branch: ${16:false}",
      "\t#reviewer_ids: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#state_filter: ${19:#opened|closed|locked|merged}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "gitlab_milestone": {
    "prefix": "gitlab_milestone",
    "description": "Creates/updates/deletes GitLab Milestones belonging to project or group",
    "body": [
      "community.general.gitlab_milestone:",
      "\t#api_job_token: ${1:}",
      "\t#api_oauth_token: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token: ${4:}",
      "\t#api_url: ${5:}",
      "\t#api_username: ${6:}",
      "\t#ca_path: ${7:}",
      "\t#group: ${8:}",
      "\t#milestones: ${9:[]}",
      "\t#project: ${10:}",
      "\t#purge: ${11:false}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "gitlab_project": {
    "prefix": "gitlab_project",
    "description": "Creates/updates/deletes GitLab Projects",
    "body": [
      "community.general.gitlab_project:",
      "\tname: ${1:}",
      "\t#allow_merge_on_skipped_pipeline: ${2:}",
      "\t#api_job_token: ${3:}",
      "\t#api_oauth_token: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token: ${6:}",
      "\t#api_url: ${7:}",
      "\t#api_username: ${8:}",
      "\t#avatar_path: ${9:}",
      "\t#builds_access_level: ${10:private|disabled|enabled}",
      "\t#ca_path: ${11:}",
      "\t#ci_config_path: ${12:}",
      "\t#container_registry_access_level: ${13:private|disabled|enabled}",
      "\t#default_branch: ${14:}",
      "\t#description: ${15:}",
      "\t#environments_access_level: ${16:private|disabled|enabled}",
      "\t#feature_flags_access_level: ${17:private|disabled|enabled}",
      "\t#forking_access_level: ${18:private|disabled|enabled}",
      "\t#group: ${19:}",
      "\t#import_url: ${20:}",
      "\t#infrastructure_access_level: ${21:private|disabled|enabled}",
      "\t#initialize_with_readme: ${22:false}",
      "\t#issues_enabled: ${23:true}",
      "\t#lfs_enabled: ${24:false}",
      "\t#merge_method: ${25:ff|#merge|rebase_merge}",
      "\t#merge_requests_enabled: ${26:true}",
      "\t#monitor_access_level: ${27:private|disabled|enabled}",
      "\t#only_allow_merge_if_all_discussions_are_resolved: ${28:}",
      "\t#only_allow_merge_if_pipeline_succeeds: ${29:}",
      "\t#packages_enabled: ${30:}",
      "\t#path: ${31:}",
      "\t#releases_access_level: ${32:private|disabled|enabled}",
      "\t#remove_source_branch_after_merge: ${33:}",
      "\t#security_and_compliance_access_level: ${34:private|disabled|enabled}",
      "\t#shared_runners_enabled: ${35:}",
      "\t#snippets_enabled: ${36:true}",
      "\t#squash_option: ${37:never|always|default_off|default_on}",
      "\t#state: ${38:#present|absent}",
      "\t#topics: ${39:}",
      "\t#username: ${40:}",
      "\t#validate_certs: ${41:true}",
      "\t#visibility: ${42:#private|internal|public}",
      "\t#wiki_enabled: ${43:true}"
    ]
  },
  "gitlab_project_badge": {
    "prefix": "gitlab_project_badge",
    "description": "Manage project badges on GitLab Server",
    "body": [
      "community.general.gitlab_project_badge:",
      "\timage_url: ${1:}",
      "\tlink_url: ${2:}",
      "\tproject: ${3:}",
      "\t#api_job_token: ${4:}",
      "\t#api_oauth_token: ${5:}",
      "\t#api_password: ${6:}",
      "\t#api_token: ${7:}",
      "\t#api_url: ${8:}",
      "\t#api_username: ${9:}",
      "\t#ca_path: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "gitlab_project_members": {
    "prefix": "gitlab_project_members",
    "description": "Manage project members on GitLab Server",
    "body": [
      "community.general.gitlab_project_members:",
      "\tproject: ${1:}",
      "\t#access_level: ${2:guest|reporter|developer|maintainer}",
      "\t#api_job_token: ${3:}",
      "\t#api_oauth_token: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token: ${6:}",
      "\t#api_url: ${7:}",
      "\t#api_username: ${8:}",
      "\t#ca_path: ${9:}",
      "\t#gitlab_user: ${10:}",
      "\t#gitlab_users_access: ${11:}",
      "\t#purge_users: ${12:guest|reporter|developer|maintainer}",
      "\t#state: ${13:#present|absent}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "gitlab_project_variable": {
    "prefix": "gitlab_project_variable",
    "description": "Creates/updates/deletes GitLab Projects Variables",
    "body": [
      "community.general.gitlab_project_variable:",
      "\tproject: ${1:}",
      "\t#api_job_token: ${2:}",
      "\t#api_oauth_token: ${3:}",
      "\t#api_password: ${4:}",
      "\t#api_token: ${5:}",
      "\t#api_url: ${6:}",
      "\t#api_username: ${7:}",
      "\t#ca_path: ${8:}",
      "\t#purge: ${9:false}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}",
      "\t#variables: ${12:[]}",
      "\t#vars: ${13:{\\}}"
    ]
  },
  "gitlab_protected_branch": {
    "prefix": "gitlab_protected_branch",
    "description": "Manage protection of existing branches",
    "body": [
      "community.general.gitlab_protected_branch:",
      "\tname: ${1:}",
      "\tproject: ${2:}",
      "\t#api_job_token: ${3:}",
      "\t#api_oauth_token: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token: ${6:}",
      "\t#api_url: ${7:}",
      "\t#api_username: ${8:}",
      "\t#ca_path: ${9:}",
      "\t#merge_access_levels: ${10:#maintainer|developer|nobody}",
      "\t#push_access_level: ${11:#maintainer|developer|nobody}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "gitlab_runner": {
    "prefix": "gitlab_runner",
    "description": "Create, modify and delete GitLab Runners",
    "body": [
      "community.general.gitlab_runner:",
      "\tdescription: ${1:}",
      "\t#access_level: ${2:not_protected|ref_protected}",
      "\t#access_level_on_creation: ${3:true}",
      "\t#active: ${4:true}",
      "\t#api_job_token: ${5:}",
      "\t#api_oauth_token: ${6:}",
      "\t#api_password: ${7:}",
      "\t#api_token: ${8:}",
      "\t#api_url: ${9:}",
      "\t#api_username: ${10:}",
      "\t#ca_path: ${11:}",
      "\t#group: ${12:}",
      "\t#locked: ${13:false}",
      "\t#maximum_timeout: ${14:3600}",
      "\t#owned: ${15:false}",
      "\t#paused: ${16:false}",
      "\t#project: ${17:}",
      "\t#registration_token: ${18:}",
      "\t#run_untagged: ${19:true}",
      "\t#state: ${20:#present|absent}",
      "\t#tag_list: ${21:[]}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "gitlab_user": {
    "prefix": "gitlab_user",
    "description": "Creates/updates/deletes/blocks/unblocks GitLab Users",
    "body": [
      "community.general.gitlab_user:",
      "\tusername: ${1:}",
      "\t#access_level: ${2:#guest|reporter|developer|master|maintainer|owner}",
      "\t#api_job_token: ${3:}",
      "\t#api_oauth_token: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token: ${6:}",
      "\t#api_url: ${7:}",
      "\t#api_username: ${8:}",
      "\t#ca_path: ${9:}",
      "\t#confirm: ${10:true}",
      "\t#email: ${11:}",
      "\t#external: ${12:false}",
      "\t#group: ${13:}",
      "\t#identities: ${14:}",
      "\t#isadmin: ${15:false}",
      "\t#name: ${16:}",
      "\t#overwrite_identities: ${17:false}",
      "\t#password: ${18:}",
      "\t#reset_password: ${19:false}",
      "\t#sshkey_expires_at: ${20:}",
      "\t#sshkey_file: ${21:}",
      "\t#sshkey_name: ${22:}",
      "\t#state: ${23:#present|absent|blocked|unblocked}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "grove": {
    "prefix": "grove",
    "description": "Sends a notification to a grove.io channel",
    "body": [
      "community.general.grove:",
      "\tchannel_token: ${1:}",
      "\tmessage_content: ${2:}",
      "\t#icon_url: ${3:}",
      "\t#service: ${4:ansible}",
      "\t#url: ${5:}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "gunicorn": {
    "prefix": "gunicorn",
    "description": "Run gunicorn with various settings",
    "body": [
      "community.general.gunicorn:",
      "\tapp: ${1:}",
      "\t#chdir: ${2:}",
      "\t#config: ${3:}",
      "\t#pid: ${4:}",
      "\t#user: ${5:}",
      "\t#venv: ${6:}",
      "\t#worker: ${7:sync|eventlet|gevent|tornado |gthread|gaiohttp}"
    ]
  },
  "haproxy": {
    "prefix": "haproxy",
    "description": "Enable, disable, and set weights for HAProxy backend servers using socket commands",
    "body": [
      "community.general.haproxy:",
      "\thost: ${1:}",
      "\tstate: ${2:disabled|drain|enabled}",
      "\t#agent: ${3:false}",
      "\t#backend: ${4:}",
      "\t#drain: ${5:false}",
      "\t#fail_on_not_found: ${6:false}",
      "\t#health: ${7:false}",
      "\t#shutdown_sessions: ${8:false}",
      "\t#socket: ${9:/var/run/haproxy.sock}",
      "\t#wait: ${10:false}",
      "\t#wait_interval: ${11:5}",
      "\t#wait_retries: ${12:25}",
      "\t#weight: ${13:}"
    ]
  },
  "heroku_collaborator": {
    "prefix": "heroku_collaborator",
    "description": "Add or delete app collaborators on Heroku",
    "body": [
      "community.general.heroku_collaborator:",
      "\tapps: ${1:}",
      "\tuser: ${2:}",
      "\t#api_key: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#suppress_invitation: ${5:false}"
    ]
  },
  "hg": {
    "prefix": "hg",
    "description": "Manages Mercurial (hg) repositories",
    "body": [
      "community.general.hg:",
      "\trepo: ${1:}",
      "\t#clone: ${2:true}",
      "\t#dest: ${3:}",
      "\t#executable: ${4:}",
      "\t#force: ${5:false}",
      "\t#purge: ${6:false}",
      "\t#revision: ${7:}",
      "\t#update: ${8:true}"
    ]
  },
  "hipchat": {
    "prefix": "hipchat",
    "description": "Send a message to Hipchat",
    "body": [
      "community.general.hipchat:",
      "\tmsg: ${1:}",
      "\troom: ${2:}",
      "\ttoken: ${3:}",
      "\t#api: ${4:https://api.hipchat.com/v1}",
      "\t#color: ${5:#yellow|red|green|purple|gray|random}",
      "\t#msg_format: ${6:#text|html}",
      "\t#msg_from: ${7:Ansible}",
      "\t#notify: ${8:true}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "homebrew": {
    "prefix": "homebrew",
    "description": "Package manager for Homebrew",
    "body": [
      "community.general.homebrew:",
      "\t#install_options: ${1:}",
      "\t#name: ${2:}",
      "\t#path: ${3:/usr/local/bin:/opt/homebrew/bin:/home/linuxbrew/.linuxbrew/bin}",
      "\t#state: ${4:absent|head|installed|latest|linked|#present|removed|uninstalled|unlinked|upgraded}",
      "\t#update_homebrew: ${5:false}",
      "\t#upgrade_all: ${6:false}",
      "\t#upgrade_options: ${7:}"
    ]
  },
  "homebrew_cask": {
    "prefix": "homebrew_cask",
    "description": "Install and uninstall homebrew casks",
    "body": [
      "community.general.homebrew_cask:",
      "\t#accept_external_apps: ${1:false}",
      "\t#greedy: ${2:false}",
      "\t#install_options: ${3:}",
      "\t#name: ${4:}",
      "\t#path: ${5:/usr/local/bin:/opt/homebrew/bin}",
      "\t#state: ${6:absent|installed|latest|#present|removed|uninstalled|upgraded}",
      "\t#sudo_password: ${7:}",
      "\t#update_homebrew: ${8:false}",
      "\t#upgrade_all: ${9:false}"
    ]
  },
  "homebrew_tap": {
    "prefix": "homebrew_tap",
    "description": "Tap a Homebrew repository",
    "body": [
      "community.general.homebrew_tap:",
      "\tname: ${1:}",
      "\t#path: ${2:/usr/local/bin:/opt/homebrew/bin:/home/linuxbrew/.linuxbrew/bin}",
      "\t#state: ${3:#present|absent}",
      "\t#url: ${4:}"
    ]
  },
  "homectl": {
    "prefix": "homectl",
    "description": "Manage user accounts with systemd-homed",
    "body": [
      "community.general.homectl:",
      "\tname: ${1:}",
      "\t#disksize: ${2:}",
      "\t#email: ${3:}",
      "\t#environment: ${4:}",
      "\t#gid: ${5:}",
      "\t#homedir: ${6:}",
      "\t#iconname: ${7:}",
      "\t#imagepath: ${8:}",
      "\t#language: ${9:}",
      "\t#location: ${10:}",
      "\t#locked: ${11:}",
      "\t#memberof: ${12:}",
      "\t#mountopts: ${13:}",
      "\t#notafter: ${14:}",
      "\t#notbefore: ${15:}",
      "\t#password: ${16:}",
      "\t#passwordhint: ${17:}",
      "\t#realm: ${18:}",
      "\t#realname: ${19:}",
      "\t#resize: ${20:false}",
      "\t#shell: ${21:}",
      "\t#skeleton: ${22:}",
      "\t#sshkeys: ${23:}",
      "\t#state: ${24:absent|#present}",
      "\t#storage: ${25:classic|luks|directory|subvolume|fscrypt|cifs}",
      "\t#timezone: ${26:}",
      "\t#uid: ${27:}",
      "\t#umask: ${28:}"
    ]
  },
  "honeybadger_deployment": {
    "prefix": "honeybadger_deployment",
    "description": "Notify Honeybadger.io about app deployments",
    "body": [
      "community.general.honeybadger_deployment:",
      "\tenvironment: ${1:}",
      "\ttoken: ${2:}",
      "\t#repo: ${3:}",
      "\t#revision: ${4:}",
      "\t#url: ${5:https://api.honeybadger.io/v1/deploys}",
      "\t#user: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "hpilo_boot": {
    "prefix": "hpilo_boot",
    "description": "Boot system using specific media through HP iLO interface",
    "body": [
      "community.general.hpilo_boot:",
      "\thost: ${1:}",
      "\t#force: ${2:false}",
      "\t#image: ${3:}",
      "\t#login: ${4:Administrator}",
      "\t#media: ${5:cdrom|floppy|rbsu|hdd|network|normal|usb}",
      "\t#password: ${6:admin}",
      "\t#ssl_version: ${7:SSLv3|SSLv23|#TLSv1|TLSv1_1|TLSv1_2}",
      "\t#state: ${8:boot_always|#boot_once|connect|disconnect|no_boot|poweroff}"
    ]
  },
  "hpilo_info": {
    "prefix": "hpilo_info",
    "description": "Gather information through an HP iLO interface",
    "body": [
      "community.general.hpilo_info:",
      "\thost: ${1:}",
      "\t#login: ${2:Administrator}",
      "\t#password: ${3:admin}",
      "\t#ssl_version: ${4:SSLv3|SSLv23|#TLSv1|TLSv1_1|TLSv1_2}"
    ]
  },
  "hponcfg": {
    "prefix": "hponcfg",
    "description": "Configure HP iLO interface using hponcfg",
    "body": [
      "community.general.hponcfg:",
      "\tpath: ${1:}",
      "\t#executable: ${2:hponcfg}",
      "\t#minfw: ${3:}",
      "\t#verbose: ${4:false}"
    ]
  },
  "htpasswd": {
    "prefix": "htpasswd",
    "description": "Manage user files for basic authentication",
    "body": [
      "community.general.htpasswd:",
      "\tname: ${1:}",
      "\tpath: ${2:}",
      "\t#attributes: ${3:}",
      "\t#create: ${4:true}",
      "\t#group: ${5:}",
      "\t#hash_scheme: ${6:apr_md5_crypt}",
      "\t#mode: ${7:}",
      "\t#owner: ${8:}",
      "\t#password: ${9:}",
      "\t#selevel: ${10:}",
      "\t#serole: ${11:}",
      "\t#setype: ${12:}",
      "\t#seuser: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#unsafe_writes: ${15:false}"
    ]
  },
  "hwc_ecs_instance": {
    "prefix": "hwc_ecs_instance",
    "description": "Creates a resource of Ecs/Instance in Huawei Cloud",
    "body": [
      "community.general.hwc_ecs_instance:",
      "\tavailability_zone: ${1:}",
      "\tdomain: ${2:}",
      "\tflavor_name: ${3:}",
      "\tidentity_endpoint: ${4:}",
      "\timage_id: ${5:}",
      "\tname: ${6:}",
      "\tnics: ${7:}",
      "\tpassword: ${8:}",
      "\tproject: ${9:}",
      "\troot_volume: ${10:}",
      "\tuser: ${11:}",
      "\tvpc_id: ${12:}",
      "\t#admin_pass: ${13:}",
      "\t#data_volumes: ${14:}",
      "\t#description: ${15:}",
      "\t#eip_id: ${16:}",
      "\t#enable_auto_recovery: ${17:}",
      "\t#enterprise_project_id: ${18:}",
      "\t#id: ${19:}",
      "\t#region: ${20:}",
      "\t#security_groups: ${21:}",
      "\t#server_metadata: ${22:}",
      "\t#server_tags: ${23:}",
      "\t#ssh_key_name: ${24:}",
      "\t#state: ${25:#present|absent}",
      "\t#timeouts: ${26:{\\}}",
      "\t#user_data: ${27:}"
    ]
  },
  "hwc_evs_disk": {
    "prefix": "hwc_evs_disk",
    "description": "Creates a resource of Evs/Disk in Huawei Cloud",
    "body": [
      "community.general.hwc_evs_disk:",
      "\tavailability_zone: ${1:}",
      "\tdomain: ${2:}",
      "\tidentity_endpoint: ${3:}",
      "\tname: ${4:}",
      "\tpassword: ${5:}",
      "\tproject: ${6:}",
      "\tuser: ${7:}",
      "\tvolume_type: ${8:}",
      "\t#backup_id: ${9:}",
      "\t#description: ${10:}",
      "\t#enable_full_clone: ${11:}",
      "\t#enable_scsi: ${12:}",
      "\t#enable_share: ${13:}",
      "\t#encryption_id: ${14:}",
      "\t#enterprise_project_id: ${15:}",
      "\t#id: ${16:}",
      "\t#image_id: ${17:}",
      "\t#region: ${18:}",
      "\t#size: ${19:}",
      "\t#snapshot_id: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#timeouts: ${22:{\\}}"
    ]
  },
  "hwc_network_vpc": {
    "prefix": "hwc_network_vpc",
    "description": "Creates a Huawei Cloud VPC",
    "body": [
      "community.general.hwc_network_vpc:",
      "\tcidr: ${1:}",
      "\tdomain: ${2:}",
      "\tidentity_endpoint: ${3:}",
      "\tname: ${4:}",
      "\tpassword: ${5:}",
      "\tproject: ${6:}",
      "\tuser: ${7:}",
      "\t#id: ${8:}",
      "\t#region: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#timeouts: ${11:{\\}}"
    ]
  },
  "hwc_smn_topic": {
    "prefix": "hwc_smn_topic",
    "description": "Creates a resource of SMNTopic in Huaweicloud Cloud",
    "body": [
      "community.general.hwc_smn_topic:",
      "\tdomain: ${1:}",
      "\tidentity_endpoint: ${2:}",
      "\tname: ${3:}",
      "\tpassword: ${4:}",
      "\tproject: ${5:}",
      "\tuser: ${6:}",
      "\t#display_name: ${7:}",
      "\t#id: ${8:}",
      "\t#region: ${9:}",
      "\t#state: ${10:#present|absent}"
    ]
  },
  "hwc_vpc_eip": {
    "prefix": "hwc_vpc_eip",
    "description": "Creates a resource of Vpc/EIP in Huawei Cloud",
    "body": [
      "community.general.hwc_vpc_eip:",
      "\tdomain: ${1:}",
      "\tidentity_endpoint: ${2:}",
      "\tpassword: ${3:}",
      "\tproject: ${4:}",
      "\ttype: ${5:}",
      "\tuser: ${6:}",
      "\t#dedicated_bandwidth: ${7:}",
      "\t#enterprise_project_id: ${8:}",
      "\t#id: ${9:}",
      "\t#ip_version: ${10:}",
      "\t#ipv4_address: ${11:}",
      "\t#port_id: ${12:}",
      "\t#region: ${13:}",
      "\t#shared_bandwidth_id: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeouts: ${16:{\\}}"
    ]
  },
  "hwc_vpc_peering_connect": {
    "prefix": "hwc_vpc_peering_connect",
    "description": "Creates a resource of Vpc/PeeringConnect in Huawei Cloud",
    "body": [
      "community.general.hwc_vpc_peering_connect:",
      "\tdomain: ${1:}",
      "\tidentity_endpoint: ${2:}",
      "\tlocal_vpc_id: ${3:}",
      "\tname: ${4:}",
      "\tpassword: ${5:}",
      "\tpeering_vpc: ${6:}",
      "\tproject: ${7:}",
      "\tuser: ${8:}",
      "\t#description: ${9:}",
      "\t#id: ${10:}",
      "\t#region: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#timeouts: ${13:{\\}}"
    ]
  },
  "hwc_vpc_port": {
    "prefix": "hwc_vpc_port",
    "description": "Creates a resource of Vpc/Port in Huawei Cloud",
    "body": [
      "community.general.hwc_vpc_port:",
      "\tdomain: ${1:}",
      "\tidentity_endpoint: ${2:}",
      "\tpassword: ${3:}",
      "\tproject: ${4:}",
      "\tsubnet_id: ${5:}",
      "\tuser: ${6:}",
      "\t#admin_state_up: ${7:}",
      "\t#allowed_address_pairs: ${8:}",
      "\t#extra_dhcp_opts: ${9:}",
      "\t#id: ${10:}",
      "\t#ip_address: ${11:}",
      "\t#name: ${12:}",
      "\t#region: ${13:}",
      "\t#security_groups: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeouts: ${16:{\\}}"
    ]
  },
  "hwc_vpc_private_ip": {
    "prefix": "hwc_vpc_private_ip",
    "description": "Creates a resource of Vpc/PrivateIP in Huawei Cloud",
    "body": [
      "community.general.hwc_vpc_private_ip:",
      "\tdomain: ${1:}",
      "\tidentity_endpoint: ${2:}",
      "\tpassword: ${3:}",
      "\tproject: ${4:}",
      "\tsubnet_id: ${5:}",
      "\tuser: ${6:}",
      "\t#id: ${7:}",
      "\t#ip_address: ${8:}",
      "\t#region: ${9:}",
      "\t#state: ${10:#present|absent}"
    ]
  },
  "hwc_vpc_route": {
    "prefix": "hwc_vpc_route",
    "description": "Creates a resource of Vpc/Route in Huawei Cloud",
    "body": [
      "community.general.hwc_vpc_route:",
      "\tdestination: ${1:}",
      "\tdomain: ${2:}",
      "\tidentity_endpoint: ${3:}",
      "\tnext_hop: ${4:}",
      "\tpassword: ${5:}",
      "\tproject: ${6:}",
      "\tuser: ${7:}",
      "\tvpc_id: ${8:}",
      "\t#id: ${9:}",
      "\t#region: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#type: ${12:peering}"
    ]
  },
  "hwc_vpc_security_group": {
    "prefix": "hwc_vpc_security_group",
    "description": "Creates a resource of Vpc/SecurityGroup in Huawei Cloud",
    "body": [
      "community.general.hwc_vpc_security_group:",
      "\tdomain: ${1:}",
      "\tidentity_endpoint: ${2:}",
      "\tname: ${3:}",
      "\tpassword: ${4:}",
      "\tproject: ${5:}",
      "\tuser: ${6:}",
      "\t#enterprise_project_id: ${7:}",
      "\t#id: ${8:}",
      "\t#region: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#vpc_id: ${11:}"
    ]
  },
  "hwc_vpc_security_group_rule": {
    "prefix": "hwc_vpc_security_group_rule",
    "description": "Creates a resource of Vpc/SecurityGroupRule in Huawei Cloud",
    "body": [
      "community.general.hwc_vpc_security_group_rule:",
      "\tdirection: ${1:}",
      "\tdomain: ${2:}",
      "\tidentity_endpoint: ${3:}",
      "\tpassword: ${4:}",
      "\tproject: ${5:}",
      "\tsecurity_group_id: ${6:}",
      "\tuser: ${7:}",
      "\t#description: ${8:}",
      "\t#ethertype: ${9:}",
      "\t#id: ${10:}",
      "\t#port_range_max: ${11:}",
      "\t#port_range_min: ${12:}",
      "\t#protocol: ${13:}",
      "\t#region: ${14:}",
      "\t#remote_group_id: ${15:}",
      "\t#remote_ip_prefix: ${16:}",
      "\t#state: ${17:#present|absent}"
    ]
  },
  "hwc_vpc_subnet": {
    "prefix": "hwc_vpc_subnet",
    "description": "Creates a resource of Vpc/Subnet in Huawei Cloud",
    "body": [
      "community.general.hwc_vpc_subnet:",
      "\tcidr: ${1:}",
      "\tdomain: ${2:}",
      "\tgateway_ip: ${3:}",
      "\tidentity_endpoint: ${4:}",
      "\tname: ${5:}",
      "\tpassword: ${6:}",
      "\tproject: ${7:}",
      "\tuser: ${8:}",
      "\tvpc_id: ${9:}",
      "\t#availability_zone: ${10:}",
      "\t#dhcp_enable: ${11:}",
      "\t#dns_address: ${12:}",
      "\t#id: ${13:}",
      "\t#region: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#timeouts: ${16:{\\}}"
    ]
  },
  "ibm_sa_domain": {
    "prefix": "ibm_sa_domain",
    "description": "Manages domains on IBM Spectrum Accelerate Family storage systems",
    "body": [
      "community.general.ibm_sa_domain:",
      "\tdomain: ${1:}",
      "\tendpoints: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#hard_capacity: ${5:}",
      "\t#ldap_id: ${6:}",
      "\t#max_cgs: ${7:}",
      "\t#max_dms: ${8:}",
      "\t#max_mirrors: ${9:}",
      "\t#max_pools: ${10:}",
      "\t#max_volumes: ${11:}",
      "\t#perf_class: ${12:}",
      "\t#size: ${13:}",
      "\t#soft_capacity: ${14:}",
      "\t#state: ${15:#present|absent}"
    ]
  },
  "ibm_sa_host": {
    "prefix": "ibm_sa_host",
    "description": "Adds hosts to or removes them from IBM Spectrum Accelerate Family storage systems",
    "body": [
      "community.general.ibm_sa_host:",
      "\tendpoints: ${1:}",
      "\thost: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#cluster: ${5:}",
      "\t#domain: ${6:}",
      "\t#iscsi_chap_name: ${7:}",
      "\t#iscsi_chap_secret: ${8:}",
      "\t#state: ${9:#present|absent}"
    ]
  },
  "ibm_sa_host_ports": {
    "prefix": "ibm_sa_host_ports",
    "description": "Add host ports on IBM Spectrum Accelerate Family storage systems",
    "body": [
      "community.general.ibm_sa_host_ports:",
      "\tendpoints: ${1:}",
      "\thost: ${2:}",
      "\tpassword: ${3:}",
      "\tusername: ${4:}",
      "\t#fcaddress: ${5:}",
      "\t#iscsi_name: ${6:}",
      "\t#num_of_visible_targets: ${7:}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "ibm_sa_pool": {
    "prefix": "ibm_sa_pool",
    "description": "Handles pools on IBM Spectrum Accelerate Family storage systems",
    "body": [
      "community.general.ibm_sa_pool:",
      "\tendpoints: ${1:}",
      "\tpassword: ${2:}",
      "\tpool: ${3:}",
      "\tusername: ${4:}",
      "\t#domain: ${5:}",
      "\t#perf_class: ${6:}",
      "\t#size: ${7:}",
      "\t#snapshot_size: ${8:}",
      "\t#state: ${9:#present|absent}"
    ]
  },
  "ibm_sa_vol": {
    "prefix": "ibm_sa_vol",
    "description": "Handle volumes on IBM Spectrum Accelerate Family storage systems",
    "body": [
      "community.general.ibm_sa_vol:",
      "\tendpoints: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\tvol: ${4:}",
      "\t#pool: ${5:}",
      "\t#size: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "ibm_sa_vol_map": {
    "prefix": "ibm_sa_vol_map",
    "description": "Handles volume mapping on IBM Spectrum Accelerate Family storage systems",
    "body": [
      "community.general.ibm_sa_vol_map:",
      "\tendpoints: ${1:}",
      "\tpassword: ${2:}",
      "\tusername: ${3:}",
      "\tvol: ${4:}",
      "\t#cluster: ${5:}",
      "\t#host: ${6:}",
      "\t#lun: ${7:}",
      "\t#override: ${8:}",
      "\t#state: ${9:#present|absent}"
    ]
  },
  "icinga2_feature": {
    "prefix": "icinga2_feature",
    "description": "Manage Icinga2 feature",
    "body": [
      "community.general.icinga2_feature:",
      "\tname: ${1:}",
      "\t#state: ${2:#present|absent}"
    ]
  },
  "icinga2_host": {
    "prefix": "icinga2_host",
    "description": "Manage a host in Icinga2",
    "body": [
      "community.general.icinga2_host:",
      "\tname: ${1:}",
      "\t#check_command: ${2:hostalive}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#display_name: ${5:}",
      "\t#force: ${6:false}",
      "\t#force_basic_auth: ${7:false}",
      "\t#http_agent: ${8:ansible-httpget}",
      "\t#ip: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#template: ${11:}",
      "\t#url: ${12:}",
      "\t#url_password: ${13:}",
      "\t#url_username: ${14:}",
      "\t#use_gssapi: ${15:false}",
      "\t#use_proxy: ${16:true}",
      "\t#validate_certs: ${17:true}",
      "\t#variables: ${18:}",
      "\t#zone: ${19:}"
    ]
  },
  "idrac_redfish_command": {
    "prefix": "idrac_redfish_command",
    "description": "Manages Out-Of-Band controllers using iDRAC OEM Redfish APIs",
    "body": [
      "community.general.idrac_redfish_command:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#password: ${5:}",
      "\t#resource_id: ${6:}",
      "\t#timeout: ${7:10}",
      "\t#username: ${8:}"
    ]
  },
  "idrac_redfish_config": {
    "prefix": "idrac_redfish_config",
    "description": "Manages servers through iDRAC using Dell Redfish APIs",
    "body": [
      "community.general.idrac_redfish_config:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#manager_attributes: ${5:{\\}}",
      "\t#password: ${6:}",
      "\t#resource_id: ${7:}",
      "\t#timeout: ${8:10}",
      "\t#username: ${9:}"
    ]
  },
  "idrac_redfish_info": {
    "prefix": "idrac_redfish_info",
    "description": "Gather PowerEdge server information through iDRAC using Redfish APIs",
    "body": [
      "community.general.idrac_redfish_info:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#password: ${5:}",
      "\t#timeout: ${6:10}",
      "\t#username: ${7:}"
    ]
  },
  "ilo_redfish_command": {
    "prefix": "ilo_redfish_command",
    "description": "Manages Out-Of-Band controllers using Redfish APIs",
    "body": [
      "community.general.ilo_redfish_command:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:Systems}",
      "\tcommand: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#password: ${5:}",
      "\t#timeout: ${6:60}",
      "\t#username: ${7:}"
    ]
  },
  "ilo_redfish_config": {
    "prefix": "ilo_redfish_config",
    "description": "Sets or updates configuration attributes on HPE iLO with Redfish OEM extensions",
    "body": [
      "community.general.ilo_redfish_config:",
      "\tattribute_name: ${1:}",
      "\tbaseuri: ${2:}",
      "\tcategory: ${3:Manager}",
      "\tcommand: ${4:}",
      "\t#attribute_value: ${5:}",
      "\t#auth_token: ${6:}",
      "\t#password: ${7:}",
      "\t#timeout: ${8:10}",
      "\t#username: ${9:}"
    ]
  },
  "ilo_redfish_info": {
    "prefix": "ilo_redfish_info",
    "description": "Gathers server information through iLO using Redfish APIs",
    "body": [
      "community.general.ilo_redfish_info:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#password: ${5:}",
      "\t#timeout: ${6:10}",
      "\t#username: ${7:}"
    ]
  },
  "imc_rest": {
    "prefix": "imc_rest",
    "description": "Manage Cisco IMC hardware through its REST API",
    "body": [
      "community.general.imc_rest:",
      "\thostname: ${1:}",
      "\t#content: ${2:}",
      "\t#password: ${3:password}",
      "\t#path: ${4:}",
      "\t#protocol: ${5:http|#https}",
      "\t#timeout: ${6:60}",
      "\t#username: ${7:admin}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "imgadm": {
    "prefix": "imgadm",
    "description": "Manage SmartOS images",
    "body": [
      "community.general.imgadm:",
      "\tstate: ${1:present|absent|deleted|imported|updated|vacuumed}",
      "\t#force: ${2:}",
      "\t#pool: ${3:zones}",
      "\t#source: ${4:}",
      "\t#type: ${5:#imgapi|docker|dsapi}",
      "\t#uuid: ${6:}"
    ]
  },
  "infinity": {
    "prefix": "infinity",
    "description": "Manage Infinity IPAM using Rest API",
    "body": [
      "community.general.infinity:",
      "\taction: ${1:add_network|delete_network|get_network|get_network_id|release_ip|release_network|reserve_network|reserve_next_available_ip}",
      "\tpassword: ${2:}",
      "\tserver_ip: ${3:}",
      "\tusername: ${4:}",
      "\t#ip_address: ${5:}",
      "\t#network_address: ${6:}",
      "\t#network_family: ${7:#4|6|dual}",
      "\t#network_id: ${8:}",
      "\t#network_location: ${9:-1}",
      "\t#network_name: ${10:}",
      "\t#network_size: ${11:}",
      "\t#network_type: ${12:#lan|shared_lan|supernet}"
    ]
  },
  "influxdb_database": {
    "prefix": "influxdb_database",
    "description": "Manage InfluxDB databases",
    "body": [
      "community.general.influxdb_database:",
      "\tdatabase_name: ${1:}",
      "\t#hostname: ${2:localhost}",
      "\t#password: ${3:root}",
      "\t#path: ${4:\"\"}",
      "\t#port: ${5:8086}",
      "\t#proxies: ${6:{\\}}",
      "\t#retries: ${7:3}",
      "\t#ssl: ${8:false}",
      "\t#state: ${9:absent|#present}",
      "\t#timeout: ${10:}",
      "\t#udp_port: ${11:4444}",
      "\t#use_udp: ${12:false}",
      "\t#username: ${13:root}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "influxdb_query": {
    "prefix": "influxdb_query",
    "description": "Query data points from InfluxDB",
    "body": [
      "community.general.influxdb_query:",
      "\tdatabase_name: ${1:}",
      "\tquery: ${2:}",
      "\t#hostname: ${3:localhost}",
      "\t#password: ${4:root}",
      "\t#path: ${5:\"\"}",
      "\t#port: ${6:8086}",
      "\t#proxies: ${7:{\\}}",
      "\t#retries: ${8:3}",
      "\t#ssl: ${9:false}",
      "\t#timeout: ${10:}",
      "\t#udp_port: ${11:4444}",
      "\t#use_udp: ${12:false}",
      "\t#username: ${13:root}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "influxdb_retention_policy": {
    "prefix": "influxdb_retention_policy",
    "description": "Manage InfluxDB retention policies",
    "body": [
      "community.general.influxdb_retention_policy:",
      "\tdatabase_name: ${1:}",
      "\tpolicy_name: ${2:}",
      "\t#default: ${3:false}",
      "\t#duration: ${4:}",
      "\t#hostname: ${5:localhost}",
      "\t#password: ${6:root}",
      "\t#path: ${7:\"\"}",
      "\t#port: ${8:8086}",
      "\t#proxies: ${9:{\\}}",
      "\t#replication: ${10:}",
      "\t#retries: ${11:3}",
      "\t#shard_group_duration: ${12:}",
      "\t#ssl: ${13:false}",
      "\t#state: ${14:absent|#present}",
      "\t#timeout: ${15:}",
      "\t#udp_port: ${16:4444}",
      "\t#use_udp: ${17:false}",
      "\t#username: ${18:root}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "influxdb_user": {
    "prefix": "influxdb_user",
    "description": "Manage InfluxDB users",
    "body": [
      "community.general.influxdb_user:",
      "\tuser_name: ${1:}",
      "\t#admin: ${2:false}",
      "\t#grants: ${3:}",
      "\t#hostname: ${4:localhost}",
      "\t#password: ${5:root}",
      "\t#path: ${6:\"\"}",
      "\t#port: ${7:8086}",
      "\t#proxies: ${8:{\\}}",
      "\t#retries: ${9:3}",
      "\t#ssl: ${10:false}",
      "\t#state: ${11:absent|#present}",
      "\t#timeout: ${12:}",
      "\t#udp_port: ${13:4444}",
      "\t#use_udp: ${14:false}",
      "\t#user_password: ${15:}",
      "\t#username: ${16:root}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "influxdb_write": {
    "prefix": "influxdb_write",
    "description": "Write data points into InfluxDB",
    "body": [
      "community.general.influxdb_write:",
      "\tdata_points: ${1:}",
      "\tdatabase_name: ${2:}",
      "\t#hostname: ${3:localhost}",
      "\t#password: ${4:root}",
      "\t#path: ${5:\"\"}",
      "\t#port: ${6:8086}",
      "\t#proxies: ${7:{\\}}",
      "\t#retries: ${8:3}",
      "\t#ssl: ${9:false}",
      "\t#timeout: ${10:}",
      "\t#udp_port: ${11:4444}",
      "\t#use_udp: ${12:false}",
      "\t#username: ${13:root}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "ini_file": {
    "prefix": "ini_file",
    "description": "Tweak settings in INI files",
    "body": [
      "community.general.ini_file:",
      "\tpath: ${1:}",
      "\t#allow_no_value: ${2:false}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#create: ${5:true}",
      "\t#exclusive: ${6:true}",
      "\t#follow: ${7:false}",
      "\t#group: ${8:}",
      "\t#ignore_spaces: ${9:false}",
      "\t#mode: ${10:}",
      "\t#modify_inactive_option: ${11:true}",
      "\t#no_extra_spaces: ${12:false}",
      "\t#option: ${13:}",
      "\t#owner: ${14:}",
      "\t#section: ${15:}",
      "\t#selevel: ${16:}",
      "\t#serole: ${17:}",
      "\t#setype: ${18:}",
      "\t#seuser: ${19:}",
      "\t#state: ${20:absent|#present}",
      "\t#unsafe_writes: ${21:false}",
      "\t#value: ${22:}",
      "\t#values: ${23:}"
    ]
  },
  "installp": {
    "prefix": "installp",
    "description": "Manage packages on AIX",
    "body": [
      "community.general.installp:",
      "\tname: ${1:}",
      "\t#accept_license: ${2:false}",
      "\t#repository_path: ${3:}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "interfaces_file": {
    "prefix": "interfaces_file",
    "description": "Tweak settings in C(/etc/network/interfaces) files",
    "body": [
      "community.general.interfaces_file:",
      "\t#address_family: ${1:}",
      "\t#attributes: ${2:}",
      "\t#backup: ${3:false}",
      "\t#dest: ${4:/etc/network/interfaces}",
      "\t#group: ${5:}",
      "\t#iface: ${6:}",
      "\t#mode: ${7:}",
      "\t#option: ${8:}",
      "\t#owner: ${9:}",
      "\t#selevel: ${10:}",
      "\t#serole: ${11:}",
      "\t#setype: ${12:}",
      "\t#seuser: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#unsafe_writes: ${15:false}",
      "\t#value: ${16:}"
    ]
  },
  "ip_netns": {
    "prefix": "ip_netns",
    "description": "Manage network namespaces",
    "body": [
      "community.general.ip_netns:",
      "\t#name: ${1:}",
      "\t#state: ${2:#present|absent}"
    ]
  },
  "ipa_config": {
    "prefix": "ipa_config",
    "description": "Manage Global FreeIPA Configuration Settings",
    "body": [
      "community.general.ipa_config:",
      "\t#ipa_host: ${1:ipa.example.com}",
      "\t#ipa_pass: ${2:}",
      "\t#ipa_port: ${3:443}",
      "\t#ipa_prot: ${4:http|#https}",
      "\t#ipa_timeout: ${5:10}",
      "\t#ipa_user: ${6:admin}",
      "\t#ipaconfigstring: ${7:AllowNThash|KDC:Disable Last Success|KDC:Disable Lockout|KDC:Disable Default Preauth for SPNs}",
      "\t#ipadefaultemaildomain: ${8:}",
      "\t#ipadefaultloginshell: ${9:}",
      "\t#ipadefaultprimarygroup: ${10:}",
      "\t#ipagroupobjectclasses: ${11:}",
      "\t#ipagroupsearchfields: ${12:}",
      "\t#ipahomesrootdir: ${13:}",
      "\t#ipakrbauthzdata: ${14:MS-PAC|PAD|nfs:NONE}",
      "\t#ipamaxusernamelength: ${15:}",
      "\t#ipapwdexpadvnotify: ${16:}",
      "\t#ipasearchrecordslimit: ${17:}",
      "\t#ipasearchtimelimit: ${18:}",
      "\t#ipaselinuxusermaporder: ${19:}",
      "\t#ipauserauthtype: ${20:password|radius|otp|pkinit|hardened|idp|passkey|disabled}",
      "\t#ipauserobjectclasses: ${21:}",
      "\t#ipausersearchfields: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "ipa_dnsrecord": {
    "prefix": "ipa_dnsrecord",
    "description": "Manage FreeIPA DNS records",
    "body": [
      "community.general.ipa_dnsrecord:",
      "\trecord_name: ${1:}",
      "\tzone_name: ${2:}",
      "\t#ipa_host: ${3:ipa.example.com}",
      "\t#ipa_pass: ${4:}",
      "\t#ipa_port: ${5:443}",
      "\t#ipa_prot: ${6:http|#https}",
      "\t#ipa_timeout: ${7:10}",
      "\t#ipa_user: ${8:admin}",
      "\t#record_ttl: ${9:}",
      "\t#record_type: ${10:#A|AAAA|A6|CNAME|DNAME|MX|NS|PTR|SRV|TXT}",
      "\t#record_value: ${11:}",
      "\t#record_values: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "ipa_dnszone": {
    "prefix": "ipa_dnszone",
    "description": "Manage FreeIPA DNS Zones",
    "body": [
      "community.general.ipa_dnszone:",
      "\tzone_name: ${1:}",
      "\t#allowsyncptr: ${2:false}",
      "\t#dynamicupdate: ${3:false}",
      "\t#ipa_host: ${4:ipa.example.com}",
      "\t#ipa_pass: ${5:}",
      "\t#ipa_port: ${6:443}",
      "\t#ipa_prot: ${7:http|#https}",
      "\t#ipa_timeout: ${8:10}",
      "\t#ipa_user: ${9:admin}",
      "\t#state: ${10:absent|#present}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "ipa_group": {
    "prefix": "ipa_group",
    "description": "Manage FreeIPA group",
    "body": [
      "community.general.ipa_group:",
      "\tcn: ${1:}",
      "\t#append: ${2:false}",
      "\t#description: ${3:}",
      "\t#external: ${4:}",
      "\t#external_user: ${5:}",
      "\t#gidnumber: ${6:}",
      "\t#group: ${7:}",
      "\t#ipa_host: ${8:ipa.example.com}",
      "\t#ipa_pass: ${9:}",
      "\t#ipa_port: ${10:443}",
      "\t#ipa_prot: ${11:http|#https}",
      "\t#ipa_timeout: ${12:10}",
      "\t#ipa_user: ${13:admin}",
      "\t#nonposix: ${14:}",
      "\t#state: ${15:absent|#present}",
      "\t#user: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "ipa_hbacrule": {
    "prefix": "ipa_hbacrule",
    "description": "Manage FreeIPA HBAC rule",
    "body": [
      "community.general.ipa_hbacrule:",
      "\tcn: ${1:}",
      "\t#description: ${2:}",
      "\t#host: ${3:}",
      "\t#hostcategory: ${4:all}",
      "\t#hostgroup: ${5:}",
      "\t#ipa_host: ${6:ipa.example.com}",
      "\t#ipa_pass: ${7:}",
      "\t#ipa_port: ${8:443}",
      "\t#ipa_prot: ${9:http|#https}",
      "\t#ipa_timeout: ${10:10}",
      "\t#ipa_user: ${11:admin}",
      "\t#service: ${12:}",
      "\t#servicecategory: ${13:all}",
      "\t#servicegroup: ${14:}",
      "\t#sourcehost: ${15:}",
      "\t#sourcehostcategory: ${16:all}",
      "\t#sourcehostgroup: ${17:}",
      "\t#state: ${18:absent|disabled|enabled|#present}",
      "\t#user: ${19:}",
      "\t#usercategory: ${20:all}",
      "\t#usergroup: ${21:}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "ipa_host": {
    "prefix": "ipa_host",
    "description": "Manage FreeIPA host",
    "body": [
      "community.general.ipa_host:",
      "\tfqdn: ${1:}",
      "\t#description: ${2:}",
      "\t#force: ${3:}",
      "\t#ip_address: ${4:}",
      "\t#ipa_host: ${5:ipa.example.com}",
      "\t#ipa_pass: ${6:}",
      "\t#ipa_port: ${7:443}",
      "\t#ipa_prot: ${8:http|#https}",
      "\t#ipa_timeout: ${9:10}",
      "\t#ipa_user: ${10:admin}",
      "\t#mac_address: ${11:}",
      "\t#ns_hardware_platform: ${12:}",
      "\t#ns_host_location: ${13:}",
      "\t#ns_os_version: ${14:}",
      "\t#random_password: ${15:}",
      "\t#state: ${16:absent|disabled|enabled|#present}",
      "\t#update_dns: ${17:}",
      "\t#user_certificate: ${18:}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "ipa_hostgroup": {
    "prefix": "ipa_hostgroup",
    "description": "Manage FreeIPA host-group",
    "body": [
      "community.general.ipa_hostgroup:",
      "\tcn: ${1:}",
      "\t#append: ${2:false}",
      "\t#description: ${3:}",
      "\t#host: ${4:}",
      "\t#hostgroup: ${5:}",
      "\t#ipa_host: ${6:ipa.example.com}",
      "\t#ipa_pass: ${7:}",
      "\t#ipa_port: ${8:443}",
      "\t#ipa_prot: ${9:http|#https}",
      "\t#ipa_timeout: ${10:10}",
      "\t#ipa_user: ${11:admin}",
      "\t#state: ${12:absent|disabled|enabled|#present}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ipa_otpconfig": {
    "prefix": "ipa_otpconfig",
    "description": "Manage FreeIPA OTP Configuration Settings",
    "body": [
      "community.general.ipa_otpconfig:",
      "\t#ipa_host: ${1:ipa.example.com}",
      "\t#ipa_pass: ${2:}",
      "\t#ipa_port: ${3:443}",
      "\t#ipa_prot: ${4:http|#https}",
      "\t#ipa_timeout: ${5:10}",
      "\t#ipa_user: ${6:admin}",
      "\t#ipatokenhotpauthwindow: ${7:}",
      "\t#ipatokenhotpsyncwindow: ${8:}",
      "\t#ipatokentotpauthwindow: ${9:}",
      "\t#ipatokentotpsyncwindow: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "ipa_otptoken": {
    "prefix": "ipa_otptoken",
    "description": "Manage FreeIPA OTPs",
    "body": [
      "community.general.ipa_otptoken:",
      "\tuniqueid: ${1:}",
      "\t#algorithm: ${2:sha1|sha256|sha384|sha512}",
      "\t#counter: ${3:}",
      "\t#description: ${4:}",
      "\t#digits: ${5:6|8}",
      "\t#enabled: ${6:true}",
      "\t#interval: ${7:}",
      "\t#ipa_host: ${8:ipa.example.com}",
      "\t#ipa_pass: ${9:}",
      "\t#ipa_port: ${10:443}",
      "\t#ipa_prot: ${11:http|#https}",
      "\t#ipa_timeout: ${12:10}",
      "\t#ipa_user: ${13:admin}",
      "\t#model: ${14:}",
      "\t#newuniqueid: ${15:}",
      "\t#notafter: ${16:}",
      "\t#notbefore: ${17:}",
      "\t#offset: ${18:}",
      "\t#otptype: ${19:totp|hotp}",
      "\t#owner: ${20:}",
      "\t#secretkey: ${21:}",
      "\t#serial: ${22:}",
      "\t#state: ${23:#present|absent}",
      "\t#validate_certs: ${24:true}",
      "\t#vendor: ${25:}"
    ]
  },
  "ipa_pwpolicy": {
    "prefix": "ipa_pwpolicy",
    "description": "Manage FreeIPA password policies",
    "body": [
      "community.general.ipa_pwpolicy:",
      "\t#dictcheck: ${1:}",
      "\t#failinterval: ${2:}",
      "\t#gracelimit: ${3:}",
      "\t#group: ${4:}",
      "\t#historylength: ${5:}",
      "\t#ipa_host: ${6:ipa.example.com}",
      "\t#ipa_pass: ${7:}",
      "\t#ipa_port: ${8:443}",
      "\t#ipa_prot: ${9:http|#https}",
      "\t#ipa_timeout: ${10:10}",
      "\t#ipa_user: ${11:admin}",
      "\t#lockouttime: ${12:}",
      "\t#maxfailcount: ${13:}",
      "\t#maxpwdlife: ${14:}",
      "\t#maxrepeat: ${15:}",
      "\t#maxsequence: ${16:}",
      "\t#minclasses: ${17:}",
      "\t#minlength: ${18:}",
      "\t#minpwdlife: ${19:}",
      "\t#priority: ${20:}",
      "\t#state: ${21:absent|#present}",
      "\t#usercheck: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "ipa_role": {
    "prefix": "ipa_role",
    "description": "Manage FreeIPA role",
    "body": [
      "community.general.ipa_role:",
      "\tcn: ${1:}",
      "\t#description: ${2:}",
      "\t#group: ${3:}",
      "\t#host: ${4:}",
      "\t#hostgroup: ${5:}",
      "\t#ipa_host: ${6:ipa.example.com}",
      "\t#ipa_pass: ${7:}",
      "\t#ipa_port: ${8:443}",
      "\t#ipa_prot: ${9:http|#https}",
      "\t#ipa_timeout: ${10:10}",
      "\t#ipa_user: ${11:admin}",
      "\t#privilege: ${12:}",
      "\t#service: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#user: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "ipa_service": {
    "prefix": "ipa_service",
    "description": "Manage FreeIPA service",
    "body": [
      "community.general.ipa_service:",
      "\tkrbcanonicalname: ${1:}",
      "\t#force: ${2:}",
      "\t#hosts: ${3:}",
      "\t#ipa_host: ${4:ipa.example.com}",
      "\t#ipa_pass: ${5:}",
      "\t#ipa_port: ${6:443}",
      "\t#ipa_prot: ${7:http|#https}",
      "\t#ipa_timeout: ${8:10}",
      "\t#ipa_user: ${9:admin}",
      "\t#skip_host_check: ${10:false}",
      "\t#state: ${11:absent|#present}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "ipa_subca": {
    "prefix": "ipa_subca",
    "description": "Manage FreeIPA Lightweight Sub Certificate Authorities",
    "body": [
      "community.general.ipa_subca:",
      "\tsubca_name: ${1:}",
      "\tsubca_subject: ${2:}",
      "\t#ipa_host: ${3:ipa.example.com}",
      "\t#ipa_pass: ${4:}",
      "\t#ipa_port: ${5:443}",
      "\t#ipa_prot: ${6:http|#https}",
      "\t#ipa_timeout: ${7:10}",
      "\t#ipa_user: ${8:admin}",
      "\t#state: ${9:absent|disabled|enabled|#present}",
      "\t#subca_desc: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "ipa_sudocmd": {
    "prefix": "ipa_sudocmd",
    "description": "Manage FreeIPA sudo command",
    "body": [
      "community.general.ipa_sudocmd:",
      "\tsudocmd: ${1:}",
      "\t#description: ${2:}",
      "\t#ipa_host: ${3:ipa.example.com}",
      "\t#ipa_pass: ${4:}",
      "\t#ipa_port: ${5:443}",
      "\t#ipa_prot: ${6:http|#https}",
      "\t#ipa_timeout: ${7:10}",
      "\t#ipa_user: ${8:admin}",
      "\t#state: ${9:absent|disabled|enabled|#present}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "ipa_sudocmdgroup": {
    "prefix": "ipa_sudocmdgroup",
    "description": "Manage FreeIPA sudo command group",
    "body": [
      "community.general.ipa_sudocmdgroup:",
      "\tcn: ${1:}",
      "\t#description: ${2:}",
      "\t#ipa_host: ${3:ipa.example.com}",
      "\t#ipa_pass: ${4:}",
      "\t#ipa_port: ${5:443}",
      "\t#ipa_prot: ${6:http|#https}",
      "\t#ipa_timeout: ${7:10}",
      "\t#ipa_user: ${8:admin}",
      "\t#state: ${9:absent|disabled|enabled|#present}",
      "\t#sudocmd: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "ipa_sudorule": {
    "prefix": "ipa_sudorule",
    "description": "Manage FreeIPA sudo rule",
    "body": [
      "community.general.ipa_sudorule:",
      "\tcn: ${1:}",
      "\t#cmd: ${2:}",
      "\t#cmdcategory: ${3:all}",
      "\t#cmdgroup: ${4:}",
      "\t#deny_cmd: ${5:}",
      "\t#deny_cmdgroup: ${6:}",
      "\t#description: ${7:}",
      "\t#host: ${8:}",
      "\t#hostcategory: ${9:all}",
      "\t#hostgroup: ${10:}",
      "\t#ipa_host: ${11:ipa.example.com}",
      "\t#ipa_pass: ${12:}",
      "\t#ipa_port: ${13:443}",
      "\t#ipa_prot: ${14:http|#https}",
      "\t#ipa_timeout: ${15:10}",
      "\t#ipa_user: ${16:admin}",
      "\t#runasextusers: ${17:}",
      "\t#runasgroupcategory: ${18:all}",
      "\t#runasusercategory: ${19:all}",
      "\t#state: ${20:absent|disabled|enabled|#present}",
      "\t#sudoopt: ${21:}",
      "\t#user: ${22:}",
      "\t#usercategory: ${23:all}",
      "\t#usergroup: ${24:}",
      "\t#validate_certs: ${25:true}"
    ]
  },
  "ipa_user": {
    "prefix": "ipa_user",
    "description": "Manage FreeIPA users",
    "body": [
      "community.general.ipa_user:",
      "\tuid: ${1:}",
      "\t#displayname: ${2:}",
      "\t#gidnumber: ${3:}",
      "\t#givenname: ${4:}",
      "\t#homedirectory: ${5:}",
      "\t#ipa_host: ${6:ipa.example.com}",
      "\t#ipa_pass: ${7:}",
      "\t#ipa_port: ${8:443}",
      "\t#ipa_prot: ${9:http|#https}",
      "\t#ipa_timeout: ${10:10}",
      "\t#ipa_user: ${11:admin}",
      "\t#krbpasswordexpiration: ${12:}",
      "\t#loginshell: ${13:}",
      "\t#mail: ${14:}",
      "\t#password: ${15:}",
      "\t#sn: ${16:}",
      "\t#sshpubkey: ${17:}",
      "\t#state: ${18:absent|disabled|enabled|#present}",
      "\t#telephonenumber: ${19:}",
      "\t#title: ${20:}",
      "\t#uidnumber: ${21:}",
      "\t#update_password: ${22:#always|on_create}",
      "\t#userauthtype: ${23:password|radius|otp|pkinit|hardened|idp|passkey}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "ipa_vault": {
    "prefix": "ipa_vault",
    "description": "Manage FreeIPA vaults",
    "body": [
      "community.general.ipa_vault:",
      "\tcn: ${1:}",
      "\t#description: ${2:}",
      "\t#ipa_host: ${3:ipa.example.com}",
      "\t#ipa_pass: ${4:}",
      "\t#ipa_port: ${5:443}",
      "\t#ipa_prot: ${6:http|#https}",
      "\t#ipa_timeout: ${7:10}",
      "\t#ipa_user: ${8:admin}",
      "\t#ipavaultpublickey: ${9:}",
      "\t#ipavaultsalt: ${10:}",
      "\t#ipavaulttype: ${11:asymmetric|standard|#symmetric}",
      "\t#replace: ${12:false}",
      "\t#service: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "ipbase_info": {
    "prefix": "ipbase_info",
    "description": "Retrieve IP geolocation and other facts of a host's IP address using the ipbase.com API",
    "body": [
      "community.general.ipbase_info:",
      "\t#apikey: ${1:}",
      "\t#hostname: ${2:false}",
      "\t#ip: ${3:}",
      "\t#language: ${4:en}"
    ]
  },
  "ipify_facts": {
    "prefix": "ipify_facts",
    "description": "Retrieve the public IP of your internet gateway",
    "body": [
      "community.general.ipify_facts:",
      "\t#api_url: ${1:https://api.ipify.org/}",
      "\t#timeout: ${2:10}",
      "\t#validate_certs: ${3:true}"
    ]
  },
  "ipinfoio_facts": {
    "prefix": "ipinfoio_facts",
    "description": "Retrieve IP geolocation facts of a host's IP address",
    "body": [
      "community.general.ipinfoio_facts:",
      "\t#http_agent: ${1:ansible-ipinfoio-module/0.0.1}",
      "\t#timeout: ${2:10}"
    ]
  },
  "ipmi_boot": {
    "prefix": "ipmi_boot",
    "description": "Management of order of boot devices",
    "body": [
      "community.general.ipmi_boot:",
      "\tbootdev: ${1:network|floppy|hd|safe|optical|setup|default}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tuser: ${4:}",
      "\t#key: ${5:}",
      "\t#persistent: ${6:false}",
      "\t#port: ${7:623}",
      "\t#state: ${8:#present|absent}",
      "\t#uefiboot: ${9:false}"
    ]
  },
  "ipmi_power": {
    "prefix": "ipmi_power",
    "description": "Power management for machine",
    "body": [
      "community.general.ipmi_power:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tuser: ${3:}",
      "\t#key: ${4:}",
      "\t#machine: ${5:}",
      "\t#port: ${6:623}",
      "\t#state: ${7:on|off|shutdown|reset|boot}",
      "\t#timeout: ${8:300}"
    ]
  },
  "iptables_state": {
    "prefix": "iptables_state",
    "description": "Save iptables state into a file or restore it from a file",
    "body": [
      "community.general.iptables_state:",
      "\tpath: ${1:}",
      "\tstate: ${2:saved|restored}",
      "\t#counters: ${3:false}",
      "\t#ip_version: ${4:#ipv4|ipv6}",
      "\t#modprobe: ${5:}",
      "\t#noflush: ${6:false}",
      "\t#table: ${7:filter|nat|mangle|raw|security}",
      "\t#wait: ${8:}"
    ]
  },
  "ipwcli_dns": {
    "prefix": "ipwcli_dns",
    "description": "Manage DNS Records for Ericsson IPWorks via ipwcli",
    "body": [
      "community.general.ipwcli_dns:",
      "\tcontainer: ${1:}",
      "\tdnsname: ${2:}",
      "\tpassword: ${3:}",
      "\ttype: ${4:NAPTR|SRV|A|AAAA}",
      "\tusername: ${5:}",
      "\t#address: ${6:}",
      "\t#flags: ${7:S|A|U|P}",
      "\t#order: ${8:}",
      "\t#port: ${9:}",
      "\t#preference: ${10:}",
      "\t#priority: ${11:10}",
      "\t#replacement: ${12:}",
      "\t#service: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#target: ${15:}",
      "\t#ttl: ${16:3600}",
      "\t#weight: ${17:10}"
    ]
  },
  "irc": {
    "prefix": "irc",
    "description": "Send a message to an IRC channel or a nick",
    "body": [
      "community.general.irc:",
      "\tmsg: ${1:}",
      "\t#channel: ${2:}",
      "\t#color: ${3:#none|white|black|blue|green|red|brown|purple|orange|yellow|light_green|teal|light_cyan|light_blue|pink|gray|light_gray}",
      "\t#key: ${4:}",
      "\t#nick: ${5:ansible}",
      "\t#nick_to: ${6:}",
      "\t#part: ${7:true}",
      "\t#passwd: ${8:}",
      "\t#port: ${9:6667}",
      "\t#server: ${10:localhost}",
      "\t#style: ${11:bold|underline|reverse|italic|#none}",
      "\t#timeout: ${12:30}",
      "\t#topic: ${13:}",
      "\t#use_tls: ${14:false}",
      "\t#validate_certs: ${15:false}"
    ]
  },
  "iso_create": {
    "prefix": "iso_create",
    "description": "Generate ISO file with specified files or folders",
    "body": [
      "community.general.iso_create:",
      "\tdest_iso: ${1:}",
      "\tsrc_files: ${2:}",
      "\t#interchange_level: ${3:#1|2|3|4}",
      "\t#joliet: ${4:1|2|3}",
      "\t#rock_ridge: ${5:1.09|1.10|1.12}",
      "\t#udf: ${6:false}",
      "\t#vol_ident: ${7:}"
    ]
  },
  "iso_customize": {
    "prefix": "iso_customize",
    "description": "Add/remove/change files in ISO file",
    "body": [
      "community.general.iso_customize:",
      "\tdest_iso: ${1:}",
      "\tsrc_iso: ${2:}",
      "\t#add_files: ${3:[]}",
      "\t#delete_files: ${4:[]}"
    ]
  },
  "iso_extract": {
    "prefix": "iso_extract",
    "description": "Extract files from an ISO image",
    "body": [
      "community.general.iso_extract:",
      "\tdest: ${1:}",
      "\tfiles: ${2:}",
      "\timage: ${3:}",
      "\t#executable: ${4:}",
      "\t#force: ${5:true}"
    ]
  },
  "jabber": {
    "prefix": "jabber",
    "description": "Send a message to jabber user or chat room",
    "body": [
      "community.general.jabber:",
      "\tmsg: ${1:}",
      "\tpassword: ${2:}",
      "\tto: ${3:}",
      "\tuser: ${4:}",
      "\t#encoding: ${5:}",
      "\t#host: ${6:}",
      "\t#port: ${7:5222}"
    ]
  },
  "java_cert": {
    "prefix": "java_cert",
    "description": "Uses keytool to import/remove certificate to/from java keystore (cacerts)",
    "body": [
      "community.general.java_cert:",
      "\tkeystore_pass: ${1:}",
      "\t#cert_alias: ${2:}",
      "\t#cert_path: ${3:}",
      "\t#cert_port: ${4:443}",
      "\t#cert_url: ${5:}",
      "\t#executable: ${6:keytool}",
      "\t#keystore_create: ${7:false}",
      "\t#keystore_path: ${8:}",
      "\t#keystore_type: ${9:}",
      "\t#pkcs12_alias: ${10:}",
      "\t#pkcs12_password: ${11:}",
      "\t#pkcs12_path: ${12:}",
      "\t#state: ${13:absent|#present}",
      "\t#trust_cacert: ${14:false}"
    ]
  },
  "java_keystore": {
    "prefix": "java_keystore",
    "description": "Create a Java keystore in JKS format",
    "body": [
      "community.general.java_keystore:",
      "\tdest: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\t#attributes: ${4:}",
      "\t#certificate: ${5:}",
      "\t#certificate_path: ${6:}",
      "\t#force: ${7:false}",
      "\t#group: ${8:}",
      "\t#keystore_type: ${9:jks|pkcs12}",
      "\t#mode: ${10:}",
      "\t#owner: ${11:}",
      "\t#private_key: ${12:}",
      "\t#private_key_passphrase: ${13:}",
      "\t#private_key_path: ${14:}",
      "\t#selevel: ${15:}",
      "\t#serole: ${16:}",
      "\t#setype: ${17:}",
      "\t#seuser: ${18:}",
      "\t#ssl_backend: ${19:#openssl|cryptography}",
      "\t#unsafe_writes: ${20:false}"
    ]
  },
  "jboss": {
    "prefix": "jboss",
    "description": "Deploy applications to JBoss",
    "body": [
      "community.general.jboss:",
      "\tdeployment: ${1:}",
      "\t#deploy_path: ${2:/var/lib/jbossas/standalone/deployments}",
      "\t#src: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "jenkins_build": {
    "prefix": "jenkins_build",
    "description": "Manage jenkins builds",
    "body": [
      "community.general.jenkins_build:",
      "\tname: ${1:}",
      "\t#args: ${2:}",
      "\t#build_number: ${3:}",
      "\t#detach: ${4:false}",
      "\t#password: ${5:}",
      "\t#state: ${6:#present|absent|stopped}",
      "\t#time_between_checks: ${7:10}",
      "\t#token: ${8:}",
      "\t#url: ${9:http://localhost:8080}",
      "\t#user: ${10:}"
    ]
  },
  "jenkins_build_info": {
    "prefix": "jenkins_build_info",
    "description": "Get information about Jenkins builds",
    "body": [
      "community.general.jenkins_build_info:",
      "\tname: ${1:}",
      "\t#build_number: ${2:}",
      "\t#password: ${3:}",
      "\t#token: ${4:}",
      "\t#url: ${5:http://localhost:8080}",
      "\t#user: ${6:}"
    ]
  },
  "jenkins_job": {
    "prefix": "jenkins_job",
    "description": "Manage jenkins jobs",
    "body": [
      "community.general.jenkins_job:",
      "\tname: ${1:}",
      "\t#config: ${2:}",
      "\t#enabled: ${3:}",
      "\t#password: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#token: ${6:}",
      "\t#url: ${7:http://localhost:8080}",
      "\t#user: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "jenkins_job_info": {
    "prefix": "jenkins_job_info",
    "description": "Get information about Jenkins jobs",
    "body": [
      "community.general.jenkins_job_info:",
      "\t#color: ${1:}",
      "\t#glob: ${2:}",
      "\t#name: ${3:}",
      "\t#password: ${4:}",
      "\t#token: ${5:}",
      "\t#url: ${6:http://localhost:8080}",
      "\t#user: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "jenkins_plugin": {
    "prefix": "jenkins_plugin",
    "description": "Add or remove Jenkins plugin",
    "body": [
      "community.general.jenkins_plugin:",
      "\tname: ${1:}",
      "\t#attributes: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#force: ${5:false}",
      "\t#force_basic_auth: ${6:false}",
      "\t#group: ${7:jenkins}",
      "\t#http_agent: ${8:ansible-httpget}",
      "\t#jenkins_home: ${9:/var/lib/jenkins}",
      "\t#latest_plugins_url_segments: ${10:['latest']}",
      "\t#mode: ${11:0644}",
      "\t#owner: ${12:jenkins}",
      "\t#selevel: ${13:}",
      "\t#serole: ${14:}",
      "\t#setype: ${15:}",
      "\t#seuser: ${16:}",
      "\t#state: ${17:absent|#present|pinned|unpinned|enabled|disabled|latest}",
      "\t#timeout: ${18:30}",
      "\t#unsafe_writes: ${19:false}",
      "\t#update_json_url_segment: ${20:['update-center.json', 'updates/update-center.json']}",
      "\t#updates_expiration: ${21:86400}",
      "\t#updates_url: ${22:['https://updates.jenkins.io', 'http://mirrors.jenkins.io']}",
      "\t#url: ${23:http://localhost:8080}",
      "\t#url_password: ${24:}",
      "\t#url_username: ${25:}",
      "\t#use_gssapi: ${26:false}",
      "\t#use_proxy: ${27:true}",
      "\t#validate_certs: ${28:true}",
      "\t#version: ${29:}",
      "\t#versioned_plugins_url_segments: ${30:['download/plugins', 'plugins']}",
      "\t#with_dependencies: ${31:true}"
    ]
  },
  "jenkins_script": {
    "prefix": "jenkins_script",
    "description": "Executes a groovy script in the jenkins instance",
    "body": [
      "community.general.jenkins_script:",
      "\tscript: ${1:}",
      "\t#args: ${2:}",
      "\t#password: ${3:}",
      "\t#timeout: ${4:10}",
      "\t#url: ${5:http://localhost:8080}",
      "\t#user: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "jira": {
    "prefix": "jira",
    "description": "Create and modify issues in a JIRA instance",
    "body": [
      "community.general.jira:",
      "\toperation: ${1:attach|comment|create|edit|fetch|link|search|transition|update|worklog}",
      "\turi: ${2:}",
      "\t#account_id: ${3:}",
      "\t#assignee: ${4:}",
      "\t#attachment: ${5:}",
      "\t#comment: ${6:}",
      "\t#comment_visibility: ${7:}",
      "\t#description: ${8:}",
      "\t#fields: ${9:{\\}}",
      "\t#inwardissue: ${10:}",
      "\t#issue: ${11:}",
      "\t#issuetype: ${12:}",
      "\t#jql: ${13:}",
      "\t#linktype: ${14:}",
      "\t#maxresults: ${15:}",
      "\t#outwardissue: ${16:}",
      "\t#password: ${17:}",
      "\t#project: ${18:}",
      "\t#status: ${19:}",
      "\t#summary: ${20:}",
      "\t#timeout: ${21:10}",
      "\t#token: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "kdeconfig": {
    "prefix": "kdeconfig",
    "description": "Manage KDE configuration files",
    "body": [
      "community.general.kdeconfig:",
      "\tpath: ${1:}",
      "\tvalues: ${2:}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#group: ${5:}",
      "\t#kwriteconfig_path: ${6:}",
      "\t#mode: ${7:}",
      "\t#owner: ${8:}",
      "\t#selevel: ${9:}",
      "\t#serole: ${10:}",
      "\t#setype: ${11:}",
      "\t#seuser: ${12:}",
      "\t#unsafe_writes: ${13:false}"
    ]
  },
  "kernel_blacklist": {
    "prefix": "kernel_blacklist",
    "description": "Blacklist kernel modules",
    "body": [
      "community.general.kernel_blacklist:",
      "\tname: ${1:}",
      "\t#blacklist_file: ${2:/etc/modprobe.d/blacklist-ansible.conf}",
      "\t#state: ${3:absent|#present}"
    ]
  },
  "keycloak_authentication": {
    "prefix": "keycloak_authentication",
    "description": "Configure authentication in Keycloak",
    "body": [
      "community.general.keycloak_authentication:",
      "\talias: ${1:}",
      "\tauth_keycloak_url: ${2:}",
      "\trealm: ${3:}",
      "\t#auth_client_id: ${4:admin-cli}",
      "\t#auth_client_secret: ${5:}",
      "\t#auth_password: ${6:}",
      "\t#auth_realm: ${7:}",
      "\t#auth_username: ${8:}",
      "\t#authenticationExecutions: ${9:}",
      "\t#connection_timeout: ${10:10}",
      "\t#copyFrom: ${11:}",
      "\t#description: ${12:}",
      "\t#force: ${13:false}",
      "\t#http_agent: ${14:Ansible}",
      "\t#providerId: ${15:basic-flow|client-flow}",
      "\t#state: ${16:#present|absent}",
      "\t#token: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "keycloak_authentication_required_actions": {
    "prefix": "keycloak_authentication_required_actions",
    "description": "Allows administration of Keycloak authentication required actions",
    "body": [
      "community.general.keycloak_authentication_required_actions:",
      "\tauth_keycloak_url: ${1:}",
      "\trealm: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#auth_client_id: ${4:admin-cli}",
      "\t#auth_client_secret: ${5:}",
      "\t#auth_password: ${6:}",
      "\t#auth_realm: ${7:}",
      "\t#auth_username: ${8:}",
      "\t#connection_timeout: ${9:10}",
      "\t#http_agent: ${10:Ansible}",
      "\t#required_actions: ${11:}",
      "\t#token: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "keycloak_authz_authorization_scope": {
    "prefix": "keycloak_authz_authorization_scope",
    "description": "Allows administration of Keycloak client authorization scopes via Keycloak API",
    "body": [
      "community.general.keycloak_authz_authorization_scope:",
      "\tauth_keycloak_url: ${1:}",
      "\tclient_id: ${2:}",
      "\tname: ${3:}",
      "\trealm: ${4:}",
      "\t#auth_client_id: ${5:admin-cli}",
      "\t#auth_client_secret: ${6:}",
      "\t#auth_password: ${7:}",
      "\t#auth_realm: ${8:}",
      "\t#auth_username: ${9:}",
      "\t#connection_timeout: ${10:10}",
      "\t#display_name: ${11:}",
      "\t#http_agent: ${12:Ansible}",
      "\t#icon_uri: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#token: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "keycloak_authz_custom_policy": {
    "prefix": "keycloak_authz_custom_policy",
    "description": "Allows administration of Keycloak client custom Javascript policies via Keycloak API",
    "body": [
      "community.general.keycloak_authz_custom_policy:",
      "\tauth_keycloak_url: ${1:}",
      "\tclient_id: ${2:}",
      "\tname: ${3:}",
      "\tpolicy_type: ${4:}",
      "\trealm: ${5:}",
      "\t#auth_client_id: ${6:admin-cli}",
      "\t#auth_client_secret: ${7:}",
      "\t#auth_password: ${8:}",
      "\t#auth_realm: ${9:}",
      "\t#auth_username: ${10:}",
      "\t#connection_timeout: ${11:10}",
      "\t#http_agent: ${12:Ansible}",
      "\t#state: ${13:#present|absent}",
      "\t#token: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "keycloak_authz_permission": {
    "prefix": "keycloak_authz_permission",
    "description": "Allows administration of Keycloak client authorization permissions via Keycloak API",
    "body": [
      "community.general.keycloak_authz_permission:",
      "\tauth_keycloak_url: ${1:}",
      "\tclient_id: ${2:}",
      "\tname: ${3:}",
      "\tpermission_type: ${4:resource|scope}",
      "\trealm: ${5:}",
      "\t#auth_client_id: ${6:admin-cli}",
      "\t#auth_client_secret: ${7:}",
      "\t#auth_password: ${8:}",
      "\t#auth_realm: ${9:}",
      "\t#auth_username: ${10:}",
      "\t#connection_timeout: ${11:10}",
      "\t#decision_strategy: ${12:#UNANIMOUS|AFFIRMATIVE|CONSENSUS}",
      "\t#description: ${13:}",
      "\t#http_agent: ${14:Ansible}",
      "\t#policies: ${15:[]}",
      "\t#resources: ${16:[]}",
      "\t#scopes: ${17:[]}",
      "\t#state: ${18:#present|absent}",
      "\t#token: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "keycloak_authz_permission_info": {
    "prefix": "keycloak_authz_permission_info",
    "description": "Query Keycloak client authorization permissions information",
    "body": [
      "community.general.keycloak_authz_permission_info:",
      "\tauth_keycloak_url: ${1:}",
      "\tclient_id: ${2:}",
      "\tname: ${3:}",
      "\trealm: ${4:}",
      "\t#auth_client_id: ${5:admin-cli}",
      "\t#auth_client_secret: ${6:}",
      "\t#auth_password: ${7:}",
      "\t#auth_realm: ${8:}",
      "\t#auth_username: ${9:}",
      "\t#connection_timeout: ${10:10}",
      "\t#http_agent: ${11:Ansible}",
      "\t#token: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "keycloak_client": {
    "prefix": "keycloak_client",
    "description": "Allows administration of Keycloak clients via Keycloak API",
    "body": [
      "community.general.keycloak_client:",
      "\tauth_keycloak_url: ${1:}",
      "\t#admin_url: ${2:}",
      "\t#always_display_in_console: ${3:}",
      "\t#attributes: ${4:}",
      "\t#auth_client_id: ${5:admin-cli}",
      "\t#auth_client_secret: ${6:}",
      "\t#auth_password: ${7:}",
      "\t#auth_realm: ${8:}",
      "\t#auth_username: ${9:}",
      "\t#authentication_flow_binding_overrides: ${10:}",
      "\t#authorization_services_enabled: ${11:}",
      "\t#authorization_settings: ${12:}",
      "\t#base_url: ${13:}",
      "\t#bearer_only: ${14:}",
      "\t#client_authenticator_type: ${15:client-secret|client-jwt}",
      "\t#client_id: ${16:}",
      "\t#client_template: ${17:}",
      "\t#connection_timeout: ${18:10}",
      "\t#consent_required: ${19:}",
      "\t#default_client_scopes: ${20:}",
      "\t#default_roles: ${21:}",
      "\t#description: ${22:}",
      "\t#direct_access_grants_enabled: ${23:}",
      "\t#enabled: ${24:}",
      "\t#frontchannel_logout: ${25:}",
      "\t#full_scope_allowed: ${26:}",
      "\t#http_agent: ${27:Ansible}",
      "\t#id: ${28:}",
      "\t#implicit_flow_enabled: ${29:}",
      "\t#name: ${30:}",
      "\t#node_re_registration_timeout: ${31:}",
      "\t#not_before: ${32:}",
      "\t#optional_client_scopes: ${33:}",
      "\t#protocol: ${34:openid-connect|saml}",
      "\t#protocol_mappers: ${35:}",
      "\t#public_client: ${36:}",
      "\t#realm: ${37:master}",
      "\t#redirect_uris: ${38:}",
      "\t#registered_nodes: ${39:}",
      "\t#registration_access_token: ${40:}",
      "\t#root_url: ${41:}",
      "\t#secret: ${42:}",
      "\t#service_accounts_enabled: ${43:}",
      "\t#standard_flow_enabled: ${44:}",
      "\t#state: ${45:#present|absent}",
      "\t#surrogate_auth_required: ${46:}",
      "\t#token: ${47:}",
      "\t#use_template_config: ${48:}",
      "\t#use_template_mappers: ${49:}",
      "\t#use_template_scope: ${50:}",
      "\t#validate_certs: ${51:true}",
      "\t#web_origins: ${52:}"
    ]
  },
  "keycloak_client_rolemapping": {
    "prefix": "keycloak_client_rolemapping",
    "description": "Allows administration of Keycloak client_rolemapping with the Keycloak API",
    "body": [
      "community.general.keycloak_client_rolemapping:",
      "\tauth_keycloak_url: ${1:}",
      "\t#auth_client_id: ${2:admin-cli}",
      "\t#auth_client_secret: ${3:}",
      "\t#auth_password: ${4:}",
      "\t#auth_realm: ${5:}",
      "\t#auth_username: ${6:}",
      "\t#cid: ${7:}",
      "\t#client_id: ${8:}",
      "\t#connection_timeout: ${9:10}",
      "\t#gid: ${10:}",
      "\t#group_name: ${11:}",
      "\t#http_agent: ${12:Ansible}",
      "\t#parents: ${13:}",
      "\t#realm: ${14:master}",
      "\t#roles: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#token: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "keycloak_clientscope": {
    "prefix": "keycloak_clientscope",
    "description": "Allows administration of Keycloak client_scopes via Keycloak API",
    "body": [
      "community.general.keycloak_clientscope:",
      "\tauth_keycloak_url: ${1:}",
      "\t#attributes: ${2:}",
      "\t#auth_client_id: ${3:admin-cli}",
      "\t#auth_client_secret: ${4:}",
      "\t#auth_password: ${5:}",
      "\t#auth_realm: ${6:}",
      "\t#auth_username: ${7:}",
      "\t#connection_timeout: ${8:10}",
      "\t#description: ${9:}",
      "\t#http_agent: ${10:Ansible}",
      "\t#id: ${11:}",
      "\t#name: ${12:}",
      "\t#protocol: ${13:openid-connect|saml|wsfed}",
      "\t#protocol_mappers: ${14:}",
      "\t#realm: ${15:master}",
      "\t#state: ${16:#present|absent}",
      "\t#token: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "keycloak_clientscope_type": {
    "prefix": "keycloak_clientscope_type",
    "description": "Set the type of aclientscope in realm or client via Keycloak API",
    "body": [
      "community.general.keycloak_clientscope_type:",
      "\tauth_keycloak_url: ${1:}",
      "\t#auth_client_id: ${2:admin-cli}",
      "\t#auth_client_secret: ${3:}",
      "\t#auth_password: ${4:}",
      "\t#auth_realm: ${5:}",
      "\t#auth_username: ${6:}",
      "\t#client_id: ${7:}",
      "\t#connection_timeout: ${8:10}",
      "\t#default_clientscopes: ${9:}",
      "\t#http_agent: ${10:Ansible}",
      "\t#optional_clientscopes: ${11:}",
      "\t#realm: ${12:master}",
      "\t#token: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "keycloak_clientsecret_info": {
    "prefix": "keycloak_clientsecret_info",
    "description": "Retrieve client secret via Keycloak API",
    "body": [
      "community.general.keycloak_clientsecret_info:",
      "\tauth_keycloak_url: ${1:}",
      "\t#auth_client_id: ${2:admin-cli}",
      "\t#auth_client_secret: ${3:}",
      "\t#auth_password: ${4:}",
      "\t#auth_realm: ${5:}",
      "\t#auth_username: ${6:}",
      "\t#client_id: ${7:}",
      "\t#connection_timeout: ${8:10}",
      "\t#http_agent: ${9:Ansible}",
      "\t#id: ${10:}",
      "\t#realm: ${11:master}",
      "\t#token: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "keycloak_clientsecret_regenerate": {
    "prefix": "keycloak_clientsecret_regenerate",
    "description": "Regenerate Keycloak client secret via Keycloak API",
    "body": [
      "community.general.keycloak_clientsecret_regenerate:",
      "\tauth_keycloak_url: ${1:}",
      "\t#auth_client_id: ${2:admin-cli}",
      "\t#auth_client_secret: ${3:}",
      "\t#auth_password: ${4:}",
      "\t#auth_realm: ${5:}",
      "\t#auth_username: ${6:}",
      "\t#client_id: ${7:}",
      "\t#connection_timeout: ${8:10}",
      "\t#http_agent: ${9:Ansible}",
      "\t#id: ${10:}",
      "\t#realm: ${11:master}",
      "\t#token: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "keycloak_clienttemplate": {
    "prefix": "keycloak_clienttemplate",
    "description": "Allows administration of Keycloak client templates via Keycloak API",
    "body": [
      "community.general.keycloak_clienttemplate:",
      "\tauth_keycloak_url: ${1:}",
      "\t#attributes: ${2:}",
      "\t#auth_client_id: ${3:admin-cli}",
      "\t#auth_client_secret: ${4:}",
      "\t#auth_password: ${5:}",
      "\t#auth_realm: ${6:}",
      "\t#auth_username: ${7:}",
      "\t#connection_timeout: ${8:10}",
      "\t#description: ${9:}",
      "\t#full_scope_allowed: ${10:}",
      "\t#http_agent: ${11:Ansible}",
      "\t#id: ${12:}",
      "\t#name: ${13:}",
      "\t#protocol: ${14:openid-connect|saml}",
      "\t#protocol_mappers: ${15:}",
      "\t#realm: ${16:master}",
      "\t#state: ${17:#present|absent}",
      "\t#token: ${18:}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "keycloak_component_info": {
    "prefix": "keycloak_component_info",
    "description": "Retrive component info in Keycloak",
    "body": [
      "community.general.keycloak_component_info:",
      "\tauth_keycloak_url: ${1:}",
      "\trealm: ${2:}",
      "\t#auth_client_id: ${3:admin-cli}",
      "\t#auth_client_secret: ${4:}",
      "\t#auth_password: ${5:}",
      "\t#auth_realm: ${6:}",
      "\t#auth_username: ${7:}",
      "\t#connection_timeout: ${8:10}",
      "\t#http_agent: ${9:Ansible}",
      "\t#name: ${10:}",
      "\t#parent_id: ${11:}",
      "\t#provider_type: ${12:}",
      "\t#token: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "keycloak_group": {
    "prefix": "keycloak_group",
    "description": "Allows administration of Keycloak groups via Keycloak API",
    "body": [
      "community.general.keycloak_group:",
      "\tauth_keycloak_url: ${1:}",
      "\t#attributes: ${2:}",
      "\t#auth_client_id: ${3:admin-cli}",
      "\t#auth_client_secret: ${4:}",
      "\t#auth_password: ${5:}",
      "\t#auth_realm: ${6:}",
      "\t#auth_username: ${7:}",
      "\t#connection_timeout: ${8:10}",
      "\t#http_agent: ${9:Ansible}",
      "\t#id: ${10:}",
      "\t#name: ${11:}",
      "\t#parents: ${12:}",
      "\t#realm: ${13:master}",
      "\t#state: ${14:#present|absent}",
      "\t#token: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "keycloak_identity_provider": {
    "prefix": "keycloak_identity_provider",
    "description": "Allows administration of Keycloak identity providers via Keycloak API",
    "body": [
      "community.general.keycloak_identity_provider:",
      "\talias: ${1:}",
      "\tauth_keycloak_url: ${2:}",
      "\t#add_read_token_role_on_create: ${3:}",
      "\t#auth_client_id: ${4:admin-cli}",
      "\t#auth_client_secret: ${5:}",
      "\t#auth_password: ${6:}",
      "\t#auth_realm: ${7:}",
      "\t#auth_username: ${8:}",
      "\t#authenticate_by_default: ${9:}",
      "\t#config: ${10:}",
      "\t#connection_timeout: ${11:10}",
      "\t#display_name: ${12:}",
      "\t#enabled: ${13:}",
      "\t#first_broker_login_flow_alias: ${14:}",
      "\t#http_agent: ${15:Ansible}",
      "\t#link_only: ${16:}",
      "\t#mappers: ${17:}",
      "\t#post_broker_login_flow_alias: ${18:}",
      "\t#provider_id: ${19:}",
      "\t#realm: ${20:master}",
      "\t#state: ${21:#present|absent}",
      "\t#store_token: ${22:}",
      "\t#token: ${23:}",
      "\t#trust_email: ${24:}",
      "\t#validate_certs: ${25:true}"
    ]
  },
  "keycloak_realm": {
    "prefix": "keycloak_realm",
    "description": "Allows administration of Keycloak realm via Keycloak API",
    "body": [
      "community.general.keycloak_realm:",
      "\tauth_keycloak_url: ${1:}",
      "\t#access_code_lifespan: ${2:}",
      "\t#access_code_lifespan_login: ${3:}",
      "\t#access_code_lifespan_user_action: ${4:}",
      "\t#access_token_lifespan: ${5:}",
      "\t#access_token_lifespan_for_implicit_flow: ${6:}",
      "\t#account_theme: ${7:}",
      "\t#action_token_generated_by_admin_lifespan: ${8:}",
      "\t#action_token_generated_by_user_lifespan: ${9:}",
      "\t#admin_events_details_enabled: ${10:}",
      "\t#admin_events_enabled: ${11:}",
      "\t#admin_theme: ${12:}",
      "\t#attributes: ${13:}",
      "\t#auth_client_id: ${14:admin-cli}",
      "\t#auth_client_secret: ${15:}",
      "\t#auth_password: ${16:}",
      "\t#auth_realm: ${17:}",
      "\t#auth_username: ${18:}",
      "\t#browser_flow: ${19:}",
      "\t#browser_security_headers: ${20:}",
      "\t#brute_force_protected: ${21:}",
      "\t#client_authentication_flow: ${22:}",
      "\t#client_scope_mappings: ${23:}",
      "\t#connection_timeout: ${24:10}",
      "\t#default_default_client_scopes: ${25:}",
      "\t#default_groups: ${26:}",
      "\t#default_locale: ${27:}",
      "\t#default_optional_client_scopes: ${28:}",
      "\t#default_roles: ${29:}",
      "\t#default_signature_algorithm: ${30:}",
      "\t#direct_grant_flow: ${31:}",
      "\t#display_name: ${32:}",
      "\t#display_name_html: ${33:}",
      "\t#docker_authentication_flow: ${34:}",
      "\t#duplicate_emails_allowed: ${35:}",
      "\t#edit_username_allowed: ${36:}",
      "\t#email_theme: ${37:}",
      "\t#enabled: ${38:}",
      "\t#enabled_event_types: ${39:}",
      "\t#events_enabled: ${40:}",
      "\t#events_expiration: ${41:}",
      "\t#events_listeners: ${42:}",
      "\t#failure_factor: ${43:}",
      "\t#http_agent: ${44:Ansible}",
      "\t#id: ${45:}",
      "\t#internationalization_enabled: ${46:}",
      "\t#login_theme: ${47:}",
      "\t#login_with_email_allowed: ${48:}",
      "\t#max_delta_time_seconds: ${49:}",
      "\t#max_failure_wait_seconds: ${50:}",
      "\t#minimum_quick_login_wait_seconds: ${51:}",
      "\t#not_before: ${52:}",
      "\t#offline_session_idle_timeout: ${53:}",
      "\t#offline_session_max_lifespan: ${54:}",
      "\t#offline_session_max_lifespan_enabled: ${55:}",
      "\t#otp_policy_algorithm: ${56:}",
      "\t#otp_policy_digits: ${57:}",
      "\t#otp_policy_initial_counter: ${58:}",
      "\t#otp_policy_look_ahead_window: ${59:}",
      "\t#otp_policy_period: ${60:}",
      "\t#otp_policy_type: ${61:}",
      "\t#otp_supported_applications: ${62:}",
      "\t#password_policy: ${63:}",
      "\t#permanent_lockout: ${64:}",
      "\t#quick_login_check_milli_seconds: ${65:}",
      "\t#realm: ${66:}",
      "\t#refresh_token_max_reuse: ${67:}",
      "\t#registration_allowed: ${68:}",
      "\t#registration_email_as_username: ${69:}",
      "\t#registration_flow: ${70:}",
      "\t#remember_me: ${71:}",
      "\t#reset_credentials_flow: ${72:}",
      "\t#reset_password_allowed: ${73:}",
      "\t#revoke_refresh_token: ${74:}",
      "\t#smtp_server: ${75:}",
      "\t#ssl_required: ${76:all|external|none}",
      "\t#sso_session_idle_timeout: ${77:}",
      "\t#sso_session_idle_timeout_remember_me: ${78:}",
      "\t#sso_session_max_lifespan: ${79:}",
      "\t#sso_session_max_lifespan_remember_me: ${80:}",
      "\t#state: ${81:#present|absent}",
      "\t#supported_locales: ${82:}",
      "\t#token: ${83:}",
      "\t#user_managed_access_allowed: ${84:}",
      "\t#validate_certs: ${85:true}",
      "\t#verify_email: ${86:}",
      "\t#wait_increment_seconds: ${87:}"
    ]
  },
  "keycloak_realm_info": {
    "prefix": "keycloak_realm_info",
    "description": "Allows obtaining Keycloak realm public information via Keycloak API",
    "body": [
      "community.general.keycloak_realm_info:",
      "\tauth_keycloak_url: ${1:}",
      "\t#realm: ${2:master}",
      "\t#validate_certs: ${3:true}"
    ]
  },
  "keycloak_realm_key": {
    "prefix": "keycloak_realm_key",
    "description": "Allows administration of Keycloak realm keys via Keycloak API",
    "body": [
      "community.general.keycloak_realm_key:",
      "\tauth_keycloak_url: ${1:}",
      "\tname: ${2:}",
      "\tparent_id: ${3:}",
      "\t#auth_client_id: ${4:admin-cli}",
      "\t#auth_client_secret: ${5:}",
      "\t#auth_password: ${6:}",
      "\t#auth_realm: ${7:}",
      "\t#auth_username: ${8:}",
      "\t#config: ${9:}",
      "\t#connection_timeout: ${10:10}",
      "\t#force: ${11:false}",
      "\t#http_agent: ${12:Ansible}",
      "\t#provider_id: ${13:#rsa|rsa-enc}",
      "\t#state: ${14:#present|absent}",
      "\t#token: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "keycloak_realm_rolemapping": {
    "prefix": "keycloak_realm_rolemapping",
    "description": "Allows administration of Keycloak realm role mappings into groups with the Keycloak API",
    "body": [
      "community.general.keycloak_realm_rolemapping:",
      "\tauth_keycloak_url: ${1:}",
      "\t#auth_client_id: ${2:admin-cli}",
      "\t#auth_client_secret: ${3:}",
      "\t#auth_password: ${4:}",
      "\t#auth_realm: ${5:}",
      "\t#auth_username: ${6:}",
      "\t#connection_timeout: ${7:10}",
      "\t#gid: ${8:}",
      "\t#group_name: ${9:}",
      "\t#http_agent: ${10:Ansible}",
      "\t#parents: ${11:}",
      "\t#realm: ${12:master}",
      "\t#roles: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#token: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "keycloak_role": {
    "prefix": "keycloak_role",
    "description": "Allows administration of Keycloak roles via Keycloak API",
    "body": [
      "community.general.keycloak_role:",
      "\tauth_keycloak_url: ${1:}",
      "\tname: ${2:}",
      "\t#attributes: ${3:}",
      "\t#auth_client_id: ${4:admin-cli}",
      "\t#auth_client_secret: ${5:}",
      "\t#auth_password: ${6:}",
      "\t#auth_realm: ${7:}",
      "\t#auth_username: ${8:}",
      "\t#client_id: ${9:}",
      "\t#composite: ${10:false}",
      "\t#composites: ${11:[]}",
      "\t#connection_timeout: ${12:10}",
      "\t#description: ${13:}",
      "\t#http_agent: ${14:Ansible}",
      "\t#realm: ${15:master}",
      "\t#state: ${16:#present|absent}",
      "\t#token: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "keycloak_user": {
    "prefix": "keycloak_user",
    "description": "Create and configure a user in Keycloak",
    "body": [
      "community.general.keycloak_user:",
      "\tauth_keycloak_url: ${1:}",
      "\tusername: ${2:}",
      "\t#access: ${3:}",
      "\t#attributes: ${4:}",
      "\t#auth_client_id: ${5:admin-cli}",
      "\t#auth_client_secret: ${6:}",
      "\t#auth_password: ${7:}",
      "\t#auth_realm: ${8:}",
      "\t#auth_username: ${9:}",
      "\t#client_consents: ${10:[]}",
      "\t#connection_timeout: ${11:10}",
      "\t#credentials: ${12:[]}",
      "\t#disableable_credential_types: ${13:[]}",
      "\t#email: ${14:}",
      "\t#email_verified: ${15:false}",
      "\t#enabled: ${16:}",
      "\t#federated_identities: ${17:[]}",
      "\t#federation_link: ${18:}",
      "\t#first_name: ${19:}",
      "\t#force: ${20:false}",
      "\t#groups: ${21:[]}",
      "\t#http_agent: ${22:Ansible}",
      "\t#id: ${23:}",
      "\t#last_name: ${24:}",
      "\t#origin: ${25:}",
      "\t#realm: ${26:master}",
      "\t#required_actions: ${27:[]}",
      "\t#self: ${28:}",
      "\t#service_account_client_id: ${29:}",
      "\t#state: ${30:#present|absent}",
      "\t#token: ${31:}",
      "\t#validate_certs: ${32:true}"
    ]
  },
  "keycloak_user_federation": {
    "prefix": "keycloak_user_federation",
    "description": "Allows administration of Keycloak user federations via Keycloak API",
    "body": [
      "community.general.keycloak_user_federation:",
      "\tauth_keycloak_url: ${1:}",
      "\t#auth_client_id: ${2:admin-cli}",
      "\t#auth_client_secret: ${3:}",
      "\t#auth_password: ${4:}",
      "\t#auth_realm: ${5:}",
      "\t#auth_username: ${6:}",
      "\t#config: ${7:}",
      "\t#connection_timeout: ${8:10}",
      "\t#http_agent: ${9:Ansible}",
      "\t#id: ${10:}",
      "\t#mappers: ${11:}",
      "\t#name: ${12:}",
      "\t#parent_id: ${13:}",
      "\t#provider_id: ${14:}",
      "\t#provider_type: ${15:org.keycloak.storage.UserStorageProvider}",
      "\t#realm: ${16:master}",
      "\t#state: ${17:#present|absent}",
      "\t#token: ${18:}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "keycloak_user_rolemapping": {
    "prefix": "keycloak_user_rolemapping",
    "description": "Allows administration of Keycloak user_rolemapping with the Keycloak API",
    "body": [
      "community.general.keycloak_user_rolemapping:",
      "\tauth_keycloak_url: ${1:}",
      "\t#auth_client_id: ${2:admin-cli}",
      "\t#auth_client_secret: ${3:}",
      "\t#auth_password: ${4:}",
      "\t#auth_realm: ${5:}",
      "\t#auth_username: ${6:}",
      "\t#cid: ${7:}",
      "\t#client_id: ${8:}",
      "\t#connection_timeout: ${9:10}",
      "\t#http_agent: ${10:Ansible}",
      "\t#realm: ${11:master}",
      "\t#roles: ${12:}",
      "\t#service_account_user_client_id: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#target_username: ${15:}",
      "\t#token: ${16:}",
      "\t#uid: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "keyring": {
    "prefix": "keyring",
    "description": "Set or delete a passphrase using the Operating System's native keyring",
    "body": [
      "community.general.keyring:",
      "\tkeyring_password: ${1:}",
      "\tservice: ${2:}",
      "\tusername: ${3:}",
      "\t#state: ${4:#present|absent}",
      "\t#user_password: ${5:}"
    ]
  },
  "keyring_info": {
    "prefix": "keyring_info",
    "description": "Get a passphrase using the Operating System's native keyring",
    "body": [
      "community.general.keyring_info:",
      "\tkeyring_password: ${1:}",
      "\tservice: ${2:}",
      "\tusername: ${3:}"
    ]
  },
  "kibana_plugin": {
    "prefix": "kibana_plugin",
    "description": "Manage Kibana plugins",
    "body": [
      "community.general.kibana_plugin:",
      "\tname: ${1:}",
      "\t#allow_root: ${2:false}",
      "\t#force: ${3:false}",
      "\t#plugin_bin: ${4:/opt/kibana/bin/kibana}",
      "\t#plugin_dir: ${5:/opt/kibana/installedPlugins/}",
      "\t#state: ${6:#present|absent}",
      "\t#timeout: ${7:1m}",
      "\t#url: ${8:}",
      "\t#version: ${9:}"
    ]
  },
  "launchd": {
    "prefix": "launchd",
    "description": "Manage macOS services",
    "body": [
      "community.general.launchd:",
      "\tname: ${1:}",
      "\t#enabled: ${2:}",
      "\t#force_stop: ${3:false}",
      "\t#state: ${4:reloaded|restarted|started|stopped|unloaded}"
    ]
  },
  "layman": {
    "prefix": "layman",
    "description": "Manage Gentoo overlays",
    "body": [
      "community.general.layman:",
      "\tname: ${1:}",
      "\t#list_url: ${2:}",
      "\t#state: ${3:#present|absent|updated}",
      "\t#validate_certs: ${4:true}"
    ]
  },
  "lbu": {
    "prefix": "lbu",
    "description": "Local Backup Utility for Alpine Linux",
    "body": [
      "community.general.lbu:",
      "\t#commit: ${1:}",
      "\t#exclude: ${2:}",
      "\t#include: ${3:}"
    ]
  },
  "ldap_attrs": {
    "prefix": "ldap_attrs",
    "description": "Add or remove multiple LDAP attribute values",
    "body": [
      "community.general.ldap_attrs:",
      "\tattributes: ${1:}",
      "\tdn: ${2:}",
      "\t#bind_dn: ${3:}",
      "\t#bind_pw: ${4:\"\"}",
      "\t#ca_path: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#ordered: ${8:false}",
      "\t#referrals_chasing: ${9:disabled|#anonymous}",
      "\t#sasl_class: ${10:#external|gssapi}",
      "\t#server_uri: ${11:ldapi:///}",
      "\t#start_tls: ${12:false}",
      "\t#state: ${13:#present|absent|exact}",
      "\t#validate_certs: ${14:true}",
      "\t#xorder_discovery: ${15:enable|#auto|disable}"
    ]
  },
  "ldap_entry": {
    "prefix": "ldap_entry",
    "description": "Add or remove LDAP entries",
    "body": [
      "community.general.ldap_entry:",
      "\tdn: ${1:}",
      "\t#attributes: ${2:{\\}}",
      "\t#bind_dn: ${3:}",
      "\t#bind_pw: ${4:\"\"}",
      "\t#ca_path: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#objectClass: ${8:}",
      "\t#recursive: ${9:false}",
      "\t#referrals_chasing: ${10:disabled|#anonymous}",
      "\t#sasl_class: ${11:#external|gssapi}",
      "\t#server_uri: ${12:ldapi:///}",
      "\t#start_tls: ${13:false}",
      "\t#state: ${14:#present|absent}",
      "\t#validate_certs: ${15:true}",
      "\t#xorder_discovery: ${16:enable|#auto|disable}"
    ]
  },
  "ldap_passwd": {
    "prefix": "ldap_passwd",
    "description": "Set passwords in LDAP",
    "body": [
      "community.general.ldap_passwd:",
      "\tdn: ${1:}",
      "\t#bind_dn: ${2:}",
      "\t#bind_pw: ${3:\"\"}",
      "\t#ca_path: ${4:}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#passwd: ${7:}",
      "\t#referrals_chasing: ${8:disabled|#anonymous}",
      "\t#sasl_class: ${9:#external|gssapi}",
      "\t#server_uri: ${10:ldapi:///}",
      "\t#start_tls: ${11:false}",
      "\t#validate_certs: ${12:true}",
      "\t#xorder_discovery: ${13:enable|#auto|disable}"
    ]
  },
  "ldap_search": {
    "prefix": "ldap_search",
    "description": "Search for entries in a LDAP server",
    "body": [
      "community.general.ldap_search:",
      "\tdn: ${1:}",
      "\t#attrs: ${2:}",
      "\t#base64_attributes: ${3:}",
      "\t#bind_dn: ${4:}",
      "\t#bind_pw: ${5:\"\"}",
      "\t#ca_path: ${6:}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#filter: ${9:(objectClass=*)}",
      "\t#page_size: ${10:0}",
      "\t#referrals_chasing: ${11:disabled|#anonymous}",
      "\t#sasl_class: ${12:#external|gssapi}",
      "\t#schema: ${13:false}",
      "\t#scope: ${14:#base|onelevel|subordinate|children}",
      "\t#server_uri: ${15:ldapi:///}",
      "\t#start_tls: ${16:false}",
      "\t#validate_certs: ${17:true}",
      "\t#xorder_discovery: ${18:enable|#auto|disable}"
    ]
  },
  "librato_annotation": {
    "prefix": "librato_annotation",
    "description": "Create an annotation in librato",
    "body": [
      "community.general.librato_annotation:",
      "\tapi_key: ${1:}",
      "\ttitle: ${2:}",
      "\tuser: ${3:}",
      "\t#description: ${4:}",
      "\t#end_time: ${5:}",
      "\t#links: ${6:}",
      "\t#name: ${7:}",
      "\t#source: ${8:}",
      "\t#start_time: ${9:}"
    ]
  },
  "linode": {
    "prefix": "linode",
    "description": "Manage instances on the Linode Public Cloud",
    "body": [
      "community.general.linode:",
      "\tapi_key: ${1:}",
      "\tname: ${2:}",
      "\t#additional_disks: ${3:}",
      "\t#alert_bwin_enabled: ${4:}",
      "\t#alert_bwin_threshold: ${5:}",
      "\t#alert_bwout_enabled: ${6:}",
      "\t#alert_bwout_threshold: ${7:}",
      "\t#alert_bwquota_enabled: ${8:}",
      "\t#alert_bwquota_threshold: ${9:}",
      "\t#alert_cpu_enabled: ${10:}",
      "\t#alert_cpu_threshold: ${11:}",
      "\t#alert_diskio_enabled: ${12:}",
      "\t#alert_diskio_threshold: ${13:}",
      "\t#backupweeklyday: ${14:}",
      "\t#backupwindow: ${15:}",
      "\t#datacenter: ${16:}",
      "\t#displaygroup: ${17:\"\"}",
      "\t#distribution: ${18:}",
      "\t#kernel_id: ${19:}",
      "\t#linode_id: ${20:}",
      "\t#password: ${21:}",
      "\t#payment_term: ${22:#1|12|24}",
      "\t#plan: ${23:}",
      "\t#private_ip: ${24:}",
      "\t#ssh_pub_key: ${25:}",
      "\t#state: ${26:absent|active|deleted|#present|restarted|started|stopped}",
      "\t#swap: ${27:512}",
      "\t#wait: ${28:true}",
      "\t#wait_timeout: ${29:300}",
      "\t#watchdog: ${30:true}"
    ]
  },
  "linode_v4": {
    "prefix": "linode_v4",
    "description": "Manage instances on the Linode cloud",
    "body": [
      "community.general.linode_v4:",
      "\taccess_token: ${1:}",
      "\tlabel: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#authorized_keys: ${4:}",
      "\t#group: ${5:}",
      "\t#image: ${6:}",
      "\t#private_ip: ${7:false}",
      "\t#region: ${8:}",
      "\t#root_pass: ${9:}",
      "\t#stackscript_data: ${10:}",
      "\t#stackscript_id: ${11:}",
      "\t#tags: ${12:}",
      "\t#type: ${13:}"
    ]
  },
  "listen_ports_facts": {
    "prefix": "listen_ports_facts",
    "description": "Gather facts on processes listening on TCP and UDP ports",
    "body": [
      "community.general.listen_ports_facts:",
      "\t#command: ${1:netstat|ss}",
      "\t#include_non_listening: ${2:false}"
    ]
  },
  "lldp": {
    "prefix": "lldp",
    "description": "Get details reported by lldp",
    "body": "community.general.lldp:"
  },
  "locale_gen": {
    "prefix": "locale_gen",
    "description": "Creates or removes locales",
    "body": [
      "community.general.locale_gen:",
      "\tname: ${1:}",
      "\t#state: ${2:absent|#present}"
    ]
  },
  "logentries": {
    "prefix": "logentries",
    "description": "Module for tracking logs via logentries.com",
    "body": [
      "community.general.logentries:",
      "\tpath: ${1:}",
      "\t#logtype: ${2:}",
      "\t#name: ${3:}",
      "\t#state: ${4:#present|absent|followed|unfollowed}"
    ]
  },
  "logentries_msg": {
    "prefix": "logentries_msg",
    "description": "Send a message to logentries",
    "body": [
      "community.general.logentries_msg:",
      "\tmsg: ${1:}",
      "\ttoken: ${2:}",
      "\t#api: ${3:data.logentries.com}",
      "\t#port: ${4:80}"
    ]
  },
  "logstash_plugin": {
    "prefix": "logstash_plugin",
    "description": "Manage Logstash plugins",
    "body": [
      "community.general.logstash_plugin:",
      "\tname: ${1:}",
      "\t#plugin_bin: ${2:/usr/share/logstash/bin/logstash-plugin}",
      "\t#proxy_host: ${3:}",
      "\t#proxy_port: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#version: ${6:}"
    ]
  },
  "lvg": {
    "prefix": "lvg",
    "description": "Configure LVM volume groups",
    "body": [
      "community.general.lvg:",
      "\tvg: ${1:}",
      "\t#force: ${2:false}",
      "\t#pesize: ${3:4}",
      "\t#pv_options: ${4:\"\"}",
      "\t#pvresize: ${5:false}",
      "\t#pvs: ${6:}",
      "\t#reset_pv_uuid: ${7:false}",
      "\t#reset_vg_uuid: ${8:false}",
      "\t#state: ${9:absent|#present|active|inactive}",
      "\t#vg_options: ${10:\"\"}"
    ]
  },
  "lvg_rename": {
    "prefix": "lvg_rename",
    "description": "Renames LVM volume groups",
    "body": [
      "community.general.lvg_rename:",
      "\tvg: ${1:}",
      "\tvg_new: ${2:}"
    ]
  },
  "lvol": {
    "prefix": "lvol",
    "description": "Configure LVM logical volumes",
    "body": [
      "community.general.lvol:",
      "\tvg: ${1:}",
      "\t#active: ${2:true}",
      "\t#force: ${3:false}",
      "\t#lv: ${4:}",
      "\t#opts: ${5:}",
      "\t#pvs: ${6:}",
      "\t#resizefs: ${7:false}",
      "\t#shrink: ${8:true}",
      "\t#size: ${9:}",
      "\t#snapshot: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#thinpool: ${12:}"
    ]
  },
  "lxc_container": {
    "prefix": "lxc_container",
    "description": "Manage LXC Containers",
    "body": [
      "community.general.lxc_container:",
      "\tname: ${1:}",
      "\t#archive: ${2:false}",
      "\t#archive_compression: ${3:#gzip|bzip2|none}",
      "\t#archive_path: ${4:}",
      "\t#backing_store: ${5:#dir|lvm|loop|btrfs|overlayfs|zfs}",
      "\t#clone_name: ${6:}",
      "\t#clone_snapshot: ${7:false}",
      "\t#config: ${8:}",
      "\t#container_command: ${9:}",
      "\t#container_config: ${10:}",
      "\t#container_log: ${11:false}",
      "\t#container_log_level: ${12:Info|info|#INFO|Error|error|ERROR|Debug|debug|DEBUG}",
      "\t#directory: ${13:}",
      "\t#fs_size: ${14:5G}",
      "\t#fs_type: ${15:ext4}",
      "\t#lv_name: ${16:}",
      "\t#lxc_path: ${17:}",
      "\t#state: ${18:#started|stopped|restarted|absent|frozen|clone}",
      "\t#template: ${19:ubuntu}",
      "\t#template_options: ${20:}",
      "\t#thinpool: ${21:}",
      "\t#vg_name: ${22:lxc}",
      "\t#zfs_root: ${23:}"
    ]
  },
  "lxca_cmms": {
    "prefix": "lxca_cmms",
    "description": "Custom module for lxca cmms inventory utility",
    "body": [
      "community.general.lxca_cmms:",
      "\tauth_url: ${1:}",
      "\tlogin_password: ${2:}",
      "\tlogin_user: ${3:}",
      "\t#chassis: ${4:}",
      "\t#command_options: ${5:#cmms|cmms_by_uuid|cmms_by_chassis_uuid}",
      "\t#uuid: ${6:}"
    ]
  },
  "lxca_nodes": {
    "prefix": "lxca_nodes",
    "description": "Custom module for lxca nodes inventory utility",
    "body": [
      "community.general.lxca_nodes:",
      "\tauth_url: ${1:}",
      "\tlogin_password: ${2:}",
      "\tlogin_user: ${3:}",
      "\t#chassis: ${4:}",
      "\t#command_options: ${5:#nodes|nodes_by_uuid|nodes_by_chassis_uuid|nodes_status_managed|nodes_status_unmanaged}",
      "\t#uuid: ${6:}"
    ]
  },
  "lxd_container": {
    "prefix": "lxd_container",
    "description": "Manage LXD instances",
    "body": [
      "community.general.lxd_container:",
      "\tname: ${1:}",
      "\t#architecture: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#config: ${5:}",
      "\t#devices: ${6:}",
      "\t#ephemeral: ${7:}",
      "\t#force_stop: ${8:false}",
      "\t#ignore_volatile_options: ${9:false}",
      "\t#profiles: ${10:}",
      "\t#project: ${11:}",
      "\t#snap_url: ${12:unix:/var/snap/lxd/common/lxd/unix.socket}",
      "\t#source: ${13:}",
      "\t#state: ${14:#started|stopped|restarted|absent|frozen}",
      "\t#target: ${15:}",
      "\t#timeout: ${16:30}",
      "\t#trust_password: ${17:}",
      "\t#type: ${18:#container|virtual-machine}",
      "\t#url: ${19:unix:/var/lib/lxd/unix.socket}",
      "\t#wait_for_container: ${20:false}",
      "\t#wait_for_ipv4_addresses: ${21:false}"
    ]
  },
  "lxd_profile": {
    "prefix": "lxd_profile",
    "description": "Manage LXD profiles",
    "body": [
      "community.general.lxd_profile:",
      "\tname: ${1:}",
      "\t#client_cert: ${2:}",
      "\t#client_key: ${3:}",
      "\t#config: ${4:}",
      "\t#description: ${5:}",
      "\t#devices: ${6:}",
      "\t#merge_profile: ${7:false}",
      "\t#new_name: ${8:}",
      "\t#project: ${9:}",
      "\t#snap_url: ${10:unix:/var/snap/lxd/common/lxd/unix.socket}",
      "\t#state: ${11:#present|absent}",
      "\t#trust_password: ${12:}",
      "\t#url: ${13:unix:/var/lib/lxd/unix.socket}"
    ]
  },
  "lxd_project": {
    "prefix": "lxd_project",
    "description": "Manage LXD projects",
    "body": [
      "community.general.lxd_project:",
      "\tname: ${1:}",
      "\t#client_cert: ${2:}",
      "\t#client_key: ${3:}",
      "\t#config: ${4:}",
      "\t#description: ${5:}",
      "\t#merge_project: ${6:false}",
      "\t#new_name: ${7:}",
      "\t#snap_url: ${8:unix:/var/snap/lxd/common/lxd/unix.socket}",
      "\t#state: ${9:#present|absent}",
      "\t#trust_password: ${10:}",
      "\t#url: ${11:unix:/var/lib/lxd/unix.socket}"
    ]
  },
  "macports": {
    "prefix": "macports",
    "description": "Package manager for MacPorts",
    "body": [
      "community.general.macports:",
      "\t#name: ${1:}",
      "\t#selfupdate: ${2:false}",
      "\t#state: ${3:#present|absent|active|inactive|installed|removed}",
      "\t#upgrade: ${4:false}",
      "\t#variant: ${5:}"
    ]
  },
  "mail": {
    "prefix": "mail",
    "description": "Send an email",
    "body": [
      "community.general.mail:",
      "\tsubject: ${1:}",
      "\t#attach: ${2:[]}",
      "\t#bcc: ${3:[]}",
      "\t#body: ${4:}",
      "\t#cc: ${5:[]}",
      "\t#charset: ${6:utf-8}",
      "\t#ehlohost: ${7:}",
      "\t#headers: ${8:[]}",
      "\t#host: ${9:localhost}",
      "\t#message_id_domain: ${10:ansible}",
      "\t#password: ${11:}",
      "\t#port: ${12:25}",
      "\t#secure: ${13:always|never|starttls|#try}",
      "\t#sender: ${14:root}",
      "\t#subtype: ${15:html|#plain}",
      "\t#timeout: ${16:20}",
      "\t#to: ${17:root}",
      "\t#username: ${18:}"
    ]
  },
  "make": {
    "prefix": "make",
    "description": "Run targets in a Makefile",
    "body": [
      "community.general.make:",
      "\tchdir: ${1:}",
      "\t#file: ${2:}",
      "\t#jobs: ${3:}",
      "\t#make: ${4:}",
      "\t#params: ${5:}",
      "\t#target: ${6:}",
      "\t#targets: ${7:}"
    ]
  },
  "manageiq_alert_profiles": {
    "prefix": "manageiq_alert_profiles",
    "description": "Configuration of alert profiles for ManageIQ",
    "body": [
      "community.general.manageiq_alert_profiles:",
      "\t#alerts: ${1:}",
      "\t#manageiq_connection: ${2:}",
      "\t#name: ${3:}",
      "\t#notes: ${4:}",
      "\t#resource_type: ${5:Vm|ContainerNode|MiqServer|Host|Storage|EmsCluster|ExtManagementSystem|MiddlewareServer}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "manageiq_alerts": {
    "prefix": "manageiq_alerts",
    "description": "Configuration of alerts in ManageIQ",
    "body": [
      "community.general.manageiq_alerts:",
      "\t#description: ${1:}",
      "\t#enabled: ${2:}",
      "\t#expression: ${3:}",
      "\t#expression_type: ${4:#hash|miq}",
      "\t#manageiq_connection: ${5:}",
      "\t#options: ${6:}",
      "\t#resource_type: ${7:Vm|ContainerNode|MiqServer|Host|Storage|EmsCluster|ExtManagementSystem|MiddlewareServer}",
      "\t#state: ${8:absent|#present}"
    ]
  },
  "manageiq_group": {
    "prefix": "manageiq_group",
    "description": "Management of groups in ManageIQ",
    "body": [
      "community.general.manageiq_group:",
      "\tdescription: ${1:}",
      "\t#belongsto_filters: ${2:}",
      "\t#belongsto_filters_merge_mode: ${3:merge|#replace}",
      "\t#managed_filters: ${4:}",
      "\t#managed_filters_merge_mode: ${5:merge|#replace}",
      "\t#manageiq_connection: ${6:}",
      "\t#role: ${7:}",
      "\t#role_id: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#tenant: ${10:}",
      "\t#tenant_id: ${11:}"
    ]
  },
  "manageiq_policies": {
    "prefix": "manageiq_policies",
    "description": "Management of resource policy_profiles in ManageIQ",
    "body": [
      "community.general.manageiq_policies:",
      "\tresource_type: ${1:provider|host|vm|blueprint|category|cluster|data store|group|resource pool|service|service template|template|tenant|user}",
      "\t#manageiq_connection: ${2:}",
      "\t#policy_profiles: ${3:}",
      "\t#resource_id: ${4:}",
      "\t#resource_name: ${5:}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "manageiq_policies_info": {
    "prefix": "manageiq_policies_info",
    "description": "Listing of resource policy_profiles in ManageIQ",
    "body": [
      "community.general.manageiq_policies_info:",
      "\tresource_type: ${1:provider|host|vm|blueprint|category|cluster|data store|group|resource pool|service|service template|template|tenant|user}",
      "\t#manageiq_connection: ${2:}",
      "\t#resource_id: ${3:}",
      "\t#resource_name: ${4:}"
    ]
  },
  "manageiq_provider": {
    "prefix": "manageiq_provider",
    "description": "Management of provider in ManageIQ",
    "body": [
      "community.general.manageiq_provider:",
      "\tname: ${1:}",
      "\t#alerts: ${2:}",
      "\t#api_version: ${3:v2|v3}",
      "\t#azure_tenant_id: ${4:}",
      "\t#host_default_vnc_port_end: ${5:}",
      "\t#host_default_vnc_port_start: ${6:}",
      "\t#manageiq_connection: ${7:}",
      "\t#metrics: ${8:}",
      "\t#project: ${9:}",
      "\t#provider: ${10:}",
      "\t#provider_region: ${11:}",
      "\t#ssh_keypair: ${12:}",
      "\t#state: ${13:absent|#present|refresh}",
      "\t#subscription: ${14:}",
      "\t#tenant_mapping_enabled: ${15:false}",
      "\t#type: ${16:Openshift|Amazon|oVirt|VMware|Azure|Director|OpenStack|GCE}",
      "\t#zone: ${17:default}"
    ]
  },
  "manageiq_tags": {
    "prefix": "manageiq_tags",
    "description": "Management of resource tags in ManageIQ",
    "body": [
      "community.general.manageiq_tags:",
      "\tresource_type: ${1:provider|host|vm|blueprint|category|cluster|data store|group|resource pool|service|service template|template|tenant|user}",
      "\t#manageiq_connection: ${2:}",
      "\t#resource_id: ${3:}",
      "\t#resource_name: ${4:}",
      "\t#state: ${5:absent|#present}",
      "\t#tags: ${6:}"
    ]
  },
  "manageiq_tags_info": {
    "prefix": "manageiq_tags_info",
    "description": "Retrieve resource tags in ManageIQ",
    "body": [
      "community.general.manageiq_tags_info:",
      "\tresource_type: ${1:provider|host|vm|blueprint|category|cluster|data store|group|resource pool|service|service template|template|tenant|user}",
      "\t#manageiq_connection: ${2:}",
      "\t#resource_id: ${3:}",
      "\t#resource_name: ${4:}"
    ]
  },
  "manageiq_tenant": {
    "prefix": "manageiq_tenant",
    "description": "Management of tenants in ManageIQ",
    "body": [
      "community.general.manageiq_tenant:",
      "\tdescription: ${1:}",
      "\tname: ${2:}",
      "\t#manageiq_connection: ${3:}",
      "\t#parent: ${4:}",
      "\t#parent_id: ${5:}",
      "\t#quotas: ${6:{\\}}",
      "\t#state: ${7:absent|#present}"
    ]
  },
  "manageiq_user": {
    "prefix": "manageiq_user",
    "description": "Management of users in ManageIQ",
    "body": [
      "community.general.manageiq_user:",
      "\tuserid: ${1:}",
      "\t#email: ${2:}",
      "\t#group: ${3:}",
      "\t#manageiq_connection: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#state: ${7:absent|#present}",
      "\t#update_password: ${8:#always|on_create}"
    ]
  },
  "mas": {
    "prefix": "mas",
    "description": "Manage Mac App Store applications with mas-cli",
    "body": [
      "community.general.mas:",
      "\t#id: ${1:}",
      "\t#state: ${2:absent|latest|#present}",
      "\t#upgrade_all: ${3:false}"
    ]
  },
  "matrix": {
    "prefix": "matrix",
    "description": "Send notifications to matrix",
    "body": [
      "community.general.matrix:",
      "\ths_url: ${1:}",
      "\tmsg_html: ${2:}",
      "\tmsg_plain: ${3:}",
      "\troom_id: ${4:}",
      "\t#password: ${5:}",
      "\t#token: ${6:}",
      "\t#user_id: ${7:}"
    ]
  },
  "mattermost": {
    "prefix": "mattermost",
    "description": "Send Mattermost notifications",
    "body": [
      "community.general.mattermost:",
      "\tapi_key: ${1:}",
      "\turl: ${2:}",
      "\t#attachments: ${3:}",
      "\t#channel: ${4:}",
      "\t#icon_url: ${5:https://docs.ansible.com/favicon.ico}",
      "\t#text: ${6:}",
      "\t#username: ${7:Ansible}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "maven_artifact": {
    "prefix": "maven_artifact",
    "description": "Downloads an Artifact from a Maven Repository",
    "body": [
      "community.general.maven_artifact:",
      "\tartifact_id: ${1:}",
      "\tdest: ${2:}",
      "\tgroup_id: ${3:}",
      "\t#attributes: ${4:}",
      "\t#checksum_alg: ${5:#md5|sha1}",
      "\t#classifier: ${6:\"\"}",
      "\t#client_cert: ${7:}",
      "\t#client_key: ${8:}",
      "\t#directory_mode: ${9:}",
      "\t#extension: ${10:jar}",
      "\t#force_basic_auth: ${11:false}",
      "\t#group: ${12:}",
      "\t#headers: ${13:}",
      "\t#keep_name: ${14:false}",
      "\t#mode: ${15:}",
      "\t#owner: ${16:}",
      "\t#password: ${17:}",
      "\t#repository_url: ${18:https://repo1.maven.org/maven2}",
      "\t#selevel: ${19:}",
      "\t#serole: ${20:}",
      "\t#setype: ${21:}",
      "\t#seuser: ${22:}",
      "\t#state: ${23:#present|absent}",
      "\t#timeout: ${24:10}",
      "\t#unredirected_headers: ${25:}",
      "\t#unsafe_writes: ${26:false}",
      "\t#username: ${27:}",
      "\t#validate_certs: ${28:true}",
      "\t#verify_checksum: ${29:never|#download|change|always}",
      "\t#version: ${30:}",
      "\t#version_by_spec: ${31:}"
    ]
  },
  "memset_dns_reload": {
    "prefix": "memset_dns_reload",
    "description": "Request reload of Memset's DNS infrastructure,",
    "body": [
      "community.general.memset_dns_reload:",
      "\tapi_key: ${1:}",
      "\t#poll: ${2:false}"
    ]
  },
  "memset_memstore_info": {
    "prefix": "memset_memstore_info",
    "description": "Retrieve Memstore product usage information",
    "body": [
      "community.general.memset_memstore_info:",
      "\tapi_key: ${1:}",
      "\tname: ${2:}"
    ]
  },
  "memset_server_info": {
    "prefix": "memset_server_info",
    "description": "Retrieve server information",
    "body": [
      "community.general.memset_server_info:",
      "\tapi_key: ${1:}",
      "\tname: ${2:}"
    ]
  },
  "memset_zone": {
    "prefix": "memset_zone",
    "description": "Creates and deletes Memset DNS zones",
    "body": [
      "community.general.memset_zone:",
      "\tapi_key: ${1:}",
      "\tname: ${2:}",
      "\tstate: ${3:absent|present}",
      "\t#force: ${4:false}",
      "\t#ttl: ${5:#0|300|600|900|1800|3600|7200|10800|21600|43200|86400}"
    ]
  },
  "memset_zone_domain": {
    "prefix": "memset_zone_domain",
    "description": "Create and delete domains in Memset DNS zones",
    "body": [
      "community.general.memset_zone_domain:",
      "\tapi_key: ${1:}",
      "\tdomain: ${2:}",
      "\tzone: ${3:}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "memset_zone_record": {
    "prefix": "memset_zone_record",
    "description": "Create and delete records in Memset DNS zones",
    "body": [
      "community.general.memset_zone_record:",
      "\taddress: ${1:}",
      "\tapi_key: ${2:}",
      "\ttype: ${3:A|AAAA|CNAME|MX|NS|SRV|TXT}",
      "\tzone: ${4:}",
      "\t#priority: ${5:0}",
      "\t#record: ${6:\"\"}",
      "\t#relative: ${7:false}",
      "\t#state: ${8:absent|#present}",
      "\t#ttl: ${9:#0|300|600|900|1800|3600|7200|10800|21600|43200|86400}"
    ]
  },
  "mksysb": {
    "prefix": "mksysb",
    "description": "Generates AIX mksysb rootvg backups",
    "body": [
      "community.general.mksysb:",
      "\tname: ${1:}",
      "\tstorage_path: ${2:}",
      "\t#backup_crypt_files: ${3:true}",
      "\t#backup_dmapi_fs: ${4:true}",
      "\t#create_map_files: ${5:false}",
      "\t#exclude_files: ${6:false}",
      "\t#exclude_wpar_files: ${7:false}",
      "\t#extended_attrs: ${8:true}",
      "\t#new_image_data: ${9:true}",
      "\t#software_packing: ${10:false}",
      "\t#use_snapshot: ${11:false}"
    ]
  },
  "modprobe": {
    "prefix": "modprobe",
    "description": "Load or unload kernel modules",
    "body": [
      "community.general.modprobe:",
      "\tname: ${1:}",
      "\t#params: ${2:\"\"}",
      "\t#persistent: ${3:#disabled|absent|present}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "monit": {
    "prefix": "monit",
    "description": "Manage the state of a program monitored via Monit",
    "body": [
      "community.general.monit:",
      "\tname: ${1:}",
      "\tstate: ${2:present|started|stopped|restarted|monitored|unmonitored|reloaded}",
      "\t#timeout: ${3:300}"
    ]
  },
  "mqtt": {
    "prefix": "mqtt",
    "description": "Publish a message on an MQTT topic for the IoT",
    "body": [
      "community.general.mqtt:",
      "\tpayload: ${1:}",
      "\ttopic: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_id: ${5:}",
      "\t#client_key: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:1883}",
      "\t#qos: ${9:#0|1|2}",
      "\t#retain: ${10:false}",
      "\t#server: ${11:localhost}",
      "\t#tls_version: ${12:tlsv1.1|tlsv1.2}",
      "\t#username: ${13:}"
    ]
  },
  "mssql_db": {
    "prefix": "mssql_db",
    "description": "Add or remove MSSQL databases from a remote host",
    "body": [
      "community.general.mssql_db:",
      "\tlogin_host: ${1:}",
      "\tname: ${2:}",
      "\t#autocommit: ${3:false}",
      "\t#login_password: ${4:\"\"}",
      "\t#login_port: ${5:1433}",
      "\t#login_user: ${6:\"\"}",
      "\t#state: ${7:#present|absent|import}",
      "\t#target: ${8:}"
    ]
  },
  "mssql_script": {
    "prefix": "mssql_script",
    "description": "Execute SQL scripts on a MSSQL database",
    "body": [
      "community.general.mssql_script:",
      "\tlogin_host: ${1:}",
      "\tscript: ${2:}",
      "\t#login_password: ${3:}",
      "\t#login_port: ${4:1433}",
      "\t#login_user: ${5:}",
      "\t#name: ${6:\"\"}",
      "\t#output: ${7:dict|#default}",
      "\t#params: ${8:}"
    ]
  },
  "nagios": {
    "prefix": "nagios",
    "description": "Perform common tasks in Nagios related to downtime and notifications",
    "body": [
      "community.general.nagios:",
      "\taction: ${1:downtime|delete_downtime|enable_alerts|disable_alerts|silence|unsilence|silence_nagios|unsilence_nagios|command|servicegroup_service_downtime|servicegroup_host_downtime|acknowledge|forced_check}",
      "\t#author: ${2:Ansible}",
      "\t#cmdfile: ${3:}",
      "\t#command: ${4:}",
      "\t#comment: ${5:Scheduling downtime}",
      "\t#host: ${6:}",
      "\t#minutes: ${7:30}",
      "\t#servicegroup: ${8:}",
      "\t#services: ${9:}",
      "\t#start: ${10:}"
    ]
  },
  "netcup_dns": {
    "prefix": "netcup_dns",
    "description": "Manage Netcup DNS records",
    "body": [
      "community.general.netcup_dns:",
      "\tapi_key: ${1:}",
      "\tapi_password: ${2:}",
      "\tcustomer_id: ${3:}",
      "\tdomain: ${4:}",
      "\ttype: ${5:A|AAAA|MX|CNAME|CAA|SRV|TXT|TLSA|NS|DS|OPENPGPKEY|SMIMEA|SSHFP}",
      "\tvalue: ${6:}",
      "\t#priority: ${7:}",
      "\t#record: ${8:@}",
      "\t#solo: ${9:false}",
      "\t#state: ${10:#present|absent}",
      "\t#timeout: ${11:5}"
    ]
  },
  "newrelic_deployment": {
    "prefix": "newrelic_deployment",
    "description": "Notify New Relic about app deployments",
    "body": [
      "community.general.newrelic_deployment:",
      "\trevision: ${1:}",
      "\ttoken: ${2:}",
      "\t#app_name: ${3:}",
      "\t#app_name_exact_match: ${4:false}",
      "\t#application_id: ${5:}",
      "\t#changelog: ${6:}",
      "\t#description: ${7:}",
      "\t#user: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "nexmo": {
    "prefix": "nexmo",
    "description": "Send a SMS via nexmo",
    "body": [
      "community.general.nexmo:",
      "\tapi_key: ${1:}",
      "\tapi_secret: ${2:}",
      "\tdest: ${3:}",
      "\tmsg: ${4:}",
      "\tsrc: ${5:}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#force: ${8:false}",
      "\t#force_basic_auth: ${9:false}",
      "\t#http_agent: ${10:ansible-httpget}",
      "\t#url: ${11:}",
      "\t#url_password: ${12:}",
      "\t#url_username: ${13:}",
      "\t#use_gssapi: ${14:false}",
      "\t#use_proxy: ${15:true}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "nginx_status_info": {
    "prefix": "nginx_status_info",
    "description": "Retrieve information on nginx status",
    "body": [
      "community.general.nginx_status_info:",
      "\turl: ${1:}",
      "\t#timeout: ${2:10}"
    ]
  },
  "nictagadm": {
    "prefix": "nictagadm",
    "description": "Manage nic tags on SmartOS systems",
    "body": [
      "community.general.nictagadm:",
      "\tname: ${1:}",
      "\t#etherstub: ${2:false}",
      "\t#force: ${3:false}",
      "\t#mac: ${4:}",
      "\t#mtu: ${5:}",
      "\t#state: ${6:absent|#present}"
    ]
  },
  "nmcli": {
    "prefix": "nmcli",
    "description": "Manage Networking",
    "body": [
      "community.general.nmcli:",
      "\tconn_name: ${1:}",
      "\tstate: ${2:absent|present}",
      "\t#addr_gen_mode6: ${3:default|default-or-eui64|eui64|stable-privacy}",
      "\t#ageingtime: ${4:300}",
      "\t#arp_interval: ${5:}",
      "\t#arp_ip_target: ${6:}",
      "\t#autoconnect: ${7:true}",
      "\t#dhcp_client_id: ${8:}",
      "\t#dns4: ${9:}",
      "\t#dns4_ignore_auto: ${10:false}",
      "\t#dns4_options: ${11:}",
      "\t#dns4_search: ${12:}",
      "\t#dns6: ${13:}",
      "\t#dns6_ignore_auto: ${14:false}",
      "\t#dns6_options: ${15:}",
      "\t#dns6_search: ${16:}",
      "\t#downdelay: ${17:}",
      "\t#egress: ${18:}",
      "\t#flags: ${19:}",
      "\t#forwarddelay: ${20:15}",
      "\t#gsm: ${21:}",
      "\t#gw4: ${22:}",
      "\t#gw4_ignore_auto: ${23:false}",
      "\t#gw6: ${24:}",
      "\t#gw6_ignore_auto: ${25:false}",
      "\t#hairpin: ${26:false}",
      "\t#hellotime: ${27:2}",
      "\t#ifname: ${28:}",
      "\t#ignore_unsupported_suboptions: ${29:false}",
      "\t#ingress: ${30:}",
      "\t#ip4: ${31:}",
      "\t#ip6: ${32:}",
      "\t#ip_privacy6: ${33:disabled|prefer-public-addr|prefer-temp-addr|unknown}",
      "\t#ip_tunnel_dev: ${34:}",
      "\t#ip_tunnel_input_key: ${35:}",
      "\t#ip_tunnel_local: ${36:}",
      "\t#ip_tunnel_output_key: ${37:}",
      "\t#ip_tunnel_remote: ${38:}",
      "\t#mac: ${39:}",
      "\t#macvlan: ${40:}",
      "\t#master: ${41:}",
      "\t#maxage: ${42:20}",
      "\t#may_fail4: ${43:true}",
      "\t#method4: ${44:auto|link-local|manual|shared|disabled}",
      "\t#method6: ${45:ignore|auto|dhcp|link-local|manual|shared|disabled}",
      "\t#miimon: ${46:}",
      "\t#mode: ${47:802.3ad|active-backup|balance-alb|#balance-rr|balance-tlb|balance-xor|broadcast}",
      "\t#mtu: ${48:}",
      "\t#never_default4: ${49:false}",
      "\t#path_cost: ${50:100}",
      "\t#primary: ${51:}",
      "\t#priority: ${52:128}",
      "\t#route_metric4: ${53:}",
      "\t#route_metric6: ${54:}",
      "\t#routes4: ${55:}",
      "\t#routes4_extended: ${56:}",
      "\t#routes6: ${57:}",
      "\t#routes6_extended: ${58:}",
      "\t#routing_rules4: ${59:}",
      "\t#runner: ${60:broadcast|#roundrobin|activebackup|loadbalance|lacp}",
      "\t#runner_fast_rate: ${61:}",
      "\t#runner_hwaddr_policy: ${62:same_all|by_active|only_active}",
      "\t#slave_type: ${63:bond|bridge|team}",
      "\t#slavepriority: ${64:32}",
      "\t#ssid: ${65:}",
      "\t#stp: ${66:true}",
      "\t#transport_mode: ${67:datagram|connected}",
      "\t#type: ${68:bond|bond-slave|bridge|bridge-slave|dummy|ethernet|generic|gre|infiniband|ipip|macvlan|sit|team|team-slave|vlan|vxlan|wifi|gsm|wireguard|vpn|loopback}",
      "\t#updelay: ${69:}",
      "\t#vlandev: ${70:}",
      "\t#vlanid: ${71:}",
      "\t#vpn: ${72:}",
      "\t#vxlan_id: ${73:}",
      "\t#vxlan_local: ${74:}",
      "\t#vxlan_remote: ${75:}",
      "\t#wifi: ${76:}",
      "\t#wifi_sec: ${77:}",
      "\t#wireguard: ${78:}",
      "\t#xmit_hash_policy: ${79:}",
      "\t#zone: ${80:}"
    ]
  },
  "nomad_job": {
    "prefix": "nomad_job",
    "description": "Launch a Nomad Job",
    "body": [
      "community.general.nomad_job:",
      "\thost: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#content: ${5:}",
      "\t#content_format: ${6:#hcl|json}",
      "\t#force_start: ${7:false}",
      "\t#name: ${8:}",
      "\t#namespace: ${9:}",
      "\t#port: ${10:4646}",
      "\t#timeout: ${11:5}",
      "\t#token: ${12:}",
      "\t#use_ssl: ${13:true}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "nomad_job_info": {
    "prefix": "nomad_job_info",
    "description": "Get Nomad Jobs info",
    "body": [
      "community.general.nomad_job_info:",
      "\thost: ${1:}",
      "\t#client_cert: ${2:}",
      "\t#client_key: ${3:}",
      "\t#name: ${4:}",
      "\t#namespace: ${5:}",
      "\t#port: ${6:4646}",
      "\t#timeout: ${7:5}",
      "\t#token: ${8:}",
      "\t#use_ssl: ${9:true}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "nomad_token": {
    "prefix": "nomad_token",
    "description": "Manage Nomad ACL tokens",
    "body": [
      "community.general.nomad_token:",
      "\thost: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#global_replicated: ${5:false}",
      "\t#name: ${6:}",
      "\t#namespace: ${7:}",
      "\t#policies: ${8:[]}",
      "\t#port: ${9:4646}",
      "\t#timeout: ${10:5}",
      "\t#token: ${11:}",
      "\t#token_type: ${12:#client|management|bootstrap}",
      "\t#use_ssl: ${13:true}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "nosh": {
    "prefix": "nosh",
    "description": "Manage services with nosh",
    "body": [
      "community.general.nosh:",
      "\tname: ${1:}",
      "\t#enabled: ${2:}",
      "\t#preset: ${3:}",
      "\t#state: ${4:started|stopped|reset|restarted|reloaded}",
      "\t#user: ${5:false}"
    ]
  },
  "npm": {
    "prefix": "npm",
    "description": "Manage node.js packages with npm",
    "body": [
      "community.general.npm:",
      "\t#ci: ${1:false}",
      "\t#executable: ${2:}",
      "\t#global: ${3:false}",
      "\t#ignore_scripts: ${4:false}",
      "\t#name: ${5:}",
      "\t#no_bin_links: ${6:false}",
      "\t#no_optional: ${7:false}",
      "\t#path: ${8:}",
      "\t#production: ${9:false}",
      "\t#registry: ${10:}",
      "\t#state: ${11:#present|absent|latest}",
      "\t#unsafe_perm: ${12:false}",
      "\t#version: ${13:}"
    ]
  },
  "nsupdate": {
    "prefix": "nsupdate",
    "description": "Manage DNS records",
    "body": [
      "community.general.nsupdate:",
      "\trecord: ${1:}",
      "\tserver: ${2:}",
      "\t#key_algorithm: ${3:HMAC-MD5.SIG-ALG.REG.INT|#hmac-md5|hmac-sha1|hmac-sha224|hmac-sha256|hmac-sha384|hmac-sha512}",
      "\t#key_name: ${4:}",
      "\t#key_secret: ${5:}",
      "\t#port: ${6:53}",
      "\t#protocol: ${7:#tcp|udp}",
      "\t#state: ${8:#present|absent}",
      "\t#ttl: ${9:3600}",
      "\t#type: ${10:A}",
      "\t#value: ${11:}",
      "\t#zone: ${12:}"
    ]
  },
  "ocapi_command": {
    "prefix": "ocapi_command",
    "description": "Manages Out-Of-Band controllers using Open Composable API (OCAPI)",
    "body": [
      "community.general.ocapi_command:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\t#job_name: ${6:}",
      "\t#proxy_slot_number: ${7:}",
      "\t#timeout: ${8:10}",
      "\t#update_image_path: ${9:}"
    ]
  },
  "ocapi_info": {
    "prefix": "ocapi_info",
    "description": "Manages Out-Of-Band controllers using Open Composable API (OCAPI)",
    "body": [
      "community.general.ocapi_info:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\tpassword: ${4:}",
      "\tusername: ${5:}",
      "\t#job_name: ${6:}",
      "\t#proxy_slot_number: ${7:}",
      "\t#timeout: ${8:10}"
    ]
  },
  "oci_vcn": {
    "prefix": "oci_vcn",
    "description": "Manage Virtual Cloud Networks(VCN) in OCI",
    "body": [
      "community.general.oci_vcn:",
      "\t#api_user: ${1:}",
      "\t#api_user_fingerprint: ${2:}",
      "\t#api_user_key_file: ${3:}",
      "\t#api_user_key_pass_phrase: ${4:}",
      "\t#auth_type: ${5:#api_key|instance_principal}",
      "\t#cidr_block: ${6:}",
      "\t#compartment_id: ${7:}",
      "\t#config_file_location: ${8:}",
      "\t#config_profile_name: ${9:DEFAULT}",
      "\t#defined_tags: ${10:}",
      "\t#display_name: ${11:}",
      "\t#dns_label: ${12:}",
      "\t#force_create: ${13:false}",
      "\t#freeform_tags: ${14:}",
      "\t#key_by: ${15:}",
      "\t#region: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#tenancy: ${18:}",
      "\t#vcn_id: ${19:}",
      "\t#wait: ${20:true}",
      "\t#wait_timeout: ${21:1200}",
      "\t#wait_until: ${22:}"
    ]
  },
  "odbc": {
    "prefix": "odbc",
    "description": "Execute SQL via ODBC",
    "body": [
      "community.general.odbc:",
      "\tdsn: ${1:}",
      "\tquery: ${2:}",
      "\t#commit: ${3:true}",
      "\t#params: ${4:}"
    ]
  },
  "office_365_connector_card": {
    "prefix": "office_365_connector_card",
    "description": "Use webhooks to create Connector Card messages within an Office 365 group",
    "body": [
      "community.general.office_365_connector_card:",
      "\twebhook: ${1:}",
      "\t#actions: ${2:}",
      "\t#color: ${3:}",
      "\t#sections: ${4:}",
      "\t#summary: ${5:}",
      "\t#text: ${6:}",
      "\t#title: ${7:}"
    ]
  },
  "ohai": {
    "prefix": "ohai",
    "description": "Returns inventory data from I(Ohai)",
    "body": "community.general.ohai:"
  },
  "omapi_host": {
    "prefix": "omapi_host",
    "description": "Setup OMAPI hosts",
    "body": [
      "community.general.omapi_host:",
      "\tkey: ${1:}",
      "\tkey_name: ${2:}",
      "\tmacaddr: ${3:}",
      "\tstate: ${4:absent|present}",
      "\t#ddns: ${5:false}",
      "\t#host: ${6:localhost}",
      "\t#hostname: ${7:}",
      "\t#ip: ${8:}",
      "\t#port: ${9:7911}",
      "\t#statements: ${10:[]}"
    ]
  },
  "one_host": {
    "prefix": "one_host",
    "description": "Manages OpenNebula Hosts",
    "body": [
      "community.general.one_host:",
      "\tname: ${1:}",
      "\t#api_password: ${2:}",
      "\t#api_url: ${3:}",
      "\t#api_username: ${4:}",
      "\t#cluster_id: ${5:0}",
      "\t#cluster_name: ${6:}",
      "\t#im_mad_name: ${7:kvm}",
      "\t#labels: ${8:}",
      "\t#state: ${9:absent|#present|enabled|disabled|offline}",
      "\t#template: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#vmm_mad_name: ${12:kvm}",
      "\t#wait_timeout: ${13:300}"
    ]
  },
  "one_image": {
    "prefix": "one_image",
    "description": "Manages OpenNebula images",
    "body": [
      "community.general.one_image:",
      "\t#api_password: ${1:}",
      "\t#api_url: ${2:}",
      "\t#api_username: ${3:}",
      "\t#enabled: ${4:}",
      "\t#id: ${5:}",
      "\t#name: ${6:}",
      "\t#new_name: ${7:}",
      "\t#state: ${8:#present|absent|cloned|renamed}"
    ]
  },
  "one_image_info": {
    "prefix": "one_image_info",
    "description": "Gather information on OpenNebula images",
    "body": [
      "community.general.one_image_info:",
      "\t#api_password: ${1:}",
      "\t#api_url: ${2:}",
      "\t#api_username: ${3:}",
      "\t#ids: ${4:}",
      "\t#name: ${5:}"
    ]
  },
  "one_service": {
    "prefix": "one_service",
    "description": "Deploy and manage OpenNebula services",
    "body": [
      "community.general.one_service:",
      "\t#api_password: ${1:}",
      "\t#api_url: ${2:}",
      "\t#api_username: ${3:}",
      "\t#cardinality: ${4:}",
      "\t#custom_attrs: ${5:{\\}}",
      "\t#force: ${6:false}",
      "\t#group_id: ${7:}",
      "\t#mode: ${8:}",
      "\t#owner_id: ${9:}",
      "\t#role: ${10:}",
      "\t#service_id: ${11:}",
      "\t#service_name: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#template_id: ${14:}",
      "\t#template_name: ${15:}",
      "\t#unique: ${16:false}",
      "\t#wait: ${17:false}",
      "\t#wait_timeout: ${18:300}"
    ]
  },
  "one_template": {
    "prefix": "one_template",
    "description": "Manages OpenNebula templates",
    "body": [
      "community.general.one_template:",
      "\t#api_password: ${1:}",
      "\t#api_url: ${2:}",
      "\t#api_username: ${3:}",
      "\t#id: ${4:}",
      "\t#name: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#template: ${7:}",
      "\t#validate_certs: ${8:true}",
      "\t#wait_timeout: ${9:300}"
    ]
  },
  "one_vm": {
    "prefix": "one_vm",
    "description": "Creates or terminates OpenNebula instances",
    "body": [
      "community.general.one_vm:",
      "\t#api_password: ${1:}",
      "\t#api_url: ${2:}",
      "\t#api_username: ${3:}",
      "\t#attributes: ${4:{\\}}",
      "\t#count: ${5:1}",
      "\t#count_attributes: ${6:}",
      "\t#count_labels: ${7:}",
      "\t#cpu: ${8:}",
      "\t#datastore_id: ${9:}",
      "\t#datastore_name: ${10:}",
      "\t#disk_saveas: ${11:}",
      "\t#disk_size: ${12:}",
      "\t#exact_count: ${13:}",
      "\t#group_id: ${14:}",
      "\t#hard: ${15:false}",
      "\t#instance_ids: ${16:}",
      "\t#labels: ${17:[]}",
      "\t#memory: ${18:}",
      "\t#mode: ${19:}",
      "\t#networks: ${20:[]}",
      "\t#owner_id: ${21:}",
      "\t#persistent: ${22:false}",
      "\t#state: ${23:#present|absent|running|rebooted|poweredoff}",
      "\t#template_id: ${24:}",
      "\t#template_name: ${25:}",
      "\t#updateconf: ${26:}",
      "\t#vcpu: ${27:}",
      "\t#vm_start_on_hold: ${28:false}",
      "\t#wait: ${29:true}",
      "\t#wait_timeout: ${30:300}"
    ]
  },
  "oneandone_firewall_policy": {
    "prefix": "oneandone_firewall_policy",
    "description": "Configure 1&1 firewall policy",
    "body": [
      "community.general.oneandone_firewall_policy:",
      "\t#add_rules: ${1:[]}",
      "\t#add_server_ips: ${2:[]}",
      "\t#api_url: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#description: ${5:}",
      "\t#firewall_policy: ${6:}",
      "\t#name: ${7:}",
      "\t#remove_rules: ${8:[]}",
      "\t#remove_server_ips: ${9:[]}",
      "\t#rules: ${10:[]}",
      "\t#state: ${11:#present|absent|update}",
      "\t#wait: ${12:true}",
      "\t#wait_interval: ${13:5}",
      "\t#wait_timeout: ${14:600}"
    ]
  },
  "oneandone_load_balancer": {
    "prefix": "oneandone_load_balancer",
    "description": "Configure 1&1 load balancer",
    "body": [
      "community.general.oneandone_load_balancer:",
      "\t#add_rules: ${1:[]}",
      "\t#add_server_ips: ${2:[]}",
      "\t#api_url: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#datacenter: ${5:US|ES|DE|GB}",
      "\t#description: ${6:}",
      "\t#health_check_interval: ${7:}",
      "\t#health_check_parse: ${8:}",
      "\t#health_check_path: ${9:}",
      "\t#health_check_test: ${10:NONE|TCP|HTTP|ICMP}",
      "\t#load_balancer: ${11:}",
      "\t#method: ${12:ROUND_ROBIN|LEAST_CONNECTIONS}",
      "\t#name: ${13:}",
      "\t#persistence: ${14:}",
      "\t#persistence_time: ${15:}",
      "\t#remove_rules: ${16:[]}",
      "\t#remove_server_ips: ${17:[]}",
      "\t#rules: ${18:[]}",
      "\t#state: ${19:#present|absent|update}",
      "\t#wait: ${20:true}",
      "\t#wait_interval: ${21:5}",
      "\t#wait_timeout: ${22:600}"
    ]
  },
  "oneandone_monitoring_policy": {
    "prefix": "oneandone_monitoring_policy",
    "description": "Configure 1&1 monitoring policy",
    "body": [
      "community.general.oneandone_monitoring_policy:",
      "\t#add_ports: ${1:[]}",
      "\t#add_processes: ${2:[]}",
      "\t#add_servers: ${3:[]}",
      "\t#agent: ${4:}",
      "\t#api_url: ${5:}",
      "\t#auth_token: ${6:}",
      "\t#description: ${7:}",
      "\t#email: ${8:}",
      "\t#monitoring_policy: ${9:}",
      "\t#name: ${10:}",
      "\t#ports: ${11:[]}",
      "\t#processes: ${12:[]}",
      "\t#remove_ports: ${13:[]}",
      "\t#remove_processes: ${14:[]}",
      "\t#remove_servers: ${15:[]}",
      "\t#state: ${16:#present|absent|update}",
      "\t#thresholds: ${17:[]}",
      "\t#update_ports: ${18:[]}",
      "\t#update_processes: ${19:[]}",
      "\t#wait: ${20:true}",
      "\t#wait_interval: ${21:5}",
      "\t#wait_timeout: ${22:600}"
    ]
  },
  "oneandone_private_network": {
    "prefix": "oneandone_private_network",
    "description": "Configure 1&1 private networking",
    "body": [
      "community.general.oneandone_private_network:",
      "\t#add_members: ${1:[]}",
      "\t#api_url: ${2:}",
      "\t#auth_token: ${3:}",
      "\t#datacenter: ${4:US|ES|DE|GB}",
      "\t#description: ${5:}",
      "\t#name: ${6:}",
      "\t#network_address: ${7:}",
      "\t#private_network: ${8:}",
      "\t#remove_members: ${9:[]}",
      "\t#state: ${10:#present|absent|update}",
      "\t#subnet_mask: ${11:}",
      "\t#wait: ${12:true}",
      "\t#wait_interval: ${13:5}",
      "\t#wait_timeout: ${14:600}"
    ]
  },
  "oneandone_public_ip": {
    "prefix": "oneandone_public_ip",
    "description": "Configure 1&1 public IPs",
    "body": [
      "community.general.oneandone_public_ip:",
      "\t#api_url: ${1:}",
      "\t#auth_token: ${2:}",
      "\t#datacenter: ${3:#US|ES|DE|GB}",
      "\t#public_ip_id: ${4:}",
      "\t#reverse_dns: ${5:}",
      "\t#state: ${6:#present|absent|update}",
      "\t#type: ${7:#IPV4|IPV6}",
      "\t#wait: ${8:true}",
      "\t#wait_interval: ${9:5}",
      "\t#wait_timeout: ${10:600}"
    ]
  },
  "oneandone_server": {
    "prefix": "oneandone_server",
    "description": "Create, destroy, start, stop, and reboot a 1&1 Host server",
    "body": [
      "community.general.oneandone_server:",
      "\t#api_url: ${1:}",
      "\t#appliance: ${2:}",
      "\t#auth_token: ${3:}",
      "\t#auto_increment: ${4:true}",
      "\t#cores_per_processor: ${5:}",
      "\t#count: ${6:1}",
      "\t#datacenter: ${7:#US|ES|DE|GB}",
      "\t#description: ${8:}",
      "\t#firewall_policy: ${9:}",
      "\t#fixed_instance_size: ${10:}",
      "\t#hdds: ${11:}",
      "\t#hostname: ${12:}",
      "\t#load_balancer: ${13:}",
      "\t#monitoring_policy: ${14:}",
      "\t#private_network: ${15:}",
      "\t#ram: ${16:}",
      "\t#server: ${17:}",
      "\t#server_type: ${18:#cloud|baremetal|k8s_node}",
      "\t#ssh_key: ${19:}",
      "\t#state: ${20:#present|absent|running|stopped}",
      "\t#vcore: ${21:}",
      "\t#wait: ${22:true}",
      "\t#wait_interval: ${23:5}",
      "\t#wait_timeout: ${24:600}"
    ]
  },
  "onepassword_info": {
    "prefix": "onepassword_info",
    "description": "Gather items from 1Password",
    "body": [
      "community.general.onepassword_info:",
      "\tsearch_terms: ${1:}",
      "\t#auto_login: ${2:}",
      "\t#cli_path: ${3:op}"
    ]
  },
  "oneview_datacenter_info": {
    "prefix": "oneview_datacenter_info",
    "description": "Retrieve information about the OneView Data Centers",
    "body": [
      "community.general.oneview_datacenter_info:",
      "\t#api_version: ${1:}",
      "\t#config: ${2:}",
      "\t#hostname: ${3:}",
      "\t#image_streamer_hostname: ${4:}",
      "\t#name: ${5:}",
      "\t#options: ${6:}",
      "\t#params: ${7:}",
      "\t#password: ${8:}",
      "\t#username: ${9:}"
    ]
  },
  "oneview_enclosure_info": {
    "prefix": "oneview_enclosure_info",
    "description": "Retrieve information about one or more Enclosures",
    "body": [
      "community.general.oneview_enclosure_info:",
      "\t#api_version: ${1:}",
      "\t#config: ${2:}",
      "\t#hostname: ${3:}",
      "\t#image_streamer_hostname: ${4:}",
      "\t#name: ${5:}",
      "\t#options: ${6:}",
      "\t#params: ${7:}",
      "\t#password: ${8:}",
      "\t#username: ${9:}"
    ]
  },
  "oneview_ethernet_network": {
    "prefix": "oneview_ethernet_network",
    "description": "Manage OneView Ethernet Network resources",
    "body": [
      "community.general.oneview_ethernet_network:",
      "\tdata: ${1:}",
      "\t#api_version: ${2:}",
      "\t#config: ${3:}",
      "\t#hostname: ${4:}",
      "\t#image_streamer_hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#state: ${7:#present|absent|default_bandwidth_reset}",
      "\t#username: ${8:}",
      "\t#validate_etag: ${9:true}"
    ]
  },
  "oneview_ethernet_network_info": {
    "prefix": "oneview_ethernet_network_info",
    "description": "Retrieve the information about one or more of the OneView Ethernet Networks",
    "body": [
      "community.general.oneview_ethernet_network_info:",
      "\t#api_version: ${1:}",
      "\t#config: ${2:}",
      "\t#hostname: ${3:}",
      "\t#image_streamer_hostname: ${4:}",
      "\t#name: ${5:}",
      "\t#options: ${6:}",
      "\t#params: ${7:}",
      "\t#password: ${8:}",
      "\t#username: ${9:}"
    ]
  },
  "oneview_fc_network": {
    "prefix": "oneview_fc_network",
    "description": "Manage OneView Fibre Channel Network resources",
    "body": [
      "community.general.oneview_fc_network:",
      "\tdata: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#api_version: ${3:}",
      "\t#config: ${4:}",
      "\t#hostname: ${5:}",
      "\t#image_streamer_hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_etag: ${9:true}"
    ]
  },
  "oneview_fc_network_info": {
    "prefix": "oneview_fc_network_info",
    "description": "Retrieve the information about one or more of the OneView Fibre Channel Networks",
    "body": [
      "community.general.oneview_fc_network_info:",
      "\t#api_version: ${1:}",
      "\t#config: ${2:}",
      "\t#hostname: ${3:}",
      "\t#image_streamer_hostname: ${4:}",
      "\t#name: ${5:}",
      "\t#params: ${6:}",
      "\t#password: ${7:}",
      "\t#username: ${8:}"
    ]
  },
  "oneview_fcoe_network": {
    "prefix": "oneview_fcoe_network",
    "description": "Manage OneView FCoE Network resources",
    "body": [
      "community.general.oneview_fcoe_network:",
      "\tdata: ${1:}",
      "\t#api_version: ${2:}",
      "\t#config: ${3:}",
      "\t#hostname: ${4:}",
      "\t#image_streamer_hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#username: ${8:}",
      "\t#validate_etag: ${9:true}"
    ]
  },
  "oneview_fcoe_network_info": {
    "prefix": "oneview_fcoe_network_info",
    "description": "Retrieve the information about one or more of the OneView FCoE Networks",
    "body": [
      "community.general.oneview_fcoe_network_info:",
      "\t#api_version: ${1:}",
      "\t#config: ${2:}",
      "\t#hostname: ${3:}",
      "\t#image_streamer_hostname: ${4:}",
      "\t#name: ${5:}",
      "\t#params: ${6:}",
      "\t#password: ${7:}",
      "\t#username: ${8:}"
    ]
  },
  "oneview_logical_interconnect_group": {
    "prefix": "oneview_logical_interconnect_group",
    "description": "Manage OneView Logical Interconnect Group resources",
    "body": [
      "community.general.oneview_logical_interconnect_group:",
      "\tdata: ${1:}",
      "\t#api_version: ${2:}",
      "\t#config: ${3:}",
      "\t#hostname: ${4:}",
      "\t#image_streamer_hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#state: ${7:absent|#present}",
      "\t#username: ${8:}",
      "\t#validate_etag: ${9:true}"
    ]
  },
  "oneview_logical_interconnect_group_info": {
    "prefix": "oneview_logical_interconnect_group_info",
    "description": "Retrieve information about one or more of the OneView Logical Interconnect Groups",
    "body": [
      "community.general.oneview_logical_interconnect_group_info:",
      "\t#api_version: ${1:}",
      "\t#config: ${2:}",
      "\t#hostname: ${3:}",
      "\t#image_streamer_hostname: ${4:}",
      "\t#name: ${5:}",
      "\t#params: ${6:}",
      "\t#password: ${7:}",
      "\t#username: ${8:}"
    ]
  },
  "oneview_network_set": {
    "prefix": "oneview_network_set",
    "description": "Manage HPE OneView Network Set resources",
    "body": [
      "community.general.oneview_network_set:",
      "\tdata: ${1:}",
      "\t#api_version: ${2:}",
      "\t#config: ${3:}",
      "\t#hostname: ${4:}",
      "\t#image_streamer_hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#username: ${8:}",
      "\t#validate_etag: ${9:true}"
    ]
  },
  "oneview_network_set_info": {
    "prefix": "oneview_network_set_info",
    "description": "Retrieve information about the OneView Network Sets",
    "body": [
      "community.general.oneview_network_set_info:",
      "\t#api_version: ${1:}",
      "\t#config: ${2:}",
      "\t#hostname: ${3:}",
      "\t#image_streamer_hostname: ${4:}",
      "\t#name: ${5:}",
      "\t#options: ${6:}",
      "\t#params: ${7:}",
      "\t#password: ${8:}",
      "\t#username: ${9:}"
    ]
  },
  "oneview_san_manager": {
    "prefix": "oneview_san_manager",
    "description": "Manage OneView SAN Manager resources",
    "body": [
      "community.general.oneview_san_manager:",
      "\tdata: ${1:}",
      "\t#api_version: ${2:}",
      "\t#config: ${3:}",
      "\t#hostname: ${4:}",
      "\t#image_streamer_hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#state: ${7:#present|absent|connection_information_set}",
      "\t#username: ${8:}",
      "\t#validate_etag: ${9:true}"
    ]
  },
  "oneview_san_manager_info": {
    "prefix": "oneview_san_manager_info",
    "description": "Retrieve information about one or more of the OneView SAN Managers",
    "body": [
      "community.general.oneview_san_manager_info:",
      "\t#api_version: ${1:}",
      "\t#config: ${2:}",
      "\t#hostname: ${3:}",
      "\t#image_streamer_hostname: ${4:}",
      "\t#params: ${5:}",
      "\t#password: ${6:}",
      "\t#provider_display_name: ${7:}",
      "\t#username: ${8:}"
    ]
  },
  "online_server_info": {
    "prefix": "online_server_info",
    "description": "Gather information about Online servers",
    "body": [
      "community.general.online_server_info:",
      "\tapi_token: ${1:}",
      "\t#api_timeout: ${2:30}",
      "\t#api_url: ${3:https://api.online.net}",
      "\t#validate_certs: ${4:true}"
    ]
  },
  "online_user_info": {
    "prefix": "online_user_info",
    "description": "Gather information about Online user",
    "body": [
      "community.general.online_user_info:",
      "\tapi_token: ${1:}",
      "\t#api_timeout: ${2:30}",
      "\t#api_url: ${3:https://api.online.net}",
      "\t#validate_certs: ${4:true}"
    ]
  },
  "open_iscsi": {
    "prefix": "open_iscsi",
    "description": "Manage iSCSI targets with Open-iSCSI",
    "body": [
      "community.general.open_iscsi:",
      "\t#auto_node_startup: ${1:}",
      "\t#auto_portal_startup: ${2:}",
      "\t#discover: ${3:false}",
      "\t#login: ${4:}",
      "\t#node_auth: ${5:CHAP}",
      "\t#node_pass: ${6:}",
      "\t#node_pass_in: ${7:}",
      "\t#node_user: ${8:}",
      "\t#node_user_in: ${9:}",
      "\t#port: ${10:3260}",
      "\t#portal: ${11:}",
      "\t#rescan: ${12:false}",
      "\t#show_nodes: ${13:false}",
      "\t#target: ${14:}"
    ]
  },
  "openbsd_pkg": {
    "prefix": "openbsd_pkg",
    "description": "Manage packages on OpenBSD",
    "body": [
      "community.general.openbsd_pkg:",
      "\tname: ${1:}",
      "\t#build: ${2:false}",
      "\t#clean: ${3:false}",
      "\t#ports_dir: ${4:/usr/ports}",
      "\t#quick: ${5:false}",
      "\t#snapshot: ${6:false}",
      "\t#state: ${7:absent|latest|#present|installed|removed}"
    ]
  },
  "opendj_backendprop": {
    "prefix": "opendj_backendprop",
    "description": "Will update the backend configuration of OpenDJ via the dsconfig set-backend-prop command",
    "body": [
      "community.general.opendj_backendprop:",
      "\tbackend: ${1:}",
      "\thostname: ${2:}",
      "\tname: ${3:}",
      "\tport: ${4:}",
      "\tvalue: ${5:}",
      "\t#opendj_bindir: ${6:/opt/opendj/bin}",
      "\t#password: ${7:}",
      "\t#passwordfile: ${8:}",
      "\t#state: ${9:present}",
      "\t#username: ${10:cn=Directory Manager}"
    ]
  },
  "openwrt_init": {
    "prefix": "openwrt_init",
    "description": "Manage services on OpenWrt",
    "body": [
      "community.general.openwrt_init:",
      "\tname: ${1:}",
      "\t#enabled: ${2:}",
      "\t#pattern: ${3:}",
      "\t#state: ${4:started|stopped|restarted|reloaded}"
    ]
  },
  "opkg": {
    "prefix": "opkg",
    "description": "Package manager for OpenWrt and Openembedded/Yocto based Linux distributions",
    "body": [
      "community.general.opkg:",
      "\tname: ${1:}",
      "\t#executable: ${2:}",
      "\t#force: ${3:|depends|maintainer|reinstall|overwrite|downgrade|space|postinstall|remove|checksum|removal-of-dependent-packages}",
      "\t#state: ${4:#present|absent|installed|removed}",
      "\t#update_cache: ${5:false}"
    ]
  },
  "osx_defaults": {
    "prefix": "osx_defaults",
    "description": "Manage macOS user defaults",
    "body": [
      "community.general.osx_defaults:",
      "\t#array_add: ${1:false}",
      "\t#domain: ${2:NSGlobalDomain}",
      "\t#host: ${3:}",
      "\t#key: ${4:}",
      "\t#path: ${5:/usr/bin:/usr/local/bin}",
      "\t#state: ${6:absent|list|#present}",
      "\t#type: ${7:array|bool|boolean|date|float|int|integer|#string}",
      "\t#value: ${8:}"
    ]
  },
  "ovh_ip_failover": {
    "prefix": "ovh_ip_failover",
    "description": "Manage OVH IP failover address",
    "body": [
      "community.general.ovh_ip_failover:",
      "\tapplication_key: ${1:}",
      "\tapplication_secret: ${2:}",
      "\tconsumer_key: ${3:}",
      "\tendpoint: ${4:}",
      "\tname: ${5:}",
      "\tservice: ${6:}",
      "\t#timeout: ${7:120}",
      "\t#wait_completion: ${8:true}",
      "\t#wait_task_completion: ${9:0}"
    ]
  },
  "ovh_ip_loadbalancing_backend": {
    "prefix": "ovh_ip_loadbalancing_backend",
    "description": "Manage OVH IP LoadBalancing backends",
    "body": [
      "community.general.ovh_ip_loadbalancing_backend:",
      "\tapplication_key: ${1:}",
      "\tapplication_secret: ${2:}",
      "\tbackend: ${3:}",
      "\tconsumer_key: ${4:}",
      "\tendpoint: ${5:}",
      "\tname: ${6:}",
      "\t#probe: ${7:#none|http|icmp|oco}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:120}",
      "\t#weight: ${10:8}"
    ]
  },
  "ovh_monthly_billing": {
    "prefix": "ovh_monthly_billing",
    "description": "Manage OVH monthly billing",
    "body": [
      "community.general.ovh_monthly_billing:",
      "\tinstance_id: ${1:}",
      "\tproject_id: ${2:}",
      "\t#application_key: ${3:}",
      "\t#application_secret: ${4:}",
      "\t#consumer_key: ${5:}",
      "\t#endpoint: ${6:}"
    ]
  },
  "pacemaker_cluster": {
    "prefix": "pacemaker_cluster",
    "description": "Manage pacemaker clusters",
    "body": [
      "community.general.pacemaker_cluster:",
      "\t#force: ${1:true}",
      "\t#node: ${2:}",
      "\t#state: ${3:cleanup|offline|online|restart}",
      "\t#timeout: ${4:300}"
    ]
  },
  "packet_device": {
    "prefix": "packet_device",
    "description": "Manage a bare metal server in the Packet Host",
    "body": [
      "community.general.packet_device:",
      "\tproject_id: ${1:}",
      "\t#always_pxe: ${2:false}",
      "\t#auth_token: ${3:}",
      "\t#count: ${4:1}",
      "\t#count_offset: ${5:1}",
      "\t#device_ids: ${6:}",
      "\t#facility: ${7:}",
      "\t#features: ${8:}",
      "\t#hostnames: ${9:}",
      "\t#ipxe_script_url: ${10:\"\"}",
      "\t#locked: ${11:false}",
      "\t#operating_system: ${12:}",
      "\t#plan: ${13:}",
      "\t#state: ${14:#present|absent|active|inactive|rebooted}",
      "\t#tags: ${15:}",
      "\t#user_data: ${16:}",
      "\t#wait_for_public_IPv: ${17:4|6}",
      "\t#wait_timeout: ${18:900}"
    ]
  },
  "packet_ip_subnet": {
    "prefix": "packet_ip_subnet",
    "description": "Assign IP subnet to a bare metal server",
    "body": [
      "community.general.packet_ip_subnet:",
      "\tcidr: ${1:}",
      "\t#auth_token: ${2:}",
      "\t#device_count: ${3:100}",
      "\t#device_id: ${4:}",
      "\t#hostname: ${5:}",
      "\t#project_id: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "packet_project": {
    "prefix": "packet_project",
    "description": "Create/delete a project in Packet host",
    "body": [
      "community.general.packet_project:",
      "\t#auth_token: ${1:}",
      "\t#custom_data: ${2:}",
      "\t#id: ${3:}",
      "\t#name: ${4:}",
      "\t#org_id: ${5:}",
      "\t#payment_method: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "packet_sshkey": {
    "prefix": "packet_sshkey",
    "description": "Create/delete an SSH key in Packet host",
    "body": [
      "community.general.packet_sshkey:",
      "\t#auth_token: ${1:}",
      "\t#fingerprint: ${2:}",
      "\t#id: ${3:}",
      "\t#key: ${4:}",
      "\t#key_file: ${5:}",
      "\t#label: ${6:}",
      "\t#state: ${7:#present|absent}"
    ]
  },
  "packet_volume": {
    "prefix": "packet_volume",
    "description": "Create/delete a volume in Packet host",
    "body": [
      "community.general.packet_volume:",
      "\tproject_id: ${1:}",
      "\t#auth_token: ${2:}",
      "\t#billing_cycle: ${3:#hourly|monthly}",
      "\t#description: ${4:}",
      "\t#facility: ${5:}",
      "\t#id: ${6:}",
      "\t#locked: ${7:false}",
      "\t#name: ${8:}",
      "\t#plan: ${9:#storage_1|storage_2}",
      "\t#size: ${10:}",
      "\t#snapshot_policy: ${11:}",
      "\t#state: ${12:#present|absent}"
    ]
  },
  "packet_volume_attachment": {
    "prefix": "packet_volume_attachment",
    "description": "Attach/detach a volume to a device in the Packet host",
    "body": [
      "community.general.packet_volume_attachment:",
      "\tproject_id: ${1:}",
      "\tvolume: ${2:}",
      "\t#auth_token: ${3:}",
      "\t#device: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "pacman": {
    "prefix": "pacman",
    "description": "Manage packages with I(pacman)",
    "body": [
      "community.general.pacman:",
      "\t#executable: ${1:pacman}",
      "\t#extra_args: ${2:\"\"}",
      "\t#force: ${3:false}",
      "\t#name: ${4:}",
      "\t#reason: ${5:dependency|explicit}",
      "\t#reason_for: ${6:all|#new}",
      "\t#remove_nosave: ${7:false}",
      "\t#state: ${8:absent|installed|latest|#present|removed}",
      "\t#update_cache: ${9:}",
      "\t#update_cache_extra_args: ${10:\"\"}",
      "\t#upgrade: ${11:}",
      "\t#upgrade_extra_args: ${12:\"\"}"
    ]
  },
  "pacman_key": {
    "prefix": "pacman_key",
    "description": "Manage pacman's list of trusted keys",
    "body": [
      "community.general.pacman_key:",
      "\tid: ${1:}",
      "\t#data: ${2:}",
      "\t#file: ${3:}",
      "\t#force_update: ${4:false}",
      "\t#keyring: ${5:/etc/pacman.d/gnupg}",
      "\t#keyserver: ${6:}",
      "\t#state: ${7:absent|#present}",
      "\t#url: ${8:}",
      "\t#verify: ${9:true}"
    ]
  },
  "pagerduty": {
    "prefix": "pagerduty",
    "description": "Create PagerDuty maintenance windows",
    "body": [
      "community.general.pagerduty:",
      "\tstate: ${1:running|started|ongoing|absent}",
      "\ttoken: ${2:}",
      "\t#desc: ${3:Created by Ansible}",
      "\t#hours: ${4:1}",
      "\t#minutes: ${5:0}",
      "\t#name: ${6:}",
      "\t#requester_id: ${7:}",
      "\t#service: ${8:}",
      "\t#user: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#window_id: ${11:}"
    ]
  },
  "pagerduty_alert": {
    "prefix": "pagerduty_alert",
    "description": "Trigger, acknowledge or resolve PagerDuty incidents",
    "body": [
      "community.general.pagerduty_alert:",
      "\tstate: ${1:triggered|acknowledged|resolved}",
      "\t#api_key: ${2:}",
      "\t#api_version: ${3:#v1|v2}",
      "\t#client: ${4:}",
      "\t#client_url: ${5:}",
      "\t#component: ${6:}",
      "\t#custom_details: ${7:}",
      "\t#desc: ${8:Created via Ansible}",
      "\t#incident_class: ${9:}",
      "\t#incident_key: ${10:}",
      "\t#integration_key: ${11:}",
      "\t#link_text: ${12:}",
      "\t#link_url: ${13:}",
      "\t#name: ${14:}",
      "\t#service_id: ${15:}",
      "\t#service_key: ${16:}",
      "\t#severity: ${17:#critical|warning|error|info}",
      "\t#source: ${18:}"
    ]
  },
  "pagerduty_change": {
    "prefix": "pagerduty_change",
    "description": "Track a code or infrastructure change as a PagerDuty change event",
    "body": [
      "community.general.pagerduty_change:",
      "\tintegration_key: ${1:}",
      "\tsummary: ${2:}",
      "\t#environment: ${3:}",
      "\t#link_text: ${4:}",
      "\t#link_url: ${5:}",
      "\t#repo: ${6:}",
      "\t#revision: ${7:}",
      "\t#source: ${8:Ansible}",
      "\t#url: ${9:https://events.pagerduty.com/v2/change/enqueue}",
      "\t#user: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "pagerduty_user": {
    "prefix": "pagerduty_user",
    "description": "Manage a user account on PagerDuty",
    "body": [
      "community.general.pagerduty_user:",
      "\taccess_token: ${1:}",
      "\tpd_email: ${2:}",
      "\tpd_user: ${3:}",
      "\t#pd_role: ${4:global_admin|manager|#responder|observer|stakeholder|limited_stakeholder|restricted_access}",
      "\t#pd_teams: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "pam_limits": {
    "prefix": "pam_limits",
    "description": "Modify Linux PAM limits",
    "body": [
      "community.general.pam_limits:",
      "\tdomain: ${1:}",
      "\tlimit_item: ${2:core|data|fsize|memlock|nofile|rss|stack|cpu|nproc|as|maxlogins|maxsyslogins|priority|locks|sigpending|msgqueue|nice|rtprio|chroot}",
      "\tlimit_type: ${3:hard|soft|-}",
      "\tvalue: ${4:}",
      "\t#backup: ${5:false}",
      "\t#comment: ${6:\"\"}",
      "\t#dest: ${7:/etc/security/limits.conf}",
      "\t#use_max: ${8:false}",
      "\t#use_min: ${9:false}"
    ]
  },
  "pamd": {
    "prefix": "pamd",
    "description": "Manage PAM Modules",
    "body": [
      "community.general.pamd:",
      "\tcontrol: ${1:}",
      "\tmodule_path: ${2:}",
      "\tname: ${3:}",
      "\ttype: ${4:account|-account|auth|-auth|password|-password|session|-session}",
      "\t#backup: ${5:false}",
      "\t#module_arguments: ${6:}",
      "\t#new_control: ${7:}",
      "\t#new_module_path: ${8:}",
      "\t#new_type: ${9:account|-account|auth|-auth|password|-password|session|-session}",
      "\t#path: ${10:/etc/pam.d}",
      "\t#state: ${11:absent|before|after|args_absent|args_present|#updated}"
    ]
  },
  "parted": {
    "prefix": "parted",
    "description": "Configure block device partitions",
    "body": [
      "community.general.parted:",
      "\tdevice: ${1:}",
      "\t#align: ${2:cylinder|minimal|none|#optimal|undefined}",
      "\t#flags: ${3:}",
      "\t#fs_type: ${4:}",
      "\t#label: ${5:aix|amiga|bsd|dvh|gpt|loop|mac|#msdos|pc98|sun}",
      "\t#name: ${6:}",
      "\t#number: ${7:}",
      "\t#part_end: ${8:100%}",
      "\t#part_start: ${9:0%}",
      "\t#part_type: ${10:extended|logical|#primary}",
      "\t#resize: ${11:false}",
      "\t#state: ${12:absent|present|#info}",
      "\t#unit: ${13:s|B|KB|#KiB|MB|MiB|GB|GiB|TB|TiB|%|cyl|chs|compact}"
    ]
  },
  "pear": {
    "prefix": "pear",
    "description": "Manage pear/pecl packages",
    "body": [
      "community.general.pear:",
      "\tname: ${1:}",
      "\t#executable: ${2:}",
      "\t#prompts: ${3:}",
      "\t#state: ${4:#present|installed|latest|absent|removed}"
    ]
  },
  "pids": {
    "prefix": "pids",
    "description": "Retrieves process IDs list if the process is running otherwise return empty list",
    "body": [
      "community.general.pids:",
      "\t#ignore_case: ${1:false}",
      "\t#name: ${2:}",
      "\t#pattern: ${3:}"
    ]
  },
  "pingdom": {
    "prefix": "pingdom",
    "description": "Pause/unpause Pingdom alerts",
    "body": [
      "community.general.pingdom:",
      "\tcheckid: ${1:}",
      "\tkey: ${2:}",
      "\tpasswd: ${3:}",
      "\tstate: ${4:running|paused|started|stopped}",
      "\tuid: ${5:}"
    ]
  },
  "pip_package_info": {
    "prefix": "pip_package_info",
    "description": "Pip package information",
    "body": [
      "community.general.pip_package_info:",
      "\t#clients: ${1:['pip']}"
    ]
  },
  "pipx": {
    "prefix": "pipx",
    "description": "Manages applications installed with pipx",
    "body": [
      "community.general.pipx:",
      "\t#editable: ${1:false}",
      "\t#executable: ${2:}",
      "\t#force: ${3:false}",
      "\t#include_injected: ${4:false}",
      "\t#index_url: ${5:}",
      "\t#inject_packages: ${6:}",
      "\t#install_apps: ${7:false}",
      "\t#install_deps: ${8:false}",
      "\t#name: ${9:}",
      "\t#pip_args: ${10:}",
      "\t#python: ${11:}",
      "\t#source: ${12:}",
      "\t#state: ${13:present|absent|#install|uninstall|uninstall_all|inject|upgrade|upgrade_all|reinstall|reinstall_all|latest}",
      "\t#system_site_packages: ${14:false}"
    ]
  },
  "pipx_info": {
    "prefix": "pipx_info",
    "description": "Rretrieves information about applications installed with pipx",
    "body": [
      "community.general.pipx_info:",
      "\t#executable: ${1:}",
      "\t#include_deps: ${2:false}",
      "\t#include_injected: ${3:false}",
      "\t#include_raw: ${4:false}",
      "\t#name: ${5:}"
    ]
  },
  "pkg5": {
    "prefix": "pkg5",
    "description": "Manages packages with the Solaris 11 Image Packaging System",
    "body": [
      "community.general.pkg5:",
      "\tname: ${1:}",
      "\t#accept_licenses: ${2:false}",
      "\t#be_name: ${3:}",
      "\t#refresh: ${4:true}",
      "\t#state: ${5:absent|latest|#present|installed|removed|uninstalled}"
    ]
  },
  "pkg5_publisher": {
    "prefix": "pkg5_publisher",
    "description": "Manages Solaris 11 Image Packaging System publishers",
    "body": [
      "community.general.pkg5_publisher:",
      "\tname: ${1:}",
      "\t#enabled: ${2:}",
      "\t#mirror: ${3:}",
      "\t#origin: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#sticky: ${6:}"
    ]
  },
  "pkgin": {
    "prefix": "pkgin",
    "description": "Package manager for SmartOS, NetBSD, et al",
    "body": [
      "community.general.pkgin:",
      "\t#clean: ${1:false}",
      "\t#force: ${2:false}",
      "\t#full_upgrade: ${3:false}",
      "\t#name: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#update_cache: ${6:false}",
      "\t#upgrade: ${7:false}"
    ]
  },
  "pkgng": {
    "prefix": "pkgng",
    "description": "Package manager for FreeBSD >= 9.0",
    "body": [
      "community.general.pkgng:",
      "\tname: ${1:}",
      "\t#annotation: ${2:}",
      "\t#autoremove: ${3:false}",
      "\t#cached: ${4:false}",
      "\t#chroot: ${5:}",
      "\t#ignore_osver: ${6:false}",
      "\t#jail: ${7:}",
      "\t#pkgsite: ${8:}",
      "\t#rootdir: ${9:}",
      "\t#state: ${10:#present|latest|absent}"
    ]
  },
  "pkgutil": {
    "prefix": "pkgutil",
    "description": "OpenCSW package management on Solaris",
    "body": [
      "community.general.pkgutil:",
      "\tname: ${1:}",
      "\tstate: ${2:absent|installed|latest|present|removed}",
      "\t#force: ${3:false}",
      "\t#site: ${4:}",
      "\t#update_catalog: ${5:false}"
    ]
  },
  "pmem": {
    "prefix": "pmem",
    "description": "Configure Intel Optane Persistent Memory modules",
    "body": [
      "community.general.pmem:",
      "\t#appdirect: ${1:}",
      "\t#appdirect_interleaved: ${2:true}",
      "\t#memorymode: ${3:}",
      "\t#namespace: ${4:}",
      "\t#namespace_append: ${5:false}",
      "\t#reserved: ${6:}",
      "\t#socket: ${7:}"
    ]
  },
  "pnpm": {
    "prefix": "pnpm",
    "description": "Manage node.js packages with pnpm",
    "body": [
      "community.general.pnpm:",
      "\t#alias: ${1:}",
      "\t#dev: ${2:false}",
      "\t#executable: ${3:}",
      "\t#global: ${4:false}",
      "\t#ignore_scripts: ${5:false}",
      "\t#name: ${6:}",
      "\t#no_optional: ${7:false}",
      "\t#optional: ${8:false}",
      "\t#path: ${9:}",
      "\t#production: ${10:false}",
      "\t#state: ${11:#present|absent|latest}",
      "\t#version: ${12:}"
    ]
  },
  "portage": {
    "prefix": "portage",
    "description": "Package manager for Gentoo",
    "body": [
      "community.general.portage:",
      "\t#backtrack: ${1:}",
      "\t#changed_use: ${2:false}",
      "\t#deep: ${3:false}",
      "\t#depclean: ${4:false}",
      "\t#getbinpkg: ${5:false}",
      "\t#getbinpkgonly: ${6:false}",
      "\t#jobs: ${7:}",
      "\t#keepgoing: ${8:false}",
      "\t#loadavg: ${9:}",
      "\t#newuse: ${10:false}",
      "\t#nodeps: ${11:false}",
      "\t#noreplace: ${12:true}",
      "\t#oneshot: ${13:false}",
      "\t#onlydeps: ${14:false}",
      "\t#package: ${15:}",
      "\t#quiet: ${16:false}",
      "\t#quietbuild: ${17:false}",
      "\t#quietfail: ${18:false}",
      "\t#state: ${19:#present|installed|emerged|absent|removed|unmerged|latest}",
      "\t#sync: ${20:web|yes|no}",
      "\t#update: ${21:false}",
      "\t#usepkg: ${22:false}",
      "\t#usepkgonly: ${23:false}",
      "\t#verbose: ${24:false}",
      "\t#withbdeps: ${25:}"
    ]
  },
  "portinstall": {
    "prefix": "portinstall",
    "description": "Installing packages from FreeBSD's ports system",
    "body": [
      "community.general.portinstall:",
      "\tname: ${1:}",
      "\t#state: ${2:#present|absent}",
      "\t#use_packages: ${3:true}"
    ]
  },
  "pritunl_org": {
    "prefix": "pritunl_org",
    "description": "Manages Pritunl Organizations using the Pritunl API",
    "body": [
      "community.general.pritunl_org:",
      "\tname: ${1:}",
      "\tpritunl_api_secret: ${2:}",
      "\tpritunl_api_token: ${3:}",
      "\tpritunl_url: ${4:}",
      "\t#force: ${5:false}",
      "\t#state: ${6:#present|absent}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "pritunl_org_info": {
    "prefix": "pritunl_org_info",
    "description": "List Pritunl Organizations using the Pritunl API",
    "body": [
      "community.general.pritunl_org_info:",
      "\tpritunl_api_secret: ${1:}",
      "\tpritunl_api_token: ${2:}",
      "\tpritunl_url: ${3:}",
      "\t#organization: ${4:}",
      "\t#validate_certs: ${5:true}"
    ]
  },
  "pritunl_user": {
    "prefix": "pritunl_user",
    "description": "Manage Pritunl Users using the Pritunl API",
    "body": [
      "community.general.pritunl_user:",
      "\torganization: ${1:}",
      "\tpritunl_api_secret: ${2:}",
      "\tpritunl_api_token: ${3:}",
      "\tpritunl_url: ${4:}",
      "\tuser_name: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#user_disabled: ${7:}",
      "\t#user_email: ${8:}",
      "\t#user_gravatar: ${9:}",
      "\t#user_groups: ${10:}",
      "\t#user_mac_addresses: ${11:}",
      "\t#user_type: ${12:#client|server}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "pritunl_user_info": {
    "prefix": "pritunl_user_info",
    "description": "List Pritunl Users using the Pritunl API",
    "body": [
      "community.general.pritunl_user_info:",
      "\torganization: ${1:}",
      "\tpritunl_api_secret: ${2:}",
      "\tpritunl_api_token: ${3:}",
      "\tpritunl_url: ${4:}",
      "\t#user_name: ${5:}",
      "\t#user_type: ${6:#client|server}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "profitbricks": {
    "prefix": "profitbricks",
    "description": "Create, destroy, start, stop, and reboot a ProfitBricks virtual machine",
    "body": [
      "community.general.profitbricks:",
      "\t#assign_public_ip: ${1:false}",
      "\t#auto_increment: ${2:true}",
      "\t#bus: ${3:IDE|#VIRTIO}",
      "\t#cores: ${4:2}",
      "\t#count: ${5:1}",
      "\t#cpu_family: ${6:#AMD_OPTERON|INTEL_XEON}",
      "\t#datacenter: ${7:}",
      "\t#disk_type: ${8:SSD|#HDD}",
      "\t#image: ${9:}",
      "\t#image_password: ${10:}",
      "\t#instance_ids: ${11:[]}",
      "\t#lan: ${12:1}",
      "\t#location: ${13:#us/las|de/fra|de/fkb}",
      "\t#name: ${14:}",
      "\t#ram: ${15:2048}",
      "\t#remove_boot_volume: ${16:true}",
      "\t#ssh_keys: ${17:[]}",
      "\t#state: ${18:present}",
      "\t#subscription_password: ${19:}",
      "\t#subscription_user: ${20:}",
      "\t#volume_size: ${21:10}",
      "\t#wait: ${22:true}",
      "\t#wait_timeout: ${23:600}"
    ]
  },
  "profitbricks_datacenter": {
    "prefix": "profitbricks_datacenter",
    "description": "Create or destroy a ProfitBricks Virtual Datacenter",
    "body": [
      "community.general.profitbricks_datacenter:",
      "\t#description: ${1:}",
      "\t#location: ${2:#us/las|de/fra|de/fkb}",
      "\t#name: ${3:}",
      "\t#state: ${4:present}",
      "\t#subscription_password: ${5:}",
      "\t#subscription_user: ${6:}",
      "\t#wait: ${7:true}",
      "\t#wait_timeout: ${8:600}"
    ]
  },
  "profitbricks_nic": {
    "prefix": "profitbricks_nic",
    "description": "Create or Remove a NIC",
    "body": [
      "community.general.profitbricks_nic:",
      "\tdatacenter: ${1:}",
      "\tserver: ${2:}",
      "\tsubscription_password: ${3:}",
      "\tsubscription_user: ${4:}",
      "\t#lan: ${5:}",
      "\t#name: ${6:}",
      "\t#state: ${7:present}",
      "\t#wait: ${8:true}",
      "\t#wait_timeout: ${9:600}"
    ]
  },
  "profitbricks_volume": {
    "prefix": "profitbricks_volume",
    "description": "Create or destroy a volume",
    "body": [
      "community.general.profitbricks_volume:",
      "\t#auto_increment: ${1:true}",
      "\t#bus: ${2:IDE|#VIRTIO}",
      "\t#count: ${3:1}",
      "\t#datacenter: ${4:}",
      "\t#disk_type: ${5:#HDD|SSD}",
      "\t#image: ${6:}",
      "\t#image_password: ${7:}",
      "\t#instance_ids: ${8:[]}",
      "\t#licence_type: ${9:UNKNOWN}",
      "\t#name: ${10:}",
      "\t#server: ${11:}",
      "\t#size: ${12:10}",
      "\t#ssh_keys: ${13:[]}",
      "\t#state: ${14:present}",
      "\t#subscription_password: ${15:}",
      "\t#subscription_user: ${16:}",
      "\t#wait: ${17:true}",
      "\t#wait_timeout: ${18:600}"
    ]
  },
  "profitbricks_volume_attachments": {
    "prefix": "profitbricks_volume_attachments",
    "description": "Attach or detach a volume",
    "body": [
      "community.general.profitbricks_volume_attachments:",
      "\t#datacenter: ${1:}",
      "\t#server: ${2:}",
      "\t#state: ${3:present}",
      "\t#subscription_password: ${4:}",
      "\t#subscription_user: ${5:}",
      "\t#volume: ${6:}",
      "\t#wait: ${7:true}",
      "\t#wait_timeout: ${8:600}"
    ]
  },
  "proxmox": {
    "prefix": "proxmox",
    "description": "Management of instances in Proxmox VE cluster",
    "body": [
      "community.general.proxmox:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#clone: ${6:}",
      "\t#clone_type: ${7:full|linked|#opportunistic}",
      "\t#cores: ${8:}",
      "\t#cpus: ${9:}",
      "\t#cpuunits: ${10:}",
      "\t#description: ${11:}",
      "\t#disk: ${12:}",
      "\t#features: ${13:}",
      "\t#force: ${14:false}",
      "\t#hookscript: ${15:}",
      "\t#hostname: ${16:}",
      "\t#ip_address: ${17:}",
      "\t#memory: ${18:}",
      "\t#mounts: ${19:}",
      "\t#nameserver: ${20:}",
      "\t#netif: ${21:}",
      "\t#node: ${22:}",
      "\t#onboot: ${23:}",
      "\t#ostemplate: ${24:}",
      "\t#ostype: ${25:#auto|debian|devuan|ubuntu|centos|fedora|opensuse|archlinux|alpine|gentoo|nixos|unmanaged}",
      "\t#password: ${26:}",
      "\t#pool: ${27:}",
      "\t#proxmox_default_behavior: ${28:compatibility|#no_defaults}",
      "\t#pubkey: ${29:}",
      "\t#purge: ${30:false}",
      "\t#searchdomain: ${31:}",
      "\t#state: ${32:#present|started|absent|stopped|restarted|template}",
      "\t#storage: ${33:local}",
      "\t#swap: ${34:}",
      "\t#tags: ${35:}",
      "\t#timeout: ${36:30}",
      "\t#timezone: ${37:}",
      "\t#unprivileged: ${38:true}",
      "\t#update: ${39:false}",
      "\t#validate_certs: ${40:false}",
      "\t#vmid: ${41:}"
    ]
  },
  "proxmox_disk": {
    "prefix": "proxmox_disk",
    "description": "Management of a disk of a Qemu(KVM) VM in a Proxmox VE cluster",
    "body": [
      "community.general.proxmox_disk:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\tdisk: ${3:}",
      "\t#aio: ${4:native|threads|io_uring}",
      "\t#api_password: ${5:}",
      "\t#api_token_id: ${6:}",
      "\t#api_token_secret: ${7:}",
      "\t#backup: ${8:}",
      "\t#bps_max_length: ${9:}",
      "\t#bps_rd_max_length: ${10:}",
      "\t#bps_wr_max_length: ${11:}",
      "\t#bwlimit: ${12:}",
      "\t#cache: ${13:none|writethrough|writeback|unsafe|directsync}",
      "\t#create: ${14:disabled|#regular|forced}",
      "\t#cyls: ${15:}",
      "\t#delete_moved: ${16:}",
      "\t#detect_zeroes: ${17:}",
      "\t#discard: ${18:ignore|on}",
      "\t#format: ${19:raw|cow|qcow|qed|qcow2|vmdk|cloop}",
      "\t#heads: ${20:}",
      "\t#import_from: ${21:}",
      "\t#iops: ${22:}",
      "\t#iops_max: ${23:}",
      "\t#iops_max_length: ${24:}",
      "\t#iops_rd: ${25:}",
      "\t#iops_rd_max: ${26:}",
      "\t#iops_rd_max_length: ${27:}",
      "\t#iops_wr: ${28:}",
      "\t#iops_wr_max: ${29:}",
      "\t#iops_wr_max_length: ${30:}",
      "\t#iothread: ${31:}",
      "\t#iso_image: ${32:}",
      "\t#mbps: ${33:}",
      "\t#mbps_max: ${34:}",
      "\t#mbps_rd: ${35:}",
      "\t#mbps_rd_max: ${36:}",
      "\t#mbps_wr: ${37:}",
      "\t#mbps_wr_max: ${38:}",
      "\t#media: ${39:cdrom|disk}",
      "\t#name: ${40:}",
      "\t#queues: ${41:}",
      "\t#replicate: ${42:}",
      "\t#rerror: ${43:ignore|report|stop}",
      "\t#ro: ${44:}",
      "\t#scsiblock: ${45:}",
      "\t#secs: ${46:}",
      "\t#serial: ${47:}",
      "\t#shared: ${48:}",
      "\t#size: ${49:}",
      "\t#snapshot: ${50:}",
      "\t#ssd: ${51:}",
      "\t#state: ${52:#present|resized|detached|moved|absent}",
      "\t#storage: ${53:}",
      "\t#target_disk: ${54:}",
      "\t#target_storage: ${55:}",
      "\t#target_vmid: ${56:}",
      "\t#timeout: ${57:600}",
      "\t#trans: ${58:auto|lba|none}",
      "\t#validate_certs: ${59:false}",
      "\t#vmid: ${60:}",
      "\t#werror: ${61:enospc|ignore|report|stop}",
      "\t#wwn: ${62:}"
    ]
  },
  "proxmox_domain_info": {
    "prefix": "proxmox_domain_info",
    "description": "Retrieve information about one or more Proxmox VE domains",
    "body": [
      "community.general.proxmox_domain_info:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#domain: ${6:}",
      "\t#validate_certs: ${7:false}"
    ]
  },
  "proxmox_group_info": {
    "prefix": "proxmox_group_info",
    "description": "Retrieve information about one or more Proxmox VE groups",
    "body": [
      "community.general.proxmox_group_info:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#group: ${6:}",
      "\t#validate_certs: ${7:false}"
    ]
  },
  "proxmox_kvm": {
    "prefix": "proxmox_kvm",
    "description": "Management of Qemu(KVM) Virtual Machines in Proxmox VE cluster",
    "body": [
      "community.general.proxmox_kvm:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#acpi: ${3:}",
      "\t#agent: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token_id: ${6:}",
      "\t#api_token_secret: ${7:}",
      "\t#archive: ${8:}",
      "\t#args: ${9:}",
      "\t#autostart: ${10:}",
      "\t#balloon: ${11:}",
      "\t#bios: ${12:seabios|ovmf}",
      "\t#boot: ${13:}",
      "\t#bootdisk: ${14:}",
      "\t#cicustom: ${15:}",
      "\t#cipassword: ${16:}",
      "\t#citype: ${17:nocloud|configdrive2}",
      "\t#ciuser: ${18:}",
      "\t#clone: ${19:}",
      "\t#cores: ${20:}",
      "\t#cpu: ${21:}",
      "\t#cpulimit: ${22:}",
      "\t#cpuunits: ${23:}",
      "\t#delete: ${24:}",
      "\t#description: ${25:}",
      "\t#digest: ${26:}",
      "\t#efidisk0: ${27:}",
      "\t#force: ${28:}",
      "\t#format: ${29:cloop|cow|qcow|qcow2|qed|raw|vmdk|unspecified}",
      "\t#freeze: ${30:}",
      "\t#full: ${31:true}",
      "\t#hookscript: ${32:}",
      "\t#hostpci: ${33:}",
      "\t#hotplug: ${34:}",
      "\t#hugepages: ${35:any|2|1024}",
      "\t#ide: ${36:}",
      "\t#ipconfig: ${37:}",
      "\t#keyboard: ${38:}",
      "\t#kvm: ${39:}",
      "\t#localtime: ${40:}",
      "\t#lock: ${41:migrate|backup|snapshot|rollback}",
      "\t#machine: ${42:}",
      "\t#memory: ${43:}",
      "\t#migrate: ${44:false}",
      "\t#migrate_downtime: ${45:}",
      "\t#migrate_speed: ${46:}",
      "\t#name: ${47:}",
      "\t#nameservers: ${48:}",
      "\t#net: ${49:}",
      "\t#newid: ${50:}",
      "\t#node: ${51:}",
      "\t#numa: ${52:}",
      "\t#numa_enabled: ${53:}",
      "\t#onboot: ${54:}",
      "\t#ostype: ${55:other|wxp|w2k|w2k3|w2k8|wvista|win7|win8|win10|win11|l24|l26|solaris}",
      "\t#parallel: ${56:}",
      "\t#pool: ${57:}",
      "\t#protection: ${58:}",
      "\t#proxmox_default_behavior: ${59:compatibility|#no_defaults}",
      "\t#reboot: ${60:}",
      "\t#revert: ${61:}",
      "\t#sata: ${62:}",
      "\t#scsi: ${63:}",
      "\t#scsihw: ${64:lsi|lsi53c810|virtio-scsi-pci|virtio-scsi-single|megasas|pvscsi}",
      "\t#searchdomains: ${65:}",
      "\t#serial: ${66:}",
      "\t#shares: ${67:}",
      "\t#skiplock: ${68:}",
      "\t#smbios: ${69:}",
      "\t#snapname: ${70:}",
      "\t#sockets: ${71:}",
      "\t#sshkeys: ${72:}",
      "\t#startdate: ${73:}",
      "\t#startup: ${74:}",
      "\t#state: ${75:#present|started|absent|stopped|restarted|current|template}",
      "\t#storage: ${76:}",
      "\t#tablet: ${77:}",
      "\t#tags: ${78:}",
      "\t#target: ${79:}",
      "\t#tdf: ${80:}",
      "\t#template: ${81:}",
      "\t#timeout: ${82:30}",
      "\t#tpmstate0: ${83:}",
      "\t#update: ${84:false}",
      "\t#validate_certs: ${85:false}",
      "\t#vcpus: ${86:}",
      "\t#vga: ${87:std|cirrus|vmware|qxl|serial0|serial1|serial2|serial3|qxl2|qxl3|qxl4}",
      "\t#virtio: ${88:}",
      "\t#vmid: ${89:}",
      "\t#watchdog: ${90:}"
    ]
  },
  "proxmox_nic": {
    "prefix": "proxmox_nic",
    "description": "Management of a NIC of a Qemu(KVM) VM in a Proxmox VE cluster",
    "body": [
      "community.general.proxmox_nic:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\tinterface: ${3:}",
      "\t#api_password: ${4:}",
      "\t#api_token_id: ${5:}",
      "\t#api_token_secret: ${6:}",
      "\t#bridge: ${7:}",
      "\t#firewall: ${8:false}",
      "\t#link_down: ${9:false}",
      "\t#mac: ${10:}",
      "\t#model: ${11:e1000|e1000-82540em|e1000-82544gc|e1000-82545em|i82551|i82557b|i82559er|ne2k_isa|ne2k_pci|pcnet|rtl8139|#virtio|vmxnet3}",
      "\t#mtu: ${12:}",
      "\t#name: ${13:}",
      "\t#queues: ${14:}",
      "\t#rate: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#tag: ${17:}",
      "\t#trunks: ${18:}",
      "\t#validate_certs: ${19:false}",
      "\t#vmid: ${20:}"
    ]
  },
  "proxmox_node_info": {
    "prefix": "proxmox_node_info",
    "description": "Retrieve information about one or more Proxmox VE nodes",
    "body": [
      "community.general.proxmox_node_info:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#validate_certs: ${6:false}"
    ]
  },
  "proxmox_pool": {
    "prefix": "proxmox_pool",
    "description": "Pool management for Proxmox VE cluster",
    "body": [
      "community.general.proxmox_pool:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\tpoolid: ${3:}",
      "\t#api_password: ${4:}",
      "\t#api_token_id: ${5:}",
      "\t#api_token_secret: ${6:}",
      "\t#comment: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:false}"
    ]
  },
  "proxmox_pool_member": {
    "prefix": "proxmox_pool_member",
    "description": "Add or delete members from Proxmox VE cluster pools",
    "body": [
      "community.general.proxmox_pool_member:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\tmember: ${3:}",
      "\tpoolid: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token_id: ${6:}",
      "\t#api_token_secret: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#type: ${9:#vm|storage}",
      "\t#validate_certs: ${10:false}"
    ]
  },
  "proxmox_snap": {
    "prefix": "proxmox_snap",
    "description": "Snapshot management of instances in Proxmox VE cluster",
    "body": [
      "community.general.proxmox_snap:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#description: ${6:}",
      "\t#force: ${7:false}",
      "\t#hostname: ${8:}",
      "\t#retention: ${9:0}",
      "\t#snapname: ${10:ansible_snap}",
      "\t#state: ${11:#present|absent|rollback}",
      "\t#timeout: ${12:30}",
      "\t#unbind: ${13:false}",
      "\t#validate_certs: ${14:false}",
      "\t#vmid: ${15:}",
      "\t#vmstate: ${16:false}"
    ]
  },
  "proxmox_storage_contents_info": {
    "prefix": "proxmox_storage_contents_info",
    "description": "List content from a Proxmox VE storage",
    "body": [
      "community.general.proxmox_storage_contents_info:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\tnode: ${3:}",
      "\tstorage: ${4:}",
      "\t#api_password: ${5:}",
      "\t#api_token_id: ${6:}",
      "\t#api_token_secret: ${7:}",
      "\t#content: ${8:#all|backup|rootdir|images|iso}",
      "\t#validate_certs: ${9:false}",
      "\t#vmid: ${10:}"
    ]
  },
  "proxmox_storage_info": {
    "prefix": "proxmox_storage_info",
    "description": "Retrieve information about one or more Proxmox VE storages",
    "body": [
      "community.general.proxmox_storage_info:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#storage: ${6:}",
      "\t#type: ${7:}",
      "\t#validate_certs: ${8:false}"
    ]
  },
  "proxmox_tasks_info": {
    "prefix": "proxmox_tasks_info",
    "description": "Retrieve information about one or more Proxmox VE tasks",
    "body": [
      "community.general.proxmox_tasks_info:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\tnode: ${3:}",
      "\t#api_password: ${4:}",
      "\t#api_token_id: ${5:}",
      "\t#api_token_secret: ${6:}",
      "\t#task: ${7:}",
      "\t#validate_certs: ${8:false}"
    ]
  },
  "proxmox_template": {
    "prefix": "proxmox_template",
    "description": "Management of OS templates in Proxmox VE cluster",
    "body": [
      "community.general.proxmox_template:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#content_type: ${6:#vztmpl|iso}",
      "\t#force: ${7:false}",
      "\t#node: ${8:}",
      "\t#src: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#storage: ${11:local}",
      "\t#template: ${12:}",
      "\t#timeout: ${13:30}",
      "\t#validate_certs: ${14:false}"
    ]
  },
  "proxmox_user_info": {
    "prefix": "proxmox_user_info",
    "description": "Retrieve information about one or more Proxmox VE users",
    "body": [
      "community.general.proxmox_user_info:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#domain: ${6:}",
      "\t#user: ${7:}",
      "\t#userid: ${8:}",
      "\t#validate_certs: ${9:false}"
    ]
  },
  "proxmox_vm_info": {
    "prefix": "proxmox_vm_info",
    "description": "Retrieve information about one or more Proxmox VE virtual machines",
    "body": [
      "community.general.proxmox_vm_info:",
      "\tapi_host: ${1:}",
      "\tapi_user: ${2:}",
      "\t#api_password: ${3:}",
      "\t#api_token_id: ${4:}",
      "\t#api_token_secret: ${5:}",
      "\t#config: ${6:#none|current|pending}",
      "\t#name: ${7:}",
      "\t#node: ${8:}",
      "\t#type: ${9:#all|qemu|lxc}",
      "\t#validate_certs: ${10:false}",
      "\t#vmid: ${11:}"
    ]
  },
  "pubnub_blocks": {
    "prefix": "pubnub_blocks",
    "description": "PubNub blocks management module",
    "body": [
      "community.general.pubnub_blocks:",
      "\tapplication: ${1:}",
      "\tkeyset: ${2:}",
      "\tname: ${3:}",
      "\t#account: ${4:\"\"}",
      "\t#cache: ${5:{\\}}",
      "\t#changes: ${6:{\\}}",
      "\t#description: ${7:}",
      "\t#email: ${8:\"\"}",
      "\t#event_handlers: ${9:[]}",
      "\t#password: ${10:\"\"}",
      "\t#state: ${11:started|stopped|#present|absent}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "pulp_repo": {
    "prefix": "pulp_repo",
    "description": "Add or remove Pulp repos from a remote host",
    "body": [
      "community.general.pulp_repo:",
      "\tname: ${1:}",
      "\t#add_export_distributor: ${2:false}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#feed: ${5:}",
      "\t#feed_ca_cert: ${6:}",
      "\t#feed_client_cert: ${7:}",
      "\t#feed_client_key: ${8:}",
      "\t#force: ${9:false}",
      "\t#force_basic_auth: ${10:false}",
      "\t#generate_sqlite: ${11:false}",
      "\t#http_agent: ${12:ansible-httpget}",
      "\t#proxy_host: ${13:}",
      "\t#proxy_password: ${14:}",
      "\t#proxy_port: ${15:}",
      "\t#proxy_username: ${16:}",
      "\t#publish_distributor: ${17:}",
      "\t#pulp_host: ${18:https://127.0.0.1}",
      "\t#relative_url: ${19:}",
      "\t#repo_type: ${20:rpm}",
      "\t#repoview: ${21:false}",
      "\t#serve_http: ${22:false}",
      "\t#serve_https: ${23:true}",
      "\t#state: ${24:#present|absent|sync|publish}",
      "\t#url: ${25:}",
      "\t#url_password: ${26:}",
      "\t#url_username: ${27:}",
      "\t#use_gssapi: ${28:false}",
      "\t#use_proxy: ${29:true}",
      "\t#validate_certs: ${30:true}",
      "\t#wait_for_completion: ${31:false}"
    ]
  },
  "puppet": {
    "prefix": "puppet",
    "description": "Runs puppet",
    "body": [
      "community.general.puppet:",
      "\t#certname: ${1:}",
      "\t#confdir: ${2:}",
      "\t#debug: ${3:false}",
      "\t#environment: ${4:}",
      "\t#execute: ${5:}",
      "\t#facter_basename: ${6:ansible}",
      "\t#facts: ${7:}",
      "\t#logdest: ${8:all|#stdout|syslog}",
      "\t#manifest: ${9:}",
      "\t#modulepath: ${10:}",
      "\t#noop: ${11:}",
      "\t#puppetmaster: ${12:}",
      "\t#show_diff: ${13:false}",
      "\t#skip_tags: ${14:}",
      "\t#summarize: ${15:false}",
      "\t#tags: ${16:}",
      "\t#timeout: ${17:30m}",
      "\t#use_srv_records: ${18:}",
      "\t#verbose: ${19:false}"
    ]
  },
  "pushbullet": {
    "prefix": "pushbullet",
    "description": "Sends notifications to Pushbullet",
    "body": [
      "community.general.pushbullet:",
      "\tapi_key: ${1:}",
      "\ttitle: ${2:}",
      "\t#body: ${3:}",
      "\t#channel: ${4:}",
      "\t#device: ${5:}",
      "\t#push_type: ${6:#note|link}",
      "\t#url: ${7:}"
    ]
  },
  "pushover": {
    "prefix": "pushover",
    "description": "Send notifications via U(https://pushover.net)",
    "body": [
      "community.general.pushover:",
      "\tapp_token: ${1:}",
      "\tmsg: ${2:}",
      "\tuser_key: ${3:}",
      "\t#device: ${4:}",
      "\t#pri: ${5:-2|-1|#0|1|2}",
      "\t#title: ${6:}"
    ]
  },
  "python_requirements_info": {
    "prefix": "python_requirements_info",
    "description": "Show python path and assert dependency versions",
    "body": [
      "community.general.python_requirements_info:",
      "\t#dependencies: ${1:[]}"
    ]
  },
  "read_csv": {
    "prefix": "read_csv",
    "description": "Read a CSV file",
    "body": [
      "community.general.read_csv:",
      "\tpath: ${1:}",
      "\t#delimiter: ${2:}",
      "\t#dialect: ${3:excel}",
      "\t#fieldnames: ${4:}",
      "\t#key: ${5:}",
      "\t#skipinitialspace: ${6:}",
      "\t#strict: ${7:}",
      "\t#unique: ${8:true}"
    ]
  },
  "redfish_command": {
    "prefix": "redfish_command",
    "description": "Manages Out-Of-Band controllers using Redfish APIs",
    "body": [
      "community.general.redfish_command:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\t#account_properties: ${4:{\\}}",
      "\t#account_types: ${5:}",
      "\t#auth_token: ${6:}",
      "\t#bios_attributes: ${7:}",
      "\t#boot_next: ${8:}",
      "\t#boot_override_mode: ${9:Legacy|UEFI}",
      "\t#bootdevice: ${10:}",
      "\t#id: ${11:}",
      "\t#new_password: ${12:}",
      "\t#new_username: ${13:}",
      "\t#oem_account_types: ${14:}",
      "\t#password: ${15:}",
      "\t#resource_id: ${16:}",
      "\t#roleid: ${17:}",
      "\t#session_uri: ${18:}",
      "\t#strip_etag_quotes: ${19:false}",
      "\t#timeout: ${20:}",
      "\t#uefi_target: ${21:}",
      "\t#update_apply_time: ${22:Immediate|OnReset|AtMaintenanceWindowStart|InMaintenanceWindowOnReset|OnStartUpdateRequest}",
      "\t#update_creds: ${23:}",
      "\t#update_handle: ${24:}",
      "\t#update_image_file: ${25:}",
      "\t#update_image_uri: ${26:}",
      "\t#update_oem_params: ${27:}",
      "\t#update_protocol: ${28:}",
      "\t#update_targets: ${29:[]}",
      "\t#update_username: ${30:}",
      "\t#username: ${31:}",
      "\t#virtual_media: ${32:}"
    ]
  },
  "redfish_config": {
    "prefix": "redfish_config",
    "description": "Manages Out-Of-Band controllers using Redfish APIs",
    "body": [
      "community.general.redfish_config:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#bios_attributes: ${5:{\\}}",
      "\t#boot_order: ${6:[]}",
      "\t#hostinterface_config: ${7:{\\}}",
      "\t#hostinterface_id: ${8:}",
      "\t#network_protocols: ${9:{\\}}",
      "\t#nic_addr: ${10:null}",
      "\t#nic_config: ${11:{\\}}",
      "\t#password: ${12:}",
      "\t#resource_id: ${13:}",
      "\t#secure_boot_enable: ${14:true}",
      "\t#sessions_config: ${15:{\\}}",
      "\t#storage_subsystem_id: ${16:\"\"}",
      "\t#strip_etag_quotes: ${17:false}",
      "\t#timeout: ${18:}",
      "\t#username: ${19:}",
      "\t#volume_details: ${20:{\\}}",
      "\t#volume_ids: ${21:[]}"
    ]
  },
  "redfish_info": {
    "prefix": "redfish_info",
    "description": "Manages Out-Of-Band controllers using Redfish APIs",
    "body": [
      "community.general.redfish_info:",
      "\tbaseuri: ${1:}",
      "\t#auth_token: ${2:}",
      "\t#category: ${3:['Systems']}",
      "\t#command: ${4:}",
      "\t#manager: ${5:}",
      "\t#password: ${6:}",
      "\t#timeout: ${7:}",
      "\t#update_handle: ${8:}",
      "\t#username: ${9:}"
    ]
  },
  "redhat_subscription": {
    "prefix": "redhat_subscription",
    "description": "Manage registration and subscriptions to RHSM using C(subscription-manager)",
    "body": [
      "community.general.redhat_subscription:",
      "\t#activationkey: ${1:}",
      "\t#auto_attach: ${2:}",
      "\t#consumer_id: ${3:}",
      "\t#consumer_name: ${4:}",
      "\t#consumer_type: ${5:}",
      "\t#environment: ${6:}",
      "\t#force_register: ${7:false}",
      "\t#org_id: ${8:}",
      "\t#password: ${9:}",
      "\t#pool: ${10:^\\$}",
      "\t#pool_ids: ${11:[]}",
      "\t#release: ${12:}",
      "\t#rhsm_baseurl: ${13:}",
      "\t#rhsm_repo_ca_cert: ${14:}",
      "\t#server_hostname: ${15:}",
      "\t#server_insecure: ${16:}",
      "\t#server_port: ${17:}",
      "\t#server_prefix: ${18:}",
      "\t#server_proxy_hostname: ${19:}",
      "\t#server_proxy_password: ${20:}",
      "\t#server_proxy_port: ${21:}",
      "\t#server_proxy_scheme: ${22:}",
      "\t#server_proxy_user: ${23:}",
      "\t#state: ${24:#present|absent}",
      "\t#syspurpose: ${25:}",
      "\t#token: ${26:}",
      "\t#username: ${27:}"
    ]
  },
  "redis": {
    "prefix": "redis",
    "description": "Various redis commands, replica and flush",
    "body": [
      "community.general.redis:",
      "\t#ca_certs: ${1:}",
      "\t#command: ${2:config|flush|replica|slave}",
      "\t#db: ${3:}",
      "\t#flush_mode: ${4:#all|db}",
      "\t#login_host: ${5:localhost}",
      "\t#login_password: ${6:}",
      "\t#login_port: ${7:6379}",
      "\t#login_user: ${8:}",
      "\t#master_host: ${9:}",
      "\t#master_port: ${10:}",
      "\t#name: ${11:}",
      "\t#replica_mode: ${12:master|#replica|slave}",
      "\t#tls: ${13:false}",
      "\t#validate_certs: ${14:true}",
      "\t#value: ${15:}"
    ]
  },
  "redis_data": {
    "prefix": "redis_data",
    "description": "Set key value pairs in Redis",
    "body": [
      "community.general.redis_data:",
      "\tkey: ${1:}",
      "\t#ca_certs: ${2:}",
      "\t#existing: ${3:}",
      "\t#expiration: ${4:}",
      "\t#keep_ttl: ${5:}",
      "\t#login_host: ${6:localhost}",
      "\t#login_password: ${7:}",
      "\t#login_port: ${8:6379}",
      "\t#login_user: ${9:}",
      "\t#non_existing: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#tls: ${12:true}",
      "\t#validate_certs: ${13:true}",
      "\t#value: ${14:}"
    ]
  },
  "redis_data_incr": {
    "prefix": "redis_data_incr",
    "description": "Increment keys in Redis",
    "body": [
      "community.general.redis_data_incr:",
      "\tkey: ${1:}",
      "\t#ca_certs: ${2:}",
      "\t#increment_float: ${3:}",
      "\t#increment_int: ${4:}",
      "\t#login_host: ${5:localhost}",
      "\t#login_password: ${6:}",
      "\t#login_port: ${7:6379}",
      "\t#login_user: ${8:}",
      "\t#tls: ${9:true}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "redis_data_info": {
    "prefix": "redis_data_info",
    "description": "Get value of key in Redis database",
    "body": [
      "community.general.redis_data_info:",
      "\tkey: ${1:}",
      "\t#ca_certs: ${2:}",
      "\t#login_host: ${3:localhost}",
      "\t#login_password: ${4:}",
      "\t#login_port: ${5:6379}",
      "\t#login_user: ${6:}",
      "\t#tls: ${7:true}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "redis_info": {
    "prefix": "redis_info",
    "description": "Gather information about Redis servers",
    "body": [
      "community.general.redis_info:",
      "\t#ca_certs: ${1:}",
      "\t#login_host: ${2:localhost}",
      "\t#login_password: ${3:}",
      "\t#login_port: ${4:6379}",
      "\t#login_user: ${5:}",
      "\t#tls: ${6:false}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "rhevm": {
    "prefix": "rhevm",
    "description": "RHEV/oVirt automation",
    "body": [
      "community.general.rhevm:",
      "\tpassword: ${1:}",
      "\t#boot_order: ${2:['hd', 'network']}",
      "\t#cd_drive: ${3:}",
      "\t#cluster: ${4:\"\"}",
      "\t#cpu_share: ${5:0}",
      "\t#datacenter: ${6:Default}",
      "\t#del_prot: ${7:true}",
      "\t#disks: ${8:}",
      "\t#ifaces: ${9:}",
      "\t#image: ${10:}",
      "\t#insecure_api: ${11:false}",
      "\t#mempol: ${12:1}",
      "\t#name: ${13:}",
      "\t#osver: ${14:rhel_6x64}",
      "\t#port: ${15:443}",
      "\t#server: ${16:127.0.0.1}",
      "\t#state: ${17:absent|cd|down|info|ping|#present|restarted|up}",
      "\t#timeout: ${18:}",
      "\t#type: ${19:desktop|host|#server}",
      "\t#user: ${20:admin@internal}",
      "\t#vm_ha: ${21:true}",
      "\t#vmcpu: ${22:2}",
      "\t#vmhost: ${23:}",
      "\t#vmmem: ${24:1}"
    ]
  },
  "rhsm_release": {
    "prefix": "rhsm_release",
    "description": "Set or Unset RHSM Release version",
    "body": [
      "community.general.rhsm_release:",
      "\t#release: ${1:}"
    ]
  },
  "rhsm_repository": {
    "prefix": "rhsm_repository",
    "description": "Manage RHSM repositories using the subscription-manager command",
    "body": [
      "community.general.rhsm_repository:",
      "\tname: ${1:}",
      "\t#purge: ${2:false}",
      "\t#state: ${3:present|#enabled|absent|disabled}"
    ]
  },
  "riak": {
    "prefix": "riak",
    "description": "This module handles some common Riak operations",
    "body": [
      "community.general.riak:",
      "\t#command: ${1:ping|kv_test|join|plan|commit}",
      "\t#config_dir: ${2:/etc/riak}",
      "\t#http_conn: ${3:127.0.0.1:8098}",
      "\t#target_node: ${4:riak@127.0.0.1}",
      "\t#validate_certs: ${5:true}",
      "\t#wait_for_handoffs: ${6:0}",
      "\t#wait_for_ring: ${7:0}",
      "\t#wait_for_service: ${8:kv}"
    ]
  },
  "rocketchat": {
    "prefix": "rocketchat",
    "description": "Send notifications to Rocket Chat",
    "body": [
      "community.general.rocketchat:",
      "\tdomain: ${1:}",
      "\ttoken: ${2:}",
      "\t#attachments: ${3:}",
      "\t#channel: ${4:}",
      "\t#color: ${5:#normal|good|warning|danger}",
      "\t#icon_emoji: ${6:}",
      "\t#icon_url: ${7:https://docs.ansible.com/favicon.ico}",
      "\t#link_names: ${8:#1|0}",
      "\t#msg: ${9:}",
      "\t#protocol: ${10:http|#https}",
      "\t#username: ${11:Ansible}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "rollbar_deployment": {
    "prefix": "rollbar_deployment",
    "description": "Notify Rollbar about app deployments",
    "body": [
      "community.general.rollbar_deployment:",
      "\tenvironment: ${1:}",
      "\trevision: ${2:}",
      "\ttoken: ${3:}",
      "\t#comment: ${4:}",
      "\t#rollbar_user: ${5:}",
      "\t#url: ${6:https://api.rollbar.com/api/1/deploy/}",
      "\t#user: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "rpm_ostree_pkg": {
    "prefix": "rpm_ostree_pkg",
    "description": "Install or uninstall overlay additional packages",
    "body": [
      "community.general.rpm_ostree_pkg:",
      "\tname: ${1:}",
      "\t#state: ${2:absent|#present}"
    ]
  },
  "rundeck_acl_policy": {
    "prefix": "rundeck_acl_policy",
    "description": "Manage Rundeck ACL policies",
    "body": [
      "community.general.rundeck_acl_policy:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\turl: ${3:}",
      "\t#api_version: ${4:39}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#force: ${7:false}",
      "\t#force_basic_auth: ${8:false}",
      "\t#http_agent: ${9:ansible-httpget}",
      "\t#policy: ${10:}",
      "\t#project: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#url_password: ${13:}",
      "\t#url_username: ${14:}",
      "\t#use_gssapi: ${15:false}",
      "\t#use_proxy: ${16:true}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "rundeck_job_executions_info": {
    "prefix": "rundeck_job_executions_info",
    "description": "Query executions for a Rundeck job",
    "body": [
      "community.general.rundeck_job_executions_info:",
      "\tapi_token: ${1:}",
      "\tjob_id: ${2:}",
      "\turl: ${3:}",
      "\t#api_version: ${4:39}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#force: ${7:false}",
      "\t#force_basic_auth: ${8:false}",
      "\t#http_agent: ${9:ansible-httpget}",
      "\t#max: ${10:20}",
      "\t#offset: ${11:0}",
      "\t#status: ${12:succeeded|failed|aborted|running}",
      "\t#url_password: ${13:}",
      "\t#url_username: ${14:}",
      "\t#use_gssapi: ${15:false}",
      "\t#use_proxy: ${16:true}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "rundeck_job_run": {
    "prefix": "rundeck_job_run",
    "description": "Run a Rundeck job",
    "body": [
      "community.general.rundeck_job_run:",
      "\tapi_token: ${1:}",
      "\tjob_id: ${2:}",
      "\turl: ${3:}",
      "\t#abort_on_timeout: ${4:false}",
      "\t#api_version: ${5:39}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#filter_nodes: ${8:}",
      "\t#force: ${9:false}",
      "\t#force_basic_auth: ${10:false}",
      "\t#http_agent: ${11:ansible-httpget}",
      "\t#job_options: ${12:}",
      "\t#loglevel: ${13:debug|verbose|#info|warn|error}",
      "\t#run_at_time: ${14:}",
      "\t#url_password: ${15:}",
      "\t#url_username: ${16:}",
      "\t#use_gssapi: ${17:false}",
      "\t#use_proxy: ${18:true}",
      "\t#validate_certs: ${19:true}",
      "\t#wait_execution: ${20:true}",
      "\t#wait_execution_delay: ${21:5}",
      "\t#wait_execution_timeout: ${22:120}"
    ]
  },
  "rundeck_project": {
    "prefix": "rundeck_project",
    "description": "Manage Rundeck projects",
    "body": [
      "community.general.rundeck_project:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\turl: ${3:}",
      "\t#api_version: ${4:39}",
      "\t#client_cert: ${5:}",
      "\t#client_key: ${6:}",
      "\t#force: ${7:false}",
      "\t#force_basic_auth: ${8:false}",
      "\t#http_agent: ${9:ansible-httpget}",
      "\t#state: ${10:#present|absent}",
      "\t#url_password: ${11:}",
      "\t#url_username: ${12:}",
      "\t#use_gssapi: ${13:false}",
      "\t#use_proxy: ${14:true}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "runit": {
    "prefix": "runit",
    "description": "Manage runit services",
    "body": [
      "community.general.runit:",
      "\tname: ${1:}",
      "\t#enabled: ${2:}",
      "\t#service_dir: ${3:/var/service}",
      "\t#service_src: ${4:/etc/sv}",
      "\t#state: ${5:killed|once|reloaded|restarted|started|stopped}"
    ]
  },
  "say": {
    "prefix": "say",
    "description": "Makes a computer to speak",
    "body": [
      "community.general.say:",
      "\tmsg: ${1:}",
      "\t#voice: ${2:}"
    ]
  },
  "scaleway_compute": {
    "prefix": "scaleway_compute",
    "description": "Scaleway compute management module",
    "body": [
      "community.general.scaleway_compute:",
      "\tapi_token: ${1:}",
      "\tcommercial_type: ${2:}",
      "\timage: ${3:}",
      "\tregion: ${4:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#enable_ipv6: ${7:false}",
      "\t#name: ${8:}",
      "\t#organization: ${9:}",
      "\t#project: ${10:}",
      "\t#public_ip: ${11:absent}",
      "\t#query_parameters: ${12:{\\}}",
      "\t#security_group: ${13:}",
      "\t#state: ${14:#present|absent|running|restarted|stopped}",
      "\t#tags: ${15:[]}",
      "\t#validate_certs: ${16:true}",
      "\t#wait: ${17:false}",
      "\t#wait_sleep_time: ${18:3}",
      "\t#wait_timeout: ${19:300}"
    ]
  },
  "scaleway_compute_private_network": {
    "prefix": "scaleway_compute_private_network",
    "description": "Scaleway compute - private network management",
    "body": [
      "community.general.scaleway_compute_private_network:",
      "\tapi_token: ${1:}",
      "\tcompute_id: ${2:}",
      "\tprivate_network_id: ${3:}",
      "\tproject: ${4:}",
      "\tregion: ${5:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${6:30}",
      "\t#api_url: ${7:https://api.scaleway.com}",
      "\t#query_parameters: ${8:{\\}}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "scaleway_container": {
    "prefix": "scaleway_container",
    "description": "Scaleway Container management",
    "body": [
      "community.general.scaleway_container:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tnamespace_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\tregistry_image: ${5:}",
      "\t#api_timeout: ${6:30}",
      "\t#api_url: ${7:https://api.scaleway.com}",
      "\t#container_timeout: ${8:}",
      "\t#description: ${9:\"\"}",
      "\t#environment_variables: ${10:{\\}}",
      "\t#max_concurrency: ${11:}",
      "\t#max_scale: ${12:}",
      "\t#memory_limit: ${13:}",
      "\t#min_scale: ${14:}",
      "\t#port: ${15:}",
      "\t#privacy: ${16:#public|private}",
      "\t#protocol: ${17:#http1|h2c}",
      "\t#query_parameters: ${18:{\\}}",
      "\t#redeploy: ${19:false}",
      "\t#secret_environment_variables: ${20:{\\}}",
      "\t#state: ${21:#present|absent}",
      "\t#validate_certs: ${22:true}",
      "\t#wait: ${23:true}",
      "\t#wait_sleep_time: ${24:3}",
      "\t#wait_timeout: ${25:300}"
    ]
  },
  "scaleway_container_info": {
    "prefix": "scaleway_container_info",
    "description": "Retrieve information on Scaleway Container",
    "body": [
      "community.general.scaleway_container_info:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tnamespace_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#query_parameters: ${7:{\\}}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "scaleway_container_namespace": {
    "prefix": "scaleway_container_namespace",
    "description": "Scaleway Container namespace management",
    "body": [
      "community.general.scaleway_container_namespace:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tproject_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#description: ${7:\"\"}",
      "\t#environment_variables: ${8:{\\}}",
      "\t#query_parameters: ${9:{\\}}",
      "\t#secret_environment_variables: ${10:{\\}}",
      "\t#state: ${11:#present|absent}",
      "\t#validate_certs: ${12:true}",
      "\t#wait: ${13:true}",
      "\t#wait_sleep_time: ${14:3}",
      "\t#wait_timeout: ${15:300}"
    ]
  },
  "scaleway_container_namespace_info": {
    "prefix": "scaleway_container_namespace_info",
    "description": "Retrieve information on Scaleway Container namespace",
    "body": [
      "community.general.scaleway_container_namespace_info:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tproject_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#query_parameters: ${7:{\\}}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "scaleway_container_registry": {
    "prefix": "scaleway_container_registry",
    "description": "Scaleway Container registry management module",
    "body": [
      "community.general.scaleway_container_registry:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tproject_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#description: ${7:\"\"}",
      "\t#privacy_policy: ${8:public|#private}",
      "\t#query_parameters: ${9:{\\}}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}",
      "\t#wait: ${12:true}",
      "\t#wait_sleep_time: ${13:3}",
      "\t#wait_timeout: ${14:300}"
    ]
  },
  "scaleway_container_registry_info": {
    "prefix": "scaleway_container_registry_info",
    "description": "Scaleway Container registry info module",
    "body": [
      "community.general.scaleway_container_registry_info:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tproject_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#query_parameters: ${7:{\\}}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "scaleway_database_backup": {
    "prefix": "scaleway_database_backup",
    "description": "Scaleway database backups management module",
    "body": [
      "community.general.scaleway_database_backup:",
      "\tapi_token: ${1:}",
      "\tregion: ${2:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${3:30}",
      "\t#api_url: ${4:https://api.scaleway.com}",
      "\t#database_name: ${5:}",
      "\t#expires_at: ${6:}",
      "\t#id: ${7:}",
      "\t#instance_id: ${8:}",
      "\t#name: ${9:}",
      "\t#query_parameters: ${10:{\\}}",
      "\t#state: ${11:#present|absent|exported|restored}",
      "\t#validate_certs: ${12:true}",
      "\t#wait: ${13:false}",
      "\t#wait_sleep_time: ${14:3}",
      "\t#wait_timeout: ${15:300}"
    ]
  },
  "scaleway_function": {
    "prefix": "scaleway_function",
    "description": "Scaleway Function management",
    "body": [
      "community.general.scaleway_function:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tnamespace_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\truntime: ${5:}",
      "\t#api_timeout: ${6:30}",
      "\t#api_url: ${7:https://api.scaleway.com}",
      "\t#description: ${8:\"\"}",
      "\t#environment_variables: ${9:{\\}}",
      "\t#function_timeout: ${10:}",
      "\t#handler: ${11:}",
      "\t#max_scale: ${12:}",
      "\t#memory_limit: ${13:}",
      "\t#min_scale: ${14:}",
      "\t#privacy: ${15:#public|private}",
      "\t#query_parameters: ${16:{\\}}",
      "\t#redeploy: ${17:false}",
      "\t#secret_environment_variables: ${18:{\\}}",
      "\t#state: ${19:#present|absent}",
      "\t#validate_certs: ${20:true}",
      "\t#wait: ${21:true}",
      "\t#wait_sleep_time: ${22:3}",
      "\t#wait_timeout: ${23:300}"
    ]
  },
  "scaleway_function_info": {
    "prefix": "scaleway_function_info",
    "description": "Retrieve information on Scaleway Function",
    "body": [
      "community.general.scaleway_function_info:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tnamespace_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#query_parameters: ${7:{\\}}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "scaleway_function_namespace": {
    "prefix": "scaleway_function_namespace",
    "description": "Scaleway Function namespace management",
    "body": [
      "community.general.scaleway_function_namespace:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tproject_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#description: ${7:\"\"}",
      "\t#environment_variables: ${8:{\\}}",
      "\t#query_parameters: ${9:{\\}}",
      "\t#secret_environment_variables: ${10:{\\}}",
      "\t#state: ${11:#present|absent}",
      "\t#validate_certs: ${12:true}",
      "\t#wait: ${13:true}",
      "\t#wait_sleep_time: ${14:3}",
      "\t#wait_timeout: ${15:300}"
    ]
  },
  "scaleway_function_namespace_info": {
    "prefix": "scaleway_function_namespace_info",
    "description": "Retrieve information on Scaleway Function namespace",
    "body": [
      "community.general.scaleway_function_namespace_info:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tproject_id: ${3:}",
      "\tregion: ${4:fr-par|nl-ams|pl-waw}",
      "\t#api_timeout: ${5:30}",
      "\t#api_url: ${6:https://api.scaleway.com}",
      "\t#query_parameters: ${7:{\\}}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "scaleway_image_info": {
    "prefix": "scaleway_image_info",
    "description": "Gather information about the Scaleway images available",
    "body": [
      "community.general.scaleway_image_info:",
      "\tapi_token: ${1:}",
      "\tregion: ${2:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${3:30}",
      "\t#api_url: ${4:https://api.scaleway.com}",
      "\t#query_parameters: ${5:{\\}}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "scaleway_ip": {
    "prefix": "scaleway_ip",
    "description": "Scaleway IP management module",
    "body": [
      "community.general.scaleway_ip:",
      "\tapi_token: ${1:}",
      "\torganization: ${2:}",
      "\tregion: ${3:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${4:30}",
      "\t#api_url: ${5:https://api.scaleway.com}",
      "\t#id: ${6:}",
      "\t#query_parameters: ${7:{\\}}",
      "\t#reverse: ${8:}",
      "\t#server: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "scaleway_ip_info": {
    "prefix": "scaleway_ip_info",
    "description": "Gather information about the Scaleway ips available",
    "body": [
      "community.general.scaleway_ip_info:",
      "\tapi_token: ${1:}",
      "\tregion: ${2:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${3:30}",
      "\t#api_url: ${4:https://api.scaleway.com}",
      "\t#query_parameters: ${5:{\\}}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "scaleway_lb": {
    "prefix": "scaleway_lb",
    "description": "Scaleway load-balancer management module",
    "body": [
      "community.general.scaleway_lb:",
      "\tapi_token: ${1:}",
      "\tdescription: ${2:}",
      "\tname: ${3:}",
      "\torganization_id: ${4:}",
      "\tregion: ${5:nl-ams|fr-par|pl-waw}",
      "\t#api_timeout: ${6:30}",
      "\t#api_url: ${7:https://api.scaleway.com}",
      "\t#query_parameters: ${8:{\\}}",
      "\t#state: ${9:#present|absent}",
      "\t#tags: ${10:[]}",
      "\t#validate_certs: ${11:true}",
      "\t#wait: ${12:false}",
      "\t#wait_sleep_time: ${13:3}",
      "\t#wait_timeout: ${14:300}"
    ]
  },
  "scaleway_organization_info": {
    "prefix": "scaleway_organization_info",
    "description": "Gather information about the Scaleway organizations available",
    "body": [
      "community.general.scaleway_organization_info:",
      "\tapi_token: ${1:}",
      "\t#api_timeout: ${2:30}",
      "\t#api_url: ${3:https://account.scaleway.com}",
      "\t#query_parameters: ${4:{\\}}",
      "\t#validate_certs: ${5:true}"
    ]
  },
  "scaleway_private_network": {
    "prefix": "scaleway_private_network",
    "description": "Scaleway private network management",
    "body": [
      "community.general.scaleway_private_network:",
      "\tapi_token: ${1:}",
      "\tproject: ${2:}",
      "\tregion: ${3:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${4:30}",
      "\t#api_url: ${5:https://api.scaleway.com}",
      "\t#name: ${6:}",
      "\t#query_parameters: ${7:{\\}}",
      "\t#state: ${8:#present|absent}",
      "\t#tags: ${9:[]}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "scaleway_security_group": {
    "prefix": "scaleway_security_group",
    "description": "Scaleway Security Group management module",
    "body": [
      "community.general.scaleway_security_group:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\torganization: ${3:}",
      "\tregion: ${4:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\tstateful: ${5:}",
      "\t#api_timeout: ${6:30}",
      "\t#api_url: ${7:https://api.scaleway.com}",
      "\t#description: ${8:}",
      "\t#inbound_default_policy: ${9:accept|drop}",
      "\t#organization_default: ${10:}",
      "\t#outbound_default_policy: ${11:accept|drop}",
      "\t#query_parameters: ${12:{\\}}",
      "\t#state: ${13:absent|#present}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "scaleway_security_group_info": {
    "prefix": "scaleway_security_group_info",
    "description": "Gather information about the Scaleway security groups available",
    "body": [
      "community.general.scaleway_security_group_info:",
      "\tapi_token: ${1:}",
      "\tregion: ${2:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${3:30}",
      "\t#api_url: ${4:https://api.scaleway.com}",
      "\t#query_parameters: ${5:{\\}}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "scaleway_security_group_rule": {
    "prefix": "scaleway_security_group_rule",
    "description": "Scaleway Security Group Rule management module",
    "body": [
      "community.general.scaleway_security_group_rule:",
      "\taction: ${1:accept|drop}",
      "\tapi_token: ${2:}",
      "\tdirection: ${3:inbound|outbound}",
      "\tport: ${4:}",
      "\tprotocol: ${5:TCP|UDP|ICMP}",
      "\tregion: ${6:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\tsecurity_group: ${7:}",
      "\t#api_timeout: ${8:30}",
      "\t#api_url: ${9:https://api.scaleway.com}",
      "\t#ip_range: ${10:0.0.0.0/0}",
      "\t#query_parameters: ${11:{\\}}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "scaleway_server_info": {
    "prefix": "scaleway_server_info",
    "description": "Gather information about the Scaleway servers available",
    "body": [
      "community.general.scaleway_server_info:",
      "\tapi_token: ${1:}",
      "\tregion: ${2:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${3:30}",
      "\t#api_url: ${4:https://api.scaleway.com}",
      "\t#query_parameters: ${5:{\\}}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "scaleway_snapshot_info": {
    "prefix": "scaleway_snapshot_info",
    "description": "Gather information about the Scaleway snapshots available",
    "body": [
      "community.general.scaleway_snapshot_info:",
      "\tapi_token: ${1:}",
      "\tregion: ${2:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${3:30}",
      "\t#api_url: ${4:https://api.scaleway.com}",
      "\t#query_parameters: ${5:{\\}}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "scaleway_sshkey": {
    "prefix": "scaleway_sshkey",
    "description": "Scaleway SSH keys management module",
    "body": [
      "community.general.scaleway_sshkey:",
      "\tapi_token: ${1:}",
      "\tssh_pub_key: ${2:}",
      "\t#api_timeout: ${3:30}",
      "\t#api_url: ${4:https://account.scaleway.com}",
      "\t#query_parameters: ${5:{\\}}",
      "\t#state: ${6:#present|absent}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "scaleway_user_data": {
    "prefix": "scaleway_user_data",
    "description": "Scaleway user_data management module",
    "body": [
      "community.general.scaleway_user_data:",
      "\tapi_token: ${1:}",
      "\tregion: ${2:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\tserver_id: ${3:}",
      "\t#api_timeout: ${4:30}",
      "\t#api_url: ${5:https://api.scaleway.com}",
      "\t#query_parameters: ${6:{\\}}",
      "\t#user_data: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "scaleway_volume": {
    "prefix": "scaleway_volume",
    "description": "Scaleway volumes management module",
    "body": [
      "community.general.scaleway_volume:",
      "\tapi_token: ${1:}",
      "\tname: ${2:}",
      "\tregion: ${3:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${4:30}",
      "\t#api_url: ${5:https://api.scaleway.com}",
      "\t#organization: ${6:}",
      "\t#project: ${7:}",
      "\t#query_parameters: ${8:{\\}}",
      "\t#size: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}",
      "\t#volume_type: ${12:}"
    ]
  },
  "scaleway_volume_info": {
    "prefix": "scaleway_volume_info",
    "description": "Gather information about the Scaleway volumes available",
    "body": [
      "community.general.scaleway_volume_info:",
      "\tapi_token: ${1:}",
      "\tregion: ${2:ams1|EMEA-NL-EVS|par1|EMEA-FR-PAR1|par2|EMEA-FR-PAR2|waw1|EMEA-PL-WAW1}",
      "\t#api_timeout: ${3:30}",
      "\t#api_url: ${4:https://api.scaleway.com}",
      "\t#query_parameters: ${5:{\\}}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "sefcontext": {
    "prefix": "sefcontext",
    "description": "Manages SELinux file context mapping definitions",
    "body": [
      "community.general.sefcontext:",
      "\ttarget: ${1:}",
      "\t#ftype: ${2:#a|b|c|d|f|l|p|s}",
      "\t#ignore_selinux_state: ${3:false}",
      "\t#reload: ${4:true}",
      "\t#selevel: ${5:}",
      "\t#setype: ${6:}",
      "\t#seuser: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#substitute: ${9:}"
    ]
  },
  "selinux_permissive": {
    "prefix": "selinux_permissive",
    "description": "Change permissive domain in SELinux policy",
    "body": [
      "community.general.selinux_permissive:",
      "\tdomain: ${1:}",
      "\tpermissive: ${2:}",
      "\t#no_reload: ${3:false}",
      "\t#store: ${4:\"\"}"
    ]
  },
  "selogin": {
    "prefix": "selogin",
    "description": "Manages linux user to SELinux user mapping",
    "body": [
      "community.general.selogin:",
      "\tlogin: ${1:}",
      "\t#ignore_selinux_state: ${2:false}",
      "\t#reload: ${3:true}",
      "\t#selevel: ${4:s0}",
      "\t#seuser: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "sendgrid": {
    "prefix": "sendgrid",
    "description": "Sends an email with the SendGrid API",
    "body": [
      "community.general.sendgrid:",
      "\tbody: ${1:}",
      "\tfrom_address: ${2:}",
      "\tsubject: ${3:}",
      "\tto_addresses: ${4:}",
      "\t#api_key: ${5:}",
      "\t#attachments: ${6:}",
      "\t#bcc: ${7:}",
      "\t#cc: ${8:}",
      "\t#from_name: ${9:}",
      "\t#headers: ${10:}",
      "\t#html_body: ${11:false}",
      "\t#password: ${12:}",
      "\t#username: ${13:}"
    ]
  },
  "sensu_check": {
    "prefix": "sensu_check",
    "description": "Manage Sensu checks",
    "body": [
      "community.general.sensu_check:",
      "\tname: ${1:}",
      "\t#aggregate: ${2:}",
      "\t#backup: ${3:false}",
      "\t#command: ${4:}",
      "\t#custom: ${5:}",
      "\t#dependencies: ${6:}",
      "\t#handle: ${7:}",
      "\t#handlers: ${8:}",
      "\t#high_flap_threshold: ${9:}",
      "\t#interval: ${10:}",
      "\t#low_flap_threshold: ${11:}",
      "\t#metric: ${12:false}",
      "\t#occurrences: ${13:}",
      "\t#path: ${14:/etc/sensu/conf.d/checks.json}",
      "\t#publish: ${15:}",
      "\t#refresh: ${16:}",
      "\t#source: ${17:}",
      "\t#standalone: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#subdue_begin: ${20:}",
      "\t#subdue_end: ${21:}",
      "\t#subscribers: ${22:}",
      "\t#timeout: ${23:}",
      "\t#ttl: ${24:}"
    ]
  },
  "sensu_client": {
    "prefix": "sensu_client",
    "description": "Manages Sensu client configuration",
    "body": [
      "community.general.sensu_client:",
      "\t#address: ${1:}",
      "\t#chef: ${2:}",
      "\t#deregister: ${3:}",
      "\t#deregistration: ${4:}",
      "\t#ec2: ${5:}",
      "\t#keepalive: ${6:}",
      "\t#keepalives: ${7:true}",
      "\t#name: ${8:}",
      "\t#puppet: ${9:}",
      "\t#redact: ${10:}",
      "\t#registration: ${11:}",
      "\t#safe_mode: ${12:false}",
      "\t#servicenow: ${13:}",
      "\t#socket: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#subscriptions: ${16:}"
    ]
  },
  "sensu_handler": {
    "prefix": "sensu_handler",
    "description": "Manages Sensu handler configuration",
    "body": [
      "community.general.sensu_handler:",
      "\tname: ${1:}",
      "\t#command: ${2:}",
      "\t#filter: ${3:}",
      "\t#filters: ${4:}",
      "\t#handle_flapping: ${5:false}",
      "\t#handle_silenced: ${6:false}",
      "\t#handlers: ${7:}",
      "\t#mutator: ${8:}",
      "\t#pipe: ${9:}",
      "\t#severities: ${10:}",
      "\t#socket: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#timeout: ${13:10}",
      "\t#type: ${14:pipe|tcp|udp|transport|set}"
    ]
  },
  "sensu_silence": {
    "prefix": "sensu_silence",
    "description": "Manage Sensu silence entries",
    "body": [
      "community.general.sensu_silence:",
      "\tsubscription: ${1:}",
      "\t#check: ${2:}",
      "\t#creator: ${3:}",
      "\t#expire: ${4:}",
      "\t#expire_on_resolve: ${5:}",
      "\t#reason: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#url: ${8:http://127.0.01:4567}"
    ]
  },
  "sensu_subscription": {
    "prefix": "sensu_subscription",
    "description": "Manage Sensu subscriptions",
    "body": [
      "community.general.sensu_subscription:",
      "\tname: ${1:}",
      "\t#backup: ${2:false}",
      "\t#path: ${3:/etc/sensu/conf.d/subscriptions.json}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "seport": {
    "prefix": "seport",
    "description": "Manages SELinux network port type definitions",
    "body": [
      "community.general.seport:",
      "\tports: ${1:}",
      "\tproto: ${2:tcp|udp}",
      "\tsetype: ${3:}",
      "\t#ignore_selinux_state: ${4:false}",
      "\t#local: ${5:false}",
      "\t#reload: ${6:true}",
      "\t#state: ${7:absent|#present}"
    ]
  },
  "serverless": {
    "prefix": "serverless",
    "description": "Manages a Serverless Framework project",
    "body": [
      "community.general.serverless:",
      "\tservice_path: ${1:}",
      "\t#deploy: ${2:true}",
      "\t#force: ${3:false}",
      "\t#region: ${4:\"\"}",
      "\t#serverless_bin_path: ${5:}",
      "\t#stage: ${6:\"\"}",
      "\t#state: ${7:absent|#present}",
      "\t#verbose: ${8:false}"
    ]
  },
  "shutdown": {
    "prefix": "shutdown",
    "description": "Shut down a machine",
    "body": [
      "community.general.shutdown:",
      "\t#delay: ${1:0}",
      "\t#msg: ${2:Shut down initiated by Ansible}",
      "\t#search_paths: ${3:['/sbin', '/usr/sbin', '/usr/local/sbin']}"
    ]
  },
  "simpleinit_msb": {
    "prefix": "simpleinit_msb",
    "description": "Manage services on Source Mage GNU/Linux",
    "body": [
      "community.general.simpleinit_msb:",
      "\tname: ${1:}",
      "\t#enabled: ${2:}",
      "\t#state: ${3:running|started|stopped|restarted|reloaded}"
    ]
  },
  "sl_vm": {
    "prefix": "sl_vm",
    "description": "Create or cancel a virtual instance in SoftLayer",
    "body": [
      "community.general.sl_vm:",
      "\t#cpus: ${1:1|2|4|8|16|32|56}",
      "\t#datacenter: ${2:ams01|ams03|che01|dal01|dal05|dal06|dal09|dal10|dal12|dal13|fra02|fra04|fra05|hkg02|hou02|lon02|lon04|lon06|mel01|mex01|mil01|mon01|osl01|par01|sao01|sea01|seo01|sjc01|sjc03|sjc04|sng01|syd01|syd04|tok02|tor01|wdc01|wdc04|wdc06|wdc07}",
      "\t#dedicated: ${3:false}",
      "\t#disks: ${4:[25]}",
      "\t#domain: ${5:}",
      "\t#flavor: ${6:}",
      "\t#hostname: ${7:}",
      "\t#hourly: ${8:true}",
      "\t#image_id: ${9:}",
      "\t#instance_id: ${10:}",
      "\t#local_disk: ${11:true}",
      "\t#memory: ${12:1024|2048|4096|6144|8192|12288|16384|32768|49152|65536|131072|247808}",
      "\t#nic_speed: ${13:10|100|1000}",
      "\t#os_code: ${14:}",
      "\t#post_uri: ${15:}",
      "\t#private: ${16:false}",
      "\t#private_vlan: ${17:}",
      "\t#public_vlan: ${18:}",
      "\t#ssh_keys: ${19:[]}",
      "\t#state: ${20:absent|#present}",
      "\t#tags: ${21:}",
      "\t#wait: ${22:true}",
      "\t#wait_time: ${23:600}"
    ]
  },
  "slack": {
    "prefix": "slack",
    "description": "Send Slack notifications",
    "body": [
      "community.general.slack:",
      "\ttoken: ${1:}",
      "\t#attachments: ${2:}",
      "\t#blocks: ${3:}",
      "\t#channel: ${4:}",
      "\t#color: ${5:normal}",
      "\t#domain: ${6:}",
      "\t#icon_emoji: ${7:}",
      "\t#icon_url: ${8:https://docs.ansible.com/favicon.ico}",
      "\t#link_names: ${9:#1|0}",
      "\t#message_id: ${10:}",
      "\t#msg: ${11:}",
      "\t#parse: ${12:full|none}",
      "\t#prepend_hash: ${13:always|never|#auto}",
      "\t#thread_id: ${14:}",
      "\t#username: ${15:Ansible}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "slackpkg": {
    "prefix": "slackpkg",
    "description": "Package manager for Slackware >= 12.2",
    "body": [
      "community.general.slackpkg:",
      "\tname: ${1:}",
      "\t#state: ${2:#present|absent|latest|installed|removed}",
      "\t#update_cache: ${3:false}"
    ]
  },
  "smartos_image_info": {
    "prefix": "smartos_image_info",
    "description": "Get SmartOS image details",
    "body": [
      "community.general.smartos_image_info:",
      "\t#filters: ${1:}"
    ]
  },
  "snap": {
    "prefix": "snap",
    "description": "Manages snaps",
    "body": [
      "community.general.snap:",
      "\tname: ${1:}",
      "\t#channel: ${2:}",
      "\t#classic: ${3:false}",
      "\t#dangerous: ${4:false}",
      "\t#options: ${5:}",
      "\t#state: ${6:absent|#present|enabled|disabled}"
    ]
  },
  "snap_alias": {
    "prefix": "snap_alias",
    "description": "Manages snap aliases",
    "body": [
      "community.general.snap_alias:",
      "\t#alias: ${1:}",
      "\t#name: ${2:}",
      "\t#state: ${3:absent|#present}"
    ]
  },
  "snmp_facts": {
    "prefix": "snmp_facts",
    "description": "Retrieve facts for a device using SNMP",
    "body": [
      "community.general.snmp_facts:",
      "\thost: ${1:}",
      "\tversion: ${2:v2|v2c|v3}",
      "\t#authkey: ${3:}",
      "\t#community: ${4:}",
      "\t#integrity: ${5:md5|sha}",
      "\t#level: ${6:authNoPriv|authPriv}",
      "\t#privacy: ${7:aes|des}",
      "\t#privkey: ${8:}",
      "\t#retries: ${9:}",
      "\t#timeout: ${10:}",
      "\t#username: ${11:}"
    ]
  },
  "solaris_zone": {
    "prefix": "solaris_zone",
    "description": "Manage Solaris zones",
    "body": [
      "community.general.solaris_zone:",
      "\tname: ${1:}",
      "\t#attach_options: ${2:\"\"}",
      "\t#config: ${3:\"\"}",
      "\t#create_options: ${4:\"\"}",
      "\t#install_options: ${5:\"\"}",
      "\t#path: ${6:}",
      "\t#root_password: ${7:}",
      "\t#sparse: ${8:false}",
      "\t#state: ${9:absent|attached|configured|detached|installed|#present|running|started|stopped}",
      "\t#timeout: ${10:600}"
    ]
  },
  "sorcery": {
    "prefix": "sorcery",
    "description": "Package manager for Source Mage GNU/Linux",
    "body": [
      "community.general.sorcery:",
      "\t#cache_valid_time: ${1:0}",
      "\t#depends: ${2:}",
      "\t#name: ${3:}",
      "\t#repository: ${4:}",
      "\t#state: ${5:#present|latest|absent|cast|dispelled|rebuild}",
      "\t#update: ${6:false}",
      "\t#update_cache: ${7:false}"
    ]
  },
  "spectrum_device": {
    "prefix": "spectrum_device",
    "description": "Creates/deletes devices in CA Spectrum",
    "body": [
      "community.general.spectrum_device:",
      "\tcommunity: ${1:}",
      "\tdevice: ${2:}",
      "\tlandscape: ${3:}",
      "\turl: ${4:}",
      "\turl_password: ${5:}",
      "\turl_username: ${6:}",
      "\t#agentport: ${7:161}",
      "\t#state: ${8:#present|absent}",
      "\t#use_proxy: ${9:true}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "spectrum_model_attrs": {
    "prefix": "spectrum_model_attrs",
    "description": "Enforce a model's attributes in CA Spectrum",
    "body": [
      "community.general.spectrum_model_attrs:",
      "\tattributes: ${1:}",
      "\tname: ${2:}",
      "\ttype: ${3:}",
      "\turl: ${4:}",
      "\turl_password: ${5:}",
      "\turl_username: ${6:}",
      "\t#use_proxy: ${7:true}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "spotinst_aws_elastigroup": {
    "prefix": "spotinst_aws_elastigroup",
    "description": "Create, update or delete Spotinst AWS Elastigroups",
    "body": [
      "community.general.spotinst_aws_elastigroup:",
      "\tavailability_vs_cost: ${1:}",
      "\tavailability_zones: ${2:}",
      "\timage_id: ${3:}",
      "\tmax_size: ${4:}",
      "\tmin_size: ${5:}",
      "\tname: ${6:}",
      "\tproduct: ${7:}",
      "\tsecurity_group_ids: ${8:}",
      "\tspot_instance_types: ${9:}",
      "\ttarget: ${10:}",
      "\t#account_id: ${11:}",
      "\t#block_device_mappings: ${12:}",
      "\t#chef: ${13:}",
      "\t#credentials_path: ${14:~/.spotinst/credentials}",
      "\t#do_not_update: ${15:[]}",
      "\t#down_scaling_policies: ${16:}",
      "\t#draining_timeout: ${17:}",
      "\t#ebs_optimized: ${18:}",
      "\t#ebs_volume_pool: ${19:}",
      "\t#ecs: ${20:}",
      "\t#elastic_beanstalk: ${21:}",
      "\t#elastic_ips: ${22:}",
      "\t#fallback_to_od: ${23:}",
      "\t#health_check_grace_period: ${24:}",
      "\t#health_check_type: ${25:}",
      "\t#health_check_unhealthy_duration_before_replacement: ${26:}",
      "\t#iam_role_arn: ${27:}",
      "\t#iam_role_name: ${28:}",
      "\t#id: ${29:}",
      "\t#key_pair: ${30:}",
      "\t#kubernetes: ${31:}",
      "\t#lifetime_period: ${32:}",
      "\t#load_balancers: ${33:}",
      "\t#mesosphere: ${34:}",
      "\t#monitoring: ${35:}",
      "\t#multai_load_balancers: ${36:}",
      "\t#multai_token: ${37:}",
      "\t#network_interfaces: ${38:}",
      "\t#on_demand_count: ${39:}",
      "\t#on_demand_instance_type: ${40:}",
      "\t#opsworks: ${41:}",
      "\t#persistence: ${42:}",
      "\t#rancher: ${43:}",
      "\t#right_scale: ${44:}",
      "\t#risk: ${45:}",
      "\t#roll_config: ${46:}",
      "\t#scheduled_tasks: ${47:}",
      "\t#shutdown_script: ${48:}",
      "\t#signals: ${49:}",
      "\t#spin_up_time: ${50:}",
      "\t#state: ${51:#present|absent}",
      "\t#tags: ${52:}",
      "\t#target_group_arns: ${53:}",
      "\t#target_tracking_policies: ${54:}",
      "\t#tenancy: ${55:}",
      "\t#terminate_at_end_of_billing_hour: ${56:}",
      "\t#token: ${57:}",
      "\t#uniqueness_by: ${58:id|#name}",
      "\t#unit: ${59:}",
      "\t#up_scaling_policies: ${60:}",
      "\t#user_data: ${61:}",
      "\t#utilize_reserved_instances: ${62:}",
      "\t#wait_for_instances: ${63:false}",
      "\t#wait_timeout: ${64:}"
    ]
  },
  "ss_3par_cpg": {
    "prefix": "ss_3par_cpg",
    "description": "Manage HPE StoreServ 3PAR CPG",
    "body": [
      "community.general.ss_3par_cpg:",
      "\tcpg_name: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tstorage_system_ip: ${3:}",
      "\tstorage_system_password: ${4:}",
      "\tstorage_system_username: ${5:}",
      "\t#disk_type: ${6:FC|NL|SSD}",
      "\t#domain: ${7:}",
      "\t#growth_increment: ${8:}",
      "\t#growth_limit: ${9:}",
      "\t#growth_warning: ${10:}",
      "\t#high_availability: ${11:PORT|CAGE|MAG}",
      "\t#raid_type: ${12:R0|R1|R5|R6}",
      "\t#secure: ${13:false}",
      "\t#set_size: ${14:}"
    ]
  },
  "ssh_config": {
    "prefix": "ssh_config",
    "description": "Manage SSH config for user",
    "body": [
      "community.general.ssh_config:",
      "\thost: ${1:}",
      "\t#add_keys_to_agent: ${2:}",
      "\t#controlmaster: ${3:yes|no|ask|auto|autoask}",
      "\t#controlpath: ${4:}",
      "\t#controlpersist: ${5:}",
      "\t#forward_agent: ${6:}",
      "\t#group: ${7:}",
      "\t#host_key_algorithms: ${8:}",
      "\t#hostname: ${9:}",
      "\t#identities_only: ${10:}",
      "\t#identity_file: ${11:}",
      "\t#port: ${12:}",
      "\t#proxycommand: ${13:}",
      "\t#proxyjump: ${14:}",
      "\t#remote_user: ${15:}",
      "\t#ssh_config_file: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#strict_host_key_checking: ${18:yes|no|ask}",
      "\t#user: ${19:}",
      "\t#user_known_hosts_file: ${20:}"
    ]
  },
  "stacki_host": {
    "prefix": "stacki_host",
    "description": "Add or remove host to stacki front-end",
    "body": [
      "community.general.stacki_host:",
      "\tname: ${1:}",
      "\tstacki_endpoint: ${2:}",
      "\tstacki_password: ${3:}",
      "\tstacki_user: ${4:}",
      "\t#appliance: ${5:backend}",
      "\t#force_install: ${6:false}",
      "\t#network: ${7:private}",
      "\t#prim_intf: ${8:}",
      "\t#prim_intf_ip: ${9:}",
      "\t#prim_intf_mac: ${10:}",
      "\t#rack: ${11:0}",
      "\t#rank: ${12:0}",
      "\t#state: ${13:absent|#present}"
    ]
  },
  "statsd": {
    "prefix": "statsd",
    "description": "Send metrics to StatsD",
    "body": [
      "community.general.statsd:",
      "\tmetric: ${1:}",
      "\tmetric_type: ${2:counter|gauge}",
      "\tvalue: ${3:}",
      "\t#delta: ${4:false}",
      "\t#host: ${5:localhost}",
      "\t#metric_prefix: ${6:\"\"}",
      "\t#port: ${7:8125}",
      "\t#protocol: ${8:#udp|tcp}",
      "\t#state: ${9:#present}",
      "\t#timeout: ${10:1.0}"
    ]
  },
  "statusio_maintenance": {
    "prefix": "statusio_maintenance",
    "description": "Create maintenance windows for your status.io dashboard",
    "body": [
      "community.general.statusio_maintenance:",
      "\tapi_id: ${1:}",
      "\tapi_key: ${2:}",
      "\tstatuspage: ${3:}",
      "\t#all_infrastructure_affected: ${4:false}",
      "\t#automation: ${5:false}",
      "\t#components: ${6:}",
      "\t#containers: ${7:}",
      "\t#desc: ${8:Created by Ansible}",
      "\t#maintenance_id: ${9:}",
      "\t#maintenance_notify_1_hr: ${10:false}",
      "\t#maintenance_notify_24_hr: ${11:false}",
      "\t#maintenance_notify_72_hr: ${12:false}",
      "\t#maintenance_notify_now: ${13:false}",
      "\t#minutes: ${14:10}",
      "\t#start_date: ${15:}",
      "\t#start_time: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#title: ${18:A new maintenance window}",
      "\t#url: ${19:https://api.status.io}"
    ]
  },
  "sudoers": {
    "prefix": "sudoers",
    "description": "Manage sudoers files",
    "body": [
      "community.general.sudoers:",
      "\tname: ${1:}",
      "\t#commands: ${2:}",
      "\t#group: ${3:}",
      "\t#host: ${4:ALL}",
      "\t#nopassword: ${5:true}",
      "\t#runas: ${6:}",
      "\t#setenv: ${7:false}",
      "\t#state: ${8:#present|absent}",
      "\t#sudoers_path: ${9:/etc/sudoers.d}",
      "\t#user: ${10:}",
      "\t#validation: ${11:absent|#detect|required}"
    ]
  },
  "supervisorctl": {
    "prefix": "supervisorctl",
    "description": "Manage the state of a program or group of programs running via supervisord",
    "body": [
      "community.general.supervisorctl:",
      "\tname: ${1:}",
      "\tstate: ${2:present|started|stopped|restarted|absent|signalled}",
      "\t#config: ${3:}",
      "\t#password: ${4:}",
      "\t#server_url: ${5:}",
      "\t#signal: ${6:}",
      "\t#stop_before_removing: ${7:false}",
      "\t#supervisorctl_path: ${8:}",
      "\t#username: ${9:}"
    ]
  },
  "svc": {
    "prefix": "svc",
    "description": "Manage daemontools services",
    "body": [
      "community.general.svc:",
      "\tname: ${1:}",
      "\t#downed: ${2:}",
      "\t#enabled: ${3:}",
      "\t#service_dir: ${4:/service}",
      "\t#service_src: ${5:/etc/service}",
      "\t#state: ${6:killed|once|reloaded|restarted|started|stopped}"
    ]
  },
  "svr4pkg": {
    "prefix": "svr4pkg",
    "description": "Manage Solaris SVR4 packages",
    "body": [
      "community.general.svr4pkg:",
      "\tname: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#category: ${3:false}",
      "\t#proxy: ${4:}",
      "\t#response_file: ${5:}",
      "\t#src: ${6:}",
      "\t#zone: ${7:current|#all}"
    ]
  },
  "swdepot": {
    "prefix": "swdepot",
    "description": "Manage packages with swdepot package manager (HP-UX)",
    "body": [
      "community.general.swdepot:",
      "\tname: ${1:}",
      "\tstate: ${2:present|latest|absent}",
      "\t#depot: ${3:}"
    ]
  },
  "swupd": {
    "prefix": "swupd",
    "description": "Manages updates and bundles in ClearLinux systems",
    "body": [
      "community.general.swupd:",
      "\t#contenturl: ${1:}",
      "\t#format: ${2:}",
      "\t#manifest: ${3:}",
      "\t#name: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#update: ${6:false}",
      "\t#url: ${7:}",
      "\t#verify: ${8:false}",
      "\t#versionurl: ${9:}"
    ]
  },
  "syslogger": {
    "prefix": "syslogger",
    "description": "Log messages in the syslog",
    "body": [
      "community.general.syslogger:",
      "\tmsg: ${1:}",
      "\t#facility: ${2:kern|user|mail|#daemon|auth|lpr|news|uucp|cron|syslog|local0|local1|local2|local3|local4|local5|local6|local7}",
      "\t#ident: ${3:ansible_syslogger}",
      "\t#log_pid: ${4:false}",
      "\t#priority: ${5:emerg|alert|crit|err|warning|notice|#info|debug}"
    ]
  },
  "syspatch": {
    "prefix": "syspatch",
    "description": "Manage OpenBSD system patches",
    "body": [
      "community.general.syspatch:",
      "\t#revert: ${1:all|one}"
    ]
  },
  "sysrc": {
    "prefix": "sysrc",
    "description": "Manage FreeBSD using sysrc",
    "body": [
      "community.general.sysrc:",
      "\tname: ${1:}",
      "\t#delim: ${2: }",
      "\t#jail: ${3:}",
      "\t#path: ${4:/etc/rc.conf}",
      "\t#state: ${5:absent|#present|value_present|value_absent}",
      "\t#value: ${6:}"
    ]
  },
  "sysupgrade": {
    "prefix": "sysupgrade",
    "description": "Manage OpenBSD system upgrades",
    "body": [
      "community.general.sysupgrade:",
      "\t#fetch_only: ${1:true}",
      "\t#force: ${2:false}",
      "\t#installurl: ${3:}",
      "\t#keep_files: ${4:false}",
      "\t#snapshot: ${5:false}"
    ]
  },
  "taiga_issue": {
    "prefix": "taiga_issue",
    "description": "Creates/deletes an issue in a Taiga Project Management Platform",
    "body": [
      "community.general.taiga_issue:",
      "\tissue_type: ${1:}",
      "\tproject: ${2:}",
      "\tsubject: ${3:}",
      "\t#attachment: ${4:}",
      "\t#attachment_description: ${5:\"\"}",
      "\t#description: ${6:\"\"}",
      "\t#priority: ${7:Normal}",
      "\t#severity: ${8:Normal}",
      "\t#state: ${9:#present|absent}",
      "\t#status: ${10:New}",
      "\t#tags: ${11:[]}",
      "\t#taiga_host: ${12:https://api.taiga.io}"
    ]
  },
  "telegram": {
    "prefix": "telegram",
    "description": "Send notifications via telegram",
    "body": [
      "community.general.telegram:",
      "\ttoken: ${1:}",
      "\t#api_args: ${2:}",
      "\t#api_method: ${3:SendMessage}"
    ]
  },
  "terraform": {
    "prefix": "terraform",
    "description": "Manages a Terraform deployment (and plans)",
    "body": [
      "community.general.terraform:",
      "\tproject_path: ${1:}",
      "\t#backend_config: ${2:}",
      "\t#backend_config_files: ${3:}",
      "\t#binary_path: ${4:}",
      "\t#check_destroy: ${5:false}",
      "\t#complex_vars: ${6:false}",
      "\t#force_init: ${7:false}",
      "\t#init_reconfigure: ${8:false}",
      "\t#lock: ${9:true}",
      "\t#lock_timeout: ${10:}",
      "\t#overwrite_init: ${11:true}",
      "\t#parallelism: ${12:}",
      "\t#plan_file: ${13:}",
      "\t#plugin_paths: ${14:}",
      "\t#provider_upgrade: ${15:false}",
      "\t#purge_workspace: ${16:false}",
      "\t#state: ${17:planned|#present|absent}",
      "\t#state_file: ${18:}",
      "\t#targets: ${19:[]}",
      "\t#variables: ${20:}",
      "\t#variables_files: ${21:}",
      "\t#workspace: ${22:default}"
    ]
  },
  "timezone": {
    "prefix": "timezone",
    "description": "Configure timezone setting",
    "body": [
      "community.general.timezone:",
      "\t#hwclock: ${1:local|UTC}",
      "\t#name: ${2:}"
    ]
  },
  "twilio": {
    "prefix": "twilio",
    "description": "Sends a text message to a mobile phone through Twilio",
    "body": [
      "community.general.twilio:",
      "\taccount_sid: ${1:}",
      "\tauth_token: ${2:}",
      "\tfrom_number: ${3:}",
      "\tmsg: ${4:}",
      "\tto_numbers: ${5:}",
      "\t#media_url: ${6:}"
    ]
  },
  "typetalk": {
    "prefix": "typetalk",
    "description": "Send a message to typetalk",
    "body": [
      "community.general.typetalk:",
      "\tclient_id: ${1:}",
      "\tclient_secret: ${2:}",
      "\tmsg: ${3:}",
      "\ttopic: ${4:}"
    ]
  },
  "udm_dns_record": {
    "prefix": "udm_dns_record",
    "description": "Manage dns entries on a univention corporate server",
    "body": [
      "community.general.udm_dns_record:",
      "\tname: ${1:}",
      "\ttype: ${2:}",
      "\tzone: ${3:}",
      "\t#data: ${4:{\\}}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "udm_dns_zone": {
    "prefix": "udm_dns_zone",
    "description": "Manage dns zones on a univention corporate server",
    "body": [
      "community.general.udm_dns_zone:",
      "\ttype: ${1:}",
      "\tzone: ${2:}",
      "\t#contact: ${3:\"\"}",
      "\t#expire: ${4:604800}",
      "\t#interfaces: ${5:[]}",
      "\t#mx: ${6:[]}",
      "\t#nameserver: ${7:[]}",
      "\t#refresh: ${8:3600}",
      "\t#retry: ${9:1800}",
      "\t#state: ${10:#present|absent}",
      "\t#ttl: ${11:600}"
    ]
  },
  "udm_group": {
    "prefix": "udm_group",
    "description": "Manage of the posix group",
    "body": [
      "community.general.udm_group:",
      "\tname: ${1:}",
      "\t#description: ${2:}",
      "\t#ou: ${3:\"\"}",
      "\t#position: ${4:\"\"}",
      "\t#state: ${5:#present|absent}",
      "\t#subpath: ${6:cn=groups}"
    ]
  },
  "udm_share": {
    "prefix": "udm_share",
    "description": "Manage samba shares on a univention corporate server",
    "body": [
      "community.general.udm_share:",
      "\tname: ${1:}",
      "\tou: ${2:}",
      "\t#directorymode: ${3:00755}",
      "\t#group: ${4:0}",
      "\t#host: ${5:}",
      "\t#nfsCustomSettings: ${6:[]}",
      "\t#nfs_hosts: ${7:[]}",
      "\t#owner: ${8:0}",
      "\t#path: ${9:}",
      "\t#root_squash: ${10:true}",
      "\t#sambaBlockSize: ${11:}",
      "\t#sambaBlockingLocks: ${12:true}",
      "\t#sambaBrowseable: ${13:true}",
      "\t#sambaCreateMode: ${14:0744}",
      "\t#sambaCscPolicy: ${15:manual}",
      "\t#sambaCustomSettings: ${16:[]}",
      "\t#sambaDirectoryMode: ${17:0755}",
      "\t#sambaDirectorySecurityMode: ${18:0777}",
      "\t#sambaDosFilemode: ${19:false}",
      "\t#sambaFakeOplocks: ${20:false}",
      "\t#sambaForceCreateMode: ${21:false}",
      "\t#sambaForceDirectoryMode: ${22:false}",
      "\t#sambaForceDirectorySecurityMode: ${23:false}",
      "\t#sambaForceGroup: ${24:}",
      "\t#sambaForceSecurityMode: ${25:false}",
      "\t#sambaForceUser: ${26:}",
      "\t#sambaHideFiles: ${27:}",
      "\t#sambaHideUnreadable: ${28:false}",
      "\t#sambaHostsAllow: ${29:[]}",
      "\t#sambaHostsDeny: ${30:[]}",
      "\t#sambaInheritAcls: ${31:true}",
      "\t#sambaInheritOwner: ${32:false}",
      "\t#sambaInheritPermissions: ${33:false}",
      "\t#sambaInvalidUsers: ${34:}",
      "\t#sambaLevel2Oplocks: ${35:true}",
      "\t#sambaLocking: ${36:true}",
      "\t#sambaMSDFSRoot: ${37:false}",
      "\t#sambaName: ${38:}",
      "\t#sambaNtAclSupport: ${39:true}",
      "\t#sambaOplocks: ${40:true}",
      "\t#sambaPostexec: ${41:}",
      "\t#sambaPreexec: ${42:}",
      "\t#sambaPublic: ${43:false}",
      "\t#sambaSecurityMode: ${44:0777}",
      "\t#sambaStrictLocking: ${45:Auto}",
      "\t#sambaVFSObjects: ${46:}",
      "\t#sambaValidUsers: ${47:}",
      "\t#sambaWriteList: ${48:}",
      "\t#sambaWriteable: ${49:true}",
      "\t#state: ${50:#present|absent}",
      "\t#subtree_checking: ${51:true}",
      "\t#sync: ${52:sync}",
      "\t#writeable: ${53:true}"
    ]
  },
  "udm_user": {
    "prefix": "udm_user",
    "description": "Manage posix users on a univention corporate server",
    "body": [
      "community.general.udm_user:",
      "\tusername: ${1:}",
      "\t#birthday: ${2:}",
      "\t#city: ${3:}",
      "\t#country: ${4:}",
      "\t#department_number: ${5:}",
      "\t#description: ${6:}",
      "\t#display_name: ${7:}",
      "\t#email: ${8:['']}",
      "\t#employee_number: ${9:}",
      "\t#employee_type: ${10:}",
      "\t#firstname: ${11:}",
      "\t#gecos: ${12:}",
      "\t#groups: ${13:[]}",
      "\t#home_share: ${14:}",
      "\t#home_share_path: ${15:}",
      "\t#home_telephone_number: ${16:[]}",
      "\t#homedrive: ${17:}",
      "\t#lastname: ${18:}",
      "\t#mail_alternative_address: ${19:[]}",
      "\t#mail_home_server: ${20:}",
      "\t#mail_primary_address: ${21:}",
      "\t#mobile_telephone_number: ${22:[]}",
      "\t#organisation: ${23:}",
      "\t#ou: ${24:\"\"}",
      "\t#overridePWHistory: ${25:false}",
      "\t#overridePWLength: ${26:false}",
      "\t#pager_telephonenumber: ${27:[]}",
      "\t#password: ${28:}",
      "\t#phone: ${29:[]}",
      "\t#position: ${30:\"\"}",
      "\t#postcode: ${31:}",
      "\t#primary_group: ${32:}",
      "\t#profilepath: ${33:}",
      "\t#pwd_change_next_login: ${34:0|1}",
      "\t#room_number: ${35:}",
      "\t#samba_privileges: ${36:[]}",
      "\t#samba_user_workstations: ${37:[]}",
      "\t#sambahome: ${38:}",
      "\t#scriptpath: ${39:}",
      "\t#secretary: ${40:[]}",
      "\t#serviceprovider: ${41:['']}",
      "\t#shell: ${42:/bin/bash}",
      "\t#state: ${43:#present|absent}",
      "\t#street: ${44:}",
      "\t#subpath: ${45:cn=users}",
      "\t#title: ${46:}",
      "\t#unixhome: ${47:}",
      "\t#update_password: ${48:#always|on_create}",
      "\t#userexpiry: ${49:}"
    ]
  },
  "ufw": {
    "prefix": "ufw",
    "description": "Manage firewall with UFW",
    "body": [
      "community.general.ufw:",
      "\t#comment: ${1:}",
      "\t#default: ${2:allow|deny|reject}",
      "\t#delete: ${3:false}",
      "\t#direction: ${4:in|incoming|out|outgoing|routed}",
      "\t#from_ip: ${5:any}",
      "\t#from_port: ${6:}",
      "\t#insert: ${7:}",
      "\t#insert_relative_to: ${8:first-ipv4|first-ipv6|last-ipv4|last-ipv6|#zero}",
      "\t#interface: ${9:}",
      "\t#interface_in: ${10:}",
      "\t#interface_out: ${11:}",
      "\t#log: ${12:false}",
      "\t#logging: ${13:on|off|low|medium|high|full}",
      "\t#name: ${14:}",
      "\t#proto: ${15:any|tcp|udp|ipv6|esp|ah|gre|igmp}",
      "\t#route: ${16:false}",
      "\t#rule: ${17:allow|deny|limit|reject}",
      "\t#state: ${18:disabled|enabled|reloaded|reset}",
      "\t#to_ip: ${19:any}",
      "\t#to_port: ${20:}"
    ]
  },
  "uptimerobot": {
    "prefix": "uptimerobot",
    "description": "Pause and start Uptime Robot monitoring",
    "body": [
      "community.general.uptimerobot:",
      "\tapikey: ${1:}",
      "\tmonitorid: ${2:}",
      "\tstate: ${3:started|paused}"
    ]
  },
  "urpmi": {
    "prefix": "urpmi",
    "description": "Urpmi manager",
    "body": [
      "community.general.urpmi:",
      "\tname: ${1:}",
      "\t#force: ${2:true}",
      "\t#no_recommends: ${3:true}",
      "\t#root: ${4:}",
      "\t#state: ${5:absent|#present|installed|removed}",
      "\t#update_cache: ${6:false}"
    ]
  },
  "utm_aaa_group": {
    "prefix": "utm_aaa_group",
    "description": "Create, update or destroy an aaa group object in Sophos UTM",
    "body": [
      "community.general.utm_aaa_group:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#adirectory_groups: ${4:[]}",
      "\t#adirectory_groups_sids: ${5:{\\}}",
      "\t#backend_match: ${6:#none|adirectory|edirectory|radius|tacacs|ldap}",
      "\t#comment: ${7:\"\"}",
      "\t#dynamic: ${8:#none|ipsec_dn|directory_groups}",
      "\t#edirectory_groups: ${9:[]}",
      "\t#headers: ${10:{\\}}",
      "\t#ipsec_dn: ${11:\"\"}",
      "\t#ldap_attribute: ${12:\"\"}",
      "\t#ldap_attribute_value: ${13:\"\"}",
      "\t#members: ${14:[]}",
      "\t#network: ${15:\"\"}",
      "\t#radius_groups: ${16:[]}",
      "\t#state: ${17:absent|#present}",
      "\t#tacacs_groups: ${18:[]}",
      "\t#utm_port: ${19:4444}",
      "\t#utm_protocol: ${20:http|#https}",
      "\t#validate_certs: ${21:true}"
    ]
  },
  "utm_aaa_group_info": {
    "prefix": "utm_aaa_group_info",
    "description": "Get info for reverse_proxy frontend entry in Sophos UTM",
    "body": [
      "community.general.utm_aaa_group_info:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#headers: ${4:{\\}}",
      "\t#state: ${5:absent|#present}",
      "\t#utm_port: ${6:4444}",
      "\t#utm_protocol: ${7:http|#https}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "utm_ca_host_key_cert": {
    "prefix": "utm_ca_host_key_cert",
    "description": "Create, update or destroy ca host_key_cert entry in Sophos UTM",
    "body": [
      "community.general.utm_ca_host_key_cert:",
      "\tca: ${1:}",
      "\tcertificate: ${2:}",
      "\tmeta: ${3:}",
      "\tname: ${4:}",
      "\tutm_host: ${5:}",
      "\tutm_token: ${6:}",
      "\t#comment: ${7:}",
      "\t#encrypted: ${8:false}",
      "\t#headers: ${9:{\\}}",
      "\t#key: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#utm_port: ${12:4444}",
      "\t#utm_protocol: ${13:http|#https}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "utm_ca_host_key_cert_info": {
    "prefix": "utm_ca_host_key_cert_info",
    "description": "Get info for a ca host_key_cert entry in Sophos UTM",
    "body": [
      "community.general.utm_ca_host_key_cert_info:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#headers: ${4:{\\}}",
      "\t#state: ${5:absent|#present}",
      "\t#utm_port: ${6:4444}",
      "\t#utm_protocol: ${7:http|#https}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "utm_dns_host": {
    "prefix": "utm_dns_host",
    "description": "Create, update or destroy dns entry in Sophos UTM",
    "body": [
      "community.general.utm_dns_host:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#address: ${4:0.0.0.0}",
      "\t#address6: ${5:::}",
      "\t#comment: ${6:\"\"}",
      "\t#headers: ${7:{\\}}",
      "\t#hostname: ${8:}",
      "\t#interface: ${9:\"\"}",
      "\t#resolved: ${10:false}",
      "\t#resolved6: ${11:false}",
      "\t#state: ${12:absent|#present}",
      "\t#timeout: ${13:0}",
      "\t#utm_port: ${14:4444}",
      "\t#utm_protocol: ${15:http|#https}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "utm_network_interface_address": {
    "prefix": "utm_network_interface_address",
    "description": "Create, update or destroy network/interface_address object",
    "body": [
      "community.general.utm_network_interface_address:",
      "\taddress: ${1:}",
      "\tname: ${2:}",
      "\tutm_host: ${3:}",
      "\tutm_token: ${4:}",
      "\t#address6: ${5:}",
      "\t#comment: ${6:\"\"}",
      "\t#headers: ${7:{\\}}",
      "\t#resolved: ${8:}",
      "\t#resolved6: ${9:}",
      "\t#state: ${10:absent|#present}",
      "\t#utm_port: ${11:4444}",
      "\t#utm_protocol: ${12:http|#https}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "utm_network_interface_address_info": {
    "prefix": "utm_network_interface_address_info",
    "description": "Get info for a network/interface_address object",
    "body": [
      "community.general.utm_network_interface_address_info:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#headers: ${4:{\\}}",
      "\t#state: ${5:absent|#present}",
      "\t#utm_port: ${6:4444}",
      "\t#utm_protocol: ${7:http|#https}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "utm_proxy_auth_profile": {
    "prefix": "utm_proxy_auth_profile",
    "description": "Create, update or destroy reverse_proxy auth_profile entry in Sophos UTM",
    "body": [
      "community.general.utm_proxy_auth_profile:",
      "\taaa: ${1:}",
      "\tbasic_prompt: ${2:}",
      "\tfrontend_session_lifetime: ${3:}",
      "\tfrontend_session_timeout: ${4:}",
      "\tname: ${5:}",
      "\tutm_host: ${6:}",
      "\tutm_token: ${7:}",
      "\t#backend_mode: ${8:Basic|#None}",
      "\t#backend_strip_basic_auth: ${9:true}",
      "\t#backend_user_prefix: ${10:\"\"}",
      "\t#backend_user_suffix: ${11:\"\"}",
      "\t#comment: ${12:\"\"}",
      "\t#frontend_cookie: ${13:}",
      "\t#frontend_cookie_secret: ${14:}",
      "\t#frontend_form: ${15:}",
      "\t#frontend_form_template: ${16:\"\"}",
      "\t#frontend_login: ${17:}",
      "\t#frontend_logout: ${18:}",
      "\t#frontend_mode: ${19:#Basic|Form}",
      "\t#frontend_realm: ${20:}",
      "\t#frontend_session_allow_persistency: ${21:false}",
      "\t#frontend_session_lifetime_limited: ${22:true}",
      "\t#frontend_session_lifetime_scope: ${23:days|#hours|minutes}",
      "\t#frontend_session_timeout_enabled: ${24:true}",
      "\t#frontend_session_timeout_scope: ${25:days|hours|#minutes}",
      "\t#headers: ${26:{\\}}",
      "\t#logout_delegation_urls: ${27:[]}",
      "\t#logout_mode: ${28:#None|Delegation}",
      "\t#redirect_to_requested_url: ${29:false}",
      "\t#state: ${30:absent|#present}",
      "\t#utm_port: ${31:4444}",
      "\t#utm_protocol: ${32:http|#https}",
      "\t#validate_certs: ${33:true}"
    ]
  },
  "utm_proxy_exception": {
    "prefix": "utm_proxy_exception",
    "description": "Create, update or destroy reverse_proxy exception entry in Sophos UTM",
    "body": [
      "community.general.utm_proxy_exception:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#headers: ${4:{\\}}",
      "\t#op: ${5:#AND|OR}",
      "\t#path: ${6:[]}",
      "\t#skip_custom_threats_filters: ${7:[]}",
      "\t#skip_threats_filter_categories: ${8:[]}",
      "\t#skipav: ${9:false}",
      "\t#skipbadclients: ${10:false}",
      "\t#skipcookie: ${11:false}",
      "\t#skipform: ${12:false}",
      "\t#skipform_missingtoken: ${13:false}",
      "\t#skiphtmlrewrite: ${14:false}",
      "\t#skiptft: ${15:false}",
      "\t#skipurl: ${16:false}",
      "\t#source: ${17:[]}",
      "\t#state: ${18:absent|#present}",
      "\t#status: ${19:true}",
      "\t#utm_port: ${20:4444}",
      "\t#utm_protocol: ${21:http|#https}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "utm_proxy_frontend": {
    "prefix": "utm_proxy_frontend",
    "description": "Create, update or destroy reverse_proxy frontend entry in Sophos UTM",
    "body": [
      "community.general.utm_proxy_frontend:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#add_content_type_header: ${4:false}",
      "\t#address: ${5:REF_DefaultInternalAddress}",
      "\t#allowed_networks: ${6:['REF_NetworkAny']}",
      "\t#certificate: ${7:\"\"}",
      "\t#comment: ${8:\"\"}",
      "\t#disable_compression: ${9:false}",
      "\t#domain: ${10:}",
      "\t#exceptions: ${11:[]}",
      "\t#headers: ${12:{\\}}",
      "\t#htmlrewrite: ${13:false}",
      "\t#htmlrewrite_cookies: ${14:false}",
      "\t#implicitredirect: ${15:false}",
      "\t#lbmethod: ${16:|#bybusyness|bytraffic|byrequests}",
      "\t#locations: ${17:[]}",
      "\t#port: ${18:80}",
      "\t#preservehost: ${19:false}",
      "\t#profile: ${20:\"\"}",
      "\t#state: ${21:absent|#present}",
      "\t#status: ${22:true}",
      "\t#type: ${23:#http|https}",
      "\t#utm_port: ${24:4444}",
      "\t#utm_protocol: ${25:http|#https}",
      "\t#validate_certs: ${26:true}",
      "\t#xheaders: ${27:false}"
    ]
  },
  "utm_proxy_frontend_info": {
    "prefix": "utm_proxy_frontend_info",
    "description": "Create, update or destroy reverse_proxy frontend entry in Sophos UTM",
    "body": [
      "community.general.utm_proxy_frontend_info:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#headers: ${4:{\\}}",
      "\t#state: ${5:absent|#present}",
      "\t#utm_port: ${6:4444}",
      "\t#utm_protocol: ${7:http|#https}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "utm_proxy_location": {
    "prefix": "utm_proxy_location",
    "description": "Create, update or destroy reverse_proxy location entry in Sophos UTM",
    "body": [
      "community.general.utm_proxy_location:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#access_control: ${4:#0|1}",
      "\t#allowed_networks: ${5:['REF_NetworkAny']}",
      "\t#auth_profile: ${6:\"\"}",
      "\t#backend: ${7:[]}",
      "\t#be_path: ${8:\"\"}",
      "\t#comment: ${9:\"\"}",
      "\t#denied_networks: ${10:[]}",
      "\t#headers: ${11:{\\}}",
      "\t#hot_standby: ${12:false}",
      "\t#path: ${13:/}",
      "\t#state: ${14:absent|#present}",
      "\t#status: ${15:true}",
      "\t#stickysession_id: ${16:ROUTEID}",
      "\t#stickysession_status: ${17:false}",
      "\t#utm_port: ${18:4444}",
      "\t#utm_protocol: ${19:http|#https}",
      "\t#validate_certs: ${20:true}",
      "\t#websocket_passthrough: ${21:false}"
    ]
  },
  "utm_proxy_location_info": {
    "prefix": "utm_proxy_location_info",
    "description": "Create, update or destroy reverse_proxy location entry in Sophos UTM",
    "body": [
      "community.general.utm_proxy_location_info:",
      "\tname: ${1:}",
      "\tutm_host: ${2:}",
      "\tutm_token: ${3:}",
      "\t#headers: ${4:{\\}}",
      "\t#state: ${5:absent|#present}",
      "\t#utm_port: ${6:4444}",
      "\t#utm_protocol: ${7:http|#https}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vdo": {
    "prefix": "vdo",
    "description": "Module to control VDO",
    "body": [
      "community.general.vdo:",
      "\tname: ${1:}",
      "\t#ackthreads: ${2:}",
      "\t#activated: ${3:}",
      "\t#biothreads: ${4:}",
      "\t#blockmapcachesize: ${5:}",
      "\t#compression: ${6:disabled|enabled}",
      "\t#cputhreads: ${7:}",
      "\t#deduplication: ${8:disabled|enabled}",
      "\t#device: ${9:}",
      "\t#emulate512: ${10:false}",
      "\t#force: ${11:false}",
      "\t#growphysical: ${12:false}",
      "\t#indexmem: ${13:}",
      "\t#indexmode: ${14:dense|sparse}",
      "\t#logicalsize: ${15:}",
      "\t#logicalthreads: ${16:}",
      "\t#physicalthreads: ${17:}",
      "\t#readcache: ${18:disabled|enabled}",
      "\t#readcachesize: ${19:}",
      "\t#running: ${20:}",
      "\t#slabsize: ${21:}",
      "\t#state: ${22:absent|#present}",
      "\t#writepolicy: ${23:async|auto|sync}"
    ]
  },
  "vertica_configuration": {
    "prefix": "vertica_configuration",
    "description": "Updates Vertica configuration parameters",
    "body": [
      "community.general.vertica_configuration:",
      "\tparameter: ${1:}",
      "\t#cluster: ${2:localhost}",
      "\t#db: ${3:}",
      "\t#login_password: ${4:}",
      "\t#login_user: ${5:dbadmin}",
      "\t#port: ${6:5433}",
      "\t#value: ${7:}"
    ]
  },
  "vertica_info": {
    "prefix": "vertica_info",
    "description": "Gathers Vertica database facts",
    "body": [
      "community.general.vertica_info:",
      "\t#cluster: ${1:localhost}",
      "\t#db: ${2:}",
      "\t#login_password: ${3:}",
      "\t#login_user: ${4:dbadmin}",
      "\t#port: ${5:5433}"
    ]
  },
  "vertica_role": {
    "prefix": "vertica_role",
    "description": "Adds or removes Vertica database roles and assigns roles to them",
    "body": [
      "community.general.vertica_role:",
      "\trole: ${1:}",
      "\t#assigned_roles: ${2:}",
      "\t#cluster: ${3:localhost}",
      "\t#db: ${4:}",
      "\t#login_password: ${5:}",
      "\t#login_user: ${6:dbadmin}",
      "\t#port: ${7:5433}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "vertica_schema": {
    "prefix": "vertica_schema",
    "description": "Adds or removes Vertica database schema and roles",
    "body": [
      "community.general.vertica_schema:",
      "\tschema: ${1:}",
      "\t#cluster: ${2:localhost}",
      "\t#create_roles: ${3:}",
      "\t#db: ${4:}",
      "\t#login_password: ${5:}",
      "\t#login_user: ${6:dbadmin}",
      "\t#owner: ${7:}",
      "\t#port: ${8:5433}",
      "\t#state: ${9:#present|absent}",
      "\t#usage_roles: ${10:}"
    ]
  },
  "vertica_user": {
    "prefix": "vertica_user",
    "description": "Adds or removes Vertica database users and assigns roles",
    "body": [
      "community.general.vertica_user:",
      "\tuser: ${1:}",
      "\t#cluster: ${2:localhost}",
      "\t#db: ${3:}",
      "\t#expired: ${4:}",
      "\t#ldap: ${5:}",
      "\t#login_password: ${6:}",
      "\t#login_user: ${7:dbadmin}",
      "\t#password: ${8:}",
      "\t#port: ${9:5433}",
      "\t#profile: ${10:}",
      "\t#resource_pool: ${11:}",
      "\t#roles: ${12:}",
      "\t#state: ${13:#present|absent|locked}"
    ]
  },
  "vexata_eg": {
    "prefix": "vexata_eg",
    "description": "Manage export groups on Vexata VX100 storage arrays",
    "body": [
      "community.general.vexata_eg:",
      "\tarray: ${1:}",
      "\tname: ${2:}",
      "\t#ig: ${3:}",
      "\t#password: ${4:}",
      "\t#pg: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#user: ${7:}",
      "\t#validate_certs: ${8:false}",
      "\t#vg: ${9:}"
    ]
  },
  "vexata_volume": {
    "prefix": "vexata_volume",
    "description": "Manage volumes on Vexata VX100 storage arrays",
    "body": [
      "community.general.vexata_volume:",
      "\tarray: ${1:}",
      "\tname: ${2:}",
      "\t#password: ${3:}",
      "\t#size: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#user: ${6:}",
      "\t#validate_certs: ${7:false}"
    ]
  },
  "vmadm": {
    "prefix": "vmadm",
    "description": "Manage SmartOS virtual machines and zones",
    "body": [
      "community.general.vmadm:",
      "\t#archive_on_delete: ${1:}",
      "\t#autoboot: ${2:}",
      "\t#boot: ${3:}",
      "\t#brand: ${4:#joyent|joyent-minimal|lx|kvm|bhyve}",
      "\t#cpu_cap: ${5:}",
      "\t#cpu_shares: ${6:}",
      "\t#cpu_type: ${7:#qemu64|host}",
      "\t#customer_metadata: ${8:}",
      "\t#delegate_dataset: ${9:}",
      "\t#disk_driver: ${10:}",
      "\t#disks: ${11:}",
      "\t#dns_domain: ${12:}",
      "\t#docker: ${13:}",
      "\t#filesystems: ${14:}",
      "\t#firewall_enabled: ${15:}",
      "\t#force: ${16:}",
      "\t#fs_allowed: ${17:}",
      "\t#hostname: ${18:}",
      "\t#image_uuid: ${19:}",
      "\t#indestructible_delegated: ${20:}",
      "\t#indestructible_zoneroot: ${21:}",
      "\t#internal_metadata: ${22:}",
      "\t#internal_metadata_namespace: ${23:}",
      "\t#kernel_version: ${24:}",
      "\t#limit_priv: ${25:}",
      "\t#maintain_resolvers: ${26:}",
      "\t#max_locked_memory: ${27:}",
      "\t#max_lwps: ${28:}",
      "\t#max_physical_memory: ${29:}",
      "\t#max_swap: ${30:}",
      "\t#mdata_exec_timeout: ${31:}",
      "\t#name: ${32:}",
      "\t#nic_driver: ${33:}",
      "\t#nics: ${34:}",
      "\t#nowait: ${35:}",
      "\t#qemu_extra_opts: ${36:}",
      "\t#qemu_opts: ${37:}",
      "\t#quota: ${38:}",
      "\t#ram: ${39:}",
      "\t#resolvers: ${40:}",
      "\t#routes: ${41:}",
      "\t#spice_opts: ${42:}",
      "\t#spice_password: ${43:}",
      "\t#state: ${44:present|#running|absent|deleted|stopped|created|restarted|rebooted}",
      "\t#tmpfs: ${45:}",
      "\t#uuid: ${46:}",
      "\t#vcpus: ${47:}",
      "\t#vga: ${48:}",
      "\t#virtio_txburst: ${49:}",
      "\t#virtio_txtimer: ${50:}",
      "\t#vnc_password: ${51:}",
      "\t#vnc_port: ${52:}",
      "\t#zfs_data_compression: ${53:}",
      "\t#zfs_data_recsize: ${54:}",
      "\t#zfs_filesystem_limit: ${55:}",
      "\t#zfs_io_priority: ${56:}",
      "\t#zfs_root_compression: ${57:}",
      "\t#zfs_root_recsize: ${58:}",
      "\t#zfs_snapshot_limit: ${59:}",
      "\t#zpool: ${60:}"
    ]
  },
  "wakeonlan": {
    "prefix": "wakeonlan",
    "description": "Send a magic Wake-on-LAN (WoL) broadcast packet",
    "body": [
      "community.general.wakeonlan:",
      "\tmac: ${1:}",
      "\t#broadcast: ${2:255.255.255.255}",
      "\t#port: ${3:7}"
    ]
  },
  "wdc_redfish_command": {
    "prefix": "wdc_redfish_command",
    "description": "Manages WDC UltraStar Data102 Out-Of-Band controllers using Redfish APIs",
    "body": [
      "community.general.wdc_redfish_command:",
      "\tcategory: ${1:}",
      "\tcommand: ${2:}",
      "\t#auth_token: ${3:}",
      "\t#baseuri: ${4:}",
      "\t#ioms: ${5:}",
      "\t#password: ${6:}",
      "\t#resource_id: ${7:}",
      "\t#timeout: ${8:10}",
      "\t#update_creds: ${9:}",
      "\t#update_image_uri: ${10:}",
      "\t#username: ${11:}"
    ]
  },
  "wdc_redfish_info": {
    "prefix": "wdc_redfish_info",
    "description": "Manages WDC UltraStar Data102 Out-Of-Band controllers using Redfish APIs",
    "body": [
      "community.general.wdc_redfish_info:",
      "\tcategory: ${1:}",
      "\tcommand: ${2:}",
      "\t#auth_token: ${3:}",
      "\t#baseuri: ${4:}",
      "\t#ioms: ${5:}",
      "\t#password: ${6:}",
      "\t#timeout: ${7:10}",
      "\t#username: ${8:}"
    ]
  },
  "xattr": {
    "prefix": "xattr",
    "description": "Manage user defined extended attributes",
    "body": [
      "community.general.xattr:",
      "\tpath: ${1:}",
      "\t#follow: ${2:true}",
      "\t#key: ${3:}",
      "\t#namespace: ${4:user}",
      "\t#state: ${5:absent|all|keys|present|#read}",
      "\t#value: ${6:}"
    ]
  },
  "xbps": {
    "prefix": "xbps",
    "description": "Manage packages with XBPS",
    "body": [
      "community.general.xbps:",
      "\t#name: ${1:}",
      "\t#recurse: ${2:false}",
      "\t#state: ${3:#present|absent|latest|installed|removed}",
      "\t#update_cache: ${4:true}",
      "\t#upgrade: ${5:false}",
      "\t#upgrade_xbps: ${6:true}"
    ]
  },
  "xcc_redfish_command": {
    "prefix": "xcc_redfish_command",
    "description": "Manages Lenovo Out-Of-Band controllers using Redfish APIs",
    "body": [
      "community.general.xcc_redfish_command:",
      "\tbaseuri: ${1:}",
      "\tcategory: ${2:}",
      "\tcommand: ${3:}",
      "\t#auth_token: ${4:}",
      "\t#password: ${5:}",
      "\t#request_body: ${6:}",
      "\t#resource_id: ${7:}",
      "\t#resource_uri: ${8:}",
      "\t#timeout: ${9:10}",
      "\t#username: ${10:}",
      "\t#virtual_media: ${11:}"
    ]
  },
  "xenserver_facts": {
    "prefix": "xenserver_facts",
    "description": "Get facts reported on xenserver",
    "body": "community.general.xenserver_facts:"
  },
  "xenserver_guest": {
    "prefix": "xenserver_guest",
    "description": "Manages virtual machines running on Citrix Hypervisor/XenServer host or pool",
    "body": [
      "community.general.xenserver_guest:",
      "\t#cdrom: ${1:}",
      "\t#custom_params: ${2:}",
      "\t#disks: ${3:}",
      "\t#folder: ${4:}",
      "\t#force: ${5:false}",
      "\t#hardware: ${6:}",
      "\t#home_server: ${7:}",
      "\t#hostname: ${8:localhost}",
      "\t#is_template: ${9:false}",
      "\t#linked_clone: ${10:false}",
      "\t#name: ${11:}",
      "\t#name_desc: ${12:}",
      "\t#networks: ${13:}",
      "\t#password: ${14:}",
      "\t#state: ${15:#present|absent|poweredon}",
      "\t#state_change_timeout: ${16:0}",
      "\t#template: ${17:}",
      "\t#template_uuid: ${18:}",
      "\t#username: ${19:root}",
      "\t#uuid: ${20:}",
      "\t#validate_certs: ${21:true}",
      "\t#wait_for_ip_address: ${22:false}"
    ]
  },
  "xenserver_guest_info": {
    "prefix": "xenserver_guest_info",
    "description": "Gathers information for virtual machines running on Citrix Hypervisor/XenServer host or pool",
    "body": [
      "community.general.xenserver_guest_info:",
      "\t#hostname: ${1:localhost}",
      "\t#name: ${2:}",
      "\t#password: ${3:}",
      "\t#username: ${4:root}",
      "\t#uuid: ${5:}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "xenserver_guest_powerstate": {
    "prefix": "xenserver_guest_powerstate",
    "description": "Manages power states of virtual machines running on Citrix Hypervisor/XenServer host or pool",
    "body": [
      "community.general.xenserver_guest_powerstate:",
      "\t#hostname: ${1:localhost}",
      "\t#name: ${2:}",
      "\t#password: ${3:}",
      "\t#state: ${4:powered-on|powered-off|restarted|shutdown-guest|reboot-guest|suspended|#present}",
      "\t#state_change_timeout: ${5:0}",
      "\t#username: ${6:root}",
      "\t#uuid: ${7:}",
      "\t#validate_certs: ${8:true}",
      "\t#wait_for_ip_address: ${9:false}"
    ]
  },
  "xfconf": {
    "prefix": "xfconf",
    "description": "Edit XFCE4 Configurations",
    "body": [
      "community.general.xfconf:",
      "\tchannel: ${1:}",
      "\tproperty: ${2:}",
      "\t#force_array: ${3:false}",
      "\t#state: ${4:#present|absent}",
      "\t#value: ${5:}",
      "\t#value_type: ${6:string|int|double|bool|uint|uchar|char|uint64|int64|float}"
    ]
  },
  "xfconf_info": {
    "prefix": "xfconf_info",
    "description": "Retrieve XFCE4 configurations",
    "body": [
      "community.general.xfconf_info:",
      "\t#channel: ${1:}",
      "\t#property: ${2:}"
    ]
  },
  "xfs_quota": {
    "prefix": "xfs_quota",
    "description": "Manage quotas on XFS filesystems",
    "body": [
      "community.general.xfs_quota:",
      "\tmountpoint: ${1:}",
      "\ttype: ${2:user|group|project}",
      "\t#bhard: ${3:}",
      "\t#bsoft: ${4:}",
      "\t#ihard: ${5:}",
      "\t#isoft: ${6:}",
      "\t#name: ${7:}",
      "\t#rtbhard: ${8:}",
      "\t#rtbsoft: ${9:}",
      "\t#state: ${10:#present|absent}"
    ]
  },
  "xml": {
    "prefix": "xml",
    "description": "Manage bits and pieces of XML files or strings",
    "body": [
      "community.general.xml:",
      "\t#add_children: ${1:}",
      "\t#attribute: ${2:}",
      "\t#backup: ${3:false}",
      "\t#content: ${4:attribute|text}",
      "\t#count: ${5:false}",
      "\t#input_type: ${6:xml|#yaml}",
      "\t#insertafter: ${7:false}",
      "\t#insertbefore: ${8:false}",
      "\t#namespaces: ${9:{\\}}",
      "\t#path: ${10:}",
      "\t#pretty_print: ${11:false}",
      "\t#print_match: ${12:false}",
      "\t#set_children: ${13:}",
      "\t#state: ${14:absent|#present}",
      "\t#strip_cdata_tags: ${15:false}",
      "\t#value: ${16:}",
      "\t#xmlstring: ${17:}",
      "\t#xpath: ${18:}"
    ]
  },
  "yarn": {
    "prefix": "yarn",
    "description": "Manage node.js packages with Yarn",
    "body": [
      "community.general.yarn:",
      "\t#executable: ${1:}",
      "\t#global: ${2:false}",
      "\t#ignore_scripts: ${3:false}",
      "\t#name: ${4:}",
      "\t#path: ${5:}",
      "\t#production: ${6:false}",
      "\t#registry: ${7:}",
      "\t#state: ${8:#present|absent|latest}",
      "\t#version: ${9:}"
    ]
  },
  "yum_versionlock": {
    "prefix": "yum_versionlock",
    "description": "Locks / unlocks a installed package(s) from being updated by yum package manager",
    "body": [
      "community.general.yum_versionlock:",
      "\tname: ${1:}",
      "\t#state: ${2:absent|#present}"
    ]
  },
  "zfs": {
    "prefix": "zfs",
    "description": "Manage zfs",
    "body": [
      "community.general.zfs:",
      "\tname: ${1:}",
      "\tstate: ${2:absent|present}",
      "\t#extra_zfs_properties: ${3:{\\}}",
      "\t#origin: ${4:}"
    ]
  },
  "zfs_delegate_admin": {
    "prefix": "zfs_delegate_admin",
    "description": "Manage ZFS delegated administration (user admin privileges)",
    "body": [
      "community.general.zfs_delegate_admin:",
      "\tname: ${1:}",
      "\t#descendents: ${2:}",
      "\t#everyone: ${3:false}",
      "\t#groups: ${4:}",
      "\t#local: ${5:}",
      "\t#permissions: ${6:}",
      "\t#recursive: ${7:false}",
      "\t#state: ${8:absent|#present}",
      "\t#users: ${9:}"
    ]
  },
  "zfs_facts": {
    "prefix": "zfs_facts",
    "description": "Gather facts about ZFS datasets",
    "body": [
      "community.general.zfs_facts:",
      "\tname: ${1:}",
      "\t#depth: ${2:0}",
      "\t#parsable: ${3:false}",
      "\t#properties: ${4:all}",
      "\t#recurse: ${5:false}",
      "\t#type: ${6:#all|filesystem|volume|snapshot|bookmark}"
    ]
  },
  "znode": {
    "prefix": "znode",
    "description": "Create, delete, retrieve, and update znodes using ZooKeeper",
    "body": [
      "community.general.znode:",
      "\thosts: ${1:}",
      "\tname: ${2:}",
      "\t#auth_credential: ${3:}",
      "\t#auth_scheme: ${4:#digest|sasl}",
      "\t#op: ${5:get|wait|list}",
      "\t#recursive: ${6:false}",
      "\t#state: ${7:present|absent}",
      "\t#timeout: ${8:300}",
      "\t#use_tls: ${9:false}",
      "\t#value: ${10:}"
    ]
  },
  "zpool_facts": {
    "prefix": "zpool_facts",
    "description": "Gather facts about ZFS pools",
    "body": [
      "community.general.zpool_facts:",
      "\t#name: ${1:}",
      "\t#parsable: ${2:false}",
      "\t#properties: ${3:all}"
    ]
  },
  "zypper": {
    "prefix": "zypper",
    "description": "Manage packages on SUSE and openSUSE",
    "body": [
      "community.general.zypper:",
      "\tname: ${1:}",
      "\t#allow_vendor_change: ${2:false}",
      "\t#clean_deps: ${3:false}",
      "\t#disable_gpg_check: ${4:false}",
      "\t#disable_recommends: ${5:true}",
      "\t#extra_args: ${6:}",
      "\t#extra_args_precommand: ${7:}",
      "\t#force: ${8:false}",
      "\t#force_resolution: ${9:false}",
      "\t#oldpackage: ${10:false}",
      "\t#replacefiles: ${11:false}",
      "\t#state: ${12:#present|latest|absent|dist-upgrade|installed|removed}",
      "\t#type: ${13:#package|patch|pattern|product|srcpackage|application}",
      "\t#update_cache: ${14:false}"
    ]
  },
  "zypper_repository": {
    "prefix": "zypper_repository",
    "description": "Add and remove Zypper repositories",
    "body": [
      "community.general.zypper_repository:",
      "\t#auto_import_keys: ${1:false}",
      "\t#autorefresh: ${2:true}",
      "\t#description: ${3:}",
      "\t#disable_gpg_check: ${4:false}",
      "\t#enabled: ${5:true}",
      "\t#name: ${6:}",
      "\t#overwrite_multiple: ${7:false}",
      "\t#priority: ${8:}",
      "\t#repo: ${9:}",
      "\t#runrefresh: ${10:false}",
      "\t#state: ${11:absent|#present}"
    ]
  },
  "collection_module": {
    "prefix": "collection_module",
    "description": "Test collection module",
    "body": "community.general.collection_module:"
  },
  "mysql_db": {
    "prefix": "mysql_db",
    "description": "Add or remove MySQL databases from a remote host",
    "body": [
      "community.mysql.mysql_db:",
      "\tname: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#chdir: ${3:}",
      "\t#check_hostname: ${4:}",
      "\t#check_implicit_admin: ${5:false}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#collation: ${8:\"\"}",
      "\t#config_file: ${9:~/.my.cnf}",
      "\t#config_overrides_defaults: ${10:false}",
      "\t#connect_timeout: ${11:30}",
      "\t#dump_extra_args: ${12:}",
      "\t#encoding: ${13:\"\"}",
      "\t#force: ${14:false}",
      "\t#hex_blob: ${15:false}",
      "\t#ignore_tables: ${16:[]}",
      "\t#login_host: ${17:localhost}",
      "\t#login_password: ${18:}",
      "\t#login_port: ${19:3306}",
      "\t#login_unix_socket: ${20:}",
      "\t#login_user: ${21:}",
      "\t#master_data: ${22:#0|1|2}",
      "\t#pipefail: ${23:false}",
      "\t#quick: ${24:true}",
      "\t#restrict_config_file: ${25:false}",
      "\t#single_transaction: ${26:false}",
      "\t#skip_lock_tables: ${27:false}",
      "\t#state: ${28:absent|dump|import|#present}",
      "\t#target: ${29:}",
      "\t#unsafe_login_password: ${30:false}",
      "\t#use_shell: ${31:false}"
    ]
  },
  "mysql_info": {
    "prefix": "mysql_info",
    "description": "Gather information about MySQL servers",
    "body": [
      "community.mysql.mysql_info:",
      "\t#ca_cert: ${1:}",
      "\t#check_hostname: ${2:}",
      "\t#client_cert: ${3:}",
      "\t#client_key: ${4:}",
      "\t#config_file: ${5:~/.my.cnf}",
      "\t#connect_timeout: ${6:30}",
      "\t#exclude_fields: ${7:}",
      "\t#filter: ${8:}",
      "\t#login_db: ${9:}",
      "\t#login_host: ${10:localhost}",
      "\t#login_password: ${11:}",
      "\t#login_port: ${12:3306}",
      "\t#login_unix_socket: ${13:}",
      "\t#login_user: ${14:}",
      "\t#return_empty_dbs: ${15:false}"
    ]
  },
  "mysql_query": {
    "prefix": "mysql_query",
    "description": "Run MySQL queries",
    "body": [
      "community.mysql.mysql_query:",
      "\tquery: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#check_hostname: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#config_file: ${6:~/.my.cnf}",
      "\t#connect_timeout: ${7:30}",
      "\t#login_db: ${8:}",
      "\t#login_host: ${9:localhost}",
      "\t#login_password: ${10:}",
      "\t#login_port: ${11:3306}",
      "\t#login_unix_socket: ${12:}",
      "\t#login_user: ${13:}",
      "\t#named_args: ${14:}",
      "\t#positional_args: ${15:}",
      "\t#single_transaction: ${16:false}"
    ]
  },
  "mysql_replication": {
    "prefix": "mysql_replication",
    "description": "Manage MySQL replication",
    "body": [
      "community.mysql.mysql_replication:",
      "\t#ca_cert: ${1:}",
      "\t#channel: ${2:}",
      "\t#check_hostname: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#config_file: ${6:~/.my.cnf}",
      "\t#connect_timeout: ${7:30}",
      "\t#connection_name: ${8:}",
      "\t#fail_on_error: ${9:false}",
      "\t#login_host: ${10:localhost}",
      "\t#login_password: ${11:}",
      "\t#login_port: ${12:3306}",
      "\t#login_unix_socket: ${13:}",
      "\t#login_user: ${14:}",
      "\t#mode: ${15:changeprimary|getprimary|#getreplica|startreplica|stopreplica|resetprimary|resetreplica|resetreplicaall}",
      "\t#primary_auto_position: ${16:false}",
      "\t#primary_connect_retry: ${17:}",
      "\t#primary_delay: ${18:}",
      "\t#primary_host: ${19:}",
      "\t#primary_log_file: ${20:}",
      "\t#primary_log_pos: ${21:}",
      "\t#primary_password: ${22:}",
      "\t#primary_port: ${23:}",
      "\t#primary_ssl: ${24:}",
      "\t#primary_ssl_ca: ${25:}",
      "\t#primary_ssl_capath: ${26:}",
      "\t#primary_ssl_cert: ${27:}",
      "\t#primary_ssl_cipher: ${28:}",
      "\t#primary_ssl_key: ${29:}",
      "\t#primary_ssl_verify_server_cert: ${30:false}",
      "\t#primary_use_gtid: ${31:current_pos|replica_pos|disabled}",
      "\t#primary_user: ${32:}",
      "\t#relay_log_file: ${33:}",
      "\t#relay_log_pos: ${34:}"
    ]
  },
  "mysql_role": {
    "prefix": "mysql_role",
    "description": "Adds, removes, or updates a MySQL role",
    "body": [
      "community.mysql.mysql_role:",
      "\tname: ${1:}",
      "\t#admin: ${2:}",
      "\t#append_members: ${3:false}",
      "\t#append_privs: ${4:false}",
      "\t#ca_cert: ${5:}",
      "\t#check_hostname: ${6:}",
      "\t#check_implicit_admin: ${7:false}",
      "\t#client_cert: ${8:}",
      "\t#client_key: ${9:}",
      "\t#config_file: ${10:~/.my.cnf}",
      "\t#connect_timeout: ${11:30}",
      "\t#detach_members: ${12:false}",
      "\t#login_host: ${13:localhost}",
      "\t#login_password: ${14:}",
      "\t#login_port: ${15:3306}",
      "\t#login_unix_socket: ${16:}",
      "\t#login_user: ${17:}",
      "\t#members: ${18:}",
      "\t#members_must_exist: ${19:true}",
      "\t#priv: ${20:}",
      "\t#set_default_role_all: ${21:true}",
      "\t#state: ${22:absent|#present}",
      "\t#subtract_privs: ${23:false}"
    ]
  },
  "mysql_user": {
    "prefix": "mysql_user",
    "description": "Adds or removes a user from a MySQL database",
    "body": [
      "community.mysql.mysql_user:",
      "\tname: ${1:}",
      "\t#append_privs: ${2:false}",
      "\t#ca_cert: ${3:}",
      "\t#check_hostname: ${4:}",
      "\t#check_implicit_admin: ${5:false}",
      "\t#client_cert: ${6:}",
      "\t#client_key: ${7:}",
      "\t#config_file: ${8:~/.my.cnf}",
      "\t#connect_timeout: ${9:30}",
      "\t#encrypted: ${10:false}",
      "\t#force_context: ${11:false}",
      "\t#host: ${12:localhost}",
      "\t#host_all: ${13:false}",
      "\t#login_host: ${14:localhost}",
      "\t#login_password: ${15:}",
      "\t#login_port: ${16:3306}",
      "\t#login_unix_socket: ${17:}",
      "\t#login_user: ${18:}",
      "\t#password: ${19:}",
      "\t#plugin: ${20:}",
      "\t#plugin_auth_string: ${21:}",
      "\t#plugin_hash_string: ${22:}",
      "\t#priv: ${23:}",
      "\t#resource_limits: ${24:}",
      "\t#session_vars: ${25:}",
      "\t#sql_log_bin: ${26:true}",
      "\t#state: ${27:absent|#present}",
      "\t#subtract_privs: ${28:false}",
      "\t#tls_requires: ${29:}",
      "\t#update_password: ${30:#always|on_create|on_new_username}"
    ]
  },
  "mysql_variables": {
    "prefix": "mysql_variables",
    "description": "Manage MySQL global variables",
    "body": [
      "community.mysql.mysql_variables:",
      "\tvariable: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#check_hostname: ${3:}",
      "\t#client_cert: ${4:}",
      "\t#client_key: ${5:}",
      "\t#config_file: ${6:~/.my.cnf}",
      "\t#connect_timeout: ${7:30}",
      "\t#login_host: ${8:localhost}",
      "\t#login_password: ${9:}",
      "\t#login_port: ${10:3306}",
      "\t#login_unix_socket: ${11:}",
      "\t#login_user: ${12:}",
      "\t#mode: ${13:#global|persist|persist_only}",
      "\t#value: ${14:}"
    ]
  },
  "postgresql_copy": {
    "prefix": "postgresql_copy",
    "description": "Copy data between a file/program and a PostgreSQL table",
    "body": [
      "community.postgresql.postgresql_copy:",
      "\t#ca_cert: ${1:}",
      "\t#columns: ${2:}",
      "\t#connect_params: ${3:{\\}}",
      "\t#copy_from: ${4:}",
      "\t#copy_to: ${5:}",
      "\t#db: ${6:}",
      "\t#dst: ${7:}",
      "\t#login_host: ${8:\"\"}",
      "\t#login_password: ${9:\"\"}",
      "\t#login_unix_socket: ${10:\"\"}",
      "\t#login_user: ${11:postgres}",
      "\t#options: ${12:}",
      "\t#port: ${13:5432}",
      "\t#program: ${14:false}",
      "\t#session_role: ${15:}",
      "\t#src: ${16:}",
      "\t#ssl_cert: ${17:}",
      "\t#ssl_key: ${18:}",
      "\t#ssl_mode: ${19:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#trust_input: ${20:true}"
    ]
  },
  "postgresql_db": {
    "prefix": "postgresql_db",
    "description": "Add or remove PostgreSQL databases from a remote host",
    "body": [
      "community.postgresql.postgresql_db:",
      "\tname: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#conn_limit: ${3:\"\"}",
      "\t#connect_params: ${4:{\\}}",
      "\t#dump_extra_args: ${5:}",
      "\t#encoding: ${6:\"\"}",
      "\t#force: ${7:false}",
      "\t#lc_collate: ${8:\"\"}",
      "\t#lc_ctype: ${9:\"\"}",
      "\t#login_host: ${10:\"\"}",
      "\t#login_password: ${11:\"\"}",
      "\t#login_unix_socket: ${12:\"\"}",
      "\t#login_user: ${13:postgres}",
      "\t#maintenance_db: ${14:postgres}",
      "\t#owner: ${15:\"\"}",
      "\t#port: ${16:5432}",
      "\t#session_role: ${17:}",
      "\t#ssl_cert: ${18:}",
      "\t#ssl_key: ${19:}",
      "\t#ssl_mode: ${20:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${21:absent|dump|#present|rename|restore}",
      "\t#tablespace: ${22:\"\"}",
      "\t#target: ${23:\"\"}",
      "\t#target_opts: ${24:\"\"}",
      "\t#template: ${25:\"\"}",
      "\t#trust_input: ${26:true}"
    ]
  },
  "postgresql_ext": {
    "prefix": "postgresql_ext",
    "description": "Add or remove PostgreSQL extensions from a database",
    "body": [
      "community.postgresql.postgresql_ext:",
      "\tdb: ${1:}",
      "\tname: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#cascade: ${4:false}",
      "\t#connect_params: ${5:{\\}}",
      "\t#login_host: ${6:\"\"}",
      "\t#login_password: ${7:\"\"}",
      "\t#login_unix_socket: ${8:\"\"}",
      "\t#login_user: ${9:postgres}",
      "\t#port: ${10:5432}",
      "\t#schema: ${11:}",
      "\t#session_role: ${12:}",
      "\t#ssl_cert: ${13:}",
      "\t#ssl_key: ${14:}",
      "\t#ssl_mode: ${15:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${16:absent|#present}",
      "\t#trust_input: ${17:true}",
      "\t#version: ${18:}"
    ]
  },
  "postgresql_idx": {
    "prefix": "postgresql_idx",
    "description": "Create or drop indexes from a PostgreSQL database",
    "body": [
      "community.postgresql.postgresql_idx:",
      "\tidxname: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#cascade: ${3:false}",
      "\t#columns: ${4:}",
      "\t#concurrent: ${5:true}",
      "\t#cond: ${6:}",
      "\t#connect_params: ${7:{\\}}",
      "\t#db: ${8:}",
      "\t#idxtype: ${9:}",
      "\t#login_host: ${10:\"\"}",
      "\t#login_password: ${11:\"\"}",
      "\t#login_unix_socket: ${12:\"\"}",
      "\t#login_user: ${13:postgres}",
      "\t#port: ${14:5432}",
      "\t#schema: ${15:}",
      "\t#session_role: ${16:}",
      "\t#ssl_cert: ${17:}",
      "\t#ssl_key: ${18:}",
      "\t#ssl_mode: ${19:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${20:absent|#present}",
      "\t#storage_params: ${21:}",
      "\t#table: ${22:}",
      "\t#tablespace: ${23:}",
      "\t#trust_input: ${24:true}",
      "\t#unique: ${25:false}"
    ]
  },
  "postgresql_info": {
    "prefix": "postgresql_info",
    "description": "Gather information about PostgreSQL servers",
    "body": [
      "community.postgresql.postgresql_info:",
      "\t#ca_cert: ${1:}",
      "\t#connect_params: ${2:{\\}}",
      "\t#db: ${3:}",
      "\t#filter: ${4:}",
      "\t#login_host: ${5:\"\"}",
      "\t#login_password: ${6:\"\"}",
      "\t#login_unix_socket: ${7:\"\"}",
      "\t#login_user: ${8:postgres}",
      "\t#port: ${9:5432}",
      "\t#session_role: ${10:}",
      "\t#ssl_cert: ${11:}",
      "\t#ssl_key: ${12:}",
      "\t#ssl_mode: ${13:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#trust_input: ${14:true}"
    ]
  },
  "postgresql_lang": {
    "prefix": "postgresql_lang",
    "description": "Adds, removes or changes procedural languages with a PostgreSQL database",
    "body": [
      "community.postgresql.postgresql_lang:",
      "\tdb: ${1:}",
      "\tlang: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#cascade: ${4:false}",
      "\t#connect_params: ${5:{\\}}",
      "\t#fail_on_drop: ${6:true}",
      "\t#force_trust: ${7:false}",
      "\t#login_host: ${8:\"\"}",
      "\t#login_password: ${9:\"\"}",
      "\t#login_unix_socket: ${10:\"\"}",
      "\t#login_user: ${11:postgres}",
      "\t#owner: ${12:}",
      "\t#port: ${13:5432}",
      "\t#session_role: ${14:}",
      "\t#ssl_cert: ${15:}",
      "\t#ssl_key: ${16:}",
      "\t#ssl_mode: ${17:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${18:absent|#present}",
      "\t#trust: ${19:false}",
      "\t#trust_input: ${20:true}"
    ]
  },
  "postgresql_membership": {
    "prefix": "postgresql_membership",
    "description": "Add or remove PostgreSQL roles from groups",
    "body": [
      "community.postgresql.postgresql_membership:",
      "\tgroups: ${1:}",
      "\ttarget_roles: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#connect_params: ${4:{\\}}",
      "\t#db: ${5:}",
      "\t#fail_on_role: ${6:true}",
      "\t#login_host: ${7:\"\"}",
      "\t#login_password: ${8:\"\"}",
      "\t#login_unix_socket: ${9:\"\"}",
      "\t#login_user: ${10:postgres}",
      "\t#port: ${11:5432}",
      "\t#session_role: ${12:}",
      "\t#ssl_cert: ${13:}",
      "\t#ssl_key: ${14:}",
      "\t#ssl_mode: ${15:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${16:absent|exact|#present}",
      "\t#trust_input: ${17:true}"
    ]
  },
  "postgresql_owner": {
    "prefix": "postgresql_owner",
    "description": "Change an owner of PostgreSQL database object",
    "body": [
      "community.postgresql.postgresql_owner:",
      "\tnew_owner: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#connect_params: ${3:{\\}}",
      "\t#db: ${4:}",
      "\t#fail_on_role: ${5:true}",
      "\t#login_host: ${6:\"\"}",
      "\t#login_password: ${7:\"\"}",
      "\t#login_unix_socket: ${8:\"\"}",
      "\t#login_user: ${9:postgres}",
      "\t#obj_name: ${10:}",
      "\t#obj_type: ${11:database|function|matview|sequence|schema|table|tablespace|view}",
      "\t#port: ${12:5432}",
      "\t#reassign_owned_by: ${13:}",
      "\t#session_role: ${14:}",
      "\t#ssl_cert: ${15:}",
      "\t#ssl_key: ${16:}",
      "\t#ssl_mode: ${17:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#trust_input: ${18:true}"
    ]
  },
  "postgresql_pg_hba": {
    "prefix": "postgresql_pg_hba",
    "description": "Add, remove or modify a rule in a pg_hba file",
    "body": [
      "community.postgresql.postgresql_pg_hba:",
      "\tdest: ${1:}",
      "\t#address: ${2:samehost}",
      "\t#attributes: ${3:}",
      "\t#backup: ${4:false}",
      "\t#backup_file: ${5:}",
      "\t#comment: ${6:}",
      "\t#contype: ${7:local|host|hostnossl|hostssl|hostgssenc|hostnogssenc}",
      "\t#create: ${8:false}",
      "\t#databases: ${9:all}",
      "\t#group: ${10:}",
      "\t#keep_comments_at_rules: ${11:false}",
      "\t#method: ${12:cert|gss|ident|krb5|ldap|#md5|pam|password|peer|radius|reject|scram-sha-256|sspi|trust}",
      "\t#mode: ${13:}",
      "\t#netmask: ${14:}",
      "\t#options: ${15:}",
      "\t#overwrite: ${16:false}",
      "\t#owner: ${17:}",
      "\t#rules: ${18:}",
      "\t#rules_behavior: ${19:#conflict|combine}",
      "\t#selevel: ${20:}",
      "\t#serole: ${21:}",
      "\t#setype: ${22:}",
      "\t#seuser: ${23:}",
      "\t#state: ${24:absent|#present}",
      "\t#unsafe_writes: ${25:false}",
      "\t#users: ${26:all}"
    ]
  },
  "postgresql_ping": {
    "prefix": "postgresql_ping",
    "description": "Check remote PostgreSQL server availability",
    "body": [
      "community.postgresql.postgresql_ping:",
      "\t#ca_cert: ${1:}",
      "\t#connect_params: ${2:{\\}}",
      "\t#db: ${3:}",
      "\t#login_host: ${4:\"\"}",
      "\t#login_password: ${5:\"\"}",
      "\t#login_unix_socket: ${6:\"\"}",
      "\t#login_user: ${7:postgres}",
      "\t#port: ${8:5432}",
      "\t#session_role: ${9:}",
      "\t#ssl_cert: ${10:}",
      "\t#ssl_key: ${11:}",
      "\t#ssl_mode: ${12:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#trust_input: ${13:true}"
    ]
  },
  "postgresql_privs": {
    "prefix": "postgresql_privs",
    "description": "Grant or revoke privileges on PostgreSQL database objects",
    "body": [
      "community.postgresql.postgresql_privs:",
      "\tdatabase: ${1:}",
      "\troles: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#connect_params: ${4:{\\}}",
      "\t#fail_on_role: ${5:true}",
      "\t#grant_option: ${6:}",
      "\t#login_host: ${7:\"\"}",
      "\t#login_password: ${8:\"\"}",
      "\t#login_unix_socket: ${9:\"\"}",
      "\t#login_user: ${10:postgres}",
      "\t#objs: ${11:}",
      "\t#password: ${12:\"\"}",
      "\t#port: ${13:5432}",
      "\t#privs: ${14:}",
      "\t#schema: ${15:}",
      "\t#session_role: ${16:}",
      "\t#ssl_cert: ${17:}",
      "\t#ssl_key: ${18:}",
      "\t#ssl_mode: ${19:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${20:absent|#present}",
      "\t#target_roles: ${21:}",
      "\t#trust_input: ${22:true}",
      "\t#type: ${23:database|default_privs|foreign_data_wrapper|foreign_server|function|group|language|#table|tablespace|schema|sequence|type|procedure}"
    ]
  },
  "postgresql_publication": {
    "prefix": "postgresql_publication",
    "description": "Add, update, or remove PostgreSQL publication",
    "body": [
      "community.postgresql.postgresql_publication:",
      "\tname: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#cascade: ${3:false}",
      "\t#connect_params: ${4:{\\}}",
      "\t#db: ${5:}",
      "\t#login_host: ${6:\"\"}",
      "\t#login_password: ${7:\"\"}",
      "\t#login_unix_socket: ${8:\"\"}",
      "\t#login_user: ${9:postgres}",
      "\t#owner: ${10:}",
      "\t#parameters: ${11:}",
      "\t#port: ${12:5432}",
      "\t#session_role: ${13:}",
      "\t#ssl_cert: ${14:}",
      "\t#ssl_key: ${15:}",
      "\t#ssl_mode: ${16:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${17:absent|#present}",
      "\t#tables: ${18:}",
      "\t#trust_input: ${19:true}"
    ]
  },
  "postgresql_query": {
    "prefix": "postgresql_query",
    "description": "Run PostgreSQL queries",
    "body": [
      "community.postgresql.postgresql_query:",
      "\t#autocommit: ${1:false}",
      "\t#ca_cert: ${2:}",
      "\t#connect_params: ${3:{\\}}",
      "\t#db: ${4:}",
      "\t#encoding: ${5:}",
      "\t#login_host: ${6:\"\"}",
      "\t#login_password: ${7:\"\"}",
      "\t#login_unix_socket: ${8:\"\"}",
      "\t#login_user: ${9:postgres}",
      "\t#named_args: ${10:}",
      "\t#port: ${11:5432}",
      "\t#positional_args: ${12:}",
      "\t#query: ${13:}",
      "\t#search_path: ${14:}",
      "\t#session_role: ${15:}",
      "\t#ssl_cert: ${16:}",
      "\t#ssl_key: ${17:}",
      "\t#ssl_mode: ${18:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#trust_input: ${19:true}"
    ]
  },
  "postgresql_schema": {
    "prefix": "postgresql_schema",
    "description": "Add or remove PostgreSQL schema",
    "body": [
      "community.postgresql.postgresql_schema:",
      "\tname: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#cascade_drop: ${3:false}",
      "\t#connect_params: ${4:{\\}}",
      "\t#database: ${5:postgres}",
      "\t#login_host: ${6:\"\"}",
      "\t#login_password: ${7:\"\"}",
      "\t#login_unix_socket: ${8:\"\"}",
      "\t#login_user: ${9:postgres}",
      "\t#owner: ${10:\"\"}",
      "\t#port: ${11:5432}",
      "\t#session_role: ${12:}",
      "\t#ssl_cert: ${13:}",
      "\t#ssl_key: ${14:}",
      "\t#ssl_mode: ${15:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${16:absent|#present}",
      "\t#trust_input: ${17:true}"
    ]
  },
  "postgresql_script": {
    "prefix": "postgresql_script",
    "description": "Run PostgreSQL statements from a file",
    "body": [
      "community.postgresql.postgresql_script:",
      "\t#ca_cert: ${1:}",
      "\t#connect_params: ${2:{\\}}",
      "\t#db: ${3:}",
      "\t#encoding: ${4:}",
      "\t#login_host: ${5:\"\"}",
      "\t#login_password: ${6:\"\"}",
      "\t#login_unix_socket: ${7:\"\"}",
      "\t#login_user: ${8:postgres}",
      "\t#named_args: ${9:}",
      "\t#path: ${10:}",
      "\t#port: ${11:5432}",
      "\t#positional_args: ${12:}",
      "\t#search_path: ${13:}",
      "\t#session_role: ${14:}",
      "\t#ssl_cert: ${15:}",
      "\t#ssl_key: ${16:}",
      "\t#ssl_mode: ${17:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#trust_input: ${18:true}"
    ]
  },
  "postgresql_sequence": {
    "prefix": "postgresql_sequence",
    "description": "Create, drop, or alter a PostgreSQL sequence",
    "body": [
      "community.postgresql.postgresql_sequence:",
      "\tsequence: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#cache: ${3:}",
      "\t#cascade: ${4:false}",
      "\t#connect_params: ${5:{\\}}",
      "\t#cycle: ${6:false}",
      "\t#data_type: ${7:bigint|integer|smallint}",
      "\t#db: ${8:\"\"}",
      "\t#increment: ${9:}",
      "\t#login_host: ${10:\"\"}",
      "\t#login_password: ${11:\"\"}",
      "\t#login_unix_socket: ${12:\"\"}",
      "\t#login_user: ${13:postgres}",
      "\t#maxvalue: ${14:}",
      "\t#minvalue: ${15:}",
      "\t#newschema: ${16:}",
      "\t#owner: ${17:}",
      "\t#port: ${18:5432}",
      "\t#rename_to: ${19:}",
      "\t#schema: ${20:public}",
      "\t#session_role: ${21:}",
      "\t#ssl_cert: ${22:}",
      "\t#ssl_key: ${23:}",
      "\t#ssl_mode: ${24:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#start: ${25:}",
      "\t#state: ${26:absent|#present}",
      "\t#trust_input: ${27:true}"
    ]
  },
  "postgresql_set": {
    "prefix": "postgresql_set",
    "description": "Change a PostgreSQL server configuration parameter",
    "body": [
      "community.postgresql.postgresql_set:",
      "\tname: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#connect_params: ${3:{\\}}",
      "\t#db: ${4:}",
      "\t#login_host: ${5:\"\"}",
      "\t#login_password: ${6:\"\"}",
      "\t#login_unix_socket: ${7:\"\"}",
      "\t#login_user: ${8:postgres}",
      "\t#port: ${9:5432}",
      "\t#reset: ${10:false}",
      "\t#session_role: ${11:}",
      "\t#ssl_cert: ${12:}",
      "\t#ssl_key: ${13:}",
      "\t#ssl_mode: ${14:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#trust_input: ${15:true}",
      "\t#value: ${16:}"
    ]
  },
  "postgresql_slot": {
    "prefix": "postgresql_slot",
    "description": "Add or remove replication slots from a PostgreSQL database",
    "body": [
      "community.postgresql.postgresql_slot:",
      "\tname: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#connect_params: ${3:{\\}}",
      "\t#db: ${4:}",
      "\t#immediately_reserve: ${5:false}",
      "\t#login_host: ${6:\"\"}",
      "\t#login_password: ${7:\"\"}",
      "\t#login_unix_socket: ${8:\"\"}",
      "\t#login_user: ${9:postgres}",
      "\t#output_plugin: ${10:test_decoding}",
      "\t#port: ${11:5432}",
      "\t#session_role: ${12:}",
      "\t#slot_type: ${13:logical|#physical}",
      "\t#ssl_cert: ${14:}",
      "\t#ssl_key: ${15:}",
      "\t#ssl_mode: ${16:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${17:absent|#present}",
      "\t#trust_input: ${18:true}"
    ]
  },
  "postgresql_subscription": {
    "prefix": "postgresql_subscription",
    "description": "Add, update, or remove PostgreSQL subscription",
    "body": [
      "community.postgresql.postgresql_subscription:",
      "\tdb: ${1:}",
      "\tname: ${2:}",
      "\t#ca_cert: ${3:}",
      "\t#cascade: ${4:false}",
      "\t#connect_params: ${5:{\\}}",
      "\t#connparams: ${6:}",
      "\t#login_host: ${7:\"\"}",
      "\t#login_password: ${8:\"\"}",
      "\t#login_unix_socket: ${9:\"\"}",
      "\t#login_user: ${10:postgres}",
      "\t#owner: ${11:}",
      "\t#port: ${12:5432}",
      "\t#publications: ${13:}",
      "\t#session_role: ${14:}",
      "\t#ssl_cert: ${15:}",
      "\t#ssl_key: ${16:}",
      "\t#ssl_mode: ${17:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${18:absent|#present|refresh}",
      "\t#subsparams: ${19:}",
      "\t#trust_input: ${20:true}"
    ]
  },
  "postgresql_table": {
    "prefix": "postgresql_table",
    "description": "Create, drop, or modify a PostgreSQL table",
    "body": [
      "community.postgresql.postgresql_table:",
      "\ttable: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#cascade: ${3:false}",
      "\t#columns: ${4:}",
      "\t#connect_params: ${5:{\\}}",
      "\t#db: ${6:\"\"}",
      "\t#including: ${7:}",
      "\t#like: ${8:}",
      "\t#login_host: ${9:\"\"}",
      "\t#login_password: ${10:\"\"}",
      "\t#login_unix_socket: ${11:\"\"}",
      "\t#login_user: ${12:postgres}",
      "\t#owner: ${13:}",
      "\t#port: ${14:5432}",
      "\t#rename: ${15:}",
      "\t#session_role: ${16:}",
      "\t#ssl_cert: ${17:}",
      "\t#ssl_key: ${18:}",
      "\t#ssl_mode: ${19:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${20:absent|#present}",
      "\t#storage_params: ${21:}",
      "\t#tablespace: ${22:}",
      "\t#truncate: ${23:false}",
      "\t#trust_input: ${24:true}",
      "\t#unlogged: ${25:false}"
    ]
  },
  "postgresql_tablespace": {
    "prefix": "postgresql_tablespace",
    "description": "Add or remove PostgreSQL tablespaces from remote hosts",
    "body": [
      "community.postgresql.postgresql_tablespace:",
      "\ttablespace: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#connect_params: ${3:{\\}}",
      "\t#db: ${4:}",
      "\t#location: ${5:}",
      "\t#login_host: ${6:\"\"}",
      "\t#login_password: ${7:\"\"}",
      "\t#login_unix_socket: ${8:\"\"}",
      "\t#login_user: ${9:postgres}",
      "\t#owner: ${10:}",
      "\t#port: ${11:5432}",
      "\t#rename_to: ${12:}",
      "\t#session_role: ${13:}",
      "\t#set: ${14:}",
      "\t#ssl_cert: ${15:}",
      "\t#ssl_key: ${16:}",
      "\t#ssl_mode: ${17:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${18:absent|#present}",
      "\t#trust_input: ${19:true}"
    ]
  },
  "postgresql_user": {
    "prefix": "postgresql_user",
    "description": "Create, alter, or remove a user (role) from a PostgreSQL server instance",
    "body": [
      "community.postgresql.postgresql_user:",
      "\tname: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#comment: ${3:}",
      "\t#conn_limit: ${4:}",
      "\t#connect_params: ${5:{\\}}",
      "\t#db: ${6:\"\"}",
      "\t#encrypted: ${7:true}",
      "\t#expires: ${8:}",
      "\t#fail_on_user: ${9:true}",
      "\t#login_host: ${10:\"\"}",
      "\t#login_password: ${11:\"\"}",
      "\t#login_unix_socket: ${12:\"\"}",
      "\t#login_user: ${13:postgres}",
      "\t#no_password_changes: ${14:false}",
      "\t#password: ${15:}",
      "\t#port: ${16:5432}",
      "\t#priv: ${17:}",
      "\t#role_attr_flags: ${18:\"\"}",
      "\t#session_role: ${19:}",
      "\t#ssl_cert: ${20:}",
      "\t#ssl_key: ${21:}",
      "\t#ssl_mode: ${22:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#state: ${23:absent|#present}",
      "\t#trust_input: ${24:true}"
    ]
  },
  "postgresql_user_obj_stat_info": {
    "prefix": "postgresql_user_obj_stat_info",
    "description": "Gather statistics about PostgreSQL user objects",
    "body": [
      "community.postgresql.postgresql_user_obj_stat_info:",
      "\t#ca_cert: ${1:}",
      "\t#connect_params: ${2:{\\}}",
      "\t#db: ${3:}",
      "\t#filter: ${4:}",
      "\t#login_host: ${5:\"\"}",
      "\t#login_password: ${6:\"\"}",
      "\t#login_unix_socket: ${7:\"\"}",
      "\t#login_user: ${8:postgres}",
      "\t#port: ${9:5432}",
      "\t#schema: ${10:}",
      "\t#session_role: ${11:}",
      "\t#ssl_cert: ${12:}",
      "\t#ssl_key: ${13:}",
      "\t#ssl_mode: ${14:allow|disable|#prefer|require|verify-ca|verify-full}",
      "\t#trust_input: ${15:true}"
    ]
  },
  "vcenter_domain_user_group_info": {
    "prefix": "vcenter_domain_user_group_info",
    "description": "Gather user or group information of a domain",
    "body": [
      "community.vmware.vcenter_domain_user_group_info:",
      "\tsearch_string: ${1:}",
      "\t#belongs_to_group: ${2:}",
      "\t#belongs_to_user: ${3:}",
      "\t#domain: ${4:vsphere.local}",
      "\t#exact_match: ${5:false}",
      "\t#find_groups: ${6:true}",
      "\t#find_users: ${7:true}",
      "\t#hostname: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vcenter_extension": {
    "prefix": "vcenter_extension",
    "description": "Register/deregister vCenter Extensions",
    "body": [
      "community.vmware.vcenter_extension:",
      "\textension_key: ${1:}",
      "\tversion: ${2:}",
      "\t#client_type: ${3:vsphere-client-serenity}",
      "\t#company: ${4:}",
      "\t#description: ${5:}",
      "\t#email: ${6:}",
      "\t#hostname: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#server_type: ${13:vsphere-client-serenity}",
      "\t#ssl_thumbprint: ${14:}",
      "\t#state: ${15:absent|#present}",
      "\t#url: ${16:}",
      "\t#username: ${17:}",
      "\t#validate_certs: ${18:true}",
      "\t#visible: ${19:true}"
    ]
  },
  "vcenter_extension_info": {
    "prefix": "vcenter_extension_info",
    "description": "Gather info vCenter extensions",
    "body": [
      "community.vmware.vcenter_extension_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vcenter_folder": {
    "prefix": "vcenter_folder",
    "description": "Manage folders on given datacenter",
    "body": [
      "community.vmware.vcenter_folder:",
      "\tdatacenter: ${1:}",
      "\tfolder_name: ${2:}",
      "\t#folder_type: ${3:datastore|host|network|#vm}",
      "\t#hostname: ${4:}",
      "\t#parent_folder: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vcenter_license": {
    "prefix": "vcenter_license",
    "description": "Manage VMware vCenter license keys",
    "body": [
      "community.vmware.vcenter_license:",
      "\tlicense: ${1:}",
      "\t#cluster_name: ${2:}",
      "\t#datacenter: ${3:}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#labels: ${6:{'source': 'ansible'\\}}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vcenter_root_password_expiration": {
    "prefix": "vcenter_root_password_expiration",
    "description": "root password expiration of vCSA",
    "body": [
      "community.vmware.vcenter_root_password_expiration:",
      "\t#email: ${1:}",
      "\t#hostname: ${2:}",
      "\t#max_days_between_password_change: ${3:}",
      "\t#min_days_between_password_change: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#warn_days_before_password_expiration: ${12:}"
    ]
  },
  "vcenter_standard_key_provider": {
    "prefix": "vcenter_standard_key_provider",
    "description": "Add, reconfigure or remove Standard Key Provider on vCenter server",
    "body": [
      "community.vmware.vcenter_standard_key_provider:",
      "\tname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#kms_info: ${3:[]}",
      "\t#kms_password: ${4:}",
      "\t#kms_username: ${5:}",
      "\t#make_kms_trust_vc: ${6:}",
      "\t#mark_default: ${7:false}",
      "\t#password: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#proxy_server: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_about_info": {
    "prefix": "vmware_about_info",
    "description": "Provides information about VMware server to which user is connecting to",
    "body": [
      "community.vmware.vmware_about_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_category": {
    "prefix": "vmware_category",
    "description": "Manage VMware categories",
    "body": [
      "community.vmware.vmware_category:",
      "\tcategory_name: ${1:}",
      "\t#associable_object_types: ${2:All objects|Cluster|Content Library|Datacenter|Datastore|Datastore Cluster|Distributed Port Group|Distributed Switch|Folder|Host|Library item|Network|Host Network|Opaque Network|Resource Pool|vApp|Virtual Machine}",
      "\t#category_cardinality: ${3:#multiple|single}",
      "\t#category_description: ${4:\"\"}",
      "\t#hostname: ${5:}",
      "\t#new_category_name: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#protocol: ${9:http|#https}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_category_info": {
    "prefix": "vmware_category_info",
    "description": "Gather info about VMware tag categories",
    "body": [
      "community.vmware.vmware_category_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#protocol: ${4:http|#https}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_cfg_backup": {
    "prefix": "vmware_cfg_backup",
    "description": "Backup / Restore / Reset ESXi host configuration",
    "body": [
      "community.vmware.vmware_cfg_backup:",
      "\tstate: ${1:saved|absent|loaded}",
      "\t#dest: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#src: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_cluster": {
    "prefix": "vmware_cluster",
    "description": "Manage VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_cluster_dpm": {
    "prefix": "vmware_cluster_dpm",
    "description": "Manage Distributed Power Management (DPM) on VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster_dpm:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#default_dpm_behaviour: ${3:#automated|manual}",
      "\t#enable_dpm: ${4:false}",
      "\t#host_power_action_rate: ${5:1|2|#3|4|5}",
      "\t#hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_cluster_drs": {
    "prefix": "vmware_cluster_drs",
    "description": "Manage Distributed Resource Scheduler (DRS) on VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster_drs:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#advanced_settings: ${3:{\\}}",
      "\t#drs_default_vm_behavior: ${4:#fullyAutomated|manual|partiallyAutomated}",
      "\t#drs_enable_vm_behavior_overrides: ${5:true}",
      "\t#drs_vmotion_rate: ${6:1|2|#3|4|5}",
      "\t#enable: ${7:true}",
      "\t#hostname: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#predictive_drs: ${11:false}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_cluster_drs_recommendations": {
    "prefix": "vmware_cluster_drs_recommendations",
    "description": "Apply DRS Recommendations",
    "body": [
      "community.vmware.vmware_cluster_drs_recommendations:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_cluster_ha": {
    "prefix": "vmware_cluster_ha",
    "description": "Manage High Availability (HA) on VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster_ha:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#advanced_settings: ${3:{\\}}",
      "\t#apd_delay: ${4:180}",
      "\t#apd_reaction: ${5:#reset|none}",
      "\t#apd_response: ${6:disabled|#warning|restartConservative|restartAggressive}",
      "\t#enable: ${7:true}",
      "\t#failover_host_admission_control: ${8:}",
      "\t#ha_host_monitoring: ${9:#enabled|disabled}",
      "\t#ha_restart_priority: ${10:disabled|high|low|#medium}",
      "\t#ha_vm_failure_interval: ${11:30}",
      "\t#ha_vm_max_failure_window: ${12:-1}",
      "\t#ha_vm_max_failures: ${13:3}",
      "\t#ha_vm_min_up_time: ${14:120}",
      "\t#ha_vm_monitoring: ${15:vmAndAppMonitoring|vmMonitoringOnly|#vmMonitoringDisabled}",
      "\t#host_isolation_response: ${16:#none|powerOff|shutdown}",
      "\t#hostname: ${17:}",
      "\t#password: ${18:}",
      "\t#pdl_response: ${19:disabled|#warning|restartAggressive}",
      "\t#port: ${20:443}",
      "\t#proxy_host: ${21:}",
      "\t#proxy_port: ${22:}",
      "\t#reservation_based_admission_control: ${23:}",
      "\t#slot_based_admission_control: ${24:}",
      "\t#username: ${25:}",
      "\t#validate_certs: ${26:true}"
    ]
  },
  "vmware_cluster_info": {
    "prefix": "vmware_cluster_info",
    "description": "Gather info about clusters available in given vCenter",
    "body": [
      "community.vmware.vmware_cluster_info:",
      "\t#cluster_name: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#properties: ${6:}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#schema: ${9:#summary|vsphere}",
      "\t#show_tag: ${10:false}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_cluster_vcls": {
    "prefix": "vmware_cluster_vcls",
    "description": "Override the default vCLS (vSphere Cluster Services) VM disk placement for this cluster.",
    "body": [
      "community.vmware.vmware_cluster_vcls:",
      "\tallowed_datastores: ${1:}",
      "\tcluster_name: ${2:}",
      "\tdatacenter: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_cluster_vsan": {
    "prefix": "vmware_cluster_vsan",
    "description": "Manages virtual storage area network (vSAN) configuration on VMware vSphere clusters",
    "body": [
      "community.vmware.vmware_cluster_vsan:",
      "\tcluster_name: ${1:}",
      "\tdatacenter: ${2:}",
      "\t#advanced_options: ${3:}",
      "\t#enable: ${4:true}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#vsan_auto_claim_storage: ${12:false}"
    ]
  },
  "vmware_content_deploy_ovf_template": {
    "prefix": "vmware_content_deploy_ovf_template",
    "description": "Deploy Virtual Machine from ovf template stored in content library.",
    "body": [
      "community.vmware.vmware_content_deploy_ovf_template:",
      "\tdatacenter: ${1:}",
      "\tname: ${2:}",
      "\ttemplate: ${3:}",
      "\t#cluster: ${4:}",
      "\t#datastore: ${5:}",
      "\t#datastore_cluster: ${6:}",
      "\t#folder: ${7:vm}",
      "\t#host: ${8:}",
      "\t#hostname: ${9:}",
      "\t#library: ${10:}",
      "\t#log_level: ${11:debug|info|#normal}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#protocol: ${14:http|#https}",
      "\t#proxy_host: ${15:}",
      "\t#proxy_port: ${16:}",
      "\t#resource_pool: ${17:}",
      "\t#storage_provisioning: ${18:#thin|thick|eagerZeroedThick|eagerzeroedthick}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "vmware_content_deploy_template": {
    "prefix": "vmware_content_deploy_template",
    "description": "Deploy Virtual Machine from template stored in content library.",
    "body": [
      "community.vmware.vmware_content_deploy_template:",
      "\tdatacenter: ${1:}",
      "\tname: ${2:}",
      "\ttemplate: ${3:}",
      "\t#cluster: ${4:}",
      "\t#datastore: ${5:}",
      "\t#datastore_cluster: ${6:}",
      "\t#folder: ${7:vm}",
      "\t#host: ${8:}",
      "\t#hostname: ${9:}",
      "\t#library: ${10:}",
      "\t#log_level: ${11:debug|info|#normal}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#protocol: ${14:http|#https}",
      "\t#proxy_host: ${15:}",
      "\t#proxy_port: ${16:}",
      "\t#resource_pool: ${17:}",
      "\t#state: ${18:#present|poweredon}",
      "\t#username: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "vmware_content_library_info": {
    "prefix": "vmware_content_library_info",
    "description": "Gather information about VMWare Content Library",
    "body": [
      "community.vmware.vmware_content_library_info:",
      "\t#hostname: ${1:}",
      "\t#library_id: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#protocol: ${5:http|#https}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_content_library_manager": {
    "prefix": "vmware_content_library_manager",
    "description": "Create, update and delete VMware content library",
    "body": [
      "community.vmware.vmware_content_library_manager:",
      "\tlibrary_name: ${1:}",
      "\t#datastore_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#library_description: ${4:}",
      "\t#library_type: ${5:#local|subscribed}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#protocol: ${8:http|#https}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#ssl_thumbprint: ${11:\"\"}",
      "\t#state: ${12:#present|absent}",
      "\t#subscription_url: ${13:\"\"}",
      "\t#update_on_demand: ${14:false}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_custom_attribute": {
    "prefix": "vmware_custom_attribute",
    "description": "Manage custom attributes definitions",
    "body": [
      "community.vmware.vmware_custom_attribute:",
      "\tcustom_attribute: ${1:}",
      "\tobject_type: ${2:Cluster|Datacenter|Datastore|DistributedVirtualPortgroup|DistributedVirtualSwitch|Folder|Global|HostSystem|ResourcePool|VirtualMachine}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_custom_attribute_manager": {
    "prefix": "vmware_custom_attribute_manager",
    "description": "Manage custom attributes from VMware for the given vSphere object",
    "body": [
      "community.vmware.vmware_custom_attribute_manager:",
      "\tcustom_attributes: ${1:}",
      "\tobject_name: ${2:}",
      "\tobject_type: ${3:Cluster|Datacenter|Datastore|DistributedVirtualPortgroup|DistributedVirtualSwitch|Folder|HostSystem|ResourcePool|VirtualMachine}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_datacenter": {
    "prefix": "vmware_datacenter",
    "description": "Manage VMware vSphere Datacenters",
    "body": [
      "community.vmware.vmware_datacenter:",
      "\tdatacenter_name: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_datacenter_info": {
    "prefix": "vmware_datacenter_info",
    "description": "Gather information about VMware vSphere Datacenters",
    "body": [
      "community.vmware.vmware_datacenter_info:",
      "\t#datacenter: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#properties: ${5:}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#schema: ${8:#summary|vsphere}",
      "\t#show_tag: ${9:false}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_datastore": {
    "prefix": "vmware_datastore",
    "description": "Configure Datastores",
    "body": [
      "community.vmware.vmware_datastore:",
      "\tname: ${1:}",
      "\tstorage_io_control: ${2:enable_io_statistics|enable_statistics|disable}",
      "\t#congestion_threshold_manual: ${3:}",
      "\t#congestion_threshold_percentage: ${4:90}",
      "\t#datacenter: ${5:}",
      "\t#hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#statistic_collection: ${11:true}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_datastore_cluster": {
    "prefix": "vmware_datastore_cluster",
    "description": "Manage VMware vSphere datastore clusters",
    "body": [
      "community.vmware.vmware_datastore_cluster:",
      "\tdatastore_cluster_name: ${1:}",
      "\t#automation_level: ${2:automated|#manual}",
      "\t#datacenter_name: ${3:}",
      "\t#enable_io_loadbalance: ${4:false}",
      "\t#enable_sdrs: ${5:false}",
      "\t#folder: ${6:}",
      "\t#hostname: ${7:}",
      "\t#keep_vmdks_together: ${8:true}",
      "\t#loadbalance_interval: ${9:480}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_datastore_cluster_manager": {
    "prefix": "vmware_datastore_cluster_manager",
    "description": "Manage VMware vSphere datastore cluster's members",
    "body": [
      "community.vmware.vmware_datastore_cluster_manager:",
      "\tdatastore_cluster_name: ${1:}",
      "\tdatastores: ${2:}",
      "\t#datacenter_name: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_datastore_info": {
    "prefix": "vmware_datastore_info",
    "description": "Gather info about datastores available in given vCenter",
    "body": [
      "community.vmware.vmware_datastore_info:",
      "\t#cluster: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#gather_nfs_mount_info: ${3:false}",
      "\t#gather_vmfs_mount_info: ${4:false}",
      "\t#hostname: ${5:}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#properties: ${9:}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#schema: ${12:#summary|vsphere}",
      "\t#show_tag: ${13:false}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_datastore_maintenancemode": {
    "prefix": "vmware_datastore_maintenancemode",
    "description": "Place a datastore into maintenance mode",
    "body": [
      "community.vmware.vmware_datastore_maintenancemode:",
      "\t#cluster_name: ${1:}",
      "\t#datastore: ${2:}",
      "\t#datastore_cluster: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_deploy_ovf": {
    "prefix": "vmware_deploy_ovf",
    "description": "Deploys a VMware virtual machine from an OVF or OVA file, placed on file system or HTTP server",
    "body": [
      "community.vmware.vmware_deploy_ovf:",
      "\t#allow_duplicates: ${1:true}",
      "\t#cluster: ${2:}",
      "\t#datacenter: ${3:ha-datacenter}",
      "\t#datastore: ${4:datastore1}",
      "\t#deployment_option: ${5:}",
      "\t#disk_provisioning: ${6:flat|eagerZeroedThick|monolithicSparse|twoGbMaxExtentSparse|twoGbMaxExtentFlat|#thin|sparse|thick|seSparse|monolithicFlat}",
      "\t#enable_hidden_properties: ${7:false}",
      "\t#esxi_hostname: ${8:}",
      "\t#fail_on_spec_warnings: ${9:false}",
      "\t#folder: ${10:}",
      "\t#hostname: ${11:}",
      "\t#inject_ovf_env: ${12:false}",
      "\t#name: ${13:}",
      "\t#networks: ${14:{'VM Network': 'VM Network'\\}}",
      "\t#ovf: ${15:}",
      "\t#password: ${16:}",
      "\t#port: ${17:443}",
      "\t#power_on: ${18:true}",
      "\t#properties: ${19:}",
      "\t#proxy_host: ${20:}",
      "\t#proxy_port: ${21:}",
      "\t#resource_pool: ${22:Resources}",
      "\t#url: ${23:}",
      "\t#username: ${24:}",
      "\t#validate_certs: ${25:true}",
      "\t#wait: ${26:true}",
      "\t#wait_for_ip_address: ${27:false}"
    ]
  },
  "vmware_drs_group": {
    "prefix": "vmware_drs_group",
    "description": "Creates vm/host group in a given cluster.",
    "body": [
      "community.vmware.vmware_drs_group:",
      "\tcluster_name: ${1:}",
      "\tgroup_name: ${2:}",
      "\t#datacenter: ${3:}",
      "\t#hostname: ${4:}",
      "\t#hosts: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#vms: ${13:}"
    ]
  },
  "vmware_drs_group_info": {
    "prefix": "vmware_drs_group_info",
    "description": "Gathers info about DRS VM/Host groups on the given cluster",
    "body": [
      "community.vmware.vmware_drs_group_info:",
      "\t#cluster_name: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_drs_group_manager": {
    "prefix": "vmware_drs_group_manager",
    "description": "Manage VMs and Hosts in DRS group.",
    "body": [
      "community.vmware.vmware_drs_group_manager:",
      "\tcluster: ${1:}",
      "\tgroup_name: ${2:}",
      "\t#datacenter: ${3:}",
      "\t#hostname: ${4:}",
      "\t#hosts: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#vms: ${13:}"
    ]
  },
  "vmware_drs_rule_info": {
    "prefix": "vmware_drs_rule_info",
    "description": "Gathers info about DRS rule on the given cluster",
    "body": [
      "community.vmware.vmware_drs_rule_info:",
      "\t#cluster_name: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_dvs_host": {
    "prefix": "vmware_dvs_host",
    "description": "Add or remove a host from distributed virtual switch",
    "body": [
      "community.vmware.vmware_dvs_host:",
      "\tesxi_hostname: ${1:}",
      "\tswitch_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#lag_uplinks: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#vendor_specific_config: ${12:}",
      "\t#vmnics: ${13:}"
    ]
  },
  "vmware_dvs_portgroup": {
    "prefix": "vmware_dvs_portgroup",
    "description": "Create or remove a Distributed vSwitch portgroup.",
    "body": [
      "community.vmware.vmware_dvs_portgroup:",
      "\tport_binding: ${1:static|ephemeral}",
      "\tportgroup_name: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tswitch_name: ${4:}",
      "\tvlan_id: ${5:}",
      "\t#hostname: ${6:}",
      "\t#in_traffic_shaping: ${7:}",
      "\t#mac_learning: ${8:}",
      "\t#net_flow: ${9:true|on|yes|false|off|no|inherited}",
      "\t#network_policy: ${10:}",
      "\t#num_ports: ${11:}",
      "\t#out_traffic_shaping: ${12:}",
      "\t#password: ${13:}",
      "\t#port: ${14:443}",
      "\t#port_allocation: ${15:elastic|fixed}",
      "\t#port_policy: ${16:{'traffic_filter_override': False, 'network_rp_override': False, 'live_port_move': False, 'mac_management_override': False, 'vendor_config_override': False, 'port_config_reset_at_disconnect': True, 'uplink_teaming_override': False, 'block_override': True, 'shaping_override': False, 'vlan_override': False, 'ipfix_override': False\\}}",
      "\t#proxy_host: ${17:}",
      "\t#proxy_port: ${18:}",
      "\t#teaming_policy: ${19:{'notify_switches': True, 'load_balance_policy': 'loadbalance_srcid', 'rolling_order': False\\}}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:true}",
      "\t#vlan_private: ${22:false}",
      "\t#vlan_trunk: ${23:false}"
    ]
  },
  "vmware_dvs_portgroup_find": {
    "prefix": "vmware_dvs_portgroup_find",
    "description": "Find portgroup(s) in a VMware environment",
    "body": [
      "community.vmware.vmware_dvs_portgroup_find:",
      "\t#dvswitch: ${1:}",
      "\t#hostname: ${2:}",
      "\t#name: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#show_uplink: ${8:false}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#vlanid: ${11:}"
    ]
  },
  "vmware_dvs_portgroup_info": {
    "prefix": "vmware_dvs_portgroup_info",
    "description": "Gathers info DVS portgroup configurations",
    "body": [
      "community.vmware.vmware_dvs_portgroup_info:",
      "\tdatacenter: ${1:}",
      "\t#dvswitch: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#show_mac_learning: ${8:true}",
      "\t#show_network_policy: ${9:true}",
      "\t#show_port_policy: ${10:true}",
      "\t#show_teaming_policy: ${11:true}",
      "\t#show_uplinks: ${12:true}",
      "\t#show_vlan_info: ${13:false}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_dvswitch": {
    "prefix": "vmware_dvswitch",
    "description": "Create or remove a Distributed Switch",
    "body": [
      "community.vmware.vmware_dvswitch:",
      "\tswitch_name: ${1:}",
      "\t#contact: ${2:}",
      "\t#datacenter_name: ${3:}",
      "\t#description: ${4:}",
      "\t#discovery_operation: ${5:both|advertise|#listen}",
      "\t#discovery_proto: ${6:#cdp|lldp|disabled}",
      "\t#folder: ${7:}",
      "\t#health_check: ${8:{'vlan_mtu': False, 'teaming_failover': False, 'vlan_mtu_interval': 0, 'teaming_failover_interval': 0\\}}",
      "\t#hostname: ${9:}",
      "\t#mtu: ${10:1500}",
      "\t#multicast_filtering_mode: ${11:#basic|snooping}",
      "\t#net_flow: ${12:{'collector_port': 0, 'observation_domain_id': 0, 'active_flow_timeout': 60, 'idle_flow_timeout': 15, 'sampling_rate': 4096, 'internal_flows_only': False\\}}",
      "\t#network_policy: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:443}",
      "\t#proxy_host: ${16:}",
      "\t#proxy_port: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#switch_version: ${19:}",
      "\t#uplink_prefix: ${20:Uplink }",
      "\t#uplink_quantity: ${21:}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "vmware_dvswitch_info": {
    "prefix": "vmware_dvswitch_info",
    "description": "Gathers info dvswitch configurations",
    "body": [
      "community.vmware.vmware_dvswitch_info:",
      "\t#folder: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#properties: ${5:}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#schema: ${8:#summary|vsphere}",
      "\t#switch_name: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_dvswitch_lacp": {
    "prefix": "vmware_dvswitch_lacp",
    "description": "Manage LACP configuration on a Distributed Switch",
    "body": [
      "community.vmware.vmware_dvswitch_lacp:",
      "\tswitch: ${1:}",
      "\t#hostname: ${2:}",
      "\t#link_aggregation_groups: ${3:[]}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#support_mode: ${8:#basic|enhanced}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_dvswitch_nioc": {
    "prefix": "vmware_dvswitch_nioc",
    "description": "Manage distributed switch Network IO Control",
    "body": [
      "community.vmware.vmware_dvswitch_nioc:",
      "\tswitch: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#resources: ${7:[]}",
      "\t#state: ${8:#present|absent}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#version: ${11:version2|version3}"
    ]
  },
  "vmware_dvswitch_pvlans": {
    "prefix": "vmware_dvswitch_pvlans",
    "description": "Manage Private VLAN configuration of a Distributed Switch",
    "body": [
      "community.vmware.vmware_dvswitch_pvlans:",
      "\tswitch: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#primary_pvlans: ${5:[]}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#secondary_pvlans: ${8:[]}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_dvswitch_uplink_pg": {
    "prefix": "vmware_dvswitch_uplink_pg",
    "description": "Manage uplink portgroup configuration of a Distributed Switch",
    "body": [
      "community.vmware.vmware_dvswitch_uplink_pg:",
      "\tswitch: ${1:}",
      "\t#advanced: ${2:{'port_config_reset_at_disconnect': True, 'block_override': True, 'vendor_config_override': False, 'vlan_override': False, 'netflow_override': False, 'traffic_filter_override': False\\}}",
      "\t#block_all_ports: ${3:false}",
      "\t#description: ${4:}",
      "\t#hostname: ${5:}",
      "\t#lacp: ${6:{'status': 'disabled', 'mode': 'passive'\\}}",
      "\t#name: ${7:}",
      "\t#netflow_enabled: ${8:false}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}",
      "\t#vlan_trunk_range: ${15:['0-4094']}"
    ]
  },
  "vmware_evc_mode": {
    "prefix": "vmware_evc_mode",
    "description": "Enable/Disable EVC mode on vCenter",
    "body": [
      "community.vmware.vmware_evc_mode:",
      "\tcluster_name: ${1:}",
      "\tdatacenter_name: ${2:}",
      "\t#evc_mode: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_export_ovf": {
    "prefix": "vmware_export_ovf",
    "description": "Exports a VMware virtual machine to an OVF file, device files and a manifest file",
    "body": [
      "community.vmware.vmware_export_ovf:",
      "\texport_dir: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#download_timeout: ${3:30}",
      "\t#export_with_extraconfig: ${4:false}",
      "\t#export_with_images: ${5:false}",
      "\t#folder: ${6:}",
      "\t#hostname: ${7:}",
      "\t#moid: ${8:}",
      "\t#name: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#username: ${14:}",
      "\t#uuid: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_first_class_disk": {
    "prefix": "vmware_first_class_disk",
    "description": "Manage VMware vSphere First Class Disks",
    "body": [
      "community.vmware.vmware_first_class_disk:",
      "\tdatastore_name: ${1:}",
      "\tdisk_name: ${2:}",
      "\t#datacenter_name: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#size: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_folder_info": {
    "prefix": "vmware_folder_info",
    "description": "Provides information about folders in a datacenter",
    "body": [
      "community.vmware.vmware_folder_info:",
      "\tdatacenter: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_guest": {
    "prefix": "vmware_guest",
    "description": "Manages virtual machines in vCenter",
    "body": [
      "community.vmware.vmware_guest:",
      "\t#advanced_settings: ${1:[]}",
      "\t#annotation: ${2:}",
      "\t#cdrom: ${3:[]}",
      "\t#cluster: ${4:}",
      "\t#convert: ${5:thin|thick|eagerzeroedthick}",
      "\t#customization: ${6:{\\}}",
      "\t#customization_spec: ${7:}",
      "\t#customvalues: ${8:[]}",
      "\t#datacenter: ${9:ha-datacenter}",
      "\t#datastore: ${10:}",
      "\t#delete_from_inventory: ${11:false}",
      "\t#disk: ${12:[]}",
      "\t#encryption: ${13:{\\}}",
      "\t#esxi_hostname: ${14:}",
      "\t#folder: ${15:}",
      "\t#force: ${16:false}",
      "\t#guest_id: ${17:}",
      "\t#hardware: ${18:{\\}}",
      "\t#hostname: ${19:}",
      "\t#is_template: ${20:false}",
      "\t#linked_clone: ${21:false}",
      "\t#name: ${22:}",
      "\t#name_match: ${23:#first|last}",
      "\t#networks: ${24:[]}",
      "\t#nvdimm: ${25:{\\}}",
      "\t#password: ${26:}",
      "\t#port: ${27:443}",
      "\t#proxy_host: ${28:}",
      "\t#proxy_port: ${29:}",
      "\t#resource_pool: ${30:}",
      "\t#snapshot_src: ${31:}",
      "\t#state: ${32:absent|poweredon|powered-on|poweredoff|powered-off|#present|rebootguest|reboot-guest|restarted|suspended|shutdownguest|shutdown-guest}",
      "\t#state_change_timeout: ${33:0}",
      "\t#template: ${34:}",
      "\t#use_instance_uuid: ${35:false}",
      "\t#username: ${36:}",
      "\t#uuid: ${37:}",
      "\t#validate_certs: ${38:true}",
      "\t#vapp_properties: ${39:[]}",
      "\t#wait_for_customization: ${40:false}",
      "\t#wait_for_customization_timeout: ${41:3600}",
      "\t#wait_for_ip_address: ${42:false}",
      "\t#wait_for_ip_address_timeout: ${43:300}"
    ]
  },
  "vmware_guest_boot_info": {
    "prefix": "vmware_guest_boot_info",
    "description": "Gather info about boot options for the given virtual machine",
    "body": [
      "community.vmware.vmware_guest_boot_info:",
      "\t#hostname: ${1:}",
      "\t#moid: ${2:}",
      "\t#name: ${3:}",
      "\t#name_match: ${4:#first|last}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#use_instance_uuid: ${9:false}",
      "\t#username: ${10:}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_guest_boot_manager": {
    "prefix": "vmware_guest_boot_manager",
    "description": "Manage boot options for the given virtual machine",
    "body": [
      "community.vmware.vmware_guest_boot_manager:",
      "\t#boot_delay: ${1:}",
      "\t#boot_firmware: ${2:bios|efi}",
      "\t#boot_hdd_name: ${3:}",
      "\t#boot_order: ${4:[]}",
      "\t#boot_retry_delay: ${5:}",
      "\t#boot_retry_enabled: ${6:}",
      "\t#enter_bios_setup: ${7:}",
      "\t#hostname: ${8:}",
      "\t#moid: ${9:}",
      "\t#name: ${10:}",
      "\t#name_match: ${11:#first|last}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#proxy_host: ${14:}",
      "\t#proxy_port: ${15:}",
      "\t#secure_boot_enabled: ${16:}",
      "\t#use_instance_uuid: ${17:false}",
      "\t#username: ${18:}",
      "\t#uuid: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "vmware_guest_controller": {
    "prefix": "vmware_guest_controller",
    "description": "Manage disk or USB controllers related to virtual machine in given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_controller:",
      "\t#controllers: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#folder: ${3:}",
      "\t#gather_disk_controller_facts: ${4:false}",
      "\t#hostname: ${5:}",
      "\t#moid: ${6:}",
      "\t#name: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#sleep_time: ${12:10}",
      "\t#use_instance_uuid: ${13:false}",
      "\t#username: ${14:}",
      "\t#uuid: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_guest_cross_vc_clone": {
    "prefix": "vmware_guest_cross_vc_clone",
    "description": "Cross-vCenter VM/template clone",
    "body": [
      "community.vmware.vmware_guest_cross_vc_clone:",
      "\tdestination_datastore: ${1:}",
      "\tdestination_host: ${2:}",
      "\tdestination_vcenter: ${3:}",
      "\tdestination_vcenter_password: ${4:}",
      "\tdestination_vcenter_username: ${5:}",
      "\tdestination_vm_folder: ${6:}",
      "\tdestination_vm_name: ${7:}",
      "\t#destination_resource_pool: ${8:}",
      "\t#destination_vcenter_port: ${9:443}",
      "\t#destination_vcenter_validate_certs: ${10:false}",
      "\t#hostname: ${11:}",
      "\t#is_template: ${12:false}",
      "\t#moid: ${13:}",
      "\t#name: ${14:}",
      "\t#password: ${15:}",
      "\t#port: ${16:443}",
      "\t#proxy_host: ${17:}",
      "\t#proxy_port: ${18:}",
      "\t#state: ${19:#present|poweredon}",
      "\t#timeout: ${20:3600}",
      "\t#use_instance_uuid: ${21:false}",
      "\t#username: ${22:}",
      "\t#uuid: ${23:}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "vmware_guest_custom_attribute_defs": {
    "prefix": "vmware_guest_custom_attribute_defs",
    "description": "Manage custom attributes definitions for virtual machine from VMware",
    "body": [
      "community.vmware.vmware_guest_custom_attribute_defs:",
      "\t#attribute_key: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_guest_custom_attributes": {
    "prefix": "vmware_guest_custom_attributes",
    "description": "Manage custom attributes from VMware for the given virtual machine",
    "body": [
      "community.vmware.vmware_guest_custom_attributes:",
      "\t#attributes: ${1:[]}",
      "\t#datacenter: ${2:}",
      "\t#folder: ${3:}",
      "\t#hostname: ${4:}",
      "\t#moid: ${5:}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#use_instance_uuid: ${12:false}",
      "\t#username: ${13:}",
      "\t#uuid: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_guest_customization_info": {
    "prefix": "vmware_guest_customization_info",
    "description": "Gather info about VM customization specifications",
    "body": [
      "community.vmware.vmware_guest_customization_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#spec_name: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_guest_disk": {
    "prefix": "vmware_guest_disk",
    "description": "Manage disks related to virtual machine in given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_disk:",
      "\tdatacenter: ${1:}",
      "\t#disk: ${2:[]}",
      "\t#folder: ${3:}",
      "\t#hostname: ${4:}",
      "\t#moid: ${5:}",
      "\t#name: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#use_instance_uuid: ${11:false}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_guest_disk_info": {
    "prefix": "vmware_guest_disk_info",
    "description": "Gather info about disks of given virtual machine",
    "body": [
      "community.vmware.vmware_guest_disk_info:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#use_instance_uuid: ${10:false}",
      "\t#username: ${11:}",
      "\t#uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_guest_file_operation": {
    "prefix": "vmware_guest_file_operation",
    "description": "Files operation in a VMware guest operating system without network",
    "body": [
      "community.vmware.vmware_guest_file_operation:",
      "\tvm_id: ${1:}",
      "\tvm_password: ${2:}",
      "\tvm_username: ${3:}",
      "\t#cluster: ${4:}",
      "\t#copy: ${5:}",
      "\t#datacenter: ${6:}",
      "\t#directory: ${7:}",
      "\t#fetch: ${8:}",
      "\t#folder: ${9:}",
      "\t#hostname: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:443}",
      "\t#proxy_host: ${13:}",
      "\t#proxy_port: ${14:}",
      "\t#timeout: ${15:100}",
      "\t#username: ${16:}",
      "\t#validate_certs: ${17:true}",
      "\t#vm_id_type: ${18:uuid|instance_uuid|dns_name|inventory_path|#vm_name}"
    ]
  },
  "vmware_guest_find": {
    "prefix": "vmware_guest_find",
    "description": "Find the folder path(s) for a virtual machine by name or UUID",
    "body": [
      "community.vmware.vmware_guest_find:",
      "\t#hostname: ${1:}",
      "\t#name: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#use_instance_uuid: ${7:false}",
      "\t#username: ${8:}",
      "\t#uuid: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_guest_info": {
    "prefix": "vmware_guest_info",
    "description": "Gather info about a single VM",
    "body": [
      "community.vmware.vmware_guest_info:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#name_match: ${6:#first|last}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#properties: ${9:}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#schema: ${12:#summary|vsphere}",
      "\t#tag_details: ${13:false}",
      "\t#tags: ${14:false}",
      "\t#use_instance_uuid: ${15:false}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "vmware_guest_instant_clone": {
    "prefix": "vmware_guest_instant_clone",
    "description": "Instant Clone VM",
    "body": [
      "community.vmware.vmware_guest_instant_clone:",
      "\tdatacenter: ${1:}",
      "\tdatastore: ${2:}",
      "\thost: ${3:}",
      "\tname: ${4:}",
      "\t#folder: ${5:}",
      "\t#guestinfo_vars: ${6:}",
      "\t#hostname: ${7:}",
      "\t#moid: ${8:}",
      "\t#parent_vm: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#resource_pool: ${14:}",
      "\t#use_instance_uuid: ${15:false}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}",
      "\t#validate_certs: ${18:true}",
      "\t#vm_password: ${19:}",
      "\t#vm_username: ${20:}",
      "\t#wait_vm_tools: ${21:true}",
      "\t#wait_vm_tools_timeout: ${22:300}"
    ]
  },
  "vmware_guest_move": {
    "prefix": "vmware_guest_move",
    "description": "Moves virtual machines in vCenter",
    "body": [
      "community.vmware.vmware_guest_move:",
      "\tdatacenter: ${1:}",
      "\tdest_folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#name_match: ${6:#first|last}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#use_instance_uuid: ${11:false}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_guest_network": {
    "prefix": "vmware_guest_network",
    "description": "Manage network adapters of specified virtual machine in given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_network:",
      "\t#allow_guest_os_mtu_change: ${1:true}",
      "\t#cluster: ${2:}",
      "\t#connected: ${3:true}",
      "\t#datacenter: ${4:ha-datacenter}",
      "\t#device_type: ${5:vmxnet3}",
      "\t#directpath_io: ${6:false}",
      "\t#esxi_hostname: ${7:}",
      "\t#folder: ${8:}",
      "\t#force: ${9:false}",
      "\t#gather_network_info: ${10:false}",
      "\t#guest_control: ${11:true}",
      "\t#hostname: ${12:}",
      "\t#label: ${13:}",
      "\t#mac_address: ${14:}",
      "\t#moid: ${15:}",
      "\t#name: ${16:}",
      "\t#network_name: ${17:}",
      "\t#password: ${18:}",
      "\t#physical_function_backing: ${19:}",
      "\t#port: ${20:443}",
      "\t#proxy_host: ${21:}",
      "\t#proxy_port: ${22:}",
      "\t#pvrdma_device_protocol: ${23:}",
      "\t#start_connected: ${24:true}",
      "\t#state: ${25:#present|absent}",
      "\t#switch: ${26:}",
      "\t#use_instance_uuid: ${27:false}",
      "\t#username: ${28:}",
      "\t#uuid: ${29:}",
      "\t#validate_certs: ${30:true}",
      "\t#virtual_function_backing: ${31:}",
      "\t#vlan_id: ${32:}",
      "\t#wake_onlan: ${33:false}"
    ]
  },
  "vmware_guest_powerstate": {
    "prefix": "vmware_guest_powerstate",
    "description": "Manages power states of virtual machines in vCenter",
    "body": [
      "community.vmware.vmware_guest_powerstate:",
      "\t#answer: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#folder: ${3:}",
      "\t#force: ${4:false}",
      "\t#hostname: ${5:}",
      "\t#moid: ${6:}",
      "\t#name: ${7:}",
      "\t#name_match: ${8:#first|last}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#schedule_task_description: ${13:}",
      "\t#schedule_task_enabled: ${14:true}",
      "\t#schedule_task_name: ${15:}",
      "\t#scheduled_at: ${16:}",
      "\t#state: ${17:powered-off|powered-on|reboot-guest|restarted|shutdown-guest|suspended|#present}",
      "\t#state_change_timeout: ${18:0}",
      "\t#use_instance_uuid: ${19:false}",
      "\t#username: ${20:}",
      "\t#uuid: ${21:}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "vmware_guest_register_operation": {
    "prefix": "vmware_guest_register_operation",
    "description": "VM inventory registration operation",
    "body": [
      "community.vmware.vmware_guest_register_operation:",
      "\tname: ${1:}",
      "\t#cluster: ${2:}",
      "\t#datacenter: ${3:ha-datacenter}",
      "\t#esxi_hostname: ${4:}",
      "\t#folder: ${5:}",
      "\t#hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#path: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#resource_pool: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#template: ${14:false}",
      "\t#username: ${15:}",
      "\t#uuid: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "vmware_guest_screenshot": {
    "prefix": "vmware_guest_screenshot",
    "description": "Create a screenshot of the Virtual Machine console.",
    "body": [
      "community.vmware.vmware_guest_screenshot:",
      "\t#cluster: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#folder: ${4:}",
      "\t#hostname: ${5:}",
      "\t#local_path: ${6:}",
      "\t#moid: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#uuid: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_guest_sendkey": {
    "prefix": "vmware_guest_sendkey",
    "description": "Send USB HID codes to the Virtual Machine's keyboard.",
    "body": [
      "community.vmware.vmware_guest_sendkey:",
      "\t#cluster: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#folder: ${4:}",
      "\t#hostname: ${5:}",
      "\t#keys_send: ${6:[]}",
      "\t#moid: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#sleep_time: ${13:0}",
      "\t#string_send: ${14:}",
      "\t#username: ${15:}",
      "\t#uuid: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "vmware_guest_serial_port": {
    "prefix": "vmware_guest_serial_port",
    "description": "Manage serial ports on an existing VM",
    "body": [
      "community.vmware.vmware_guest_serial_port:",
      "\tbackings: ${1:}",
      "\t#hostname: ${2:}",
      "\t#moid: ${3:}",
      "\t#name: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#use_instance_uuid: ${9:false}",
      "\t#username: ${10:}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_guest_snapshot": {
    "prefix": "vmware_guest_snapshot",
    "description": "Manages virtual machines snapshots in vCenter",
    "body": [
      "community.vmware.vmware_guest_snapshot:",
      "\tdatacenter: ${1:}",
      "\t#description: ${2:\"\"}",
      "\t#folder: ${3:}",
      "\t#hostname: ${4:}",
      "\t#memory_dump: ${5:false}",
      "\t#moid: ${6:}",
      "\t#name: ${7:}",
      "\t#name_match: ${8:#first|last}",
      "\t#new_description: ${9:}",
      "\t#new_snapshot_name: ${10:}",
      "\t#password: ${11:}",
      "\t#port: ${12:443}",
      "\t#proxy_host: ${13:}",
      "\t#proxy_port: ${14:}",
      "\t#quiesce: ${15:false}",
      "\t#remove_children: ${16:false}",
      "\t#snapshot_id: ${17:}",
      "\t#snapshot_name: ${18:}",
      "\t#state: ${19:#present|absent|revert|remove_all}",
      "\t#use_instance_uuid: ${20:false}",
      "\t#username: ${21:}",
      "\t#uuid: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "vmware_guest_snapshot_info": {
    "prefix": "vmware_guest_snapshot_info",
    "description": "Gather info about virtual machine's snapshots in vCenter",
    "body": [
      "community.vmware.vmware_guest_snapshot_info:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#use_instance_uuid: ${10:false}",
      "\t#username: ${11:}",
      "\t#uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_guest_storage_policy": {
    "prefix": "vmware_guest_storage_policy",
    "description": "Set VM Home and disk(s) storage policy profiles.",
    "body": [
      "community.vmware.vmware_guest_storage_policy:",
      "\t#disk: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#vm_home: ${13:}"
    ]
  },
  "vmware_guest_tools_info": {
    "prefix": "vmware_guest_tools_info",
    "description": "Gather info about VMware tools installed in VM",
    "body": [
      "community.vmware.vmware_guest_tools_info:",
      "\t#datacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#name_match: ${6:#first|last}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#use_instance_uuid: ${11:false}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_guest_tools_upgrade": {
    "prefix": "vmware_guest_tools_upgrade",
    "description": "Module to upgrade VMTools",
    "body": [
      "community.vmware.vmware_guest_tools_upgrade:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#force_upgrade: ${3:false}",
      "\t#hostname: ${4:}",
      "\t#installer_options: ${5:}",
      "\t#moid: ${6:}",
      "\t#name: ${7:}",
      "\t#name_match: ${8:#first|last}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#uuid: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_guest_tools_wait": {
    "prefix": "vmware_guest_tools_wait",
    "description": "Wait for VMware tools to become available",
    "body": [
      "community.vmware.vmware_guest_tools_wait:",
      "\t#datacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#name_match: ${6:#first|last}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#timeout: ${11:500}",
      "\t#use_instance_uuid: ${12:false}",
      "\t#username: ${13:}",
      "\t#uuid: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_guest_tpm": {
    "prefix": "vmware_guest_tpm",
    "description": "Add or remove vTPM device for specified VM.",
    "body": [
      "community.vmware.vmware_guest_tpm:",
      "\tdatacenter: ${1:}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_guest_vgpu": {
    "prefix": "vmware_guest_vgpu",
    "description": "Modify vGPU video card profile of the specified virtual machine in the given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_vgpu:",
      "\t#cluster: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#esxi_hostname: ${3:}",
      "\t#folder: ${4:}",
      "\t#force: ${5:false}",
      "\t#hostname: ${6:}",
      "\t#moid: ${7:}",
      "\t#name: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#use_instance_uuid: ${14:false}",
      "\t#username: ${15:}",
      "\t#uuid: ${16:}",
      "\t#validate_certs: ${17:true}",
      "\t#vgpu: ${18:}"
    ]
  },
  "vmware_guest_vgpu_info": {
    "prefix": "vmware_guest_vgpu_info",
    "description": "Gather information about vGPU profiles of the specified virtual machine in the given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_vgpu_info:",
      "\t#datacenter: ${1:ha-datacenter}",
      "\t#folder: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#use_instance_uuid: ${10:false}",
      "\t#username: ${11:}",
      "\t#uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_guest_video": {
    "prefix": "vmware_guest_video",
    "description": "Modify video card configurations of specified virtual machine in given vCenter infrastructure",
    "body": [
      "community.vmware.vmware_guest_video:",
      "\t#datacenter: ${1:ha-datacenter}",
      "\t#display_number: ${2:}",
      "\t#enable_3D: ${3:}",
      "\t#folder: ${4:}",
      "\t#gather_video_facts: ${5:false}",
      "\t#hostname: ${6:}",
      "\t#memory_3D_mb: ${7:}",
      "\t#moid: ${8:}",
      "\t#name: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#renderer_3D: ${14:automatic|software|hardware}",
      "\t#use_auto_detect: ${15:}",
      "\t#username: ${16:}",
      "\t#uuid: ${17:}",
      "\t#validate_certs: ${18:true}",
      "\t#video_memory_mb: ${19:}"
    ]
  },
  "vmware_host": {
    "prefix": "vmware_host",
    "description": "Add, remove, or move an ESXi host to, from, or within vCenter",
    "body": [
      "community.vmware.vmware_host:",
      "\tdatacenter_name: ${1:}",
      "\tesxi_hostname: ${2:}",
      "\t#add_connected: ${3:true}",
      "\t#cluster_name: ${4:}",
      "\t#esxi_password: ${5:}",
      "\t#esxi_ssl_thumbprint: ${6:\"\"}",
      "\t#esxi_username: ${7:}",
      "\t#fetch_ssl_thumbprint: ${8:true}",
      "\t#folder: ${9:}",
      "\t#force_connection: ${10:true}",
      "\t#hostname: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#proxy_host: ${14:}",
      "\t#proxy_port: ${15:}",
      "\t#reconnect_disconnected: ${16:true}",
      "\t#state: ${17:#present|absent|add_or_reconnect|reconnect|disconnected}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "vmware_host_acceptance": {
    "prefix": "vmware_host_acceptance",
    "description": "Manage the host acceptance level of an ESXi host",
    "body": [
      "community.vmware.vmware_host_acceptance:",
      "\tstate: ${1:community|partner|vmware_accepted|vmware_certified}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_acceptance_info": {
    "prefix": "vmware_host_acceptance_info",
    "description": "Gather host acceptance level of ESXi hosts",
    "body": [
      "community.vmware.vmware_host_acceptance_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_active_directory": {
    "prefix": "vmware_host_active_directory",
    "description": "Joins an ESXi host system to an Active Directory domain or leaves it",
    "body": [
      "community.vmware.vmware_host_active_directory:",
      "\t#ad_domain: ${1:\"\"}",
      "\t#ad_password: ${2:\"\"}",
      "\t#ad_state: ${3:present|#absent}",
      "\t#ad_user: ${4:\"\"}",
      "\t#cluster_name: ${5:}",
      "\t#esxi_hostname: ${6:}",
      "\t#hostname: ${7:}",
      "\t#password: ${8:}",
      "\t#port: ${9:443}",
      "\t#proxy_host: ${10:}",
      "\t#proxy_port: ${11:}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_host_auto_start": {
    "prefix": "vmware_host_auto_start",
    "description": "Manage the auto power ON or OFF for vm on ESXi host",
    "body": [
      "community.vmware.vmware_host_auto_start:",
      "\tesxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#moid: ${3:}",
      "\t#name: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#power_info: ${7:{'start_action': 'none', 'start_delay': -1, 'start_order': -1, 'stop_action': 'systemDefault', 'stop_delay': -1, 'wait_for_heartbeat': 'systemDefault'\\}}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#system_defaults: ${10:}",
      "\t#use_instance_uuid: ${11:false}",
      "\t#username: ${12:}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_host_capability_info": {
    "prefix": "vmware_host_capability_info",
    "description": "Gathers info about an ESXi host's capability information",
    "body": [
      "community.vmware.vmware_host_capability_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_config_info": {
    "prefix": "vmware_host_config_info",
    "description": "Gathers info about an ESXi host's advance configuration information",
    "body": [
      "community.vmware.vmware_host_config_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_config_manager": {
    "prefix": "vmware_host_config_manager",
    "description": "Manage advanced system settings of an ESXi host",
    "body": [
      "community.vmware.vmware_host_config_manager:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#options: ${4:{\\}}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_custom_attributes": {
    "prefix": "vmware_host_custom_attributes",
    "description": "Manage custom attributes from VMware for the given ESXi host",
    "body": [
      "community.vmware.vmware_host_custom_attributes:",
      "\tesxi_hostname: ${1:}",
      "\t#attributes: ${2:[]}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_datastore": {
    "prefix": "vmware_host_datastore",
    "description": "Manage a datastore on ESXi host",
    "body": [
      "community.vmware.vmware_host_datastore:",
      "\tdatastore_name: ${1:}",
      "\t#auto_expand: ${2:true}",
      "\t#datastore_type: ${3:nfs|nfs41|vmfs|vvol}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#nfs_path: ${6:}",
      "\t#nfs_ro: ${7:false}",
      "\t#nfs_server: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#resignature: ${13:false}",
      "\t#state: ${14:#present|absent}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}",
      "\t#vasa_provider: ${17:}",
      "\t#vmfs_device_name: ${18:}",
      "\t#vmfs_version: ${19:}"
    ]
  },
  "vmware_host_disk_info": {
    "prefix": "vmware_host_disk_info",
    "description": "Gathers information about disks attached to given ESXi host/s.",
    "body": [
      "community.vmware.vmware_host_disk_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_dns": {
    "prefix": "vmware_host_dns",
    "description": "Manage DNS configuration of an ESXi host system",
    "body": [
      "community.vmware.vmware_host_dns:",
      "\ttype: ${1:dhcp|static}",
      "\t#cluster_name: ${2:}",
      "\t#device: ${3:}",
      "\t#dns_servers: ${4:}",
      "\t#domain: ${5:}",
      "\t#esxi_hostname: ${6:}",
      "\t#host_name: ${7:}",
      "\t#hostname: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#search_domains: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#verbose: ${16:false}"
    ]
  },
  "vmware_host_dns_info": {
    "prefix": "vmware_host_dns_info",
    "description": "Gathers info about an ESXi host's DNS configuration information",
    "body": [
      "community.vmware.vmware_host_dns_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_facts": {
    "prefix": "vmware_host_facts",
    "description": "Gathers facts about remote ESXi hostsystem",
    "body": [
      "community.vmware.vmware_host_facts:",
      "\t#esxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#properties: ${5:}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#schema: ${8:#summary|vsphere}",
      "\t#show_tag: ${9:false}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_feature_info": {
    "prefix": "vmware_host_feature_info",
    "description": "Gathers info about an ESXi host's feature capability information",
    "body": [
      "community.vmware.vmware_host_feature_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_firewall_info": {
    "prefix": "vmware_host_firewall_info",
    "description": "Gathers info about an ESXi host's firewall configuration information",
    "body": [
      "community.vmware.vmware_host_firewall_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_firewall_manager": {
    "prefix": "vmware_host_firewall_manager",
    "description": "Manage firewall configurations about an ESXi host",
    "body": [
      "community.vmware.vmware_host_firewall_manager:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#rules: ${8:[]}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_graphics": {
    "prefix": "vmware_host_graphics",
    "description": "Manage Host Graphic Settings",
    "body": [
      "community.vmware.vmware_host_graphics:",
      "\t#assigment_policy: ${1:consolidation|#performance}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#graphic_type: ${4:#shared|sharedDirect}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#restart_xorg: ${10:false}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_hyperthreading": {
    "prefix": "vmware_host_hyperthreading",
    "description": "Enables/Disables Hyperthreading optimization for an ESXi host system",
    "body": [
      "community.vmware.vmware_host_hyperthreading:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#enabled|disabled}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_ipv6": {
    "prefix": "vmware_host_ipv6",
    "description": "Enables/Disables IPv6 support for an ESXi host system",
    "body": [
      "community.vmware.vmware_host_ipv6:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#enabled|disabled}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_iscsi": {
    "prefix": "vmware_host_iscsi",
    "description": "Manage the iSCSI configuration of ESXi host",
    "body": [
      "community.vmware.vmware_host_iscsi:",
      "\tesxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#iscsi_config: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent|enabled|disabled}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_iscsi_info": {
    "prefix": "vmware_host_iscsi_info",
    "description": "Gather iSCSI configuration information of ESXi host",
    "body": [
      "community.vmware.vmware_host_iscsi_info:",
      "\tesxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_host_kernel_manager": {
    "prefix": "vmware_host_kernel_manager",
    "description": "Manage kernel module options on ESXi hosts",
    "body": [
      "community.vmware.vmware_host_kernel_manager:",
      "\tkernel_module_name: ${1:}",
      "\tkernel_module_option: ${2:}",
      "\t#cluster_name: ${3:}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_lockdown": {
    "prefix": "vmware_host_lockdown",
    "description": "Manage administrator permission for the local administrative account for the ESXi host",
    "body": [
      "community.vmware.vmware_host_lockdown:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:disabled|#normal|strict}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_lockdown_exceptions": {
    "prefix": "vmware_host_lockdown_exceptions",
    "description": "Manage Lockdown Mode Exception Users",
    "body": [
      "community.vmware.vmware_host_lockdown_exceptions:",
      "\texception_users: ${1:}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent|set}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_logbundle": {
    "prefix": "vmware_host_logbundle",
    "description": "Fetch logbundle file from ESXi",
    "body": [
      "community.vmware.vmware_host_logbundle:",
      "\tdest: ${1:}",
      "\tesxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#manifests: ${4:['System:Base', 'System:CoreDumps', 'System:EsxImage', 'System:IOFilter', 'System:LoadESX', 'System:Modules', 'System:RDMA', 'System:ResourceGroups', 'System:TPM', 'System:VFlash', 'System:VMTools', 'System:VmiofPlugins', 'System:ntp', 'System:uwstats', 'Fcd:Catalog', 'VirtualMachines:CoreDumps', 'VirtualMachines:VirtualMachineStats', 'VirtualMachines:base', 'VirtualMachines:base', 'VirtualMachines:diskinfo', 'VirtualMachines:logs', 'Storage:FCoE', 'Storage:Multipathing', 'Storage:NAS', 'Storage:VSAN', 'Storage:VSANHealth', 'Storage:VSANIscsiTarget', 'Storage:VSANPerfStats', 'Storage:VSANPerfSvc', 'Storage:VSANTraces', 'Storage:VVOL', 'Storage:base', 'Storage:iodm', 'Storage:iscsi', 'FeatureStateSwitch:FeatureStateSwitch', 'Userworld:HostAgent', 'Userworld:ProcessInformation', 'Configuration:System', 'Logs:System', 'hostProfiles:SystemImageCacheHostProfile', 'hostProfiles:hostProfiles', 'FileSystem:VMFSDiskDump', 'FileSystem:base', 'ActiveDirectory:base', 'CIM:base', 'Hardware:base', 'Hardware:usb', 'Installer:base', 'Network:base', 'Network:dvs', 'Network:lacp', 'Network:nscd', 'Network:tcpip', 'IntegrityChecks:md5sums']}",
      "\t#password: ${5:}",
      "\t#performance_data: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_logbundle_info": {
    "prefix": "vmware_host_logbundle_info",
    "description": "Gathers manifest info for logbundle",
    "body": [
      "community.vmware.vmware_host_logbundle_info:",
      "\tesxi_hostname: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_host_ntp": {
    "prefix": "vmware_host_ntp",
    "description": "Manage NTP server configuration of an ESXi host",
    "body": [
      "community.vmware.vmware_host_ntp:",
      "\tntp_servers: ${1:}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#verbose: ${12:false}"
    ]
  },
  "vmware_host_ntp_info": {
    "prefix": "vmware_host_ntp_info",
    "description": "Gathers info about NTP configuration on an ESXi host",
    "body": [
      "community.vmware.vmware_host_ntp_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_package_info": {
    "prefix": "vmware_host_package_info",
    "description": "Gathers info about available packages on an ESXi host",
    "body": [
      "community.vmware.vmware_host_package_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_passthrough": {
    "prefix": "vmware_host_passthrough",
    "description": "Manage PCI device passthrough settings on host",
    "body": [
      "community.vmware.vmware_host_passthrough:",
      "\tdevices: ${1:}",
      "\t#cluster: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_host_powermgmt_policy": {
    "prefix": "vmware_host_powermgmt_policy",
    "description": "Manages the Power Management Policy of an ESXI host system",
    "body": [
      "community.vmware.vmware_host_powermgmt_policy:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#policy: ${5:high-performance|#balanced|low-power|custom}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_host_powerstate": {
    "prefix": "vmware_host_powerstate",
    "description": "Manages power states of host systems in vCenter",
    "body": [
      "community.vmware.vmware_host_powerstate:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#force: ${3:false}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:power-down-to-standby|power-up-from-standby|#shutdown-host|reboot-host}",
      "\t#timeout: ${10:600}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_scanhba": {
    "prefix": "vmware_host_scanhba",
    "description": "Rescan host HBA's and optionally refresh the storage system",
    "body": [
      "community.vmware.vmware_host_scanhba:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#refresh_storage: ${8:false}",
      "\t#rescan_hba: ${9:true}",
      "\t#rescan_vmfs: ${10:false}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_scsidisk_info": {
    "prefix": "vmware_host_scsidisk_info",
    "description": "Gather information about SCSI disk attached to the given ESXi",
    "body": [
      "community.vmware.vmware_host_scsidisk_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_service_info": {
    "prefix": "vmware_host_service_info",
    "description": "Gathers info about an ESXi host's services",
    "body": [
      "community.vmware.vmware_host_service_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_service_manager": {
    "prefix": "vmware_host_service_manager",
    "description": "Manage services on a given ESXi host",
    "body": [
      "community.vmware.vmware_host_service_manager:",
      "\tservice_name: ${1:}",
      "\t#cluster_name: ${2:}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#service_policy: ${9:automatic|off|on}",
      "\t#state: ${10:absent|present|restart|#start|stop|unchanged}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_snmp": {
    "prefix": "vmware_host_snmp",
    "description": "Configures SNMP on an ESXi host system",
    "body": [
      "community.vmware.vmware_host_snmp:",
      "\t#cluster_name: ${1:}",
      "\t#community: ${2:[]}",
      "\t#esxi_hostname: ${3:}",
      "\t#hostname: ${4:}",
      "\t#hw_source: ${5:#indications|sensors}",
      "\t#log_level: ${6:debug|#info|warning|error}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#send_trap: ${11:false}",
      "\t#snmp_port: ${12:161}",
      "\t#state: ${13:#disabled|enabled|reset}",
      "\t#sys_contact: ${14:}",
      "\t#sys_location: ${15:}",
      "\t#trap_filter: ${16:}",
      "\t#trap_targets: ${17:[]}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:true}"
    ]
  },
  "vmware_host_sriov": {
    "prefix": "vmware_host_sriov",
    "description": "Manage SR-IOV settings on host",
    "body": [
      "community.vmware.vmware_host_sriov:",
      "\tnum_virt_func: ${1:}",
      "\tvmnic: ${2:}",
      "\t#cluster_name: ${3:}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#sriov_on: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_host_ssl_info": {
    "prefix": "vmware_host_ssl_info",
    "description": "Gather info of ESXi host system about SSL",
    "body": [
      "community.vmware.vmware_host_ssl_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_tcpip_stacks": {
    "prefix": "vmware_host_tcpip_stacks",
    "description": "Manage the TCP/IP Stacks configuration of ESXi host",
    "body": [
      "community.vmware.vmware_host_tcpip_stacks:",
      "\tesxi_hostname: ${1:}",
      "\t#default: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#provisioning: ${6:}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#vmotion: ${11:}",
      "\t#vxlan: ${12:}"
    ]
  },
  "vmware_host_user_manager": {
    "prefix": "vmware_host_user_manager",
    "description": "Manage users of ESXi",
    "body": [
      "community.vmware.vmware_host_user_manager:",
      "\tesxi_hostname: ${1:}",
      "\tuser_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#override_user_password: ${4:false}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#user_description: ${10:}",
      "\t#user_password: ${11:}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_host_vmhba_info": {
    "prefix": "vmware_host_vmhba_info",
    "description": "Gathers info about vmhbas available on the given ESXi host",
    "body": [
      "community.vmware.vmware_host_vmhba_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_host_vmnic_info": {
    "prefix": "vmware_host_vmnic_info",
    "description": "Gathers info about vmnics available on the given ESXi host",
    "body": [
      "community.vmware.vmware_host_vmnic_info:",
      "\t#capabilities: ${1:false}",
      "\t#cluster_name: ${2:}",
      "\t#directpath_io: ${3:false}",
      "\t#esxi_hostname: ${4:}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#sriov: ${10:false}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_local_role_info": {
    "prefix": "vmware_local_role_info",
    "description": "Gather info about local roles on an ESXi host or vCenter",
    "body": [
      "community.vmware.vmware_local_role_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_local_role_manager": {
    "prefix": "vmware_local_role_manager",
    "description": "Manage local roles on an ESXi host or vCenter",
    "body": [
      "community.vmware.vmware_local_role_manager:",
      "\tlocal_role_name: ${1:}",
      "\t#action: ${2:add|remove|#set}",
      "\t#force_remove: ${3:false}",
      "\t#hostname: ${4:}",
      "\t#local_privilege_ids: ${5:[]}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_local_user_info": {
    "prefix": "vmware_local_user_info",
    "description": "Gather info about users on the given ESXi host",
    "body": [
      "community.vmware.vmware_local_user_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_local_user_manager": {
    "prefix": "vmware_local_user_manager",
    "description": "Manage local users on an ESXi host",
    "body": [
      "community.vmware.vmware_local_user_manager:",
      "\tlocal_user_name: ${1:}",
      "\t#hostname: ${2:}",
      "\t#local_user_description: ${3:}",
      "\t#local_user_password: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_maintenancemode": {
    "prefix": "vmware_maintenancemode",
    "description": "Place a host into maintenance mode",
    "body": [
      "community.vmware.vmware_maintenancemode:",
      "\tesxi_hostname: ${1:}",
      "\t#evacuate: ${2:false}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:0}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}",
      "\t#vsan: ${12:ensureObjectAccessibility|evacuateAllData|noAction}"
    ]
  },
  "vmware_migrate_vmk": {
    "prefix": "vmware_migrate_vmk",
    "description": "Migrate a VMK interface from VSS to VDS",
    "body": [
      "community.vmware.vmware_migrate_vmk:",
      "\tcurrent_portgroup_name: ${1:}",
      "\tcurrent_switch_name: ${2:}",
      "\tdevice: ${3:}",
      "\tesxi_hostname: ${4:}",
      "\tmigrate_portgroup_name: ${5:}",
      "\tmigrate_switch_name: ${6:}",
      "\t#hostname: ${7:}",
      "\t#migrate_vlan_id: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_object_custom_attributes_info": {
    "prefix": "vmware_object_custom_attributes_info",
    "description": "Gather custom attributes of an object",
    "body": [
      "community.vmware.vmware_object_custom_attributes_info:",
      "\tobject_type: ${1:Datacenter|Cluster|HostSystem|ResourcePool|Folder|VirtualMachine|DistributedVirtualSwitch|DistributedVirtualPortgroup|Datastore}",
      "\t#hostname: ${2:}",
      "\t#moid: ${3:}",
      "\t#object_name: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_object_rename": {
    "prefix": "vmware_object_rename",
    "description": "Renames VMware objects",
    "body": [
      "community.vmware.vmware_object_rename:",
      "\tnew_name: ${1:}",
      "\tobject_type: ${2:ClusterComputeResource|Cluster|Datacenter|Datastore|Folder|Network|ResourcePool|VM|VirtualMachine}",
      "\t#hostname: ${3:}",
      "\t#object_moid: ${4:}",
      "\t#object_name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#protocol: ${8:http|#https}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vmware_object_role_permission": {
    "prefix": "vmware_object_role_permission",
    "description": "Manage local roles on an ESXi host or vCenter",
    "body": [
      "community.vmware.vmware_object_role_permission:",
      "\tobject_name: ${1:}",
      "\trole: ${2:}",
      "\t#group: ${3:}",
      "\t#hostname: ${4:}",
      "\t#object_type: ${5:#Folder|VirtualMachine|Datacenter|ResourcePool|Datastore|Network|HostSystem|ComputeResource|ClusterComputeResource|DistributedVirtualSwitch|DistributedVirtualPortgroup|StoragePod}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#principal: ${8:}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#recursive: ${11:true}",
      "\t#state: ${12:#present|absent}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_object_role_permission_info": {
    "prefix": "vmware_object_role_permission_info",
    "description": "Gather information about object's permissions",
    "body": [
      "community.vmware.vmware_object_role_permission_info:",
      "\t#hostname: ${1:}",
      "\t#moid: ${2:}",
      "\t#object_name: ${3:}",
      "\t#object_type: ${4:#Folder|VirtualMachine|Datacenter|ResourcePool|Datastore|Network|HostSystem|ComputeResource|ClusterComputeResource|DistributedVirtualSwitch|DistributedVirtualPortgroup|StoragePod}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#principal: ${7:}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_portgroup": {
    "prefix": "vmware_portgroup",
    "description": "Create a VMware portgroup",
    "body": [
      "community.vmware.vmware_portgroup:",
      "\tportgroup: ${1:}",
      "\tswitch: ${2:}",
      "\t#cluster_name: ${3:}",
      "\t#hostname: ${4:}",
      "\t#hosts: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#security: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#teaming: ${12:}",
      "\t#traffic_shaping: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#vlan_id: ${16:0}"
    ]
  },
  "vmware_portgroup_info": {
    "prefix": "vmware_portgroup_info",
    "description": "Gathers info about an ESXi host's Port Group configuration",
    "body": [
      "community.vmware.vmware_portgroup_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#policies: ${5:false}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_recommended_datastore": {
    "prefix": "vmware_recommended_datastore",
    "description": "Returns the recommended datastore from a SDRS-enabled datastore cluster",
    "body": [
      "community.vmware.vmware_recommended_datastore:",
      "\tdatacenter: ${1:}",
      "\tdatastore_cluster: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_resource_pool": {
    "prefix": "vmware_resource_pool",
    "description": "Add/remove resource pools to/from vCenter",
    "body": [
      "community.vmware.vmware_resource_pool:",
      "\tdatacenter: ${1:}",
      "\tresource_pool: ${2:}",
      "\t#cluster: ${3:}",
      "\t#cpu_allocation_shares: ${4:4000}",
      "\t#cpu_expandable_reservations: ${5:true}",
      "\t#cpu_limit: ${6:-1}",
      "\t#cpu_reservation: ${7:0}",
      "\t#cpu_shares: ${8:high|custom|low|#normal}",
      "\t#esxi_hostname: ${9:}",
      "\t#hostname: ${10:}",
      "\t#mem_allocation_shares: ${11:163840}",
      "\t#mem_expandable_reservations: ${12:true}",
      "\t#mem_limit: ${13:-1}",
      "\t#mem_reservation: ${14:0}",
      "\t#mem_shares: ${15:high|custom|low|#normal}",
      "\t#parent_resource_pool: ${16:}",
      "\t#password: ${17:}",
      "\t#port: ${18:443}",
      "\t#proxy_host: ${19:}",
      "\t#proxy_port: ${20:}",
      "\t#state: ${21:#present|absent}",
      "\t#username: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "vmware_resource_pool_info": {
    "prefix": "vmware_resource_pool_info",
    "description": "Gathers info about resource pool information",
    "body": [
      "community.vmware.vmware_resource_pool_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_tag": {
    "prefix": "vmware_tag",
    "description": "Manage VMware tags",
    "body": [
      "community.vmware.vmware_tag:",
      "\ttag_name: ${1:}",
      "\t#category_id: ${2:}",
      "\t#category_name: ${3:}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#protocol: ${7:http|#https}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#tag_description: ${11:\"\"}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_tag_info": {
    "prefix": "vmware_tag_info",
    "description": "Manage VMware tag info",
    "body": [
      "community.vmware.vmware_tag_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#protocol: ${4:http|#https}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_tag_manager": {
    "prefix": "vmware_tag_manager",
    "description": "Manage association of VMware tags with VMware objects",
    "body": [
      "community.vmware.vmware_tag_manager:",
      "\tobject_type: ${1:VirtualMachine|Datacenter|ClusterComputeResource|HostSystem|DistributedVirtualSwitch|DistributedVirtualPortgroup|Datastore|DatastoreCluster|ResourcePool|Folder}",
      "\ttag_names: ${2:}",
      "\t#hostname: ${3:}",
      "\t#moid: ${4:}",
      "\t#object_name: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#protocol: ${8:http|#https}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#state: ${11:present|absent|#add|remove|set}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_target_canonical_info": {
    "prefix": "vmware_target_canonical_info",
    "description": "Return canonical (NAA) from an ESXi host system",
    "body": [
      "community.vmware.vmware_target_canonical_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#target_id: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_vasa": {
    "prefix": "vmware_vasa",
    "description": "Manage VMware Virtual Volumes storage provider",
    "body": [
      "community.vmware.vmware_vasa:",
      "\tvasa_name: ${1:}",
      "\tvasa_url: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#vasa_certificate: ${11:}",
      "\t#vasa_password: ${12:}",
      "\t#vasa_username: ${13:}"
    ]
  },
  "vmware_vasa_info": {
    "prefix": "vmware_vasa_info",
    "description": "Gather information about vSphere VASA providers.",
    "body": [
      "community.vmware.vmware_vasa_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_vc_infraprofile_info": {
    "prefix": "vmware_vc_infraprofile_info",
    "description": "List and Export VMware vCenter infra profile configs.",
    "body": [
      "community.vmware.vmware_vc_infraprofile_info:",
      "\t#api: ${1:export|import|list|validate}",
      "\t#config_path: ${2:}",
      "\t#decryption_key: ${3:}",
      "\t#description: ${4:}",
      "\t#encryption_key: ${5:}",
      "\t#hostname: ${6:}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#profiles: ${9:}",
      "\t#protocol: ${10:http|#https}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "vmware_vcenter_settings": {
    "prefix": "vmware_vcenter_settings",
    "description": "Configures general settings on a vCenter server",
    "body": [
      "community.vmware.vmware_vcenter_settings:",
      "\t#advanced_settings: ${1:{\\}}",
      "\t#database: ${2:{'max_connections': 50, 'task_cleanup': True, 'task_retention': 30, 'event_cleanup': True, 'event_retention': 30\\}}",
      "\t#hostname: ${3:}",
      "\t#logging_options: ${4:none|error|warning|#info|verbose|trivia}",
      "\t#mail: ${5:{'server': '', 'sender': ''\\}}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#runtime_settings: ${10:}",
      "\t#snmp_receivers: ${11:{'snmp_receiver_1_url': 'localhost', 'snmp_receiver_1_enabled': True, 'snmp_receiver_1_port': 162, 'snmp_receiver_1_community': 'public', 'snmp_receiver_2_url': '', 'snmp_receiver_2_enabled': False, 'snmp_receiver_2_port': 162, 'snmp_receiver_2_community': '', 'snmp_receiver_3_url': '', 'snmp_receiver_3_enabled': False, 'snmp_receiver_3_port': 162, 'snmp_receiver_3_community': '', 'snmp_receiver_4_url': '', 'snmp_receiver_4_enabled': False, 'snmp_receiver_4_port': 162, 'snmp_receiver_4_community': ''\\}}",
      "\t#timeout_settings: ${12:{'normal_operations': 30, 'long_operations': 120\\}}",
      "\t#user_directory: ${13:{'timeout': 60, 'query_limit': True, 'query_limit_size': 5000, 'validation': True, 'validation_period': 1440\\}}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_vcenter_settings_info": {
    "prefix": "vmware_vcenter_settings_info",
    "description": "Gather info vCenter settings",
    "body": [
      "community.vmware.vmware_vcenter_settings_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#properties: ${4:}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#schema: ${7:#summary|vsphere}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_vcenter_statistics": {
    "prefix": "vmware_vcenter_statistics",
    "description": "Configures statistics on a vCenter server",
    "body": [
      "community.vmware.vmware_vcenter_statistics:",
      "\t#hostname: ${1:}",
      "\t#interval_past_day: ${2:}",
      "\t#interval_past_month: ${3:}",
      "\t#interval_past_week: ${4:}",
      "\t#interval_past_year: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#username: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "vmware_vm_config_option": {
    "prefix": "vmware_vm_config_option",
    "description": "Return supported guest ID list and VM recommended config option for specific guest OS",
    "body": [
      "community.vmware.vmware_vm_config_option:",
      "\t#cluster_name: ${1:}",
      "\t#datacenter: ${2:ha-datacenter}",
      "\t#esxi_hostname: ${3:}",
      "\t#get_config_options: ${4:false}",
      "\t#get_guest_os_ids: ${5:false}",
      "\t#get_hardware_versions: ${6:false}",
      "\t#guest_id: ${7:}",
      "\t#hardware_version: ${8:}",
      "\t#hostname: ${9:}",
      "\t#password: ${10:}",
      "\t#port: ${11:443}",
      "\t#proxy_host: ${12:}",
      "\t#proxy_port: ${13:}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "vmware_vm_host_drs_rule": {
    "prefix": "vmware_vm_host_drs_rule",
    "description": "Creates vm/host group in a given cluster",
    "body": [
      "community.vmware.vmware_vm_host_drs_rule:",
      "\tcluster_name: ${1:}",
      "\tdrs_rule_name: ${2:}",
      "\t#affinity_rule: ${3:true}",
      "\t#datacenter: ${4:}",
      "\t#enabled: ${5:false}",
      "\t#host_group_name: ${6:}",
      "\t#hostname: ${7:}",
      "\t#mandatory: ${8:false}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#vm_group_name: ${16:}"
    ]
  },
  "vmware_vm_info": {
    "prefix": "vmware_vm_info",
    "description": "Return basic info pertaining to a VMware machine guest",
    "body": [
      "community.vmware.vmware_vm_info:",
      "\t#folder: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#show_allocated: ${7:false}",
      "\t#show_attribute: ${8:false}",
      "\t#show_cluster: ${9:true}",
      "\t#show_datacenter: ${10:true}",
      "\t#show_datastore: ${11:true}",
      "\t#show_esxi_hostname: ${12:true}",
      "\t#show_folder: ${13:true}",
      "\t#show_mac_address: ${14:true}",
      "\t#show_net: ${15:true}",
      "\t#show_resource_pool: ${16:true}",
      "\t#show_tag: ${17:false}",
      "\t#username: ${18:}",
      "\t#validate_certs: ${19:true}",
      "\t#vm_name: ${20:}",
      "\t#vm_type: ${21:#all|vm|template}"
    ]
  },
  "vmware_vm_shell": {
    "prefix": "vmware_vm_shell",
    "description": "Run commands in a VMware guest operating system",
    "body": [
      "community.vmware.vmware_vm_shell:",
      "\tvm_id: ${1:}",
      "\tvm_password: ${2:}",
      "\tvm_shell: ${3:}",
      "\tvm_username: ${4:}",
      "\t#cluster: ${5:}",
      "\t#datacenter: ${6:}",
      "\t#folder: ${7:}",
      "\t#hostname: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#timeout: ${13:3600}",
      "\t#username: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#vm_id_type: ${16:uuid|instance_uuid|dns_name|inventory_path|#vm_name}",
      "\t#vm_shell_args: ${17: }",
      "\t#vm_shell_cwd: ${18:}",
      "\t#vm_shell_env: ${19:}",
      "\t#wait_for_process: ${20:false}"
    ]
  },
  "vmware_vm_storage_policy": {
    "prefix": "vmware_vm_storage_policy",
    "description": "Create vSphere storage policies",
    "body": [
      "community.vmware.vmware_vm_storage_policy:",
      "\tname: ${1:}",
      "\t#description: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#tag_affinity: ${9:true}",
      "\t#tag_category: ${10:}",
      "\t#tag_name: ${11:}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "vmware_vm_storage_policy_info": {
    "prefix": "vmware_vm_storage_policy_info",
    "description": "Gather information about vSphere storage profile defined storage policy information.",
    "body": [
      "community.vmware.vmware_vm_storage_policy_info:",
      "\t#hostname: ${1:}",
      "\t#password: ${2:}",
      "\t#port: ${3:443}",
      "\t#proxy_host: ${4:}",
      "\t#proxy_port: ${5:}",
      "\t#username: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "vmware_vm_vm_drs_rule": {
    "prefix": "vmware_vm_vm_drs_rule",
    "description": "Configure VMware DRS Affinity rule for virtual machines in the given cluster",
    "body": [
      "community.vmware.vmware_vm_vm_drs_rule:",
      "\tcluster_name: ${1:}",
      "\tdrs_rule_name: ${2:}",
      "\t#affinity_rule: ${3:true}",
      "\t#enabled: ${4:false}",
      "\t#hostname: ${5:}",
      "\t#mandatory: ${6:false}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#username: ${12:}",
      "\t#validate_certs: ${13:true}",
      "\t#vms: ${14:}"
    ]
  },
  "vmware_vm_vss_dvs_migrate": {
    "prefix": "vmware_vm_vss_dvs_migrate",
    "description": "Migrates a virtual machine from a standard vswitch to distributed",
    "body": [
      "community.vmware.vmware_vm_vss_dvs_migrate:",
      "\tdvportgroup_name: ${1:}",
      "\tvm_name: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_vmkernel": {
    "prefix": "vmware_vmkernel",
    "description": "Manages a VMware VMkernel Adapter of an ESXi host.",
    "body": [
      "community.vmware.vmware_vmkernel:",
      "\tesxi_hostname: ${1:}",
      "\tportgroup_name: ${2:}",
      "\t#device: ${3:}",
      "\t#dvswitch_name: ${4:}",
      "\t#enable_ft: ${5:false}",
      "\t#enable_mgmt: ${6:false}",
      "\t#enable_provisioning: ${7:false}",
      "\t#enable_replication: ${8:false}",
      "\t#enable_replication_nfc: ${9:false}",
      "\t#enable_vmotion: ${10:false}",
      "\t#enable_vsan: ${11:false}",
      "\t#hostname: ${12:}",
      "\t#mtu: ${13:1500}",
      "\t#network: ${14:{'type': 'static', 'tcpip_stack': 'default'\\}}",
      "\t#password: ${15:}",
      "\t#port: ${16:443}",
      "\t#proxy_host: ${17:}",
      "\t#proxy_port: ${18:}",
      "\t#state: ${19:#present|absent}",
      "\t#username: ${20:}",
      "\t#validate_certs: ${21:true}",
      "\t#vswitch_name: ${22:}"
    ]
  },
  "vmware_vmkernel_info": {
    "prefix": "vmware_vmkernel_info",
    "description": "Gathers VMKernel info about an ESXi host",
    "body": [
      "community.vmware.vmware_vmkernel_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#username: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "vmware_vmotion": {
    "prefix": "vmware_vmotion",
    "description": "Move a virtual machine using vMotion, and/or its vmdks using storage vMotion.",
    "body": [
      "community.vmware.vmware_vmotion:",
      "\t#destination_cluster: ${1:}",
      "\t#destination_datacenter: ${2:}",
      "\t#destination_datastore: ${3:}",
      "\t#destination_datastore_cluster: ${4:}",
      "\t#destination_host: ${5:}",
      "\t#destination_resourcepool: ${6:}",
      "\t#hostname: ${7:}",
      "\t#moid: ${8:}",
      "\t#password: ${9:}",
      "\t#port: ${10:443}",
      "\t#proxy_host: ${11:}",
      "\t#proxy_port: ${12:}",
      "\t#timeout: ${13:3600}",
      "\t#use_instance_uuid: ${14:false}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}",
      "\t#vm_name: ${17:}",
      "\t#vm_uuid: ${18:}"
    ]
  },
  "vmware_vsan_cluster": {
    "prefix": "vmware_vsan_cluster",
    "description": "Configure VSAN clustering on an ESXi host",
    "body": [
      "community.vmware.vmware_vsan_cluster:",
      "\t#cluster_uuid: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_vsan_hcl_db": {
    "prefix": "vmware_vsan_hcl_db",
    "description": "Manages the vSAN Hardware Compatibility List (HCL) database",
    "body": [
      "community.vmware.vmware_vsan_hcl_db:",
      "\tsource: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_vsan_health_info": {
    "prefix": "vmware_vsan_health_info",
    "description": "Gather information about a VMware vSAN cluster's health",
    "body": [
      "community.vmware.vmware_vsan_health_info:",
      "\tcluster_name: ${1:}",
      "\t#datacenter: ${2:}",
      "\t#fetch_from_cache: ${3:false}",
      "\t#hostname: ${4:}",
      "\t#password: ${5:}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vmware_vsan_release_catalog": {
    "prefix": "vmware_vsan_release_catalog",
    "description": "Uploads the vSAN Release Catalog",
    "body": [
      "community.vmware.vmware_vsan_release_catalog:",
      "\tsource: ${1:}",
      "\t#hostname: ${2:}",
      "\t#password: ${3:}",
      "\t#port: ${4:443}",
      "\t#proxy_host: ${5:}",
      "\t#proxy_port: ${6:}",
      "\t#username: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "vmware_vspan_session": {
    "prefix": "vmware_vspan_session",
    "description": "Create or remove a Port Mirroring session.",
    "body": [
      "community.vmware.vmware_vspan_session:",
      "\tname: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tswitch: ${3:}",
      "\t#description: ${4:}",
      "\t#destination_port: ${5:}",
      "\t#destination_vm: ${6:}",
      "\t#enabled: ${7:true}",
      "\t#encapsulation_vlan_id: ${8:}",
      "\t#hostname: ${9:}",
      "\t#mirrored_packet_length: ${10:}",
      "\t#normal_traffic_allowed: ${11:}",
      "\t#password: ${12:}",
      "\t#port: ${13:443}",
      "\t#proxy_host: ${14:}",
      "\t#proxy_port: ${15:}",
      "\t#sampling_rate: ${16:}",
      "\t#session_type: ${17:encapsulatedRemoteMirrorSource|remoteMirrorDest|remoteMirrorSource|#dvPortMirror}",
      "\t#source_port_received: ${18:}",
      "\t#source_port_transmitted: ${19:}",
      "\t#source_vm_received: ${20:}",
      "\t#source_vm_transmitted: ${21:}",
      "\t#strip_original_vlan: ${22:}",
      "\t#username: ${23:}",
      "\t#validate_certs: ${24:true}"
    ]
  },
  "vmware_vswitch": {
    "prefix": "vmware_vswitch",
    "description": "Manage a VMware Standard Switch to an ESXi host.",
    "body": [
      "community.vmware.vmware_vswitch:",
      "\tswitch: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#mtu: ${4:1500}",
      "\t#nics: ${5:[]}",
      "\t#number_of_ports: ${6:128}",
      "\t#password: ${7:}",
      "\t#port: ${8:443}",
      "\t#proxy_host: ${9:}",
      "\t#proxy_port: ${10:}",
      "\t#security: ${11:}",
      "\t#state: ${12:absent|#present}",
      "\t#teaming: ${13:}",
      "\t#traffic_shaping: ${14:}",
      "\t#username: ${15:}",
      "\t#validate_certs: ${16:true}"
    ]
  },
  "vmware_vswitch_info": {
    "prefix": "vmware_vswitch_info",
    "description": "Gathers info about an ESXi host's vswitch configurations",
    "body": [
      "community.vmware.vmware_vswitch_info:",
      "\t#cluster_name: ${1:}",
      "\t#esxi_hostname: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#policies: ${5:false}",
      "\t#port: ${6:443}",
      "\t#proxy_host: ${7:}",
      "\t#proxy_port: ${8:}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vsan_health_silent_checks": {
    "prefix": "vsan_health_silent_checks",
    "description": "Silence vSAN health checks",
    "body": [
      "community.vmware.vsan_health_silent_checks:",
      "\tcluster_name: ${1:}",
      "\t#checks: ${2:}",
      "\t#hostname: ${3:}",
      "\t#password: ${4:}",
      "\t#port: ${5:443}",
      "\t#proxy_host: ${6:}",
      "\t#proxy_port: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#username: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "vsphere_copy": {
    "prefix": "vsphere_copy",
    "description": "Copy a file to a VMware datastore",
    "body": [
      "community.vmware.vsphere_copy:",
      "\tdatastore: ${1:}",
      "\tpath: ${2:}",
      "\tsrc: ${3:}",
      "\t#datacenter: ${4:}",
      "\t#hostname: ${5:}",
      "\t#password: ${6:}",
      "\t#port: ${7:443}",
      "\t#proxy_host: ${8:}",
      "\t#proxy_port: ${9:}",
      "\t#timeout: ${10:10}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "vsphere_file": {
    "prefix": "vsphere_file",
    "description": "Manage files on a vCenter datastore",
    "body": [
      "community.vmware.vsphere_file:",
      "\tdatacenter: ${1:}",
      "\tdatastore: ${2:}",
      "\thost: ${3:}",
      "\tpassword: ${4:}",
      "\tpath: ${5:}",
      "\tusername: ${6:}",
      "\t#state: ${7:absent|directory|#file|touch}",
      "\t#timeout: ${8:10}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "psexec": {
    "prefix": "psexec",
    "description": "Runs commands on a remote Windows host based on the PsExec model",
    "body": [
      "community.windows.psexec:",
      "\texecutable: ${1:}",
      "\thostname: ${2:}",
      "\t#arguments: ${3:}",
      "\t#asynchronous: ${4:false}",
      "\t#connection_password: ${5:}",
      "\t#connection_timeout: ${6:60}",
      "\t#connection_username: ${7:}",
      "\t#encrypt: ${8:true}",
      "\t#integrity_level: ${9:limited|#default|elevated}",
      "\t#interactive: ${10:false}",
      "\t#interactive_session: ${11:0}",
      "\t#load_profile: ${12:true}",
      "\t#port: ${13:445}",
      "\t#priority: ${14:above_normal|below_normal|high|idle|#normal|realtime}",
      "\t#process_password: ${15:}",
      "\t#process_timeout: ${16:0}",
      "\t#process_username: ${17:}",
      "\t#show_ui_on_logon_screen: ${18:false}",
      "\t#stdin: ${19:}",
      "\t#working_directory: ${20:\"C:\\Windows\\System32\"}"
    ]
  },
  "win_audit_policy_system": {
    "prefix": "win_audit_policy_system",
    "description": "Used to make changes to the system wide Audit Policy",
    "body": [
      "community.windows.win_audit_policy_system:",
      "\taudit_type: ${1:failure|none|success}",
      "\t#category: ${2:}",
      "\t#subcategory: ${3:}"
    ]
  },
  "win_audit_rule": {
    "prefix": "win_audit_rule",
    "description": "Adds an audit rule to files, folders, or registry keys",
    "body": [
      "community.windows.win_audit_rule:",
      "\taudit_flags: ${1:Failure|Success}",
      "\tpath: ${2:}",
      "\trights: ${3:}",
      "\tuser: ${4:}",
      "\t#inheritance_flags: ${5:ContainerInherit|ObjectInherit}",
      "\t#propagation_flags: ${6:#None|InherityOnly|NoPropagateInherit}",
      "\t#state: ${7:absent|#present}"
    ]
  },
  "win_auto_logon": {
    "prefix": "win_auto_logon",
    "description": "Adds or Sets auto logon registry keys.",
    "body": [
      "community.windows.win_auto_logon:",
      "\t#logon_count: ${1:}",
      "\t#password: ${2:}",
      "\t#state: ${3:absent|#present}",
      "\t#username: ${4:}"
    ]
  },
  "win_certificate_info": {
    "prefix": "win_certificate_info",
    "description": "Get information on certificates from a Windows Certificate Store",
    "body": [
      "community.windows.win_certificate_info:",
      "\t#store_location: ${1:CurrentUser|#LocalMachine}",
      "\t#store_name: ${2:My}",
      "\t#thumbprint: ${3:}"
    ]
  },
  "win_computer_description": {
    "prefix": "win_computer_description",
    "description": "Set windows description, owner and organization",
    "body": [
      "community.windows.win_computer_description:",
      "\t#description: ${1:}",
      "\t#organization: ${2:}",
      "\t#owner: ${3:}"
    ]
  },
  "win_credential": {
    "prefix": "win_credential",
    "description": "Manages Windows Credentials in the Credential Manager",
    "body": [
      "community.windows.win_credential:",
      "\tname: ${1:}",
      "\ttype: ${2:domain_certificate|domain_password|generic_certificate|generic_password}",
      "\t#alias: ${3:}",
      "\t#attributes: ${4:}",
      "\t#comment: ${5:}",
      "\t#persistence: ${6:enterprise|#local}",
      "\t#secret: ${7:}",
      "\t#secret_format: ${8:base64|#text}",
      "\t#state: ${9:absent|#present}",
      "\t#update_secret: ${10:#always|on_create}",
      "\t#username: ${11:}"
    ]
  },
  "win_data_deduplication": {
    "prefix": "win_data_deduplication",
    "description": "Module to enable Data Deduplication on a volume.",
    "body": [
      "community.windows.win_data_deduplication:",
      "\tdrive_letter: ${1:}",
      "\t#settings: ${2:}",
      "\t#state: ${3:#present|absent}"
    ]
  },
  "win_defrag": {
    "prefix": "win_defrag",
    "description": "Consolidate fragmented files on local volumes",
    "body": [
      "community.windows.win_defrag:",
      "\t#exclude_volumes: ${1:}",
      "\t#freespace_consolidation: ${2:false}",
      "\t#include_volumes: ${3:}",
      "\t#parallel: ${4:false}",
      "\t#priority: ${5:#low|normal}"
    ]
  },
  "win_dhcp_lease": {
    "prefix": "win_dhcp_lease",
    "description": "Manage Windows Server DHCP Leases",
    "body": [
      "community.windows.win_dhcp_lease:",
      "\t#description: ${1:}",
      "\t#dns_hostname: ${2:}",
      "\t#dns_regtype: ${3:#aptr|a|noreg}",
      "\t#duration: ${4:}",
      "\t#ip: ${5:}",
      "\t#mac: ${6:}",
      "\t#reservation_name: ${7:}",
      "\t#scope_id: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#type: ${10:#reservation|lease}"
    ]
  },
  "win_disk_facts": {
    "prefix": "win_disk_facts",
    "description": "Show the attached disks and disk information of the target host",
    "body": [
      "community.windows.win_disk_facts:",
      "\t#filter: ${1:['#physical_disk', '#virtual_disk', '#win32_disk_drive', '#partitions', '#volumes']}"
    ]
  },
  "win_disk_image": {
    "prefix": "win_disk_image",
    "description": "Manage ISO/VHD/VHDX mounts on Windows hosts",
    "body": [
      "community.windows.win_disk_image:",
      "\timage_path: ${1:}",
      "\t#state: ${2:absent|#present}"
    ]
  },
  "win_dns_record": {
    "prefix": "win_dns_record",
    "description": "Manage Windows Server DNS records",
    "body": [
      "community.windows.win_dns_record:",
      "\tname: ${1:}",
      "\ttype: ${2:A|AAAA|CNAME|DHCID|NS|PTR|SRV|TXT}",
      "\tzone: ${3:}",
      "\t#aging: ${4:false}",
      "\t#computer_name: ${5:}",
      "\t#port: ${6:}",
      "\t#priority: ${7:}",
      "\t#state: ${8:absent|#present}",
      "\t#ttl: ${9:3600}",
      "\t#value: ${10:[]}",
      "\t#weight: ${11:}",
      "\t#zone_scope: ${12:}"
    ]
  },
  "win_dns_zone": {
    "prefix": "win_dns_zone",
    "description": "Manage Windows Server DNS Zones",
    "body": [
      "community.windows.win_dns_zone:",
      "\tname: ${1:}",
      "\t#dns_servers: ${2:}",
      "\t#dynamic_update: ${3:secure|none|nonsecureandsecure}",
      "\t#forwarder_timeout: ${4:}",
      "\t#replication: ${5:forest|domain|legacy|none}",
      "\t#state: ${6:#present|absent}",
      "\t#type: ${7:primary|secondary|stub|forwarder}"
    ]
  },
  "win_dotnet_ngen": {
    "prefix": "win_dotnet_ngen",
    "description": "Runs ngen to recompile DLLs after .NET  updates",
    "body": "community.windows.win_dotnet_ngen:"
  },
  "win_eventlog": {
    "prefix": "win_eventlog",
    "description": "Manage Windows event logs",
    "body": [
      "community.windows.win_eventlog:",
      "\tname: ${1:}",
      "\t#category_file: ${2:}",
      "\t#maximum_size: ${3:}",
      "\t#message_file: ${4:}",
      "\t#overflow_action: ${5:DoNotOverwrite|OverwriteAsNeeded|OverwriteOlder}",
      "\t#parameter_file: ${6:}",
      "\t#retention_days: ${7:}",
      "\t#sources: ${8:}",
      "\t#state: ${9:absent|clear|#present}"
    ]
  },
  "win_eventlog_entry": {
    "prefix": "win_eventlog_entry",
    "description": "Write entries to Windows event logs",
    "body": [
      "community.windows.win_eventlog_entry:",
      "\tevent_id: ${1:}",
      "\tlog: ${2:}",
      "\tmessage: ${3:}",
      "\tsource: ${4:}",
      "\t#category: ${5:}",
      "\t#entry_type: ${6:Error|FailureAudit|Information|SuccessAudit|Warning}",
      "\t#raw_data: ${7:}"
    ]
  },
  "win_feature_info": {
    "prefix": "win_feature_info",
    "description": "Gather information about Windows features",
    "body": [
      "community.windows.win_feature_info:",
      "\t#name: ${1:*}"
    ]
  },
  "win_file_compression": {
    "prefix": "win_file_compression",
    "description": "Alters the compression of files and directories on NTFS partitions.",
    "body": [
      "community.windows.win_file_compression:",
      "\tpath: ${1:}",
      "\t#force: ${2:true}",
      "\t#recurse: ${3:false}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_file_version": {
    "prefix": "win_file_version",
    "description": "Get DLL or EXE file build version",
    "body": [
      "community.windows.win_file_version:",
      "\tpath: ${1:}"
    ]
  },
  "win_firewall": {
    "prefix": "win_firewall",
    "description": "Enable or disable the Windows Firewall",
    "body": [
      "community.windows.win_firewall:",
      "\t#inbound_action: ${1:allow|block|not_configured}",
      "\t#outbound_action: ${2:allow|block|not_configured}",
      "\t#profiles: ${3:['#Domain', '#Private', '#Public']}",
      "\t#state: ${4:disabled|enabled}"
    ]
  },
  "win_firewall_rule": {
    "prefix": "win_firewall_rule",
    "description": "Windows firewall automation",
    "body": [
      "community.windows.win_firewall_rule:",
      "\t#action: ${1:allow|block}",
      "\t#description: ${2:}",
      "\t#direction: ${3:in|out}",
      "\t#enabled: ${4:}",
      "\t#group: ${5:}",
      "\t#icmp_type_code: ${6:}",
      "\t#localip: ${7:}",
      "\t#localport: ${8:}",
      "\t#name: ${9:}",
      "\t#profiles: ${10:}",
      "\t#program: ${11:}",
      "\t#protocol: ${12:}",
      "\t#remoteip: ${13:}",
      "\t#remoteport: ${14:}",
      "\t#service: ${15:}",
      "\t#state: ${16:absent|#present}"
    ]
  },
  "win_format": {
    "prefix": "win_format",
    "description": "Formats an existing volume or a new volume on an existing partition on Windows",
    "body": [
      "community.windows.win_format:",
      "\t#allocation_unit_size: ${1:}",
      "\t#compress: ${2:}",
      "\t#drive_letter: ${3:}",
      "\t#file_system: ${4:ntfs|refs|exfat|fat32|fat}",
      "\t#force: ${5:false}",
      "\t#full: ${6:false}",
      "\t#integrity_streams: ${7:}",
      "\t#label: ${8:}",
      "\t#large_frs: ${9:}",
      "\t#new_label: ${10:}",
      "\t#path: ${11:}"
    ]
  },
  "win_hosts": {
    "prefix": "win_hosts",
    "description": "Manages hosts file entries on Windows.",
    "body": [
      "community.windows.win_hosts:",
      "\t#action: ${1:add|remove|#set}",
      "\t#aliases: ${2:}",
      "\t#canonical_name: ${3:}",
      "\t#ip_address: ${4:}",
      "\t#state: ${5:absent|#present}"
    ]
  },
  "win_hotfix": {
    "prefix": "win_hotfix",
    "description": "Install and uninstalls Windows hotfixes",
    "body": [
      "community.windows.win_hotfix:",
      "\t#hotfix_identifier: ${1:}",
      "\t#hotfix_kb: ${2:}",
      "\t#source: ${3:}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_http_proxy": {
    "prefix": "win_http_proxy",
    "description": "Manages proxy settings for WinHTTP",
    "body": [
      "community.windows.win_http_proxy:",
      "\t#bypass: ${1:}",
      "\t#proxy: ${2:}",
      "\t#source: ${3:ie}"
    ]
  },
  "win_iis_virtualdirectory": {
    "prefix": "win_iis_virtualdirectory",
    "description": "Configures a virtual directory in IIS",
    "body": [
      "community.windows.win_iis_virtualdirectory:",
      "\tname: ${1:}",
      "\tsite: ${2:}",
      "\t#application: ${3:}",
      "\t#connect_as: ${4:pass_through|specific_user}",
      "\t#password: ${5:}",
      "\t#physical_path: ${6:}",
      "\t#state: ${7:absent|#present}",
      "\t#username: ${8:}"
    ]
  },
  "win_iis_webapplication": {
    "prefix": "win_iis_webapplication",
    "description": "Configures IIS web applications",
    "body": [
      "community.windows.win_iis_webapplication:",
      "\tname: ${1:}",
      "\tsite: ${2:}",
      "\t#application_pool: ${3:}",
      "\t#connect_as: ${4:pass_through|specific_user}",
      "\t#password: ${5:}",
      "\t#physical_path: ${6:}",
      "\t#state: ${7:absent|#present}",
      "\t#username: ${8:}"
    ]
  },
  "win_iis_webapppool": {
    "prefix": "win_iis_webapppool",
    "description": "Configure IIS Web Application Pools",
    "body": [
      "community.windows.win_iis_webapppool:",
      "\tname: ${1:}",
      "\t#attributes: ${2:}",
      "\t#state: ${3:absent|#present|restarted|started|stopped}"
    ]
  },
  "win_iis_webbinding": {
    "prefix": "win_iis_webbinding",
    "description": "Configures a IIS Web site binding",
    "body": [
      "community.windows.win_iis_webbinding:",
      "\tname: ${1:}",
      "\t#certificate_hash: ${2:}",
      "\t#certificate_store_name: ${3:my}",
      "\t#host_header: ${4:}",
      "\t#ip: ${5:*}",
      "\t#port: ${6:80}",
      "\t#protocol: ${7:http}",
      "\t#ssl_flags: ${8:}",
      "\t#state: ${9:absent|#present}"
    ]
  },
  "win_iis_website": {
    "prefix": "win_iis_website",
    "description": "Configures a IIS Web site",
    "body": [
      "community.windows.win_iis_website:",
      "\tname: ${1:}",
      "\t#application_pool: ${2:}",
      "\t#hostname: ${3:}",
      "\t#ip: ${4:}",
      "\t#parameters: ${5:}",
      "\t#physical_path: ${6:}",
      "\t#port: ${7:}",
      "\t#site_id: ${8:}",
      "\t#state: ${9:absent|started|stopped|restarted}"
    ]
  },
  "win_inet_proxy": {
    "prefix": "win_inet_proxy",
    "description": "Manages proxy settings for WinINet and Internet Explorer",
    "body": [
      "community.windows.win_inet_proxy:",
      "\t#auto_config_url: ${1:}",
      "\t#auto_detect: ${2:true}",
      "\t#bypass: ${3:}",
      "\t#connection: ${4:}",
      "\t#proxy: ${5:}"
    ]
  },
  "win_initialize_disk": {
    "prefix": "win_initialize_disk",
    "description": "Initializes disks on Windows Server",
    "body": [
      "community.windows.win_initialize_disk:",
      "\t#disk_number: ${1:}",
      "\t#force: ${2:false}",
      "\t#online: ${3:true}",
      "\t#path: ${4:}",
      "\t#style: ${5:#gpt|mbr}",
      "\t#uniqueid: ${6:}"
    ]
  },
  "win_lineinfile": {
    "prefix": "win_lineinfile",
    "description": "Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression",
    "body": [
      "community.windows.win_lineinfile:",
      "\tpath: ${1:}",
      "\t#backrefs: ${2:false}",
      "\t#backup: ${3:false}",
      "\t#create: ${4:false}",
      "\t#encoding: ${5:auto}",
      "\t#insertafter: ${6:#EOF|*regex*}",
      "\t#insertbefore: ${7:BOF|*regex*}",
      "\t#line: ${8:}",
      "\t#newline: ${9:unix|#windows}",
      "\t#regex: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#validate: ${12:}"
    ]
  },
  "win_listen_ports_facts": {
    "prefix": "win_listen_ports_facts",
    "description": "Recopilates the facts of the listening ports of the machine",
    "body": [
      "community.windows.win_listen_ports_facts:",
      "\t#date_format: ${1:%c}",
      "\t#tcp_filter: ${2:['Listen']}"
    ]
  },
  "win_mapped_drive": {
    "prefix": "win_mapped_drive",
    "description": "Map network drives for users",
    "body": [
      "community.windows.win_mapped_drive:",
      "\tletter: ${1:}",
      "\t#password: ${2:}",
      "\t#path: ${3:}",
      "\t#state: ${4:absent|#present}",
      "\t#username: ${5:}"
    ]
  },
  "win_msg": {
    "prefix": "win_msg",
    "description": "Sends a message to logged in users on Windows hosts",
    "body": [
      "community.windows.win_msg:",
      "\t#display_seconds: ${1:10}",
      "\t#msg: ${2:Hello world!}",
      "\t#to: ${3:*}",
      "\t#wait: ${4:false}"
    ]
  },
  "win_net_adapter_feature": {
    "prefix": "win_net_adapter_feature",
    "description": "Enable or disable certain network adapters.",
    "body": [
      "community.windows.win_net_adapter_feature:",
      "\tcomponent_id: ${1:}",
      "\tinterface: ${2:}",
      "\t#state: ${3:#enabled|disabled}"
    ]
  },
  "win_netbios": {
    "prefix": "win_netbios",
    "description": "Manage NetBIOS over TCP/IP settings on Windows.",
    "body": [
      "community.windows.win_netbios:",
      "\tstate: ${1:enabled|disabled|default}",
      "\t#adapter_names: ${2:}"
    ]
  },
  "win_nssm": {
    "prefix": "win_nssm",
    "description": "Install a service using NSSM",
    "body": [
      "community.windows.win_nssm:",
      "\tname: ${1:}",
      "\t#app_environment: ${2:}",
      "\t#app_rotate_bytes: ${3:104858}",
      "\t#app_rotate_online: ${4:#0|1}",
      "\t#app_stop_method_console: ${5:}",
      "\t#app_stop_method_skip: ${6:1|2|3|4|5|6|7|8|9|10|11|12|13|14|15}",
      "\t#application: ${7:}",
      "\t#arguments: ${8:}",
      "\t#dependencies: ${9:}",
      "\t#description: ${10:}",
      "\t#display_name: ${11:}",
      "\t#executable: ${12:nssm.exe}",
      "\t#password: ${13:}",
      "\t#start_mode: ${14:#auto|delayed|disabled|manual}",
      "\t#state: ${15:absent|#present|started|stopped|restarted}",
      "\t#stderr_file: ${16:}",
      "\t#stdout_file: ${17:}",
      "\t#username: ${18:}",
      "\t#working_directory: ${19:}"
    ]
  },
  "win_pagefile": {
    "prefix": "win_pagefile",
    "description": "Query or change pagefile configuration",
    "body": [
      "community.windows.win_pagefile:",
      "\t#automatic: ${1:}",
      "\t#drive: ${2:}",
      "\t#initial_size: ${3:}",
      "\t#maximum_size: ${4:}",
      "\t#override: ${5:true}",
      "\t#remove_all: ${6:false}",
      "\t#state: ${7:absent|present|#query}",
      "\t#system_managed: ${8:false}",
      "\t#test_path: ${9:true}"
    ]
  },
  "win_partition": {
    "prefix": "win_partition",
    "description": "Creates, changes and removes partitions on Windows Server",
    "body": [
      "community.windows.win_partition:",
      "\t#active: ${1:}",
      "\t#disk_number: ${2:}",
      "\t#drive_letter: ${3:}",
      "\t#gpt_type: ${4:system_partition|microsoft_reserved|basic_data|microsoft_recovery}",
      "\t#hidden: ${5:}",
      "\t#mbr_type: ${6:fat12|fat16|extended|huge|ifs|fat32}",
      "\t#offline: ${7:}",
      "\t#partition_number: ${8:}",
      "\t#partition_size: ${9:}",
      "\t#read_only: ${10:}",
      "\t#state: ${11:absent|#present}"
    ]
  },
  "win_pester": {
    "prefix": "win_pester",
    "description": "Run Pester tests on Windows hosts",
    "body": [
      "community.windows.win_pester:",
      "\tpath: ${1:}",
      "\t#output_file: ${2:}",
      "\t#output_format: ${3:NunitXML}",
      "\t#tags: ${4:}",
      "\t#test_parameters: ${5:}",
      "\t#version: ${6:}"
    ]
  },
  "win_power_plan": {
    "prefix": "win_power_plan",
    "description": "Changes the power plan of a Windows system",
    "body": [
      "community.windows.win_power_plan:",
      "\t#guid: ${1:}",
      "\t#name: ${2:}"
    ]
  },
  "win_product_facts": {
    "prefix": "win_product_facts",
    "description": "Provides Windows product and license information",
    "body": "community.windows.win_product_facts:"
  },
  "win_psexec": {
    "prefix": "win_psexec",
    "description": "Runs commands (remotely) as another (privileged) user",
    "body": [
      "community.windows.win_psexec:",
      "\tcommand: ${1:}",
      "\t#chdir: ${2:}",
      "\t#elevated: ${3:false}",
      "\t#executable: ${4:psexec.exe}",
      "\t#hostnames: ${5:}",
      "\t#interactive: ${6:false}",
      "\t#limited: ${7:false}",
      "\t#nobanner: ${8:false}",
      "\t#noprofile: ${9:false}",
      "\t#password: ${10:}",
      "\t#priority: ${11:abovenormal|background|belownormal|high|low|realtime}",
      "\t#session: ${12:}",
      "\t#system: ${13:false}",
      "\t#timeout: ${14:}",
      "\t#username: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "win_psmodule": {
    "prefix": "win_psmodule",
    "description": "Adds or removes a Windows PowerShell module",
    "body": [
      "community.windows.win_psmodule:",
      "\tname: ${1:}",
      "\t#accept_license: ${2:false}",
      "\t#allow_clobber: ${3:false}",
      "\t#allow_prerelease: ${4:false}",
      "\t#force: ${5:false}",
      "\t#maximum_version: ${6:}",
      "\t#minimum_version: ${7:}",
      "\t#password: ${8:}",
      "\t#repository: ${9:}",
      "\t#required_version: ${10:}",
      "\t#skip_publisher_check: ${11:false}",
      "\t#state: ${12:absent|latest|#present}",
      "\t#username: ${13:}"
    ]
  },
  "win_psmodule_info": {
    "prefix": "win_psmodule_info",
    "description": "Gather information about PowerShell Modules",
    "body": [
      "community.windows.win_psmodule_info:",
      "\t#name: ${1:*}",
      "\t#repository: ${2:}"
    ]
  },
  "win_psrepository": {
    "prefix": "win_psrepository",
    "description": "Adds, removes or updates a Windows PowerShell repository.",
    "body": [
      "community.windows.win_psrepository:",
      "\tname: ${1:}",
      "\t#force: ${2:false}",
      "\t#installation_policy: ${3:trusted|untrusted}",
      "\t#password: ${4:}",
      "\t#proxy: ${5:}",
      "\t#publish_location: ${6:}",
      "\t#script_publish_location: ${7:}",
      "\t#script_source_location: ${8:}",
      "\t#source_location: ${9:}",
      "\t#state: ${10:absent|#present}",
      "\t#username: ${11:}"
    ]
  },
  "win_psrepository_copy": {
    "prefix": "win_psrepository_copy",
    "description": "Copies registered PSRepositories to other user profiles",
    "body": [
      "community.windows.win_psrepository_copy:",
      "\t#exclude: ${1:}",
      "\t#exclude_profiles: ${2:['systemprofile', 'LocalService', 'NetworkService']}",
      "\t#name: ${3:['*']}",
      "\t#profiles: ${4:['*']}",
      "\t#source: ${5:\"%LOCALAPPDATA%\\Microsoft\\Windows\\PowerShell\\PowerShellGet\\PSRepositories.xml\"}"
    ]
  },
  "win_psrepository_info": {
    "prefix": "win_psrepository_info",
    "description": "Gather information about PSRepositories",
    "body": [
      "community.windows.win_psrepository_info:",
      "\t#name: ${1:*}"
    ]
  },
  "win_psscript": {
    "prefix": "win_psscript",
    "description": "Install and manage PowerShell scripts from a PSRepository",
    "body": [
      "community.windows.win_psscript:",
      "\tname: ${1:}",
      "\t#allow_prerelease: ${2:false}",
      "\t#maximum_version: ${3:}",
      "\t#minimum_version: ${4:}",
      "\t#repository: ${5:}",
      "\t#required_version: ${6:}",
      "\t#scope: ${7:current_user|#all_users}",
      "\t#source_password: ${8:}",
      "\t#source_username: ${9:}",
      "\t#state: ${10:#present|absent|latest}"
    ]
  },
  "win_psscript_info": {
    "prefix": "win_psscript_info",
    "description": "Gather information about installed PowerShell Scripts",
    "body": [
      "community.windows.win_psscript_info:",
      "\t#name: ${1:*}",
      "\t#repository: ${2:}"
    ]
  },
  "win_pssession_configuration": {
    "prefix": "win_pssession_configuration",
    "description": "Manage PSSession Configurations",
    "body": [
      "community.windows.win_pssession_configuration:",
      "\tname: ${1:}",
      "\t#access_mode: ${2:disabled|local|remote}",
      "\t#alias_definitions: ${3:}",
      "\t#assemblies_to_load: ${4:}",
      "\t#async_poll: ${5:1}",
      "\t#async_timeout: ${6:300}",
      "\t#author: ${7:}",
      "\t#company_name: ${8:}",
      "\t#copyright: ${9:}",
      "\t#description: ${10:}",
      "\t#environment_variables: ${11:}",
      "\t#execution_policy: ${12:default|remote_signed|restricted|undefined|unrestricted}",
      "\t#formats_to_process: ${13:}",
      "\t#function_definitions: ${14:}",
      "\t#group_managed_service_account: ${15:}",
      "\t#guid: ${16:}",
      "\t#language_mode: ${17:no_language|restricted_language|constrained_language|full_language}",
      "\t#lenient_config_fields: ${18:['guid', 'author', 'company_name', 'copyright', 'description']}",
      "\t#maximum_received_data_size_per_command_mb: ${19:}",
      "\t#maximum_received_object_size_mb: ${20:}",
      "\t#modules_to_import: ${21:}",
      "\t#mount_user_drive: ${22:}",
      "\t#powershell_version: ${23:}",
      "\t#processor_architecure: ${24:amd64|x86}",
      "\t#required_groups: ${25:}",
      "\t#role_definitions: ${26:}",
      "\t#run_as_credential_password: ${27:}",
      "\t#run_as_credential_username: ${28:}",
      "\t#run_as_virtual_account: ${29:}",
      "\t#run_as_virtual_account_groups: ${30:}",
      "\t#schema_version: ${31:}",
      "\t#scripts_to_process: ${32:}",
      "\t#security_descriptor_sddl: ${33:}",
      "\t#session_type: ${34:default|empty|restricted_remote_server}",
      "\t#startup_script: ${35:}",
      "\t#state: ${36:#present|absent}",
      "\t#thread_apartment_state: ${37:mta|sta}",
      "\t#thread_options: ${38:default|reuse_thread|use_current_thread|use_new_thread}",
      "\t#transcript_directory: ${39:}",
      "\t#types_to_process: ${40:}",
      "\t#use_shared_process: ${41:}",
      "\t#user_drive_maximum_size: ${42:}",
      "\t#variable_definitions: ${43:}",
      "\t#visible_aliases: ${44:}",
      "\t#visible_cmdlets: ${45:}",
      "\t#visible_external_commands: ${46:}",
      "\t#visible_functions: ${47:}"
    ]
  },
  "win_rabbitmq_plugin": {
    "prefix": "win_rabbitmq_plugin",
    "description": "Manage RabbitMQ plugins",
    "body": [
      "community.windows.win_rabbitmq_plugin:",
      "\tnames: ${1:}",
      "\t#new_only: ${2:false}",
      "\t#prefix: ${3:}",
      "\t#state: ${4:disabled|#enabled}"
    ]
  },
  "win_rds_cap": {
    "prefix": "win_rds_cap",
    "description": "Manage Connection Authorization Policies (CAP) on a Remote Desktop Gateway server",
    "body": [
      "community.windows.win_rds_cap:",
      "\tname: ${1:}",
      "\t#allow_only_sdrts_servers: ${2:}",
      "\t#auth_method: ${3:both|none|password|smartcard}",
      "\t#computer_groups: ${4:}",
      "\t#idle_timeout: ${5:}",
      "\t#order: ${6:}",
      "\t#redirect_clipboard: ${7:}",
      "\t#redirect_drives: ${8:}",
      "\t#redirect_pnp: ${9:}",
      "\t#redirect_printers: ${10:}",
      "\t#redirect_serial: ${11:}",
      "\t#session_timeout: ${12:}",
      "\t#session_timeout_action: ${13:#disconnect|reauth}",
      "\t#state: ${14:absent|enabled|disabled|#present}",
      "\t#user_groups: ${15:}"
    ]
  },
  "win_rds_rap": {
    "prefix": "win_rds_rap",
    "description": "Manage Resource Authorization Policies (RAP) on a Remote Desktop Gateway server",
    "body": [
      "community.windows.win_rds_rap:",
      "\tname: ${1:}",
      "\t#allowed_ports: ${2:}",
      "\t#computer_group: ${3:}",
      "\t#computer_group_type: ${4:rdg_group|ad_network_resource_group|allow_any}",
      "\t#description: ${5:}",
      "\t#state: ${6:absent|disabled|enabled|#present}",
      "\t#user_groups: ${7:}"
    ]
  },
  "win_rds_settings": {
    "prefix": "win_rds_settings",
    "description": "Manage main settings of a Remote Desktop Gateway server",
    "body": [
      "community.windows.win_rds_settings:",
      "\t#certificate_hash: ${1:}",
      "\t#enable_only_messaging_capable_clients: ${2:}",
      "\t#max_connections: ${3:}",
      "\t#ssl_bridging: ${4:https_http|https_https|none}"
    ]
  },
  "win_region": {
    "prefix": "win_region",
    "description": "Set the region and format settings",
    "body": [
      "community.windows.win_region:",
      "\t#copy_settings: ${1:false}",
      "\t#format: ${2:}",
      "\t#location: ${3:}",
      "\t#unicode_language: ${4:}"
    ]
  },
  "win_regmerge": {
    "prefix": "win_regmerge",
    "description": "Merges the contents of a registry file into the Windows registry",
    "body": [
      "community.windows.win_regmerge:",
      "\tpath: ${1:}",
      "\t#compare_key: ${2:}"
    ]
  },
  "win_robocopy": {
    "prefix": "win_robocopy",
    "description": "Synchronizes the contents of two directories using Robocopy",
    "body": [
      "community.windows.win_robocopy:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#flags: ${3:}",
      "\t#purge: ${4:false}",
      "\t#recurse: ${5:false}"
    ]
  },
  "win_route": {
    "prefix": "win_route",
    "description": "Add or remove a static route",
    "body": [
      "community.windows.win_route:",
      "\tdestination: ${1:}",
      "\t#gateway: ${2:}",
      "\t#metric: ${3:1}",
      "\t#state: ${4:absent|#present}"
    ]
  },
  "win_say": {
    "prefix": "win_say",
    "description": "Text to speech module for Windows to speak messages and optionally play sounds",
    "body": [
      "community.windows.win_say:",
      "\t#end_sound_path: ${1:}",
      "\t#msg: ${2:}",
      "\t#msg_file: ${3:}",
      "\t#speech_speed: ${4:0}",
      "\t#start_sound_path: ${5:}",
      "\t#voice: ${6:}"
    ]
  },
  "win_scheduled_task": {
    "prefix": "win_scheduled_task",
    "description": "Manage scheduled tasks",
    "body": [
      "community.windows.win_scheduled_task:",
      "\tname: ${1:}",
      "\t#actions: ${2:}",
      "\t#allow_demand_start: ${3:}",
      "\t#allow_hard_terminate: ${4:}",
      "\t#author: ${5:}",
      "\t#compatibility: ${6:0|1|2|3|4}",
      "\t#date: ${7:}",
      "\t#delete_expired_task_after: ${8:}",
      "\t#description: ${9:}",
      "\t#disallow_start_if_on_batteries: ${10:}",
      "\t#display_name: ${11:}",
      "\t#enabled: ${12:}",
      "\t#execution_time_limit: ${13:}",
      "\t#group: ${14:}",
      "\t#hidden: ${15:}",
      "\t#logon_type: ${16:none|password|s4u|interactive_token|group|service_account|token_or_password}",
      "\t#multiple_instances: ${17:0|1|2|3}",
      "\t#password: ${18:}",
      "\t#path: ${19:\"\\\"}",
      "\t#priority: ${20:}",
      "\t#restart_count: ${21:}",
      "\t#restart_interval: ${22:}",
      "\t#run_level: ${23:limited|highest}",
      "\t#run_only_if_idle: ${24:}",
      "\t#run_only_if_network_available: ${25:}",
      "\t#source: ${26:}",
      "\t#start_when_available: ${27:}",
      "\t#state: ${28:absent|#present}",
      "\t#stop_if_going_on_batteries: ${29:}",
      "\t#triggers: ${30:}",
      "\t#update_password: ${31:true}",
      "\t#username: ${32:}",
      "\t#version: ${33:}",
      "\t#wake_to_run: ${34:}"
    ]
  },
  "win_scheduled_task_stat": {
    "prefix": "win_scheduled_task_stat",
    "description": "Get information about Windows Scheduled Tasks",
    "body": [
      "community.windows.win_scheduled_task_stat:",
      "\t#name: ${1:}",
      "\t#path: ${2:\"\\\"}"
    ]
  },
  "win_scoop": {
    "prefix": "win_scoop",
    "description": "Manage packages using Scoop",
    "body": [
      "community.windows.win_scoop:",
      "\tname: ${1:}",
      "\t#architecture: ${2:32bit|64bit}",
      "\t#global: ${3:false}",
      "\t#independent: ${4:false}",
      "\t#no_cache: ${5:false}",
      "\t#purge: ${6:false}",
      "\t#skip_checksum: ${7:false}",
      "\t#state: ${8:absent|#present}"
    ]
  },
  "win_scoop_bucket": {
    "prefix": "win_scoop_bucket",
    "description": "Manage Scoop buckets",
    "body": [
      "community.windows.win_scoop_bucket:",
      "\tname: ${1:}",
      "\t#repo: ${2:}",
      "\t#state: ${3:absent|#present}"
    ]
  },
  "win_security_policy": {
    "prefix": "win_security_policy",
    "description": "Change local security policy settings",
    "body": [
      "community.windows.win_security_policy:",
      "\tkey: ${1:}",
      "\tsection: ${2:}",
      "\tvalue: ${3:}"
    ]
  },
  "win_shortcut": {
    "prefix": "win_shortcut",
    "description": "Manage shortcuts on Windows",
    "body": [
      "community.windows.win_shortcut:",
      "\tdest: ${1:}",
      "\t#arguments: ${2:}",
      "\t#description: ${3:}",
      "\t#directory: ${4:}",
      "\t#hotkey: ${5:}",
      "\t#icon: ${6:}",
      "\t#run_as_admin: ${7:false}",
      "\t#src: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#windowstyle: ${10:maximized|minimized|normal}"
    ]
  },
  "win_snmp": {
    "prefix": "win_snmp",
    "description": "Configures the Windows SNMP service",
    "body": [
      "community.windows.win_snmp:",
      "\t#action: ${1:add|#set|remove}",
      "\t#community_strings: ${2:}",
      "\t#permitted_managers: ${3:}"
    ]
  },
  "win_timezone": {
    "prefix": "win_timezone",
    "description": "Sets Windows machine timezone",
    "body": [
      "community.windows.win_timezone:",
      "\ttimezone: ${1:}"
    ]
  },
  "win_toast": {
    "prefix": "win_toast",
    "description": "Sends Toast windows notification to logged in users on Windows 10 or later hosts",
    "body": [
      "community.windows.win_toast:",
      "\t#expire: ${1:45}",
      "\t#group: ${2:Powershell}",
      "\t#msg: ${3:Hello, World!}",
      "\t#popup: ${4:true}",
      "\t#tag: ${5:Ansible}",
      "\t#title: ${6:Notification HH:mm}"
    ]
  },
  "win_unzip": {
    "prefix": "win_unzip",
    "description": "Unzips compressed files and archives on the Windows node",
    "body": [
      "community.windows.win_unzip:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}",
      "\t#creates: ${3:}",
      "\t#delete_archive: ${4:false}",
      "\t#password: ${5:}",
      "\t#recurse: ${6:false}"
    ]
  },
  "win_user_profile": {
    "prefix": "win_user_profile",
    "description": "Manages the Windows user profiles.",
    "body": [
      "community.windows.win_user_profile:",
      "\t#name: ${1:}",
      "\t#remove_multiple: ${2:false}",
      "\t#state: ${3:absent|#present}",
      "\t#username: ${4:}"
    ]
  },
  "win_wait_for_process": {
    "prefix": "win_wait_for_process",
    "description": "Waits for a process to exist or not exist before continuing.",
    "body": [
      "community.windows.win_wait_for_process:",
      "\t#owner: ${1:}",
      "\t#pid: ${2:0}",
      "\t#post_wait_delay: ${3:0}",
      "\t#pre_wait_delay: ${4:0}",
      "\t#process_min_count: ${5:1}",
      "\t#process_name_exact: ${6:}",
      "\t#process_name_pattern: ${7:}",
      "\t#sleep: ${8:1}",
      "\t#state: ${9:absent|#present}",
      "\t#timeout: ${10:300}"
    ]
  },
  "win_wakeonlan": {
    "prefix": "win_wakeonlan",
    "description": "Send a magic Wake-on-LAN (WoL) broadcast packet",
    "body": [
      "community.windows.win_wakeonlan:",
      "\tmac: ${1:}",
      "\t#broadcast: ${2:255.255.255.255}",
      "\t#port: ${3:7}"
    ]
  },
  "win_webpicmd": {
    "prefix": "win_webpicmd",
    "description": "Installs packages using Web Platform Installer command-line",
    "body": [
      "community.windows.win_webpicmd:",
      "\tname: ${1:}"
    ]
  },
  "win_xml": {
    "prefix": "win_xml",
    "description": "Manages XML file content on Windows hosts",
    "body": [
      "community.windows.win_xml:",
      "\tpath: ${1:}",
      "\txpath: ${2:}",
      "\t#attribute: ${3:}",
      "\t#backup: ${4:false}",
      "\t#count: ${5:false}",
      "\t#fragment: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#type: ${8:attribute|#element|text}"
    ]
  },
  "win_zip": {
    "prefix": "win_zip",
    "description": "Compress file or directory as zip archive on the Windows node",
    "body": [
      "community.windows.win_zip:",
      "\tdest: ${1:}",
      "\tsrc: ${2:}"
    ]
  },
  "zabbix_action": {
    "prefix": "zabbix_action",
    "description": "Create/Delete/Update Zabbix actions",
    "body": [
      "community.zabbix.zabbix_action:",
      "\tname: ${1:}",
      "\t#acknowledge_operations: ${2:[]}",
      "\t#conditions: ${3:[]}",
      "\t#esc_period: ${4:}",
      "\t#eval_type: ${5:andor|and|or|custom_expression}",
      "\t#event_source: ${6:trigger|discovery|auto_registration|internal}",
      "\t#formula: ${7:}",
      "\t#http_login_password: ${8:}",
      "\t#http_login_user: ${9:}",
      "\t#notify_if_canceled: ${10:true}",
      "\t#operations: ${11:[]}",
      "\t#pause_in_maintenance: ${12:true}",
      "\t#pause_symptoms: ${13:true}",
      "\t#recovery_operations: ${14:[]}",
      "\t#state: ${15:#present|absent}",
      "\t#status: ${16:#enabled|disabled}"
    ]
  },
  "zabbix_api_info": {
    "prefix": "zabbix_api_info",
    "description": "Retrieve Zabbix API info",
    "body": [
      "community.zabbix.zabbix_api_info:",
      "\t#http_login_password: ${1:}",
      "\t#http_login_user: ${2:}"
    ]
  },
  "zabbix_authentication": {
    "prefix": "zabbix_authentication",
    "description": "Update Zabbix authentication",
    "body": [
      "community.zabbix.zabbix_authentication:",
      "\t#authentication_type: ${1:internal|ldap}",
      "\t#disabled_usrgroup: ${2:}",
      "\t#http_auth_enabled: ${3:}",
      "\t#http_case_sensitive: ${4:}",
      "\t#http_login_form: ${5:zabbix_login_form|http_login_form}",
      "\t#http_login_password: ${6:}",
      "\t#http_login_user: ${7:}",
      "\t#http_strip_domains: ${8:}",
      "\t#jit_provision_interval: ${9:1h}",
      "\t#ldap_auth_enabled: ${10:}",
      "\t#ldap_base_dn: ${11:}",
      "\t#ldap_bind_dn: ${12:}",
      "\t#ldap_bind_password: ${13:}",
      "\t#ldap_case_sensitive: ${14:}",
      "\t#ldap_configured: ${15:}",
      "\t#ldap_host: ${16:}",
      "\t#ldap_jit_status: ${17:}",
      "\t#ldap_port: ${18:}",
      "\t#ldap_search_attribute: ${19:}",
      "\t#ldap_userdirectory: ${20:}",
      "\t#passwd_check_rules: ${21:}",
      "\t#passwd_min_length: ${22:}",
      "\t#saml_auth_enabled: ${23:}",
      "\t#saml_case_sensitive: ${24:}",
      "\t#saml_encrypt_assertions: ${25:}",
      "\t#saml_encrypt_nameid: ${26:}",
      "\t#saml_idp_entityid: ${27:}",
      "\t#saml_jit_status: ${28:}",
      "\t#saml_nameid_format: ${29:}",
      "\t#saml_sign_assertions: ${30:}",
      "\t#saml_sign_authn_requests: ${31:}",
      "\t#saml_sign_logout_requests: ${32:}",
      "\t#saml_sign_logout_responses: ${33:}",
      "\t#saml_sign_messages: ${34:}",
      "\t#saml_slo_url: ${35:}",
      "\t#saml_sp_entityid: ${36:}",
      "\t#saml_sso_url: ${37:}",
      "\t#saml_username_attribute: ${38:}"
    ]
  },
  "zabbix_autoregister": {
    "prefix": "zabbix_autoregister",
    "description": "Update Zabbix autoregistration",
    "body": [
      "community.zabbix.zabbix_autoregister:",
      "\ttls_accept: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}",
      "\t#tls_psk: ${4:}",
      "\t#tls_psk_identity: ${5:}"
    ]
  },
  "zabbix_discovery_rule": {
    "prefix": "zabbix_discovery_rule",
    "description": "Create/delete/update Zabbix discovery rules",
    "body": [
      "community.zabbix.zabbix_discovery_rule:",
      "\tname: ${1:}",
      "\t#dchecks: ${2:}",
      "\t#delay: ${3:1h}",
      "\t#http_login_password: ${4:}",
      "\t#http_login_user: ${5:}",
      "\t#iprange: ${6:}",
      "\t#proxy: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#status: ${9:#enabled|disabled}"
    ]
  },
  "zabbix_globalmacro": {
    "prefix": "zabbix_globalmacro",
    "description": "Create/update/delete Zabbix Global macros",
    "body": [
      "community.zabbix.zabbix_globalmacro:",
      "\tmacro_name: ${1:}",
      "\t#force: ${2:true}",
      "\t#http_login_password: ${3:}",
      "\t#http_login_user: ${4:}",
      "\t#macro_description: ${5:\"\"}",
      "\t#macro_type: ${6:#text|secret|vault}",
      "\t#macro_value: ${7:}",
      "\t#state: ${8:#present|absent}"
    ]
  },
  "zabbix_group": {
    "prefix": "zabbix_group",
    "description": "Create/delete Zabbix host groups",
    "body": [
      "community.zabbix.zabbix_group:",
      "\thost_groups: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "zabbix_group_events_info": {
    "prefix": "zabbix_group_events_info",
    "description": "Get all triggers about a Zabbix group",
    "body": [
      "community.zabbix.zabbix_group_events_info:",
      "\thostgroup_name: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}",
      "\t#trigger_severity: ${4:not_classified|information|warning|#average|high|disaster}"
    ]
  },
  "zabbix_group_info": {
    "prefix": "zabbix_group_info",
    "description": "Gather information about Zabbix hostgroup",
    "body": [
      "community.zabbix.zabbix_group_info:",
      "\thostgroup_name: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}"
    ]
  },
  "zabbix_host": {
    "prefix": "zabbix_host",
    "description": "Create/update/delete Zabbix hosts",
    "body": [
      "community.zabbix.zabbix_host:",
      "\thost_name: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#description: ${3:}",
      "\t#force: ${4:true}",
      "\t#host_groups: ${5:}",
      "\t#http_login_password: ${6:}",
      "\t#http_login_user: ${7:}",
      "\t#interfaces: ${8:[]}",
      "\t#inventory_mode: ${9:automatic|manual|disabled}",
      "\t#inventory_zabbix: ${10:}",
      "\t#ipmi_authtype: ${11:}",
      "\t#ipmi_password: ${12:}",
      "\t#ipmi_privilege: ${13:}",
      "\t#ipmi_username: ${14:}",
      "\t#link_templates: ${15:}",
      "\t#macros: ${16:}",
      "\t#proxy: ${17:}",
      "\t#state: ${18:#present|absent}",
      "\t#status: ${19:#enabled|disabled}",
      "\t#tags: ${20:}",
      "\t#tls_accept: ${21:}",
      "\t#tls_connect: ${22:}",
      "\t#tls_psk: ${23:}",
      "\t#tls_psk_identity: ${24:}",
      "\t#tls_subject: ${25:}",
      "\t#visible_name: ${26:}"
    ]
  },
  "zabbix_host_events_info": {
    "prefix": "zabbix_host_events_info",
    "description": "Get all triggers about a Zabbix host",
    "body": [
      "community.zabbix.zabbix_host_events_info:",
      "\thost_identifier: ${1:}",
      "\t#host_id_type: ${2:#hostname|visible_name|hostid}",
      "\t#http_login_password: ${3:}",
      "\t#http_login_user: ${4:}",
      "\t#trigger_severity: ${5:not_classified|information|warning|#average|high|disaster}"
    ]
  },
  "zabbix_host_info": {
    "prefix": "zabbix_host_info",
    "description": "Gather information about Zabbix host",
    "body": [
      "community.zabbix.zabbix_host_info:",
      "\t#exact_match: ${1:false}",
      "\t#host_inventory: ${2:[]}",
      "\t#host_ip: ${3:[]}",
      "\t#host_name: ${4:\"\"}",
      "\t#http_login_password: ${5:}",
      "\t#http_login_user: ${6:}",
      "\t#remove_duplicate: ${7:true}"
    ]
  },
  "zabbix_hostmacro": {
    "prefix": "zabbix_hostmacro",
    "description": "Create/update/delete Zabbix host macros",
    "body": [
      "community.zabbix.zabbix_hostmacro:",
      "\thost_name: ${1:}",
      "\tmacro_name: ${2:}",
      "\t#force: ${3:true}",
      "\t#http_login_password: ${4:}",
      "\t#http_login_user: ${5:}",
      "\t#macro_description: ${6:\"\"}",
      "\t#macro_type: ${7:#text|secret|vault}",
      "\t#macro_value: ${8:}",
      "\t#state: ${9:#present|absent}"
    ]
  },
  "zabbix_housekeeping": {
    "prefix": "zabbix_housekeeping",
    "description": "Update Zabbix housekeeping",
    "body": [
      "community.zabbix.zabbix_housekeeping:",
      "\t#compress_older: ${1:}",
      "\t#compression_status: ${2:}",
      "\t#hk_audit: ${3:}",
      "\t#hk_audit_mode: ${4:}",
      "\t#hk_events_autoreg: ${5:}",
      "\t#hk_events_discovery: ${6:}",
      "\t#hk_events_internal: ${7:}",
      "\t#hk_events_mode: ${8:}",
      "\t#hk_events_service: ${9:}",
      "\t#hk_events_trigger: ${10:}",
      "\t#hk_history: ${11:}",
      "\t#hk_history_global: ${12:}",
      "\t#hk_history_mode: ${13:}",
      "\t#hk_services: ${14:}",
      "\t#hk_services_mode: ${15:}",
      "\t#hk_sessions: ${16:}",
      "\t#hk_sessions_mode: ${17:}",
      "\t#hk_trends: ${18:}",
      "\t#hk_trends_global: ${19:}",
      "\t#hk_trends_mode: ${20:}",
      "\t#http_login_password: ${21:}",
      "\t#http_login_user: ${22:}"
    ]
  },
  "zabbix_maintenance": {
    "prefix": "zabbix_maintenance",
    "description": "Create Zabbix maintenance windows",
    "body": [
      "community.zabbix.zabbix_maintenance:",
      "\tname: ${1:}",
      "\t#collect_data: ${2:true}",
      "\t#desc: ${3:Created by Ansible}",
      "\t#host_groups: ${4:}",
      "\t#host_names: ${5:}",
      "\t#http_login_password: ${6:}",
      "\t#http_login_user: ${7:}",
      "\t#minutes: ${8:10}",
      "\t#state: ${9:#present|absent}",
      "\t#tags: ${10:}",
      "\t#visible_name: ${11:true}"
    ]
  },
  "zabbix_map": {
    "prefix": "zabbix_map",
    "description": "Create/update/delete Zabbix maps",
    "body": [
      "community.zabbix.zabbix_map:",
      "\tname: ${1:}",
      "\t#data: ${2:}",
      "\t#default_image: ${3:}",
      "\t#expand_problem: ${4:true}",
      "\t#height: ${5:600}",
      "\t#highlight: ${6:true}",
      "\t#http_login_password: ${7:}",
      "\t#http_login_user: ${8:}",
      "\t#label_type: ${9:label|ip|#name|status|nothing|custom}",
      "\t#margin: ${10:40}",
      "\t#state: ${11:#present|absent}",
      "\t#width: ${12:800}"
    ]
  },
  "zabbix_mediatype": {
    "prefix": "zabbix_mediatype",
    "description": "Create/Update/Delete Zabbix media types",
    "body": [
      "community.zabbix.zabbix_mediatype:",
      "\tname: ${1:}",
      "\ttype: ${2:email|script|sms|webhook|jabber|ez_texting}",
      "\t#attempt_interval: ${3:10s}",
      "\t#description: ${4:\"\"}",
      "\t#event_menu: ${5:false}",
      "\t#event_menu_name: ${6:}",
      "\t#event_menu_url: ${7:}",
      "\t#gsm_modem: ${8:}",
      "\t#http_login_password: ${9:}",
      "\t#http_login_user: ${10:}",
      "\t#max_attempts: ${11:3}",
      "\t#max_sessions: ${12:1}",
      "\t#message_templates: ${13:[]}",
      "\t#message_text_limit: ${14:USA|Canada}",
      "\t#password: ${15:}",
      "\t#process_tags: ${16:false}",
      "\t#script_name: ${17:}",
      "\t#script_params: ${18:}",
      "\t#smtp_authentication: ${19:false}",
      "\t#smtp_email: ${20:}",
      "\t#smtp_helo: ${21:localhost}",
      "\t#smtp_security: ${22:None|STARTTLS|SSL/TLS}",
      "\t#smtp_server: ${23:localhost}",
      "\t#smtp_server_port: ${24:25}",
      "\t#smtp_verify_host: ${25:false}",
      "\t#smtp_verify_peer: ${26:false}",
      "\t#state: ${27:#present|absent}",
      "\t#status: ${28:#enabled|disabled}",
      "\t#username: ${29:}",
      "\t#webhook_params: ${30:[]}",
      "\t#webhook_script: ${31:}",
      "\t#webhook_timeout: ${32:30s}"
    ]
  },
  "zabbix_proxy": {
    "prefix": "zabbix_proxy",
    "description": "Create/delete/get/update Zabbix proxies",
    "body": [
      "community.zabbix.zabbix_proxy:",
      "\tproxy_name: ${1:}",
      "\t#ca_cert: ${2:}",
      "\t#description: ${3:}",
      "\t#http_login_password: ${4:}",
      "\t#http_login_user: ${5:}",
      "\t#interface: ${6:{\\}}",
      "\t#proxy_address: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#status: ${9:#active|passive}",
      "\t#tls_accept: ${10:#no_encryption|PSK|certificate}",
      "\t#tls_connect: ${11:#no_encryption|PSK|certificate}",
      "\t#tls_psk: ${12:}",
      "\t#tls_psk_identity: ${13:}",
      "\t#tls_subject: ${14:}"
    ]
  },
  "zabbix_proxy_info": {
    "prefix": "zabbix_proxy_info",
    "description": "Gather information about Zabbix proxy",
    "body": [
      "community.zabbix.zabbix_proxy_info:",
      "\tproxy_name: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}",
      "\t#proxy_hosts: ${4:false}"
    ]
  },
  "zabbix_regexp": {
    "prefix": "zabbix_regexp",
    "description": "Create/update/delete Zabbix regular expression",
    "body": [
      "community.zabbix.zabbix_regexp:",
      "\tname: ${1:}",
      "\t#expressions: ${2:}",
      "\t#http_login_password: ${3:}",
      "\t#http_login_user: ${4:}",
      "\t#state: ${5:#present|absent}",
      "\t#test_string: ${6:}"
    ]
  },
  "zabbix_script": {
    "prefix": "zabbix_script",
    "description": "Create/update/delete Zabbix scripts",
    "body": [
      "community.zabbix.zabbix_script:",
      "\tcommand: ${1:}",
      "\tname: ${2:}",
      "\tscript_type: ${3:script|ipmi|ssh|telnet|webhook}",
      "\t#authtype: ${4:password|public_key}",
      "\t#confirmation: ${5:}",
      "\t#description: ${6:}",
      "\t#execute_on: ${7:zabbix_agent|zabbix_server|#zabbix_server_proxy}",
      "\t#host_access: ${8:#read|write}",
      "\t#host_group: ${9:all}",
      "\t#http_login_password: ${10:}",
      "\t#http_login_user: ${11:}",
      "\t#menu_path: ${12:}",
      "\t#parameters: ${13:}",
      "\t#password: ${14:}",
      "\t#port: ${15:}",
      "\t#privatekey: ${16:}",
      "\t#publickey: ${17:}",
      "\t#scope: ${18:#action_operation|manual_host_action|manual_event_action}",
      "\t#script_timeout: ${19:30s}",
      "\t#state: ${20:#present|absent}",
      "\t#user_group: ${21:all}",
      "\t#username: ${22:}"
    ]
  },
  "zabbix_service": {
    "prefix": "zabbix_service",
    "description": "Create/update/delete Zabbix service",
    "body": [
      "community.zabbix.zabbix_service:",
      "\tname: ${1:}",
      "\tsortorder: ${2:}",
      "\t#algorithm: ${3:#status_to_ok|most_crit_if_all_children|most_crit_of_child_serv}",
      "\t#children: ${4:}",
      "\t#description: ${5:}",
      "\t#http_login_password: ${6:}",
      "\t#http_login_user: ${7:}",
      "\t#parents: ${8:}",
      "\t#problem_tags: ${9:}",
      "\t#propagation_rule: ${10:as_is}",
      "\t#propagation_value: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#status_rules: ${13:}",
      "\t#tags: ${14:}",
      "\t#weight: ${15:0}"
    ]
  },
  "zabbix_settings": {
    "prefix": "zabbix_settings",
    "description": "Update Zabbix global settings.",
    "body": [
      "community.zabbix.zabbix_settings:",
      "\t#alert_usrgrp: ${1:}",
      "\t#auditlog_enabled: ${2:}",
      "\t#blink_period: ${3:}",
      "\t#connect_timeout: ${4:}",
      "\t#custom_color: ${5:}",
      "\t#default_inventory_mode: ${6:disabled|manual|automatic}",
      "\t#default_lang: ${7:}",
      "\t#default_theme: ${8:blue-theme|dark-theme|hc-light|hc-dark}",
      "\t#default_timezone: ${9:}",
      "\t#discovery_group: ${10:}",
      "\t#frontend_url: ${11:}",
      "\t#geomaps_attribution: ${12:}",
      "\t#geomaps_max_zoom: ${13:}",
      "\t#geomaps_tile_provider: ${14:OpenStreetMap.Mapnik|OpenTopoMap|Stamen.TonerLite|Stamen.Terrain|USGS.USTopo|USGS.USImagery|another}",
      "\t#geomaps_tile_url: ${15:}",
      "\t#history_period: ${16:}",
      "\t#http_login_password: ${17:}",
      "\t#http_login_user: ${18:}",
      "\t#iframe_sandboxing_enabled: ${19:}",
      "\t#iframe_sandboxing_exceptions: ${20:}",
      "\t#item_test_timeout: ${21:}",
      "\t#login_attempts: ${22:}",
      "\t#login_block: ${23:}",
      "\t#max_in_table: ${24:}",
      "\t#max_overview_table_size: ${25:}",
      "\t#max_period: ${26:}",
      "\t#media_type_test_timeout: ${27:}",
      "\t#ok_ack_color: ${28:}",
      "\t#ok_ack_style: ${29:}",
      "\t#ok_period: ${30:}",
      "\t#ok_unack_color: ${31:}",
      "\t#ok_unack_style: ${32:}",
      "\t#period_default: ${33:}",
      "\t#problem_ack_color: ${34:}",
      "\t#problem_ack_style: ${35:}",
      "\t#problem_unack_color: ${36:}",
      "\t#problem_unack_style: ${37:}",
      "\t#report_test_timeout: ${38:}",
      "\t#script_timeout: ${39:}",
      "\t#search_limit: ${40:}",
      "\t#server_check_interval: ${41:}",
      "\t#severity_color_0: ${42:}",
      "\t#severity_color_1: ${43:}",
      "\t#severity_color_2: ${44:}",
      "\t#severity_color_3: ${45:}",
      "\t#severity_color_4: ${46:}",
      "\t#severity_color_5: ${47:}",
      "\t#severity_name_0: ${48:}",
      "\t#severity_name_1: ${49:}",
      "\t#severity_name_2: ${50:}",
      "\t#severity_name_3: ${51:}",
      "\t#severity_name_4: ${52:}",
      "\t#severity_name_5: ${53:}",
      "\t#show_technical_errors: ${54:}",
      "\t#snmptrap_logging: ${55:}",
      "\t#socket_timeout: ${56:}",
      "\t#uri_valid_schemes: ${57:}",
      "\t#validate_uri_schemes: ${58:}",
      "\t#vault_provider: ${59:HashiCorp_Vault|CyberArk_Vault}",
      "\t#work_period: ${60:}",
      "\t#x_frame_options: ${61:}"
    ]
  },
  "zabbix_template": {
    "prefix": "zabbix_template",
    "description": "Create/update/delete Zabbix template",
    "body": [
      "community.zabbix.zabbix_template:",
      "\t#clear_templates: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}",
      "\t#link_templates: ${4:}",
      "\t#macros: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#tags: ${7:}",
      "\t#template_groups: ${8:}",
      "\t#template_json: ${9:}",
      "\t#template_name: ${10:}",
      "\t#template_xml: ${11:}"
    ]
  },
  "zabbix_template_info": {
    "prefix": "zabbix_template_info",
    "description": "Gather information about Zabbix template",
    "body": [
      "community.zabbix.zabbix_template_info:",
      "\ttemplate_name: ${1:}",
      "\t#format: ${2:#json|xml|yaml|none}",
      "\t#http_login_password: ${3:}",
      "\t#http_login_user: ${4:}",
      "\t#omit_date: ${5:false}"
    ]
  },
  "zabbix_templategroup": {
    "prefix": "zabbix_templategroup",
    "description": "Create/delete Zabbix template groups",
    "body": [
      "community.zabbix.zabbix_templategroup:",
      "\ttemplate_groups: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}",
      "\t#state: ${4:#present|absent}"
    ]
  },
  "zabbix_token": {
    "prefix": "zabbix_token",
    "description": "Create/Update/Generate/Delete Zabbix token.",
    "body": [
      "community.zabbix.zabbix_token:",
      "\tname: ${1:}",
      "\tusername: ${2:}",
      "\t#description: ${3:}",
      "\t#expires_at: ${4:}",
      "\t#generate_token: ${5:false}",
      "\t#http_login_password: ${6:}",
      "\t#http_login_user: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#status: ${9:}"
    ]
  },
  "zabbix_user": {
    "prefix": "zabbix_user",
    "description": "Create/update/delete Zabbix users",
    "body": [
      "community.zabbix.zabbix_user:",
      "\tusername: ${1:}",
      "\t#after_login_url: ${2:}",
      "\t#autologin: ${3:}",
      "\t#autologout: ${4:}",
      "\t#current_passwd: ${5:}",
      "\t#http_login_password: ${6:}",
      "\t#http_login_user: ${7:}",
      "\t#lang: ${8:en_GB|en_US|zh_CN|cs_CZ|fr_FR|he_IL|it_IT|ko_KR|ja_JP|nb_NO|pl_PL|pt_BR|pt_PT|ru_RU|sk_SK|tr_TR|uk_UA|default}",
      "\t#name: ${9:}",
      "\t#override_passwd: ${10:false}",
      "\t#passwd: ${11:}",
      "\t#refresh: ${12:}",
      "\t#role_name: ${13:}",
      "\t#rows_per_page: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#surname: ${16:}",
      "\t#theme: ${17:default|blue-theme|dark-theme}",
      "\t#timezone: ${18:}",
      "\t#user_medias: ${19:}",
      "\t#usrgrps: ${20:}"
    ]
  },
  "zabbix_user_directory": {
    "prefix": "zabbix_user_directory",
    "description": "Create/update/delete Zabbix user directories",
    "body": [
      "community.zabbix.zabbix_user_directory:",
      "\tname: ${1:}",
      "\t#base_dn: ${2:}",
      "\t#bind_dn: ${3:\"\"}",
      "\t#bind_password: ${4:}",
      "\t#description: ${5:\"\"}",
      "\t#encrypt_assertions: ${6:false}",
      "\t#encrypt_nameid: ${7:false}",
      "\t#group_basedn: ${8:}",
      "\t#group_filter: ${9:}",
      "\t#group_member: ${10:}",
      "\t#group_membership: ${11:}",
      "\t#group_name: ${12:}",
      "\t#host: ${13:}",
      "\t#http_login_password: ${14:}",
      "\t#http_login_user: ${15:}",
      "\t#idp_entityid: ${16:}",
      "\t#idp_type: ${17:ldap|saml}",
      "\t#nameid_format: ${18:}",
      "\t#port: ${19:}",
      "\t#provision_groups: ${20:}",
      "\t#provision_media: ${21:}",
      "\t#provision_status: ${22:false}",
      "\t#scim_status: ${23:false}",
      "\t#search_attribute: ${24:}",
      "\t#search_filter: \\${25:(%{attr\\}=%{user\\})\\}",
      "\t#sign_assertions: ${26:false}",
      "\t#sign_authn_requests: ${27:false}",
      "\t#sign_logout_requests: ${28:false}",
      "\t#sign_logout_responses: ${29:false}",
      "\t#sign_messages: ${30:false}",
      "\t#slo_url: ${31:}",
      "\t#sp_entityid: ${32:}",
      "\t#sso_url: ${33:}",
      "\t#start_tls: ${34:#0|1}",
      "\t#state: ${35:#present|absent}",
      "\t#user_lastname: ${36:}",
      "\t#user_ref_attr: ${37:}",
      "\t#user_username: ${38:}",
      "\t#username_attribute: ${39:}"
    ]
  },
  "zabbix_user_info": {
    "prefix": "zabbix_user_info",
    "description": "Gather information about Zabbix user",
    "body": [
      "community.zabbix.zabbix_user_info:",
      "\tusername: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}"
    ]
  },
  "zabbix_user_role": {
    "prefix": "zabbix_user_role",
    "description": "Adds or removes zabbix roles",
    "body": [
      "community.zabbix.zabbix_user_role:",
      "\tname: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}",
      "\t#rules: ${4:{\\}}",
      "\t#state: ${5:#present|absent}",
      "\t#type: ${6:#User|Admin|Super Admin}"
    ]
  },
  "zabbix_usergroup": {
    "prefix": "zabbix_usergroup",
    "description": "Create/delete/update Zabbix user groups",
    "body": [
      "community.zabbix.zabbix_usergroup:",
      "\tname: ${1:}",
      "\t#debug_mode: ${2:#disabled|enabled}",
      "\t#gui_access: ${3:#default|internal|LDAP|disable}",
      "\t#hostgroup_rights: ${4:}",
      "\t#http_login_password: ${5:}",
      "\t#http_login_user: ${6:}",
      "\t#rights: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#status: ${9:#enabled|disabled}",
      "\t#tag_filters: ${10:}",
      "\t#templategroup_rights: ${11:}",
      "\t#userdirectory: ${12:}"
    ]
  },
  "zabbix_valuemap": {
    "prefix": "zabbix_valuemap",
    "description": "Create/update/delete Zabbix value maps",
    "body": [
      "community.zabbix.zabbix_valuemap:",
      "\tname: ${1:}",
      "\t#http_login_password: ${2:}",
      "\t#http_login_user: ${3:}",
      "\t#mappings: ${4:}",
      "\t#state: ${5:#present|absent}"
    ]
  },
  "fmgr_adom_options": {
    "prefix": "fmgr_adom_options",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_adom_options:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#adom_options: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_antivirus_mmschecksum": {
    "prefix": "fmgr_antivirus_mmschecksum",
    "description": "Configure MMS content checksum list.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_mmschecksum:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#antivirus_mmschecksum: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_mmschecksum_entries": {
    "prefix": "fmgr_antivirus_mmschecksum_entries",
    "description": "modify this MMS content checksum list",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_mmschecksum_entries:",
      "\tadom: ${1:}",
      "\tmms-checksum: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#antivirus_mmschecksum_entries: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_antivirus_notification": {
    "prefix": "fmgr_antivirus_notification",
    "description": "Configure AntiVirus notification lists.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_notification:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#antivirus_notification: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_notification_entries": {
    "prefix": "fmgr_antivirus_notification_entries",
    "description": "modify this antivirus notification list",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_notification_entries:",
      "\tadom: ${1:}",
      "\tnotification: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#antivirus_notification_entries: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_antivirus_profile": {
    "prefix": "fmgr_antivirus_profile",
    "description": "Configure AntiVirus profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_cifs": {
    "prefix": "fmgr_antivirus_profile_cifs",
    "description": "Configure CIFS AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_cifs:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_cifs: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_contentdisarm": {
    "prefix": "fmgr_antivirus_profile_contentdisarm",
    "description": "AV Content Disarm and Reconstruction settings.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_contentdisarm:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_contentdisarm: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_ftp": {
    "prefix": "fmgr_antivirus_profile_ftp",
    "description": "Configure FTP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_ftp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_ftp: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_http": {
    "prefix": "fmgr_antivirus_profile_http",
    "description": "Configure HTTP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_http:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_http: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_imap": {
    "prefix": "fmgr_antivirus_profile_imap",
    "description": "Configure IMAP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_imap:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_imap: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_mapi": {
    "prefix": "fmgr_antivirus_profile_mapi",
    "description": "Configure MAPI AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_mapi:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_mapi: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_nacquar": {
    "prefix": "fmgr_antivirus_profile_nacquar",
    "description": "Configure AntiVirus quarantine settings.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_nacquar:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_nacquar: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_nntp": {
    "prefix": "fmgr_antivirus_profile_nntp",
    "description": "Configure NNTP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_nntp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_nntp: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_outbreakprevention": {
    "prefix": "fmgr_antivirus_profile_outbreakprevention",
    "description": "Configure Virus Outbreak Prevention settings.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_outbreakprevention:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_outbreakprevention: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_pop3": {
    "prefix": "fmgr_antivirus_profile_pop3",
    "description": "Configure POP3 AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_pop3:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_pop3: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_smb": {
    "prefix": "fmgr_antivirus_profile_smb",
    "description": "Configure SMB AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_smb:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_smb: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_smtp": {
    "prefix": "fmgr_antivirus_profile_smtp",
    "description": "Configure SMTP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_smtp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_smtp: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_antivirus_profile_ssh": {
    "prefix": "fmgr_antivirus_profile_ssh",
    "description": "Configure SFTP and SCP AntiVirus options.",
    "body": [
      "fortinet.fortimanager.fmgr_antivirus_profile_ssh:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#antivirus_profile_ssh: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_apcfgprofile": {
    "prefix": "fmgr_apcfgprofile",
    "description": "Configure AP local configuration profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_apcfgprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#apcfgprofile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_apcfgprofile_commandlist": {
    "prefix": "fmgr_apcfgprofile_commandlist",
    "description": "AP local configuration command list.",
    "body": [
      "fortinet.fortimanager.fmgr_apcfgprofile_commandlist:",
      "\tadom: ${1:}",
      "\tapcfg-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#apcfgprofile_commandlist: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_casi_profile": {
    "prefix": "fmgr_application_casi_profile",
    "description": "Cloud Access Security Inspection.",
    "body": [
      "fortinet.fortimanager.fmgr_application_casi_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_casi_profile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_casi_profile_entries": {
    "prefix": "fmgr_application_casi_profile_entries",
    "description": "Application entries.",
    "body": [
      "fortinet.fortimanager.fmgr_application_casi_profile_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_casi_profile_entries: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_categories": {
    "prefix": "fmgr_application_categories",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_application_categories:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_categories: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_custom": {
    "prefix": "fmgr_application_custom",
    "description": "Configure custom application signatures.",
    "body": [
      "fortinet.fortimanager.fmgr_application_custom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_custom: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_group": {
    "prefix": "fmgr_application_group",
    "description": "Configure firewall application groups.",
    "body": [
      "fortinet.fortimanager.fmgr_application_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_group: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_internetservice": {
    "prefix": "fmgr_application_internetservice",
    "description": "Show Internet service application.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservice:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#application_internetservice: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_application_internetservice_entry": {
    "prefix": "fmgr_application_internetservice_entry",
    "description": "Entries in the Internet service database.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservice_entry:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_internetservice_entry: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_internetservicecustom": {
    "prefix": "fmgr_application_internetservicecustom",
    "description": "Configure custom Internet service applications.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_internetservicecustom: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_internetservicecustom_disableentry": {
    "prefix": "fmgr_application_internetservicecustom_disableentry",
    "description": "Disable entries in the Internet service database.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom_disableentry:",
      "\tadom: ${1:}",
      "\tinternet-service-custom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_internetservicecustom_disableentry: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_internetservicecustom_disableentry_iprange": {
    "prefix": "fmgr_application_internetservicecustom_disableentry_iprange",
    "description": "IP ranges in the disable entry.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom_disableentry_iprange:",
      "\tadom: ${1:}",
      "\tdisable-entry: ${2:}",
      "\tinternet-service-custom: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#application_internetservicecustom_disableentry_iprange: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_application_internetservicecustom_entry": {
    "prefix": "fmgr_application_internetservicecustom_entry",
    "description": "Entries added to the Internet service database and custom database.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom_entry:",
      "\tadom: ${1:}",
      "\tinternet-service-custom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_internetservicecustom_entry: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_internetservicecustom_entry_portrange": {
    "prefix": "fmgr_application_internetservicecustom_entry_portrange",
    "description": "Port ranges in the custom entry.",
    "body": [
      "fortinet.fortimanager.fmgr_application_internetservicecustom_entry_portrange:",
      "\tadom: ${1:}",
      "\tentry: ${2:}",
      "\tinternet-service-custom: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#application_internetservicecustom_entry_portrange: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_application_list": {
    "prefix": "fmgr_application_list",
    "description": "Configure application control lists.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#application_list: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_application_list_defaultnetworkservices": {
    "prefix": "fmgr_application_list_defaultnetworkservices",
    "description": "Default network service entries.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list_defaultnetworkservices:",
      "\tadom: ${1:}",
      "\tlist: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_list_defaultnetworkservices: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_list_entries": {
    "prefix": "fmgr_application_list_entries",
    "description": "Application list entries.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list_entries:",
      "\tadom: ${1:}",
      "\tlist: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#application_list_entries: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_application_list_entries_parameters": {
    "prefix": "fmgr_application_list_entries_parameters",
    "description": "Application parameters.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list_entries_parameters:",
      "\tadom: ${1:}",
      "\tentries: ${2:}",
      "\tlist: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#application_list_entries_parameters: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_application_list_entries_parameters_members": {
    "prefix": "fmgr_application_list_entries_parameters_members",
    "description": "Parameter tuple members.",
    "body": [
      "fortinet.fortimanager.fmgr_application_list_entries_parameters_members:",
      "\tadom: ${1:}",
      "\tentries: ${2:}",
      "\tlist: ${3:}",
      "\tparameters: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#access_token: ${6:}",
      "\t#application_list_entries_parameters_members: ${7:}",
      "\t#bypass_validation: ${8:false}",
      "\t#enable_log: ${9:false}",
      "\t#forticloud_access_token: ${10:}",
      "\t#proposed_method: ${11:update|set|add}",
      "\t#rc_failed: ${12:}",
      "\t#rc_succeeded: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_arrpprofile": {
    "prefix": "fmgr_arrpprofile",
    "description": "Configure WiFi Automatic Radio Resource Provisioning",
    "body": [
      "fortinet.fortimanager.fmgr_arrpprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#arrpprofile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_authentication_scheme": {
    "prefix": "fmgr_authentication_scheme",
    "description": "Configure Authentication Schemes.",
    "body": [
      "fortinet.fortimanager.fmgr_authentication_scheme:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#authentication_scheme: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_bleprofile": {
    "prefix": "fmgr_bleprofile",
    "description": "Configure Bluetooth Low Energy profile.",
    "body": [
      "fortinet.fortimanager.fmgr_bleprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bleprofile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_bonjourprofile": {
    "prefix": "fmgr_bonjourprofile",
    "description": "Configure Bonjour profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_bonjourprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bonjourprofile: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_bonjourprofile_policylist": {
    "prefix": "fmgr_bonjourprofile_policylist",
    "description": "Bonjour policy list.",
    "body": [
      "fortinet.fortimanager.fmgr_bonjourprofile_policylist:",
      "\tadom: ${1:}",
      "\tbonjour-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bonjourprofile_policylist: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_certificate_template": {
    "prefix": "fmgr_certificate_template",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_certificate_template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#certificate_template: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cifs_domaincontroller": {
    "prefix": "fmgr_cifs_domaincontroller",
    "description": "Define known domain controller servers.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_domaincontroller:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cifs_domaincontroller: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cifs_profile": {
    "prefix": "fmgr_cifs_profile",
    "description": "Configure CIFS profile.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cifs_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cifs_profile_filefilter": {
    "prefix": "fmgr_cifs_profile_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_profile_filefilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cifs_profile_filefilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cifs_profile_filefilter_entries": {
    "prefix": "fmgr_cifs_profile_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_profile_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#cifs_profile_filefilter_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_cifs_profile_serverkeytab": {
    "prefix": "fmgr_cifs_profile_serverkeytab",
    "description": "Server keytab.",
    "body": [
      "fortinet.fortimanager.fmgr_cifs_profile_serverkeytab:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#cifs_profile_serverkeytab: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_clone": {
    "prefix": "fmgr_clone",
    "description": "Clone an object in FortiManager.",
    "body": [
      "fortinet.fortimanager.fmgr_clone:",
      "\tclone: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_cloud_orchestaws": {
    "prefix": "fmgr_cloud_orchestaws",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestaws:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestaws: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestawsconnector": {
    "prefix": "fmgr_cloud_orchestawsconnector",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestawsconnector:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestawsconnector: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestawstemplate_autoscaleexistingvpc": {
    "prefix": "fmgr_cloud_orchestawstemplate_autoscaleexistingvpc",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestawstemplate_autoscaleexistingvpc:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestawstemplate_autoscaleexistingvpc: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestawstemplate_autoscalenewvpc": {
    "prefix": "fmgr_cloud_orchestawstemplate_autoscalenewvpc",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestawstemplate_autoscalenewvpc:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestawstemplate_autoscalenewvpc: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestawstemplate_autoscaletgwnewvpc": {
    "prefix": "fmgr_cloud_orchestawstemplate_autoscaletgwnewvpc",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestawstemplate_autoscaletgwnewvpc:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestawstemplate_autoscaletgwnewvpc: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_cloud_orchestration": {
    "prefix": "fmgr_cloud_orchestration",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_cloud_orchestration:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#cloud_orchestration: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_credentialstore_domaincontroller": {
    "prefix": "fmgr_credentialstore_domaincontroller",
    "description": "Define known domain controller servers.",
    "body": [
      "fortinet.fortimanager.fmgr_credentialstore_domaincontroller:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#credentialstore_domaincontroller: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_device_profile_fortianalyzer": {
    "prefix": "fmgr_devprof_device_profile_fortianalyzer",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_device_profile_fortianalyzer:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_device_profile_fortianalyzer: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_device_profile_fortiguard": {
    "prefix": "fmgr_devprof_device_profile_fortiguard",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_device_profile_fortiguard:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_device_profile_fortiguard: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_import": {
    "prefix": "fmgr_devprof_import",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_import:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#devprof_import: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_devprof_log_fortianalyzer_setting": {
    "prefix": "fmgr_devprof_log_fortianalyzer_setting",
    "description": "Global FortiAnalyzer settings.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_fortianalyzer_setting:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_log_fortianalyzer_setting: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_log_fortianalyzercloud_setting": {
    "prefix": "fmgr_devprof_log_fortianalyzercloud_setting",
    "description": "Global FortiAnalyzer Cloud settings.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_fortianalyzercloud_setting:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_log_fortianalyzercloud_setting: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_filter": {
    "prefix": "fmgr_devprof_log_syslogd_filter",
    "description": "Filters for remote system server.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_filter:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_log_syslogd_filter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_filter_excludelist": {
    "prefix": "fmgr_devprof_log_syslogd_filter_excludelist",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_filter_excludelist:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_log_syslogd_filter_excludelist: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_filter_excludelist_fields": {
    "prefix": "fmgr_devprof_log_syslogd_filter_excludelist_fields",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_filter_excludelist_fields:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\texclude-list: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#devprof_log_syslogd_filter_excludelist_fields: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_filter_freestyle": {
    "prefix": "fmgr_devprof_log_syslogd_filter_freestyle",
    "description": "Free style filters.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_filter_freestyle:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_log_syslogd_filter_freestyle: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_setting": {
    "prefix": "fmgr_devprof_log_syslogd_setting",
    "description": "Global settings for remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_setting:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_log_syslogd_setting: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_log_syslogd_setting_customfieldname": {
    "prefix": "fmgr_devprof_log_syslogd_setting_customfieldname",
    "description": "Custom field name for CEF format logging.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_log_syslogd_setting_customfieldname:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_log_syslogd_setting_customfieldname: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_system_centralmanagement": {
    "prefix": "fmgr_devprof_system_centralmanagement",
    "description": "Configure central management.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_centralmanagement:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_centralmanagement: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_centralmanagement_serverlist": {
    "prefix": "fmgr_devprof_system_centralmanagement_serverlist",
    "description": "Additional severs that the FortiGate can use for updates",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_centralmanagement_serverlist:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_system_centralmanagement_serverlist: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_system_dns": {
    "prefix": "fmgr_devprof_system_dns",
    "description": "Configure DNS.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_dns:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_dns: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_emailserver": {
    "prefix": "fmgr_devprof_system_emailserver",
    "description": "Configure the email server used by the FortiGate various things.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_emailserver:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_emailserver: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_global": {
    "prefix": "fmgr_devprof_system_global",
    "description": "Configure global attributes.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_global:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_global: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_ntp": {
    "prefix": "fmgr_devprof_system_ntp",
    "description": "Configure system NTP information.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_ntp:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_ntp: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_ntp_ntpserver": {
    "prefix": "fmgr_devprof_system_ntp_ntpserver",
    "description": "Configure the FortiGate to connect to any available third-party NTP server.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_ntp_ntpserver:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_system_ntp_ntpserver: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_admin": {
    "prefix": "fmgr_devprof_system_replacemsg_admin",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_admin:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_admin: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_alertmail": {
    "prefix": "fmgr_devprof_system_replacemsg_alertmail",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_alertmail:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_alertmail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_auth": {
    "prefix": "fmgr_devprof_system_replacemsg_auth",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_auth:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_auth: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_devicedetectionportal": {
    "prefix": "fmgr_devprof_system_replacemsg_devicedetectionportal",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_devicedetectionportal:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_devicedetectionportal: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_ec": {
    "prefix": "fmgr_devprof_system_replacemsg_ec",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_ec:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_ec: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_fortiguardwf": {
    "prefix": "fmgr_devprof_system_replacemsg_fortiguardwf",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_fortiguardwf:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_fortiguardwf: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_ftp": {
    "prefix": "fmgr_devprof_system_replacemsg_ftp",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_ftp:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_ftp: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_http": {
    "prefix": "fmgr_devprof_system_replacemsg_http",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_http:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_http: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_mail": {
    "prefix": "fmgr_devprof_system_replacemsg_mail",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_mail:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_mail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_mms": {
    "prefix": "fmgr_devprof_system_replacemsg_mms",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_mms:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_mms: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_nacquar": {
    "prefix": "fmgr_devprof_system_replacemsg_nacquar",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_nacquar:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_nacquar: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_nntp": {
    "prefix": "fmgr_devprof_system_replacemsg_nntp",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_nntp:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_nntp: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_spam": {
    "prefix": "fmgr_devprof_system_replacemsg_spam",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_spam:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_spam: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_sslvpn": {
    "prefix": "fmgr_devprof_system_replacemsg_sslvpn",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_sslvpn:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_sslvpn: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_trafficquota": {
    "prefix": "fmgr_devprof_system_replacemsg_trafficquota",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_trafficquota:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_trafficquota: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_utm": {
    "prefix": "fmgr_devprof_system_replacemsg_utm",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_utm:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_utm: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_replacemsg_webproxy": {
    "prefix": "fmgr_devprof_system_replacemsg_webproxy",
    "description": "Replacement messages.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_replacemsg_webproxy:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_replacemsg_webproxy: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_snmp_community": {
    "prefix": "fmgr_devprof_system_snmp_community",
    "description": "SNMP community configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_community:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_system_snmp_community: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_devprof_system_snmp_community_hosts": {
    "prefix": "fmgr_devprof_system_snmp_community_hosts",
    "description": "Configure IPv4 SNMP managers",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_community_hosts:",
      "\tadom: ${1:}",
      "\tcommunity: ${2:}",
      "\tdevprof: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#devprof_system_snmp_community_hosts: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_devprof_system_snmp_community_hosts6": {
    "prefix": "fmgr_devprof_system_snmp_community_hosts6",
    "description": "Configure IPv6 SNMP managers.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_community_hosts6:",
      "\tadom: ${1:}",
      "\tcommunity: ${2:}",
      "\tdevprof: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#devprof_system_snmp_community_hosts6: ${7:}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_devprof_system_snmp_sysinfo": {
    "prefix": "fmgr_devprof_system_snmp_sysinfo",
    "description": "SNMP system info configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_sysinfo:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#devprof_system_snmp_sysinfo: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_devprof_system_snmp_user": {
    "prefix": "fmgr_devprof_system_snmp_user",
    "description": "SNMP user configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_devprof_system_snmp_user:",
      "\tadom: ${1:}",
      "\tdevprof: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#devprof_system_snmp_user: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_datatype": {
    "prefix": "fmgr_dlp_datatype",
    "description": "Configure predefined data type used by DLP blocking.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_datatype:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_datatype: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_dictionary": {
    "prefix": "fmgr_dlp_dictionary",
    "description": "Configure dictionaries used by DLP blocking.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_dictionary:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_dictionary: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_dictionary_entries": {
    "prefix": "fmgr_dlp_dictionary_entries",
    "description": "DLP dictionary entries.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_dictionary_entries:",
      "\tadom: ${1:}",
      "\tdictionary: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_dictionary_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_filepattern": {
    "prefix": "fmgr_dlp_filepattern",
    "description": "Configure file patterns used by DLP blocking.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_filepattern:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_filepattern: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_filepattern_entries": {
    "prefix": "fmgr_dlp_filepattern_entries",
    "description": "Configure file patterns used by DLP blocking.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_filepattern_entries:",
      "\tadom: ${1:}",
      "\tfilepattern: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_filepattern_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_fpsensitivity": {
    "prefix": "fmgr_dlp_fpsensitivity",
    "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_fpsensitivity:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_fpsensitivity: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_profile": {
    "prefix": "fmgr_dlp_profile",
    "description": "Configure DLP profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_profile_rule": {
    "prefix": "fmgr_dlp_profile_rule",
    "description": "Set up DLP rules for this profile.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_profile_rule:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_profile_rule: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_sensitivity": {
    "prefix": "fmgr_dlp_sensitivity",
    "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_sensitivity:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_sensitivity: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_sensor": {
    "prefix": "fmgr_dlp_sensor",
    "description": "Configure DLP sensors.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_sensor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dlp_sensor: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dlp_sensor_entries": {
    "prefix": "fmgr_dlp_sensor_entries",
    "description": "DLP sensor entries.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_sensor_entries:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_sensor_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dlp_sensor_filter": {
    "prefix": "fmgr_dlp_sensor_filter",
    "description": "Set up DLP filters for this sensor.",
    "body": [
      "fortinet.fortimanager.fmgr_dlp_sensor_filter:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dlp_sensor_filter: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dnsfilter_domainfilter": {
    "prefix": "fmgr_dnsfilter_domainfilter",
    "description": "Configure DNS domain filters.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_domainfilter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_domainfilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_domainfilter_entries": {
    "prefix": "fmgr_dnsfilter_domainfilter_entries",
    "description": "DNS domain filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_domainfilter_entries:",
      "\tadom: ${1:}",
      "\tdomain-filter: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dnsfilter_domainfilter_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dnsfilter_profile": {
    "prefix": "fmgr_dnsfilter_profile",
    "description": "Configure DNS domain filter profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_profile_dnstranslation": {
    "prefix": "fmgr_dnsfilter_profile_dnstranslation",
    "description": "DNS translation settings.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_dnstranslation:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dnsfilter_profile_dnstranslation: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dnsfilter_profile_domainfilter": {
    "prefix": "fmgr_dnsfilter_profile_domainfilter",
    "description": "Domain filter settings.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_domainfilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_profile_domainfilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_profile_ftgddns": {
    "prefix": "fmgr_dnsfilter_profile_ftgddns",
    "description": "FortiGuard DNS Filter settings.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_ftgddns:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_profile_ftgddns: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_profile_ftgddns_filters": {
    "prefix": "fmgr_dnsfilter_profile_ftgddns_filters",
    "description": "FortiGuard DNS domain filters.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_ftgddns_filters:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dnsfilter_profile_ftgddns_filters: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dnsfilter_profile_urlfilter": {
    "prefix": "fmgr_dnsfilter_profile_urlfilter",
    "description": "URL filter settings.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_profile_urlfilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_profile_urlfilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_urlfilter": {
    "prefix": "fmgr_dnsfilter_urlfilter",
    "description": "Configure URL filter list.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_urlfilter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dnsfilter_urlfilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dnsfilter_urlfilter_entries": {
    "prefix": "fmgr_dnsfilter_urlfilter_entries",
    "description": "DNS URL filter.",
    "body": [
      "fortinet.fortimanager.fmgr_dnsfilter_urlfilter_entries:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\turlfilter: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dnsfilter_urlfilter_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvm_cmd_add_device": {
    "prefix": "fmgr_dvm_cmd_add_device",
    "description": "Add a device to the Device Manager database.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_add_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_add_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_add_devlist": {
    "prefix": "fmgr_dvm_cmd_add_devlist",
    "description": "Add multiple devices to the Device Manager database.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_add_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_add_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_changehaseq": {
    "prefix": "fmgr_dvm_cmd_changehaseq",
    "description": "Modify HA sequence to promote a slave to become the master of the cluster.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_changehaseq:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_changehaseq: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_del_device": {
    "prefix": "fmgr_dvm_cmd_del_device",
    "description": "Delete a device.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_del_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_del_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_del_devlist": {
    "prefix": "fmgr_dvm_cmd_del_devlist",
    "description": "Delete a list of devices.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_del_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_del_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_discover_device": {
    "prefix": "fmgr_dvm_cmd_discover_device",
    "description": "Probe a remote device and retrieve its device information and system status.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_discover_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_discover_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_import_devlist": {
    "prefix": "fmgr_dvm_cmd_import_devlist",
    "description": "Import a list of ADOMs and devices.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_import_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_import_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_reload_devlist": {
    "prefix": "fmgr_dvm_cmd_reload_devlist",
    "description": "Retrieve a list of devices.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_reload_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_reload_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_update_device": {
    "prefix": "fmgr_dvm_cmd_update_device",
    "description": "Refresh the FGFM connection and system information of a device.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_update_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_update_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvm_cmd_update_devlist": {
    "prefix": "fmgr_dvm_cmd_update_devlist",
    "description": "Refresh FGFM connection and system information for a list of devices.",
    "body": [
      "fortinet.fortimanager.fmgr_dvm_cmd_update_devlist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvm_cmd_update_devlist: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_adom": {
    "prefix": "fmgr_dvmdb_adom",
    "description": "ADOM table, most attributes are read-only and can only be changed internally.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_adom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#dvmdb_adom: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_adom_objectmember": {
    "prefix": "fmgr_dvmdb_adom_objectmember",
    "description": "ADOM table, most attributes are read-only and can only be changed internally.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_adom_objectmember:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_adom_objectmember: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_device": {
    "prefix": "fmgr_dvmdb_device",
    "description": "Device table, most attributes are read-only and can only be changed internally.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_device:",
      "\tadom: ${1:}",
      "\tdevice: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_device: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_device_replace_sn": {
    "prefix": "fmgr_dvmdb_device_replace_sn",
    "description": "Replace devices serial number with new value.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_device_replace_sn:",
      "\tadom: ${1:}",
      "\tdevice_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_device_replace_sn: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_device_vdom": {
    "prefix": "fmgr_dvmdb_device_vdom",
    "description": "Device VDOM table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_device_vdom:",
      "\tadom: ${1:}",
      "\tdevice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dvmdb_device_vdom: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvmdb_folder": {
    "prefix": "fmgr_dvmdb_folder",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_folder:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_folder: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_group": {
    "prefix": "fmgr_dvmdb_group",
    "description": "Device group table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_group: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_group_objectmember": {
    "prefix": "fmgr_dvmdb_group_objectmember",
    "description": "Device group table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_group_objectmember:",
      "\tadom: ${1:}",
      "\tgroup: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dvmdb_group_objectmember: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvmdb_metafields_adom": {
    "prefix": "fmgr_dvmdb_metafields_adom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_metafields_adom:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvmdb_metafields_adom: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_metafields_device": {
    "prefix": "fmgr_dvmdb_metafields_device",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_metafields_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvmdb_metafields_device: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_metafields_group": {
    "prefix": "fmgr_dvmdb_metafields_group",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_metafields_group:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#dvmdb_metafields_group: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_revision": {
    "prefix": "fmgr_dvmdb_revision",
    "description": "ADOM revision table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_revision:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_revision: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_script": {
    "prefix": "fmgr_dvmdb_script",
    "description": "Script table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_script:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_script: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dvmdb_script_execute": {
    "prefix": "fmgr_dvmdb_script_execute",
    "description": "Run script.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_script_execute:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#dvmdb_script_execute: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_script_objectmember": {
    "prefix": "fmgr_dvmdb_script_objectmember",
    "description": "Script table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_script_objectmember:",
      "\tadom: ${1:}",
      "\tscript: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dvmdb_script_objectmember: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvmdb_script_scriptschedule": {
    "prefix": "fmgr_dvmdb_script_scriptschedule",
    "description": "Script schedule table.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_script_scriptschedule:",
      "\tadom: ${1:}",
      "\tscript: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dvmdb_script_scriptschedule: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dvmdb_workflow_approve": {
    "prefix": "fmgr_dvmdb_workflow_approve",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_approve:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_approve: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_discard": {
    "prefix": "fmgr_dvmdb_workflow_discard",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_discard:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workflow_drop": {
    "prefix": "fmgr_dvmdb_workflow_drop",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_drop:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workflow_reject": {
    "prefix": "fmgr_dvmdb_workflow_reject",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_reject:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_reject: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_repair": {
    "prefix": "fmgr_dvmdb_workflow_repair",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_repair:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_repair: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_revert": {
    "prefix": "fmgr_dvmdb_workflow_revert",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_revert:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_revert: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_review": {
    "prefix": "fmgr_dvmdb_workflow_review",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_review:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workflow_save": {
    "prefix": "fmgr_dvmdb_workflow_save",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_save:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workflow_start": {
    "prefix": "fmgr_dvmdb_workflow_start",
    "description": "Continue a workflow session.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_start:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_start: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workflow_submit": {
    "prefix": "fmgr_dvmdb_workflow_submit",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workflow_submit:",
      "\tadom: ${1:}",
      "\tsession_id: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dvmdb_workflow_submit: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_dvmdb_workspace_commit": {
    "prefix": "fmgr_dvmdb_workspace_commit",
    "description": "Commit change",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_commit:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_workspace_commit_dev": {
    "prefix": "fmgr_dvmdb_workspace_commit_dev",
    "description": "Commit change",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_commit_dev:",
      "\tadom: ${1:}",
      "\tdevice_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_commit_obj": {
    "prefix": "fmgr_dvmdb_workspace_commit_obj",
    "description": "Commit change",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_commit_obj:",
      "\tadom: ${1:}",
      "\tobject_url_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_commit_pkg": {
    "prefix": "fmgr_dvmdb_workspace_commit_pkg",
    "description": "Commit change",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_commit_pkg:",
      "\tadom: ${1:}",
      "\tpackage_path_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_lock": {
    "prefix": "fmgr_dvmdb_workspace_lock",
    "description": "Lock an entire ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_lock:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_workspace_lock_dev": {
    "prefix": "fmgr_dvmdb_workspace_lock_dev",
    "description": "Lock a device.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_lock_dev:",
      "\tadom: ${1:}",
      "\tdevice_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_lock_obj": {
    "prefix": "fmgr_dvmdb_workspace_lock_obj",
    "description": "Lock a specific object, where the url contains the full path to the object",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_lock_obj:",
      "\tadom: ${1:}",
      "\tobject_url_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_lock_pkg": {
    "prefix": "fmgr_dvmdb_workspace_lock_pkg",
    "description": "Lock a specific package, where the url includes both the folder",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_lock_pkg:",
      "\tadom: ${1:}",
      "\tpackage_path_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_unlock": {
    "prefix": "fmgr_dvmdb_workspace_unlock",
    "description": "Unlock an entire ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_unlock:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_dvmdb_workspace_unlock_dev": {
    "prefix": "fmgr_dvmdb_workspace_unlock_dev",
    "description": "Unlock a device.",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_unlock_dev:",
      "\tadom: ${1:}",
      "\tdevice_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_unlock_obj": {
    "prefix": "fmgr_dvmdb_workspace_unlock_obj",
    "description": "Unlock a specific object, where the url contains the full path to the object",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_unlock_obj:",
      "\tadom: ${1:}",
      "\tobject_url_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dvmdb_workspace_unlock_pkg": {
    "prefix": "fmgr_dvmdb_workspace_unlock_pkg",
    "description": "Unlock a specific package, where the url includes both the folder",
    "body": [
      "fortinet.fortimanager.fmgr_dvmdb_workspace_unlock_pkg:",
      "\tadom: ${1:}",
      "\tpackage_path_name: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_dynamic_address": {
    "prefix": "fmgr_dynamic_address",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_address:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_address: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_address_dynamicaddrmapping": {
    "prefix": "fmgr_dynamic_address_dynamicaddrmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_address_dynamicaddrmapping:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_address_dynamicaddrmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_certificate_local": {
    "prefix": "fmgr_dynamic_certificate_local",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_certificate_local:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_certificate_local: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_certificate_local_dynamicmapping": {
    "prefix": "fmgr_dynamic_certificate_local_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_certificate_local_dynamicmapping:",
      "\tadom: ${1:}",
      "\tlocal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_certificate_local_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_input_interface": {
    "prefix": "fmgr_dynamic_input_interface",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_input_interface:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_input_interface: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_input_interface_dynamicmapping": {
    "prefix": "fmgr_dynamic_input_interface_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_input_interface_dynamicmapping:",
      "\tadom: ${1:}",
      "\tinterface: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_input_interface_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_interface": {
    "prefix": "fmgr_dynamic_interface",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_interface:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_interface: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_interface_dynamicmapping": {
    "prefix": "fmgr_dynamic_interface_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_interface_dynamicmapping:",
      "\tadom: ${1:}",
      "\tinterface: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_interface_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_interface_platformmapping": {
    "prefix": "fmgr_dynamic_interface_platformmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_interface_platformmapping:",
      "\tadom: ${1:}",
      "\tinterface: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_interface_platformmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_ippool": {
    "prefix": "fmgr_dynamic_ippool",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_ippool:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_ippool: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_multicast_interface": {
    "prefix": "fmgr_dynamic_multicast_interface",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_multicast_interface:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_multicast_interface: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_multicast_interface_dynamicmapping": {
    "prefix": "fmgr_dynamic_multicast_interface_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_multicast_interface_dynamicmapping:",
      "\tadom: ${1:}",
      "\tinterface: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_multicast_interface_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_vip": {
    "prefix": "fmgr_dynamic_vip",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_vip:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_vip: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_members": {
    "prefix": "fmgr_dynamic_virtualwanlink_members",
    "description": "FortiGate interfaces added to the virtual-wan-link.",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_members:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_virtualwanlink_members: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_members_dynamicmapping": {
    "prefix": "fmgr_dynamic_virtualwanlink_members_dynamicmapping",
    "description": "FortiGate interfaces added to the virtual-wan-link.",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_members_dynamicmapping:",
      "\tadom: ${1:}",
      "\tmembers: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_virtualwanlink_members_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_neighbor": {
    "prefix": "fmgr_dynamic_virtualwanlink_neighbor",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_neighbor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_virtualwanlink_neighbor: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_neighbor_dynamicmapping": {
    "prefix": "fmgr_dynamic_virtualwanlink_neighbor_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_neighbor_dynamicmapping:",
      "\tadom: ${1:}",
      "\tneighbor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_virtualwanlink_neighbor_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_server": {
    "prefix": "fmgr_dynamic_virtualwanlink_server",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_server:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_virtualwanlink_server: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_virtualwanlink_server_dynamicmapping": {
    "prefix": "fmgr_dynamic_virtualwanlink_server_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_virtualwanlink_server_dynamicmapping:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_virtualwanlink_server_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_dynamic_vpntunnel": {
    "prefix": "fmgr_dynamic_vpntunnel",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_vpntunnel:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#dynamic_vpntunnel: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_dynamic_vpntunnel_dynamicmapping": {
    "prefix": "fmgr_dynamic_vpntunnel_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_dynamic_vpntunnel_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvpntunnel: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#dynamic_vpntunnel_dynamicmapping: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_blockallowlist": {
    "prefix": "fmgr_emailfilter_blockallowlist",
    "description": "Configure anti-spam block/allow list.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_blockallowlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_blockallowlist: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_blockallowlist_entries": {
    "prefix": "fmgr_emailfilter_blockallowlist_entries",
    "description": "Anti-spam block/allow entries.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_blockallowlist_entries:",
      "\tadom: ${1:}",
      "\tblock-allow-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_blockallowlist_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_bwl": {
    "prefix": "fmgr_emailfilter_bwl",
    "description": "Configure anti-spam black/white list.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_bwl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_bwl: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_bwl_entries": {
    "prefix": "fmgr_emailfilter_bwl_entries",
    "description": "Anti-spam black/white list entries.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_bwl_entries:",
      "\tadom: ${1:}",
      "\tbwl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_bwl_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_bword": {
    "prefix": "fmgr_emailfilter_bword",
    "description": "Configure AntiSpam banned word list.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_bword:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_bword: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_bword_entries": {
    "prefix": "fmgr_emailfilter_bword_entries",
    "description": "Spam filter banned word.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_bword_entries:",
      "\tadom: ${1:}",
      "\tbword: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_bword_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_dnsbl": {
    "prefix": "fmgr_emailfilter_dnsbl",
    "description": "Configure AntiSpam DNSBL/ORBL.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_dnsbl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_dnsbl: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_dnsbl_entries": {
    "prefix": "fmgr_emailfilter_dnsbl_entries",
    "description": "Spam filter DNSBL and ORBL server.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_dnsbl_entries:",
      "\tadom: ${1:}",
      "\tdnsbl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_dnsbl_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_fortishield": {
    "prefix": "fmgr_emailfilter_fortishield",
    "description": "Configure FortiGuard - AntiSpam.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_fortishield:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#emailfilter_fortishield: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_emailfilter_iptrust": {
    "prefix": "fmgr_emailfilter_iptrust",
    "description": "Configure AntiSpam IP trust.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_iptrust:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_iptrust: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_iptrust_entries": {
    "prefix": "fmgr_emailfilter_iptrust_entries",
    "description": "Spam filter trusted IP addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_iptrust_entries:",
      "\tadom: ${1:}",
      "\tiptrust: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_iptrust_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_mheader": {
    "prefix": "fmgr_emailfilter_mheader",
    "description": "Configure AntiSpam MIME header.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_mheader:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_mheader: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_mheader_entries": {
    "prefix": "fmgr_emailfilter_mheader_entries",
    "description": "Spam filter mime header content.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_mheader_entries:",
      "\tadom: ${1:}",
      "\tmheader: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_mheader_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_options": {
    "prefix": "fmgr_emailfilter_options",
    "description": "Configure AntiSpam options.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_options:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#emailfilter_options: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_emailfilter_profile": {
    "prefix": "fmgr_emailfilter_profile",
    "description": "Configure Email Filter profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_filefilter": {
    "prefix": "fmgr_emailfilter_profile_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_filefilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_filefilter: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_filefilter_entries": {
    "prefix": "fmgr_emailfilter_profile_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#emailfilter_profile_filefilter_entries: ${6:}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_emailfilter_profile_gmail": {
    "prefix": "fmgr_emailfilter_profile_gmail",
    "description": "Gmail.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_gmail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_gmail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_imap": {
    "prefix": "fmgr_emailfilter_profile_imap",
    "description": "IMAP.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_imap:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_imap: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_mapi": {
    "prefix": "fmgr_emailfilter_profile_mapi",
    "description": "MAPI.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_mapi:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_mapi: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_msnhotmail": {
    "prefix": "fmgr_emailfilter_profile_msnhotmail",
    "description": "MSN Hotmail.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_msnhotmail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_msnhotmail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_otherwebmails": {
    "prefix": "fmgr_emailfilter_profile_otherwebmails",
    "description": "Other supported webmails.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_otherwebmails:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_otherwebmails: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_pop3": {
    "prefix": "fmgr_emailfilter_profile_pop3",
    "description": "POP3.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_pop3:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_pop3: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_smtp": {
    "prefix": "fmgr_emailfilter_profile_smtp",
    "description": "SMTP.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_smtp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_smtp: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_emailfilter_profile_yahoomail": {
    "prefix": "fmgr_emailfilter_profile_yahoomail",
    "description": "Yahoo! Mail.",
    "body": [
      "fortinet.fortimanager.fmgr_emailfilter_profile_yahoomail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#emailfilter_profile_yahoomail: ${5:}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_endpointcontrol_fctems": {
    "prefix": "fmgr_endpointcontrol_fctems",
    "description": "Configure FortiClient Enterprise Management Server",
    "body": [
      "fortinet.fortimanager.fmgr_endpointcontrol_fctems:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#endpointcontrol_fctems: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_exec_fgfm_reclaimdevtunnel": {
    "prefix": "fmgr_exec_fgfm_reclaimdevtunnel",
    "description": "Reclaim management tunnel to device.",
    "body": [
      "fortinet.fortimanager.fmgr_exec_fgfm_reclaimdevtunnel:",
      "\tdevice_name: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#exec_fgfm_reclaimdevtunnel: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_export_playbooks": {
    "prefix": "fmgr_export_playbooks",
    "description": "Export fortimanager configuration as playbooks.",
    "body": [
      "fortinet.fortimanager.fmgr_export_playbooks:",
      "\texport_playbooks: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#workspace_locking_adom: ${5:}",
      "\t#workspace_locking_timeout: ${6:300}"
    ]
  },
  "fmgr_extendercontroller_dataplan": {
    "prefix": "fmgr_extendercontroller_dataplan",
    "description": "FortiExtender dataplan configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_dataplan:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_dataplan: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile": {
    "prefix": "fmgr_extendercontroller_extenderprofile",
    "description": "FortiExtender extender profile configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular",
    "description": "FortiExtender cellular configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_controllerreport": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_controllerreport",
    "description": "FortiExtender controller report configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_controllerreport:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_controllerreport: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_modem1": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_modem1",
    "description": "Configuration options for modem 1.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_modem1:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_modem1: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_modem1_autoswitch": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_modem1_autoswitch",
    "description": "FortiExtender auto switch configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_modem1_autoswitch:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_modem1_autoswitch: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_modem2": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_modem2",
    "description": "Configuration options for modem 2.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_modem2:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_modem2: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_modem2_autoswitch": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_modem2_autoswitch",
    "description": "FortiExtender auto switch configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_modem2_autoswitch:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_modem2_autoswitch: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_smsnotification": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_smsnotification",
    "description": "FortiExtender cellular SMS notification configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_smsnotification:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_smsnotification: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_smsnotification_alert": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_smsnotification_alert",
    "description": "SMS alert list.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_smsnotification_alert:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_cellular_smsnotification_alert: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_cellular_smsnotification_receiver": {
    "prefix": "fmgr_extendercontroller_extenderprofile_cellular_smsnotification_receiver",
    "description": "SMS notification receiver list.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_cellular_smsnotification_receiver:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#extendercontroller_extenderprofile_cellular_smsnotification_receiver: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_lanextension": {
    "prefix": "fmgr_extendercontroller_extenderprofile_lanextension",
    "description": "FortiExtender lan extension configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_lanextension:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_extenderprofile_lanextension: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_extenderprofile_lanextension_backhaul": {
    "prefix": "fmgr_extendercontroller_extenderprofile_lanextension_backhaul",
    "description": "LAN extension backhaul tunnel configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_extenderprofile_lanextension_backhaul:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#extendercontroller_extenderprofile_lanextension_backhaul: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_extendercontroller_simprofile": {
    "prefix": "fmgr_extendercontroller_simprofile",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_simprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_simprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_simprofile_autoswitchprofile": {
    "prefix": "fmgr_extendercontroller_simprofile_autoswitchprofile",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_simprofile_autoswitchprofile:",
      "\tadom: ${1:}",
      "\tsim_profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_simprofile_autoswitchprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extendercontroller_template": {
    "prefix": "fmgr_extendercontroller_template",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_extendercontroller_template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extendercontroller_template: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_dataplan": {
    "prefix": "fmgr_extensioncontroller_dataplan",
    "description": "FortiExtender dataplan configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_dataplan:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_dataplan: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile": {
    "prefix": "fmgr_extensioncontroller_extenderprofile",
    "description": "FortiExtender extender profile configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular",
    "description": "FortiExtender cellular configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_controllerreport": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_controllerreport",
    "description": "FortiExtender controller report configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_controllerreport:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_controllerreport: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_modem1": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_modem1",
    "description": "Configuration options for modem 1.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_modem1:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_modem1: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_modem1_autoswitch": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_modem1_autoswitch",
    "description": "FortiExtender auto switch configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_modem1_autoswitch:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_modem1_autoswitch: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_modem2": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_modem2",
    "description": "Configuration options for modem 2.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_modem2:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_modem2: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_modem2_autoswitch": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_modem2_autoswitch",
    "description": "FortiExtender auto switch configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_modem2_autoswitch:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_modem2_autoswitch: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification",
    "description": "FortiExtender cellular SMS notification configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_smsnotification:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_smsnotification: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_alert": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_alert",
    "description": "SMS alert list.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_alert:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_cellular_smsnotification_alert: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_receiver": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_receiver",
    "description": "SMS notification receiver list.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_cellular_smsnotification_receiver:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#extensioncontroller_extenderprofile_cellular_smsnotification_receiver: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_lanextension": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_lanextension",
    "description": "FortiExtender lan extension configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_lanextension:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#extensioncontroller_extenderprofile_lanextension: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_extensioncontroller_extenderprofile_lanextension_backhaul": {
    "prefix": "fmgr_extensioncontroller_extenderprofile_lanextension_backhaul",
    "description": "LAN extension backhaul tunnel configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_extensioncontroller_extenderprofile_lanextension_backhaul:",
      "\tadom: ${1:}",
      "\textender-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#extensioncontroller_extenderprofile_lanextension_backhaul: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fact": {
    "prefix": "fmgr_fact",
    "description": "Gather fortimanager facts.",
    "body": [
      "fortinet.fortimanager.fmgr_fact:",
      "\tfacts: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_filefilter_profile": {
    "prefix": "fmgr_filefilter_profile",
    "description": "Configure file-filter profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_filefilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#filefilter_profile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_filefilter_profile_rules": {
    "prefix": "fmgr_filefilter_profile_rules",
    "description": "File filter rules.",
    "body": [
      "fortinet.fortimanager.fmgr_filefilter_profile_rules:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#filefilter_profile_rules: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy": {
    "prefix": "fmgr_firewall_accessproxy",
    "description": "Configure Access Proxy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_accessproxy: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_accessproxy6": {
    "prefix": "fmgr_firewall_accessproxy6",
    "description": "Configure IPv6 access proxy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_accessproxy6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway",
    "description": "Set IPv4 API Gateway.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy6_apigateway: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway6": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway6",
    "description": "Set IPv6 API Gateway.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway6:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy6_apigateway6: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway6_realservers": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway6_realservers",
    "description": "Select the real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway6_realservers:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy6_apigateway6_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway6_sslciphersuites": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway6_sslciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway6_sslciphersuites:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy6_apigateway6_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway_realservers": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway_realservers",
    "description": "Select the real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway_realservers:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy6_apigateway_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy6_apigateway_sslciphersuites": {
    "prefix": "fmgr_firewall_accessproxy6_apigateway_sslciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy6_apigateway_sslciphersuites:",
      "\taccess-proxy6: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy6_apigateway_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway": {
    "prefix": "fmgr_firewall_accessproxy_apigateway",
    "description": "Set API Gateway.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_apigateway: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway6": {
    "prefix": "fmgr_firewall_accessproxy_apigateway6",
    "description": "Set IPv6 API Gateway.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway6:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_apigateway6: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway6_realservers": {
    "prefix": "fmgr_firewall_accessproxy_apigateway6_realservers",
    "description": "Select the real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway6_realservers:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy_apigateway6_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway6_sslciphersuites": {
    "prefix": "fmgr_firewall_accessproxy_apigateway6_sslciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway6_sslciphersuites:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy_apigateway6_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway_realservers": {
    "prefix": "fmgr_firewall_accessproxy_apigateway_realservers",
    "description": "Select the real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway_realservers:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy_apigateway_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_apigateway_sslciphersuites": {
    "prefix": "fmgr_firewall_accessproxy_apigateway_sslciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_apigateway_sslciphersuites:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tapi-gateway: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_accessproxy_apigateway_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_accessproxy_realservers": {
    "prefix": "fmgr_firewall_accessproxy_realservers",
    "description": "Select the SSL real servers that this Access Proxy will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_realservers:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxy_serverpubkeyauthsettings": {
    "prefix": "fmgr_firewall_accessproxy_serverpubkeyauthsettings",
    "description": "Server SSH public key authentication settings.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_serverpubkeyauthsettings:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_accessproxy_serverpubkeyauthsettings: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_accessproxy_serverpubkeyauthsettings_certextension": {
    "prefix": "fmgr_firewall_accessproxy_serverpubkeyauthsettings_certextension",
    "description": "Configure certificate extension for user certificate.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxy_serverpubkeyauthsettings_certextension:",
      "\taccess-proxy: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_accessproxy_serverpubkeyauthsettings_certextension: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_accessproxyvirtualhost": {
    "prefix": "fmgr_firewall_accessproxyvirtualhost",
    "description": "Configure Access Proxy virtual hosts.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_accessproxyvirtualhost:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_accessproxyvirtualhost: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_address": {
    "prefix": "fmgr_firewall_address",
    "description": "Configure IPv4 addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_address: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_address6": {
    "prefix": "fmgr_firewall_address6",
    "description": "Configure IPv6 firewall addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_address6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_address6_dynamicmapping": {
    "prefix": "fmgr_firewall_address6_dynamicmapping",
    "description": "Configure IPv6 firewall addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_dynamicmapping:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6_dynamicmapping_subnetsegment": {
    "prefix": "fmgr_firewall_address6_dynamicmapping_subnetsegment",
    "description": "IPv6 subnet segments.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_dynamicmapping_subnetsegment:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tdynamic_mapping: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_address6_dynamicmapping_subnetsegment: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_address6_list": {
    "prefix": "fmgr_firewall_address6_list",
    "description": "IP address list.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_list:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_list: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6_profilelist": {
    "prefix": "fmgr_firewall_address6_profilelist",
    "description": "List of NSX service profiles that use this address.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_profilelist:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_profilelist: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6_subnetsegment": {
    "prefix": "fmgr_firewall_address6_subnetsegment",
    "description": "IPv6 subnet segments.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_subnetsegment:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_subnetsegment: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6_tagging": {
    "prefix": "fmgr_firewall_address6_tagging",
    "description": "Config object tagging",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6_tagging:",
      "\taddress6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6template": {
    "prefix": "fmgr_firewall_address6template",
    "description": "Configure IPv6 address templates.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_address6template: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_address6template_subnetsegment": {
    "prefix": "fmgr_firewall_address6template_subnetsegment",
    "description": "IPv6 subnet segments.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6template_subnetsegment:",
      "\taddress6-template: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address6template_subnetsegment: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address6template_subnetsegment_values": {
    "prefix": "fmgr_firewall_address6template_subnetsegment_values",
    "description": "Subnet segment values.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address6template_subnetsegment_values:",
      "\taddress6-template: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tsubnet-segment: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_address6template_subnetsegment_values: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_address_dynamicmapping": {
    "prefix": "fmgr_firewall_address_dynamicmapping",
    "description": "Configure IPv4 addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address_dynamicmapping:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address_list": {
    "prefix": "fmgr_firewall_address_list",
    "description": "IP address list.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address_list:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address_list: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address_profilelist": {
    "prefix": "fmgr_firewall_address_profilelist",
    "description": "List of NSX service profiles that use this address.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address_profilelist:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address_profilelist: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_address_tagging": {
    "prefix": "fmgr_firewall_address_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_address_tagging:",
      "\taddress: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_address_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_addrgrp": {
    "prefix": "fmgr_firewall_addrgrp",
    "description": "Configure IPv4 address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_addrgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_addrgrp6": {
    "prefix": "fmgr_firewall_addrgrp6",
    "description": "Configure IPv6 address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_addrgrp6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_addrgrp6_dynamicmapping": {
    "prefix": "fmgr_firewall_addrgrp6_dynamicmapping",
    "description": "Configure IPv6 address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp6_dynamicmapping:",
      "\taddrgrp6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_addrgrp6_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_addrgrp6_tagging": {
    "prefix": "fmgr_firewall_addrgrp6_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp6_tagging:",
      "\taddrgrp6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_addrgrp6_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_addrgrp_dynamicmapping": {
    "prefix": "fmgr_firewall_addrgrp_dynamicmapping",
    "description": "Configure IPv4 address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp_dynamicmapping:",
      "\taddrgrp: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_addrgrp_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_addrgrp_tagging": {
    "prefix": "fmgr_firewall_addrgrp_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_addrgrp_tagging:",
      "\taddrgrp: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_addrgrp_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_carrierendpointbwl": {
    "prefix": "fmgr_firewall_carrierendpointbwl",
    "description": "Carrier end point black/white list tables.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_carrierendpointbwl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_carrierendpointbwl: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_carrierendpointbwl_entries": {
    "prefix": "fmgr_firewall_carrierendpointbwl_entries",
    "description": "Carrier end point black/white list.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_carrierendpointbwl_entries:",
      "\tadom: ${1:}",
      "\tcarrier-endpoint-bwl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_carrierendpointbwl_entries: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_decryptedtrafficmirror": {
    "prefix": "fmgr_firewall_decryptedtrafficmirror",
    "description": "Configure decrypted traffic mirror.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_decryptedtrafficmirror:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_decryptedtrafficmirror: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_explicitproxyaddress": {
    "prefix": "fmgr_firewall_explicitproxyaddress",
    "description": "Explicit web proxy address configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_explicitproxyaddress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_explicitproxyaddress: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_explicitproxyaddress_headergroup": {
    "prefix": "fmgr_firewall_explicitproxyaddress_headergroup",
    "description": "HTTP header group.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_explicitproxyaddress_headergroup:",
      "\tadom: ${1:}",
      "\texplicit-proxy-address: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_explicitproxyaddress_headergroup: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_explicitproxyaddrgrp": {
    "prefix": "fmgr_firewall_explicitproxyaddrgrp",
    "description": "Explicit web proxy address group configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_explicitproxyaddrgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_explicitproxyaddrgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp": {
    "prefix": "fmgr_firewall_gtp",
    "description": "Configure GTP.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_apn": {
    "prefix": "fmgr_firewall_gtp_apn",
    "description": "APN.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_apn:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_apn: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_ieremovepolicy": {
    "prefix": "fmgr_firewall_gtp_ieremovepolicy",
    "description": "IE remove policy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_ieremovepolicy:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_ieremovepolicy: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_ievalidation": {
    "prefix": "fmgr_firewall_gtp_ievalidation",
    "description": "IE validation.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_ievalidation:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_ievalidation: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_imsi": {
    "prefix": "fmgr_firewall_gtp_imsi",
    "description": "IMSI.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_imsi:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_imsi: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_ippolicy": {
    "prefix": "fmgr_firewall_gtp_ippolicy",
    "description": "IP policy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_ippolicy:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_ippolicy: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_messagefilter": {
    "prefix": "fmgr_firewall_gtp_messagefilter",
    "description": "Message filter.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messagefilter:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messagefilter: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_messageratelimit": {
    "prefix": "fmgr_firewall_gtp_messageratelimit",
    "description": "Message rate limiting.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messageratelimit:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messageratelimit: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_messageratelimitv0": {
    "prefix": "fmgr_firewall_gtp_messageratelimitv0",
    "description": "Message rate limiting for GTP version 0.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messageratelimitv0:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messageratelimitv0: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_messageratelimitv1": {
    "prefix": "fmgr_firewall_gtp_messageratelimitv1",
    "description": "Message rate limiting for GTP version 1.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messageratelimitv1:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messageratelimitv1: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_messageratelimitv2": {
    "prefix": "fmgr_firewall_gtp_messageratelimitv2",
    "description": "Message rate limiting for GTP version 2.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_messageratelimitv2:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_gtp_messageratelimitv2: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_gtp_noippolicy": {
    "prefix": "fmgr_firewall_gtp_noippolicy",
    "description": "No IP policy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_noippolicy:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_noippolicy: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_perapnshaper": {
    "prefix": "fmgr_firewall_gtp_perapnshaper",
    "description": "Per APN shaper.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_perapnshaper:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_perapnshaper: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_policy": {
    "prefix": "fmgr_firewall_gtp_policy",
    "description": "Policy.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_policy:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_policy: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_gtp_policyv2": {
    "prefix": "fmgr_firewall_gtp_policyv2",
    "description": "Apply allow or deny action to each GTPv2-c packet.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_gtp_policyv2:",
      "\tadom: ${1:}",
      "\tgtp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_gtp_policyv2: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_identitybasedroute": {
    "prefix": "fmgr_firewall_identitybasedroute",
    "description": "Configure identity based routing.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_identitybasedroute:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_identitybasedroute: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_identitybasedroute_rule": {
    "prefix": "fmgr_firewall_identitybasedroute_rule",
    "description": "Rule.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_identitybasedroute_rule:",
      "\tadom: ${1:}",
      "\tidentity-based-route: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_identitybasedroute_rule: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_internetservice": {
    "prefix": "fmgr_firewall_internetservice",
    "description": "Show Internet Service application.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservice:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#firewall_internetservice: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_firewall_internetservice_entry": {
    "prefix": "fmgr_firewall_internetservice_entry",
    "description": "Entries in the Internet Service database.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservice_entry:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservice_entry: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetserviceaddition": {
    "prefix": "fmgr_firewall_internetserviceaddition",
    "description": "Configure Internet Services Addition.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetserviceaddition:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetserviceaddition: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetserviceaddition_entry": {
    "prefix": "fmgr_firewall_internetserviceaddition_entry",
    "description": "Entries added to the Internet Service addition database.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetserviceaddition_entry:",
      "\tadom: ${1:}",
      "\tinternet-service-addition: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_internetserviceaddition_entry: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_internetserviceaddition_entry_portrange": {
    "prefix": "fmgr_firewall_internetserviceaddition_entry_portrange",
    "description": "Port ranges in the custom entry.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetserviceaddition_entry_portrange:",
      "\tadom: ${1:}",
      "\tentry: ${2:}",
      "\tinternet-service-addition: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_internetserviceaddition_entry_portrange: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom": {
    "prefix": "fmgr_firewall_internetservicecustom",
    "description": "Configure custom Internet Services.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservicecustom: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom_disableentry": {
    "prefix": "fmgr_firewall_internetservicecustom_disableentry",
    "description": "Disable entries in the Internet Service database.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom_disableentry:",
      "\tadom: ${1:}",
      "\tinternet-service-custom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_internetservicecustom_disableentry: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom_disableentry_iprange": {
    "prefix": "fmgr_firewall_internetservicecustom_disableentry_iprange",
    "description": "IP ranges in the disable entry.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom_disableentry_iprange:",
      "\tadom: ${1:}",
      "\tdisable-entry: ${2:}",
      "\tinternet-service-custom: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_internetservicecustom_disableentry_iprange: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom_entry": {
    "prefix": "fmgr_firewall_internetservicecustom_entry",
    "description": "Entries added to the Internet Service database and custom database.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom_entry:",
      "\tadom: ${1:}",
      "\tinternet-service-custom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_internetservicecustom_entry: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_internetservicecustom_entry_portrange": {
    "prefix": "fmgr_firewall_internetservicecustom_entry_portrange",
    "description": "Port ranges in the custom entry.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustom_entry_portrange:",
      "\tadom: ${1:}",
      "\tentry: ${2:}",
      "\tinternet-service-custom: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_internetservicecustom_entry_portrange: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_internetservicecustomgroup": {
    "prefix": "fmgr_firewall_internetservicecustomgroup",
    "description": "Configure custom Internet Service group.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicecustomgroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservicecustomgroup: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetservicegroup": {
    "prefix": "fmgr_firewall_internetservicegroup",
    "description": "Configure group of Internet Service.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicegroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservicegroup: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_internetservicename": {
    "prefix": "fmgr_firewall_internetservicename",
    "description": "Define internet service names.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_internetservicename:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_internetservicename: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_ippool": {
    "prefix": "fmgr_firewall_ippool",
    "description": "Configure IPv4 IP pools.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippool:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ippool: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_ippool6": {
    "prefix": "fmgr_firewall_ippool6",
    "description": "Configure IPv6 IP pools.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippool6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ippool6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_ippool6_dynamicmapping": {
    "prefix": "fmgr_firewall_ippool6_dynamicmapping",
    "description": "Configure IPv6 IP pools.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippool6_dynamicmapping:",
      "\tadom: ${1:}",
      "\tippool6: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_ippool6_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_ippool_dynamicmapping": {
    "prefix": "fmgr_firewall_ippool_dynamicmapping",
    "description": "Configure IPv4 IP pools.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippool_dynamicmapping:",
      "\tadom: ${1:}",
      "\tippool: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_ippool_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_ippoolgrp": {
    "prefix": "fmgr_firewall_ippoolgrp",
    "description": "Configure IPv4 pool groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ippoolgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ippoolgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_ldbmonitor": {
    "prefix": "fmgr_firewall_ldbmonitor",
    "description": "Configure server load balancing health monitors.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ldbmonitor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ldbmonitor: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile": {
    "prefix": "fmgr_firewall_mmsprofile",
    "description": "Configure MMS profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_dupe": {
    "prefix": "fmgr_firewall_mmsprofile_dupe",
    "description": "Duplicate configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_dupe:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile_dupe: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_flood": {
    "prefix": "fmgr_firewall_mmsprofile_flood",
    "description": "Flood configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_flood:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile_flood: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_notification": {
    "prefix": "fmgr_firewall_mmsprofile_notification",
    "description": "Notification configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_notification:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile_notification: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_notifmsisdn": {
    "prefix": "fmgr_firewall_mmsprofile_notifmsisdn",
    "description": "Notification for MSISDNs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_notifmsisdn:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_mmsprofile_notifmsisdn: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_mmsprofile_outbreakprevention": {
    "prefix": "fmgr_firewall_mmsprofile_outbreakprevention",
    "description": "Configure Virus Outbreak Prevention settings.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_mmsprofile_outbreakprevention:",
      "\tadom: ${1:}",
      "\tmms-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_mmsprofile_outbreakprevention: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_multicastaddress": {
    "prefix": "fmgr_firewall_multicastaddress",
    "description": "Configure multicast addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_multicastaddress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_multicastaddress: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_multicastaddress6": {
    "prefix": "fmgr_firewall_multicastaddress6",
    "description": "Configure IPv6 multicast address.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_multicastaddress6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_multicastaddress6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_multicastaddress6_tagging": {
    "prefix": "fmgr_firewall_multicastaddress6_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_multicastaddress6_tagging:",
      "\tadom: ${1:}",
      "\tmulticast-address6: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_multicastaddress6_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_multicastaddress_tagging": {
    "prefix": "fmgr_firewall_multicastaddress_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_multicastaddress_tagging:",
      "\tadom: ${1:}",
      "\tmulticast-address: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_multicastaddress_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_networkservicedynamic": {
    "prefix": "fmgr_firewall_networkservicedynamic",
    "description": "Configure Dynamic Network Services.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_networkservicedynamic:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_networkservicedynamic: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profilegroup": {
    "prefix": "fmgr_firewall_profilegroup",
    "description": "Configure profile groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profilegroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profilegroup: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions": {
    "prefix": "fmgr_firewall_profileprotocoloptions",
    "description": "Configure protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_cifs": {
    "prefix": "fmgr_firewall_profileprotocoloptions_cifs",
    "description": "Configure CIFS protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_cifs:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_cifs: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_cifs_filefilter": {
    "prefix": "fmgr_firewall_profileprotocoloptions_cifs_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_cifs_filefilter:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_cifs_filefilter: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_cifs_filefilter_entries": {
    "prefix": "fmgr_firewall_profileprotocoloptions_cifs_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_cifs_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_profileprotocoloptions_cifs_filefilter_entries: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_cifs_serverkeytab": {
    "prefix": "fmgr_firewall_profileprotocoloptions_cifs_serverkeytab",
    "description": "Server keytab.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_cifs_serverkeytab:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_profileprotocoloptions_cifs_serverkeytab: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_dns": {
    "prefix": "fmgr_firewall_profileprotocoloptions_dns",
    "description": "Configure DNS protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_dns:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_dns: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_ftp": {
    "prefix": "fmgr_firewall_profileprotocoloptions_ftp",
    "description": "Configure FTP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_ftp:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_ftp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_http": {
    "prefix": "fmgr_firewall_profileprotocoloptions_http",
    "description": "Configure HTTP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_http:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_http: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_imap": {
    "prefix": "fmgr_firewall_profileprotocoloptions_imap",
    "description": "Configure IMAP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_imap:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_imap: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_mailsignature": {
    "prefix": "fmgr_firewall_profileprotocoloptions_mailsignature",
    "description": "Configure Mail signature.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_mailsignature:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_mailsignature: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_mapi": {
    "prefix": "fmgr_firewall_profileprotocoloptions_mapi",
    "description": "Configure MAPI protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_mapi:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_mapi: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_nntp": {
    "prefix": "fmgr_firewall_profileprotocoloptions_nntp",
    "description": "Configure NNTP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_nntp:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_nntp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_pop3": {
    "prefix": "fmgr_firewall_profileprotocoloptions_pop3",
    "description": "Configure POP3 protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_pop3:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_pop3: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_smtp": {
    "prefix": "fmgr_firewall_profileprotocoloptions_smtp",
    "description": "Configure SMTP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_smtp:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_smtp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_profileprotocoloptions_ssh": {
    "prefix": "fmgr_firewall_profileprotocoloptions_ssh",
    "description": "Configure SFTP and SCP protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_profileprotocoloptions_ssh:",
      "\tadom: ${1:}",
      "\tprofile-protocol-options: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_profileprotocoloptions_ssh: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_proxyaddress": {
    "prefix": "fmgr_firewall_proxyaddress",
    "description": "Web proxy address configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_proxyaddress: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_proxyaddress_headergroup": {
    "prefix": "fmgr_firewall_proxyaddress_headergroup",
    "description": "HTTP header group.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddress_headergroup:",
      "\tadom: ${1:}",
      "\tproxy-address: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_proxyaddress_headergroup: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_proxyaddress_tagging": {
    "prefix": "fmgr_firewall_proxyaddress_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddress_tagging:",
      "\tadom: ${1:}",
      "\tproxy-address: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_proxyaddress_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_proxyaddrgrp": {
    "prefix": "fmgr_firewall_proxyaddrgrp",
    "description": "Web proxy address group configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddrgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_proxyaddrgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_proxyaddrgrp_tagging": {
    "prefix": "fmgr_firewall_proxyaddrgrp_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_proxyaddrgrp_tagging:",
      "\tadom: ${1:}",
      "\tproxy-addrgrp: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_proxyaddrgrp_tagging: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_schedule_group": {
    "prefix": "fmgr_firewall_schedule_group",
    "description": "Schedule group configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_schedule_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_schedule_group: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_schedule_onetime": {
    "prefix": "fmgr_firewall_schedule_onetime",
    "description": "Onetime schedule configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_schedule_onetime:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_schedule_onetime: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_schedule_recurring": {
    "prefix": "fmgr_firewall_schedule_recurring",
    "description": "Recurring schedule configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_schedule_recurring:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_schedule_recurring: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_service_category": {
    "prefix": "fmgr_firewall_service_category",
    "description": "Configure service categories.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_service_category:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_service_category: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_service_custom": {
    "prefix": "fmgr_firewall_service_custom",
    "description": "Configure custom services.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_service_custom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_service_custom: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_service_group": {
    "prefix": "fmgr_firewall_service_group",
    "description": "Configure service groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_service_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_service_group: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_shaper_peripshaper": {
    "prefix": "fmgr_firewall_shaper_peripshaper",
    "description": "Configure per-IP traffic shaper.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_shaper_peripshaper:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_shaper_peripshaper: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_shaper_trafficshaper": {
    "prefix": "fmgr_firewall_shaper_trafficshaper",
    "description": "Configure shared traffic shaper.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_shaper_trafficshaper:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_shaper_trafficshaper: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_shapingprofile": {
    "prefix": "fmgr_firewall_shapingprofile",
    "description": "Configure shaping profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_shapingprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_shapingprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_shapingprofile_shapingentries": {
    "prefix": "fmgr_firewall_shapingprofile_shapingentries",
    "description": "Define shaping entries of this shaping profile.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_shapingprofile_shapingentries:",
      "\tadom: ${1:}",
      "\tshaping-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_shapingprofile_shapingentries: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_ssh_localca": {
    "prefix": "fmgr_firewall_ssh_localca",
    "description": "SSH proxy local CA.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_ssh_localca:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_ssh_localca: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile": {
    "prefix": "fmgr_firewall_sslsshprofile",
    "description": "Configure SSL/SSH protocol options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_dot": {
    "prefix": "fmgr_firewall_sslsshprofile_dot",
    "description": "Configure DNS over TLS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_dot:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_dot: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_ftps": {
    "prefix": "fmgr_firewall_sslsshprofile_ftps",
    "description": "Configure FTPS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_ftps:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_ftps: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_https": {
    "prefix": "fmgr_firewall_sslsshprofile_https",
    "description": "Configure HTTPS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_https:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_https: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_imaps": {
    "prefix": "fmgr_firewall_sslsshprofile_imaps",
    "description": "Configure IMAPS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_imaps:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_imaps: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_pop3s": {
    "prefix": "fmgr_firewall_sslsshprofile_pop3s",
    "description": "Configure POP3S options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_pop3s:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_pop3s: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_smtps": {
    "prefix": "fmgr_firewall_sslsshprofile_smtps",
    "description": "Configure SMTPS options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_smtps:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_smtps: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_ssh": {
    "prefix": "fmgr_firewall_sslsshprofile_ssh",
    "description": "Configure SSH options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_ssh:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_ssh: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_ssl": {
    "prefix": "fmgr_firewall_sslsshprofile_ssl",
    "description": "Configure SSL options.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_ssl:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_sslsshprofile_ssl: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_sslexempt": {
    "prefix": "fmgr_firewall_sslsshprofile_sslexempt",
    "description": "Servers to exempt from SSL inspection.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_sslexempt:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_sslsshprofile_sslexempt: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_sslsshprofile_sslserver": {
    "prefix": "fmgr_firewall_sslsshprofile_sslserver",
    "description": "SSL servers.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_sslsshprofile_sslserver:",
      "\tadom: ${1:}",
      "\tssl-ssh-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_sslsshprofile_sslserver: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_trafficclass": {
    "prefix": "fmgr_firewall_trafficclass",
    "description": "Configure names for shaping classes.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_trafficclass:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_trafficclass: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip": {
    "prefix": "fmgr_firewall_vip",
    "description": "Configure virtual IP for IPv4.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip46": {
    "prefix": "fmgr_firewall_vip46",
    "description": "Configure IPv4 to IPv6 virtual IPs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip46:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip46: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip46_dynamicmapping": {
    "prefix": "fmgr_firewall_vip46_dynamicmapping",
    "description": "Configure IPv4 to IPv6 virtual IPs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip46_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip46: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip46_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip46_realservers": {
    "prefix": "fmgr_firewall_vip46_realservers",
    "description": "Real servers.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip46_realservers:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip46: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip46_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6": {
    "prefix": "fmgr_firewall_vip6",
    "description": "Configure virtual IP for IPv6.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip64": {
    "prefix": "fmgr_firewall_vip64",
    "description": "Configure IPv6 to IPv4 virtual IPs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip64:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vip64: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vip64_dynamicmapping": {
    "prefix": "fmgr_firewall_vip64_dynamicmapping",
    "description": "Configure IPv6 to IPv4 virtual IPs.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip64_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip64: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip64_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip64_realservers": {
    "prefix": "fmgr_firewall_vip64_realservers",
    "description": "Real servers.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip64_realservers:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip64: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip64_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6_dynamicmapping": {
    "prefix": "fmgr_firewall_vip6_dynamicmapping",
    "description": "Configure virtual IP for IPv6.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip6_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6_dynamicmapping_realservers": {
    "prefix": "fmgr_firewall_vip6_dynamicmapping_realservers",
    "description": "Select the real servers that this server load balancing VIP will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_dynamicmapping_realservers:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvip6: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_vip6_dynamicmapping_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_vip6_dynamicmapping_sslciphersuites": {
    "prefix": "fmgr_firewall_vip6_dynamicmapping_sslciphersuites",
    "description": "SSL/TLS cipher suites acceptable from a client, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_dynamicmapping_sslciphersuites:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvip6: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_vip6_dynamicmapping_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_vip6_realservers": {
    "prefix": "fmgr_firewall_vip6_realservers",
    "description": "Select the real servers that this server load balancing VIP will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_realservers:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip6_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6_sslciphersuites": {
    "prefix": "fmgr_firewall_vip6_sslciphersuites",
    "description": "SSL/TLS cipher suites acceptable from a client, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_sslciphersuites:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip6_sslciphersuites: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip6_sslserverciphersuites": {
    "prefix": "fmgr_firewall_vip6_sslserverciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip6_sslserverciphersuites:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip6: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip6_sslserverciphersuites: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip_dynamicmapping": {
    "prefix": "fmgr_firewall_vip_dynamicmapping",
    "description": "Configure virtual IP for IPv4.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip_dynamicmapping_realservers": {
    "prefix": "fmgr_firewall_vip_dynamicmapping_realservers",
    "description": "Select the real servers that this server load balancing VIP will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_dynamicmapping_realservers:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvip: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_vip_dynamicmapping_realservers: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_vip_dynamicmapping_sslciphersuites": {
    "prefix": "fmgr_firewall_vip_dynamicmapping_sslciphersuites",
    "description": "SSL/TLS cipher suites acceptable from a client, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_dynamicmapping_sslciphersuites:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvip: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#firewall_vip_dynamicmapping_sslciphersuites: ${8:}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_firewall_vip_realservers": {
    "prefix": "fmgr_firewall_vip_realservers",
    "description": "Select the real servers that this server load balancing VIP will distribute traffic to.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_realservers:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip_realservers: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip_sslciphersuites": {
    "prefix": "fmgr_firewall_vip_sslciphersuites",
    "description": "SSL/TLS cipher suites acceptable from a client, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_sslciphersuites:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip_sslciphersuites: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vip_sslserverciphersuites": {
    "prefix": "fmgr_firewall_vip_sslserverciphersuites",
    "description": "SSL/TLS cipher suites to offer to a server, ordered by priority.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vip_sslserverciphersuites:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvip: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vip_sslserverciphersuites: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_vipgrp": {
    "prefix": "fmgr_firewall_vipgrp",
    "description": "Configure IPv4 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vipgrp: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vipgrp46": {
    "prefix": "fmgr_firewall_vipgrp46",
    "description": "Configure IPv4 to IPv6 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp46:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vipgrp46: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vipgrp6": {
    "prefix": "fmgr_firewall_vipgrp6",
    "description": "Configure IPv6 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vipgrp6: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vipgrp64": {
    "prefix": "fmgr_firewall_vipgrp64",
    "description": "Configure IPv6 to IPv4 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp64:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_vipgrp64: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_vipgrp_dynamicmapping": {
    "prefix": "fmgr_firewall_vipgrp_dynamicmapping",
    "description": "Configure IPv4 virtual IP groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_vipgrp_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvipgrp: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#firewall_vipgrp_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_firewall_wildcardfqdn_custom": {
    "prefix": "fmgr_firewall_wildcardfqdn_custom",
    "description": "Config global/VDOM Wildcard FQDN address.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_wildcardfqdn_custom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_wildcardfqdn_custom: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_firewall_wildcardfqdn_group": {
    "prefix": "fmgr_firewall_wildcardfqdn_group",
    "description": "Config global Wildcard FQDN address groups.",
    "body": [
      "fortinet.fortimanager.fmgr_firewall_wildcardfqdn_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_wildcardfqdn_group: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fmg_device_blueprint": {
    "prefix": "fmgr_fmg_device_blueprint",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_device_blueprint:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#fmg_device_blueprint: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fmg_fabric_authorization_template": {
    "prefix": "fmgr_fmg_fabric_authorization_template",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_fabric_authorization_template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#fmg_fabric_authorization_template: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fmg_fabric_authorization_template_platforms": {
    "prefix": "fmgr_fmg_fabric_authorization_template_platforms",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_fabric_authorization_template_platforms:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\ttemplate: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#fmg_fabric_authorization_template_platforms: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fmg_variable": {
    "prefix": "fmgr_fmg_variable",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_variable:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#fmg_variable: ${6:}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fmg_variable_dynamicmapping": {
    "prefix": "fmgr_fmg_variable_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fmg_variable_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvariable: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#fmg_variable_dynamicmapping: ${7:}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fmupdate_analyzer_virusreport": {
    "prefix": "fmgr_fmupdate_analyzer_virusreport",
    "description": "Send virus detection notification to FortiGuard.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_analyzer_virusreport:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_analyzer_virusreport: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_avips_advancedlog": {
    "prefix": "fmgr_fmupdate_avips_advancedlog",
    "description": "Enable/disable logging of FortiGuard antivirus and IPS update packages received by FortiManagers built-in FortiGuard.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_avips_advancedlog:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_avips_advancedlog: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_avips_webproxy": {
    "prefix": "fmgr_fmupdate_avips_webproxy",
    "description": "Configure the web proxy for use with FortiGuard antivirus and IPS updates.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_avips_webproxy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_avips_webproxy: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_customurllist": {
    "prefix": "fmgr_fmupdate_customurllist",
    "description": "Configure the URL database for rating and filtering.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_customurllist:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_customurllist: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_diskquota": {
    "prefix": "fmgr_fmupdate_diskquota",
    "description": "Configure disk space available for use by the Upgrade Manager.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_diskquota:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_diskquota: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fctservices": {
    "prefix": "fmgr_fmupdate_fctservices",
    "description": "Configure FortiGuard to provide services to FortiClient installations.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fctservices:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fctservices: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting": {
    "prefix": "fmgr_fmupdate_fdssetting",
    "description": "Configure FortiGuard settings.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_pushoverride": {
    "prefix": "fmgr_fmupdate_fdssetting_pushoverride",
    "description": "Enable/disable push updates, and override the default IP address and port used by FortiGuard to send antivirus and IPS push messages for ...",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_pushoverride:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting_pushoverride: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_pushoverridetoclient": {
    "prefix": "fmgr_fmupdate_fdssetting_pushoverridetoclient",
    "description": "Enable/disable push updates, and override the default IP address and port used by FortiGuard to send antivirus and IPS push messages for ...",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_pushoverridetoclient:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting_pushoverridetoclient: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_pushoverridetoclient_announceip": {
    "prefix": "fmgr_fmupdate_fdssetting_pushoverridetoclient_announceip",
    "description": "Announce IP addresses for the device.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_pushoverridetoclient_announceip:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#fmupdate_fdssetting_pushoverridetoclient_announceip: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_serveroverride": {
    "prefix": "fmgr_fmupdate_fdssetting_serveroverride",
    "description": "Server override configure.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_serveroverride:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting_serveroverride: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_serveroverride_servlist": {
    "prefix": "fmgr_fmupdate_fdssetting_serveroverride_servlist",
    "description": "Override server.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_serveroverride_servlist:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#fmupdate_fdssetting_serveroverride_servlist: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_fmupdate_fdssetting_updateschedule": {
    "prefix": "fmgr_fmupdate_fdssetting_updateschedule",
    "description": "Configure the schedule when built-in FortiGuard retrieves antivirus and IPS updates.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fdssetting_updateschedule:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fdssetting_updateschedule: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fwmsetting": {
    "prefix": "fmgr_fmupdate_fwmsetting",
    "description": "Configure firmware management settings.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fwmsetting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fwmsetting: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_fwmsetting_upgradetimeout": {
    "prefix": "fmgr_fmupdate_fwmsetting_upgradetimeout",
    "description": "Configure the timeout value of image upgrade process.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_fwmsetting_upgradetimeout:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_fwmsetting_upgradetimeout: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_multilayer": {
    "prefix": "fmgr_fmupdate_multilayer",
    "description": "Configure multilayer mode.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_multilayer:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_multilayer: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_publicnetwork": {
    "prefix": "fmgr_fmupdate_publicnetwork",
    "description": "Enable/disable access to the public FortiGuard.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_publicnetwork:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_publicnetwork: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_serveraccesspriorities": {
    "prefix": "fmgr_fmupdate_serveraccesspriorities",
    "description": "Configure priorities for FortiGate units accessing antivirus updates and web filtering services.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_serveraccesspriorities:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_serveraccesspriorities: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_serveraccesspriorities_privateserver": {
    "prefix": "fmgr_fmupdate_serveraccesspriorities_privateserver",
    "description": "Configure multiple FortiManager units and private servers.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_serveraccesspriorities_privateserver:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#fmupdate_serveraccesspriorities_privateserver: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_fmupdate_serveroverridestatus": {
    "prefix": "fmgr_fmupdate_serveroverridestatus",
    "description": "Configure strict/loose server override.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_serveroverridestatus:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_serveroverridestatus: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_service": {
    "prefix": "fmgr_fmupdate_service",
    "description": "Enable/disable services provided by the built-in FortiGuard.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_service:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_service: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_webspam_fgdsetting": {
    "prefix": "fmgr_fmupdate_webspam_fgdsetting",
    "description": "Configure the FortiGuard run parameters.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_webspam_fgdsetting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_webspam_fgdsetting: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_webspam_fgdsetting_serveroverride": {
    "prefix": "fmgr_fmupdate_webspam_fgdsetting_serveroverride",
    "description": "Server override configure.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_webspam_fgdsetting_serveroverride:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_webspam_fgdsetting_serveroverride: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fmupdate_webspam_fgdsetting_serveroverride_servlist": {
    "prefix": "fmgr_fmupdate_webspam_fgdsetting_serveroverride_servlist",
    "description": "Override server.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_webspam_fgdsetting_serveroverride_servlist:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#fmupdate_webspam_fgdsetting_serveroverride_servlist: ${5:}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_fmupdate_webspam_webproxy": {
    "prefix": "fmgr_fmupdate_webspam_webproxy",
    "description": "Configure the web proxy for use with FortiGuard antivirus and IPS updates.",
    "body": [
      "fortinet.fortimanager.fmgr_fmupdate_webspam_webproxy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#fmupdate_webspam_webproxy: ${4:}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_fsp_vlan": {
    "prefix": "fmgr_fsp_vlan",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#fsp_vlan: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver": {
    "prefix": "fmgr_fsp_vlan_dhcpserver",
    "description": "Configure DHCP servers.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver:",
      "\tadom: ${1:}",
      "\tvlan: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#fsp_vlan_dhcpserver: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver_excluderange": {
    "prefix": "fmgr_fsp_vlan_dhcpserver_excluderange",
    "description": "Exclude one or more ranges of IP addresses from being assigned to clients.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver_excluderange:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dhcpserver_excluderange: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver_iprange": {
    "prefix": "fmgr_fsp_vlan_dhcpserver_iprange",
    "description": "DHCP IP range configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver_iprange:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dhcpserver_iprange: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver_options": {
    "prefix": "fmgr_fsp_vlan_dhcpserver_options",
    "description": "DHCP options.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver_options:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dhcpserver_options: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dhcpserver_reservedaddress": {
    "prefix": "fmgr_fsp_vlan_dhcpserver_reservedaddress",
    "description": "Options for the DHCP server to assign IP settings to specific MAC addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dhcpserver_reservedaddress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dhcpserver_reservedaddress: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dynamicmapping: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver",
    "description": "Configure DHCP servers.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver_excluderange": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver_excluderange",
    "description": "Exclude one or more ranges of IP addresses from being assigned to clients.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver_excluderange:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver_excluderange: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver_iprange": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver_iprange",
    "description": "DHCP IP range configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver_iprange:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver_iprange: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver_options": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver_options",
    "description": "DHCP options.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver_options:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver_options: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_dhcpserver_reservedaddress": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_dhcpserver_reservedaddress",
    "description": "Options for the DHCP server to assign IP settings to specific MAC addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_dhcpserver_reservedaddress:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_dhcpserver_reservedaddress: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dynamicmapping_interface: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6",
    "description": "IPv6 of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist",
    "description": "Advertised IPv6 delegated prefix list.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr",
    "description": "Extra IPv6 address prefixes of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist",
    "description": "Advertised prefix list.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_vrrp6": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_ipv6_vrrp6",
    "description": "IPv6 VRRP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_ipv6_vrrp6:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_ipv6_vrrp6: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_secondaryip": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_secondaryip",
    "description": "Second IP address of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_secondaryip:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_secondaryip: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_vrrp": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_vrrp",
    "description": "VRRP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_vrrp:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_dynamicmapping_interface_vrrp: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_fsp_vlan_dynamicmapping_interface_vrrp_proxyarp": {
    "prefix": "fmgr_fsp_vlan_dynamicmapping_interface_vrrp_proxyarp",
    "description": "VRRP Proxy ARP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_dynamicmapping_interface_vrrp_proxyarp:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvlan: ${4:}",
      "\tvrrp: ${5:}",
      "\t#access_token: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#fsp_vlan_dynamicmapping_interface_vrrp_proxyarp: ${10:}",
      "\t#proposed_method: ${11:update|set|add}",
      "\t#rc_failed: ${12:}",
      "\t#rc_succeeded: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_fsp_vlan_interface": {
    "prefix": "fmgr_fsp_vlan_interface",
    "description": "Configure interfaces.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface:",
      "\tadom: ${1:}",
      "\tvlan: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#fsp_vlan_interface: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6",
    "description": "IPv6 of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6:",
      "\tadom: ${1:}",
      "\tvlan: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#fsp_vlan_interface_ipv6: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6_ip6delegatedprefixlist": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6_ip6delegatedprefixlist",
    "description": "Advertised IPv6 delegated prefix list.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6_ip6delegatedprefixlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_ipv6_ip6delegatedprefixlist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6_ip6extraaddr": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6_ip6extraaddr",
    "description": "Extra IPv6 address prefixes of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6_ip6extraaddr:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_ipv6_ip6extraaddr: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6_ip6prefixlist": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6_ip6prefixlist",
    "description": "Advertised prefix list.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6_ip6prefixlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_ipv6_ip6prefixlist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_ipv6_vrrp6": {
    "prefix": "fmgr_fsp_vlan_interface_ipv6_vrrp6",
    "description": "IPv6 VRRP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_ipv6_vrrp6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_ipv6_vrrp6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_secondaryip": {
    "prefix": "fmgr_fsp_vlan_interface_secondaryip",
    "description": "Second IP address of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_secondaryip:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_secondaryip: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_vrrp": {
    "prefix": "fmgr_fsp_vlan_interface_vrrp",
    "description": "VRRP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_vrrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#fsp_vlan_interface_vrrp: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_fsp_vlan_interface_vrrp_proxyarp": {
    "prefix": "fmgr_fsp_vlan_interface_vrrp_proxyarp",
    "description": "VRRP Proxy ARP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_fsp_vlan_interface_vrrp_proxyarp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvlan: ${3:}",
      "\tvrrp: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#fsp_vlan_interface_vrrp_proxyarp: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_generic": {
    "prefix": "fmgr_generic",
    "description": "Build and send generic FortiManager API request.",
    "body": [
      "fortinet.fortimanager.fmgr_generic:",
      "\t#enable_log: ${1:false}",
      "\t#forticloud_access_token: ${2:}",
      "\t#json: ${3:}",
      "\t#method: ${4:}",
      "\t#params: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_gtp_apn": {
    "prefix": "fmgr_gtp_apn",
    "description": "Configure APN for GTP.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_apn:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_apn: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_apngrp": {
    "prefix": "fmgr_gtp_apngrp",
    "description": "Configure APN groups for GTP.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_apngrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_apngrp: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_iewhitelist": {
    "prefix": "fmgr_gtp_iewhitelist",
    "description": "IE white list.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_iewhitelist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_iewhitelist: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_iewhitelist_entries": {
    "prefix": "fmgr_gtp_iewhitelist_entries",
    "description": "Entries of white list",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_iewhitelist_entries:",
      "\tadom: ${1:}",
      "\tie-white-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#gtp_iewhitelist_entries: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_gtp_messagefilterv0v1": {
    "prefix": "fmgr_gtp_messagefilterv0v1",
    "description": "Message filter for GTPv0/v1 messages.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_messagefilterv0v1:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_messagefilterv0v1: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_messagefilterv2": {
    "prefix": "fmgr_gtp_messagefilterv2",
    "description": "Message filter for GTPv2 messages.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_messagefilterv2:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_messagefilterv2: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_gtp_tunnellimit": {
    "prefix": "fmgr_gtp_tunnellimit",
    "description": "GTP tunnel limiter.",
    "body": [
      "fortinet.fortimanager.fmgr_gtp_tunnellimit:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#gtp_tunnellimit: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqp3gppcellular": {
    "prefix": "fmgr_hotspot20_anqp3gppcellular",
    "description": "Configure 3GPP public land mobile network",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqp3gppcellular:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqp3gppcellular: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqp3gppcellular_mccmnclist": {
    "prefix": "fmgr_hotspot20_anqp3gppcellular_mccmnclist",
    "description": "Mobile Country Code and Mobile Network Code configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqp3gppcellular_mccmnclist:",
      "\tadom: ${1:}",
      "\tanqp-3gpp-cellular: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqp3gppcellular_mccmnclist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_anqpipaddresstype": {
    "prefix": "fmgr_hotspot20_anqpipaddresstype",
    "description": "Configure IP address type availability.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpipaddresstype:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpipaddresstype: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqpnairealm": {
    "prefix": "fmgr_hotspot20_anqpnairealm",
    "description": "Configure network access identifier",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnairealm:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpnairealm: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqpnairealm_nailist": {
    "prefix": "fmgr_hotspot20_anqpnairealm_nailist",
    "description": "NAI list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnairealm_nailist:",
      "\tadom: ${1:}",
      "\tanqp-nai-realm: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqpnairealm_nailist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_anqpnairealm_nailist_eapmethod": {
    "prefix": "fmgr_hotspot20_anqpnairealm_nailist_eapmethod",
    "description": "EAP Methods.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnairealm_nailist_eapmethod:",
      "\tadom: ${1:}",
      "\tanqp-nai-realm: ${2:}",
      "\tnai-list: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#hotspot20_anqpnairealm_nailist_eapmethod: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam": {
    "prefix": "fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam",
    "description": "EAP auth param.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam:",
      "\tadom: ${1:}",
      "\tanqp-nai-realm: ${2:}",
      "\teap-method: ${3:}",
      "\tnai-list: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#access_token: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#hotspot20_anqpnairealm_nailist_eapmethod_authparam: ${10:}",
      "\t#proposed_method: ${11:update|set|add}",
      "\t#rc_failed: ${12:}",
      "\t#rc_succeeded: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_hotspot20_anqpnetworkauthtype": {
    "prefix": "fmgr_hotspot20_anqpnetworkauthtype",
    "description": "Configure network authentication type.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpnetworkauthtype:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpnetworkauthtype: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqproamingconsortium": {
    "prefix": "fmgr_hotspot20_anqproamingconsortium",
    "description": "Configure roaming consortium.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqproamingconsortium:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqproamingconsortium: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqproamingconsortium_oilist": {
    "prefix": "fmgr_hotspot20_anqproamingconsortium_oilist",
    "description": "Organization identifier list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqproamingconsortium_oilist:",
      "\tadom: ${1:}",
      "\tanqp-roaming-consortium: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqproamingconsortium_oilist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_anqpvenuename": {
    "prefix": "fmgr_hotspot20_anqpvenuename",
    "description": "Configure venue name duple.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpvenuename:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpvenuename: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqpvenuename_valuelist": {
    "prefix": "fmgr_hotspot20_anqpvenuename_valuelist",
    "description": "Name list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpvenuename_valuelist:",
      "\tadom: ${1:}",
      "\tanqp-venue-name: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqpvenuename_valuelist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_anqpvenueurl": {
    "prefix": "fmgr_hotspot20_anqpvenueurl",
    "description": "Configure venue URL.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpvenueurl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_anqpvenueurl: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_anqpvenueurl_valuelist": {
    "prefix": "fmgr_hotspot20_anqpvenueurl_valuelist",
    "description": "URL list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_anqpvenueurl_valuelist:",
      "\tadom: ${1:}",
      "\tanqp-venue-url: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_anqpvenueurl_valuelist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qpadviceofcharge": {
    "prefix": "fmgr_hotspot20_h2qpadviceofcharge",
    "description": "Configure advice of charge.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpadviceofcharge:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qpadviceofcharge: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qpadviceofcharge_aoclist": {
    "prefix": "fmgr_hotspot20_h2qpadviceofcharge_aoclist",
    "description": "AOC list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpadviceofcharge_aoclist:",
      "\tadom: ${1:}",
      "\th2qp-advice-of-charge: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qpadviceofcharge_aoclist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo": {
    "prefix": "fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo",
    "description": "Plan info.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpadviceofcharge_aoclist_planinfo:",
      "\tadom: ${1:}",
      "\taoc-list: ${2:}",
      "\th2qp-advice-of-charge: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#hotspot20_h2qpadviceofcharge_aoclist_planinfo: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_hotspot20_h2qpconncapability": {
    "prefix": "fmgr_hotspot20_h2qpconncapability",
    "description": "Configure connection capability.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpconncapability:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qpconncapability: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qpoperatorname": {
    "prefix": "fmgr_hotspot20_h2qpoperatorname",
    "description": "Configure operator friendly name.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpoperatorname:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qpoperatorname: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qpoperatorname_valuelist": {
    "prefix": "fmgr_hotspot20_h2qpoperatorname_valuelist",
    "description": "Name list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpoperatorname_valuelist:",
      "\tadom: ${1:}",
      "\th2qp-operator-name: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qpoperatorname_valuelist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovider": {
    "prefix": "fmgr_hotspot20_h2qposuprovider",
    "description": "Configure online sign up",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovider:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qposuprovider: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovider_friendlyname": {
    "prefix": "fmgr_hotspot20_h2qposuprovider_friendlyname",
    "description": "OSU provider friendly name.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovider_friendlyname:",
      "\tadom: ${1:}",
      "\th2qp-osu-provider: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qposuprovider_friendlyname: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovider_servicedescription": {
    "prefix": "fmgr_hotspot20_h2qposuprovider_servicedescription",
    "description": "OSU service name.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovider_servicedescription:",
      "\tadom: ${1:}",
      "\th2qp-osu-provider: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qposuprovider_servicedescription: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovidernai": {
    "prefix": "fmgr_hotspot20_h2qposuprovidernai",
    "description": "Configure online sign up",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovidernai:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qposuprovidernai: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qposuprovidernai_nailist": {
    "prefix": "fmgr_hotspot20_h2qposuprovidernai_nailist",
    "description": "OSU NAI list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qposuprovidernai_nailist:",
      "\tadom: ${1:}",
      "\th2qp-osu-provider-nai: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_h2qposuprovidernai_nailist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_h2qptermsandconditions": {
    "prefix": "fmgr_hotspot20_h2qptermsandconditions",
    "description": "Configure terms and conditions.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qptermsandconditions:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qptermsandconditions: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_h2qpwanmetric": {
    "prefix": "fmgr_hotspot20_h2qpwanmetric",
    "description": "Configure WAN metrics.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_h2qpwanmetric:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_h2qpwanmetric: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_hsprofile": {
    "prefix": "fmgr_hotspot20_hsprofile",
    "description": "Configure hotspot profile.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_hsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_hsprofile: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_icon": {
    "prefix": "fmgr_hotspot20_icon",
    "description": "Configure OSU provider icon.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_icon:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_icon: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_icon_iconlist": {
    "prefix": "fmgr_hotspot20_icon_iconlist",
    "description": "Icon list.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_icon_iconlist:",
      "\tadom: ${1:}",
      "\ticon: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_icon_iconlist: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_qosmap": {
    "prefix": "fmgr_hotspot20_qosmap",
    "description": "Configure QoS map set.",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_qosmap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#hotspot20_qosmap: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_hotspot20_qosmap_dscpexcept": {
    "prefix": "fmgr_hotspot20_qosmap_dscpexcept",
    "description": "Differentiated Services Code Point",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_qosmap_dscpexcept:",
      "\tadom: ${1:}",
      "\tqos-map: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_qosmap_dscpexcept: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_hotspot20_qosmap_dscprange": {
    "prefix": "fmgr_hotspot20_qosmap_dscprange",
    "description": "Differentiated Services Code Point",
    "body": [
      "fortinet.fortimanager.fmgr_hotspot20_qosmap_dscprange:",
      "\tadom: ${1:}",
      "\tqos-map: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#hotspot20_qosmap_dscprange: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_icap_profile": {
    "prefix": "fmgr_icap_profile",
    "description": "Configure ICAP profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#icap_profile: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_icap_profile_icapheaders": {
    "prefix": "fmgr_icap_profile_icapheaders",
    "description": "Configure ICAP forwarded request headers.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_profile_icapheaders:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#icap_profile_icapheaders: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_icap_profile_respmodforwardrules": {
    "prefix": "fmgr_icap_profile_respmodforwardrules",
    "description": "ICAP response mode forward rules.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_profile_respmodforwardrules:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#icap_profile_respmodforwardrules: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_icap_profile_respmodforwardrules_headergroup": {
    "prefix": "fmgr_icap_profile_respmodforwardrules_headergroup",
    "description": "HTTP header group.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_profile_respmodforwardrules_headergroup:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\trespmod-forward-rules: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#icap_profile_respmodforwardrules_headergroup: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_icap_server": {
    "prefix": "fmgr_icap_server",
    "description": "Configure ICAP servers.",
    "body": [
      "fortinet.fortimanager.fmgr_icap_server:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#icap_server: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_ips_baseline_sensor": {
    "prefix": "fmgr_ips_baseline_sensor",
    "description": "Configure IPS sensor.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#ips_baseline_sensor: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_entries": {
    "prefix": "fmgr_ips_baseline_sensor_entries",
    "description": "IPS sensor filter.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_entries:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#ips_baseline_sensor_entries: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_entries_exemptip": {
    "prefix": "fmgr_ips_baseline_sensor_entries_exemptip",
    "description": "Traffic from selected source or destination IP addresses is exempt from this signature.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_entries_exemptip:",
      "\tadom: ${1:}",
      "\tentries: ${2:}",
      "\tsensor: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#ips_baseline_sensor_entries_exemptip: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_filter": {
    "prefix": "fmgr_ips_baseline_sensor_filter",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_filter:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#ips_baseline_sensor_filter: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_override": {
    "prefix": "fmgr_ips_baseline_sensor_override",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_override:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#ips_baseline_sensor_override: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_ips_baseline_sensor_override_exemptip": {
    "prefix": "fmgr_ips_baseline_sensor_override_exemptip",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_ips_baseline_sensor_override_exemptip:",
      "\tadom: ${1:}",
      "\toverride: ${2:}",
      "\tsensor: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#ips_baseline_sensor_override_exemptip: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_ips_custom": {
    "prefix": "fmgr_ips_custom",
    "description": "Configure IPS custom signature.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_custom:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#ips_custom: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_ips_sensor": {
    "prefix": "fmgr_ips_sensor",
    "description": "Configure IPS sensor.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_sensor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#ips_sensor: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_ips_sensor_entries": {
    "prefix": "fmgr_ips_sensor_entries",
    "description": "IPS sensor filter.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_sensor_entries:",
      "\tadom: ${1:}",
      "\tsensor: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#ips_sensor_entries: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_ips_sensor_entries_exemptip": {
    "prefix": "fmgr_ips_sensor_entries_exemptip",
    "description": "Traffic from selected source or destination IP addresses is exempt from this signature.",
    "body": [
      "fortinet.fortimanager.fmgr_ips_sensor_entries_exemptip:",
      "\tadom: ${1:}",
      "\tentries: ${2:}",
      "\tsensor: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#ips_sensor_entries_exemptip: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_log_customfield": {
    "prefix": "fmgr_log_customfield",
    "description": "Configure custom log fields.",
    "body": [
      "fortinet.fortimanager.fmgr_log_customfield:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#log_customfield: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_log_npuserver": {
    "prefix": "fmgr_log_npuserver",
    "description": "Configure all the log servers and create the server groups.",
    "body": [
      "fortinet.fortimanager.fmgr_log_npuserver:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#log_npuserver: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_log_npuserver_servergroup": {
    "prefix": "fmgr_log_npuserver_servergroup",
    "description": "create server group.",
    "body": [
      "fortinet.fortimanager.fmgr_log_npuserver_servergroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#log_npuserver_servergroup: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_log_npuserver_serverinfo": {
    "prefix": "fmgr_log_npuserver_serverinfo",
    "description": "configure server info.",
    "body": [
      "fortinet.fortimanager.fmgr_log_npuserver_serverinfo:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#log_npuserver_serverinfo: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_metafields_system_admin_user": {
    "prefix": "fmgr_metafields_system_admin_user",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_metafields_system_admin_user:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#metafields_system_admin_user: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_move": {
    "prefix": "fmgr_move",
    "description": "Move fortimanager defined Object.",
    "body": [
      "fortinet.fortimanager.fmgr_move:",
      "\tmove: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_mpskprofile": {
    "prefix": "fmgr_mpskprofile",
    "description": "Configure MPSK profile.",
    "body": [
      "fortinet.fortimanager.fmgr_mpskprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#mpskprofile: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_mpskprofile_mpskgroup": {
    "prefix": "fmgr_mpskprofile_mpskgroup",
    "description": "List of multiple PSK groups.",
    "body": [
      "fortinet.fortimanager.fmgr_mpskprofile_mpskgroup:",
      "\tadom: ${1:}",
      "\tmpsk-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#mpskprofile_mpskgroup: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_mpskprofile_mpskgroup_mpskkey": {
    "prefix": "fmgr_mpskprofile_mpskgroup_mpskkey",
    "description": "List of multiple PSK entries.",
    "body": [
      "fortinet.fortimanager.fmgr_mpskprofile_mpskgroup_mpskkey:",
      "\tadom: ${1:}",
      "\tmpsk-group: ${2:}",
      "\tmpsk-profile: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#mpskprofile_mpskgroup_mpskkey: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_nacprofile": {
    "prefix": "fmgr_nacprofile",
    "description": "Configure WiFi network access control",
    "body": [
      "fortinet.fortimanager.fmgr_nacprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#nacprofile: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_authentication_rule": {
    "prefix": "fmgr_pkg_authentication_rule",
    "description": "Configure Authentication Rules.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_authentication_rule:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_authentication_rule: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_authentication_setting": {
    "prefix": "fmgr_pkg_authentication_setting",
    "description": "Configure authentication setting.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_authentication_setting:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_authentication_setting: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_central_dnat": {
    "prefix": "fmgr_pkg_central_dnat",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_central_dnat:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_central_dnat: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_central_dnat6": {
    "prefix": "fmgr_pkg_central_dnat6",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_central_dnat6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_central_dnat6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_acl": {
    "prefix": "fmgr_pkg_firewall_acl",
    "description": "Configure IPv4 access control list.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_acl:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_acl: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_acl6": {
    "prefix": "fmgr_pkg_firewall_acl6",
    "description": "Configure IPv6 access control list.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_acl6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_acl6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_centralsnatmap": {
    "prefix": "fmgr_pkg_firewall_centralsnatmap",
    "description": "Configure central SNAT policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_centralsnatmap:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_centralsnatmap: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_consolidated_policy": {
    "prefix": "fmgr_pkg_firewall_consolidated_policy",
    "description": "Configure consolidated IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_consolidated_policy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_consolidated_policy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_consolidated_policy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_consolidated_policy_sectionvalue",
    "description": "Configure consolidated IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_consolidated_policy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_consolidated_policy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_dospolicy": {
    "prefix": "fmgr_pkg_firewall_dospolicy",
    "description": "Configure IPv4 DoS policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_dospolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_dospolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_dospolicy6": {
    "prefix": "fmgr_pkg_firewall_dospolicy6",
    "description": "Configure IPv6 DoS policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_dospolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_dospolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_dospolicy6_anomaly": {
    "prefix": "fmgr_pkg_firewall_dospolicy6_anomaly",
    "description": "Anomaly name.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_dospolicy6_anomaly:",
      "\tDoS-policy6: ${1:}",
      "\tadom: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_dospolicy6_anomaly: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_dospolicy_anomaly": {
    "prefix": "fmgr_pkg_firewall_dospolicy_anomaly",
    "description": "Anomaly name.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_dospolicy_anomaly:",
      "\tDoS-policy: ${1:}",
      "\tadom: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_dospolicy_anomaly: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_explicitproxypolicy": {
    "prefix": "fmgr_pkg_firewall_explicitproxypolicy",
    "description": "Configure Explicit proxy policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_explicitproxypolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_explicitproxypolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_explicitproxypolicy_identitybasedpolicy": {
    "prefix": "fmgr_pkg_firewall_explicitproxypolicy_identitybasedpolicy",
    "description": "Identity-based policy.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_explicitproxypolicy_identitybasedpolicy:",
      "\tadom: ${1:}",
      "\texplicit-proxy-policy: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_explicitproxypolicy_identitybasedpolicy: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_explicitproxypolicy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_explicitproxypolicy_sectionvalue",
    "description": "Configure Explicit proxy policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_explicitproxypolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\texplicit-proxy-policy: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_explicitproxypolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_hyperscalepolicy": {
    "prefix": "fmgr_pkg_firewall_hyperscalepolicy",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_hyperscalepolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_hyperscalepolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_hyperscalepolicy46": {
    "prefix": "fmgr_pkg_firewall_hyperscalepolicy46",
    "description": "Configure IPv4 to IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_hyperscalepolicy46:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_hyperscalepolicy46: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_hyperscalepolicy6": {
    "prefix": "fmgr_pkg_firewall_hyperscalepolicy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_hyperscalepolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_hyperscalepolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_hyperscalepolicy64": {
    "prefix": "fmgr_pkg_firewall_hyperscalepolicy64",
    "description": "Configure IPv6 to IPv4 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_hyperscalepolicy64:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_hyperscalepolicy64: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_interfacepolicy": {
    "prefix": "fmgr_pkg_firewall_interfacepolicy",
    "description": "Configure IPv4 interface policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_interfacepolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_interfacepolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_interfacepolicy6": {
    "prefix": "fmgr_pkg_firewall_interfacepolicy6",
    "description": "Configure IPv6 interface policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_interfacepolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_interfacepolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_interfacepolicy6_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_interfacepolicy6_sectionvalue",
    "description": "Configure IPv6 interface policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_interfacepolicy6_sectionvalue:",
      "\tadom: ${1:}",
      "\tinterface-policy6: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_interfacepolicy6_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_interfacepolicy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_interfacepolicy_sectionvalue",
    "description": "Configure IPv4 interface policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_interfacepolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\tinterface-policy: ${2:}",
      "\tpkg: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_interfacepolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_localinpolicy": {
    "prefix": "fmgr_pkg_firewall_localinpolicy",
    "description": "Configure user defined IPv4 local-in policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_localinpolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_localinpolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_localinpolicy6": {
    "prefix": "fmgr_pkg_firewall_localinpolicy6",
    "description": "Configure user defined IPv6 local-in policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_localinpolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_localinpolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_multicastpolicy": {
    "prefix": "fmgr_pkg_firewall_multicastpolicy",
    "description": "Configure multicast NAT policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_multicastpolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_multicastpolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_multicastpolicy6": {
    "prefix": "fmgr_pkg_firewall_multicastpolicy6",
    "description": "Configure IPv6 multicast NAT policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_multicastpolicy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_multicastpolicy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy": {
    "prefix": "fmgr_pkg_firewall_policy",
    "description": "Configure IPv4 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_policy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy46": {
    "prefix": "fmgr_pkg_firewall_policy46",
    "description": "Configure IPv4 to IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy46:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_policy46: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy6": {
    "prefix": "fmgr_pkg_firewall_policy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy6:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_policy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy64": {
    "prefix": "fmgr_pkg_firewall_policy64",
    "description": "Configure IPv6 to IPv4 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy64:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_policy64: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_policy6_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_policy6_sectionvalue",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy6_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_policy6_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_policy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_policy_sectionvalue",
    "description": "Configure IPv4 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_policy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_policy_vpndstnode": {
    "prefix": "fmgr_pkg_firewall_policy_vpndstnode",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy_vpndstnode:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_policy_vpndstnode: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_policy_vpnsrcnode": {
    "prefix": "fmgr_pkg_firewall_policy_vpnsrcnode",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_policy_vpnsrcnode:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_policy_vpnsrcnode: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_proxypolicy": {
    "prefix": "fmgr_pkg_firewall_proxypolicy",
    "description": "Configure proxy policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_proxypolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_proxypolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_proxypolicy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_proxypolicy_sectionvalue",
    "description": "Configure proxy policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_proxypolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tproxy-policy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_proxypolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_securitypolicy": {
    "prefix": "fmgr_pkg_firewall_securitypolicy",
    "description": "Configure NGFW IPv4/IPv6 application policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_securitypolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_securitypolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_firewall_securitypolicy_sectionvalue": {
    "prefix": "fmgr_pkg_firewall_securitypolicy_sectionvalue",
    "description": "Configure NGFW IPv4/IPv6 application policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_securitypolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tsecurity-policy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pkg_firewall_securitypolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pkg_firewall_shapingpolicy": {
    "prefix": "fmgr_pkg_firewall_shapingpolicy",
    "description": "Configure shaping policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_firewall_shapingpolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_firewall_shapingpolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pkg_footer_policy": {
    "prefix": "fmgr_pkg_footer_policy",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_footer_policy:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_footer_policy: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_footer_policy6": {
    "prefix": "fmgr_pkg_footer_policy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_footer_policy6:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_footer_policy6: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_footer_shapingpolicy": {
    "prefix": "fmgr_pkg_footer_shapingpolicy",
    "description": "Configure shaping policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_footer_shapingpolicy:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_footer_shapingpolicy: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_header_policy": {
    "prefix": "fmgr_pkg_header_policy",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_header_policy:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_header_policy: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_header_policy6": {
    "prefix": "fmgr_pkg_header_policy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_header_policy6:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_header_policy6: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_header_shapingpolicy": {
    "prefix": "fmgr_pkg_header_shapingpolicy",
    "description": "Configure shaping policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_header_shapingpolicy:",
      "\tpkg: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#pkg_header_shapingpolicy: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_pkg_user_nacpolicy": {
    "prefix": "fmgr_pkg_user_nacpolicy",
    "description": "Configure NAC policy matching pattern to identify matching NAC devices.",
    "body": [
      "fortinet.fortimanager.fmgr_pkg_user_nacpolicy:",
      "\tadom: ${1:}",
      "\tpkg: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pkg_user_nacpolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_address": {
    "prefix": "fmgr_pm_config_metafields_firewall_address",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_address:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_address: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_addrgrp": {
    "prefix": "fmgr_pm_config_metafields_firewall_addrgrp",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_addrgrp:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_addrgrp: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_centralsnatmap": {
    "prefix": "fmgr_pm_config_metafields_firewall_centralsnatmap",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_centralsnatmap:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_centralsnatmap: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_policy": {
    "prefix": "fmgr_pm_config_metafields_firewall_policy",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_policy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_policy: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_service_custom": {
    "prefix": "fmgr_pm_config_metafields_firewall_service_custom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_service_custom:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_service_custom: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_metafields_firewall_service_group": {
    "prefix": "fmgr_pm_config_metafields_firewall_service_group",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_metafields_firewall_service_group:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_metafields_firewall_service_group: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_consolidated_policy": {
    "prefix": "fmgr_pm_config_pblock_firewall_consolidated_policy",
    "description": "Configure consolidated IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_consolidated_policy:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_config_pblock_firewall_consolidated_policy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_consolidated_policy_sectionvalue": {
    "prefix": "fmgr_pm_config_pblock_firewall_consolidated_policy_sectionvalue",
    "description": "Configure consolidated IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_consolidated_policy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pm_config_pblock_firewall_consolidated_policy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_policy": {
    "prefix": "fmgr_pm_config_pblock_firewall_policy",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_policy:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_config_pblock_firewall_policy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_policy6": {
    "prefix": "fmgr_pm_config_pblock_firewall_policy6",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_policy6:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_config_pblock_firewall_policy6: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_policy6_sectionvalue": {
    "prefix": "fmgr_pm_config_pblock_firewall_policy6_sectionvalue",
    "description": "Configure IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_policy6_sectionvalue:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tpolicy6: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pm_config_pblock_firewall_policy6_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_policy_sectionvalue": {
    "prefix": "fmgr_pm_config_pblock_firewall_policy_sectionvalue",
    "description": "Configure IPv4/IPv6 policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_policy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tpolicy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pm_config_pblock_firewall_policy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_securitypolicy": {
    "prefix": "fmgr_pm_config_pblock_firewall_securitypolicy",
    "description": "Configure NGFW IPv4/IPv6 application policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_securitypolicy:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_config_pblock_firewall_securitypolicy: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_config_pblock_firewall_securitypolicy_sectionvalue": {
    "prefix": "fmgr_pm_config_pblock_firewall_securitypolicy_sectionvalue",
    "description": "Configure NGFW IPv4/IPv6 application policies.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_pblock_firewall_securitypolicy_sectionvalue:",
      "\tadom: ${1:}",
      "\tpblock: ${2:}",
      "\tsecurity-policy: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#pm_config_pblock_firewall_securitypolicy_sectionvalue: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_pm_config_reset_database": {
    "prefix": "fmgr_pm_config_reset_database",
    "description": "Reset Global ADOM to a specific version.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_reset_database:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_config_reset_database: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_config_upgrade": {
    "prefix": "fmgr_pm_config_upgrade",
    "description": "Upgrade an ADOM to the next version.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_upgrade:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_config_workspace_commit": {
    "prefix": "fmgr_pm_config_workspace_commit",
    "description": "Commit changes to an ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_workspace_commit:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_config_workspace_lock": {
    "prefix": "fmgr_pm_config_workspace_lock",
    "description": "Lock an ADOM in workspace mode.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_workspace_lock:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_config_workspace_unlock": {
    "prefix": "fmgr_pm_config_workspace_unlock",
    "description": "Unlock an ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_config_workspace_unlock:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_pm_devprof_adom": {
    "prefix": "fmgr_pm_devprof_adom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_devprof_adom:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_devprof_adom: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_pm_devprof_pkg": {
    "prefix": "fmgr_pm_devprof_pkg",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_devprof_pkg:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_devprof_pkg: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_devprof_scopemember": {
    "prefix": "fmgr_pm_devprof_scopemember",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_devprof_scopemember:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_devprof_scopemember: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_pblock_adom": {
    "prefix": "fmgr_pm_pblock_adom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pblock_adom:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_pblock_adom: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_pm_pblock_obj": {
    "prefix": "fmgr_pm_pblock_obj",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pblock_obj:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_pblock_obj: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_pkg": {
    "prefix": "fmgr_pm_pkg",
    "description": "Policy package or folder.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pkg:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_pkg: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_pkg_adom": {
    "prefix": "fmgr_pm_pkg_adom",
    "description": "Policy package or folder.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pkg_adom:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_pkg_adom: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_pm_pkg_global": {
    "prefix": "fmgr_pm_pkg_global",
    "description": "Policy package or folder.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pkg_global:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#pm_pkg_global: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_pm_pkg_scopemember": {
    "prefix": "fmgr_pm_pkg_scopemember",
    "description": "Policy package or folder.",
    "body": [
      "fortinet.fortimanager.fmgr_pm_pkg_scopemember:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_pkg_scopemember: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_wanprof_adom": {
    "prefix": "fmgr_pm_wanprof_adom",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_wanprof_adom:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#pm_wanprof_adom: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_pm_wanprof_pkg": {
    "prefix": "fmgr_pm_wanprof_pkg",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_wanprof_pkg:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_wanprof_pkg: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_pm_wanprof_scopemember": {
    "prefix": "fmgr_pm_wanprof_scopemember",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_pm_wanprof_scopemember:",
      "\tadom: ${1:}",
      "\tpkg_path: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#pm_wanprof_scopemember: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_qosprofile": {
    "prefix": "fmgr_qosprofile",
    "description": "Configure WiFi quality of service",
    "body": [
      "fortinet.fortimanager.fmgr_qosprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#qosprofile: ${8:}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_region": {
    "prefix": "fmgr_region",
    "description": "Configure FortiAP regions",
    "body": [
      "fortinet.fortimanager.fmgr_region:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#region: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_rename": {
    "prefix": "fmgr_rename",
    "description": "Rename an object in FortiManager.",
    "body": [
      "fortinet.fortimanager.fmgr_rename:",
      "\trename: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_router_accesslist": {
    "prefix": "fmgr_router_accesslist",
    "description": "Configure access lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_accesslist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_accesslist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_accesslist6": {
    "prefix": "fmgr_router_accesslist6",
    "description": "Configure IPv6 access lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_accesslist6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_accesslist6: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_accesslist6_rule": {
    "prefix": "fmgr_router_accesslist6_rule",
    "description": "Rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_accesslist6_rule:",
      "\taccess-list6: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_accesslist6_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_accesslist_rule": {
    "prefix": "fmgr_router_accesslist_rule",
    "description": "Rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_accesslist_rule:",
      "\taccess-list: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_accesslist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_aspathlist": {
    "prefix": "fmgr_router_aspathlist",
    "description": "Configure Autonomous System",
    "body": [
      "fortinet.fortimanager.fmgr_router_aspathlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_aspathlist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_aspathlist_rule": {
    "prefix": "fmgr_router_aspathlist_rule",
    "description": "AS path list rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_aspathlist_rule:",
      "\tadom: ${1:}",
      "\taspath-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_aspathlist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_communitylist": {
    "prefix": "fmgr_router_communitylist",
    "description": "Configure community lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_communitylist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_communitylist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_communitylist_rule": {
    "prefix": "fmgr_router_communitylist_rule",
    "description": "Community list rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_communitylist_rule:",
      "\tadom: ${1:}",
      "\tcommunity-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_communitylist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_prefixlist": {
    "prefix": "fmgr_router_prefixlist",
    "description": "Configure IPv4 prefix lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_prefixlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_prefixlist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_prefixlist6": {
    "prefix": "fmgr_router_prefixlist6",
    "description": "Configure IPv6 prefix lists.",
    "body": [
      "fortinet.fortimanager.fmgr_router_prefixlist6:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_prefixlist6: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_prefixlist6_rule": {
    "prefix": "fmgr_router_prefixlist6_rule",
    "description": "IPv6 prefix list rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_prefixlist6_rule:",
      "\tadom: ${1:}",
      "\tprefix-list6: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_prefixlist6_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_prefixlist_rule": {
    "prefix": "fmgr_router_prefixlist_rule",
    "description": "IPv4 prefix list rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_prefixlist_rule:",
      "\tadom: ${1:}",
      "\tprefix-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_prefixlist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_router_routemap": {
    "prefix": "fmgr_router_routemap",
    "description": "Configure route maps.",
    "body": [
      "fortinet.fortimanager.fmgr_router_routemap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#router_routemap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_router_routemap_rule": {
    "prefix": "fmgr_router_routemap_rule",
    "description": "Rule.",
    "body": [
      "fortinet.fortimanager.fmgr_router_routemap_rule:",
      "\tadom: ${1:}",
      "\troute-map: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#router_routemap_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_securityconsole_abort": {
    "prefix": "fmgr_securityconsole_abort",
    "description": "Abort and cancel a security console task.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_abort:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_abort: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_assign_package": {
    "prefix": "fmgr_securityconsole_assign_package",
    "description": "Assign or unassign global policy package to ADOM packages.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_assign_package:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_assign_package: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_cliprof_check": {
    "prefix": "fmgr_securityconsole_cliprof_check",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_cliprof_check:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_cliprof_check: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_import_dev_objs": {
    "prefix": "fmgr_securityconsole_import_dev_objs",
    "description": "Import objects from device to ADOM, or from ADOM to Global.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_import_dev_objs:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_import_dev_objs: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_install_device": {
    "prefix": "fmgr_securityconsole_install_device",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_install_device:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_install_device: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_install_package": {
    "prefix": "fmgr_securityconsole_install_package",
    "description": "Copy and install a policy package to devices.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_install_package:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_install_package: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_install_preview": {
    "prefix": "fmgr_securityconsole_install_preview",
    "description": "Generate install preview for a device.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_install_preview:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_install_preview: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_package_cancel_install": {
    "prefix": "fmgr_securityconsole_package_cancel_install",
    "description": "Cancel policy install and clear preview cache.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_package_cancel_install:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_package_cancel_install: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_package_clone": {
    "prefix": "fmgr_securityconsole_package_clone",
    "description": "Clone a policy package within the same ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_package_clone:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_package_clone: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_package_commit": {
    "prefix": "fmgr_securityconsole_package_commit",
    "description": "Install policies to device from preview cache.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_package_commit:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_package_commit: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_package_move": {
    "prefix": "fmgr_securityconsole_package_move",
    "description": "Move and/or rename a policy package within the same ADOM.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_package_move:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_package_move: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_pblock_clone": {
    "prefix": "fmgr_securityconsole_pblock_clone",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_pblock_clone:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_pblock_clone: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_preview_result": {
    "prefix": "fmgr_securityconsole_preview_result",
    "description": "Retrieve the result of previous install/preview command.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_preview_result:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_preview_result: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_reinstall_package": {
    "prefix": "fmgr_securityconsole_reinstall_package",
    "description": "Re-install a policy package that had been previously installed.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_reinstall_package:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_reinstall_package: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_sign_certificate_template": {
    "prefix": "fmgr_securityconsole_sign_certificate_template",
    "description": "Generate and sign certificate on the target device.",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_sign_certificate_template:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_sign_certificate_template: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_securityconsole_template_cli_preview": {
    "prefix": "fmgr_securityconsole_template_cli_preview",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_securityconsole_template_cli_preview:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#securityconsole_template_cli_preview: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_spamfilter_bwl": {
    "prefix": "fmgr_spamfilter_bwl",
    "description": "Configure anti-spam black/white list.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_bwl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_bwl: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_bwl_entries": {
    "prefix": "fmgr_spamfilter_bwl_entries",
    "description": "Anti-spam black/white list entries.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_bwl_entries:",
      "\tadom: ${1:}",
      "\tbwl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_bwl_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_bword": {
    "prefix": "fmgr_spamfilter_bword",
    "description": "Configure AntiSpam banned word list.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_bword:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_bword: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_bword_entries": {
    "prefix": "fmgr_spamfilter_bword_entries",
    "description": "Spam filter banned word.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_bword_entries:",
      "\tadom: ${1:}",
      "\tbword: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_bword_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_dnsbl": {
    "prefix": "fmgr_spamfilter_dnsbl",
    "description": "Configure AntiSpam DNSBL/ORBL.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_dnsbl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_dnsbl: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_dnsbl_entries": {
    "prefix": "fmgr_spamfilter_dnsbl_entries",
    "description": "Spam filter DNSBL and ORBL server.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_dnsbl_entries:",
      "\tadom: ${1:}",
      "\tdnsbl: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_dnsbl_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_iptrust": {
    "prefix": "fmgr_spamfilter_iptrust",
    "description": "Configure AntiSpam IP trust.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_iptrust:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_iptrust: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_iptrust_entries": {
    "prefix": "fmgr_spamfilter_iptrust_entries",
    "description": "Spam filter trusted IP addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_iptrust_entries:",
      "\tadom: ${1:}",
      "\tiptrust: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_iptrust_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_mheader": {
    "prefix": "fmgr_spamfilter_mheader",
    "description": "Configure AntiSpam MIME header.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_mheader:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_mheader: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_mheader_entries": {
    "prefix": "fmgr_spamfilter_mheader_entries",
    "description": "Spam filter mime header content.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_mheader_entries:",
      "\tadom: ${1:}",
      "\tmheader: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#spamfilter_mheader_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_spamfilter_profile": {
    "prefix": "fmgr_spamfilter_profile",
    "description": "Configure AntiSpam profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_gmail": {
    "prefix": "fmgr_spamfilter_profile_gmail",
    "description": "Gmail.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_gmail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_gmail: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_imap": {
    "prefix": "fmgr_spamfilter_profile_imap",
    "description": "IMAP.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_imap:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_imap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_mapi": {
    "prefix": "fmgr_spamfilter_profile_mapi",
    "description": "MAPI.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_mapi:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_mapi: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_msnhotmail": {
    "prefix": "fmgr_spamfilter_profile_msnhotmail",
    "description": "MSN Hotmail.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_msnhotmail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_msnhotmail: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_pop3": {
    "prefix": "fmgr_spamfilter_profile_pop3",
    "description": "POP3.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_pop3:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_pop3: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_smtp": {
    "prefix": "fmgr_spamfilter_profile_smtp",
    "description": "SMTP.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_smtp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_smtp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_spamfilter_profile_yahoomail": {
    "prefix": "fmgr_spamfilter_profile_yahoomail",
    "description": "Yahoo! Mail.",
    "body": [
      "fortinet.fortimanager.fmgr_spamfilter_profile_yahoomail:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#spamfilter_profile_yahoomail: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_sshfilter_profile": {
    "prefix": "fmgr_sshfilter_profile",
    "description": "SSH filter profile.",
    "body": [
      "fortinet.fortimanager.fmgr_sshfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#sshfilter_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_sshfilter_profile_filefilter": {
    "prefix": "fmgr_sshfilter_profile_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_sshfilter_profile_filefilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#sshfilter_profile_filefilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_sshfilter_profile_filefilter_entries": {
    "prefix": "fmgr_sshfilter_profile_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_sshfilter_profile_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#sshfilter_profile_filefilter_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_sshfilter_profile_shellcommands": {
    "prefix": "fmgr_sshfilter_profile_shellcommands",
    "description": "SSH command filter.",
    "body": [
      "fortinet.fortimanager.fmgr_sshfilter_profile_shellcommands:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#sshfilter_profile_shellcommands: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_acl_group": {
    "prefix": "fmgr_switchcontroller_acl_group",
    "description": "Configure ACL groups to be applied on managed FortiSwitch ports.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_acl_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_acl_group: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_acl_ingress": {
    "prefix": "fmgr_switchcontroller_acl_ingress",
    "description": "Configure ingress ACL policies to be applied on managed FortiSwitch ports.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_acl_ingress:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_acl_ingress: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_acl_ingress_action": {
    "prefix": "fmgr_switchcontroller_acl_ingress_action",
    "description": "ACL actions.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_acl_ingress_action:",
      "\tadom: ${1:}",
      "\tingress: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_acl_ingress_action: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_acl_ingress_classifier": {
    "prefix": "fmgr_switchcontroller_acl_ingress_classifier",
    "description": "ACL classifiers.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_acl_ingress_classifier:",
      "\tadom: ${1:}",
      "\tingress: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_acl_ingress_classifier: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_customcommand": {
    "prefix": "fmgr_switchcontroller_customcommand",
    "description": "Configure the FortiGate switch controller to send custom commands to managed FortiSwitch devices.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_customcommand:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_customcommand: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_dsl_policy": {
    "prefix": "fmgr_switchcontroller_dsl_policy",
    "description": "DSL policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_dsl_policy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_dsl_policy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_dynamicportpolicy": {
    "prefix": "fmgr_switchcontroller_dynamicportpolicy",
    "description": "Configure Dynamic port policy to be applied on the managed FortiSwitch ports through DPP device.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_dynamicportpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_dynamicportpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_dynamicportpolicy_policy": {
    "prefix": "fmgr_switchcontroller_dynamicportpolicy_policy",
    "description": "Port policies with matching criteria and actions.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_dynamicportpolicy_policy:",
      "\tadom: ${1:}",
      "\tdynamic-port-policy: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_dynamicportpolicy_policy: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_fortilinksettings": {
    "prefix": "fmgr_switchcontroller_fortilinksettings",
    "description": "Configure integrated FortiLink settings for FortiSwitch.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_fortilinksettings:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_fortilinksettings: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_fortilinksettings_nacports": {
    "prefix": "fmgr_switchcontroller_fortilinksettings_nacports",
    "description": "NAC specific configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_fortilinksettings_nacports:",
      "\tadom: ${1:}",
      "\tfortilink-settings: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_fortilinksettings_nacports: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_lldpprofile": {
    "prefix": "fmgr_switchcontroller_lldpprofile",
    "description": "Configure FortiSwitch LLDP profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_lldpprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_lldpprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_lldpprofile_customtlvs": {
    "prefix": "fmgr_switchcontroller_lldpprofile_customtlvs",
    "description": "Configuration method to edit custom TLV entries.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_lldpprofile_customtlvs:",
      "\tadom: ${1:}",
      "\tlldp-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_lldpprofile_customtlvs: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_lldpprofile_medlocationservice": {
    "prefix": "fmgr_switchcontroller_lldpprofile_medlocationservice",
    "description": "Configuration method to edit Media Endpoint Discovery",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_lldpprofile_medlocationservice:",
      "\tadom: ${1:}",
      "\tlldp-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_lldpprofile_medlocationservice: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_lldpprofile_mednetworkpolicy": {
    "prefix": "fmgr_switchcontroller_lldpprofile_mednetworkpolicy",
    "description": "Configuration method to edit Media Endpoint Discovery",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_lldpprofile_mednetworkpolicy:",
      "\tadom: ${1:}",
      "\tlldp-profile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_lldpprofile_mednetworkpolicy: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_macpolicy": {
    "prefix": "fmgr_switchcontroller_macpolicy",
    "description": "Configure MAC policy to be applied on the managed FortiSwitch devices through NAC device.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_macpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_macpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch": {
    "prefix": "fmgr_switchcontroller_managedswitch",
    "description": "Configure FortiSwitch devices that are managed by this FortiGate.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_managedswitch: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_8021xsettings": {
    "prefix": "fmgr_switchcontroller_managedswitch_8021xsettings",
    "description": "Configuration method to edit FortiSwitch 802.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_8021xsettings:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_customcommand": {
    "prefix": "fmgr_switchcontroller_managedswitch_customcommand",
    "description": "Configuration method to edit FortiSwitch commands to be pushed to this FortiSwitch device upon rebooting the FortiGate switch controller ...",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_customcommand:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_customcommand: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_dhcpsnoopingstaticclient": {
    "prefix": "fmgr_switchcontroller_managedswitch_dhcpsnoopingstaticclient",
    "description": "Configure FortiSwitch DHCP snooping static clients.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_dhcpsnoopingstaticclient:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_dhcpsnoopingstaticclient: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_igmpsnooping": {
    "prefix": "fmgr_switchcontroller_managedswitch_igmpsnooping",
    "description": "Configure FortiSwitch IGMP snooping global settings.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_igmpsnooping:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_ipsourceguard": {
    "prefix": "fmgr_switchcontroller_managedswitch_ipsourceguard",
    "description": "IP source guard.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_ipsourceguard:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_ipsourceguard: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_ipsourceguard_bindingentry": {
    "prefix": "fmgr_switchcontroller_managedswitch_ipsourceguard_bindingentry",
    "description": "IP and MAC address configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_ipsourceguard_bindingentry:",
      "\tadom: ${1:}",
      "\tip-source-guard: ${2:}",
      "\tmanaged-switch: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#switchcontroller_managedswitch_ipsourceguard_bindingentry: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_mirror": {
    "prefix": "fmgr_switchcontroller_managedswitch_mirror",
    "description": "Configuration method to edit FortiSwitch packet mirror.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_mirror:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvdom: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_ports": {
    "prefix": "fmgr_switchcontroller_managedswitch_ports",
    "description": "Managed-switch port list.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_ports:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_ports: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_ports_dhcpsnoopoption82override": {
    "prefix": "fmgr_switchcontroller_managedswitch_ports_dhcpsnoopoption82override",
    "description": "Configure DHCP snooping option 82 override.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_ports_dhcpsnoopoption82override:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tports: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#switchcontroller_managedswitch_ports_dhcpsnoopoption82override: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_remotelog": {
    "prefix": "fmgr_switchcontroller_managedswitch_remotelog",
    "description": "Configure logging by FortiSwitch device to a remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_remotelog:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_remotelog: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmpcommunity": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmpcommunity",
    "description": "Configuration method to edit Simple Network Management Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmpcommunity:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_snmpcommunity: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmpcommunity_hosts": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmpcommunity_hosts",
    "description": "Configure IPv4 SNMP managers",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmpcommunity_hosts:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tsnmp-community: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#switchcontroller_managedswitch_snmpcommunity_hosts: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmpsysinfo": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmpsysinfo",
    "description": "Configuration method to edit Simple Network Management Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmpsysinfo:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_managedswitch_snmpsysinfo: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmptrapthreshold": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmptrapthreshold",
    "description": "Configuration method to edit Simple Network Management Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmptrapthreshold:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_managedswitch_snmptrapthreshold: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_snmpuser": {
    "prefix": "fmgr_switchcontroller_managedswitch_snmpuser",
    "description": "Configuration method to edit Simple Network Management Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_snmpuser:",
      "\tadom: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_managedswitch_snmpuser: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_staticmac": {
    "prefix": "fmgr_switchcontroller_managedswitch_staticmac",
    "description": "Configuration method to edit FortiSwitch Static and Sticky MAC.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_staticmac:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvdom: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_stormcontrol": {
    "prefix": "fmgr_switchcontroller_managedswitch_stormcontrol",
    "description": "Configuration method to edit FortiSwitch storm control for measuring traffic activity using data rates to prevent traffic disruption.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_stormcontrol:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_stpinstance": {
    "prefix": "fmgr_switchcontroller_managedswitch_stpinstance",
    "description": "Configuration method to edit Spanning Tree Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_stpinstance:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tstate: ${3:present|absent}",
      "\tvdom: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_stpsettings": {
    "prefix": "fmgr_switchcontroller_managedswitch_stpsettings",
    "description": "Configuration method to edit Spanning Tree Protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_stpsettings:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_switchlog": {
    "prefix": "fmgr_switchcontroller_managedswitch_switchlog",
    "description": "Configuration method to edit FortiSwitch logging settings",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_switchlog:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_managedswitch_switchstpsettings": {
    "prefix": "fmgr_switchcontroller_managedswitch_switchstpsettings",
    "description": "Configure spanning tree protocol",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_managedswitch_switchstpsettings:",
      "\tdevice: ${1:}",
      "\tmanaged-switch: ${2:}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_dot1pmap": {
    "prefix": "fmgr_switchcontroller_qos_dot1pmap",
    "description": "Configure FortiSwitch QoS 802.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_dot1pmap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_qos_dot1pmap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_ipdscpmap": {
    "prefix": "fmgr_switchcontroller_qos_ipdscpmap",
    "description": "Configure FortiSwitch QoS IP precedence/DSCP.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_ipdscpmap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_qos_ipdscpmap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_ipdscpmap_map": {
    "prefix": "fmgr_switchcontroller_qos_ipdscpmap_map",
    "description": "Maps between IP-DSCP value to COS queue.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_ipdscpmap_map:",
      "\tadom: ${1:}",
      "\tip-dscp-map: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_qos_ipdscpmap_map: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_qos_qospolicy": {
    "prefix": "fmgr_switchcontroller_qos_qospolicy",
    "description": "Configure FortiSwitch QoS policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_qospolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_qos_qospolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_queuepolicy": {
    "prefix": "fmgr_switchcontroller_qos_queuepolicy",
    "description": "Configure FortiSwitch QoS egress queue policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_queuepolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_qos_queuepolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_qos_queuepolicy_cosqueue": {
    "prefix": "fmgr_switchcontroller_qos_queuepolicy_cosqueue",
    "description": "COS queue configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_qos_queuepolicy_cosqueue:",
      "\tadom: ${1:}",
      "\tqueue-policy: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#switchcontroller_qos_queuepolicy_cosqueue: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_switchcontroller_securitypolicy_8021x": {
    "prefix": "fmgr_switchcontroller_securitypolicy_8021x",
    "description": "Configure 802.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_securitypolicy_8021x:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_securitypolicy_8021x: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_securitypolicy_captiveportal": {
    "prefix": "fmgr_switchcontroller_securitypolicy_captiveportal",
    "description": "Names of VLANs that use captive portal authentication.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_securitypolicy_captiveportal:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_securitypolicy_captiveportal: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_switchinterfacetag": {
    "prefix": "fmgr_switchcontroller_switchinterfacetag",
    "description": "Configure switch object tags.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_switchinterfacetag:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_switchinterfacetag: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_trafficpolicy": {
    "prefix": "fmgr_switchcontroller_trafficpolicy",
    "description": "Configure FortiSwitch traffic policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_trafficpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_trafficpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_switchcontroller_vlanpolicy": {
    "prefix": "fmgr_switchcontroller_vlanpolicy",
    "description": "Configure VLAN policy to be applied on the managed FortiSwitch ports through dynamic-port-policy.",
    "body": [
      "fortinet.fortimanager.fmgr_switchcontroller_vlanpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#switchcontroller_vlanpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_sys_api_sdnconnector": {
    "prefix": "fmgr_sys_api_sdnconnector",
    "description": "Query SDN connector data.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_api_sdnconnector:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_api_sdnconnector: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_cloud_orchest": {
    "prefix": "fmgr_sys_cloud_orchest",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_sys_cloud_orchest:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_cloud_orchest: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_generate_wsdl": {
    "prefix": "fmgr_sys_generate_wsdl",
    "description": "Generate WSDL for specific module and objects.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_generate_wsdl:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_generate_wsdl: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_hitcount": {
    "prefix": "fmgr_sys_hitcount",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_sys_hitcount:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_hitcount: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_login_challenge": {
    "prefix": "fmgr_sys_login_challenge",
    "description": "Answer a log in challenge question, used following a login/user or login/challenge command.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_login_challenge:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_login_challenge: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_login_user": {
    "prefix": "fmgr_sys_login_user",
    "description": "Log into the device with user name and password.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_login_user:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_login_user: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_logout": {
    "prefix": "fmgr_sys_logout",
    "description": "Log out a session.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_logout:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#workspace_locking_adom: ${7:}",
      "\t#workspace_locking_timeout: ${8:300}"
    ]
  },
  "fmgr_sys_proxy_json": {
    "prefix": "fmgr_sys_proxy_json",
    "description": "Send and receive JSON request to/from managed devices.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_proxy_json:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_proxy_json: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_reboot": {
    "prefix": "fmgr_sys_reboot",
    "description": "Restart FortiManager.",
    "body": [
      "fortinet.fortimanager.fmgr_sys_reboot:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_reboot: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_sys_task_result": {
    "prefix": "fmgr_sys_task_result",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_sys_task_result:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#sys_task_result: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_system_admin_group": {
    "prefix": "fmgr_system_admin_group",
    "description": "User group.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_group: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_group_member": {
    "prefix": "fmgr_system_admin_group_member",
    "description": "Group members.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_group_member:",
      "\tgroup: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_group_member: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_ldap": {
    "prefix": "fmgr_system_admin_ldap",
    "description": "LDAP server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_ldap:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_ldap: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_ldap_adom": {
    "prefix": "fmgr_system_admin_ldap_adom",
    "description": "Admin domain.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_ldap_adom:",
      "\tldap: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_ldap_adom: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_profile": {
    "prefix": "fmgr_system_admin_profile",
    "description": "Admin profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_profile: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_profile_datamaskcustomfields": {
    "prefix": "fmgr_system_admin_profile_datamaskcustomfields",
    "description": "Customized datamask fields.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_profile_datamaskcustomfields:",
      "\tprofile: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_profile_datamaskcustomfields: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_radius": {
    "prefix": "fmgr_system_admin_radius",
    "description": "Configure radius.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_radius:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_radius: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_setting": {
    "prefix": "fmgr_system_admin_setting",
    "description": "Admin setting.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_admin_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_admin_tacacs": {
    "prefix": "fmgr_system_admin_tacacs",
    "description": "TACACS+ server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_tacacs:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_tacacs: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_user": {
    "prefix": "fmgr_system_admin_user",
    "description": "Admin user.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_admin_user: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_admin_user_adom": {
    "prefix": "fmgr_system_admin_user_adom",
    "description": "Admin domain.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_adom:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_adom: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_adomexclude": {
    "prefix": "fmgr_system_admin_user_adomexclude",
    "description": "Excluding admin domain.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_adomexclude:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_adomexclude: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_appfilter": {
    "prefix": "fmgr_system_admin_user_appfilter",
    "description": "App filter.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_appfilter:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_appfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_dashboard": {
    "prefix": "fmgr_system_admin_user_dashboard",
    "description": "Custom dashboard widgets.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_dashboard:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_dashboard: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_dashboardtabs": {
    "prefix": "fmgr_system_admin_user_dashboardtabs",
    "description": "Custom dashboard.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_dashboardtabs:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_dashboardtabs: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_ipsfilter": {
    "prefix": "fmgr_system_admin_user_ipsfilter",
    "description": "IPS filter.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_ipsfilter:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_ipsfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_metadata": {
    "prefix": "fmgr_system_admin_user_metadata",
    "description": "Configure meta data.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_metadata:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_metadata: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_policypackage": {
    "prefix": "fmgr_system_admin_user_policypackage",
    "description": "Policy package access.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_policypackage:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_policypackage: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_restrictdevvdom": {
    "prefix": "fmgr_system_admin_user_restrictdevvdom",
    "description": "Restricted to these devices/VDOMs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_restrictdevvdom:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_restrictdevvdom: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_admin_user_webfilter": {
    "prefix": "fmgr_system_admin_user_webfilter",
    "description": "Web filter.",
    "body": [
      "fortinet.fortimanager.fmgr_system_admin_user_webfilter:",
      "\tstate: ${1:present|absent}",
      "\tuser: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_admin_user_webfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_alertconsole": {
    "prefix": "fmgr_system_alertconsole",
    "description": "Alert console.",
    "body": [
      "fortinet.fortimanager.fmgr_system_alertconsole:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_alertconsole: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_alertemail": {
    "prefix": "fmgr_system_alertemail",
    "description": "Configure alertemail.",
    "body": [
      "fortinet.fortimanager.fmgr_system_alertemail:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_alertemail: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_alertevent": {
    "prefix": "fmgr_system_alertevent",
    "description": "Alert events.",
    "body": [
      "fortinet.fortimanager.fmgr_system_alertevent:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_alertevent: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_alertevent_alertdestination": {
    "prefix": "fmgr_system_alertevent_alertdestination",
    "description": "Alert destination.",
    "body": [
      "fortinet.fortimanager.fmgr_system_alertevent_alertdestination:",
      "\talert-event: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_alertevent_alertdestination: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_autodelete": {
    "prefix": "fmgr_system_autodelete",
    "description": "Automatic deletion policy for logs, reports, archived, and quarantined files.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_autodelete_dlpfilesautodeletion": {
    "prefix": "fmgr_system_autodelete_dlpfilesautodeletion",
    "description": "Automatic deletion policy for DLP archives.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete_dlpfilesautodeletion:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete_dlpfilesautodeletion: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_autodelete_logautodeletion": {
    "prefix": "fmgr_system_autodelete_logautodeletion",
    "description": "Automatic deletion policy for device logs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete_logautodeletion:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete_logautodeletion: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_autodelete_quarantinefilesautodeletion": {
    "prefix": "fmgr_system_autodelete_quarantinefilesautodeletion",
    "description": "Automatic deletion policy for quarantined files.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete_quarantinefilesautodeletion:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete_quarantinefilesautodeletion: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_autodelete_reportautodeletion": {
    "prefix": "fmgr_system_autodelete_reportautodeletion",
    "description": "Automatic deletion policy for reports.",
    "body": [
      "fortinet.fortimanager.fmgr_system_autodelete_reportautodeletion:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_autodelete_reportautodeletion: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_backup_allsettings": {
    "prefix": "fmgr_system_backup_allsettings",
    "description": "Scheduled backup settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_backup_allsettings:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_backup_allsettings: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_certificate_ca": {
    "prefix": "fmgr_system_certificate_ca",
    "description": "CA certificate.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_ca:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_ca: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_certificate_crl": {
    "prefix": "fmgr_system_certificate_crl",
    "description": "Certificate Revocation List.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_crl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_crl: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_certificate_local": {
    "prefix": "fmgr_system_certificate_local",
    "description": "Local keys and certificates.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_local:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_local: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_certificate_oftp": {
    "prefix": "fmgr_system_certificate_oftp",
    "description": "OFTP certificates and keys.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_oftp:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_certificate_oftp: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_certificate_remote": {
    "prefix": "fmgr_system_certificate_remote",
    "description": "Remote certificate.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_remote:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_remote: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_certificate_ssh": {
    "prefix": "fmgr_system_certificate_ssh",
    "description": "SSH certificates and keys.",
    "body": [
      "fortinet.fortimanager.fmgr_system_certificate_ssh:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_certificate_ssh: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_connector": {
    "prefix": "fmgr_system_connector",
    "description": "Configure connector.",
    "body": [
      "fortinet.fortimanager.fmgr_system_connector:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_connector: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_customlanguage": {
    "prefix": "fmgr_system_customlanguage",
    "description": "Configure custom languages.",
    "body": [
      "fortinet.fortimanager.fmgr_system_customlanguage:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_customlanguage: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_dhcp_server": {
    "prefix": "fmgr_system_dhcp_server",
    "description": "Configure DHCP servers.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_dhcp_server: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_dhcp_server_excluderange": {
    "prefix": "fmgr_system_dhcp_server_excluderange",
    "description": "Exclude one or more ranges of IP addresses from being assigned to clients.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server_excluderange:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_dhcp_server_excluderange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_dhcp_server_iprange": {
    "prefix": "fmgr_system_dhcp_server_iprange",
    "description": "DHCP IP range configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server_iprange:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_dhcp_server_iprange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_dhcp_server_options": {
    "prefix": "fmgr_system_dhcp_server_options",
    "description": "DHCP options.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server_options:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_dhcp_server_options: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_dhcp_server_reservedaddress": {
    "prefix": "fmgr_system_dhcp_server_reservedaddress",
    "description": "Options for the DHCP server to assign IP settings to specific MAC addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dhcp_server_reservedaddress:",
      "\tadom: ${1:}",
      "\tserver: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_dhcp_server_reservedaddress: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_dm": {
    "prefix": "fmgr_system_dm",
    "description": "Configure dm.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dm:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_dm: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_dns": {
    "prefix": "fmgr_system_dns",
    "description": "DNS configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_dns:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_dns: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_docker": {
    "prefix": "fmgr_system_docker",
    "description": "Docker host.",
    "body": [
      "fortinet.fortimanager.fmgr_system_docker:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_docker: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_externalresource": {
    "prefix": "fmgr_system_externalresource",
    "description": "Configure external resource.",
    "body": [
      "fortinet.fortimanager.fmgr_system_externalresource:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_externalresource: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_fips": {
    "prefix": "fmgr_system_fips",
    "description": "Settings for FIPS-CC mode.",
    "body": [
      "fortinet.fortimanager.fmgr_system_fips:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_fips: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_fortiguard": {
    "prefix": "fmgr_system_fortiguard",
    "description": "Configure FortiGuard services.",
    "body": [
      "fortinet.fortimanager.fmgr_system_fortiguard:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_fortiguard: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_fortiview_autocache": {
    "prefix": "fmgr_system_fortiview_autocache",
    "description": "FortiView auto-cache settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_fortiview_autocache:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_fortiview_autocache: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_fortiview_setting": {
    "prefix": "fmgr_system_fortiview_setting",
    "description": "FortiView settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_fortiview_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_fortiview_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_geoipcountry": {
    "prefix": "fmgr_system_geoipcountry",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_system_geoipcountry:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_geoipcountry: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_geoipoverride": {
    "prefix": "fmgr_system_geoipoverride",
    "description": "Configure geographical location mapping for IP address",
    "body": [
      "fortinet.fortimanager.fmgr_system_geoipoverride:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_geoipoverride: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_geoipoverride_ip6range": {
    "prefix": "fmgr_system_geoipoverride_ip6range",
    "description": "Table of IPv6 ranges assigned to country.",
    "body": [
      "fortinet.fortimanager.fmgr_system_geoipoverride_ip6range:",
      "\tadom: ${1:}",
      "\tgeoip-override: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_geoipoverride_ip6range: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_geoipoverride_iprange": {
    "prefix": "fmgr_system_geoipoverride_iprange",
    "description": "Table of IP ranges assigned to country.",
    "body": [
      "fortinet.fortimanager.fmgr_system_geoipoverride_iprange:",
      "\tadom: ${1:}",
      "\tgeoip-override: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_geoipoverride_iprange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_global": {
    "prefix": "fmgr_system_global",
    "description": "Global range attributes.",
    "body": [
      "fortinet.fortimanager.fmgr_system_global:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_global: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_guiact": {
    "prefix": "fmgr_system_guiact",
    "description": "System settings through GUI.",
    "body": [
      "fortinet.fortimanager.fmgr_system_guiact:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_guiact: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_ha": {
    "prefix": "fmgr_system_ha",
    "description": "HA configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ha:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_ha: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_ha_monitoredinterfaces": {
    "prefix": "fmgr_system_ha_monitoredinterfaces",
    "description": "Monitored interfaces.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ha_monitoredinterfaces:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_ha_monitoredinterfaces: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_ha_monitoredips": {
    "prefix": "fmgr_system_ha_monitoredips",
    "description": "Monitored IP addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ha_monitoredips:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_ha_monitoredips: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_ha_peer": {
    "prefix": "fmgr_system_ha_peer",
    "description": "Peer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ha_peer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_ha_peer: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_hascheduledcheck": {
    "prefix": "fmgr_system_hascheduledcheck",
    "description": "Scheduled HA integrity check.",
    "body": [
      "fortinet.fortimanager.fmgr_system_hascheduledcheck:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_hascheduledcheck: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_interface": {
    "prefix": "fmgr_system_interface",
    "description": "Interface configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_interface: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_interface_ipv6": {
    "prefix": "fmgr_system_interface_ipv6",
    "description": "IPv6 of interface.",
    "body": [
      "fortinet.fortimanager.fmgr_system_interface_ipv6:",
      "\tinterface: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_interface_ipv6: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_interface_member": {
    "prefix": "fmgr_system_interface_member",
    "description": "Physical interfaces that belong to the aggregate or redundant interface.",
    "body": [
      "fortinet.fortimanager.fmgr_system_interface_member:",
      "\tinterface: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_interface_member: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_localinpolicy": {
    "prefix": "fmgr_system_localinpolicy",
    "description": "IPv4 local in policy configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_localinpolicy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_localinpolicy: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_localinpolicy6": {
    "prefix": "fmgr_system_localinpolicy6",
    "description": "IPv6 local in policy configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_localinpolicy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_localinpolicy6: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_locallog_disk_filter": {
    "prefix": "fmgr_system_locallog_disk_filter",
    "description": "Filter for disk logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_disk_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_disk_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_disk_setting": {
    "prefix": "fmgr_system_locallog_disk_setting",
    "description": "Settings for local disk logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_disk_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_disk_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer2_filter": {
    "prefix": "fmgr_system_locallog_fortianalyzer2_filter",
    "description": "Filter for FortiAnalyzer2 logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer2_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer2_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer2_setting": {
    "prefix": "fmgr_system_locallog_fortianalyzer2_setting",
    "description": "Settings for locallog to fortianalyzer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer2_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer2_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer3_filter": {
    "prefix": "fmgr_system_locallog_fortianalyzer3_filter",
    "description": "Filter for FortiAnalyzer3 logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer3_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer3_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer3_setting": {
    "prefix": "fmgr_system_locallog_fortianalyzer3_setting",
    "description": "Settings for locallog to fortianalyzer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer3_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer3_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer_filter": {
    "prefix": "fmgr_system_locallog_fortianalyzer_filter",
    "description": "Filter for FortiAnalyzer logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_fortianalyzer_setting": {
    "prefix": "fmgr_system_locallog_fortianalyzer_setting",
    "description": "Settings for locallog to fortianalyzer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_fortianalyzer_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_fortianalyzer_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_memory_filter": {
    "prefix": "fmgr_system_locallog_memory_filter",
    "description": "Filter for memory logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_memory_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_memory_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_memory_setting": {
    "prefix": "fmgr_system_locallog_memory_setting",
    "description": "Settings for memory buffer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_memory_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_memory_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_setting": {
    "prefix": "fmgr_system_locallog_setting",
    "description": "Settings for locallog logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd2_filter": {
    "prefix": "fmgr_system_locallog_syslogd2_filter",
    "description": "Filter for syslog logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd2_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd2_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd2_setting": {
    "prefix": "fmgr_system_locallog_syslogd2_setting",
    "description": "Settings for remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd2_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd2_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd3_filter": {
    "prefix": "fmgr_system_locallog_syslogd3_filter",
    "description": "Filter for syslog logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd3_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd3_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd3_setting": {
    "prefix": "fmgr_system_locallog_syslogd3_setting",
    "description": "Settings for remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd3_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd3_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd_filter": {
    "prefix": "fmgr_system_locallog_syslogd_filter",
    "description": "Filter for syslog logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd_filter:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd_filter: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_locallog_syslogd_setting": {
    "prefix": "fmgr_system_locallog_syslogd_setting",
    "description": "Settings for remote syslog server.",
    "body": [
      "fortinet.fortimanager.fmgr_system_locallog_syslogd_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_locallog_syslogd_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_alert": {
    "prefix": "fmgr_system_log_alert",
    "description": "Log based alert settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_alert:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_alert: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_devicedisable": {
    "prefix": "fmgr_system_log_devicedisable",
    "description": "Disable client device logging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_devicedisable:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_log_devicedisable: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_log_fospolicystats": {
    "prefix": "fmgr_system_log_fospolicystats",
    "description": "FortiOS policy statistics settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_fospolicystats:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_fospolicystats: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_interfacestats": {
    "prefix": "fmgr_system_log_interfacestats",
    "description": "Interface statistics settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_interfacestats:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_interfacestats: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_ioc": {
    "prefix": "fmgr_system_log_ioc",
    "description": "IoC settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_ioc:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_ioc: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_maildomain": {
    "prefix": "fmgr_system_log_maildomain",
    "description": "FortiMail domain setting.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_maildomain:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_log_maildomain: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_log_ratelimit": {
    "prefix": "fmgr_system_log_ratelimit",
    "description": "Logging rate limit.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_ratelimit:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_ratelimit: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_ratelimit_device": {
    "prefix": "fmgr_system_log_ratelimit_device",
    "description": "Device log rate limit.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_ratelimit_device:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_log_ratelimit_device: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_log_ratelimit_ratelimits": {
    "prefix": "fmgr_system_log_ratelimit_ratelimits",
    "description": "Per device or ADOM log rate limits.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_ratelimit_ratelimits:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_log_ratelimit_ratelimits: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_log_settings": {
    "prefix": "fmgr_system_log_settings",
    "description": "Log settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_settings:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_settings: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_settings_rollinganalyzer": {
    "prefix": "fmgr_system_log_settings_rollinganalyzer",
    "description": "Log rolling policy for Network Analyzer logs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_settings_rollinganalyzer:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_settings_rollinganalyzer: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_settings_rollinglocal": {
    "prefix": "fmgr_system_log_settings_rollinglocal",
    "description": "Log rolling policy for local logs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_settings_rollinglocal:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_settings_rollinglocal: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_settings_rollingregular": {
    "prefix": "fmgr_system_log_settings_rollingregular",
    "description": "Log rolling policy for device logs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_settings_rollingregular:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_settings_rollingregular: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_log_topology": {
    "prefix": "fmgr_system_log_topology",
    "description": "Logging topology settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_log_topology:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_log_topology: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_logfetch_clientprofile": {
    "prefix": "fmgr_system_logfetch_clientprofile",
    "description": "Log-fetch client profile settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_logfetch_clientprofile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_logfetch_clientprofile: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_logfetch_clientprofile_devicefilter": {
    "prefix": "fmgr_system_logfetch_clientprofile_devicefilter",
    "description": "List of device filter.",
    "body": [
      "fortinet.fortimanager.fmgr_system_logfetch_clientprofile_devicefilter:",
      "\tclient-profile: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_logfetch_clientprofile_devicefilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_logfetch_clientprofile_logfilter": {
    "prefix": "fmgr_system_logfetch_clientprofile_logfilter",
    "description": "Log content filters.",
    "body": [
      "fortinet.fortimanager.fmgr_system_logfetch_clientprofile_logfilter:",
      "\tclient-profile: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_logfetch_clientprofile_logfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_logfetch_serversettings": {
    "prefix": "fmgr_system_logfetch_serversettings",
    "description": "Log-fetch server settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_logfetch_serversettings:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_logfetch_serversettings: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_mail": {
    "prefix": "fmgr_system_mail",
    "description": "Alert emails.",
    "body": [
      "fortinet.fortimanager.fmgr_system_mail:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_mail: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_mcpolicydisabledadoms": {
    "prefix": "fmgr_system_mcpolicydisabledadoms",
    "description": "Multicast policy disabled adoms.",
    "body": [
      "fortinet.fortimanager.fmgr_system_mcpolicydisabledadoms:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_mcpolicydisabledadoms: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_meta": {
    "prefix": "fmgr_system_meta",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_system_meta:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_meta: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_meta_sysmetafields": {
    "prefix": "fmgr_system_meta_sysmetafields",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_system_meta_sysmetafields:",
      "\tadom: ${1:}",
      "\tmeta: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_meta_sysmetafields: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_metadata_admins": {
    "prefix": "fmgr_system_metadata_admins",
    "description": "Configure admins.",
    "body": [
      "fortinet.fortimanager.fmgr_system_metadata_admins:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_metadata_admins: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu": {
    "prefix": "fmgr_system_npu",
    "description": "Configure NPU attributes.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_backgroundssescan": {
    "prefix": "fmgr_system_npu_backgroundssescan",
    "description": "Configure driver background scan for SSE.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_backgroundssescan:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_backgroundssescan: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_dosoptions": {
    "prefix": "fmgr_system_npu_dosoptions",
    "description": "NPU DoS configurations.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_dosoptions:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_dosoptions: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_dswdtsprofile": {
    "prefix": "fmgr_system_npu_dswdtsprofile",
    "description": "Configure NPU DSW DTS profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_dswdtsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_dswdtsprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_dswqueuedtsprofile": {
    "prefix": "fmgr_system_npu_dswqueuedtsprofile",
    "description": "Configure NPU DSW Queue DTS profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_dswqueuedtsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_dswqueuedtsprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_fpanomaly": {
    "prefix": "fmgr_system_npu_fpanomaly",
    "description": "NP6Lite anomaly protection",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_fpanomaly:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_fpanomaly: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_hpe": {
    "prefix": "fmgr_system_npu_hpe",
    "description": "Host protection engine configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_hpe:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_hpe: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_ipreassembly": {
    "prefix": "fmgr_system_npu_ipreassembly",
    "description": "IP reassebmly engine configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_ipreassembly:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_ipreassembly: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_isfnpqueues": {
    "prefix": "fmgr_system_npu_isfnpqueues",
    "description": "Configure queues of switch port connected to NP6 XAUI on ingress path.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_isfnpqueues:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_isfnpqueues: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_npqueues": {
    "prefix": "fmgr_system_npu_npqueues",
    "description": "Configure queue assignment on NP7.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_npqueues: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_npqueues_ethernettype": {
    "prefix": "fmgr_system_npu_npqueues_ethernettype",
    "description": "Configure a NP7 QoS Ethernet Type.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_ethernettype:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_ethernettype: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_npqueues_ipprotocol": {
    "prefix": "fmgr_system_npu_npqueues_ipprotocol",
    "description": "Configure a NP7 QoS IP Protocol.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_ipprotocol:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_ipprotocol: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_npqueues_ipservice": {
    "prefix": "fmgr_system_npu_npqueues_ipservice",
    "description": "Configure a NP7 QoS IP Service.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_ipservice:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_ipservice: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_npqueues_profile": {
    "prefix": "fmgr_system_npu_npqueues_profile",
    "description": "Configure a NP7 class profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_npqueues_scheduler": {
    "prefix": "fmgr_system_npu_npqueues_scheduler",
    "description": "Configure a NP7 QoS Scheduler.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_npqueues_scheduler:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_npqueues_scheduler: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_portcpumap": {
    "prefix": "fmgr_system_npu_portcpumap",
    "description": "Configure NPU interface to CPU core mapping.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_portcpumap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_portcpumap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_portnpumap": {
    "prefix": "fmgr_system_npu_portnpumap",
    "description": "Configure port to NPU group mapping.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_portnpumap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_portnpumap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_portpathoption": {
    "prefix": "fmgr_system_npu_portpathoption",
    "description": "Configure port using NPU or Intel-NIC.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_portpathoption:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_portpathoption: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_priorityprotocol": {
    "prefix": "fmgr_system_npu_priorityprotocol",
    "description": "Configure NPU priority protocol.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_priorityprotocol:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_priorityprotocol: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_ssehascan": {
    "prefix": "fmgr_system_npu_ssehascan",
    "description": "Configure driver HA scan for SSE.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_ssehascan:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_ssehascan: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_swehhash": {
    "prefix": "fmgr_system_npu_swehhash",
    "description": "Configure switch enhanced hashing.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_swehhash:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_swehhash: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_swtrhash": {
    "prefix": "fmgr_system_npu_swtrhash",
    "description": "Configure switch traditional hashing.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_swtrhash:",
      "\tadom: ${1:}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_npu_swtrhash: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_npu_tcptimeoutprofile": {
    "prefix": "fmgr_system_npu_tcptimeoutprofile",
    "description": "Configure TCP timeout profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_tcptimeoutprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_tcptimeoutprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_npu_udptimeoutprofile": {
    "prefix": "fmgr_system_npu_udptimeoutprofile",
    "description": "Configure UDP timeout profile.",
    "body": [
      "fortinet.fortimanager.fmgr_system_npu_udptimeoutprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_npu_udptimeoutprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_ntp": {
    "prefix": "fmgr_system_ntp",
    "description": "NTP settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ntp:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_ntp: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_ntp_ntpserver": {
    "prefix": "fmgr_system_ntp_ntpserver",
    "description": "NTP server.",
    "body": [
      "fortinet.fortimanager.fmgr_system_ntp_ntpserver:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_ntp_ntpserver: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_objecttag": {
    "prefix": "fmgr_system_objecttag",
    "description": "Configure object tags.",
    "body": [
      "fortinet.fortimanager.fmgr_system_objecttag:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_objecttag: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_objecttagging": {
    "prefix": "fmgr_system_objecttagging",
    "description": "Configure object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_system_objecttagging:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_objecttagging: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_passwordpolicy": {
    "prefix": "fmgr_system_passwordpolicy",
    "description": "Password policy.",
    "body": [
      "fortinet.fortimanager.fmgr_system_passwordpolicy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_passwordpolicy: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_replacemsggroup": {
    "prefix": "fmgr_system_replacemsggroup",
    "description": "Configure replacement message groups.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_replacemsggroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_replacemsggroup_admin": {
    "prefix": "fmgr_system_replacemsggroup_admin",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_admin:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_admin: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_alertmail": {
    "prefix": "fmgr_system_replacemsggroup_alertmail",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_alertmail:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_alertmail: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_auth": {
    "prefix": "fmgr_system_replacemsggroup_auth",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_auth:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_auth: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_automation": {
    "prefix": "fmgr_system_replacemsggroup_automation",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_automation:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_automation: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_custommessage": {
    "prefix": "fmgr_system_replacemsggroup_custommessage",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_custommessage:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_custommessage: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_devicedetectionportal": {
    "prefix": "fmgr_system_replacemsggroup_devicedetectionportal",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_devicedetectionportal:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_devicedetectionportal: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_ec": {
    "prefix": "fmgr_system_replacemsggroup_ec",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_ec:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_ec: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_fortiguardwf": {
    "prefix": "fmgr_system_replacemsggroup_fortiguardwf",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_fortiguardwf:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_fortiguardwf: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_ftp": {
    "prefix": "fmgr_system_replacemsggroup_ftp",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_ftp:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_ftp: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_http": {
    "prefix": "fmgr_system_replacemsggroup_http",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_http:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_http: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_icap": {
    "prefix": "fmgr_system_replacemsggroup_icap",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_icap:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_icap: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mail": {
    "prefix": "fmgr_system_replacemsggroup_mail",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mail:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mail: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mm1": {
    "prefix": "fmgr_system_replacemsggroup_mm1",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mm1:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mm1: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mm3": {
    "prefix": "fmgr_system_replacemsggroup_mm3",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mm3:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mm3: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mm4": {
    "prefix": "fmgr_system_replacemsggroup_mm4",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mm4:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mm4: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mm7": {
    "prefix": "fmgr_system_replacemsggroup_mm7",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mm7:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mm7: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_mms": {
    "prefix": "fmgr_system_replacemsggroup_mms",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_mms:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_mms: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_nacquar": {
    "prefix": "fmgr_system_replacemsggroup_nacquar",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_nacquar:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_nacquar: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_nntp": {
    "prefix": "fmgr_system_replacemsggroup_nntp",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_nntp:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_nntp: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_spam": {
    "prefix": "fmgr_system_replacemsggroup_spam",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_spam:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_spam: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_sslvpn": {
    "prefix": "fmgr_system_replacemsggroup_sslvpn",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_sslvpn:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_sslvpn: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_trafficquota": {
    "prefix": "fmgr_system_replacemsggroup_trafficquota",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_trafficquota:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_trafficquota: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_utm": {
    "prefix": "fmgr_system_replacemsggroup_utm",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_utm:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_utm: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsggroup_webproxy": {
    "prefix": "fmgr_system_replacemsggroup_webproxy",
    "description": "Replacement message table entries.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsggroup_webproxy:",
      "\tadom: ${1:}",
      "\treplacemsg-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_replacemsggroup_webproxy: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_replacemsgimage": {
    "prefix": "fmgr_system_replacemsgimage",
    "description": "Configure replacement message images.",
    "body": [
      "fortinet.fortimanager.fmgr_system_replacemsgimage:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_replacemsgimage: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_report_autocache": {
    "prefix": "fmgr_system_report_autocache",
    "description": "Report auto-cache settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_autocache:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_report_autocache: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_report_estbrowsetime": {
    "prefix": "fmgr_system_report_estbrowsetime",
    "description": "Report estimated browse time settings",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_estbrowsetime:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_report_estbrowsetime: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_report_group": {
    "prefix": "fmgr_system_report_group",
    "description": "Report group.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_report_group: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_report_group_chartalternative": {
    "prefix": "fmgr_system_report_group_chartalternative",
    "description": "Chart alternatives.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_group_chartalternative:",
      "\tgroup: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_report_group_chartalternative: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_report_group_groupby": {
    "prefix": "fmgr_system_report_group_groupby",
    "description": "Group-by variables.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_group_groupby:",
      "\tgroup: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_report_group_groupby: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_report_setting": {
    "prefix": "fmgr_system_report_setting",
    "description": "Report settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_report_setting:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_report_setting: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_route": {
    "prefix": "fmgr_system_route",
    "description": "Routing table configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_route:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_route: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_route6": {
    "prefix": "fmgr_system_route6",
    "description": "Routing table configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_route6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_route6: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_saml": {
    "prefix": "fmgr_system_saml",
    "description": "Global settings for SAML authentication.",
    "body": [
      "fortinet.fortimanager.fmgr_system_saml:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_saml: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_saml_fabricidp": {
    "prefix": "fmgr_system_saml_fabricidp",
    "description": "Authorized identity providers.",
    "body": [
      "fortinet.fortimanager.fmgr_system_saml_fabricidp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_saml_fabricidp: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sdnconnector": {
    "prefix": "fmgr_system_sdnconnector",
    "description": "Configure connection to SDN Connector.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_sdnconnector: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_sdnconnector_compartmentlist": {
    "prefix": "fmgr_system_sdnconnector_compartmentlist",
    "description": "Configure OCI compartment list.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_compartmentlist:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_compartmentlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_externalaccountlist": {
    "prefix": "fmgr_system_sdnconnector_externalaccountlist",
    "description": "Configure AWS external account list.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_externalaccountlist:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_externalaccountlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_externalip": {
    "prefix": "fmgr_system_sdnconnector_externalip",
    "description": "Configure GCP external IP.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_externalip:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_externalip: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_forwardingrule": {
    "prefix": "fmgr_system_sdnconnector_forwardingrule",
    "description": "Configure GCP forwarding rule.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_forwardingrule:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_forwardingrule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_gcpprojectlist": {
    "prefix": "fmgr_system_sdnconnector_gcpprojectlist",
    "description": "Configure GCP project list.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_gcpprojectlist:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_gcpprojectlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_nic": {
    "prefix": "fmgr_system_sdnconnector_nic",
    "description": "Configure Azure network interface.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_nic:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_nic: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_nic_ip": {
    "prefix": "fmgr_system_sdnconnector_nic_ip",
    "description": "Configure IP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_nic_ip:",
      "\tadom: ${1:}",
      "\tnic: ${2:}",
      "\tsdn-connector: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#system_sdnconnector_nic_ip: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_system_sdnconnector_ociregionlist": {
    "prefix": "fmgr_system_sdnconnector_ociregionlist",
    "description": "Configure OCI region list.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_ociregionlist:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_ociregionlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_route": {
    "prefix": "fmgr_system_sdnconnector_route",
    "description": "Configure GCP route.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_route:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_route: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_routetable": {
    "prefix": "fmgr_system_sdnconnector_routetable",
    "description": "Configure Azure route table.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_routetable:",
      "\tadom: ${1:}",
      "\tsdn-connector: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#system_sdnconnector_routetable: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_system_sdnconnector_routetable_route": {
    "prefix": "fmgr_system_sdnconnector_routetable_route",
    "description": "Configure Azure route.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sdnconnector_routetable_route:",
      "\tadom: ${1:}",
      "\troute-table: ${2:}",
      "\tsdn-connector: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#system_sdnconnector_routetable_route: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_system_smsserver": {
    "prefix": "fmgr_system_smsserver",
    "description": "Configure SMS server for sending SMS messages to support user authentication.",
    "body": [
      "fortinet.fortimanager.fmgr_system_smsserver:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_smsserver: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_sniffer": {
    "prefix": "fmgr_system_sniffer",
    "description": "Interface sniffer.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sniffer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sniffer: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_snmp_community": {
    "prefix": "fmgr_system_snmp_community",
    "description": "SNMP community configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_community:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_snmp_community: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_snmp_community_hosts": {
    "prefix": "fmgr_system_snmp_community_hosts",
    "description": "Allow hosts configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_community_hosts:",
      "\tcommunity: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_snmp_community_hosts: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_snmp_community_hosts6": {
    "prefix": "fmgr_system_snmp_community_hosts6",
    "description": "Allow hosts configuration for IPv6.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_community_hosts6:",
      "\tcommunity: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_snmp_community_hosts6: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_snmp_sysinfo": {
    "prefix": "fmgr_system_snmp_sysinfo",
    "description": "SNMP configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_sysinfo:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_snmp_sysinfo: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_snmp_user": {
    "prefix": "fmgr_system_snmp_user",
    "description": "SNMP user configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_system_snmp_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_snmp_user: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_socfabric": {
    "prefix": "fmgr_system_socfabric",
    "description": "SOC Fabric.",
    "body": [
      "fortinet.fortimanager.fmgr_system_socfabric:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_socfabric: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_socfabric_trustedlist": {
    "prefix": "fmgr_system_socfabric_trustedlist",
    "description": "Pre-authorized security fabric nodes",
    "body": [
      "fortinet.fortimanager.fmgr_system_socfabric_trustedlist:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_socfabric_trustedlist: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sql": {
    "prefix": "fmgr_system_sql",
    "description": "SQL settings.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sql:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_sql: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_sql_customindex": {
    "prefix": "fmgr_system_sql_customindex",
    "description": "List of SQL index fields.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sql_customindex:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sql_customindex: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sql_customskipidx": {
    "prefix": "fmgr_system_sql_customskipidx",
    "description": "List of aditional SQL skip index fields.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sql_customskipidx:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sql_customskipidx: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sql_tsindexfield": {
    "prefix": "fmgr_system_sql_tsindexfield",
    "description": "List of SQL text search index fields.",
    "body": [
      "fortinet.fortimanager.fmgr_system_sql_tsindexfield:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sql_tsindexfield: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_sslciphersuites": {
    "prefix": "fmgr_system_sslciphersuites",
    "description": "Configure preferred SSL/TLS cipher suites",
    "body": [
      "fortinet.fortimanager.fmgr_system_sslciphersuites:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_sslciphersuites: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_syslog": {
    "prefix": "fmgr_system_syslog",
    "description": "Syslog servers.",
    "body": [
      "fortinet.fortimanager.fmgr_system_syslog:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_syslog: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_virtualwirepair": {
    "prefix": "fmgr_system_virtualwirepair",
    "description": "Configure virtual wire pairs.",
    "body": [
      "fortinet.fortimanager.fmgr_system_virtualwirepair:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_virtualwirepair: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_system_webproxy": {
    "prefix": "fmgr_system_webproxy",
    "description": "Configure system web proxy.",
    "body": [
      "fortinet.fortimanager.fmgr_system_webproxy:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#proposed_method: ${5:update|set|add}",
      "\t#rc_failed: ${6:}",
      "\t#rc_succeeded: ${7:}",
      "\t#system_webproxy: ${8:}",
      "\t#workspace_locking_adom: ${9:}",
      "\t#workspace_locking_timeout: ${10:300}"
    ]
  },
  "fmgr_system_workflow_approvalmatrix": {
    "prefix": "fmgr_system_workflow_approvalmatrix",
    "description": "workflow approval matrix.",
    "body": [
      "fortinet.fortimanager.fmgr_system_workflow_approvalmatrix:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#bypass_validation: ${3:false}",
      "\t#enable_log: ${4:false}",
      "\t#forticloud_access_token: ${5:}",
      "\t#proposed_method: ${6:update|set|add}",
      "\t#rc_failed: ${7:}",
      "\t#rc_succeeded: ${8:}",
      "\t#system_workflow_approvalmatrix: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}"
    ]
  },
  "fmgr_system_workflow_approvalmatrix_approver": {
    "prefix": "fmgr_system_workflow_approvalmatrix_approver",
    "description": "Approver.",
    "body": [
      "fortinet.fortimanager.fmgr_system_workflow_approvalmatrix_approver:",
      "\tapproval-matrix: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#system_workflow_approvalmatrix_approver: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_template": {
    "prefix": "fmgr_template",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_template:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#template: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_templategroup": {
    "prefix": "fmgr_templategroup",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_templategroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#templategroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_um_image_upgrade": {
    "prefix": "fmgr_um_image_upgrade",
    "description": "The older API for updating the firmware of specific device.",
    "body": [
      "fortinet.fortimanager.fmgr_um_image_upgrade:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#um_image_upgrade: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_um_image_upgrade_ext": {
    "prefix": "fmgr_um_image_upgrade_ext",
    "description": "Update the firmware of specific device.",
    "body": [
      "fortinet.fortimanager.fmgr_um_image_upgrade_ext:",
      "\t#access_token: ${1:}",
      "\t#bypass_validation: ${2:false}",
      "\t#enable_log: ${3:false}",
      "\t#forticloud_access_token: ${4:}",
      "\t#rc_failed: ${5:}",
      "\t#rc_succeeded: ${6:}",
      "\t#um_image_upgrade_ext: ${7:}",
      "\t#workspace_locking_adom: ${8:}",
      "\t#workspace_locking_timeout: ${9:300}"
    ]
  },
  "fmgr_user_adgrp": {
    "prefix": "fmgr_user_adgrp",
    "description": "Configure FSSO groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_adgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_adgrp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_certificate": {
    "prefix": "fmgr_user_certificate",
    "description": "Configure certificate users.",
    "body": [
      "fortinet.fortimanager.fmgr_user_certificate:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_certificate: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_clearpass": {
    "prefix": "fmgr_user_clearpass",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_clearpass:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_clearpass: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_connector": {
    "prefix": "fmgr_user_connector",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_connector:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_connector: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_device": {
    "prefix": "fmgr_user_device",
    "description": "Configure devices.",
    "body": [
      "fortinet.fortimanager.fmgr_user_device:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_device: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_device_dynamicmapping": {
    "prefix": "fmgr_user_device_dynamicmapping",
    "description": "Configure devices.",
    "body": [
      "fortinet.fortimanager.fmgr_user_device_dynamicmapping:",
      "\tadom: ${1:}",
      "\tdevice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_device_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_device_tagging": {
    "prefix": "fmgr_user_device_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_user_device_tagging:",
      "\tadom: ${1:}",
      "\tdevice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_device_tagging: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_deviceaccesslist": {
    "prefix": "fmgr_user_deviceaccesslist",
    "description": "Configure device access control lists.",
    "body": [
      "fortinet.fortimanager.fmgr_user_deviceaccesslist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_deviceaccesslist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_deviceaccesslist_devicelist": {
    "prefix": "fmgr_user_deviceaccesslist_devicelist",
    "description": "Device list.",
    "body": [
      "fortinet.fortimanager.fmgr_user_deviceaccesslist_devicelist:",
      "\tadom: ${1:}",
      "\tdevice-access-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_deviceaccesslist_devicelist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_devicecategory": {
    "prefix": "fmgr_user_devicecategory",
    "description": "Configure device categories.",
    "body": [
      "fortinet.fortimanager.fmgr_user_devicecategory:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_devicecategory: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_devicegroup": {
    "prefix": "fmgr_user_devicegroup",
    "description": "Configure device groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_devicegroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_devicegroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_devicegroup_dynamicmapping": {
    "prefix": "fmgr_user_devicegroup_dynamicmapping",
    "description": "Configure device groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_devicegroup_dynamicmapping:",
      "\tadom: ${1:}",
      "\tdevice-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_devicegroup_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_devicegroup_tagging": {
    "prefix": "fmgr_user_devicegroup_tagging",
    "description": "Config object tagging.",
    "body": [
      "fortinet.fortimanager.fmgr_user_devicegroup_tagging:",
      "\tadom: ${1:}",
      "\tdevice-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_devicegroup_tagging: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_domaincontroller": {
    "prefix": "fmgr_user_domaincontroller",
    "description": "Configure domain controller entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_domaincontroller:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_domaincontroller: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_domaincontroller_extraserver": {
    "prefix": "fmgr_user_domaincontroller_extraserver",
    "description": "extra servers.",
    "body": [
      "fortinet.fortimanager.fmgr_user_domaincontroller_extraserver:",
      "\tadom: ${1:}",
      "\tdomain-controller: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_domaincontroller_extraserver: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_exchange": {
    "prefix": "fmgr_user_exchange",
    "description": "Configure MS Exchange server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_exchange:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_exchange: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_flexvm": {
    "prefix": "fmgr_user_flexvm",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_flexvm:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_flexvm: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_fortitoken": {
    "prefix": "fmgr_user_fortitoken",
    "description": "Configure FortiToken.",
    "body": [
      "fortinet.fortimanager.fmgr_user_fortitoken:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_fortitoken: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_fsso": {
    "prefix": "fmgr_user_fsso",
    "description": "Configure Fortinet Single Sign On",
    "body": [
      "fortinet.fortimanager.fmgr_user_fsso:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_fsso: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_fsso_dynamicmapping": {
    "prefix": "fmgr_user_fsso_dynamicmapping",
    "description": "Configure Fortinet Single Sign On",
    "body": [
      "fortinet.fortimanager.fmgr_user_fsso_dynamicmapping:",
      "\tadom: ${1:}",
      "\tfsso: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_fsso_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_fssopolling": {
    "prefix": "fmgr_user_fssopolling",
    "description": "Configure FSSO active directory servers for polling mode.",
    "body": [
      "fortinet.fortimanager.fmgr_user_fssopolling:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_fssopolling: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_fssopolling_adgrp": {
    "prefix": "fmgr_user_fssopolling_adgrp",
    "description": "LDAP Group Info.",
    "body": [
      "fortinet.fortimanager.fmgr_user_fssopolling_adgrp:",
      "\tadom: ${1:}",
      "\tfsso-polling: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_fssopolling_adgrp: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_group": {
    "prefix": "fmgr_user_group",
    "description": "Configure user groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_group: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_group_dynamicmapping": {
    "prefix": "fmgr_user_group_dynamicmapping",
    "description": "Configure user groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_dynamicmapping:",
      "\tadom: ${1:}",
      "\tgroup: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_group_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_group_dynamicmapping_guest": {
    "prefix": "fmgr_user_group_dynamicmapping_guest",
    "description": "Guest User.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_dynamicmapping_guest:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tgroup: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#user_group_dynamicmapping_guest: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_user_group_dynamicmapping_match": {
    "prefix": "fmgr_user_group_dynamicmapping_match",
    "description": "Group matches.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_dynamicmapping_match:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tgroup: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#user_group_dynamicmapping_match: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_user_group_dynamicmapping_sslvpnoschecklist": {
    "prefix": "fmgr_user_group_dynamicmapping_sslvpnoschecklist",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_dynamicmapping_sslvpnoschecklist:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tgroup: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_group_dynamicmapping_sslvpnoschecklist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_group_guest": {
    "prefix": "fmgr_user_group_guest",
    "description": "Guest User.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_guest:",
      "\tadom: ${1:}",
      "\tgroup: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_group_guest: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_group_match": {
    "prefix": "fmgr_user_group_match",
    "description": "Group matches.",
    "body": [
      "fortinet.fortimanager.fmgr_user_group_match:",
      "\tadom: ${1:}",
      "\tgroup: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_group_match: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_json": {
    "prefix": "fmgr_user_json",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_json:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_json: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_krbkeytab": {
    "prefix": "fmgr_user_krbkeytab",
    "description": "Configure Kerberos keytab entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_krbkeytab:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_krbkeytab: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_ldap": {
    "prefix": "fmgr_user_ldap",
    "description": "Configure LDAP server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_ldap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_ldap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_ldap_dynamicmapping": {
    "prefix": "fmgr_user_ldap_dynamicmapping",
    "description": "Configure LDAP server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_ldap_dynamicmapping:",
      "\tadom: ${1:}",
      "\tldap: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_ldap_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_local": {
    "prefix": "fmgr_user_local",
    "description": "Configure local users.",
    "body": [
      "fortinet.fortimanager.fmgr_user_local:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_local: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_nsx": {
    "prefix": "fmgr_user_nsx",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_nsx:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_nsx: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_nsx_service": {
    "prefix": "fmgr_user_nsx_service",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_nsx_service:",
      "\tadom: ${1:}",
      "\tnsx: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_nsx_service: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_passwordpolicy": {
    "prefix": "fmgr_user_passwordpolicy",
    "description": "Configure user password policy.",
    "body": [
      "fortinet.fortimanager.fmgr_user_passwordpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_passwordpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_peer": {
    "prefix": "fmgr_user_peer",
    "description": "Configure peer users.",
    "body": [
      "fortinet.fortimanager.fmgr_user_peer:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_peer: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_peergrp": {
    "prefix": "fmgr_user_peergrp",
    "description": "Configure peer groups.",
    "body": [
      "fortinet.fortimanager.fmgr_user_peergrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_peergrp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_pop3": {
    "prefix": "fmgr_user_pop3",
    "description": "POP3 server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_user_pop3:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_pop3: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_pxgrid": {
    "prefix": "fmgr_user_pxgrid",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_pxgrid:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_pxgrid: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_radius": {
    "prefix": "fmgr_user_radius",
    "description": "Configure RADIUS server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_radius:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_radius: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_radius_accountingserver": {
    "prefix": "fmgr_user_radius_accountingserver",
    "description": "Additional accounting servers.",
    "body": [
      "fortinet.fortimanager.fmgr_user_radius_accountingserver:",
      "\tadom: ${1:}",
      "\tradius: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_radius_accountingserver: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_radius_dynamicmapping": {
    "prefix": "fmgr_user_radius_dynamicmapping",
    "description": "Configure RADIUS server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_radius_dynamicmapping:",
      "\tadom: ${1:}",
      "\tradius: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_radius_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_radius_dynamicmapping_accountingserver": {
    "prefix": "fmgr_user_radius_dynamicmapping_accountingserver",
    "description": "Additional accounting servers.",
    "body": [
      "fortinet.fortimanager.fmgr_user_radius_dynamicmapping_accountingserver:",
      "\tadom: ${1:}",
      "\tdynamic_mapping: ${2:}",
      "\tradius: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#user_radius_dynamicmapping_accountingserver: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_user_saml": {
    "prefix": "fmgr_user_saml",
    "description": "SAML server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_user_saml:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_saml: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_saml_dynamicmapping": {
    "prefix": "fmgr_user_saml_dynamicmapping",
    "description": "SAML server entry configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_user_saml_dynamicmapping:",
      "\tadom: ${1:}",
      "\tsaml: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_saml_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_securityexemptlist": {
    "prefix": "fmgr_user_securityexemptlist",
    "description": "Configure security exemption list.",
    "body": [
      "fortinet.fortimanager.fmgr_user_securityexemptlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_securityexemptlist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_securityexemptlist_rule": {
    "prefix": "fmgr_user_securityexemptlist_rule",
    "description": "Configure rules for exempting users from captive portal authentication.",
    "body": [
      "fortinet.fortimanager.fmgr_user_securityexemptlist_rule:",
      "\tadom: ${1:}",
      "\tsecurity-exempt-list: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_securityexemptlist_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_tacacs": {
    "prefix": "fmgr_user_tacacs",
    "description": "Configure TACACS+ server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_tacacs:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_tacacs: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_tacacs_dynamicmapping": {
    "prefix": "fmgr_user_tacacs_dynamicmapping",
    "description": "Configure TACACS+ server entries.",
    "body": [
      "fortinet.fortimanager.fmgr_user_tacacs_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\ttacacs+: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_tacacs_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_user_vcenter": {
    "prefix": "fmgr_user_vcenter",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_vcenter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#user_vcenter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_user_vcenter_rule": {
    "prefix": "fmgr_user_vcenter_rule",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_user_vcenter_rule:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvcenter: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#user_vcenter_rule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_utmprofile": {
    "prefix": "fmgr_utmprofile",
    "description": "Configure UTM",
    "body": [
      "fortinet.fortimanager.fmgr_utmprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#utmprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vap": {
    "prefix": "fmgr_vap",
    "description": "Configure Virtual Access Points",
    "body": [
      "fortinet.fortimanager.fmgr_vap:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vap: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vap_dynamicmapping": {
    "prefix": "fmgr_vap_dynamicmapping",
    "description": "Configure Virtual Access Points",
    "body": [
      "fortinet.fortimanager.fmgr_vap_dynamicmapping:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_dynamicmapping: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vap_macfilterlist": {
    "prefix": "fmgr_vap_macfilterlist",
    "description": "Create a list of MAC addresses for MAC address filtering.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_macfilterlist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_macfilterlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vap_mpskkey": {
    "prefix": "fmgr_vap_mpskkey",
    "description": "Pre-shared keys that can be used to connect to this virtual access point.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_mpskkey:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_mpskkey: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vap_portalmessageoverrides": {
    "prefix": "fmgr_vap_portalmessageoverrides",
    "description": "Individual message overrides.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_portalmessageoverrides:",
      "\tadom: ${1:}",
      "\tvap: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vap_portalmessageoverrides: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vap_vlanname": {
    "prefix": "fmgr_vap_vlanname",
    "description": "Table for mapping VLAN name to VLAN ID.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_vlanname:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_vlanname: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vap_vlanpool": {
    "prefix": "fmgr_vap_vlanpool",
    "description": "VLAN pool.",
    "body": [
      "fortinet.fortimanager.fmgr_vap_vlanpool:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvap: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vap_vlanpool: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vapgroup": {
    "prefix": "fmgr_vapgroup",
    "description": "Configure virtual Access Point",
    "body": [
      "fortinet.fortimanager.fmgr_vapgroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vapgroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_videofilter_profile": {
    "prefix": "fmgr_videofilter_profile",
    "description": "Configure VideoFilter profile.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#videofilter_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_videofilter_profile_fortiguardcategory": {
    "prefix": "fmgr_videofilter_profile_fortiguardcategory",
    "description": "Configure FortiGuard categories.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_profile_fortiguardcategory:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#videofilter_profile_fortiguardcategory: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_videofilter_profile_fortiguardcategory_filters": {
    "prefix": "fmgr_videofilter_profile_fortiguardcategory_filters",
    "description": "Configure VideoFilter FortiGuard category.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_profile_fortiguardcategory_filters:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#videofilter_profile_fortiguardcategory_filters: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_videofilter_youtubechannelfilter": {
    "prefix": "fmgr_videofilter_youtubechannelfilter",
    "description": "Configure YouTube channel filter.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_youtubechannelfilter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#videofilter_youtubechannelfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_videofilter_youtubechannelfilter_entries": {
    "prefix": "fmgr_videofilter_youtubechannelfilter_entries",
    "description": "YouTube filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_videofilter_youtubechannelfilter_entries:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tyoutube-channel-filter: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#videofilter_youtubechannelfilter_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_voip_profile": {
    "prefix": "fmgr_voip_profile",
    "description": "Configure VoIP profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_voip_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#voip_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_voip_profile_msrp": {
    "prefix": "fmgr_voip_profile_msrp",
    "description": "MSRP.",
    "body": [
      "fortinet.fortimanager.fmgr_voip_profile_msrp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#voip_profile_msrp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_voip_profile_sccp": {
    "prefix": "fmgr_voip_profile_sccp",
    "description": "SCCP.",
    "body": [
      "fortinet.fortimanager.fmgr_voip_profile_sccp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#voip_profile_sccp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_voip_profile_sip": {
    "prefix": "fmgr_voip_profile_sip",
    "description": "SIP.",
    "body": [
      "fortinet.fortimanager.fmgr_voip_profile_sip:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#voip_profile_sip: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_certificate_ca": {
    "prefix": "fmgr_vpn_certificate_ca",
    "description": "CA certificate.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_certificate_ca:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_certificate_ca: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_certificate_ocspserver": {
    "prefix": "fmgr_vpn_certificate_ocspserver",
    "description": "OCSP server configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_certificate_ocspserver:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_certificate_ocspserver: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_certificate_remote": {
    "prefix": "fmgr_vpn_certificate_remote",
    "description": "Remote certificate as a PEM file.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_certificate_remote:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_certificate_remote: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_ipsec_fec": {
    "prefix": "fmgr_vpn_ipsec_fec",
    "description": "Configure Forward Error Correction",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_ipsec_fec:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_ipsec_fec: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_ipsec_fec_mappings": {
    "prefix": "fmgr_vpn_ipsec_fec_mappings",
    "description": "FEC redundancy mapping table.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_ipsec_fec_mappings:",
      "\tadom: ${1:}",
      "\tfec: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpn_ipsec_fec_mappings: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpn_ssl_settings": {
    "prefix": "fmgr_vpn_ssl_settings",
    "description": "Configure SSL VPN.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_ssl_settings:",
      "\tdevice: ${1:}",
      "\tvdom: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpn_ssl_settings: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpn_ssl_settings_authenticationrule": {
    "prefix": "fmgr_vpn_ssl_settings_authenticationrule",
    "description": "Authentication rule for SSL VPN.",
    "body": [
      "fortinet.fortimanager.fmgr_vpn_ssl_settings_authenticationrule:",
      "\tdevice: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvdom: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpn_ssl_settings_authenticationrule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_node": {
    "prefix": "fmgr_vpnmgr_node",
    "description": "VPN node for VPN Manager.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnmgr_node: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnmgr_node_iprange": {
    "prefix": "fmgr_vpnmgr_node_iprange",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node_iprange:",
      "\tadom: ${1:}",
      "\tnode: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnmgr_node_iprange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_node_ipv4excluderange": {
    "prefix": "fmgr_vpnmgr_node_ipv4excluderange",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node_ipv4excluderange:",
      "\tadom: ${1:}",
      "\tnode: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnmgr_node_ipv4excluderange: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_node_protectedsubnet": {
    "prefix": "fmgr_vpnmgr_node_protectedsubnet",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node_protectedsubnet:",
      "\tadom: ${1:}",
      "\tnode: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnmgr_node_protectedsubnet: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_node_summaryaddr": {
    "prefix": "fmgr_vpnmgr_node_summaryaddr",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_node_summaryaddr:",
      "\tadom: ${1:}",
      "\tnode: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnmgr_node_summaryaddr: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnmgr_vpntable": {
    "prefix": "fmgr_vpnmgr_vpntable",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_vpnmgr_vpntable:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnmgr_vpntable: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_hostchecksoftware": {
    "prefix": "fmgr_vpnsslweb_hostchecksoftware",
    "description": "SSL-VPN host check software.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_hostchecksoftware:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_hostchecksoftware: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_hostchecksoftware_checkitemlist": {
    "prefix": "fmgr_vpnsslweb_hostchecksoftware_checkitemlist",
    "description": "Check item list.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_hostchecksoftware_checkitemlist:",
      "\tadom: ${1:}",
      "\thost-check-software: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_hostchecksoftware_checkitemlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_portal": {
    "prefix": "fmgr_vpnsslweb_portal",
    "description": "Portal.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_portal: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_bookmarkgroup": {
    "prefix": "fmgr_vpnsslweb_portal_bookmarkgroup",
    "description": "Portal bookmark group.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_bookmarkgroup:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_portal_bookmarkgroup: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks": {
    "prefix": "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks",
    "description": "Bookmark table.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks:",
      "\tadom: ${1:}",
      "\tbookmark-group: ${2:}",
      "\tportal: ${3:}",
      "\tstate: ${4:present|absent}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#vpnsslweb_portal_bookmarkgroup_bookmarks: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks_formdata": {
    "prefix": "fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks_formdata",
    "description": "Form data.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks_formdata:",
      "\tadom: ${1:}",
      "\tbookmark-group: ${2:}",
      "\tbookmarks: ${3:}",
      "\tportal: ${4:}",
      "\tstate: ${5:present|absent}",
      "\t#access_token: ${6:}",
      "\t#bypass_validation: ${7:false}",
      "\t#enable_log: ${8:false}",
      "\t#forticloud_access_token: ${9:}",
      "\t#proposed_method: ${10:update|set|add}",
      "\t#rc_failed: ${11:}",
      "\t#rc_succeeded: ${12:}",
      "\t#vpnsslweb_portal_bookmarkgroup_bookmarks_formdata: ${13:}",
      "\t#workspace_locking_adom: ${14:}",
      "\t#workspace_locking_timeout: ${15:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_landingpage": {
    "prefix": "fmgr_vpnsslweb_portal_landingpage",
    "description": "Landing page options.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_landingpage:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_portal_landingpage: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_landingpage_formdata": {
    "prefix": "fmgr_vpnsslweb_portal_landingpage_formdata",
    "description": "Form data.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_landingpage_formdata:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_portal_landingpage_formdata: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_macaddrcheckrule": {
    "prefix": "fmgr_vpnsslweb_portal_macaddrcheckrule",
    "description": "Client MAC address check rule.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_macaddrcheckrule:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_portal_macaddrcheckrule: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_oschecklist": {
    "prefix": "fmgr_vpnsslweb_portal_oschecklist",
    "description": "SSL VPN OS checks.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_oschecklist:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_portal_oschecklist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_portal_splitdns": {
    "prefix": "fmgr_vpnsslweb_portal_splitdns",
    "description": "Split DNS for SSL VPN.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_portal_splitdns:",
      "\tadom: ${1:}",
      "\tportal: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_portal_splitdns: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_vpnsslweb_realm": {
    "prefix": "fmgr_vpnsslweb_realm",
    "description": "Realm.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_realm:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_realm: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_virtualdesktopapplist": {
    "prefix": "fmgr_vpnsslweb_virtualdesktopapplist",
    "description": "SSL-VPN virtual desktop application list.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_virtualdesktopapplist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#vpnsslweb_virtualdesktopapplist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_vpnsslweb_virtualdesktopapplist_apps": {
    "prefix": "fmgr_vpnsslweb_virtualdesktopapplist_apps",
    "description": "Applications.",
    "body": [
      "fortinet.fortimanager.fmgr_vpnsslweb_virtualdesktopapplist_apps:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\tvirtual-desktop-app-list: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#vpnsslweb_virtualdesktopapplist_apps: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_mainclass": {
    "prefix": "fmgr_waf_mainclass",
    "description": "Hidden table for datasource.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_mainclass:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_mainclass: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile": {
    "prefix": "fmgr_waf_profile",
    "description": "Web application firewall configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_addresslist": {
    "prefix": "fmgr_waf_profile_addresslist",
    "description": "Black address list and white address list.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_addresslist:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_addresslist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint": {
    "prefix": "fmgr_waf_profile_constraint",
    "description": "WAF HTTP protocol restrictions.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_contentlength": {
    "prefix": "fmgr_waf_profile_constraint_contentlength",
    "description": "HTTP content length in request.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_contentlength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_contentlength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_exception": {
    "prefix": "fmgr_waf_profile_constraint_exception",
    "description": "HTTP constraint exception.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_exception:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#waf_profile_constraint_exception: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_profile_constraint_headerlength": {
    "prefix": "fmgr_waf_profile_constraint_headerlength",
    "description": "HTTP header length in request.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_headerlength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_headerlength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_hostname": {
    "prefix": "fmgr_waf_profile_constraint_hostname",
    "description": "Enable/disable hostname check.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_hostname:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_hostname: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_linelength": {
    "prefix": "fmgr_waf_profile_constraint_linelength",
    "description": "HTTP line length in request.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_linelength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_linelength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_malformed": {
    "prefix": "fmgr_waf_profile_constraint_malformed",
    "description": "Enable/disable malformed HTTP request check.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_malformed:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_malformed: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_maxcookie": {
    "prefix": "fmgr_waf_profile_constraint_maxcookie",
    "description": "Maximum number of cookies in HTTP request.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_maxcookie:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_maxcookie: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_maxheaderline": {
    "prefix": "fmgr_waf_profile_constraint_maxheaderline",
    "description": "Maximum number of HTTP header line.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_maxheaderline:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_maxheaderline: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_maxrangesegment": {
    "prefix": "fmgr_waf_profile_constraint_maxrangesegment",
    "description": "Maximum number of range segments in HTTP range line.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_maxrangesegment:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_maxrangesegment: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_maxurlparam": {
    "prefix": "fmgr_waf_profile_constraint_maxurlparam",
    "description": "Maximum number of parameters in URL.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_maxurlparam:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_maxurlparam: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_method": {
    "prefix": "fmgr_waf_profile_constraint_method",
    "description": "Enable/disable HTTP method check.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_method:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_method: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_paramlength": {
    "prefix": "fmgr_waf_profile_constraint_paramlength",
    "description": "Maximum length of parameter in URL, HTTP POST request or HTTP body.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_paramlength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_paramlength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_urlparamlength": {
    "prefix": "fmgr_waf_profile_constraint_urlparamlength",
    "description": "Maximum length of parameter in URL.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_urlparamlength:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_urlparamlength: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_constraint_version": {
    "prefix": "fmgr_waf_profile_constraint_version",
    "description": "Enable/disable HTTP version check.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_constraint_version:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_constraint_version: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_method": {
    "prefix": "fmgr_waf_profile_method",
    "description": "Method restriction.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_method:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_method: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_method_methodpolicy": {
    "prefix": "fmgr_waf_profile_method_methodpolicy",
    "description": "HTTP method policy.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_method_methodpolicy:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#waf_profile_method_methodpolicy: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_profile_signature": {
    "prefix": "fmgr_waf_profile_signature",
    "description": "WAF signatures.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_signature:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_signature: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_signature_customsignature": {
    "prefix": "fmgr_waf_profile_signature_customsignature",
    "description": "Custom signature.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_signature_customsignature:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#waf_profile_signature_customsignature: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_profile_signature_mainclass": {
    "prefix": "fmgr_waf_profile_signature_mainclass",
    "description": "Main signature class.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_signature_mainclass:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_profile_signature_mainclass: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_profile_urlaccess": {
    "prefix": "fmgr_waf_profile_urlaccess",
    "description": "URL access list",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_urlaccess:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#waf_profile_urlaccess: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_waf_profile_urlaccess_accesspattern": {
    "prefix": "fmgr_waf_profile_urlaccess_accesspattern",
    "description": "URL access pattern.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_profile_urlaccess_accesspattern:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\turl-access: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#waf_profile_urlaccess_accesspattern: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_waf_signature": {
    "prefix": "fmgr_waf_signature",
    "description": "Hidden table for datasource.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_signature:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_signature: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_waf_subclass": {
    "prefix": "fmgr_waf_subclass",
    "description": "Hidden table for datasource.",
    "body": [
      "fortinet.fortimanager.fmgr_waf_subclass:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#waf_subclass: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wagprofile": {
    "prefix": "fmgr_wagprofile",
    "description": "Configure wireless access gateway",
    "body": [
      "fortinet.fortimanager.fmgr_wagprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wagprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_authgroup": {
    "prefix": "fmgr_wanopt_authgroup",
    "description": "Configure WAN optimization authentication groups.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_authgroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_authgroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_peer": {
    "prefix": "fmgr_wanopt_peer",
    "description": "Configure WAN optimization peers.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_peer:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_peer: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile": {
    "prefix": "fmgr_wanopt_profile",
    "description": "Configure WAN optimization profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_cifs": {
    "prefix": "fmgr_wanopt_profile_cifs",
    "description": "Enable/disable CIFS",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_cifs:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_cifs: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_ftp": {
    "prefix": "fmgr_wanopt_profile_ftp",
    "description": "Enable/disable FTP WAN Optimization and configure FTP WAN Optimization features.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_ftp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_ftp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_http": {
    "prefix": "fmgr_wanopt_profile_http",
    "description": "Enable/disable HTTP WAN Optimization and configure HTTP WAN Optimization features.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_http:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_http: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_mapi": {
    "prefix": "fmgr_wanopt_profile_mapi",
    "description": "Enable/disable MAPI email WAN Optimization and configure MAPI WAN Optimization features.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_mapi:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_mapi: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanopt_profile_tcp": {
    "prefix": "fmgr_wanopt_profile_tcp",
    "description": "Enable/disable TCP WAN Optimization and configure TCP WAN Optimization features.",
    "body": [
      "fortinet.fortimanager.fmgr_wanopt_profile_tcp:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanopt_profile_tcp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan": {
    "prefix": "fmgr_wanprof_system_sdwan",
    "description": "Configure redundant internet connections using SD-WAN",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan:",
      "\tadom: ${1:}",
      "\twanprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanprof_system_sdwan: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_duplication": {
    "prefix": "fmgr_wanprof_system_sdwan_duplication",
    "description": "Create SD-WAN duplication rule.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_duplication:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_duplication: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_healthcheck": {
    "prefix": "fmgr_wanprof_system_sdwan_healthcheck",
    "description": "SD-WAN status checking or health checking.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_healthcheck:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_healthcheck: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_healthcheck_sla": {
    "prefix": "fmgr_wanprof_system_sdwan_healthcheck_sla",
    "description": "Service level agreement",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_healthcheck_sla:",
      "\tadom: ${1:}",
      "\thealth-check: ${2:}",
      "\tstate: ${3:present|absent}",
      "\twanprof: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#wanprof_system_sdwan_healthcheck_sla: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_members": {
    "prefix": "fmgr_wanprof_system_sdwan_members",
    "description": "FortiGate interfaces added to the SD-WAN.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_members:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_members: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_neighbor": {
    "prefix": "fmgr_wanprof_system_sdwan_neighbor",
    "description": "Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_neighbor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_neighbor: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_service": {
    "prefix": "fmgr_wanprof_system_sdwan_service",
    "description": "Create SD-WAN rules",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_service:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_service: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_service_sla": {
    "prefix": "fmgr_wanprof_system_sdwan_service_sla",
    "description": "Service level agreement",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_service_sla:",
      "\tadom: ${1:}",
      "\tservice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\twanprof: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#wanprof_system_sdwan_service_sla: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_wanprof_system_sdwan_zone": {
    "prefix": "fmgr_wanprof_system_sdwan_zone",
    "description": "Configure SD-WAN zones.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_sdwan_zone:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_sdwan_zone: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink": {
    "prefix": "fmgr_wanprof_system_virtualwanlink",
    "description": "Configure redundant internet connections using SD-WAN",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink:",
      "\tadom: ${1:}",
      "\twanprof: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wanprof_system_virtualwanlink: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_healthcheck": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_healthcheck",
    "description": "SD-WAN status checking or health checking.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_healthcheck:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_virtualwanlink_healthcheck: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_healthcheck_sla": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_healthcheck_sla",
    "description": "Service level agreement",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_healthcheck_sla:",
      "\tadom: ${1:}",
      "\thealth-check: ${2:}",
      "\tstate: ${3:present|absent}",
      "\twanprof: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#wanprof_system_virtualwanlink_healthcheck_sla: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_members": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_members",
    "description": "Physical FortiGate interfaces added to the virtual-wan-link.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_members:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_virtualwanlink_members: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_neighbor": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_neighbor",
    "description": "SD-WAN neighbor table.",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_neighbor:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_virtualwanlink_neighbor: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_service": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_service",
    "description": "Create SD-WAN rules or priority rules",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_service:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twanprof: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wanprof_system_virtualwanlink_service: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wanprof_system_virtualwanlink_service_sla": {
    "prefix": "fmgr_wanprof_system_virtualwanlink_service_sla",
    "description": "Service level agreement",
    "body": [
      "fortinet.fortimanager.fmgr_wanprof_system_virtualwanlink_service_sla:",
      "\tadom: ${1:}",
      "\tservice: ${2:}",
      "\tstate: ${3:present|absent}",
      "\twanprof: ${4:}",
      "\t#access_token: ${5:}",
      "\t#bypass_validation: ${6:false}",
      "\t#enable_log: ${7:false}",
      "\t#forticloud_access_token: ${8:}",
      "\t#proposed_method: ${9:update|set|add}",
      "\t#rc_failed: ${10:}",
      "\t#rc_succeeded: ${11:}",
      "\t#wanprof_system_virtualwanlink_service_sla: ${12:}",
      "\t#workspace_locking_adom: ${13:}",
      "\t#workspace_locking_timeout: ${14:300}"
    ]
  },
  "fmgr_webfilter_categories": {
    "prefix": "fmgr_webfilter_categories",
    "description": "no description",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_categories:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_categories: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_content": {
    "prefix": "fmgr_webfilter_content",
    "description": "Configure Web filter banned word table.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_content:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_content: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_content_entries": {
    "prefix": "fmgr_webfilter_content_entries",
    "description": "Configure banned word entries.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_content_entries:",
      "\tadom: ${1:}",
      "\tcontent: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_content_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_contentheader": {
    "prefix": "fmgr_webfilter_contentheader",
    "description": "Configure content types used by Web filter.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_contentheader:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_contentheader: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_contentheader_entries": {
    "prefix": "fmgr_webfilter_contentheader_entries",
    "description": "Configure content types used by web filter.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_contentheader_entries:",
      "\tadom: ${1:}",
      "\tcontent-header: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_contentheader_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_ftgdlocalcat": {
    "prefix": "fmgr_webfilter_ftgdlocalcat",
    "description": "Configure FortiGuard Web Filter local categories.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_ftgdlocalcat:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_ftgdlocalcat: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_ftgdlocalrating": {
    "prefix": "fmgr_webfilter_ftgdlocalrating",
    "description": "Configure local FortiGuard Web Filter local ratings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_ftgdlocalrating:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_ftgdlocalrating: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile": {
    "prefix": "fmgr_webfilter_profile",
    "description": "Configure Web filter profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_antiphish": {
    "prefix": "fmgr_webfilter_profile_antiphish",
    "description": "AntiPhishing profile.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_antiphish:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_antiphish: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_antiphish_custompatterns": {
    "prefix": "fmgr_webfilter_profile_antiphish_custompatterns",
    "description": "Custom username and password regex patterns.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_antiphish_custompatterns:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_antiphish_custompatterns: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_antiphish_inspectionentries": {
    "prefix": "fmgr_webfilter_profile_antiphish_inspectionentries",
    "description": "AntiPhishing entries.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_antiphish_inspectionentries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_antiphish_inspectionentries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_filefilter": {
    "prefix": "fmgr_webfilter_profile_filefilter",
    "description": "File filter.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_filefilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_filefilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_filefilter_entries": {
    "prefix": "fmgr_webfilter_profile_filefilter_entries",
    "description": "File filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_filefilter_entries:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_filefilter_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_ftgdwf": {
    "prefix": "fmgr_webfilter_profile_ftgdwf",
    "description": "FortiGuard Web Filter settings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_ftgdwf:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_ftgdwf: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_ftgdwf_filters": {
    "prefix": "fmgr_webfilter_profile_ftgdwf_filters",
    "description": "FortiGuard filters.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_ftgdwf_filters:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_ftgdwf_filters: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_ftgdwf_quota": {
    "prefix": "fmgr_webfilter_profile_ftgdwf_quota",
    "description": "FortiGuard traffic quota settings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_ftgdwf_quota:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_ftgdwf_quota: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_profile_override": {
    "prefix": "fmgr_webfilter_profile_override",
    "description": "Web Filter override settings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_override:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_override: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_urlextraction": {
    "prefix": "fmgr_webfilter_profile_urlextraction",
    "description": "Configure URL Extraction",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_urlextraction:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_urlextraction: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_web": {
    "prefix": "fmgr_webfilter_profile_web",
    "description": "Web content filtering settings.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_web:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_profile_web: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_profile_youtubechannelfilter": {
    "prefix": "fmgr_webfilter_profile_youtubechannelfilter",
    "description": "YouTube channel filter.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_profile_youtubechannelfilter:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_profile_youtubechannelfilter: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webfilter_urlfilter": {
    "prefix": "fmgr_webfilter_urlfilter",
    "description": "Configure URL filter lists.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_urlfilter:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webfilter_urlfilter: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webfilter_urlfilter_entries": {
    "prefix": "fmgr_webfilter_urlfilter_entries",
    "description": "URL filter entries.",
    "body": [
      "fortinet.fortimanager.fmgr_webfilter_urlfilter_entries:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\turlfilter: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webfilter_urlfilter_entries: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webproxy_forwardserver": {
    "prefix": "fmgr_webproxy_forwardserver",
    "description": "Configure forward-server addresses.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_forwardserver:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webproxy_forwardserver: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webproxy_forwardservergroup": {
    "prefix": "fmgr_webproxy_forwardservergroup",
    "description": "Configure a forward server group consisting or multiple forward servers.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_forwardservergroup:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webproxy_forwardservergroup: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webproxy_forwardservergroup_serverlist": {
    "prefix": "fmgr_webproxy_forwardservergroup_serverlist",
    "description": "Add web forward servers to a list to form a server group.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_forwardservergroup_serverlist:",
      "\tadom: ${1:}",
      "\tforward-server-group: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webproxy_forwardservergroup_serverlist: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webproxy_profile": {
    "prefix": "fmgr_webproxy_profile",
    "description": "Configure web proxy profiles.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_profile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webproxy_profile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_webproxy_profile_headers": {
    "prefix": "fmgr_webproxy_profile_headers",
    "description": "Configure HTTP forwarded requests headers.",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_profile_headers:",
      "\tadom: ${1:}",
      "\tprofile: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#webproxy_profile_headers: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_webproxy_wisp": {
    "prefix": "fmgr_webproxy_wisp",
    "description": "Configure Wireless Internet service provider",
    "body": [
      "fortinet.fortimanager.fmgr_webproxy_wisp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#webproxy_wisp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_widsprofile": {
    "prefix": "fmgr_widsprofile",
    "description": "Configure wireless intrusion detection system",
    "body": [
      "fortinet.fortimanager.fmgr_widsprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#widsprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_accesscontrollist": {
    "prefix": "fmgr_wireless_accesscontrollist",
    "description": "Configure WiFi bridge access control list.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_accesscontrollist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_accesscontrollist: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_accesscontrollist_layer3ipv4rules": {
    "prefix": "fmgr_wireless_accesscontrollist_layer3ipv4rules",
    "description": "AP ACL layer3 ipv4 rule list.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_accesscontrollist_layer3ipv4rules:",
      "\taccess-control-list: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wireless_accesscontrollist_layer3ipv4rules: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wireless_accesscontrollist_layer3ipv6rules": {
    "prefix": "fmgr_wireless_accesscontrollist_layer3ipv6rules",
    "description": "AP ACL layer3 ipv6 rule list.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_accesscontrollist_layer3ipv6rules:",
      "\taccess-control-list: ${1:}",
      "\tadom: ${2:}",
      "\tstate: ${3:present|absent}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#wireless_accesscontrollist_layer3ipv6rules: ${11:}",
      "\t#workspace_locking_adom: ${12:}",
      "\t#workspace_locking_timeout: ${13:300}"
    ]
  },
  "fmgr_wireless_address": {
    "prefix": "fmgr_wireless_address",
    "description": "Configure the client with its MAC address.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_address:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_address: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_addrgrp": {
    "prefix": "fmgr_wireless_addrgrp",
    "description": "Configure the MAC address group.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_addrgrp:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_addrgrp: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_ssidpolicy": {
    "prefix": "fmgr_wireless_ssidpolicy",
    "description": "Configure WiFi SSID policies.",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_ssidpolicy:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_ssidpolicy: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wireless_syslogprofile": {
    "prefix": "fmgr_wireless_syslogprofile",
    "description": "Configure Wireless Termination Points",
    "body": [
      "fortinet.fortimanager.fmgr_wireless_syslogprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#wireless_syslogprofile: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}"
    ]
  },
  "fmgr_wtpprofile": {
    "prefix": "fmgr_wtpprofile",
    "description": "Configure WTP profiles or FortiAP profiles that define radio settings for manageable FortiAP platforms.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile: ${12:}"
    ]
  },
  "fmgr_wtpprofile_denymaclist": {
    "prefix": "fmgr_wtpprofile_denymaclist",
    "description": "List of MAC addresses that are denied access to this WTP, FortiAP, or AP.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_denymaclist:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twtp-profile: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}",
      "\t#wtpprofile_denymaclist: ${13:}"
    ]
  },
  "fmgr_wtpprofile_eslsesdongle": {
    "prefix": "fmgr_wtpprofile_eslsesdongle",
    "description": "ESL SES-imagotag dongle configuration.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_eslsesdongle:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_eslsesdongle: ${12:}"
    ]
  },
  "fmgr_wtpprofile_lan": {
    "prefix": "fmgr_wtpprofile_lan",
    "description": "WTP LAN port mapping.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_lan:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_lan: ${12:}"
    ]
  },
  "fmgr_wtpprofile_lbs": {
    "prefix": "fmgr_wtpprofile_lbs",
    "description": "Set various location based service",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_lbs:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_lbs: ${12:}"
    ]
  },
  "fmgr_wtpprofile_platform": {
    "prefix": "fmgr_wtpprofile_platform",
    "description": "WTP, FortiAP, or AP platform.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_platform:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_platform: ${12:}"
    ]
  },
  "fmgr_wtpprofile_radio1": {
    "prefix": "fmgr_wtpprofile_radio1",
    "description": "Configuration options for radio 1.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_radio1:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_radio1: ${12:}"
    ]
  },
  "fmgr_wtpprofile_radio2": {
    "prefix": "fmgr_wtpprofile_radio2",
    "description": "Configuration options for radio 2.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_radio2:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_radio2: ${12:}"
    ]
  },
  "fmgr_wtpprofile_radio3": {
    "prefix": "fmgr_wtpprofile_radio3",
    "description": "Configuration options for radio 3.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_radio3:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_radio3: ${12:}"
    ]
  },
  "fmgr_wtpprofile_radio4": {
    "prefix": "fmgr_wtpprofile_radio4",
    "description": "Configuration options for radio 4.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_radio4:",
      "\tadom: ${1:}",
      "\twtp-profile: ${2:}",
      "\t#access_token: ${3:}",
      "\t#bypass_validation: ${4:false}",
      "\t#enable_log: ${5:false}",
      "\t#forticloud_access_token: ${6:}",
      "\t#proposed_method: ${7:update|set|add}",
      "\t#rc_failed: ${8:}",
      "\t#rc_succeeded: ${9:}",
      "\t#workspace_locking_adom: ${10:}",
      "\t#workspace_locking_timeout: ${11:300}",
      "\t#wtpprofile_radio4: ${12:}"
    ]
  },
  "fmgr_wtpprofile_splittunnelingacl": {
    "prefix": "fmgr_wtpprofile_splittunnelingacl",
    "description": "Split tunneling ACL filter list.",
    "body": [
      "fortinet.fortimanager.fmgr_wtpprofile_splittunnelingacl:",
      "\tadom: ${1:}",
      "\tstate: ${2:present|absent}",
      "\twtp-profile: ${3:}",
      "\t#access_token: ${4:}",
      "\t#bypass_validation: ${5:false}",
      "\t#enable_log: ${6:false}",
      "\t#forticloud_access_token: ${7:}",
      "\t#proposed_method: ${8:update|set|add}",
      "\t#rc_failed: ${9:}",
      "\t#rc_succeeded: ${10:}",
      "\t#workspace_locking_adom: ${11:}",
      "\t#workspace_locking_timeout: ${12:300}",
      "\t#wtpprofile_splittunnelingacl: ${13:}"
    ]
  },
  "fortios_alertemail_setting": {
    "prefix": "fortios_alertemail_setting",
    "description": "Configure alert email settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_alertemail_setting:",
      "\t#access_token: ${1:}",
      "\t#alertemail_setting: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_antivirus_heuristic": {
    "prefix": "fortios_antivirus_heuristic",
    "description": "Configure global heuristic options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_heuristic:",
      "\t#access_token: ${1:}",
      "\t#antivirus_heuristic: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_antivirus_mms_checksum": {
    "prefix": "fortios_antivirus_mms_checksum",
    "description": "Configure MMS content checksum list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_mms_checksum:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#antivirus_mms_checksum: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_antivirus_notification": {
    "prefix": "fortios_antivirus_notification",
    "description": "Configure AntiVirus notification lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_notification:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#antivirus_notification: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_antivirus_profile": {
    "prefix": "fortios_antivirus_profile",
    "description": "Configure AntiVirus profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#antivirus_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_antivirus_quarantine": {
    "prefix": "fortios_antivirus_quarantine",
    "description": "Configure quarantine options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_quarantine:",
      "\t#access_token: ${1:}",
      "\t#antivirus_quarantine: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_antivirus_settings": {
    "prefix": "fortios_antivirus_settings",
    "description": "Configure AntiVirus settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_antivirus_settings:",
      "\t#access_token: ${1:}",
      "\t#antivirus_settings: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_application_custom": {
    "prefix": "fortios_application_custom",
    "description": "Configure custom application signatures in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_custom: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_application_group": {
    "prefix": "fortios_application_group",
    "description": "Configure firewall application groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_group: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_application_list": {
    "prefix": "fortios_application_list",
    "description": "Configure application control lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_list: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_application_name": {
    "prefix": "fortios_application_name",
    "description": "Configure application signatures in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_name:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_name: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_application_rule_settings": {
    "prefix": "fortios_application_rule_settings",
    "description": "Configure application rule settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_application_rule_settings:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#application_rule_settings: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_authentication_rule": {
    "prefix": "fortios_authentication_rule",
    "description": "Configure Authentication Rules in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_authentication_rule:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#authentication_rule: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_authentication_scheme": {
    "prefix": "fortios_authentication_scheme",
    "description": "Configure Authentication Schemes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_authentication_scheme:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#authentication_scheme: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_authentication_setting": {
    "prefix": "fortios_authentication_setting",
    "description": "Configure authentication setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_authentication_setting:",
      "\t#access_token: ${1:}",
      "\t#authentication_setting: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_automation_setting": {
    "prefix": "fortios_automation_setting",
    "description": "Automation setting configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_automation_setting:",
      "\t#access_token: ${1:}",
      "\t#automation_setting: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_certificate_ca": {
    "prefix": "fortios_certificate_ca",
    "description": "CA certificate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_certificate_ca:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#certificate_ca: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_certificate_crl": {
    "prefix": "fortios_certificate_crl",
    "description": "Certificate Revocation List as a PEM file in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_certificate_crl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#certificate_crl: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_certificate_local": {
    "prefix": "fortios_certificate_local",
    "description": "Local keys and certificates in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_certificate_local:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#certificate_local: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_certificate_remote": {
    "prefix": "fortios_certificate_remote",
    "description": "Remote certificate as a PEM file in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_certificate_remote:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#certificate_remote: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_cifs_domain_controller": {
    "prefix": "fortios_cifs_domain_controller",
    "description": "Define known domain controller servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_cifs_domain_controller:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#cifs_domain_controller: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_cifs_profile": {
    "prefix": "fortios_cifs_profile",
    "description": "Configure CIFS profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_cifs_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#cifs_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_configuration_fact": {
    "prefix": "fortios_configuration_fact",
    "description": "Retrieve Facts of FortiOS Configurable Objects.",
    "body": [
      "fortinet.fortios.fortios_configuration_fact:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#filters: ${3:}",
      "\t#formatters: ${4:}",
      "\t#params: ${5:}",
      "\t#selector: ${6:system_vdom|system_global|system_accprofile|system_vdom-link|system_switch-interface|system_object-tagging|system_interface|system_password-policy|system_password-policy-guest-admin|system_sms-server|system_custom-language|system_admin|system_api-user|system_sso-admin|system_sso-forticloud-admin|system_settings|system_sit-tunnel|system_fsso-polling|system_ha|system_ha-monitor|system_storage|system_dedicated-mgmt|system_arp-table|system_ipv6-neighbor-cache|system_dns|system_ddns|system_sflow|system_vdom-sflow|system_netflow|system_vdom-netflow|system_vdom-dns|system_replacemsg-image|system_replacemsg-group|system.snmp_sysinfo|system.snmp_mib-view|system.snmp_community|system.snmp_user|system.autoupdate_schedule|system.autoupdate_tunneling|system_session-ttl|system.dhcp_server|system.dhcp6_server|system_alias|system_auto-script|system_management-tunnel|system_central-management|system_zone|system_sdn-connector|system_ipv6-tunnel|system_external-resource|system_ips-urlfilter-dns|system_ips-urlfilter-dns6|system_network-visibility|system_sdwan|system_gre-tunnel|system_ipsec-aggregate|system_ipip-tunnel|system_mobile-tunnel|system_pppoe-interface|system_vxlan|system_geneve|system_virtual-wire-pair|system_dns-database|system_dns-server|system_resource-limits|system_vdom-property|system_speed-test-server|system.lldp_network-policy|system_speed-test-schedule|system_standalone-cluster|system_fortiguard|system_ips|system_email-server|system_alarm|system_mac-address-table|system_session-helper|system_proxy-arp|system_fips-cc|system_tos-based-priority|system_dscp-based-priority|system_probe-response|system_link-monitor|system_auto-install|system_console|system_ntp|system_ptp|system_wccp|system_dns64|system_vdom-radius-server|system_ftm-push|system_geoip-override|system_fortisandbox|system_fortindr|system_affinity-interrupt|system_affinity-packet-redistribution|system_vdom-exception|system_csf|system_automation-trigger|system_automation-action|system_automation-destination|system_automation-stitch|system_nd-proxy|system_saml|system_federated-upgrade|system_vne-tunnel|system_ike|system_acme|system_ipam|wireless-controller_inter-controller|wireless-controller_global|wireless-controller.hotspot20_anqp-venue-name|wireless-controller.hotspot20_anqp-venue-url|wireless-controller.hotspot20_anqp-network-auth-type|wireless-controller.hotspot20_anqp-roaming-consortium|wireless-controller.hotspot20_anqp-nai-realm|wireless-controller.hotspot20_anqp-3gpp-cellular|wireless-controller.hotspot20_anqp-ip-address-type|wireless-controller.hotspot20_h2qp-operator-name|wireless-controller.hotspot20_h2qp-wan-metric|wireless-controller.hotspot20_h2qp-conn-capability|wireless-controller.hotspot20_icon|wireless-controller.hotspot20_h2qp-osu-provider|wireless-controller.hotspot20_qos-map|wireless-controller.hotspot20_h2qp-advice-of-charge|wireless-controller.hotspot20_h2qp-osu-provider-nai|wireless-controller.hotspot20_h2qp-terms-and-conditions|wireless-controller.hotspot20_hs-profile|wireless-controller_vap|wireless-controller_timers|wireless-controller_setting|wireless-controller_log|wireless-controller_apcfg-profile|wireless-controller_bonjour-profile|wireless-controller_arrp-profile|wireless-controller_region|wireless-controller_vap-group|wireless-controller_wids-profile|wireless-controller_ble-profile|wireless-controller_syslog-profile|wireless-controller_wtp-profile|wireless-controller_wtp|wireless-controller_wtp-group|wireless-controller_qos-profile|wireless-controller_wag-profile|wireless-controller_utm-profile|wireless-controller_snmp|wireless-controller_mpsk-profile|wireless-controller_nac-profile|wireless-controller_ssid-policy|wireless-controller_access-control-list|wireless-controller_ap-status|switch-controller_traffic-policy|switch-controller_fortilink-settings|switch-controller_switch-interface-tag|switch-controller_802-1X-settings|switch-controller.security-policy_802-1X|switch-controller.security-policy_local-access|switch-controller_location|switch-controller_lldp-settings|switch-controller_lldp-profile|switch-controller.qos_dot1p-map|switch-controller.qos_ip-dscp-map|switch-controller.qos_queue-policy|switch-controller.qos_qos-policy|switch-controller_storm-control-policy|switch-controller.auto-config_policy|switch-controller.auto-config_default|switch-controller.auto-config_custom|switch-controller.initial-config_template|switch-controller.initial-config_vlans|switch-controller_switch-profile|switch-controller_custom-command|switch-controller_virtual-port-pool|switch-controller.ptp_settings|switch-controller.ptp_policy|switch-controller_vlan-policy|switch-controller_dynamic-port-policy|switch-controller_managed-switch|switch-controller_switch-group|switch-controller_stp-settings|switch-controller_stp-instance|switch-controller_storm-control|switch-controller_global|switch-controller_system|switch-controller_switch-log|switch-controller_igmp-snooping|switch-controller_sflow|switch-controller_quarantine|switch-controller_network-monitor-settings|switch-controller_flow-tracking|switch-controller_snmp-sysinfo|switch-controller_snmp-trap-threshold|switch-controller_snmp-community|switch-controller_snmp-user|switch-controller_traffic-sniffer|switch-controller_remote-log|switch-controller_mac-policy|firewall_address|firewall_multicast-address|firewall_address6-template|firewall_address6|firewall_multicast-address6|firewall_addrgrp|firewall_addrgrp6|firewall.wildcard-fqdn_custom|firewall.wildcard-fqdn_group|firewall_traffic-class|firewall.service_category|firewall.service_custom|firewall.service_group|firewall_internet-service-name|firewall_internet-service-group|firewall_internet-service-extension|firewall_internet-service-custom|firewall_internet-service-addition|firewall_internet-service-append|firewall_internet-service-custom-group|firewall_internet-service-definition|firewall_network-service-dynamic|firewall.shaper_traffic-shaper|firewall.shaper_per-ip-shaper|firewall_proxy-address|firewall_proxy-addrgrp|firewall.schedule_onetime|firewall.schedule_recurring|firewall.schedule_group|firewall_ippool|firewall_ippool6|firewall_ldb-monitor|firewall_vip|firewall_vip6|firewall_vipgrp|firewall_vipgrp6|firewall.ssh_local-key|firewall.ssh_local-ca|firewall.ssh_setting|firewall.ssh_host-key|firewall_decrypted-traffic-mirror|firewall_access-proxy-virtual-host|firewall_access-proxy-ssh-client-cert|firewall_access-proxy|firewall_access-proxy6|firewall.ipmacbinding_setting|firewall.ipmacbinding_table|firewall_profile-protocol-options|firewall_ssl-ssh-profile|firewall_profile-group|firewall_ssl-server|firewall_identity-based-route|firewall_auth-portal|firewall_security-policy|firewall_policy|firewall_shaping-policy|firewall_shaping-profile|firewall_local-in-policy|firewall_local-in-policy6|firewall_ttl-policy|firewall_proxy-policy|firewall_dnstranslation|firewall_multicast-policy|firewall_multicast-policy6|firewall_interface-policy|firewall_interface-policy6|firewall_DoS-policy|firewall_DoS-policy6|firewall_sniffer|firewall_central-snat-map|firewall.ssl_setting|firewall_ip-translation|firewall_ipv6-eh-filter|firewall_global|vpn.certificate_ca|vpn.certificate_remote|vpn.certificate_local|vpn.certificate_crl|vpn.certificate_ocsp-server|vpn.certificate_setting|vpn.ssl.web_realm|vpn.ssl.web_host-check-software|vpn.ssl.web_portal|vpn.ssl.web_user-group-bookmark|vpn.ssl.web_user-bookmark|vpn.ssl_settings|vpn.ssl_client|vpn.ipsec_phase1|vpn.ipsec_phase2|vpn.ipsec_manualkey|vpn.ipsec_concentrator|vpn.ipsec_fec|vpn.ipsec_phase1-interface|vpn.ipsec_phase2-interface|vpn.ipsec_manualkey-interface|vpn.ipsec_forticlient|vpn_pptp|vpn_l2tp|vpn_ocvpn|certificate_ca|certificate_remote|certificate_local|certificate_crl|webfilter_ftgd-local-cat|webfilter_content|webfilter_content-header|webfilter_urlfilter|webfilter_ips-urlfilter-setting|webfilter_ips-urlfilter-setting6|webfilter_ips-urlfilter-cache-setting|webfilter_profile|webfilter_fortiguard|webfilter_override|webfilter_ftgd-local-rating|webfilter_search-engine|ips_sensor|ips_custom|ips_global|ips_settings|sctp-filter_profile|web-proxy_profile|web-proxy_global|web-proxy_explicit|web-proxy_forward-server|web-proxy_forward-server-group|web-proxy_debug-url|web-proxy_wisp|web-proxy_url-match|wanopt_webcache|wanopt_settings|wanopt_peer|wanopt_auth-group|wanopt_profile|wanopt_content-delivery-network-rule|wanopt_cache-service|wanopt_remote-storage|ftp-proxy_explicit|application_custom|application_list|application_group|dlp_data-type|dlp_dictionary|dlp_sensor|dlp_filepattern|dlp_sensitivity|dlp_fp-doc-source|dlp_profile|dlp_settings|videofilter_youtube-key|videofilter_youtube-channel-filter|videofilter_profile|emailfilter_bword|emailfilter_block-allow-list|emailfilter_mheader|emailfilter_dnsbl|emailfilter_iptrust|emailfilter_profile|emailfilter_fortishield|emailfilter_options|log_threat-weight|log_custom-field|log.syslogd_setting|log.syslogd_override-setting|log.syslogd_filter|log.syslogd_override-filter|log.syslogd2_setting|log.syslogd2_override-setting|log.syslogd2_filter|log.syslogd2_override-filter|log.syslogd3_setting|log.syslogd3_override-setting|log.syslogd3_filter|log.syslogd3_override-filter|log.syslogd4_setting|log.syslogd4_override-setting|log.syslogd4_filter|log.syslogd4_override-filter|log.webtrends_setting|log.webtrends_filter|log.memory_global-setting|log.memory_setting|log.memory_filter|log.disk_setting|log.disk_filter|log_eventfilter|log.fortiguard_setting|log.fortiguard_override-setting|log.fortiguard_filter|log.fortiguard_override-filter|log.tacacs+accounting_setting|log.tacacs+accounting_filter|log.tacacs+accounting2_setting|log.tacacs+accounting2_filter|log.tacacs+accounting3_setting|log.tacacs+accounting3_filter|log.null-device_setting|log.null-device_filter|log_setting|log_gui-display|log.fortianalyzer_setting|log.fortianalyzer_override-setting|log.fortianalyzer_filter|log.fortianalyzer_override-filter|log.fortianalyzer2_setting|log.fortianalyzer2_override-setting|log.fortianalyzer2_filter|log.fortianalyzer2_override-filter|log.fortianalyzer3_setting|log.fortianalyzer3_override-setting|log.fortianalyzer3_filter|log.fortianalyzer3_override-filter|log.fortianalyzer-cloud_setting|log.fortianalyzer-cloud_override-setting|log.fortianalyzer-cloud_filter|log.fortianalyzer-cloud_override-filter|icap_server|icap_server-group|icap_profile|user_certificate|user_radius|user_tacacs+|user_exchange|user_ldap|user_krb-keytab|user_domain-controller|user_pop3|user_saml|user_fsso|user_adgrp|user_fsso-polling|user_fortitoken|user_password-policy|user_local|user_setting|user_peer|user_peergrp|user_quarantine|user_group|user_security-exempt-list|user_nac-policy|voip_profile|dnsfilter_domain-filter|dnsfilter_profile|nsxt_setting|nsxt_service-chain|antivirus_settings|antivirus_quarantine|antivirus_profile|ssh-filter_profile|file-filter_profile|report_layout|report_setting|waf_main-class|waf_sub-class|waf_signature|waf_profile|authentication_scheme|authentication_rule|authentication_setting|extension-controller_dataplan|extension-controller_extender-profile|extension-controller_extender|extension-controller_fortigate-profile|extension-controller_fortigate|endpoint-control_fctems|alertemail_setting|router_access-list|router_access-list6|router_aspath-list|router_prefix-list|router_prefix-list6|router_key-chain|router_community-list|router_route-map|router_rip|router_ripng|router_static|router_policy|router_policy6|router_static6|router_ospf|router_ospf6|router_bgp|router_isis|router_multicast-flow|router_multicast|router_multicast6|router_auth-path|router_setting|router_bfd|router_bfd6|automation_setting|dpdk_global|dpdk_cpus|system_isf-queue-profile|system_npu|system_np6|system_lte-modem|system_gi-gk|system.replacemsg_mail|system.replacemsg_http|system.replacemsg_webproxy|system.replacemsg_ftp|system.replacemsg_fortiguard-wf|system.replacemsg_spam|system.replacemsg_alertmail|system.replacemsg_admin|system.replacemsg_auth|system.replacemsg_sslvpn|system.replacemsg_nac-quar|system.replacemsg_traffic-quota|system.replacemsg_utm|system.replacemsg_icap|system.replacemsg_automation|system_modem|system.3g-modem_custom|system_status|system.performance_status|system.performance_top|system.performance.firewall_packet-distribution|system.performance.firewall_statistics|system_session|system_session6|system_cmdb|system_fortiguard-service|system_fortianalyzer-connectivity|system.checksum_status|system_mgmt-csum|system_ha-nonsync-csum|system_fortiguard-log-service|system_central-mgmt|system.info.admin_status|system.info.admin_ssh|system_geoip-country|system_cluster-sync|system_arp|system_startup-error-log|system.source-ip_status|system.auto-update_status|system.auto-update_versions|system.session-info_list|system.session-info_expectation|system.session-info_full-stat|system.session-info_statistics|system.session-info_ttl|system.session-helper-info_list|system.ip-conflict_status|wireless-controller_scan|wireless-controller_wlchanlistlic|wireless-controller_status|wireless-controller_wtp-status|wireless-controller_client-info|wireless-controller_vap-status|wireless-controller_rf-analysis|wireless-controller_spectral-info|ipsec_tunnel|firewall_city|firewall_region|firewall_country|firewall_internet-service|firewall_internet-service-reputation|firewall_internet-service-sld|firewall_internet-service-ipbl-vendor|firewall_internet-service-ipbl-reason|firewall_internet-service-owner|firewall_internet-service-list|firewall_internet-service-botnet|firewall_vendor-mac|firewall_vendor-mac-summary|firewall.shaper_traffic|firewall.shaper_per-ip|firewall_gtp|firewall_pfcp|firewall_acl|firewall_acl6|firewall.iprope_list|firewall.iprope.appctrl_list|firewall.iprope.appctrl_status|firewall_proute|firewall_proute6|vpn.ssl_monitor|vpn.ipsec.stats_crypto|vpn.ipsec.stats_tunnel|vpn.ipsec.tunnel_details|vpn.ipsec.tunnel_summary|vpn.ipsec.tunnel_name|vpn.ike_gateway|vpn.status_l2tp|vpn.status_pptp|vpn.status.ssl_list|vpn.status.ssl_hw-acceleration-status|webfilter_categories|webfilter_ftgd-statistics|webfilter_status|webfilter_override-usr|ips_view-map|ips_decoder|ips_rule|ips_rule-settings|ips_session|application_name|application_rule-settings|report.sql_status|gtp_apn|gtp_apngrp|gtp_message-filter-v0v1|gtp_message-filter-v2|gtp_rat-timeout-profile|gtp_ie-allow-list|gtp_tunnel-limit|gtp_apn-shaper|pfcp_message-filter|extender-controller_dataplan|extender-controller_extender-profile|extender-controller_extender|router_info|router_info6|hardware_status|hardware_cpu|hardware_memory|hardware_nic|hardware.npu.np6_port-list|hardware.npu.np6_dce|hardware.npu.np6_session-stats|hardware.npu.np6_sse-stats|hardware.npu.np6_ipsec-stats|hardware.npu.np6_synproxy-stats|mgmt-data_status|extender_sys-info|extender_extender-info|extender_session-info|extender_datachannel-info|extender_fexwan|extender_modem-status|extender_lte-carrier-list|extender_lte-carrier-by-mcc-mnc|monitoring_np6-ipsec-engine|monitoring_npu-hpe|wireless-controller_address|wireless-controller_addrgrp|system_fortiai|system_physical-switch|system_virtual-switch|system_stp|system_fortimanager|system_fm|system_nat64|firewall_vip46|firewall_vip64|firewall_vipgrp46|firewall_vipgrp64|firewall_policy64|firewall_policy46|system.autoupdate_push-update|switch-controller_nac-settings|switch-controller_port-policy|switch-controller_nac-device|emailfilter_bwl|antivirus_heuristic|credential-store_domain-controller|report_dataset|report_chart|report_style|report_theme|gtp_ie-white-list|system.replacemsg_nntp|system.replacemsg_device-detection-portal|switch-controller_poe|cifs_domain-controller|cifs_profile|system.replacemsg_mms|system.replacemsg_mm1|system.replacemsg_mm3|system.replacemsg_mm4|system.replacemsg_mm7|system_virtual-wan-link|system_mem-mgr|firewall_carrier-endpoint-bwl|firewall_mms-profile|firewall.consolidated_policy|firewall_policy6|antivirus_notification|antivirus_mms-checksum|endpoint-control_settings|system_smc-ntp|switch-controller_vlan|switch-controller.security-policy_captive-portal|user_device|user_device-group|endpoint-control_client|system.replacemsg_ec|dlp_fp-sensitivity|spamfilter_bword|spamfilter_bwl|spamfilter_mheader|spamfilter_dnsbl|spamfilter_iptrust|spamfilter_profile|spamfilter_fortishield|spamfilter_options|user_device-category|user_device-access-list|switch-controller_mac-sync-settings|endpoint-control_forticlient-ems|endpoint-control_profile|endpoint-control_forticlient-registration-sync|endpoint-control_registered-forticlient}",
      "\t#selectors: ${7:}",
      "\t#sorters: ${8:}",
      "\t#vdom: ${9:root}"
    ]
  },
  "fortios_credential_store_domain_controller": {
    "prefix": "fortios_credential_store_domain_controller",
    "description": "Define known domain controller servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_credential_store_domain_controller:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#credential_store_domain_controller: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_data_type": {
    "prefix": "fortios_dlp_data_type",
    "description": "Configure predefined data type used by DLP blocking in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_data_type:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_data_type: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_dictionary": {
    "prefix": "fortios_dlp_dictionary",
    "description": "Configure dictionaries used by DLP blocking in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_dictionary:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_dictionary: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_filepattern": {
    "prefix": "fortios_dlp_filepattern",
    "description": "Configure file patterns used by DLP blocking in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_filepattern:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_filepattern: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_fp_doc_source": {
    "prefix": "fortios_dlp_fp_doc_source",
    "description": "Create a DLP fingerprint database by allowing the FortiGate to access a file server containing files from which to create fingerprints in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_fp_doc_source:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_fp_doc_source: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_fp_sensitivity": {
    "prefix": "fortios_dlp_fp_sensitivity",
    "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_fp_sensitivity:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_fp_sensitivity: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_profile": {
    "prefix": "fortios_dlp_profile",
    "description": "Configure DLP profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_sensitivity": {
    "prefix": "fortios_dlp_sensitivity",
    "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_sensitivity:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_sensitivity: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_sensor": {
    "prefix": "fortios_dlp_sensor",
    "description": "Configure sensors used by DLP blocking in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_sensor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dlp_sensor: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dlp_settings": {
    "prefix": "fortios_dlp_settings",
    "description": "Designate logical storage for DLP fingerprint database in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dlp_settings:",
      "\t#access_token: ${1:}",
      "\t#dlp_settings: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_dnsfilter_domain_filter": {
    "prefix": "fortios_dnsfilter_domain_filter",
    "description": "Configure DNS domain filters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dnsfilter_domain_filter:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dnsfilter_domain_filter: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dnsfilter_profile": {
    "prefix": "fortios_dnsfilter_profile",
    "description": "Configure DNS domain filter profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dnsfilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#dnsfilter_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_dpdk_cpus": {
    "prefix": "fortios_dpdk_cpus",
    "description": "Configure CPUs enabled to run engines in each DPDK stage in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dpdk_cpus:",
      "\t#access_token: ${1:}",
      "\t#dpdk_cpus: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_dpdk_global": {
    "prefix": "fortios_dpdk_global",
    "description": "Configure global DPDK options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_dpdk_global:",
      "\t#access_token: ${1:}",
      "\t#dpdk_global: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_emailfilter_block_allow_list": {
    "prefix": "fortios_emailfilter_block_allow_list",
    "description": "Configure anti-spam block/allow list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_block_allow_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_block_allow_list: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_bwl": {
    "prefix": "fortios_emailfilter_bwl",
    "description": "Configure anti-spam black/white list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_bwl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_bwl: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_bword": {
    "prefix": "fortios_emailfilter_bword",
    "description": "Configure AntiSpam banned word list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_bword:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_bword: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_dnsbl": {
    "prefix": "fortios_emailfilter_dnsbl",
    "description": "Configure AntiSpam DNSBL/ORBL in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_dnsbl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_dnsbl: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_fortishield": {
    "prefix": "fortios_emailfilter_fortishield",
    "description": "Configure FortiGuard - AntiSpam in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_fortishield:",
      "\t#access_token: ${1:}",
      "\t#emailfilter_fortishield: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_emailfilter_iptrust": {
    "prefix": "fortios_emailfilter_iptrust",
    "description": "Configure AntiSpam IP trust in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_iptrust:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_iptrust: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_mheader": {
    "prefix": "fortios_emailfilter_mheader",
    "description": "Configure AntiSpam MIME header in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_mheader:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_mheader: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_emailfilter_options": {
    "prefix": "fortios_emailfilter_options",
    "description": "Configure AntiSpam options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_options:",
      "\t#access_token: ${1:}",
      "\t#emailfilter_options: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_emailfilter_profile": {
    "prefix": "fortios_emailfilter_profile",
    "description": "Configure Email Filter profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_emailfilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#emailfilter_profile: ${3:}",
      "\t#enable_log: ${4:false}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_client": {
    "prefix": "fortios_endpoint_control_client",
    "description": "Configure endpoint control client lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_client:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_client: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_fctems": {
    "prefix": "fortios_endpoint_control_fctems",
    "description": "Configure FortiClient Enterprise Management Server (EMS) entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_fctems:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_fctems: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_forticlient_ems": {
    "prefix": "fortios_endpoint_control_forticlient_ems",
    "description": "Configure FortiClient Enterprise Management Server (EMS) entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_forticlient_ems:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_forticlient_ems: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_forticlient_registration_sync": {
    "prefix": "fortios_endpoint_control_forticlient_registration_sync",
    "description": "Configure FortiClient registration synchronization settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_forticlient_registration_sync:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_forticlient_registration_sync: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_profile": {
    "prefix": "fortios_endpoint_control_profile",
    "description": "Configure FortiClient endpoint control profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_registered_forticlient": {
    "prefix": "fortios_endpoint_control_registered_forticlient",
    "description": "Registered FortiClient list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_registered_forticlient:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#endpoint_control_registered_forticlient: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_endpoint_control_settings": {
    "prefix": "fortios_endpoint_control_settings",
    "description": "Configure endpoint control settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_endpoint_control_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#endpoint_control_settings: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_export_config_playbook": {
    "prefix": "fortios_export_config_playbook",
    "description": "Collect the current configurations of the modules and convert then into playbooks.",
    "body": [
      "fortinet.fortios.fortios_export_config_playbook:",
      "\toutput_path: ${1:}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#filters: ${4:}",
      "\t#formatters: ${5:}",
      "\t#params: ${6:}",
      "\t#selector: ${7:system_vdom|system_global|system_accprofile|system_vdom-link|system_switch-interface|system_object-tagging|system_interface|system_password-policy|system_password-policy-guest-admin|system_sms-server|system_custom-language|system_admin|system_api-user|system_sso-admin|system_sso-forticloud-admin|system_settings|system_sit-tunnel|system_fsso-polling|system_ha|system_ha-monitor|system_storage|system_dedicated-mgmt|system_arp-table|system_ipv6-neighbor-cache|system_dns|system_ddns|system_sflow|system_vdom-sflow|system_netflow|system_vdom-netflow|system_vdom-dns|system_replacemsg-image|system_replacemsg-group|system.snmp_sysinfo|system.snmp_mib-view|system.snmp_community|system.snmp_user|system.autoupdate_schedule|system.autoupdate_tunneling|system_session-ttl|system.dhcp_server|system.dhcp6_server|system_alias|system_auto-script|system_management-tunnel|system_central-management|system_zone|system_sdn-connector|system_ipv6-tunnel|system_external-resource|system_ips-urlfilter-dns|system_ips-urlfilter-dns6|system_network-visibility|system_sdwan|system_gre-tunnel|system_ipsec-aggregate|system_ipip-tunnel|system_mobile-tunnel|system_pppoe-interface|system_vxlan|system_geneve|system_virtual-wire-pair|system_dns-database|system_dns-server|system_resource-limits|system_vdom-property|system_speed-test-server|system.lldp_network-policy|system_speed-test-schedule|system_standalone-cluster|system_fortiguard|system_ips|system_email-server|system_alarm|system_mac-address-table|system_session-helper|system_proxy-arp|system_fips-cc|system_tos-based-priority|system_dscp-based-priority|system_probe-response|system_link-monitor|system_auto-install|system_console|system_ntp|system_ptp|system_wccp|system_dns64|system_vdom-radius-server|system_ftm-push|system_geoip-override|system_fortisandbox|system_fortindr|system_affinity-interrupt|system_affinity-packet-redistribution|system_vdom-exception|system_csf|system_automation-trigger|system_automation-action|system_automation-destination|system_automation-stitch|system_nd-proxy|system_saml|system_federated-upgrade|system_vne-tunnel|system_ike|system_acme|system_ipam|wireless-controller_inter-controller|wireless-controller_global|wireless-controller.hotspot20_anqp-venue-name|wireless-controller.hotspot20_anqp-venue-url|wireless-controller.hotspot20_anqp-network-auth-type|wireless-controller.hotspot20_anqp-roaming-consortium|wireless-controller.hotspot20_anqp-nai-realm|wireless-controller.hotspot20_anqp-3gpp-cellular|wireless-controller.hotspot20_anqp-ip-address-type|wireless-controller.hotspot20_h2qp-operator-name|wireless-controller.hotspot20_h2qp-wan-metric|wireless-controller.hotspot20_h2qp-conn-capability|wireless-controller.hotspot20_icon|wireless-controller.hotspot20_h2qp-osu-provider|wireless-controller.hotspot20_qos-map|wireless-controller.hotspot20_h2qp-advice-of-charge|wireless-controller.hotspot20_h2qp-osu-provider-nai|wireless-controller.hotspot20_h2qp-terms-and-conditions|wireless-controller.hotspot20_hs-profile|wireless-controller_vap|wireless-controller_timers|wireless-controller_setting|wireless-controller_log|wireless-controller_apcfg-profile|wireless-controller_bonjour-profile|wireless-controller_arrp-profile|wireless-controller_region|wireless-controller_vap-group|wireless-controller_wids-profile|wireless-controller_ble-profile|wireless-controller_syslog-profile|wireless-controller_wtp-profile|wireless-controller_wtp|wireless-controller_wtp-group|wireless-controller_qos-profile|wireless-controller_wag-profile|wireless-controller_utm-profile|wireless-controller_snmp|wireless-controller_mpsk-profile|wireless-controller_nac-profile|wireless-controller_ssid-policy|wireless-controller_access-control-list|wireless-controller_ap-status|switch-controller_traffic-policy|switch-controller_fortilink-settings|switch-controller_switch-interface-tag|switch-controller_802-1X-settings|switch-controller.security-policy_802-1X|switch-controller.security-policy_local-access|switch-controller_location|switch-controller_lldp-settings|switch-controller_lldp-profile|switch-controller.qos_dot1p-map|switch-controller.qos_ip-dscp-map|switch-controller.qos_queue-policy|switch-controller.qos_qos-policy|switch-controller_storm-control-policy|switch-controller.auto-config_policy|switch-controller.auto-config_default|switch-controller.auto-config_custom|switch-controller.initial-config_template|switch-controller.initial-config_vlans|switch-controller_switch-profile|switch-controller_custom-command|switch-controller_virtual-port-pool|switch-controller.ptp_settings|switch-controller.ptp_policy|switch-controller_vlan-policy|switch-controller_dynamic-port-policy|switch-controller_managed-switch|switch-controller_switch-group|switch-controller_stp-settings|switch-controller_stp-instance|switch-controller_storm-control|switch-controller_global|switch-controller_system|switch-controller_switch-log|switch-controller_igmp-snooping|switch-controller_sflow|switch-controller_quarantine|switch-controller_network-monitor-settings|switch-controller_flow-tracking|switch-controller_snmp-sysinfo|switch-controller_snmp-trap-threshold|switch-controller_snmp-community|switch-controller_snmp-user|switch-controller_traffic-sniffer|switch-controller_remote-log|switch-controller_mac-policy|firewall_address|firewall_multicast-address|firewall_address6-template|firewall_address6|firewall_multicast-address6|firewall_addrgrp|firewall_addrgrp6|firewall.wildcard-fqdn_custom|firewall.wildcard-fqdn_group|firewall_traffic-class|firewall.service_category|firewall.service_custom|firewall.service_group|firewall_internet-service-name|firewall_internet-service-group|firewall_internet-service-extension|firewall_internet-service-custom|firewall_internet-service-addition|firewall_internet-service-append|firewall_internet-service-custom-group|firewall_internet-service-definition|firewall_network-service-dynamic|firewall.shaper_traffic-shaper|firewall.shaper_per-ip-shaper|firewall_proxy-address|firewall_proxy-addrgrp|firewall.schedule_onetime|firewall.schedule_recurring|firewall.schedule_group|firewall_ippool|firewall_ippool6|firewall_ldb-monitor|firewall_vip|firewall_vip6|firewall_vipgrp|firewall_vipgrp6|firewall.ssh_local-key|firewall.ssh_local-ca|firewall.ssh_setting|firewall.ssh_host-key|firewall_decrypted-traffic-mirror|firewall_access-proxy-virtual-host|firewall_access-proxy-ssh-client-cert|firewall_access-proxy|firewall_access-proxy6|firewall.ipmacbinding_setting|firewall.ipmacbinding_table|firewall_profile-protocol-options|firewall_ssl-ssh-profile|firewall_profile-group|firewall_ssl-server|firewall_identity-based-route|firewall_auth-portal|firewall_security-policy|firewall_policy|firewall_shaping-policy|firewall_shaping-profile|firewall_local-in-policy|firewall_local-in-policy6|firewall_ttl-policy|firewall_proxy-policy|firewall_dnstranslation|firewall_multicast-policy|firewall_multicast-policy6|firewall_interface-policy|firewall_interface-policy6|firewall_DoS-policy|firewall_DoS-policy6|firewall_sniffer|firewall_central-snat-map|firewall.ssl_setting|firewall_ip-translation|firewall_ipv6-eh-filter|firewall_global|vpn.certificate_ca|vpn.certificate_remote|vpn.certificate_local|vpn.certificate_crl|vpn.certificate_ocsp-server|vpn.certificate_setting|vpn.ssl.web_realm|vpn.ssl.web_host-check-software|vpn.ssl.web_portal|vpn.ssl.web_user-group-bookmark|vpn.ssl.web_user-bookmark|vpn.ssl_settings|vpn.ssl_client|vpn.ipsec_phase1|vpn.ipsec_phase2|vpn.ipsec_manualkey|vpn.ipsec_concentrator|vpn.ipsec_fec|vpn.ipsec_phase1-interface|vpn.ipsec_phase2-interface|vpn.ipsec_manualkey-interface|vpn.ipsec_forticlient|vpn_pptp|vpn_l2tp|vpn_ocvpn|certificate_ca|certificate_remote|certificate_local|certificate_crl|webfilter_ftgd-local-cat|webfilter_content|webfilter_content-header|webfilter_urlfilter|webfilter_ips-urlfilter-setting|webfilter_ips-urlfilter-setting6|webfilter_ips-urlfilter-cache-setting|webfilter_profile|webfilter_fortiguard|webfilter_override|webfilter_ftgd-local-rating|webfilter_search-engine|ips_sensor|ips_custom|ips_global|ips_settings|sctp-filter_profile|web-proxy_profile|web-proxy_global|web-proxy_explicit|web-proxy_forward-server|web-proxy_forward-server-group|web-proxy_debug-url|web-proxy_wisp|web-proxy_url-match|wanopt_webcache|wanopt_settings|wanopt_peer|wanopt_auth-group|wanopt_profile|wanopt_content-delivery-network-rule|wanopt_cache-service|wanopt_remote-storage|ftp-proxy_explicit|application_custom|application_list|application_group|dlp_data-type|dlp_dictionary|dlp_sensor|dlp_filepattern|dlp_sensitivity|dlp_fp-doc-source|dlp_profile|dlp_settings|videofilter_youtube-key|videofilter_youtube-channel-filter|videofilter_profile|emailfilter_bword|emailfilter_block-allow-list|emailfilter_mheader|emailfilter_dnsbl|emailfilter_iptrust|emailfilter_profile|emailfilter_fortishield|emailfilter_options|log_threat-weight|log_custom-field|log.syslogd_setting|log.syslogd_override-setting|log.syslogd_filter|log.syslogd_override-filter|log.syslogd2_setting|log.syslogd2_override-setting|log.syslogd2_filter|log.syslogd2_override-filter|log.syslogd3_setting|log.syslogd3_override-setting|log.syslogd3_filter|log.syslogd3_override-filter|log.syslogd4_setting|log.syslogd4_override-setting|log.syslogd4_filter|log.syslogd4_override-filter|log.webtrends_setting|log.webtrends_filter|log.memory_global-setting|log.memory_setting|log.memory_filter|log.disk_setting|log.disk_filter|log_eventfilter|log.fortiguard_setting|log.fortiguard_override-setting|log.fortiguard_filter|log.fortiguard_override-filter|log.tacacs+accounting_setting|log.tacacs+accounting_filter|log.tacacs+accounting2_setting|log.tacacs+accounting2_filter|log.tacacs+accounting3_setting|log.tacacs+accounting3_filter|log.null-device_setting|log.null-device_filter|log_setting|log_gui-display|log.fortianalyzer_setting|log.fortianalyzer_override-setting|log.fortianalyzer_filter|log.fortianalyzer_override-filter|log.fortianalyzer2_setting|log.fortianalyzer2_override-setting|log.fortianalyzer2_filter|log.fortianalyzer2_override-filter|log.fortianalyzer3_setting|log.fortianalyzer3_override-setting|log.fortianalyzer3_filter|log.fortianalyzer3_override-filter|log.fortianalyzer-cloud_setting|log.fortianalyzer-cloud_override-setting|log.fortianalyzer-cloud_filter|log.fortianalyzer-cloud_override-filter|icap_server|icap_server-group|icap_profile|user_certificate|user_radius|user_tacacs+|user_exchange|user_ldap|user_krb-keytab|user_domain-controller|user_pop3|user_saml|user_fsso|user_adgrp|user_fsso-polling|user_fortitoken|user_password-policy|user_local|user_setting|user_peer|user_peergrp|user_quarantine|user_group|user_security-exempt-list|user_nac-policy|voip_profile|dnsfilter_domain-filter|dnsfilter_profile|nsxt_setting|nsxt_service-chain|antivirus_settings|antivirus_quarantine|antivirus_profile|ssh-filter_profile|file-filter_profile|report_layout|report_setting|waf_main-class|waf_sub-class|waf_signature|waf_profile|authentication_scheme|authentication_rule|authentication_setting|extension-controller_dataplan|extension-controller_extender-profile|extension-controller_extender|extension-controller_fortigate-profile|extension-controller_fortigate|endpoint-control_fctems|alertemail_setting|router_access-list|router_access-list6|router_aspath-list|router_prefix-list|router_prefix-list6|router_key-chain|router_community-list|router_route-map|router_rip|router_ripng|router_static|router_policy|router_policy6|router_static6|router_ospf|router_ospf6|router_bgp|router_isis|router_multicast-flow|router_multicast|router_multicast6|router_auth-path|router_setting|router_bfd|router_bfd6|automation_setting|dpdk_global|dpdk_cpus|system_isf-queue-profile|system_npu|system_np6|system_lte-modem|system_gi-gk|system.replacemsg_mail|system.replacemsg_http|system.replacemsg_webproxy|system.replacemsg_ftp|system.replacemsg_fortiguard-wf|system.replacemsg_spam|system.replacemsg_alertmail|system.replacemsg_admin|system.replacemsg_auth|system.replacemsg_sslvpn|system.replacemsg_nac-quar|system.replacemsg_traffic-quota|system.replacemsg_utm|system.replacemsg_icap|system.replacemsg_automation|system_modem|system.3g-modem_custom|system_status|system.performance_status|system.performance_top|system.performance.firewall_packet-distribution|system.performance.firewall_statistics|system_session|system_session6|system_cmdb|system_fortiguard-service|system_fortianalyzer-connectivity|system.checksum_status|system_mgmt-csum|system_ha-nonsync-csum|system_fortiguard-log-service|system_central-mgmt|system.info.admin_status|system.info.admin_ssh|system_geoip-country|system_cluster-sync|system_arp|system_startup-error-log|system.source-ip_status|system.auto-update_status|system.auto-update_versions|system.session-info_list|system.session-info_expectation|system.session-info_full-stat|system.session-info_statistics|system.session-info_ttl|system.session-helper-info_list|system.ip-conflict_status|wireless-controller_scan|wireless-controller_wlchanlistlic|wireless-controller_status|wireless-controller_wtp-status|wireless-controller_client-info|wireless-controller_vap-status|wireless-controller_rf-analysis|wireless-controller_spectral-info|ipsec_tunnel|firewall_city|firewall_region|firewall_country|firewall_internet-service|firewall_internet-service-reputation|firewall_internet-service-sld|firewall_internet-service-ipbl-vendor|firewall_internet-service-ipbl-reason|firewall_internet-service-owner|firewall_internet-service-list|firewall_internet-service-botnet|firewall_vendor-mac|firewall_vendor-mac-summary|firewall.shaper_traffic|firewall.shaper_per-ip|firewall_gtp|firewall_pfcp|firewall_acl|firewall_acl6|firewall.iprope_list|firewall.iprope.appctrl_list|firewall.iprope.appctrl_status|firewall_proute|firewall_proute6|vpn.ssl_monitor|vpn.ipsec.stats_crypto|vpn.ipsec.stats_tunnel|vpn.ipsec.tunnel_details|vpn.ipsec.tunnel_summary|vpn.ipsec.tunnel_name|vpn.ike_gateway|vpn.status_l2tp|vpn.status_pptp|vpn.status.ssl_list|vpn.status.ssl_hw-acceleration-status|webfilter_categories|webfilter_ftgd-statistics|webfilter_status|webfilter_override-usr|ips_view-map|ips_decoder|ips_rule|ips_rule-settings|ips_session|application_name|application_rule-settings|report.sql_status|gtp_apn|gtp_apngrp|gtp_message-filter-v0v1|gtp_message-filter-v2|gtp_rat-timeout-profile|gtp_ie-allow-list|gtp_tunnel-limit|gtp_apn-shaper|pfcp_message-filter|extender-controller_dataplan|extender-controller_extender-profile|extender-controller_extender|router_info|router_info6|hardware_status|hardware_cpu|hardware_memory|hardware_nic|hardware.npu.np6_port-list|hardware.npu.np6_dce|hardware.npu.np6_session-stats|hardware.npu.np6_sse-stats|hardware.npu.np6_ipsec-stats|hardware.npu.np6_synproxy-stats|mgmt-data_status|extender_sys-info|extender_extender-info|extender_session-info|extender_datachannel-info|extender_fexwan|extender_modem-status|extender_lte-carrier-list|extender_lte-carrier-by-mcc-mnc|monitoring_np6-ipsec-engine|monitoring_npu-hpe|wireless-controller_address|wireless-controller_addrgrp|system_fortiai|system_physical-switch|system_virtual-switch|system_stp|system_fortimanager|system_fm|system_nat64|firewall_vip46|firewall_vip64|firewall_vipgrp46|firewall_vipgrp64|firewall_policy64|firewall_policy46|system.autoupdate_push-update|switch-controller_nac-settings|switch-controller_port-policy|switch-controller_nac-device|emailfilter_bwl|antivirus_heuristic|credential-store_domain-controller|report_dataset|report_chart|report_style|report_theme|gtp_ie-white-list|system.replacemsg_nntp|system.replacemsg_device-detection-portal|switch-controller_poe|cifs_domain-controller|cifs_profile|system.replacemsg_mms|system.replacemsg_mm1|system.replacemsg_mm3|system.replacemsg_mm4|system.replacemsg_mm7|system_virtual-wan-link|system_mem-mgr|firewall_carrier-endpoint-bwl|firewall_mms-profile|firewall.consolidated_policy|firewall_policy6|antivirus_notification|antivirus_mms-checksum|endpoint-control_settings|system_smc-ntp|switch-controller_vlan|switch-controller.security-policy_captive-portal|user_device|user_device-group|endpoint-control_client|system.replacemsg_ec|dlp_fp-sensitivity|spamfilter_bword|spamfilter_bwl|spamfilter_mheader|spamfilter_dnsbl|spamfilter_iptrust|spamfilter_profile|spamfilter_fortishield|spamfilter_options|user_device-category|user_device-access-list|switch-controller_mac-sync-settings|endpoint-control_forticlient-ems|endpoint-control_profile|endpoint-control_forticlient-registration-sync|endpoint-control_registered-forticlient}",
      "\t#selectors: ${8:}",
      "\t#sorters: ${9:}",
      "\t#vdom: ${10:root}"
    ]
  },
  "fortios_extender_controller_dataplan": {
    "prefix": "fortios_extender_controller_dataplan",
    "description": "FortiExtender dataplan configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_controller_dataplan:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extender_controller_dataplan: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extender_controller_extender": {
    "prefix": "fortios_extender_controller_extender",
    "description": "Extender controller configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_controller_extender:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extender_controller_extender: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extender_controller_extender_profile": {
    "prefix": "fortios_extender_controller_extender_profile",
    "description": "FortiExtender extender profile configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_controller_extender_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extender_controller_extender_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extender_extender_info": {
    "prefix": "fortios_extender_extender_info",
    "description": "Display FortiExtender struct information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_extender_info:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_extender_info: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extender_lte_carrier_by_mcc_mnc": {
    "prefix": "fortios_extender_lte_carrier_by_mcc_mnc",
    "description": "Display FortiExtender modem carrier based on MCC and MNC in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_lte_carrier_by_mcc_mnc:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_lte_carrier_by_mcc_mnc: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extender_lte_carrier_list": {
    "prefix": "fortios_extender_lte_carrier_list",
    "description": "Display FortiExtender modem carrier list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_lte_carrier_list:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_lte_carrier_list: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extender_modem_status": {
    "prefix": "fortios_extender_modem_status",
    "description": "Display detailed FortiExtender modem status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_modem_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_modem_status: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extender_sys_info": {
    "prefix": "fortios_extender_sys_info",
    "description": "Display detailed FortiExtender system information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extender_sys_info:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#extender_sys_info: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_extension_controller_dataplan": {
    "prefix": "fortios_extension_controller_dataplan",
    "description": "FortiExtender dataplan configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_dataplan:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_dataplan: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extension_controller_extender": {
    "prefix": "fortios_extension_controller_extender",
    "description": "Extender controller configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_extender:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_extender: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extension_controller_extender_profile": {
    "prefix": "fortios_extension_controller_extender_profile",
    "description": "FortiExtender extender profile configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_extender_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_extender_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extension_controller_fortigate": {
    "prefix": "fortios_extension_controller_fortigate",
    "description": "FortiGate controller configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_fortigate:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_fortigate: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_extension_controller_fortigate_profile": {
    "prefix": "fortios_extension_controller_fortigate_profile",
    "description": "FortiGate connector profile configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_extension_controller_fortigate_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#extension_controller_fortigate_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_file_filter_profile": {
    "prefix": "fortios_file_filter_profile",
    "description": "Configure file-filter profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_file_filter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#file_filter_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_access_proxy": {
    "prefix": "fortios_firewall_access_proxy",
    "description": "Configure IPv4 access proxy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_access_proxy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_access_proxy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_access_proxy6": {
    "prefix": "fortios_firewall_access_proxy6",
    "description": "Configure IPv6 access proxy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_access_proxy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_access_proxy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_access_proxy_ssh_client_cert": {
    "prefix": "fortios_firewall_access_proxy_ssh_client_cert",
    "description": "Configure Access Proxy SSH client certificate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_access_proxy_ssh_client_cert:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_access_proxy_ssh_client_cert: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_access_proxy_virtual_host": {
    "prefix": "fortios_firewall_access_proxy_virtual_host",
    "description": "Configure Access Proxy virtual hosts in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_access_proxy_virtual_host:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_access_proxy_virtual_host: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_acl": {
    "prefix": "fortios_firewall_acl",
    "description": "Configure IPv4 access control list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_acl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_acl: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_acl6": {
    "prefix": "fortios_firewall_acl6",
    "description": "Configure IPv6 access control list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_acl6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_acl6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_address": {
    "prefix": "fortios_firewall_address",
    "description": "Configure IPv4 addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_address:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_address: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_address6": {
    "prefix": "fortios_firewall_address6",
    "description": "Configure IPv6 firewall addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_address6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_address6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_address6_template": {
    "prefix": "fortios_firewall_address6_template",
    "description": "Configure IPv6 address templates in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_address6_template:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_address6_template: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_addrgrp": {
    "prefix": "fortios_firewall_addrgrp",
    "description": "Configure IPv4 address groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_addrgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_addrgrp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_addrgrp6": {
    "prefix": "fortios_firewall_addrgrp6",
    "description": "Configure IPv6 address groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_addrgrp6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_addrgrp6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_auth_portal": {
    "prefix": "fortios_firewall_auth_portal",
    "description": "Configure firewall authentication portals in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_auth_portal:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_auth_portal: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_carrier_endpoint_bwl": {
    "prefix": "fortios_firewall_carrier_endpoint_bwl",
    "description": "Carrier end point black/white list tables in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_carrier_endpoint_bwl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_carrier_endpoint_bwl: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_central_snat_map": {
    "prefix": "fortios_firewall_central_snat_map",
    "description": "Configure IPv4 and IPv6 central SNAT policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_central_snat_map:",
      "\t#access_token: ${1:}",
      "\t#action: ${2:move}",
      "\t#after: ${3:}",
      "\t#before: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_central_snat_map: ${6:}",
      "\t#member_path: ${7:}",
      "\t#member_state: ${8:present|absent}",
      "\t#self: ${9:}",
      "\t#state: ${10:present|absent}",
      "\t#vdom: ${11:root}"
    ]
  },
  "fortios_firewall_city": {
    "prefix": "fortios_firewall_city",
    "description": "Define city table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_city:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_city: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_consolidated_policy": {
    "prefix": "fortios_firewall_consolidated_policy",
    "description": "Configure consolidated IPv4/IPv6 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_consolidated_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_consolidated_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_country": {
    "prefix": "fortios_firewall_country",
    "description": "Define country table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_country:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_country: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_decrypted_traffic_mirror": {
    "prefix": "fortios_firewall_decrypted_traffic_mirror",
    "description": "Configure decrypted traffic mirror in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_decrypted_traffic_mirror:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_decrypted_traffic_mirror: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_dnstranslation": {
    "prefix": "fortios_firewall_dnstranslation",
    "description": "Configure DNS translation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_dnstranslation:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_dnstranslation: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_dos_policy": {
    "prefix": "fortios_firewall_dos_policy",
    "description": "Configure IPv4 DoS policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_dos_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_dos_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_dos_policy6": {
    "prefix": "fortios_firewall_dos_policy6",
    "description": "Configure IPv6 DoS policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_dos_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_dos_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_global": {
    "prefix": "fortios_firewall_global",
    "description": "Global firewall settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_global: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_gtp": {
    "prefix": "fortios_firewall_gtp",
    "description": "Configure GTP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_gtp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_gtp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_identity_based_route": {
    "prefix": "fortios_firewall_identity_based_route",
    "description": "Configure identity based routing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_identity_based_route:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_identity_based_route: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_interface_policy": {
    "prefix": "fortios_firewall_interface_policy",
    "description": "Configure IPv4 interface policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_interface_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_interface_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_interface_policy6": {
    "prefix": "fortios_firewall_interface_policy6",
    "description": "Configure IPv6 interface policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_interface_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_interface_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service": {
    "prefix": "fortios_firewall_internet_service",
    "description": "Show Internet Service application in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_addition": {
    "prefix": "fortios_firewall_internet_service_addition",
    "description": "Configure Internet Services Addition in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_addition:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_addition: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_append": {
    "prefix": "fortios_firewall_internet_service_append",
    "description": "Configure additional port mappings for Internet Services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_append:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_internet_service_append: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_internet_service_botnet": {
    "prefix": "fortios_firewall_internet_service_botnet",
    "description": "Show Internet Service botnet in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_botnet:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_botnet: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_custom": {
    "prefix": "fortios_firewall_internet_service_custom",
    "description": "Configure custom Internet Services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_custom: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_custom_group": {
    "prefix": "fortios_firewall_internet_service_custom_group",
    "description": "Configure custom Internet Service group in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_custom_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_custom_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_definition": {
    "prefix": "fortios_firewall_internet_service_definition",
    "description": "Configure Internet Service definition in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_definition:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_definition: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_extension": {
    "prefix": "fortios_firewall_internet_service_extension",
    "description": "Configure Internet Services Extension in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_extension:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_extension: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_group": {
    "prefix": "fortios_firewall_internet_service_group",
    "description": "Configure group of Internet Service in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_ipbl_reason": {
    "prefix": "fortios_firewall_internet_service_ipbl_reason",
    "description": "IP block list reason in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_ipbl_reason:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_ipbl_reason: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_ipbl_vendor": {
    "prefix": "fortios_firewall_internet_service_ipbl_vendor",
    "description": "IP block list vendor in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_ipbl_vendor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_ipbl_vendor: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_list": {
    "prefix": "fortios_firewall_internet_service_list",
    "description": "Internet Service list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_list: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_name": {
    "prefix": "fortios_firewall_internet_service_name",
    "description": "Define internet service names in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_name:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_name: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_owner": {
    "prefix": "fortios_firewall_internet_service_owner",
    "description": "Internet Service owner in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_owner:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_owner: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_reputation": {
    "prefix": "fortios_firewall_internet_service_reputation",
    "description": "Show Internet Service reputation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_reputation:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_reputation: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_internet_service_sld": {
    "prefix": "fortios_firewall_internet_service_sld",
    "description": "Internet Service Second Level Domain in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_internet_service_sld:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_internet_service_sld: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ip_translation": {
    "prefix": "fortios_firewall_ip_translation",
    "description": "Configure firewall IP-translation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ip_translation:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ip_translation: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ipmacbinding_setting": {
    "prefix": "fortios_firewall_ipmacbinding_setting",
    "description": "Configure IP to MAC binding settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ipmacbinding_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_ipmacbinding_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ipmacbinding_table": {
    "prefix": "fortios_firewall_ipmacbinding_table",
    "description": "Configure IP to MAC address pairs in the IP/MAC binding table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ipmacbinding_table:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ipmacbinding_table: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ippool": {
    "prefix": "fortios_firewall_ippool",
    "description": "Configure IPv4 IP pools in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ippool:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ippool: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ippool6": {
    "prefix": "fortios_firewall_ippool6",
    "description": "Configure IPv6 IP pools in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ippool6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ippool6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_iprope_list": {
    "prefix": "fortios_firewall_iprope_list",
    "description": "List in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_iprope_list:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_iprope_list: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ipv6_eh_filter": {
    "prefix": "fortios_firewall_ipv6_eh_filter",
    "description": "Configure IPv6 extension header filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ipv6_eh_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_ipv6_eh_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ldb_monitor": {
    "prefix": "fortios_firewall_ldb_monitor",
    "description": "Configure server load balancing health monitors in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ldb_monitor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ldb_monitor: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_local_in_policy": {
    "prefix": "fortios_firewall_local_in_policy",
    "description": "Configure user defined IPv4 local-in policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_local_in_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_local_in_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_local_in_policy6": {
    "prefix": "fortios_firewall_local_in_policy6",
    "description": "Configure user defined IPv6 local-in policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_local_in_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_local_in_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_mms_profile": {
    "prefix": "fortios_firewall_mms_profile",
    "description": "Configure MMS profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_mms_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_mms_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_multicast_address": {
    "prefix": "fortios_firewall_multicast_address",
    "description": "Configure multicast addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_multicast_address:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_multicast_address: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_multicast_address6": {
    "prefix": "fortios_firewall_multicast_address6",
    "description": "Configure IPv6 multicast address in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_multicast_address6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_multicast_address6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_multicast_policy": {
    "prefix": "fortios_firewall_multicast_policy",
    "description": "Configure multicast NAT policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_multicast_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_multicast_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_multicast_policy6": {
    "prefix": "fortios_firewall_multicast_policy6",
    "description": "Configure IPv6 multicast NAT policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_multicast_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_multicast_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_network_service_dynamic": {
    "prefix": "fortios_firewall_network_service_dynamic",
    "description": "Configure Dynamic Network Services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_network_service_dynamic:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_network_service_dynamic: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_pfcp": {
    "prefix": "fortios_firewall_pfcp",
    "description": "Configure PFCP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_pfcp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_pfcp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_policy": {
    "prefix": "fortios_firewall_policy",
    "description": "Configure IPv4/IPv6 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_policy:",
      "\t#access_token: ${1:}",
      "\t#action: ${2:move}",
      "\t#after: ${3:}",
      "\t#before: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_policy: ${6:}",
      "\t#member_path: ${7:}",
      "\t#member_state: ${8:present|absent}",
      "\t#self: ${9:}",
      "\t#state: ${10:present|absent}",
      "\t#vdom: ${11:root}"
    ]
  },
  "fortios_firewall_policy46": {
    "prefix": "fortios_firewall_policy46",
    "description": "Configure IPv4 to IPv6 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_policy46:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_policy46: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_policy6": {
    "prefix": "fortios_firewall_policy6",
    "description": "Configure IPv6 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_policy6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_policy64": {
    "prefix": "fortios_firewall_policy64",
    "description": "Configure IPv6 to IPv4 policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_policy64:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_policy64: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_profile_group": {
    "prefix": "fortios_firewall_profile_group",
    "description": "Configure profile groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_profile_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_profile_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_profile_protocol_options": {
    "prefix": "fortios_firewall_profile_protocol_options",
    "description": "Configure protocol options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_profile_protocol_options:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_profile_protocol_options: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_proute": {
    "prefix": "fortios_firewall_proute",
    "description": "List policy routing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_proute:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_proute: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_proxy_address": {
    "prefix": "fortios_firewall_proxy_address",
    "description": "Configure web proxy address in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_proxy_address:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_proxy_address: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_proxy_addrgrp": {
    "prefix": "fortios_firewall_proxy_addrgrp",
    "description": "Configure web proxy address group in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_proxy_addrgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_proxy_addrgrp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_proxy_policy": {
    "prefix": "fortios_firewall_proxy_policy",
    "description": "Configure proxy policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_proxy_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_proxy_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_region": {
    "prefix": "fortios_firewall_region",
    "description": "Define region table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_region:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_region: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_schedule_group": {
    "prefix": "fortios_firewall_schedule_group",
    "description": "Schedule group configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_schedule_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_schedule_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_schedule_onetime": {
    "prefix": "fortios_firewall_schedule_onetime",
    "description": "Onetime schedule configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_schedule_onetime:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_schedule_onetime: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_schedule_recurring": {
    "prefix": "fortios_firewall_schedule_recurring",
    "description": "Recurring schedule configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_schedule_recurring:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_schedule_recurring: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_security_policy": {
    "prefix": "fortios_firewall_security_policy",
    "description": "Configure NGFW IPv4/IPv6 application policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_security_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_security_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_service_category": {
    "prefix": "fortios_firewall_service_category",
    "description": "Configure service categories in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_service_category:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_service_category: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_service_custom": {
    "prefix": "fortios_firewall_service_custom",
    "description": "Configure custom services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_service_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_service_custom: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_service_group": {
    "prefix": "fortios_firewall_service_group",
    "description": "Configure service groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_service_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_service_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_shaper_per_ip_shaper": {
    "prefix": "fortios_firewall_shaper_per_ip_shaper",
    "description": "Configure per-IP traffic shaper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_shaper_per_ip_shaper:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_shaper_per_ip_shaper: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_shaper_traffic_shaper": {
    "prefix": "fortios_firewall_shaper_traffic_shaper",
    "description": "Configure shared traffic shaper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_shaper_traffic_shaper:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_shaper_traffic_shaper: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_shaping_policy": {
    "prefix": "fortios_firewall_shaping_policy",
    "description": "Configure shaping policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_shaping_policy:",
      "\t#access_token: ${1:}",
      "\t#action: ${2:move}",
      "\t#after: ${3:}",
      "\t#before: ${4:}",
      "\t#enable_log: ${5:false}",
      "\t#firewall_shaping_policy: ${6:}",
      "\t#member_path: ${7:}",
      "\t#member_state: ${8:present|absent}",
      "\t#self: ${9:}",
      "\t#state: ${10:present|absent}",
      "\t#vdom: ${11:root}"
    ]
  },
  "fortios_firewall_shaping_profile": {
    "prefix": "fortios_firewall_shaping_profile",
    "description": "Configure shaping profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_shaping_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_shaping_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_sniffer": {
    "prefix": "fortios_firewall_sniffer",
    "description": "Configure sniffer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_sniffer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_sniffer: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssh_host_key": {
    "prefix": "fortios_firewall_ssh_host_key",
    "description": "SSH proxy host public keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssh_host_key:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssh_host_key: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssh_local_ca": {
    "prefix": "fortios_firewall_ssh_local_ca",
    "description": "SSH proxy local CA in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssh_local_ca:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssh_local_ca: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssh_local_key": {
    "prefix": "fortios_firewall_ssh_local_key",
    "description": "SSH proxy local keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssh_local_key:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssh_local_key: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssh_setting": {
    "prefix": "fortios_firewall_ssh_setting",
    "description": "SSH proxy settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssh_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_ssh_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ssl_server": {
    "prefix": "fortios_firewall_ssl_server",
    "description": "Configure SSL servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssl_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssl_server: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ssl_setting": {
    "prefix": "fortios_firewall_ssl_setting",
    "description": "SSL proxy settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssl_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#firewall_ssl_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_firewall_ssl_ssh_profile": {
    "prefix": "fortios_firewall_ssl_ssh_profile",
    "description": "Configure SSL/SSH protocol options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ssl_ssh_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ssl_ssh_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_traffic_class": {
    "prefix": "fortios_firewall_traffic_class",
    "description": "Configure names for shaping classes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_traffic_class:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_traffic_class: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_ttl_policy": {
    "prefix": "fortios_firewall_ttl_policy",
    "description": "Configure TTL policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_ttl_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_ttl_policy: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vendor_mac": {
    "prefix": "fortios_firewall_vendor_mac",
    "description": "Show vendor and the MAC address they have in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vendor_mac:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vendor_mac: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vip": {
    "prefix": "fortios_firewall_vip",
    "description": "Configure virtual IP for IPv4 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vip:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vip: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vip46": {
    "prefix": "fortios_firewall_vip46",
    "description": "Configure IPv4 to IPv6 virtual IPs in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vip46:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vip46: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vip6": {
    "prefix": "fortios_firewall_vip6",
    "description": "Configure virtual IP for IPv6 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vip6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vip6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vip64": {
    "prefix": "fortios_firewall_vip64",
    "description": "Configure IPv6 to IPv4 virtual IPs in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vip64:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vip64: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vipgrp": {
    "prefix": "fortios_firewall_vipgrp",
    "description": "Configure IPv4 virtual IP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vipgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vipgrp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vipgrp46": {
    "prefix": "fortios_firewall_vipgrp46",
    "description": "Configure IPv4 to IPv6 virtual IP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vipgrp46:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vipgrp46: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vipgrp6": {
    "prefix": "fortios_firewall_vipgrp6",
    "description": "Configure IPv6 virtual IP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vipgrp6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vipgrp6: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_vipgrp64": {
    "prefix": "fortios_firewall_vipgrp64",
    "description": "Configure IPv6 to IPv4 virtual IP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_vipgrp64:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_vipgrp64: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_wildcard_fqdn_custom": {
    "prefix": "fortios_firewall_wildcard_fqdn_custom",
    "description": "Config global/VDOM Wildcard FQDN address in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_wildcard_fqdn_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_wildcard_fqdn_custom: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_firewall_wildcard_fqdn_group": {
    "prefix": "fortios_firewall_wildcard_fqdn_group",
    "description": "Config global Wildcard FQDN address groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_firewall_wildcard_fqdn_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#firewall_wildcard_fqdn_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ftp_proxy_explicit": {
    "prefix": "fortios_ftp_proxy_explicit",
    "description": "Configure explicit FTP proxy settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ftp_proxy_explicit:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#ftp_proxy_explicit: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_gtp_apn": {
    "prefix": "fortios_gtp_apn",
    "description": "Configure APN for GTP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_apn:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_apn: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_apn_shaper": {
    "prefix": "fortios_gtp_apn_shaper",
    "description": "Global per-APN shaper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_apn_shaper:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_apn_shaper: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_apngrp": {
    "prefix": "fortios_gtp_apngrp",
    "description": "Configure APN groups for GTP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_apngrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_apngrp: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_ie_allow_list": {
    "prefix": "fortios_gtp_ie_allow_list",
    "description": "IE allow list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_ie_allow_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_ie_allow_list: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_ie_white_list": {
    "prefix": "fortios_gtp_ie_white_list",
    "description": "IE white list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_ie_white_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_ie_white_list: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_message_filter_v0v1": {
    "prefix": "fortios_gtp_message_filter_v0v1",
    "description": "Message filter for GTPv0/v1 messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_message_filter_v0v1:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_message_filter_v0v1: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_message_filter_v2": {
    "prefix": "fortios_gtp_message_filter_v2",
    "description": "Message filter for GTPv2 messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_message_filter_v2:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_message_filter_v2: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_rat_timeout_profile": {
    "prefix": "fortios_gtp_rat_timeout_profile",
    "description": "RAT timeout profil in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_rat_timeout_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_rat_timeout_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_gtp_tunnel_limit": {
    "prefix": "fortios_gtp_tunnel_limit",
    "description": "GTP tunnel limiter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_gtp_tunnel_limit:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#gtp_tunnel_limit: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_hardware_nic": {
    "prefix": "fortios_hardware_nic",
    "description": "Display NIC information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_hardware_nic:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#hardware_nic: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_hardware_npu_np6_dce": {
    "prefix": "fortios_hardware_npu_np6_dce",
    "description": "Show NP6 non-zero subengine drop counters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_hardware_npu_np6_dce:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#hardware_npu_np6_dce: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_hardware_npu_np6_session_stats": {
    "prefix": "fortios_hardware_npu_np6_session_stats",
    "description": "Show NP6 session offloading statistics counters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_hardware_npu_np6_session_stats:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#hardware_npu_np6_session_stats: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_hardware_npu_np6_sse_stats": {
    "prefix": "fortios_hardware_npu_np6_sse_stats",
    "description": "Show NP6 hardware session statistics counters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_hardware_npu_np6_sse_stats:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#hardware_npu_np6_sse_stats: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_icap_profile": {
    "prefix": "fortios_icap_profile",
    "description": "Configure ICAP profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_icap_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#icap_profile: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_icap_server": {
    "prefix": "fortios_icap_server",
    "description": "Configure ICAP servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_icap_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#icap_server: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_icap_server_group": {
    "prefix": "fortios_icap_server_group",
    "description": "Configure an ICAP server group consisting of multiple forward servers. Supports failover and load balancing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_icap_server_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#icap_server_group: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_custom": {
    "prefix": "fortios_ips_custom",
    "description": "Configure IPS custom signature in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_custom: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_decoder": {
    "prefix": "fortios_ips_decoder",
    "description": "Configure IPS decoder in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_decoder:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_decoder: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_global": {
    "prefix": "fortios_ips_global",
    "description": "Configure IPS global parameter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#ips_global: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_ips_rule": {
    "prefix": "fortios_ips_rule",
    "description": "Configure IPS rules in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_rule:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_rule: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_rule_settings": {
    "prefix": "fortios_ips_rule_settings",
    "description": "Configure IPS rule setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_rule_settings:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_rule_settings: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_sensor": {
    "prefix": "fortios_ips_sensor",
    "description": "Configure IPS sensor in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_sensor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_sensor: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ips_settings": {
    "prefix": "fortios_ips_settings",
    "description": "Configure IPS VDOM parameter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#ips_settings: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_ips_view_map": {
    "prefix": "fortios_ips_view_map",
    "description": "Configure IPS view-map in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ips_view_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#ips_view_map: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_json_generic": {
    "prefix": "fortios_json_generic",
    "description": "Config Fortinet's FortiOS and FortiGate with json generic method.",
    "body": [
      "fortinet.fortios.fortios_json_generic:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#json_generic: ${3:}",
      "\t#vdom: ${4:root}"
    ]
  },
  "fortios_log_custom_field": {
    "prefix": "fortios_log_custom_field",
    "description": "Configure custom log fields in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_custom_field:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#log_custom_field: ${4:}",
      "\t#member_path: ${5:}",
      "\t#member_state: ${6:present|absent}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_log_disk_filter": {
    "prefix": "fortios_log_disk_filter",
    "description": "Configure filters for local disk logging. Use these filters to determine the log messages to record according to severity and type in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_disk_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_disk_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_disk_setting": {
    "prefix": "fortios_log_disk_setting",
    "description": "Settings for local disk logging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_disk_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_disk_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_eventfilter": {
    "prefix": "fortios_log_eventfilter",
    "description": "Configure log event filters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_eventfilter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_eventfilter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fact": {
    "prefix": "fortios_log_fact",
    "description": "Retrieve log data of fortios log objects.",
    "body": [
      "fortinet.fortios.fortios_log_fact:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#filters: ${3:}",
      "\t#formatters: ${4:}",
      "\t#params: ${5:}",
      "\t#selector: ${6:disk_virus_archive|memory_virus_archive|fortianalyzer_virus_archive|forticloud_virus_archive|disk_ips_archive|disk_app-ctrl_archive|memory_ips_archive|memory_app-ctrl_archive|fortianalyzer_ips_archive|fortianalyzer_app-ctrl_archive|forticloud_ips_archive|forticloud_app-ctrl_archive|disk_ips_archive-download|disk_app-ctrl_archive-download|memory_ips_archive-download|memory_app-ctrl_archive-download|fortianalyzer_ips_archive-download|fortianalyzer_app-ctrl_archive-download|forticloud_ips_archive-download|forticloud_app-ctrl_archive-download|disk_virus_raw|disk_webfilter_raw|disk_waf_raw|disk_ips_raw|disk_anomaly_raw|disk_app-ctrl_raw|disk_cifs_raw|disk_emailfilter_raw|disk_dlp_raw|disk_voip_raw|disk_gtp_raw|disk_dns_raw|disk_ssh_raw|disk_ssl_raw|disk_file-filter_raw|memory_virus_raw|memory_webfilter_raw|memory_waf_raw|memory_ips_raw|memory_anomaly_raw|memory_app-ctrl_raw|memory_cifs_raw|memory_emailfilter_raw|memory_dlp_raw|memory_voip_raw|memory_gtp_raw|memory_dns_raw|memory_ssh_raw|memory_ssl_raw|memory_file-filter_raw|fortianalyzer_virus_raw|fortianalyzer_webfilter_raw|fortianalyzer_waf_raw|fortianalyzer_ips_raw|fortianalyzer_anomaly_raw|fortianalyzer_app-ctrl_raw|fortianalyzer_cifs_raw|fortianalyzer_emailfilter_raw|fortianalyzer_dlp_raw|fortianalyzer_voip_raw|fortianalyzer_gtp_raw|fortianalyzer_dns_raw|fortianalyzer_ssh_raw|fortianalyzer_ssl_raw|fortianalyzer_file-filter_raw|forticloud_virus_raw|forticloud_webfilter_raw|forticloud_waf_raw|forticloud_ips_raw|forticloud_anomaly_raw|forticloud_app-ctrl_raw|forticloud_cifs_raw|forticloud_emailfilter_raw|forticloud_dlp_raw|forticloud_voip_raw|forticloud_gtp_raw|forticloud_dns_raw|forticloud_ssh_raw|forticloud_ssl_raw|forticloud_file-filter_raw|disk_event_vpn|disk_event_user|disk_event_router|disk_event_wireless|disk_event_wad|disk_event_endpoint|disk_event_ha|disk_event_compliance-check|disk_event_system|disk_event_connector|disk_event_security-rating|disk_event_fortiextender|disk_traffic_forward|disk_traffic_local|disk_traffic_multicast|disk_traffic_sniffer|disk_traffic_fortiview|disk_traffic_threat|memory_event_vpn|memory_event_user|memory_event_router|memory_event_wireless|memory_event_wad|memory_event_endpoint|memory_event_ha|memory_event_compliance-check|memory_event_system|memory_event_connector|memory_event_security-rating|memory_event_fortiextender|memory_traffic_forward|memory_traffic_local|memory_traffic_multicast|memory_traffic_sniffer|memory_traffic_fortiview|memory_traffic_threat|fortianalyzer_event_vpn|fortianalyzer_event_user|fortianalyzer_event_router|fortianalyzer_event_wireless|fortianalyzer_event_wad|fortianalyzer_event_endpoint|fortianalyzer_event_ha|fortianalyzer_event_compliance-check|fortianalyzer_event_system|fortianalyzer_event_connector|fortianalyzer_event_security-rating|fortianalyzer_event_fortiextender|fortianalyzer_traffic_forward|fortianalyzer_traffic_local|fortianalyzer_traffic_multicast|fortianalyzer_traffic_sniffer|fortianalyzer_traffic_fortiview|fortianalyzer_traffic_threat|forticloud_event_vpn|forticloud_event_user|forticloud_event_router|forticloud_event_wireless|forticloud_event_wad|forticloud_event_endpoint|forticloud_event_ha|forticloud_event_compliance-check|forticloud_event_system|forticloud_event_connector|forticloud_event_security-rating|forticloud_event_fortiextender|forticloud_traffic_forward|forticloud_traffic_local|forticloud_traffic_multicast|forticloud_traffic_sniffer|forticloud_traffic_fortiview|forticloud_traffic_threat}",
      "\t#selectors: ${7:}",
      "\t#sorters: ${8:}",
      "\t#vdom: ${9:root}"
    ]
  },
  "fortios_log_fortianalyzer2_filter": {
    "prefix": "fortios_log_fortianalyzer2_filter",
    "description": "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer2_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer2_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer2_override_filter": {
    "prefix": "fortios_log_fortianalyzer2_override_filter",
    "description": "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer2_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer2_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer2_override_setting": {
    "prefix": "fortios_log_fortianalyzer2_override_setting",
    "description": "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer2_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer2_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer2_setting": {
    "prefix": "fortios_log_fortianalyzer2_setting",
    "description": "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer2_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer2_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer3_filter": {
    "prefix": "fortios_log_fortianalyzer3_filter",
    "description": "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer3_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer3_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer3_override_filter": {
    "prefix": "fortios_log_fortianalyzer3_override_filter",
    "description": "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer3_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer3_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer3_override_setting": {
    "prefix": "fortios_log_fortianalyzer3_override_setting",
    "description": "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer3_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer3_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer3_setting": {
    "prefix": "fortios_log_fortianalyzer3_setting",
    "description": "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer3_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer3_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_cloud_filter": {
    "prefix": "fortios_log_fortianalyzer_cloud_filter",
    "description": "Filters for FortiAnalyzer Cloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_cloud_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_cloud_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_cloud_override_filter": {
    "prefix": "fortios_log_fortianalyzer_cloud_override_filter",
    "description": "Override filters for FortiAnalyzer Cloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_cloud_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_cloud_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_cloud_override_setting": {
    "prefix": "fortios_log_fortianalyzer_cloud_override_setting",
    "description": "Override FortiAnalyzer Cloud settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_cloud_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_cloud_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_cloud_setting": {
    "prefix": "fortios_log_fortianalyzer_cloud_setting",
    "description": "Global FortiAnalyzer Cloud settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_cloud_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_cloud_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_filter": {
    "prefix": "fortios_log_fortianalyzer_filter",
    "description": "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_override_filter": {
    "prefix": "fortios_log_fortianalyzer_override_filter",
    "description": "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_override_setting": {
    "prefix": "fortios_log_fortianalyzer_override_setting",
    "description": "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortianalyzer_setting": {
    "prefix": "fortios_log_fortianalyzer_setting",
    "description": "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortianalyzer_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortianalyzer_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortiguard_filter": {
    "prefix": "fortios_log_fortiguard_filter",
    "description": "Filters for FortiCloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortiguard_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortiguard_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortiguard_override_filter": {
    "prefix": "fortios_log_fortiguard_override_filter",
    "description": "Override filters for FortiCloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortiguard_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortiguard_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortiguard_override_setting": {
    "prefix": "fortios_log_fortiguard_override_setting",
    "description": "Override global FortiCloud logging settings for this VDOM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortiguard_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortiguard_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_fortiguard_setting": {
    "prefix": "fortios_log_fortiguard_setting",
    "description": "Configure logging to FortiCloud in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_fortiguard_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_fortiguard_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_gui_display": {
    "prefix": "fortios_log_gui_display",
    "description": "Configure how log messages are displayed on the GUI in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_gui_display:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_gui_display: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_memory_filter": {
    "prefix": "fortios_log_memory_filter",
    "description": "Filters for memory buffer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_memory_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_memory_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_memory_global_setting": {
    "prefix": "fortios_log_memory_global_setting",
    "description": "Global settings for memory logging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_memory_global_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_memory_global_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_memory_setting": {
    "prefix": "fortios_log_memory_setting",
    "description": "Settings for memory buffer in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_memory_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_memory_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_null_device_filter": {
    "prefix": "fortios_log_null_device_filter",
    "description": "Filters for null device logging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_null_device_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_null_device_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_null_device_setting": {
    "prefix": "fortios_log_null_device_setting",
    "description": "Settings for null device logging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_null_device_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_null_device_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_setting": {
    "prefix": "fortios_log_setting",
    "description": "Configure general log settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd2_filter": {
    "prefix": "fortios_log_syslogd2_filter",
    "description": "Filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd2_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd2_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd2_override_filter": {
    "prefix": "fortios_log_syslogd2_override_filter",
    "description": "Override filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd2_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd2_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd2_override_setting": {
    "prefix": "fortios_log_syslogd2_override_setting",
    "description": "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd2_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd2_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd2_setting": {
    "prefix": "fortios_log_syslogd2_setting",
    "description": "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd2_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd2_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd3_filter": {
    "prefix": "fortios_log_syslogd3_filter",
    "description": "Filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd3_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd3_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd3_override_filter": {
    "prefix": "fortios_log_syslogd3_override_filter",
    "description": "Override filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd3_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd3_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd3_override_setting": {
    "prefix": "fortios_log_syslogd3_override_setting",
    "description": "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd3_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd3_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd3_setting": {
    "prefix": "fortios_log_syslogd3_setting",
    "description": "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd3_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd3_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd4_filter": {
    "prefix": "fortios_log_syslogd4_filter",
    "description": "Filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd4_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd4_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd4_override_filter": {
    "prefix": "fortios_log_syslogd4_override_filter",
    "description": "Override filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd4_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd4_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd4_override_setting": {
    "prefix": "fortios_log_syslogd4_override_setting",
    "description": "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd4_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd4_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd4_setting": {
    "prefix": "fortios_log_syslogd4_setting",
    "description": "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd4_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd4_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd_filter": {
    "prefix": "fortios_log_syslogd_filter",
    "description": "Filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd_override_filter": {
    "prefix": "fortios_log_syslogd_override_filter",
    "description": "Override filters for remote system server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd_override_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd_override_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd_override_setting": {
    "prefix": "fortios_log_syslogd_override_setting",
    "description": "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd_override_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd_override_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_syslogd_setting": {
    "prefix": "fortios_log_syslogd_setting",
    "description": "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_syslogd_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_syslogd_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting2_filter": {
    "prefix": "fortios_log_tacacsplusaccounting2_filter",
    "description": "Settings for TACACS+ accounting events filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting2_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting2_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting2_setting": {
    "prefix": "fortios_log_tacacsplusaccounting2_setting",
    "description": "Settings for TACACS+ accounting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting2_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting2_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting3_filter": {
    "prefix": "fortios_log_tacacsplusaccounting3_filter",
    "description": "Settings for TACACS+ accounting events filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting3_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting3_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting3_setting": {
    "prefix": "fortios_log_tacacsplusaccounting3_setting",
    "description": "Settings for TACACS+ accounting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting3_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting3_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting_filter": {
    "prefix": "fortios_log_tacacsplusaccounting_filter",
    "description": "Settings for TACACS+ accounting events filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_tacacsplusaccounting_setting": {
    "prefix": "fortios_log_tacacsplusaccounting_setting",
    "description": "Settings for TACACS+ accounting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_tacacsplusaccounting_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_tacacsplusaccounting_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_threat_weight": {
    "prefix": "fortios_log_threat_weight",
    "description": "Configure threat weight settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_threat_weight:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_threat_weight: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_webtrends_filter": {
    "prefix": "fortios_log_webtrends_filter",
    "description": "Filters for WebTrends in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_webtrends_filter:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_webtrends_filter: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_log_webtrends_setting": {
    "prefix": "fortios_log_webtrends_setting",
    "description": "Settings for WebTrends in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_log_webtrends_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#log_webtrends_setting: ${3:}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_monitor": {
    "prefix": "fortios_monitor",
    "description": "Ansible Module for FortiOS Monitor API",
    "body": [
      "fortinet.fortios.fortios_monitor:",
      "\tselector: ${1:check.endpoint-control.registration-password|quarantine.endpoint-control.registration|unquarantine.endpoint-control.registration|block.endpoint-control.registration|unblock.endpoint-control.registration|deregister.endpoint-control.registration|clear_counters.firewall.acl|clear_counters.firewall.acl6|reset.firewall.policy|clear_counters.firewall.policy|reset.firewall.policy6|clear_counters.firewall.policy6|clear_counters.firewall.proxy-policy|clear_all.firewall.session|close.firewall.session|reset.firewall.shaper|reset.firewall.per-ip-shaper|cancel.fortiview.session|upgrade.license.database|reset.log.stats|login.registration.forticloud|create.registration.forticloud|logout.registration.forticloud|login.registration.forticare|create.registration.forticare|add-license.registration.forticare|add-license.registration.vdom|toggle-vdom-mode.system.admin|generate-key.system.api-user|update-comments.system.config-revision|delete.system.config-revision|save.system.config-revision|system.disconnect-admins|set.system.time|reboot.system.os|shutdown.system.os|revoke.system.dhcp|revoke.system.dhcp6|upgrade.system.firmware|start.system.fsck|system.change-password|system.password-policy-conform|reset.system.modem|connect.system.modem|disconnect.system.modem|update.system.modem|restart.system.sniffer|start.system.sniffer|stop.system.sniffer|test.system.automation-stitch|update.switch-controller.managed-switch|restart.switch-controller.managed-switch|poe-reset.switch-controller.managed-switch|factory-reset.switch-controller.managed-switch|download.switch-controller.fsw-firmware|push.switch-controller.fsw-firmware|upload.switch-controller.fsw-firmware|dhcp-renew.system.interface|start.system.usb-log|stop.system.usb-log|eject.system.usb-device|update.system.fortiguard|clear-statistics.system.fortiguard|test-availability.system.fortiguard|config.system.fortimanager|backup-action.system.fortimanager|dump.system.com-log|update.system.ha-peer|disconnect.system.ha-peer|run.system.compliance|restore.system.config|upload.system.vmlicense|trigger.system.security-rating|reset.extender-controller.extender|validate-gcp-key.system.sdn-connector|deauth.user.firewall|clear_users.user.banned|add_users.user.banned|clear_all.user.banned|activate.user.fortitoken|refresh.user.fortitoken|provision.user.fortitoken|send-activation.user.fortitoken|import-trial.user.fortitoken|import-mobile.user.fortitoken|import-seed.user.fortitoken|refresh-server.user.fsso|test-connect.user.radius|test.user.tacacs-plus|delete.webfilter.override|reset.webfilter.category-quota|tunnel_up.vpn.ipsec|tunnel_down.vpn.ipsec|tunnel_reset_stats.vpn.ipsec|clear_tunnel.vpn.ssl|delete.vpn.ssl|import.vpn-certificate.ca|import.vpn-certificate.crl|import.vpn-certificate.local|import.vpn-certificate.remote|generate.vpn-certificate.csr|reset.wanopt.history|reset.wanopt.webcache|reset.wanopt.peer_stats|reset.webcache.stats|set_status.wifi.managed_ap|download.wifi.firmware|push.wifi.firmware|upload.wifi.firmware|restart.wifi.managed_ap|reset.wifi.euclid|clear_all.wifi.rogue_ap|set_status.wifi.rogue_ap|reset.firewall.consolidated-policy|clear_counters.firewall.consolidated-policy|clear_counters.firewall.security-policy|add.firewall.clearpass-address|delete.firewall.clearpass-address|delete.log.local-report|migrate.registration.forticloud|change-vdom-mode.system.admin|delete.system.config-script|run.system.config-script|upload.system.config-script|diagnose.extender-controller.extender|upgrade.extender-controller.extender|add.nsx.service|update.system.sdn-connector|import.web-ui.language|create.web-ui.custom-language|update.web-ui.custom-language|email.user.guest|sms.user.guest|utm.rating-lookup|connect.wifi.network|scan.wifi.network|upload.wifi.region-image|refresh.azure.application-list|verify-cert.endpoint-control.ems|geoip.geoip-query|transfer.registration.forticare|register-device.registration.forticloud|register-appliance.system.csf|clear.system.sniffer|webhook.system.automation-stitch|format.system.logdisk|speed-test-trigger.system.interface|read-info.system.certificate|provision-user.vpn.ssl|upload.webproxy.pacfile|disassociate.wifi.client|start.wifi.spectrum|keep-alive.wifi.spectrum|stop.wifi.spectrum|start.wifi.vlan-probe|stop.wifi.vlan-probe|generate-keys.wifi.ssid|save.system.config|led-blink.wifi.managed_ap|auth.user.firewall|remove.user.device|clear.vpn.ike|reset.firewall.multicast-policy|reset.firewall.multicast-policy6|clear_counters.firewall.multicast-policy|clear_counters.firewall.multicast-policy6|clear-soft-in.router.bgp|clear-soft-out.router.bgp|enable-app-bandwidth-tracking.system.traffic-history|refresh.system.external-resource|reset.firewall.central-snat-map|clear-counters.firewall.central-snat-map|reset.firewall.dnat|clear-counters.firewall.dnat|close-multiple.firewall.session|close-multiple.firewall.session6|close-all.firewall.session|clear.system.crash-log|backup.system.config|abort.user.query|create.vpn-certificate.local|flush.firewall.gtp|kill.system.process|upload.system.hscalefw-license|download.system.vmlicense|start.network.debug-flow|stop.network.debug-flow|upload.system.lte-modem|upgrade.system.lte-modem|port-stats-reset.switch-controller.managed-switch|bounce-port.switch-controller.managed-switch|set-tier1.switch-controller.mclag-icl|wake-on-lan.system.interface|manual-update.system.fortiguard|purdue-level.user.device|deregister-device.registration.forticare|soft-reset-neighbor.router.bgp|download-eval.system.vmlicense|dynamic.system.external-resource}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#params: ${4:}",
      "\t#vdom: ${5:root}"
    ]
  },
  "fortios_monitor_fact": {
    "prefix": "fortios_monitor_fact",
    "description": "Retrieve Facts of FortiOS Monitor Objects.",
    "body": [
      "fortinet.fortios.fortios_monitor_fact:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#filters: ${3:}",
      "\t#formatters: ${4:}",
      "\t#params: ${5:}",
      "\t#selector: ${6:endpoint-control_profile_xml|endpoint-control_record-list|endpoint-control_registration_summary|endpoint-control_installer|endpoint-control_installer_download|endpoint-control_avatar_download|firewall_health|firewall_local-in|firewall_acl|firewall_acl6|firewall_internet-service-match|firewall_internet-service-details|firewall_policy|firewall_policy6|firewall_proxy-policy|firewall_policy-lookup|firewall_session|firewall_shaper|firewall_per-ip-shaper|firewall_load-balance|firewall_address-fqdns|firewall_address-fqdns6|firewall_ippool|firewall_address-dynamic|firewall_address6-dynamic|fortiview_statistics|fortiview_sandbox-file-details|geoip_geoip-query|ips_rate-based|license_status|license_forticare-resellers|license_forticare-org-list|log_current-disk-usage|log_device_state|log_forticloud|log_fortianalyzer|log_fortianalyzer-queue|log_hourly-disk-usage|log_historic-daily-remote-logs|log_stats|log_forticloud-report_download|log_ips-archive_download|log_policy-archive_download|log_av-archive_download|log_event|registration_forticloud_disclaimer|registration_forticloud_domains|router_ipv4|router_ipv6|router_statistics|router_lookup|router_policy|router_policy6|system_config-revision|system_config-revision_file|system_config-revision_info|system_current-admins|system_time|system_global-resources|system_vdom-resource|system_dhcp|system_firmware|system_firmware_upgrade-paths|system_storage|system_csf|system_csf_pending-authorizations|system_modem|system_3g-modem|system_resource_usage|system_sniffer|system_sniffer_download|system_automation-stitch_stats|switch-controller_managed-switch|switch-controller_managed-switch_faceplate-xml|switch-controller_managed-switch_dhcp-snooping|switch-controller_fsw-firmware|switch-controller_detected-device|switch-controller_validate-switch-prefix|system_interface|system_interface_dhcp-status|system_available-interfaces|system_acquired-dns|system_resolve-fqdn|system_nat46-ippools|system_usb-log|system_ipconf|system_fortiguard_server-info|system_fortimanager_status|system_fortimanager_backup-summary|system_fortimanager_backup-details|system_available-certificates|system_certificate_download|system_debug_download|system_com-log_update|system_com-log_download|system_botnet_stat|system_botnet|system_botnet-domains|system_botnet-domains_stat|system_botnet-domains_hits|system_ha-statistics|system_ha-history|system_ha-checksums|system_ha-peer|system_link-monitor|system_config_backup|system_config_usb-filelist|system_sandbox_stats|system_sandbox_status|system_sandbox_test-connect|system_object_usage|system_object-tagging_usage|system_status|system_timezone|system_sensor-info|system_security-rating|system_security-rating_history|system_security-rating_status|system_security-rating_lang|system_fortiguard-blacklist|system_check-port-availability|system_external-resource_entry-list|extender-controller_extender|system_sdn-connector_status|user_firewall|user_banned|user_fortitoken|user_detected-device|user_device|user_device-type|user_device-category|user_fsso|utm_rating-lookup|utm_app-lookup|utm_application-categories|utm_antivirus_stats|virtual-wan_health-check|virtual-wan_members|webfilter_override|webfilter_malicious-urls|webfilter_malicious-urls_stat|webfilter_category-quota|webfilter_fortiguard-categories|webfilter_trusted-urls|vpn_ipsec|vpn_one-click_members|vpn_one-click_status|vpn_ssl|vpn_ssl_stats|wanopt_history|wanopt_webcache|wanopt_peer_stats|webproxy_pacfile_download|webcache_stats|wifi_client|wifi_managed_ap|wifi_firmware|wifi_ap_status|wifi_interfering_ap|wifi_euclid|wifi_rogue_ap|wifi_spectrum|endpoint-control_summary|endpoint-control_ems_status|firewall_consolidated-policy|firewall_security-policy|firewall_uuid-list|firewall_uuid-type-lookup|fortiguard_redirect-portal|firewall_sdn-connector-filters|fortiview_sandbox-file-list|ips_metadata|ips_anomaly|license_fortianalyzer-status|log_forticloud-report-list|log_local-report-list|log_local-report_download|network_lldp_neighbors|network_lldp_ports|network_dns_latency|network_fortiguard_live-services-latency|network_ddns_servers|network_ddns_lookup|router_lookup-policy|system_config-script|system_config-sync_status|system_vdom-link|switch-controller_managed-switch_transceivers|system_interface_poe|system_trusted-cert-authorities|system_sandbox_cloud-regions|system_interface_transceivers|system_vm-information|system_security-rating_supported-reports|nsx_service_status|nsx_instance|system_sdn-connector_nsx-security-tags|web-ui_custom-language_download|user_collected-email|user_info_query|user_info_thumbnail|utm_blacklisted-certificates|utm_blacklisted-certificates_statistics|virtual-wan_interface-log|virtual-wan_sla-log|vpn_ocvpn_members|vpn_ocvpn_status|vpn_ocvpn_meta|wifi_network_list|wifi_network_status|wifi_region-image|azure_application-list|endpoint-control_ems_cert-status|endpoint-control_ems_status-summary|fortiguard_service-communication-stats|network_reverse-ip-lookup|registration_forticloud_device-status|switch-controller_managed-switch_health|switch-controller_managed-switch_cable-status|switch-controller_mclag-icl_eligible-peer|system_interface_speed-test-status|user_fortitoken-cloud_status|wifi_vlan-probe|firewall_ippool_mapping|network_arp|system_interface-connected-admins-info|system_ntp_status|system_config-error-log_download|system_running-processes|user_device_query|ips_exceed-scan-range|firewall_multicast-policy|firewall_multicast-policy6|firewall_gtp-statistics|firewall_gtp-runtime-statistics|router_bgp_neighbors|router_bgp_neighbors6|router_bgp_paths|router_bgp_paths6|router_ospf_neighbors|system_automation-action_stats|switch-controller_matched-devices|system_ha-table-checksums|system_sandbox_connection|system_traffic-history_interface|system_traffic-history_top-applications|videofilter_fortiguard-categories|firewall_central-snat-map|firewall_dnat|ips_hold-signatures|router_bgp_paths-statistics|system_lte-modem_status|system_global-search|switch-controller_managed-switch_status|switch-controller_managed-switch_port-stats|switch-controller_managed-switch_models|system_interface_kernel-interfaces|system_config_restore-status|wifi_meta|wifi_ap_channels|wifi_ap-names|firewall_internet-service-reputation|firewall_shaper_multi-class-shaper|log_forticloud_connection|system_performance_status|system_ipam_list|system_ipam_status|system_acme-certificate-status|system_crash-log_download|user_banned_check|user_info_thumbnail-file|vpn-certificate_cert-name-available|wifi_unassociated-devices|wifi_matched-devices|firewall_proxy_sessions|firewall_gtp|fortiview_proxy-statistics|system_ha-hw-interface|user_firewall_count|firewall_internet-service-basic|firewall_vip-overlap|switch-controller_managed-switch_port-health|switch-controller_managed-switch_tx-rx|firewall_network-service-dynamic|system_ipam_utilization|system_ha-nonsync-checksums|wifi_station-capability}",
      "\t#selectors: ${7:}",
      "\t#sorters: ${8:}",
      "\t#vdom: ${9:root}"
    ]
  },
  "fortios_monitoring_np6_ipsec_engine": {
    "prefix": "fortios_monitoring_np6_ipsec_engine",
    "description": "Configure NP6 IPsec engine status monitoring in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_monitoring_np6_ipsec_engine:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#monitoring_np6_ipsec_engine: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_monitoring_npu_hpe": {
    "prefix": "fortios_monitoring_npu_hpe",
    "description": "Configure npu-hpe status monitoring in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_monitoring_npu_hpe:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#monitoring_npu_hpe: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_nsxt_service_chain": {
    "prefix": "fortios_nsxt_service_chain",
    "description": "Configure NSX-T service chain in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_nsxt_service_chain:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#nsxt_service_chain: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_nsxt_setting": {
    "prefix": "fortios_nsxt_setting",
    "description": "Configure NSX-T setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_nsxt_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#nsxt_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_pfcp_message_filter": {
    "prefix": "fortios_pfcp_message_filter",
    "description": "Message filter for PFCP messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_pfcp_message_filter:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#pfcp_message_filter: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_chart": {
    "prefix": "fortios_report_chart",
    "description": "Report chart widget configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_chart:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_chart: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_dataset": {
    "prefix": "fortios_report_dataset",
    "description": "Report dataset configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_dataset:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_dataset: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_layout": {
    "prefix": "fortios_report_layout",
    "description": "Report layout configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_layout:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_layout: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_setting": {
    "prefix": "fortios_report_setting",
    "description": "Report setting configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#report_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_report_style": {
    "prefix": "fortios_report_style",
    "description": "Report style configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_style:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_style: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_report_theme": {
    "prefix": "fortios_report_theme",
    "description": "Report themes configuratio in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_report_theme:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#report_theme: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_access_list": {
    "prefix": "fortios_router_access_list",
    "description": "Configure access lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_access_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_access_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_access_list6": {
    "prefix": "fortios_router_access_list6",
    "description": "Configure IPv6 access lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_access_list6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_access_list6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_aspath_list": {
    "prefix": "fortios_router_aspath_list",
    "description": "Configure Autonomous System (AS) path lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_aspath_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_aspath_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_auth_path": {
    "prefix": "fortios_router_auth_path",
    "description": "Configure authentication based routing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_auth_path:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_auth_path: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_bfd": {
    "prefix": "fortios_router_bfd",
    "description": "Configure BFD in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_bfd:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_bfd: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_bfd6": {
    "prefix": "fortios_router_bfd6",
    "description": "Configure IPv6 BFD in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_bfd6:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_bfd6: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_bgp": {
    "prefix": "fortios_router_bgp",
    "description": "Configure BGP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_bgp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_bgp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_community_list": {
    "prefix": "fortios_router_community_list",
    "description": "Configure community lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_community_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_community_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_isis": {
    "prefix": "fortios_router_isis",
    "description": "Configure IS-IS in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_isis:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_isis: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_key_chain": {
    "prefix": "fortios_router_key_chain",
    "description": "Configure key-chain in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_key_chain:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_key_chain: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_multicast": {
    "prefix": "fortios_router_multicast",
    "description": "Configure router multicast in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_multicast:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_multicast: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_multicast6": {
    "prefix": "fortios_router_multicast6",
    "description": "Configure IPv6 multicast in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_multicast6:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_multicast6: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_multicast_flow": {
    "prefix": "fortios_router_multicast_flow",
    "description": "Configure multicast-flow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_multicast_flow:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_multicast_flow: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_ospf": {
    "prefix": "fortios_router_ospf",
    "description": "Configure OSPF in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_ospf:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_ospf: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_ospf6": {
    "prefix": "fortios_router_ospf6",
    "description": "Configure IPv6 OSPF in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_ospf6:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_ospf6: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_policy": {
    "prefix": "fortios_router_policy",
    "description": "Configure IPv4 routing policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_policy6": {
    "prefix": "fortios_router_policy6",
    "description": "Configure IPv6 routing policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_policy6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_policy6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_prefix_list": {
    "prefix": "fortios_router_prefix_list",
    "description": "Configure IPv4 prefix lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_prefix_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_prefix_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_prefix_list6": {
    "prefix": "fortios_router_prefix_list6",
    "description": "Configure IPv6 prefix lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_prefix_list6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_prefix_list6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_rip": {
    "prefix": "fortios_router_rip",
    "description": "Configure RIP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_rip:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_rip: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_ripng": {
    "prefix": "fortios_router_ripng",
    "description": "Configure RIPng in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_ripng:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_ripng: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_route_map": {
    "prefix": "fortios_router_route_map",
    "description": "Configure route maps in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_route_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_route_map: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_setting": {
    "prefix": "fortios_router_setting",
    "description": "Configure router settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#router_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_router_static": {
    "prefix": "fortios_router_static",
    "description": "Configure IPv4 static routing tables in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_static:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_static: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_router_static6": {
    "prefix": "fortios_router_static6",
    "description": "Configure IPv6 static routing tables in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_router_static6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#router_static6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_sctp_filter_profile": {
    "prefix": "fortios_sctp_filter_profile",
    "description": "Configure SCTP filter profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_sctp_filter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#sctp_filter_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_bwl": {
    "prefix": "fortios_spamfilter_bwl",
    "description": "Configure anti-spam black/white list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_bwl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_bwl: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_bword": {
    "prefix": "fortios_spamfilter_bword",
    "description": "Configure AntiSpam banned word list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_bword:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_bword: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_dnsbl": {
    "prefix": "fortios_spamfilter_dnsbl",
    "description": "Configure AntiSpam DNSBL/ORBL in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_dnsbl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_dnsbl: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_fortishield": {
    "prefix": "fortios_spamfilter_fortishield",
    "description": "Configure FortiGuard - AntiSpam in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_fortishield:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#spamfilter_fortishield: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_spamfilter_iptrust": {
    "prefix": "fortios_spamfilter_iptrust",
    "description": "Configure AntiSpam IP trust in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_iptrust:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_iptrust: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_mheader": {
    "prefix": "fortios_spamfilter_mheader",
    "description": "Configure AntiSpam MIME header in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_mheader:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_mheader: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_spamfilter_options": {
    "prefix": "fortios_spamfilter_options",
    "description": "Configure AntiSpam options in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_options:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#spamfilter_options: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_spamfilter_profile": {
    "prefix": "fortios_spamfilter_profile",
    "description": "Configure AntiSpam profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_spamfilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#spamfilter_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_ssh_filter_profile": {
    "prefix": "fortios_ssh_filter_profile",
    "description": "Configure SSH filter profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_ssh_filter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#ssh_filter_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_802_1x_settings": {
    "prefix": "fortios_switch_controller_802_1x_settings",
    "description": "Configure global 802.1X settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_802_1x_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_802_1x_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_auto_config_custom": {
    "prefix": "fortios_switch_controller_auto_config_custom",
    "description": "Policies which can override the 'default' for specific ISL/ICL/FortiLink interface in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_auto_config_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_auto_config_custom: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_auto_config_default": {
    "prefix": "fortios_switch_controller_auto_config_default",
    "description": "Policies which are applied automatically to all ISL/ICL/FortiLink interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_auto_config_default:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_auto_config_default: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_auto_config_policy": {
    "prefix": "fortios_switch_controller_auto_config_policy",
    "description": "Policy definitions which can define the behavior on auto configured interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_auto_config_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_auto_config_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_custom_command": {
    "prefix": "fortios_switch_controller_custom_command",
    "description": "Configure the FortiGate switch controller to send custom commands to managed FortiSwitch devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_custom_command:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_custom_command: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_dynamic_port_policy": {
    "prefix": "fortios_switch_controller_dynamic_port_policy",
    "description": "Configure Dynamic port policy to be applied on the managed FortiSwitch ports through DPP device in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_dynamic_port_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_dynamic_port_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_flow_tracking": {
    "prefix": "fortios_switch_controller_flow_tracking",
    "description": "Configure FortiSwitch flow tracking and export via ipfix/netflow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_flow_tracking:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_flow_tracking: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_fortilink_settings": {
    "prefix": "fortios_switch_controller_fortilink_settings",
    "description": "Configure integrated FortiLink settings for FortiSwitch in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_fortilink_settings:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_fortilink_settings: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_global": {
    "prefix": "fortios_switch_controller_global",
    "description": "Configure FortiSwitch global settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_global: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_igmp_snooping": {
    "prefix": "fortios_switch_controller_igmp_snooping",
    "description": "Configure FortiSwitch IGMP snooping global settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_igmp_snooping:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_igmp_snooping: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_initial_config_template": {
    "prefix": "fortios_switch_controller_initial_config_template",
    "description": "Configure template for auto-generated VLANs in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_initial_config_template:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_initial_config_template: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_initial_config_vlans": {
    "prefix": "fortios_switch_controller_initial_config_vlans",
    "description": "Configure initial template for auto-generated VLAN interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_initial_config_vlans:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_initial_config_vlans: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_lldp_profile": {
    "prefix": "fortios_switch_controller_lldp_profile",
    "description": "Configure FortiSwitch LLDP profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_lldp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_lldp_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_lldp_settings": {
    "prefix": "fortios_switch_controller_lldp_settings",
    "description": "Configure FortiSwitch LLDP settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_lldp_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_lldp_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_location": {
    "prefix": "fortios_switch_controller_location",
    "description": "Configure FortiSwitch location services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_location:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_location: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_mac_policy": {
    "prefix": "fortios_switch_controller_mac_policy",
    "description": "Configure MAC policy to be applied on the managed FortiSwitch devices through NAC device in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_mac_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_mac_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_mac_sync_settings": {
    "prefix": "fortios_switch_controller_mac_sync_settings",
    "description": "Configure global MAC synchronization settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_mac_sync_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_mac_sync_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_managed_switch": {
    "prefix": "fortios_switch_controller_managed_switch",
    "description": "Configure FortiSwitch devices that are managed by this FortiGate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_managed_switch:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_managed_switch: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_nac_device": {
    "prefix": "fortios_switch_controller_nac_device",
    "description": "Configure/list NAC devices learned on the managed FortiSwitch ports which matches NAC policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_nac_device:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_nac_device: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_nac_settings": {
    "prefix": "fortios_switch_controller_nac_settings",
    "description": "Configure integrated NAC settings for FortiSwitch in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_nac_settings:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_nac_settings: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_network_monitor_settings": {
    "prefix": "fortios_switch_controller_network_monitor_settings",
    "description": "Configure network monitor settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_network_monitor_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_network_monitor_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_poe": {
    "prefix": "fortios_switch_controller_poe",
    "description": "List PoE end-points status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_poe:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_poe: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_port_policy": {
    "prefix": "fortios_switch_controller_port_policy",
    "description": "Configure port policy to be applied on the managed FortiSwitch ports through NAC device in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_port_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_port_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_ptp_policy": {
    "prefix": "fortios_switch_controller_ptp_policy",
    "description": "PTP policy configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_ptp_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_ptp_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_ptp_settings": {
    "prefix": "fortios_switch_controller_ptp_settings",
    "description": "Global PTP settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_ptp_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_ptp_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_qos_dot1p_map": {
    "prefix": "fortios_switch_controller_qos_dot1p_map",
    "description": "Configure FortiSwitch QoS 802.1p in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_qos_dot1p_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_qos_dot1p_map: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_qos_ip_dscp_map": {
    "prefix": "fortios_switch_controller_qos_ip_dscp_map",
    "description": "Configure FortiSwitch QoS IP precedence/DSCP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_qos_ip_dscp_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_qos_ip_dscp_map: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_qos_qos_policy": {
    "prefix": "fortios_switch_controller_qos_qos_policy",
    "description": "Configure FortiSwitch QoS policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_qos_qos_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_qos_qos_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_qos_queue_policy": {
    "prefix": "fortios_switch_controller_qos_queue_policy",
    "description": "Configure FortiSwitch QoS egress queue policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_qos_queue_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_qos_queue_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_quarantine": {
    "prefix": "fortios_switch_controller_quarantine",
    "description": "Configure FortiSwitch quarantine support in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_quarantine:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_quarantine: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_remote_log": {
    "prefix": "fortios_switch_controller_remote_log",
    "description": "Configure logging by FortiSwitch device to a remote syslog server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_remote_log:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_remote_log: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_security_policy_802_1x": {
    "prefix": "fortios_switch_controller_security_policy_802_1x",
    "description": "Configure 802.1x MAC Authentication Bypass (MAB) policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_security_policy_802_1x:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_security_policy_802_1x: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_security_policy_captive_portal": {
    "prefix": "fortios_switch_controller_security_policy_captive_portal",
    "description": "Names of VLANs that use captive portal authentication in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_security_policy_captive_portal:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_security_policy_captive_portal: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_security_policy_local_access": {
    "prefix": "fortios_switch_controller_security_policy_local_access",
    "description": "Configure allowaccess list for mgmt and internal interfaces on managed FortiSwitch units in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_security_policy_local_access:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_security_policy_local_access: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_sflow": {
    "prefix": "fortios_switch_controller_sflow",
    "description": "Configure FortiSwitch sFlow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_sflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_sflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_snmp_community": {
    "prefix": "fortios_switch_controller_snmp_community",
    "description": "Configure FortiSwitch SNMP v1/v2c communities globally in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_snmp_community:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_snmp_community: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_snmp_sysinfo": {
    "prefix": "fortios_switch_controller_snmp_sysinfo",
    "description": "Configure FortiSwitch SNMP system information globally in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_snmp_sysinfo:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_snmp_sysinfo: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_snmp_trap_threshold": {
    "prefix": "fortios_switch_controller_snmp_trap_threshold",
    "description": "Configure FortiSwitch SNMP trap threshold values globally in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_snmp_trap_threshold:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_snmp_trap_threshold: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_snmp_user": {
    "prefix": "fortios_switch_controller_snmp_user",
    "description": "Configure FortiSwitch SNMP v3 users globally in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_snmp_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_snmp_user: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_storm_control": {
    "prefix": "fortios_switch_controller_storm_control",
    "description": "Configure FortiSwitch storm control in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_storm_control:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_storm_control: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_storm_control_policy": {
    "prefix": "fortios_switch_controller_storm_control_policy",
    "description": "Configure FortiSwitch storm control policy to be applied on managed-switch ports in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_storm_control_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_storm_control_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_stp_instance": {
    "prefix": "fortios_switch_controller_stp_instance",
    "description": "Configure FortiSwitch multiple spanning tree protocol (MSTP) instances in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_stp_instance:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_stp_instance: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_stp_settings": {
    "prefix": "fortios_switch_controller_stp_settings",
    "description": "Configure FortiSwitch spanning tree protocol (STP) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_stp_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_stp_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_switch_group": {
    "prefix": "fortios_switch_controller_switch_group",
    "description": "Configure FortiSwitch switch groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_switch_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_switch_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_switch_interface_tag": {
    "prefix": "fortios_switch_controller_switch_interface_tag",
    "description": "Configure switch object tags in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_switch_interface_tag:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_switch_interface_tag: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_switch_log": {
    "prefix": "fortios_switch_controller_switch_log",
    "description": "Configure FortiSwitch logging (logs are transferred to and inserted into FortiGate event log) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_switch_log:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_switch_log: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_switch_profile": {
    "prefix": "fortios_switch_controller_switch_profile",
    "description": "Configure FortiSwitch switch profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_switch_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_switch_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_system": {
    "prefix": "fortios_switch_controller_system",
    "description": "Configure system-wide switch controller settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_system:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_system: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_traffic_policy": {
    "prefix": "fortios_switch_controller_traffic_policy",
    "description": "Configure FortiSwitch traffic policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_traffic_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_traffic_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_traffic_sniffer": {
    "prefix": "fortios_switch_controller_traffic_sniffer",
    "description": "Configure FortiSwitch RSPAN/ERSPAN traffic sniffing parameters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_traffic_sniffer:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#switch_controller_traffic_sniffer: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_switch_controller_virtual_port_pool": {
    "prefix": "fortios_switch_controller_virtual_port_pool",
    "description": "Configure virtual pool in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_virtual_port_pool:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_virtual_port_pool: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_vlan": {
    "prefix": "fortios_switch_controller_vlan",
    "description": "Configure VLANs for switch controller in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_vlan:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_vlan: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_switch_controller_vlan_policy": {
    "prefix": "fortios_switch_controller_vlan_policy",
    "description": "Configure VLAN policy to be applied on the managed FortiSwitch ports through dynamic-port-policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_switch_controller_vlan_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#switch_controller_vlan_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_3g_modem_custom": {
    "prefix": "fortios_system_3g_modem_custom",
    "description": "3G MODEM custom in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_3g_modem_custom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_3g_modem_custom: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_accprofile": {
    "prefix": "fortios_system_accprofile",
    "description": "Configure access profiles for system administrators in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_accprofile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_accprofile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_acme": {
    "prefix": "fortios_system_acme",
    "description": "Configure ACME client in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_acme:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_acme: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_admin": {
    "prefix": "fortios_system_admin",
    "description": "Configure admin users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_affinity_interrupt": {
    "prefix": "fortios_system_affinity_interrupt",
    "description": "Configure interrupt affinity in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_affinity_interrupt:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_affinity_interrupt: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_affinity_packet_redistribution": {
    "prefix": "fortios_system_affinity_packet_redistribution",
    "description": "Configure packet redistribution in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_affinity_packet_redistribution:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_affinity_packet_redistribution: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_alarm": {
    "prefix": "fortios_system_alarm",
    "description": "Configure alarm in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_alarm:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_alarm: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_alias": {
    "prefix": "fortios_system_alias",
    "description": "Configure alias command in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_alias:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_alias: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_api_user": {
    "prefix": "fortios_system_api_user",
    "description": "Configure API users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_api_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_api_user: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_arp_table": {
    "prefix": "fortios_system_arp_table",
    "description": "Configure ARP table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_arp_table:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_arp_table: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_auto_install": {
    "prefix": "fortios_system_auto_install",
    "description": "Configure USB auto installation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_auto_install:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_auto_install: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_auto_script": {
    "prefix": "fortios_system_auto_script",
    "description": "Configure auto script in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_auto_script:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_auto_script: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_automation_action": {
    "prefix": "fortios_system_automation_action",
    "description": "Action for automation stitches in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_automation_action:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_automation_action: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_automation_destination": {
    "prefix": "fortios_system_automation_destination",
    "description": "Automation destinations in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_automation_destination:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_automation_destination: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_automation_stitch": {
    "prefix": "fortios_system_automation_stitch",
    "description": "Automation stitches in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_automation_stitch:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_automation_stitch: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_automation_trigger": {
    "prefix": "fortios_system_automation_trigger",
    "description": "Trigger for automation stitches in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_automation_trigger:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_automation_trigger: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_autoupdate_push_update": {
    "prefix": "fortios_system_autoupdate_push_update",
    "description": "Configure push updates in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_autoupdate_push_update:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_autoupdate_push_update: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_autoupdate_schedule": {
    "prefix": "fortios_system_autoupdate_schedule",
    "description": "Configure update schedule in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_autoupdate_schedule:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_autoupdate_schedule: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_autoupdate_tunneling": {
    "prefix": "fortios_system_autoupdate_tunneling",
    "description": "Configure web proxy tunneling for the FDN in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_autoupdate_tunneling:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_autoupdate_tunneling: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_central_management": {
    "prefix": "fortios_system_central_management",
    "description": "Configure central management in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_central_management:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_central_management: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_cluster_sync": {
    "prefix": "fortios_system_cluster_sync",
    "description": "Configure FortiGate Session Life Support Protocol (FGSP) session synchronization in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_cluster_sync:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_cluster_sync: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_console": {
    "prefix": "fortios_system_console",
    "description": "Configure console in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_console:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_console: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_csf": {
    "prefix": "fortios_system_csf",
    "description": "Add this FortiGate to a Security Fabric or set up a new Security Fabric on this FortiGate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_csf:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_csf: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_custom_language": {
    "prefix": "fortios_system_custom_language",
    "description": "Configure custom languages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_custom_language:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_custom_language: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ddns": {
    "prefix": "fortios_system_ddns",
    "description": "Configure DDNS in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ddns:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ddns: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dedicated_mgmt": {
    "prefix": "fortios_system_dedicated_mgmt",
    "description": "Configure dedicated management in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dedicated_mgmt:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_dedicated_mgmt: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_dhcp6_server": {
    "prefix": "fortios_system_dhcp6_server",
    "description": "Configure DHCPv6 servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dhcp6_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dhcp6_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dhcp_server": {
    "prefix": "fortios_system_dhcp_server",
    "description": "Configure DHCP servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dhcp_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dhcp_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dns": {
    "prefix": "fortios_system_dns",
    "description": "Configure DNS in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dns:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_dns: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_dns64": {
    "prefix": "fortios_system_dns64",
    "description": "Configure DNS64 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dns64:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_dns64: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_dns_database": {
    "prefix": "fortios_system_dns_database",
    "description": "Configure DNS databases in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dns_database:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dns_database: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dns_server": {
    "prefix": "fortios_system_dns_server",
    "description": "Configure DNS servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dns_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dns_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_dscp_based_priority": {
    "prefix": "fortios_system_dscp_based_priority",
    "description": "Configure DSCP based priority table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_dscp_based_priority:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_dscp_based_priority: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_email_server": {
    "prefix": "fortios_system_email_server",
    "description": "Configure the email server used by the FortiGate various things. For example, for sending email messages to users to support user authentication features in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_email_server:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_email_server: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_external_resource": {
    "prefix": "fortios_system_external_resource",
    "description": "Configure external resource in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_external_resource:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_external_resource: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_federated_upgrade": {
    "prefix": "fortios_system_federated_upgrade",
    "description": "Coordinate federated upgrades within the Security Fabric in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_federated_upgrade:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_federated_upgrade: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fips_cc": {
    "prefix": "fortios_system_fips_cc",
    "description": "Configure FIPS-CC mode in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fips_cc:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fips_cc: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fm": {
    "prefix": "fortios_system_fm",
    "description": "Configure FM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fm:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fm: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortiai": {
    "prefix": "fortios_system_fortiai",
    "description": "Configure FortiAI in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortiai:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortiai: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortiguard": {
    "prefix": "fortios_system_fortiguard",
    "description": "Configure FortiGuard services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortiguard:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortiguard: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortimanager": {
    "prefix": "fortios_system_fortimanager",
    "description": "Configure FortiManager in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortimanager:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortimanager: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortindr": {
    "prefix": "fortios_system_fortindr",
    "description": "Configure FortiNDR in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortindr:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortindr: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fortisandbox": {
    "prefix": "fortios_system_fortisandbox",
    "description": "Configure FortiSandbox in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fortisandbox:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fortisandbox: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_fsso_polling": {
    "prefix": "fortios_system_fsso_polling",
    "description": "Configure Fortinet Single Sign On (FSSO) server in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_fsso_polling:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_fsso_polling: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ftm_push": {
    "prefix": "fortios_system_ftm_push",
    "description": "Configure FortiToken Mobile push services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ftm_push:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ftm_push: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_geneve": {
    "prefix": "fortios_system_geneve",
    "description": "Configure GENEVE devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_geneve:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_geneve: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_geoip_country": {
    "prefix": "fortios_system_geoip_country",
    "description": "Define geoip country name-ID table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_geoip_country:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_geoip_country: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_geoip_override": {
    "prefix": "fortios_system_geoip_override",
    "description": "Configure geographical location mapping for IP address(es) to override mappings from FortiGuard in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_geoip_override:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_geoip_override: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_gi_gk": {
    "prefix": "fortios_system_gi_gk",
    "description": "Configure Gi Firewall Gatekeeper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_gi_gk:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_gi_gk: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_global": {
    "prefix": "fortios_system_global",
    "description": "Configure global attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_global: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_gre_tunnel": {
    "prefix": "fortios_system_gre_tunnel",
    "description": "Configure GRE tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_gre_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_gre_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ha": {
    "prefix": "fortios_system_ha",
    "description": "Configure HA in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ha:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ha: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ha_monitor": {
    "prefix": "fortios_system_ha_monitor",
    "description": "Configure HA monitor in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ha_monitor:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ha_monitor: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ike": {
    "prefix": "fortios_system_ike",
    "description": "Configure IKE global attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ike:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ike: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_interface": {
    "prefix": "fortios_system_interface",
    "description": "Configure interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_interface: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ipam": {
    "prefix": "fortios_system_ipam",
    "description": "Configure IP address management services in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipam:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ipam: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ipip_tunnel": {
    "prefix": "fortios_system_ipip_tunnel",
    "description": "Configure IP in IP Tunneling in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipip_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ipip_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ips": {
    "prefix": "fortios_system_ips",
    "description": "Configure IPS system settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ips:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ips: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ips_urlfilter_dns": {
    "prefix": "fortios_system_ips_urlfilter_dns",
    "description": "Configure IPS URL filter DNS servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ips_urlfilter_dns:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ips_urlfilter_dns: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ips_urlfilter_dns6": {
    "prefix": "fortios_system_ips_urlfilter_dns6",
    "description": "Configure IPS URL filter IPv6 DNS servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ips_urlfilter_dns6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ips_urlfilter_dns6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ipsec_aggregate": {
    "prefix": "fortios_system_ipsec_aggregate",
    "description": "Configure an aggregate of IPsec tunnels in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipsec_aggregate:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ipsec_aggregate: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ipv6_neighbor_cache": {
    "prefix": "fortios_system_ipv6_neighbor_cache",
    "description": "Configure IPv6 neighbor cache table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipv6_neighbor_cache:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ipv6_neighbor_cache: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ipv6_tunnel": {
    "prefix": "fortios_system_ipv6_tunnel",
    "description": "Configure IPv6/IPv4 in IPv6 tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ipv6_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_ipv6_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_isf_queue_profile": {
    "prefix": "fortios_system_isf_queue_profile",
    "description": "Create a queue profile of switch in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_isf_queue_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_isf_queue_profile: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_link_monitor": {
    "prefix": "fortios_system_link_monitor",
    "description": "Configure Link Health Monitor in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_link_monitor:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_link_monitor: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_lldp_network_policy": {
    "prefix": "fortios_system_lldp_network_policy",
    "description": "Configure LLDP network policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_lldp_network_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_lldp_network_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_lte_modem": {
    "prefix": "fortios_system_lte_modem",
    "description": "Configure USB LTE/WIMAX devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_lte_modem:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_lte_modem: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_mac_address_table": {
    "prefix": "fortios_system_mac_address_table",
    "description": "Configure MAC address tables in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_mac_address_table:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_mac_address_table: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_management_tunnel": {
    "prefix": "fortios_system_management_tunnel",
    "description": "Management tunnel configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_management_tunnel:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_management_tunnel: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_mem_mgr": {
    "prefix": "fortios_system_mem_mgr",
    "description": "Configure memory manager in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_mem_mgr:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_mem_mgr: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_mobile_tunnel": {
    "prefix": "fortios_system_mobile_tunnel",
    "description": "Configure Mobile tunnels, an implementation of Network Mobility (NEMO) extensions for Mobile IPv4 RFC5177 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_mobile_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_mobile_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_modem": {
    "prefix": "fortios_system_modem",
    "description": "Configure MODEM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_modem:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_modem: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_nat64": {
    "prefix": "fortios_system_nat64",
    "description": "Configure NAT64 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_nat64:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_nat64: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_nd_proxy": {
    "prefix": "fortios_system_nd_proxy",
    "description": "Configure IPv6 neighbor discovery proxy (RFC4389) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_nd_proxy:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_nd_proxy: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_netflow": {
    "prefix": "fortios_system_netflow",
    "description": "Configure NetFlow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_netflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_netflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_network_visibility": {
    "prefix": "fortios_system_network_visibility",
    "description": "Configure network visibility settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_network_visibility:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_network_visibility: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_np6": {
    "prefix": "fortios_system_np6",
    "description": "Configure NP6 attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_np6:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_np6: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_npu": {
    "prefix": "fortios_system_npu",
    "description": "Configure NPU attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_npu:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_npu: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_ntp": {
    "prefix": "fortios_system_ntp",
    "description": "Configure system NTP information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ntp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ntp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_object_tagging": {
    "prefix": "fortios_system_object_tagging",
    "description": "Configure object tagging in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_object_tagging:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_object_tagging: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_password_policy": {
    "prefix": "fortios_system_password_policy",
    "description": "Configure password policy for locally defined administrator passwords and IPsec VPN pre-shared keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_password_policy:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_password_policy: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_password_policy_guest_admin": {
    "prefix": "fortios_system_password_policy_guest_admin",
    "description": "Configure the password policy for guest administrators in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_password_policy_guest_admin:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_password_policy_guest_admin: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_performance_top": {
    "prefix": "fortios_system_performance_top",
    "description": "Display information about the top CPU processes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_performance_top:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_performance_top: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_physical_switch": {
    "prefix": "fortios_system_physical_switch",
    "description": "Configure physical switches in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_physical_switch:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_physical_switch: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_pppoe_interface": {
    "prefix": "fortios_system_pppoe_interface",
    "description": "Configure the PPPoE interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_pppoe_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_pppoe_interface: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_probe_response": {
    "prefix": "fortios_system_probe_response",
    "description": "Configure system probe response in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_probe_response:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_probe_response: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_proxy_arp": {
    "prefix": "fortios_system_proxy_arp",
    "description": "Configure proxy-ARP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_proxy_arp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_proxy_arp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_ptp": {
    "prefix": "fortios_system_ptp",
    "description": "Configure system PTP information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_ptp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_ptp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_replacemsg_admin": {
    "prefix": "fortios_system_replacemsg_admin",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_alertmail": {
    "prefix": "fortios_system_replacemsg_alertmail",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_alertmail:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_alertmail: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_auth": {
    "prefix": "fortios_system_replacemsg_auth",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_auth:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_auth: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_automation": {
    "prefix": "fortios_system_replacemsg_automation",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_automation:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_automation: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_device_detection_portal": {
    "prefix": "fortios_system_replacemsg_device_detection_portal",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_device_detection_portal:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_device_detection_portal: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_ec": {
    "prefix": "fortios_system_replacemsg_ec",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_ec:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_ec: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_fortiguard_wf": {
    "prefix": "fortios_system_replacemsg_fortiguard_wf",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_fortiguard_wf:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_fortiguard_wf: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_ftp": {
    "prefix": "fortios_system_replacemsg_ftp",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_ftp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_ftp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_group": {
    "prefix": "fortios_system_replacemsg_group",
    "description": "Configure replacement message groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_http": {
    "prefix": "fortios_system_replacemsg_http",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_http:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_http: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_icap": {
    "prefix": "fortios_system_replacemsg_icap",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_icap:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_icap: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_image": {
    "prefix": "fortios_system_replacemsg_image",
    "description": "Configure replacement message images in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_image:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_image: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mail": {
    "prefix": "fortios_system_replacemsg_mail",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mail:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mail: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mm1": {
    "prefix": "fortios_system_replacemsg_mm1",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mm1:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mm1: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mm3": {
    "prefix": "fortios_system_replacemsg_mm3",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mm3:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mm3: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mm4": {
    "prefix": "fortios_system_replacemsg_mm4",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mm4:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mm4: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mm7": {
    "prefix": "fortios_system_replacemsg_mm7",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mm7:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mm7: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_mms": {
    "prefix": "fortios_system_replacemsg_mms",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_mms:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_mms: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_nac_quar": {
    "prefix": "fortios_system_replacemsg_nac_quar",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_nac_quar:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_nac_quar: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_nntp": {
    "prefix": "fortios_system_replacemsg_nntp",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_nntp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_nntp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_spam": {
    "prefix": "fortios_system_replacemsg_spam",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_spam:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_spam: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_sslvpn": {
    "prefix": "fortios_system_replacemsg_sslvpn",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_sslvpn:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_sslvpn: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_traffic_quota": {
    "prefix": "fortios_system_replacemsg_traffic_quota",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_traffic_quota:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_traffic_quota: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_utm": {
    "prefix": "fortios_system_replacemsg_utm",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_utm:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_utm: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_replacemsg_webproxy": {
    "prefix": "fortios_system_replacemsg_webproxy",
    "description": "Replacement messages in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_replacemsg_webproxy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_replacemsg_webproxy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_resource_limits": {
    "prefix": "fortios_system_resource_limits",
    "description": "Configure resource limits in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_resource_limits:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_resource_limits: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_saml": {
    "prefix": "fortios_system_saml",
    "description": "Global settings for SAML authentication in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_saml:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_saml: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sdn_connector": {
    "prefix": "fortios_system_sdn_connector",
    "description": "Configure connection to SDN Connector in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sdn_connector:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sdn_connector: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_sdwan": {
    "prefix": "fortios_system_sdwan",
    "description": "Configure redundant Internet connections with multiple outbound links and health-check profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sdwan:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_sdwan: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_session_helper": {
    "prefix": "fortios_system_session_helper",
    "description": "Configure session helper in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_session_helper:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_session_helper: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_session_ttl": {
    "prefix": "fortios_system_session_ttl",
    "description": "Configure global session TTL timers for this FortiGate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_session_ttl:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_session_ttl: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_settings": {
    "prefix": "fortios_system_settings",
    "description": "Configure VDOM settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_settings: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sflow": {
    "prefix": "fortios_system_sflow",
    "description": "Configure sFlow in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_sflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sit_tunnel": {
    "prefix": "fortios_system_sit_tunnel",
    "description": "Configure IPv6 tunnel over IPv4 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sit_tunnel:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sit_tunnel: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_smc_ntp": {
    "prefix": "fortios_system_smc_ntp",
    "description": "Configure SMC NTP information in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_smc_ntp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_smc_ntp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_sms_server": {
    "prefix": "fortios_system_sms_server",
    "description": "Configure SMS server for sending SMS messages to support user authentication in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sms_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sms_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_snmp_community": {
    "prefix": "fortios_system_snmp_community",
    "description": "SNMP community configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_snmp_community:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_snmp_community: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_snmp_mib_view": {
    "prefix": "fortios_system_snmp_mib_view",
    "description": "SNMP Access Control MIB View configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_snmp_mib_view:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_snmp_mib_view: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_snmp_sysinfo": {
    "prefix": "fortios_system_snmp_sysinfo",
    "description": "SNMP system info configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_snmp_sysinfo:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_snmp_sysinfo: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_snmp_user": {
    "prefix": "fortios_system_snmp_user",
    "description": "SNMP user configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_snmp_user:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_snmp_user: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_speed_test_schedule": {
    "prefix": "fortios_system_speed_test_schedule",
    "description": "Speed test schedule for each interface in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_speed_test_schedule:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_speed_test_schedule: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_speed_test_server": {
    "prefix": "fortios_system_speed_test_server",
    "description": "Configure speed test server list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_speed_test_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_speed_test_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_sso_admin": {
    "prefix": "fortios_system_sso_admin",
    "description": "Configure SSO admin users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sso_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sso_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_sso_forticloud_admin": {
    "prefix": "fortios_system_sso_forticloud_admin",
    "description": "Configure FortiCloud SSO admin users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_sso_forticloud_admin:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_sso_forticloud_admin: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_standalone_cluster": {
    "prefix": "fortios_system_standalone_cluster",
    "description": "Configure FortiGate Session Life Support Protocol (FGSP) cluster attributes in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_standalone_cluster:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_standalone_cluster: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_storage": {
    "prefix": "fortios_system_storage",
    "description": "Configure logical storage in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_storage:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_storage: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_stp": {
    "prefix": "fortios_system_stp",
    "description": "Configure Spanning Tree Protocol (STP) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_stp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_stp: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_switch_interface": {
    "prefix": "fortios_system_switch_interface",
    "description": "Configure software switch interfaces by grouping physical and WiFi interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_switch_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_switch_interface: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_tos_based_priority": {
    "prefix": "fortios_system_tos_based_priority",
    "description": "Configure Type of Service (ToS) based priority table to set network traffic priorities in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_tos_based_priority:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_tos_based_priority: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom": {
    "prefix": "fortios_system_vdom",
    "description": "Configure virtual domain in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_dns": {
    "prefix": "fortios_system_vdom_dns",
    "description": "Configure DNS servers for a non-management VDOM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_dns:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_vdom_dns: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_vdom_exception": {
    "prefix": "fortios_system_vdom_exception",
    "description": "Global configuration objects that can be configured independently across different ha peers for all VDOMs or for the defined VDOM scope in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_exception:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom_exception: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_link": {
    "prefix": "fortios_system_vdom_link",
    "description": "Configure VDOM links in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_link:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom_link: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_netflow": {
    "prefix": "fortios_system_vdom_netflow",
    "description": "Configure NetFlow per VDOM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_netflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_vdom_netflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_vdom_property": {
    "prefix": "fortios_system_vdom_property",
    "description": "Configure VDOM property in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_property:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom_property: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_radius_server": {
    "prefix": "fortios_system_vdom_radius_server",
    "description": "Configure a RADIUS server to use as a RADIUS Single Sign On (RSSO) server for this VDOM in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_radius_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vdom_radius_server: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vdom_sflow": {
    "prefix": "fortios_system_vdom_sflow",
    "description": "Configure sFlow per VDOM to add or change the IP address and UDP port that FortiGate sFlow agents in this VDOM use to send sFlow datagrams to an sFlow collector in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vdom_sflow:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_vdom_sflow: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_virtual_switch": {
    "prefix": "fortios_system_virtual_switch",
    "description": "Configure virtual hardware switch interfaces in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_virtual_switch:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_virtual_switch: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_virtual_wan_link": {
    "prefix": "fortios_system_virtual_wan_link",
    "description": "Configure redundant internet connections using SD-WAN (formerly virtual WAN link) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_virtual_wan_link:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_virtual_wan_link: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_virtual_wire_pair": {
    "prefix": "fortios_system_virtual_wire_pair",
    "description": "Configure virtual wire pairs in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_virtual_wire_pair:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_virtual_wire_pair: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_vne_tunnel": {
    "prefix": "fortios_system_vne_tunnel",
    "description": "Configure virtual network enabler tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vne_tunnel:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#system_vne_tunnel: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_system_vxlan": {
    "prefix": "fortios_system_vxlan",
    "description": "Configure VXLAN devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_vxlan:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_vxlan: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_wccp": {
    "prefix": "fortios_system_wccp",
    "description": "Configure WCCP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_wccp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_wccp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_system_zone": {
    "prefix": "fortios_system_zone",
    "description": "Configure zones to group two or more interfaces. When a zone is created you can configure policies for the zone instead of individual interfaces in the zone in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_system_zone:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#system_zone: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_adgrp": {
    "prefix": "fortios_user_adgrp",
    "description": "Configure FSSO groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_adgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_adgrp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_certificate": {
    "prefix": "fortios_user_certificate",
    "description": "Configure certificate users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_certificate:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_certificate: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_device": {
    "prefix": "fortios_user_device",
    "description": "Configure devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_device:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_device: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_device_access_list": {
    "prefix": "fortios_user_device_access_list",
    "description": "Configure device access control lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_device_access_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_device_access_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_device_category": {
    "prefix": "fortios_user_device_category",
    "description": "Configure device categories in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_device_category:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_device_category: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_device_group": {
    "prefix": "fortios_user_device_group",
    "description": "Configure device groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_device_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_device_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_domain_controller": {
    "prefix": "fortios_user_domain_controller",
    "description": "Configure domain controller entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_domain_controller:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_domain_controller: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_exchange": {
    "prefix": "fortios_user_exchange",
    "description": "Configure MS Exchange server entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_exchange:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_exchange: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_fortitoken": {
    "prefix": "fortios_user_fortitoken",
    "description": "Configure FortiToken in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_fortitoken:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_fortitoken: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_fsso": {
    "prefix": "fortios_user_fsso",
    "description": "Configure Fortinet Single Sign On (FSSO) agents in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_fsso:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_fsso: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_fsso_polling": {
    "prefix": "fortios_user_fsso_polling",
    "description": "Configure FSSO active directory servers for polling mode in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_fsso_polling:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_fsso_polling: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_group": {
    "prefix": "fortios_user_group",
    "description": "Configure user groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_group: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_krb_keytab": {
    "prefix": "fortios_user_krb_keytab",
    "description": "Configure Kerberos keytab entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_krb_keytab:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_krb_keytab: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_ldap": {
    "prefix": "fortios_user_ldap",
    "description": "Configure LDAP server entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_ldap:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_ldap: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_local": {
    "prefix": "fortios_user_local",
    "description": "Configure local users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_local:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_local: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_nac_policy": {
    "prefix": "fortios_user_nac_policy",
    "description": "Configure NAC policy matching pattern to identify matching NAC devices in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_nac_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_nac_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_password_policy": {
    "prefix": "fortios_user_password_policy",
    "description": "Configure user password policy in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_password_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_password_policy: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_peer": {
    "prefix": "fortios_user_peer",
    "description": "Configure peer users in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_peer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_peer: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_peergrp": {
    "prefix": "fortios_user_peergrp",
    "description": "Configure peer groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_peergrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_peergrp: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_pop3": {
    "prefix": "fortios_user_pop3",
    "description": "POP3 server entry configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_pop3:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_pop3: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_quarantine": {
    "prefix": "fortios_user_quarantine",
    "description": "Configure quarantine support in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_quarantine:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#user_quarantine: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_user_radius": {
    "prefix": "fortios_user_radius",
    "description": "Configure RADIUS server entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_radius:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_radius: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_saml": {
    "prefix": "fortios_user_saml",
    "description": "SAML server entry configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_saml:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_saml: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_security_exempt_list": {
    "prefix": "fortios_user_security_exempt_list",
    "description": "Configure security exemption list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_security_exempt_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_security_exempt_list: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_user_setting": {
    "prefix": "fortios_user_setting",
    "description": "Configure user authentication setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#user_setting: ${5:}",
      "\t#vdom: ${6:root}"
    ]
  },
  "fortios_user_tacacsplus": {
    "prefix": "fortios_user_tacacsplus",
    "description": "Configure TACACS+ server entries in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_user_tacacsplus:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#user_tacacsplus: ${6:}",
      "\t#vdom: ${7:root}"
    ]
  },
  "fortios_videofilter_profile": {
    "prefix": "fortios_videofilter_profile",
    "description": "Configure VideoFilter profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_videofilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#videofilter_profile: ${7:}"
    ]
  },
  "fortios_videofilter_youtube_channel_filter": {
    "prefix": "fortios_videofilter_youtube_channel_filter",
    "description": "Configure YouTube channel filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_videofilter_youtube_channel_filter:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#videofilter_youtube_channel_filter: ${7:}"
    ]
  },
  "fortios_videofilter_youtube_key": {
    "prefix": "fortios_videofilter_youtube_key",
    "description": "Configure YouTube API keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_videofilter_youtube_key:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#videofilter_youtube_key: ${7:}"
    ]
  },
  "fortios_voip_profile": {
    "prefix": "fortios_voip_profile",
    "description": "Configure VoIP profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_voip_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#voip_profile: ${7:}"
    ]
  },
  "fortios_vpn_certificate_ca": {
    "prefix": "fortios_vpn_certificate_ca",
    "description": "CA certificate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_ca:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_ca: ${7:}"
    ]
  },
  "fortios_vpn_certificate_crl": {
    "prefix": "fortios_vpn_certificate_crl",
    "description": "Certificate Revocation List as a PEM file in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_crl:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_crl: ${7:}"
    ]
  },
  "fortios_vpn_certificate_local": {
    "prefix": "fortios_vpn_certificate_local",
    "description": "Local keys and certificates in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_local:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_local: ${7:}"
    ]
  },
  "fortios_vpn_certificate_ocsp_server": {
    "prefix": "fortios_vpn_certificate_ocsp_server",
    "description": "OCSP server configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_ocsp_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_ocsp_server: ${7:}"
    ]
  },
  "fortios_vpn_certificate_remote": {
    "prefix": "fortios_vpn_certificate_remote",
    "description": "Remote certificate as a PEM file in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_remote:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_certificate_remote: ${7:}"
    ]
  },
  "fortios_vpn_certificate_setting": {
    "prefix": "fortios_vpn_certificate_setting",
    "description": "VPN certificate setting in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_certificate_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_certificate_setting: ${6:}"
    ]
  },
  "fortios_vpn_ike_gateway": {
    "prefix": "fortios_vpn_ike_gateway",
    "description": "List gateways in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ike_gateway:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_ike_gateway: ${6:}"
    ]
  },
  "fortios_vpn_ipsec_concentrator": {
    "prefix": "fortios_vpn_ipsec_concentrator",
    "description": "Concentrator configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_concentrator:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_concentrator: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_fec": {
    "prefix": "fortios_vpn_ipsec_fec",
    "description": "Configure Forward Error Correction (FEC) mapping profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_fec:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_fec: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_forticlient": {
    "prefix": "fortios_vpn_ipsec_forticlient",
    "description": "Configure FortiClient policy realm in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_forticlient:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_forticlient: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_manualkey": {
    "prefix": "fortios_vpn_ipsec_manualkey",
    "description": "Configure IPsec manual keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_manualkey:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_manualkey: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_manualkey_interface": {
    "prefix": "fortios_vpn_ipsec_manualkey_interface",
    "description": "Configure IPsec manual keys in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_manualkey_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_manualkey_interface: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_phase1": {
    "prefix": "fortios_vpn_ipsec_phase1",
    "description": "Configure VPN remote gateway in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_phase1:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_phase1: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_phase1_interface": {
    "prefix": "fortios_vpn_ipsec_phase1_interface",
    "description": "Configure VPN remote gateway in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_phase1_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_phase1_interface: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_phase2": {
    "prefix": "fortios_vpn_ipsec_phase2",
    "description": "Configure VPN autokey tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_phase2:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_phase2: ${7:}"
    ]
  },
  "fortios_vpn_ipsec_phase2_interface": {
    "prefix": "fortios_vpn_ipsec_phase2_interface",
    "description": "Configure VPN autokey tunnel in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ipsec_phase2_interface:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ipsec_phase2_interface: ${7:}"
    ]
  },
  "fortios_vpn_l2tp": {
    "prefix": "fortios_vpn_l2tp",
    "description": "Configure L2TP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_l2tp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_l2tp: ${6:}"
    ]
  },
  "fortios_vpn_ocvpn": {
    "prefix": "fortios_vpn_ocvpn",
    "description": "Configure Overlay Controller VPN settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ocvpn:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_ocvpn: ${6:}"
    ]
  },
  "fortios_vpn_pptp": {
    "prefix": "fortios_vpn_pptp",
    "description": "Configure PPTP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_pptp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_pptp: ${6:}"
    ]
  },
  "fortios_vpn_ssl_client": {
    "prefix": "fortios_vpn_ssl_client",
    "description": "Client in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_client:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_client: ${7:}"
    ]
  },
  "fortios_vpn_ssl_settings": {
    "prefix": "fortios_vpn_ssl_settings",
    "description": "Configure SSL-VPN in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#vpn_ssl_settings: ${6:}"
    ]
  },
  "fortios_vpn_ssl_web_host_check_software": {
    "prefix": "fortios_vpn_ssl_web_host_check_software",
    "description": "SSL-VPN host check software in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_host_check_software:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_host_check_software: ${7:}"
    ]
  },
  "fortios_vpn_ssl_web_portal": {
    "prefix": "fortios_vpn_ssl_web_portal",
    "description": "Portal in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_portal:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_portal: ${7:}"
    ]
  },
  "fortios_vpn_ssl_web_realm": {
    "prefix": "fortios_vpn_ssl_web_realm",
    "description": "Realm in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_realm:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_realm: ${7:}"
    ]
  },
  "fortios_vpn_ssl_web_user_bookmark": {
    "prefix": "fortios_vpn_ssl_web_user_bookmark",
    "description": "Configure SSL-VPN user bookmark in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_user_bookmark:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_user_bookmark: ${7:}"
    ]
  },
  "fortios_vpn_ssl_web_user_group_bookmark": {
    "prefix": "fortios_vpn_ssl_web_user_group_bookmark",
    "description": "Configure SSL-VPN user group bookmark in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_vpn_ssl_web_user_group_bookmark:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#vpn_ssl_web_user_group_bookmark: ${7:}"
    ]
  },
  "fortios_waf_main_class": {
    "prefix": "fortios_waf_main_class",
    "description": "Hidden table for datasource in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_waf_main_class:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#waf_main_class: ${7:}"
    ]
  },
  "fortios_waf_profile": {
    "prefix": "fortios_waf_profile",
    "description": "Configure Web application firewall configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_waf_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#waf_profile: ${7:}"
    ]
  },
  "fortios_waf_signature": {
    "prefix": "fortios_waf_signature",
    "description": "Hidden table for datasource in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_waf_signature:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#waf_signature: ${7:}"
    ]
  },
  "fortios_waf_sub_class": {
    "prefix": "fortios_waf_sub_class",
    "description": "Hidden table for datasource in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_waf_sub_class:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#waf_sub_class: ${7:}"
    ]
  },
  "fortios_wanopt_auth_group": {
    "prefix": "fortios_wanopt_auth_group",
    "description": "Configure WAN optimization authentication groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_auth_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wanopt_auth_group: ${7:}"
    ]
  },
  "fortios_wanopt_cache_service": {
    "prefix": "fortios_wanopt_cache_service",
    "description": "Designate cache-service for wan-optimization and webcache in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_cache_service:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wanopt_cache_service: ${6:}"
    ]
  },
  "fortios_wanopt_content_delivery_network_rule": {
    "prefix": "fortios_wanopt_content_delivery_network_rule",
    "description": "Configure WAN optimization content delivery network rules in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_content_delivery_network_rule:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wanopt_content_delivery_network_rule: ${7:}"
    ]
  },
  "fortios_wanopt_peer": {
    "prefix": "fortios_wanopt_peer",
    "description": "Configure WAN optimization peers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_peer:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wanopt_peer: ${7:}"
    ]
  },
  "fortios_wanopt_profile": {
    "prefix": "fortios_wanopt_profile",
    "description": "Configure WAN optimization profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wanopt_profile: ${7:}"
    ]
  },
  "fortios_wanopt_remote_storage": {
    "prefix": "fortios_wanopt_remote_storage",
    "description": "Configure a remote cache device as Web cache storage in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_remote_storage:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wanopt_remote_storage: ${6:}"
    ]
  },
  "fortios_wanopt_settings": {
    "prefix": "fortios_wanopt_settings",
    "description": "Configure WAN optimization settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_settings:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wanopt_settings: ${6:}"
    ]
  },
  "fortios_wanopt_webcache": {
    "prefix": "fortios_wanopt_webcache",
    "description": "Configure global Web cache settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wanopt_webcache:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wanopt_webcache: ${6:}"
    ]
  },
  "fortios_web_proxy_debug_url": {
    "prefix": "fortios_web_proxy_debug_url",
    "description": "Configure debug URL addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_debug_url:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_debug_url: ${7:}"
    ]
  },
  "fortios_web_proxy_explicit": {
    "prefix": "fortios_web_proxy_explicit",
    "description": "Configure explicit Web proxy settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_explicit:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#web_proxy_explicit: ${6:}"
    ]
  },
  "fortios_web_proxy_forward_server": {
    "prefix": "fortios_web_proxy_forward_server",
    "description": "Configure forward-server addresses in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_forward_server:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_forward_server: ${7:}"
    ]
  },
  "fortios_web_proxy_forward_server_group": {
    "prefix": "fortios_web_proxy_forward_server_group",
    "description": "Configure a forward server group consisting or multiple forward servers. Supports failover and load balancing in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_forward_server_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_forward_server_group: ${7:}"
    ]
  },
  "fortios_web_proxy_global": {
    "prefix": "fortios_web_proxy_global",
    "description": "Configure Web proxy global settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#web_proxy_global: ${6:}"
    ]
  },
  "fortios_web_proxy_profile": {
    "prefix": "fortios_web_proxy_profile",
    "description": "Configure web proxy profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_profile: ${7:}"
    ]
  },
  "fortios_web_proxy_url_match": {
    "prefix": "fortios_web_proxy_url_match",
    "description": "Exempt URLs from web proxy forwarding and caching in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_url_match:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_url_match: ${7:}"
    ]
  },
  "fortios_web_proxy_wisp": {
    "prefix": "fortios_web_proxy_wisp",
    "description": "Configure Websense Integrated Services Protocol (WISP) servers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_web_proxy_wisp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#web_proxy_wisp: ${7:}"
    ]
  },
  "fortios_webfilter_content": {
    "prefix": "fortios_webfilter_content",
    "description": "Configure Web filter banned word table in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_content:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_content: ${7:}"
    ]
  },
  "fortios_webfilter_content_header": {
    "prefix": "fortios_webfilter_content_header",
    "description": "Configure content types used by Web filter in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_content_header:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_content_header: ${7:}"
    ]
  },
  "fortios_webfilter_fortiguard": {
    "prefix": "fortios_webfilter_fortiguard",
    "description": "Configure FortiGuard Web Filter service in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_fortiguard:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_fortiguard: ${6:}"
    ]
  },
  "fortios_webfilter_ftgd_local_cat": {
    "prefix": "fortios_webfilter_ftgd_local_cat",
    "description": "Configure FortiGuard Web Filter local categories in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ftgd_local_cat:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_ftgd_local_cat: ${7:}"
    ]
  },
  "fortios_webfilter_ftgd_local_rating": {
    "prefix": "fortios_webfilter_ftgd_local_rating",
    "description": "Configure local FortiGuard Web Filter local ratings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ftgd_local_rating:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_ftgd_local_rating: ${7:}"
    ]
  },
  "fortios_webfilter_ips_urlfilter_cache_setting": {
    "prefix": "fortios_webfilter_ips_urlfilter_cache_setting",
    "description": "Configure IPS URL filter cache settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ips_urlfilter_cache_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_ips_urlfilter_cache_setting: ${6:}"
    ]
  },
  "fortios_webfilter_ips_urlfilter_setting": {
    "prefix": "fortios_webfilter_ips_urlfilter_setting",
    "description": "Configure IPS URL filter settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ips_urlfilter_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_ips_urlfilter_setting: ${6:}"
    ]
  },
  "fortios_webfilter_ips_urlfilter_setting6": {
    "prefix": "fortios_webfilter_ips_urlfilter_setting6",
    "description": "Configure IPS URL filter settings for IPv6 in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_ips_urlfilter_setting6:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_ips_urlfilter_setting6: ${6:}"
    ]
  },
  "fortios_webfilter_override": {
    "prefix": "fortios_webfilter_override",
    "description": "Configure FortiGuard Web Filter administrative overrides in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_override:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_override: ${7:}"
    ]
  },
  "fortios_webfilter_profile": {
    "prefix": "fortios_webfilter_profile",
    "description": "Configure Web filter profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_profile: ${7:}"
    ]
  },
  "fortios_webfilter_search_engine": {
    "prefix": "fortios_webfilter_search_engine",
    "description": "Configure web filter search engines in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_search_engine:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_search_engine: ${7:}"
    ]
  },
  "fortios_webfilter_status": {
    "prefix": "fortios_webfilter_status",
    "description": "Display rating info in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#webfilter_status: ${6:}"
    ]
  },
  "fortios_webfilter_urlfilter": {
    "prefix": "fortios_webfilter_urlfilter",
    "description": "Configure URL filter lists in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_webfilter_urlfilter:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#webfilter_urlfilter: ${7:}"
    ]
  },
  "fortios_wireless_controller_access_control_list": {
    "prefix": "fortios_wireless_controller_access_control_list",
    "description": "Configure WiFi bridge access control list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_access_control_list:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_access_control_list: ${7:}"
    ]
  },
  "fortios_wireless_controller_address": {
    "prefix": "fortios_wireless_controller_address",
    "description": "Configure the client with its MAC address in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_address:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_address: ${7:}"
    ]
  },
  "fortios_wireless_controller_addrgrp": {
    "prefix": "fortios_wireless_controller_addrgrp",
    "description": "Configure the MAC address group in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_addrgrp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_addrgrp: ${7:}"
    ]
  },
  "fortios_wireless_controller_ap_status": {
    "prefix": "fortios_wireless_controller_ap_status",
    "description": "Configure access point status (rogue | accepted | suppressed) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_ap_status:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_ap_status: ${7:}"
    ]
  },
  "fortios_wireless_controller_apcfg_profile": {
    "prefix": "fortios_wireless_controller_apcfg_profile",
    "description": "Configure AP local configuration profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_apcfg_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_apcfg_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_arrp_profile": {
    "prefix": "fortios_wireless_controller_arrp_profile",
    "description": "Configure WiFi Automatic Radio Resource Provisioning (ARRP) profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_arrp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_arrp_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_ble_profile": {
    "prefix": "fortios_wireless_controller_ble_profile",
    "description": "Configure Bluetooth Low Energy profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_ble_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_ble_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_bonjour_profile": {
    "prefix": "fortios_wireless_controller_bonjour_profile",
    "description": "Configure Bonjour profiles. Bonjour is Apple's zero configuration networking protocol. Bonjour profiles allow APs and FortiAPs to connnect to networks using Bonjour in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_bonjour_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_bonjour_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_client_info": {
    "prefix": "fortios_wireless_controller_client_info",
    "description": "Wireless controller client-info in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_client_info:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_client_info: ${6:}"
    ]
  },
  "fortios_wireless_controller_global": {
    "prefix": "fortios_wireless_controller_global",
    "description": "Configure wireless controller global settings in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_global:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_global: ${6:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_3gpp_cellular": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_3gpp_cellular",
    "description": "Configure 3GPP public land mobile network (PLMN) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_3gpp_cellular:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_3gpp_cellular: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_ip_address_type": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_ip_address_type",
    "description": "Configure IP address type availability in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_ip_address_type:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_ip_address_type: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_nai_realm": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_nai_realm",
    "description": "Configure network access identifier (NAI) realm in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_nai_realm:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_nai_realm: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_network_auth_type": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_network_auth_type",
    "description": "Configure network authentication type in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_network_auth_type:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_network_auth_type: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_roaming_consortium": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_roaming_consortium",
    "description": "Configure roaming consortium in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_roaming_consortium:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_roaming_consortium: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_venue_name": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_venue_name",
    "description": "Configure venue name duple in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_venue_name:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_venue_name: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_anqp_venue_url": {
    "prefix": "fortios_wireless_controller_hotspot20_anqp_venue_url",
    "description": "Configure venue URL in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_anqp_venue_url:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_anqp_venue_url: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_advice_of_charge": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_advice_of_charge",
    "description": "Configure advice of charge in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_advice_of_charge:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_advice_of_charge: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_conn_capability": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_conn_capability",
    "description": "Configure connection capability in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_conn_capability:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_conn_capability: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_operator_name": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_operator_name",
    "description": "Configure operator friendly name in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_operator_name:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_operator_name: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_osu_provider": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_osu_provider",
    "description": "Configure online sign up (OSU) provider list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_osu_provider:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_osu_provider: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_osu_provider_nai": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_osu_provider_nai",
    "description": "Configure online sign up (OSU) provider NAI list in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_osu_provider_nai:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_osu_provider_nai: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_terms_and_conditions": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_terms_and_conditions",
    "description": "Configure terms and conditions in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_terms_and_conditions:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_terms_and_conditions: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_h2qp_wan_metric": {
    "prefix": "fortios_wireless_controller_hotspot20_h2qp_wan_metric",
    "description": "Configure WAN metrics in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_h2qp_wan_metric:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_h2qp_wan_metric: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_hs_profile": {
    "prefix": "fortios_wireless_controller_hotspot20_hs_profile",
    "description": "Configure hotspot profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_hs_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_hs_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_icon": {
    "prefix": "fortios_wireless_controller_hotspot20_icon",
    "description": "Configure OSU provider icon in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_icon:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_icon: ${7:}"
    ]
  },
  "fortios_wireless_controller_hotspot20_qos_map": {
    "prefix": "fortios_wireless_controller_hotspot20_qos_map",
    "description": "Configure QoS map set in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_hotspot20_qos_map:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_hotspot20_qos_map: ${7:}"
    ]
  },
  "fortios_wireless_controller_inter_controller": {
    "prefix": "fortios_wireless_controller_inter_controller",
    "description": "Configure inter wireless controller operation in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_inter_controller:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_inter_controller: ${6:}"
    ]
  },
  "fortios_wireless_controller_log": {
    "prefix": "fortios_wireless_controller_log",
    "description": "Configure wireless controller event log filters in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_log:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_log: ${6:}"
    ]
  },
  "fortios_wireless_controller_mpsk_profile": {
    "prefix": "fortios_wireless_controller_mpsk_profile",
    "description": "Configure MPSK profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_mpsk_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_mpsk_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_nac_profile": {
    "prefix": "fortios_wireless_controller_nac_profile",
    "description": "Configure WiFi network access control (NAC) profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_nac_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_nac_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_qos_profile": {
    "prefix": "fortios_wireless_controller_qos_profile",
    "description": "Configure WiFi quality of service (QoS) profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_qos_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_qos_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_region": {
    "prefix": "fortios_wireless_controller_region",
    "description": "Configure FortiAP regions (for floor plans and maps) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_region:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_region: ${7:}"
    ]
  },
  "fortios_wireless_controller_rf_analysis": {
    "prefix": "fortios_wireless_controller_rf_analysis",
    "description": "Wireless controller rf-analysis in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_rf_analysis:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_rf_analysis: ${6:}"
    ]
  },
  "fortios_wireless_controller_setting": {
    "prefix": "fortios_wireless_controller_setting",
    "description": "VDOM wireless controller configuration in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_setting:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_setting: ${6:}"
    ]
  },
  "fortios_wireless_controller_snmp": {
    "prefix": "fortios_wireless_controller_snmp",
    "description": "Configure SNMP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_snmp:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_snmp: ${6:}"
    ]
  },
  "fortios_wireless_controller_spectral_info": {
    "prefix": "fortios_wireless_controller_spectral_info",
    "description": "Wireless controller spectrum analysis in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_spectral_info:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_spectral_info: ${6:}"
    ]
  },
  "fortios_wireless_controller_ssid_policy": {
    "prefix": "fortios_wireless_controller_ssid_policy",
    "description": "Configure WiFi SSID policies in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_ssid_policy:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_ssid_policy: ${7:}"
    ]
  },
  "fortios_wireless_controller_status": {
    "prefix": "fortios_wireless_controller_status",
    "description": "Wireless controller status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_status: ${6:}"
    ]
  },
  "fortios_wireless_controller_syslog_profile": {
    "prefix": "fortios_wireless_controller_syslog_profile",
    "description": "Configure Wireless Termination Points (WTP) system log server profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_syslog_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_syslog_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_timers": {
    "prefix": "fortios_wireless_controller_timers",
    "description": "Configure CAPWAP timers in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_timers:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_timers: ${6:}"
    ]
  },
  "fortios_wireless_controller_utm_profile": {
    "prefix": "fortios_wireless_controller_utm_profile",
    "description": "Configure UTM (Unified Threat Management) profile in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_utm_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_utm_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_vap": {
    "prefix": "fortios_wireless_controller_vap",
    "description": "Configure Virtual Access Points (VAPs) in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_vap:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_vap: ${7:}"
    ]
  },
  "fortios_wireless_controller_vap_group": {
    "prefix": "fortios_wireless_controller_vap_group",
    "description": "Configure virtual Access Point (VAP) groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_vap_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_vap_group: ${7:}"
    ]
  },
  "fortios_wireless_controller_vap_status": {
    "prefix": "fortios_wireless_controller_vap_status",
    "description": "Wireless controller VAP-status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_vap_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_vap_status: ${6:}"
    ]
  },
  "fortios_wireless_controller_wag_profile": {
    "prefix": "fortios_wireless_controller_wag_profile",
    "description": "Configure wireless access gateway (WAG) profiles used for tunnels on AP in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wag_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wag_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_wids_profile": {
    "prefix": "fortios_wireless_controller_wids_profile",
    "description": "Configure wireless intrusion detection system (WIDS) profiles in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wids_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wids_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_wtp": {
    "prefix": "fortios_wireless_controller_wtp",
    "description": "Configure Wireless Termination Points (WTPs), that is, FortiAPs or APs to be managed by FortiGate in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wtp:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wtp: ${7:}"
    ]
  },
  "fortios_wireless_controller_wtp_group": {
    "prefix": "fortios_wireless_controller_wtp_group",
    "description": "Configure WTP groups in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wtp_group:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wtp_group: ${7:}"
    ]
  },
  "fortios_wireless_controller_wtp_profile": {
    "prefix": "fortios_wireless_controller_wtp_profile",
    "description": "Configure WTP profiles or FortiAP profiles that define radio settings for manageable FortiAP platforms in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wtp_profile:",
      "\tstate: ${1:present|absent}",
      "\t#access_token: ${2:}",
      "\t#enable_log: ${3:false}",
      "\t#member_path: ${4:}",
      "\t#member_state: ${5:present|absent}",
      "\t#vdom: ${6:root}",
      "\t#wireless_controller_wtp_profile: ${7:}"
    ]
  },
  "fortios_wireless_controller_wtp_status": {
    "prefix": "fortios_wireless_controller_wtp_status",
    "description": "Wireless controller WTP-status in Fortinet's FortiOS and FortiGate.",
    "body": [
      "fortinet.fortios.fortios_wireless_controller_wtp_status:",
      "\t#access_token: ${1:}",
      "\t#enable_log: ${2:false}",
      "\t#member_path: ${3:}",
      "\t#member_state: ${4:present|absent}",
      "\t#vdom: ${5:root}",
      "\t#wireless_controller_wtp_status: ${6:}"
    ]
  },
  "junos_acl_interfaces": {
    "prefix": "junos_acl_interfaces",
    "description": "ACL interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_acl_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_acls": {
    "prefix": "junos_acls",
    "description": "ACLs resource module",
    "body": [
      "junipernetworks.junos.junos_acls:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_banner": {
    "prefix": "junos_banner",
    "description": "Manage multiline banners on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_banner:",
      "\tbanner: ${1:login|motd}",
      "\t#active: ${2:true}",
      "\t#state: ${3:#present|absent}",
      "\t#text: ${4:}"
    ]
  },
  "junos_bgp_address_family": {
    "prefix": "junos_bgp_address_family",
    "description": "Manage BGP Address Family attributes of interfaces on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_bgp_address_family:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "junos_bgp_global": {
    "prefix": "junos_bgp_global",
    "description": "Manages BGP Global configuration on devices running Juniper JUNOS.",
    "body": [
      "junipernetworks.junos.junos_bgp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:purged|#merged|replaced|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_command": {
    "prefix": "junos_command",
    "description": "Run arbitrary commands on an Juniper JUNOS device",
    "body": [
      "junipernetworks.junos.junos_command:",
      "\t#commands: ${1:}",
      "\t#display: ${2:text|json|xml|set}",
      "\t#interval: ${3:1}",
      "\t#match: ${4:any|#all}",
      "\t#retries: ${5:10}",
      "\t#rpcs: ${6:}",
      "\t#wait_for: ${7:}"
    ]
  },
  "junos_config": {
    "prefix": "junos_config",
    "description": "Manage configuration on devices running Juniper JUNOS",
    "body": [
      "junipernetworks.junos.junos_config:",
      "\t#backup: ${1:false}",
      "\t#backup_options: ${2:}",
      "\t#check_commit: ${3:false}",
      "\t#comment: ${4:configured by junos_config}",
      "\t#confirm: ${5:0}",
      "\t#confirm_commit: ${6:false}",
      "\t#lines: ${7:}",
      "\t#replace: ${8:}",
      "\t#rollback: ${9:}",
      "\t#src: ${10:}",
      "\t#src_format: ${11:xml|set|text|json}",
      "\t#update: ${12:#merge|override|replace|update}",
      "\t#zeroize: ${13:false}"
    ]
  },
  "junos_facts": {
    "prefix": "junos_facts",
    "description": "Collect facts from remote devices running Juniper Junos",
    "body": [
      "junipernetworks.junos.junos_facts:",
      "\t#available_network_resources: ${1:false}",
      "\t#config_format: ${2:xml|#text|set|json}",
      "\t#gather_network_resources: ${3:}",
      "\t#gather_subset: ${4:['min']}"
    ]
  },
  "junos_hostname": {
    "prefix": "junos_hostname",
    "description": "Manage Hostname server configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_hostname:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_interfaces": {
    "prefix": "junos_interfaces",
    "description": "Junos Interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_l2_interfaces": {
    "prefix": "junos_l2_interfaces",
    "description": "L2 interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_l2_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_l3_interfaces": {
    "prefix": "junos_l3_interfaces",
    "description": "L3 interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_l3_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_lacp": {
    "prefix": "junos_lacp",
    "description": "Global Link Aggregation Control Protocol (LACP) Junos resource module",
    "body": [
      "junipernetworks.junos.junos_lacp:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_lacp_interfaces": {
    "prefix": "junos_lacp_interfaces",
    "description": "LACP interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_lacp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_lag_interfaces": {
    "prefix": "junos_lag_interfaces",
    "description": "Link Aggregation Juniper JUNOS resource module",
    "body": [
      "junipernetworks.junos.junos_lag_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_lldp_global": {
    "prefix": "junos_lldp_global",
    "description": "LLDP resource module",
    "body": [
      "junipernetworks.junos.junos_lldp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_lldp_interfaces": {
    "prefix": "junos_lldp_interfaces",
    "description": "LLDP interfaces resource module",
    "body": [
      "junipernetworks.junos.junos_lldp_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_logging_global": {
    "prefix": "junos_logging_global",
    "description": "Manage logging configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_logging_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_netconf": {
    "prefix": "junos_netconf",
    "description": "Configures the Junos Netconf system service",
    "body": [
      "junipernetworks.junos.junos_netconf:",
      "\t#netconf_port: ${1:830}",
      "\t#state: ${2:#present|absent}"
    ]
  },
  "junos_ntp_global": {
    "prefix": "junos_ntp_global",
    "description": "Manage NTP configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_ntp_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_ospf_interfaces": {
    "prefix": "junos_ospf_interfaces",
    "description": "OSPF Interfaces Resource Module.",
    "body": [
      "junipernetworks.junos.junos_ospf_interfaces:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "junos_ospfv2": {
    "prefix": "junos_ospfv2",
    "description": "OSPFv2 resource module",
    "body": [
      "junipernetworks.junos.junos_ospfv2:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_ospfv3": {
    "prefix": "junos_ospfv3",
    "description": "OSPFv3 resource module",
    "body": [
      "junipernetworks.junos.junos_ospfv3:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_package": {
    "prefix": "junos_package",
    "description": "Installs packages on remote devices running Junos",
    "body": [
      "junipernetworks.junos.junos_package:",
      "\tsrc: ${1:}",
      "\t#force: ${2:false}",
      "\t#force_host: ${3:false}",
      "\t#issu: ${4:false}",
      "\t#no_copy: ${5:false}",
      "\t#provider: ${6:}",
      "\t#reboot: ${7:true}",
      "\t#ssh_config: ${8:}",
      "\t#ssh_private_key_file: ${9:}",
      "\t#unlink: ${10:false}",
      "\t#validate: ${11:true}",
      "\t#version: ${12:}"
    ]
  },
  "junos_ping": {
    "prefix": "junos_ping",
    "description": "Tests reachability using ping from devices running Juniper JUNOS",
    "body": [
      "junipernetworks.junos.junos_ping:",
      "\tdest: ${1:}",
      "\t#count: ${2:5}",
      "\t#df_bit: ${3:false}",
      "\t#interface: ${4:}",
      "\t#interval: ${5:}",
      "\t#rapid: ${6:false}",
      "\t#size: ${7:}",
      "\t#source: ${8:}",
      "\t#state: ${9:absent|#present}",
      "\t#ttl: ${10:}"
    ]
  },
  "junos_prefix_lists": {
    "prefix": "junos_prefix_lists",
    "description": "Manage prefix-lists attributes of interfaces on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_prefix_lists:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "junos_routing_instances": {
    "prefix": "junos_routing_instances",
    "description": "Manage routing instances on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_routing_instances:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|parsed|gathered|rendered}"
    ]
  },
  "junos_routing_options": {
    "prefix": "junos_routing_options",
    "description": "Manage routing-options configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_routing_options:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_rpc": {
    "prefix": "junos_rpc",
    "description": "Runs an arbitrary RPC over NetConf on an Juniper JUNOS device",
    "body": [
      "junipernetworks.junos.junos_rpc:",
      "\trpc: ${1:}",
      "\t#args: ${2:}",
      "\t#attrs: ${3:}",
      "\t#output: ${4:#xml|json|text}"
    ]
  },
  "junos_security_policies": {
    "prefix": "junos_security_policies",
    "description": "Create and manage security policies on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_security_policies:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "junos_security_policies_global": {
    "prefix": "junos_security_policies_global",
    "description": "Manage global security policy settings on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_security_policies_global:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "junos_security_zones": {
    "prefix": "junos_security_zones",
    "description": "Manage security zones on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_security_zones:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|rendered|gathered|parsed}"
    ]
  },
  "junos_snmp_server": {
    "prefix": "junos_snmp_server",
    "description": "Manage SNMP server configuration on Junos devices.",
    "body": [
      "junipernetworks.junos.junos_snmp_server:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|deleted|overridden|parsed|gathered|rendered}"
    ]
  },
  "junos_static_routes": {
    "prefix": "junos_static_routes",
    "description": "Static routes resource module",
    "body": [
      "junipernetworks.junos.junos_static_routes:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|rendered|parsed}"
    ]
  },
  "junos_system": {
    "prefix": "junos_system",
    "description": "Manage the system attributes on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_system:",
      "\t#active: ${1:true}",
      "\t#domain_name: ${2:}",
      "\t#domain_search: ${3:}",
      "\t#hostname: ${4:}",
      "\t#name_servers: ${5:}",
      "\t#state: ${6:#present|absent}"
    ]
  },
  "junos_user": {
    "prefix": "junos_user",
    "description": "Manage local user accounts on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_user:",
      "\t#active: ${1:true}",
      "\t#aggregate: ${2:}",
      "\t#encrypted_password: ${3:}",
      "\t#full_name: ${4:}",
      "\t#name: ${5:}",
      "\t#purge: ${6:false}",
      "\t#role: ${7:operator|read-only|super-user|unauthorized}",
      "\t#sshkey: ${8:}",
      "\t#state: ${9:#present|absent}"
    ]
  },
  "junos_vlans": {
    "prefix": "junos_vlans",
    "description": "VLANs resource module",
    "body": [
      "junipernetworks.junos.junos_vlans:",
      "\t#config: ${1:}",
      "\t#running_config: ${2:}",
      "\t#state: ${3:#merged|replaced|overridden|deleted|gathered|parsed|rendered}"
    ]
  },
  "junos_vrf": {
    "prefix": "junos_vrf",
    "description": "Manage the VRF definitions on Juniper JUNOS devices",
    "body": [
      "junipernetworks.junos.junos_vrf:",
      "\t#active: ${1:true}",
      "\t#aggregate: ${2:}",
      "\t#description: ${3:}",
      "\t#interfaces: ${4:}",
      "\t#name: ${5:}",
      "\t#rd: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#table_label: ${8:true}",
      "\t#target: ${9:}"
    ]
  },
  "computer": {
    "prefix": "computer",
    "description": "Manage Active Directory computer objects",
    "body": [
      "microsoft.ad.computer:",
      "\t#attributes: ${1:{\\}}",
      "\t#delegates: ${2:}",
      "\t#description: ${3:}",
      "\t#display_name: ${4:}",
      "\t#dns_hostname: ${5:}",
      "\t#domain_password: ${6:}",
      "\t#domain_server: ${7:}",
      "\t#domain_username: ${8:}",
      "\t#enabled: ${9:}",
      "\t#identity: ${10:}",
      "\t#kerberos_encryption_types: ${11:}",
      "\t#location: ${12:}",
      "\t#managed_by: ${13:}",
      "\t#name: ${14:}",
      "\t#path: ${15:}",
      "\t#protect_from_deletion: ${16:}",
      "\t#sam_account_name: ${17:}",
      "\t#spn: ${18:}",
      "\t#state: ${19:absent|#present}",
      "\t#trusted_for_delegation: ${20:}",
      "\t#upn: ${21:}"
    ]
  },
  "debug_ldap_client": {
    "prefix": "debug_ldap_client",
    "description": "Get host information for debugging LDAP connections",
    "body": "microsoft.ad.debug_ldap_client:"
  },
  "domain_controller": {
    "prefix": "domain_controller",
    "description": "Manage domain controller/member server state for a Windows host",
    "body": [
      "microsoft.ad.domain_controller:",
      "\tdomain_admin_password: ${1:}",
      "\tdomain_admin_user: ${2:}",
      "\tstate: ${3:domain_controller|member_server}",
      "\t#database_path: ${4:}",
      "\t#dns_domain_name: ${5:}",
      "\t#domain_log_path: ${6:}",
      "\t#install_dns: ${7:}",
      "\t#install_media_path: ${8:}",
      "\t#local_admin_password: ${9:}",
      "\t#read_only: ${10:false}",
      "\t#reboot: ${11:false}",
      "\t#safe_mode_password: ${12:}",
      "\t#site_name: ${13:}",
      "\t#sysvol_path: ${14:}"
    ]
  },
  "group": {
    "prefix": "group",
    "description": "Manage Active Directory group objects",
    "body": [
      "microsoft.ad.group:",
      "\t#attributes: ${1:{\\}}",
      "\t#category: ${2:distribution|security}",
      "\t#description: ${3:}",
      "\t#display_name: ${4:}",
      "\t#domain_password: ${5:}",
      "\t#domain_server: ${6:}",
      "\t#domain_username: ${7:}",
      "\t#homepage: ${8:}",
      "\t#identity: ${9:}",
      "\t#managed_by: ${10:}",
      "\t#members: ${11:}",
      "\t#name: ${12:}",
      "\t#path: ${13:}",
      "\t#protect_from_deletion: ${14:}",
      "\t#sam_account_name: ${15:}",
      "\t#scope: ${16:domainlocal|global|universal}",
      "\t#state: ${17:absent|#present}"
    ]
  },
  "membership": {
    "prefix": "membership",
    "description": "Manage domain/workgroup membership for a Windows host",
    "body": [
      "microsoft.ad.membership:",
      "\tstate: ${1:domain|workgroup}",
      "\t#dns_domain_name: ${2:}",
      "\t#domain_admin_password: ${3:}",
      "\t#domain_admin_user: ${4:}",
      "\t#domain_ou_path: ${5:}",
      "\t#hostname: ${6:}",
      "\t#offline_join_blob: ${7:}",
      "\t#reboot: ${8:false}",
      "\t#workgroup_name: ${9:}"
    ]
  },
  "object": {
    "prefix": "object",
    "description": "Manage Active Directory objects",
    "body": [
      "microsoft.ad.object:",
      "\t#attributes: ${1:{\\}}",
      "\t#description: ${2:}",
      "\t#display_name: ${3:}",
      "\t#domain_password: ${4:}",
      "\t#domain_server: ${5:}",
      "\t#domain_username: ${6:}",
      "\t#identity: ${7:}",
      "\t#name: ${8:}",
      "\t#path: ${9:}",
      "\t#protect_from_deletion: ${10:}",
      "\t#state: ${11:absent|#present}",
      "\t#type: ${12:}"
    ]
  },
  "object_info": {
    "prefix": "object_info",
    "description": "Gather information an Active Directory object",
    "body": [
      "microsoft.ad.object_info:",
      "\t#domain_password: ${1:}",
      "\t#domain_server: ${2:}",
      "\t#domain_username: ${3:}",
      "\t#filter: ${4:}",
      "\t#identity: ${5:}",
      "\t#include_deleted: ${6:false}",
      "\t#ldap_filter: ${7:}",
      "\t#properties: ${8:}",
      "\t#search_base: ${9:}",
      "\t#search_scope: ${10:base|one_level|subtree}"
    ]
  },
  "offline_join": {
    "prefix": "offline_join",
    "description": "Get the Offline Domain Join BLOB",
    "body": [
      "microsoft.ad.offline_join:",
      "\t#blob_path: ${1:}",
      "\t#domain_server: ${2:}",
      "\t#identity: ${3:}",
      "\t#name: ${4:}",
      "\t#path: ${5:}",
      "\t#provision_root_ca_certs: ${6:false}"
    ]
  },
  "ou": {
    "prefix": "ou",
    "description": "Manage Active Directory organizational units",
    "body": [
      "microsoft.ad.ou:",
      "\t#attributes: ${1:{\\}}",
      "\t#city: ${2:}",
      "\t#country: ${3:}",
      "\t#description: ${4:}",
      "\t#display_name: ${5:}",
      "\t#domain_password: ${6:}",
      "\t#domain_server: ${7:}",
      "\t#domain_username: ${8:}",
      "\t#identity: ${9:}",
      "\t#managed_by: ${10:}",
      "\t#name: ${11:}",
      "\t#path: ${12:}",
      "\t#postal_code: ${13:}",
      "\t#protect_from_deletion: ${14:}",
      "\t#state: ${15:absent|#present}",
      "\t#state_province: ${16:}",
      "\t#street: ${17:}"
    ]
  },
  "ntnx_acps": {
    "prefix": "ntnx_acps",
    "description": "acp module which suports acp Create, update and delete operations",
    "body": [
      "nutanix.ncp.ntnx_acps:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#acp_uuid: ${4:}",
      "\t#desc: ${5:}",
      "\t#filters: ${6:}",
      "\t#name: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#role: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#user_group_uuids: ${11:}",
      "\t#user_uuids: ${12:}",
      "\t#validate_certs: ${13:true}",
      "\t#wait: ${14:true}"
    ]
  },
  "ntnx_acps_info": {
    "prefix": "ntnx_acps_info",
    "description": "acp info module",
    "body": [
      "nutanix.ncp.ntnx_acps_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#acp_uuid: ${4:}",
      "\t#custom_filter: ${5:}",
      "\t#filter: ${6:}",
      "\t#kind: ${7:access_control_policy}",
      "\t#length: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:ASCENDING|DESCENDING}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_address_groups": {
    "prefix": "ntnx_address_groups",
    "description": "module which supports address groups CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_address_groups:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#address_group_uuid: ${4:}",
      "\t#desc: ${5:}",
      "\t#name: ${6:}",
      "\t#nutanix_port: ${7:9440}",
      "\t#state: ${8:#present|absent}",
      "\t#subnets: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_address_groups_info": {
    "prefix": "ntnx_address_groups_info",
    "description": "address groups info module",
    "body": [
      "nutanix.ncp.ntnx_address_groups_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#address_group_uuid: ${4:}",
      "\t#custom_filter: ${5:}",
      "\t#filter: ${6:}",
      "\t#kind: ${7:address_group}",
      "\t#length: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_categories": {
    "prefix": "ntnx_categories",
    "description": "category module which supports pc category management CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_categories:",
      "\tname: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#desc: ${5:}",
      "\t#nutanix_port: ${6:9440}",
      "\t#remove_values: ${7:false}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:true}",
      "\t#values: ${10:}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_categories_info": {
    "prefix": "ntnx_categories_info",
    "description": "categories info module",
    "body": [
      "nutanix.ncp.ntnx_categories_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:category}",
      "\t#length: ${7:}",
      "\t#name: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_clusters_info": {
    "prefix": "ntnx_clusters_info",
    "description": "cluster info module",
    "body": [
      "nutanix.ncp.ntnx_clusters_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#cluster_uuid: ${4:}",
      "\t#custom_filter: ${5:}",
      "\t#filter: ${6:}",
      "\t#kind: ${7:cluster}",
      "\t#length: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_floating_ips": {
    "prefix": "ntnx_floating_ips",
    "description": "floating_ips module which supports floating_ip CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_floating_ips:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#external_subnet: ${4:}",
      "\t#fip_uuid: ${5:}",
      "\t#nutanix_port: ${6:9440}",
      "\t#private_ip: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:true}",
      "\t#vm: ${10:}",
      "\t#vpc: ${11:}",
      "\t#wait: ${12:true}"
    ]
  },
  "ntnx_floating_ips_info": {
    "prefix": "ntnx_floating_ips_info",
    "description": "Floting ips info module",
    "body": [
      "nutanix.ncp.ntnx_floating_ips_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#fip_uuid: ${6:}",
      "\t#kind: ${7:floating_ip}",
      "\t#length: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_foundation": {
    "prefix": "ntnx_foundation",
    "description": "Nutanix module to image nodes and optionally create clusters",
    "body": [
      "nutanix.ncp.ntnx_foundation:",
      "\tblocks: ${1:}",
      "\tcvm_gateway: ${2:}",
      "\tcvm_netmask: ${3:}",
      "\thypervisor_gateway: ${4:}",
      "\thypervisor_netmask: ${5:}",
      "\tnos_package: ${6:}",
      "\tnutanix_host: ${7:}",
      "\t#bond_lacp_rate: ${8:slow|fast}",
      "\t#bond_mode: ${9:dynamic|static}",
      "\t#clusters: ${10:}",
      "\t#current_cvm_vlan_tag: ${11:}",
      "\t#default_ipmi_password: ${12:}",
      "\t#default_ipmi_user: ${13:}",
      "\t#eos_metadata: ${14:}",
      "\t#foundation_central: ${15:}",
      "\t#hyperv_external_vnic: ${16:}",
      "\t#hyperv_external_vswitch: ${17:}",
      "\t#hyperv_product_key: ${18:}",
      "\t#hyperv_sku: ${19:}",
      "\t#hypervisor_iso: ${20:}",
      "\t#hypervisor_nameserver: ${21:}",
      "\t#hypervisor_password: ${22:}",
      "\t#install_script: ${23:}",
      "\t#ipmi_gateway: ${24:}",
      "\t#ipmi_netmask: ${25:}",
      "\t#nutanix_port: ${26:8000}",
      "\t#rdma_passthrough: ${27:false}",
      "\t#skip_hypervisor: ${28:false}",
      "\t#state: ${29:#present|absent}",
      "\t#svm_rescue_args: ${30:}",
      "\t#tests: ${31:}",
      "\t#timeout: ${32:60}",
      "\t#ucsm_ip: ${33:}",
      "\t#ucsm_password: ${34:}",
      "\t#ucsm_user: ${35:}",
      "\t#unc_password: ${36:}",
      "\t#unc_path: ${37:}",
      "\t#unc_username: ${38:}",
      "\t#wait: ${39:true}",
      "\t#xen_config_type: ${40:}",
      "\t#xen_master_ip: ${41:}",
      "\t#xen_master_label: ${42:}",
      "\t#xen_master_password: ${43:}",
      "\t#xen_master_username: ${44:}"
    ]
  },
  "ntnx_foundation_aos_packages_info": {
    "prefix": "ntnx_foundation_aos_packages_info",
    "description": "Nutanix module which returns the AOS packages uploaded to Foundation",
    "body": [
      "nutanix.ncp.ntnx_foundation_aos_packages_info:",
      "\tnutanix_host: ${1:}",
      "\t#nutanix_port: ${2:8000}",
      "\t#state: ${3:#present|absent}",
      "\t#timeout: ${4:60}",
      "\t#wait: ${5:true}"
    ]
  },
  "ntnx_foundation_bmc_ipmi_config": {
    "prefix": "ntnx_foundation_bmc_ipmi_config",
    "description": "Nutanix module which configures IPMI IP address on BMC of nodes.",
    "body": [
      "nutanix.ncp.ntnx_foundation_bmc_ipmi_config:",
      "\tblocks: ${1:}",
      "\tipmi_gateway: ${2:}",
      "\tipmi_netmask: ${3:}",
      "\tipmi_password: ${4:}",
      "\tipmi_user: ${5:}",
      "\tnutanix_host: ${6:}",
      "\t#nutanix_port: ${7:8000}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:60}",
      "\t#wait: ${10:true}"
    ]
  },
  "ntnx_foundation_central": {
    "prefix": "ntnx_foundation_central",
    "description": "Nutanix module to imaged Nodes and optionally create cluster",
    "body": [
      "nutanix.ncp.ntnx_foundation_central:",
      "\taos_package_url: ${1:}",
      "\tcommon_network_settings: ${2:}",
      "\tnodes_list: ${3:}",
      "\tnutanix_host: ${4:}",
      "\tnutanix_password: ${5:}",
      "\tnutanix_username: ${6:}",
      "\tredundancy_factor: ${7:}",
      "\t#aos_package_sha256sum: ${8:}",
      "\t#cluster_external_ip: ${9:}",
      "\t#cluster_name: ${10:test}",
      "\t#cluster_size: ${11:}",
      "\t#hypervisor_iso_details: ${12:}",
      "\t#imaged_cluster_uuid: ${13:}",
      "\t#nutanix_port: ${14:9440}",
      "\t#skip_cluster_creation: ${15:false}",
      "\t#state: ${16:#present|absent}",
      "\t#storage_node_count: ${17:}",
      "\t#timezone: ${18:}",
      "\t#validate_certs: ${19:true}",
      "\t#wait: ${20:true}"
    ]
  },
  "ntnx_foundation_central_api_keys": {
    "prefix": "ntnx_foundation_central_api_keys",
    "description": "Nutanix module which creates api key for foundation central",
    "body": [
      "nutanix.ncp.ntnx_foundation_central_api_keys:",
      "\talias: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#nutanix_port: ${5:9440}",
      "\t#state: ${6:#present|absent}",
      "\t#validate_certs: ${7:true}",
      "\t#wait: ${8:true}"
    ]
  },
  "ntnx_foundation_central_api_keys_info": {
    "prefix": "ntnx_foundation_central_api_keys_info",
    "description": "Nutanix module which returns the api key",
    "body": [
      "nutanix.ncp.ntnx_foundation_central_api_keys_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#alias: ${4:}",
      "\t#custom_filter: ${5:}",
      "\t#key_uuid: ${6:}",
      "\t#nutanix_port: ${7:9440}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:true}",
      "\t#wait: ${10:true}"
    ]
  },
  "ntnx_foundation_central_imaged_clusters_info": {
    "prefix": "ntnx_foundation_central_imaged_clusters_info",
    "description": "Nutanix module which returns the imaged clusters within the Foudation Central",
    "body": [
      "nutanix.ncp.ntnx_foundation_central_imaged_clusters_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filters: ${5:}",
      "\t#imaged_cluster_uuid: ${6:}",
      "\t#length: ${7:10}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:0}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}",
      "\t#wait: ${12:true}"
    ]
  },
  "ntnx_foundation_central_imaged_nodes_info": {
    "prefix": "ntnx_foundation_central_imaged_nodes_info",
    "description": "Nutanix module which returns the imaged nodes within the Foudation Central",
    "body": [
      "nutanix.ncp.ntnx_foundation_central_imaged_nodes_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filters: ${5:}",
      "\t#imaged_node_uuid: ${6:}",
      "\t#length: ${7:10}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:0}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}",
      "\t#wait: ${12:true}"
    ]
  },
  "ntnx_foundation_discover_nodes_info": {
    "prefix": "ntnx_foundation_discover_nodes_info",
    "description": "Nutanix module which returns nodes discovered by Foundation",
    "body": [
      "nutanix.ncp.ntnx_foundation_discover_nodes_info:",
      "\tnutanix_host: ${1:}",
      "\t#include_configured: ${2:false}",
      "\t#include_network_details: ${3:false}",
      "\t#nutanix_port: ${4:8000}",
      "\t#state: ${5:#present|absent}",
      "\t#timeout: ${6:60}",
      "\t#wait: ${7:true}"
    ]
  },
  "ntnx_foundation_hypervisor_images_info": {
    "prefix": "ntnx_foundation_hypervisor_images_info",
    "description": "Nutanix module which returns the hypervisor images uploaded to Foundation",
    "body": [
      "nutanix.ncp.ntnx_foundation_hypervisor_images_info:",
      "\tnutanix_host: ${1:}",
      "\t#nutanix_port: ${2:8000}",
      "\t#state: ${3:#present|absent}",
      "\t#timeout: ${4:60}",
      "\t#wait: ${5:true}"
    ]
  },
  "ntnx_foundation_image_upload": {
    "prefix": "ntnx_foundation_image_upload",
    "description": "Nutanix module which uploads hypervisor or AOS image to foundation vm.",
    "body": [
      "nutanix.ncp.ntnx_foundation_image_upload:",
      "\tfilename: ${1:}",
      "\tinstaller_type: ${2:kvm|esx|hyperv|xen|nos}",
      "\tnutanix_host: ${3:}",
      "\t#nutanix_port: ${4:8000}",
      "\t#source: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#timeout: ${7:60}",
      "\t#wait: ${8:true}"
    ]
  },
  "ntnx_foundation_node_network_info": {
    "prefix": "ntnx_foundation_node_network_info",
    "description": "Nutanix module which returns node network information discovered by Foundation",
    "body": [
      "nutanix.ncp.ntnx_foundation_node_network_info:",
      "\tnodes: ${1:}",
      "\tnutanix_host: ${2:}",
      "\t#nutanix_port: ${3:8000}",
      "\t#state: ${4:#present|absent}",
      "\t#timeout: ${5:60}",
      "\t#wait: ${6:true}"
    ]
  },
  "ntnx_hosts_info": {
    "prefix": "ntnx_hosts_info",
    "description": "host  info module",
    "body": [
      "nutanix.ncp.ntnx_hosts_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#host_uuid: ${6:}",
      "\t#kind: ${7:host}",
      "\t#length: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_image_placement_policies_info": {
    "prefix": "ntnx_image_placement_policies_info",
    "description": "image placement policies info module",
    "body": [
      "nutanix.ncp.ntnx_image_placement_policies_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:image_placement_policy}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#policy_uuid: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_image_placement_policy": {
    "prefix": "ntnx_image_placement_policy",
    "description": "image placement policy module which supports Create, update and delete operations",
    "body": [
      "nutanix.ncp.ntnx_image_placement_policy:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#categories: ${4:}",
      "\t#cluster_categories: ${5:}",
      "\t#desc: ${6:}",
      "\t#image_categories: ${7:}",
      "\t#name: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#placement_type: ${10:hard|soft}",
      "\t#policy_uuid: ${11:}",
      "\t#remove_categories: ${12:false}",
      "\t#state: ${13:#present|absent}",
      "\t#validate_certs: ${14:true}",
      "\t#wait: ${15:true}"
    ]
  },
  "ntnx_images": {
    "prefix": "ntnx_images",
    "description": "images module which supports pc images management CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_images:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#categories: ${4:}",
      "\t#checksum: ${5:}",
      "\t#clusters: ${6:}",
      "\t#desc: ${7:}",
      "\t#image_type: ${8:ISO_IMAGE|DISK_IMAGE}",
      "\t#image_uuid: ${9:}",
      "\t#name: ${10:}",
      "\t#nutanix_port: ${11:9440}",
      "\t#remove_categories: ${12:false}",
      "\t#source_path: ${13:}",
      "\t#source_uri: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#validate_certs: ${16:true}",
      "\t#version: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "ntnx_images_info": {
    "prefix": "ntnx_images_info",
    "description": "images info module",
    "body": [
      "nutanix.ncp.ntnx_images_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#image_uuid: ${6:}",
      "\t#kind: ${7:image}",
      "\t#length: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_karbon_clusters": {
    "prefix": "ntnx_karbon_clusters",
    "description": "Create, Delete a k8s cluster with the provided configuration.",
    "body": [
      "nutanix.ncp.ntnx_karbon_clusters:",
      "\tname: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#cluster: ${5:}",
      "\t#cluster_type: ${6:DEV|PROD}",
      "\t#cni: ${7:}",
      "\t#control_plane_virtual_ip: ${8:}",
      "\t#custom_node_configs: ${9:}",
      "\t#host_os: ${10:}",
      "\t#k8s_version: ${11:}",
      "\t#node_subnet: ${12:}",
      "\t#nutanix_port: ${13:9440}",
      "\t#state: ${14:#present|absent}",
      "\t#storage_class: ${15:}",
      "\t#validate_certs: ${16:true}",
      "\t#wait: ${17:true}"
    ]
  },
  "ntnx_karbon_clusters_info": {
    "prefix": "ntnx_karbon_clusters_info",
    "description": "cluster  info module",
    "body": [
      "nutanix.ncp.ntnx_karbon_clusters_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#cluster_name: ${4:}",
      "\t#fetch_kubeconfig: ${5:}",
      "\t#fetch_ssh_credentials: ${6:}",
      "\t#nutanix_port: ${7:9440}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "ntnx_karbon_clusters_node_pools": {
    "prefix": "ntnx_karbon_clusters_node_pools",
    "description": "Create,Update and Delete a worker node pools with the provided configuration.",
    "body": [
      "nutanix.ncp.ntnx_karbon_clusters_node_pools:",
      "\tcluster_name: ${1:}",
      "\tnode_pool_name: ${2:}",
      "\tnutanix_host: ${3:}",
      "\tnutanix_password: ${4:}",
      "\tnutanix_username: ${5:}",
      "\t#add_labels: ${6:}",
      "\t#node_iscsi_subnet: ${7:}",
      "\t#node_subnet: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#pool_config: ${10:}",
      "\t#remove_labels: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}",
      "\t#wait: ${14:true}"
    ]
  },
  "ntnx_karbon_registries": {
    "prefix": "ntnx_karbon_registries",
    "description": "Create and delete the private registry entry in Karbon.",
    "body": [
      "nutanix.ncp.ntnx_karbon_registries:",
      "\tname: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#cert: ${5:}",
      "\t#nutanix_port: ${6:9440}",
      "\t#password: ${7:}",
      "\t#port: ${8:5000}",
      "\t#state: ${9:#present|absent}",
      "\t#url: ${10:}",
      "\t#username: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#wait: ${13:true}"
    ]
  },
  "ntnx_karbon_registries_info": {
    "prefix": "ntnx_karbon_registries_info",
    "description": "registry  info module",
    "body": [
      "nutanix.ncp.ntnx_karbon_registries_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#nutanix_port: ${4:9440}",
      "\t#registry_name: ${5:}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "ntnx_ndb_authorize_db_server_vms": {
    "prefix": "ntnx_ndb_authorize_db_server_vms",
    "description": "module for authorizing db server vm",
    "body": [
      "nutanix.ncp.ntnx_ndb_authorize_db_server_vms:",
      "\tdb_server_vms: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\ttime_machine: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#timeout: ${7:2100}",
      "\t#validate_certs: ${8:true}",
      "\t#wait: ${9:true}"
    ]
  },
  "ntnx_ndb_clones_info": {
    "prefix": "ntnx_ndb_clones_info",
    "description": "info module for database clones",
    "body": [
      "nutanix.ncp.ntnx_ndb_clones_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#name: ${4:}",
      "\t#uuid: ${5:}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "ntnx_ndb_clusters": {
    "prefix": "ntnx_ndb_clusters",
    "description": "Create, Update and Delete NDB clusters",
    "body": [
      "nutanix.ncp.ntnx_ndb_clusters:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#agent_network: ${4:}",
      "\t#cluster_credentials: ${5:}",
      "\t#cluster_ip: ${6:}",
      "\t#desc: ${7:}",
      "\t#name: ${8:}",
      "\t#name_prefix: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#storage_container: ${11:}",
      "\t#timeout: ${12:2100}",
      "\t#uuid: ${13:}",
      "\t#validate_certs: ${14:true}",
      "\t#vlan_access: ${15:}",
      "\t#wait: ${16:true}"
    ]
  },
  "ntnx_ndb_clusters_info": {
    "prefix": "ntnx_ndb_clusters_info",
    "description": "info module for ndb clusters info",
    "body": [
      "nutanix.ncp.ntnx_ndb_clusters_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#filters: ${4:}",
      "\t#name: ${5:}",
      "\t#uuid: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "ntnx_ndb_database_clone_refresh": {
    "prefix": "ntnx_ndb_database_clone_refresh",
    "description": "module for database clone refresh.",
    "body": [
      "nutanix.ncp.ntnx_ndb_database_clone_refresh:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#pitr_timestamp: ${4:}",
      "\t#snapshot_uuid: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#timeout: ${7:2100}",
      "\t#timezone: ${8:Asia/Calcutta}",
      "\t#uuid: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_ndb_database_clones": {
    "prefix": "ntnx_ndb_database_clones",
    "description": "module for create, update and delete of ndb database clones",
    "body": [
      "nutanix.ncp.ntnx_ndb_database_clones:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#db_params_profile: ${4:}",
      "\t#db_vm: ${5:}",
      "\t#delete_from_vm: ${6:}",
      "\t#desc: ${7:}",
      "\t#name: ${8:}",
      "\t#postgres: ${9:}",
      "\t#refresh_schedule: ${10:}",
      "\t#removal_schedule: ${11:}",
      "\t#soft_remove: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#tags: ${14:}",
      "\t#time_machine: ${15:}",
      "\t#timeout: ${16:2100}",
      "\t#uuid: ${17:}",
      "\t#validate_certs: ${18:true}",
      "\t#wait: ${19:true}"
    ]
  },
  "ntnx_ndb_database_log_catchup": {
    "prefix": "ntnx_ndb_database_log_catchup",
    "description": "module for performing log catchups action",
    "body": [
      "nutanix.ncp.ntnx_ndb_database_log_catchup:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\ttime_machine_uuid: ${4:}",
      "\t#for_restore: ${5:false}",
      "\t#state: ${6:#present|absent}",
      "\t#timeout: ${7:2100}",
      "\t#validate_certs: ${8:true}",
      "\t#wait: ${9:true}"
    ]
  },
  "ntnx_ndb_database_restore": {
    "prefix": "ntnx_ndb_database_restore",
    "description": "module for restoring database instance",
    "body": [
      "nutanix.ncp.ntnx_ndb_database_restore:",
      "\tdb_uuid: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#pitr_timestamp: ${5:}",
      "\t#snapshot_uuid: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#timeout: ${8:2100}",
      "\t#timezone: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_ndb_database_scale": {
    "prefix": "ntnx_ndb_database_scale",
    "description": "module for scaling database instance",
    "body": [
      "nutanix.ncp.ntnx_ndb_database_scale:",
      "\tdb_uuid: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\tstorage_gb: ${5:}",
      "\t#post_update_cmd: ${6:}",
      "\t#pre_update_cmd: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:2100}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_ndb_database_snapshots": {
    "prefix": "ntnx_ndb_database_snapshots",
    "description": "module for creating, updating and deleting database snapshots",
    "body": [
      "nutanix.ncp.ntnx_ndb_database_snapshots:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#clusters: ${4:}",
      "\t#expiry_days: ${5:}",
      "\t#name: ${6:}",
      "\t#remove_expiry: ${7:}",
      "\t#snapshot_uuid: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#time_machine_uuid: ${10:}",
      "\t#timeout: ${11:2100}",
      "\t#validate_certs: ${12:true}",
      "\t#wait: ${13:true}"
    ]
  },
  "ntnx_ndb_databases": {
    "prefix": "ntnx_ndb_databases",
    "description": "Module for create, update and delete of single instance database. Currently, postgres type database is officially supported.",
    "body": [
      "nutanix.ncp.ntnx_ndb_databases:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#auto_tune_staging_drive: ${4:true}",
      "\t#automated_patching: ${5:}",
      "\t#db_params_profile: ${6:}",
      "\t#db_server_cluster: ${7:}",
      "\t#db_uuid: ${8:}",
      "\t#db_vm: ${9:}",
      "\t#delete_db_from_vm: ${10:}",
      "\t#delete_db_server_vms: ${11:}",
      "\t#delete_time_machine: ${12:}",
      "\t#desc: ${13:}",
      "\t#name: ${14:}",
      "\t#postgres: ${15:}",
      "\t#soft_delete: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#tags: ${18:}",
      "\t#time_machine: ${19:}",
      "\t#timeout: ${20:2100}",
      "\t#unregister_db_server_vms: ${21:}",
      "\t#validate_certs: ${22:true}",
      "\t#wait: ${23:true}"
    ]
  },
  "ntnx_ndb_databases_info": {
    "prefix": "ntnx_ndb_databases_info",
    "description": "info module for ndb database instances",
    "body": [
      "nutanix.ncp.ntnx_ndb_databases_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#filters: ${4:}",
      "\t#name: ${5:}",
      "\t#uuid: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "ntnx_ndb_db_server_vms": {
    "prefix": "ntnx_ndb_db_server_vms",
    "description": "module for create, delete and update of database server vms",
    "body": [
      "nutanix.ncp.ntnx_ndb_db_server_vms:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#automated_patching: ${4:}",
      "\t#cluster: ${5:}",
      "\t#compute_profile: ${6:}",
      "\t#database_type: ${7:postgres_database}",
      "\t#delete_from_cluster: ${8:false}",
      "\t#delete_vgs: ${9:false}",
      "\t#delete_vm_snapshots: ${10:false}",
      "\t#desc: ${11:}",
      "\t#name: ${12:}",
      "\t#network_profile: ${13:}",
      "\t#password: ${14:}",
      "\t#pub_ssh_key: ${15:}",
      "\t#reset_desc_in_ntnx_cluster: ${16:false}",
      "\t#reset_name_in_ntnx_cluster: ${17:false}",
      "\t#soft_remove: ${18:false}",
      "\t#software_profile: ${19:}",
      "\t#state: ${20:#present|absent}",
      "\t#tags: ${21:}",
      "\t#time_machine: ${22:}",
      "\t#time_zone: ${23:Asia/Calcutta}",
      "\t#timeout: ${24:2100}",
      "\t#update_credentials: ${25:}",
      "\t#uuid: ${26:}",
      "\t#validate_certs: ${27:true}",
      "\t#wait: ${28:true}"
    ]
  },
  "ntnx_ndb_db_servers_info": {
    "prefix": "ntnx_ndb_db_servers_info",
    "description": "info module for ndb db server vms info",
    "body": [
      "nutanix.ncp.ntnx_ndb_db_servers_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#filters: ${4:}",
      "\t#name: ${5:}",
      "\t#server_ip: ${6:}",
      "\t#uuid: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "ntnx_ndb_linked_databases": {
    "prefix": "ntnx_ndb_linked_databases",
    "description": "module to manage linked databases of a database instance",
    "body": [
      "nutanix.ncp.ntnx_ndb_linked_databases:",
      "\tdb_instance_uuid: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#database_uuid: ${5:}",
      "\t#databases: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#timeout: ${8:2100}",
      "\t#validate_certs: ${9:true}",
      "\t#wait: ${10:true}"
    ]
  },
  "ntnx_ndb_maintenance_tasks": {
    "prefix": "ntnx_ndb_maintenance_tasks",
    "description": "module to add and remove maintenance related tasks",
    "body": [
      "nutanix.ncp.ntnx_ndb_maintenance_tasks:",
      "\tmaintenance_window: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#db_server_clusters: ${5:}",
      "\t#db_server_vms: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#tasks: ${8:}",
      "\t#timeout: ${9:2100}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_ndb_maintenance_window": {
    "prefix": "ntnx_ndb_maintenance_window",
    "description": "module to create, update and delete mainetance window",
    "body": [
      "nutanix.ncp.ntnx_ndb_maintenance_window:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#desc: ${4:}",
      "\t#name: ${5:}",
      "\t#schedule: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#timeout: ${8:2100}",
      "\t#uuid: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_ndb_maintenance_windows_info": {
    "prefix": "ntnx_ndb_maintenance_windows_info",
    "description": "module for fetching maintenance windows info",
    "body": [
      "nutanix.ncp.ntnx_ndb_maintenance_windows_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#uuid: ${4:}",
      "\t#validate_certs: ${5:true}"
    ]
  },
  "ntnx_ndb_profiles": {
    "prefix": "ntnx_ndb_profiles",
    "description": "module for create, update and delete of profiles",
    "body": [
      "nutanix.ncp.ntnx_ndb_profiles:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#clusters: ${4:}",
      "\t#compute: ${5:}",
      "\t#database_parameter: ${6:}",
      "\t#database_type: ${7:postgres}",
      "\t#desc: ${8:}",
      "\t#name: ${9:}",
      "\t#network: ${10:}",
      "\t#profile_uuid: ${11:}",
      "\t#software: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#timeout: ${14:2100}",
      "\t#type: ${15:software|compute|network|database_parameter}",
      "\t#validate_certs: ${16:true}",
      "\t#wait: ${17:true}"
    ]
  },
  "ntnx_ndb_profiles_info": {
    "prefix": "ntnx_ndb_profiles_info",
    "description": "info module for ndb profiles",
    "body": [
      "nutanix.ncp.ntnx_ndb_profiles_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#filters: ${4:}",
      "\t#include_available_ips: ${5:false}",
      "\t#latest_version: ${6:false}",
      "\t#name: ${7:}",
      "\t#uuid: ${8:}",
      "\t#validate_certs: ${9:true}",
      "\t#version_id: ${10:}"
    ]
  },
  "ntnx_ndb_register_database": {
    "prefix": "ntnx_ndb_register_database",
    "description": "module for database instance registration",
    "body": [
      "nutanix.ncp.ntnx_ndb_register_database:",
      "\tdb_vm: ${1:}",
      "\tname: ${2:}",
      "\tnutanix_host: ${3:}",
      "\tnutanix_password: ${4:}",
      "\tnutanix_username: ${5:}",
      "\ttime_machine: ${6:}",
      "\t#auto_tune_staging_drive: ${7:}",
      "\t#automated_patching: ${8:}",
      "\t#desc: ${9:}",
      "\t#postgres: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#tags: ${12:}",
      "\t#timeout: ${13:2100}",
      "\t#validate_certs: ${14:true}",
      "\t#wait: ${15:true}",
      "\t#working_directory: ${16:/tmp}"
    ]
  },
  "ntnx_ndb_register_db_server_vm": {
    "prefix": "ntnx_ndb_register_db_server_vm",
    "description": "module for registration of database server vm",
    "body": [
      "nutanix.ncp.ntnx_ndb_register_db_server_vm:",
      "\tcluster: ${1:}",
      "\tip: ${2:}",
      "\tnutanix_host: ${3:}",
      "\tnutanix_password: ${4:}",
      "\tnutanix_username: ${5:}",
      "\tusername: ${6:}",
      "\t#automated_patching: ${7:}",
      "\t#desc: ${8:}",
      "\t#password: ${9:}",
      "\t#postgres: ${10:}",
      "\t#private_ssh_key: ${11:}",
      "\t#reset_desc_in_ntnx_cluster: ${12:false}",
      "\t#state: ${13:#present|absent}",
      "\t#timeout: ${14:2100}",
      "\t#validate_certs: ${15:true}",
      "\t#wait: ${16:true}",
      "\t#working_directory: ${17:/tmp}"
    ]
  },
  "ntnx_ndb_replicate_database_snapshots": {
    "prefix": "ntnx_ndb_replicate_database_snapshots",
    "description": "module for replicating database snapshots across clusters of time machine",
    "body": [
      "nutanix.ncp.ntnx_ndb_replicate_database_snapshots:",
      "\tclusters: ${1:}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#expiry_days: ${5:}",
      "\t#snapshot_uuid: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#timeout: ${8:2100}",
      "\t#validate_certs: ${9:true}",
      "\t#wait: ${10:true}"
    ]
  },
  "ntnx_ndb_slas": {
    "prefix": "ntnx_ndb_slas",
    "description": "moudle for creating, updating and deleting slas",
    "body": [
      "nutanix.ncp.ntnx_ndb_slas:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#desc: ${4:}",
      "\t#frequency: ${5:}",
      "\t#name: ${6:}",
      "\t#sla_uuid: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#timeout: ${9:2100}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_ndb_slas_info": {
    "prefix": "ntnx_ndb_slas_info",
    "description": "info module for ndb slas",
    "body": [
      "nutanix.ncp.ntnx_ndb_slas_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#name: ${4:}",
      "\t#uuid: ${5:}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "ntnx_ndb_snapshots_info": {
    "prefix": "ntnx_ndb_snapshots_info",
    "description": "info module for ndb snapshots info",
    "body": [
      "nutanix.ncp.ntnx_ndb_snapshots_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#filters: ${4:}",
      "\t#get_files: ${5:}",
      "\t#uuid: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "ntnx_ndb_stretched_vlans": {
    "prefix": "ntnx_ndb_stretched_vlans",
    "description": "Module for create, update and delete of stretched vlan.",
    "body": [
      "nutanix.ncp.ntnx_ndb_stretched_vlans:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#desc: ${4:}",
      "\t#gateway: ${5:}",
      "\t#name: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#stretched_vlan_uuid: ${8:}",
      "\t#subnet_mask: ${9:}",
      "\t#timeout: ${10:2100}",
      "\t#validate_certs: ${11:true}",
      "\t#vlans: ${12:}",
      "\t#wait: ${13:true}"
    ]
  },
  "ntnx_ndb_tags": {
    "prefix": "ntnx_ndb_tags",
    "description": "module for create, update and delete of tags",
    "body": [
      "nutanix.ncp.ntnx_ndb_tags:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#desc: ${4:}",
      "\t#entity_type: ${5:DATABASE|CLONE|TIME_MACHINE|DATABASE_SERVER}",
      "\t#name: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#status: ${8:ENABLED|DEPRECATED}",
      "\t#tag_value_required: ${9:}",
      "\t#timeout: ${10:2100}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#wait: ${13:true}"
    ]
  },
  "ntnx_ndb_tags_info": {
    "prefix": "ntnx_ndb_tags_info",
    "description": "info module for ndb tags info",
    "body": [
      "nutanix.ncp.ntnx_ndb_tags_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#filters: ${4:}",
      "\t#name: ${5:}",
      "\t#uuid: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "ntnx_ndb_time_machine_clusters": {
    "prefix": "ntnx_ndb_time_machine_clusters",
    "description": "Module for create, update and delete for data access management in time machines.",
    "body": [
      "nutanix.ncp.ntnx_ndb_time_machine_clusters:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\ttime_machine_uuid: ${4:}",
      "\t#cluster: ${5:}",
      "\t#sla: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#timeout: ${8:2100}",
      "\t#type: ${9:#OTHER|PRIMARY}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_ndb_time_machines_info": {
    "prefix": "ntnx_ndb_time_machines_info",
    "description": "info module for ndb time machines",
    "body": [
      "nutanix.ncp.ntnx_ndb_time_machines_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#filters: ${4:}",
      "\t#name: ${5:}",
      "\t#uuid: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "ntnx_ndb_vlans": {
    "prefix": "ntnx_ndb_vlans",
    "description": "Module for create, update and delete of ndb vlan.",
    "body": [
      "nutanix.ncp.ntnx_ndb_vlans:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#cluster: ${4:}",
      "\t#dns_domain: ${5:}",
      "\t#gateway: ${6:}",
      "\t#ip_pools: ${7:}",
      "\t#name: ${8:}",
      "\t#primary_dns: ${9:}",
      "\t#remove_ip_pools: ${10:}",
      "\t#secondary_dns: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#subnet_mask: ${13:}",
      "\t#timeout: ${14:2100}",
      "\t#validate_certs: ${15:true}",
      "\t#vlan_type: ${16:DHCP|Static}",
      "\t#vlan_uuid: ${17:}",
      "\t#wait: ${18:true}"
    ]
  },
  "ntnx_ndb_vlans_info": {
    "prefix": "ntnx_ndb_vlans_info",
    "description": "info module for ndb vlans",
    "body": [
      "nutanix.ncp.ntnx_ndb_vlans_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#name: ${4:}",
      "\t#uuid: ${5:}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "ntnx_pbrs": {
    "prefix": "ntnx_pbrs",
    "description": "pbr module which supports pbr CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_pbrs:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#action: ${4:}",
      "\t#destination: ${5:}",
      "\t#nutanix_port: ${6:9440}",
      "\t#pbr_uuid: ${7:}",
      "\t#priority: ${8:}",
      "\t#protocol: ${9:}",
      "\t#source: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#validate_certs: ${12:true}",
      "\t#vpc: ${13:}",
      "\t#wait: ${14:true}"
    ]
  },
  "ntnx_pbrs_info": {
    "prefix": "ntnx_pbrs_info",
    "description": "PBR  info module",
    "body": [
      "nutanix.ncp.ntnx_pbrs_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:routing_policy}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#pbr_uuid: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_permissions_info": {
    "prefix": "ntnx_permissions_info",
    "description": "permissions info module",
    "body": [
      "nutanix.ncp.ntnx_permissions_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:permission}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#permission_uuid: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_projects": {
    "prefix": "ntnx_projects",
    "description": "module for create, update and delete pc projects",
    "body": [
      "nutanix.ncp.ntnx_projects:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#accounts: ${4:}",
      "\t#clusters: ${5:}",
      "\t#collaboration: ${6:}",
      "\t#default_subnet: ${7:}",
      "\t#desc: ${8:}",
      "\t#external_user_groups: ${9:}",
      "\t#name: ${10:}",
      "\t#nutanix_port: ${11:9440}",
      "\t#project_uuid: ${12:}",
      "\t#resource_limits: ${13:}",
      "\t#role_mappings: ${14:}",
      "\t#state: ${15:#present|absent}",
      "\t#subnets: ${16:}",
      "\t#users: ${17:}",
      "\t#validate_certs: ${18:true}",
      "\t#vpcs: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "ntnx_projects_info": {
    "prefix": "ntnx_projects_info",
    "description": "projects info module",
    "body": [
      "nutanix.ncp.ntnx_projects_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#include_acps: ${6:false}",
      "\t#kind: ${7:project}",
      "\t#length: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#project_uuid: ${11:}",
      "\t#sort_attribute: ${12:}",
      "\t#sort_order: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "ntnx_protection_rules": {
    "prefix": "ntnx_protection_rules",
    "description": "module for create, update and delete protection rule",
    "body": [
      "nutanix.ncp.ntnx_protection_rules:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#desc: ${4:}",
      "\t#name: ${5:}",
      "\t#nutanix_port: ${6:9440}",
      "\t#primary_site: ${7:}",
      "\t#protected_categories: ${8:}",
      "\t#rule_uuid: ${9:}",
      "\t#schedules: ${10:}",
      "\t#start_time: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}",
      "\t#wait: ${14:true}"
    ]
  },
  "ntnx_protection_rules_info": {
    "prefix": "ntnx_protection_rules_info",
    "description": "protection rule info module",
    "body": [
      "nutanix.ncp.ntnx_protection_rules_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:protection_rule}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#rule_uuid: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:ASCENDING|DESCENDING}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_recovery_plan_jobs": {
    "prefix": "ntnx_recovery_plan_jobs",
    "description": "Create/Run recovery plan jobs related to recovery plan",
    "body": [
      "nutanix.ncp.ntnx_recovery_plan_jobs:",
      "\taction: ${1:VALIDATE|MIGRATE|FAILOVER|TEST_FAILOVER|LIVE_MIGRATE|CLEANUP}",
      "\tnutanix_host: ${2:}",
      "\tnutanix_password: ${3:}",
      "\tnutanix_username: ${4:}",
      "\t#failed_site: ${5:}",
      "\t#ignore_validation_failures: ${6:}",
      "\t#job_uuid: ${7:}",
      "\t#name: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#recovery_plan: ${10:}",
      "\t#recovery_reference_time: ${11:}",
      "\t#recovery_site: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#validate_certs: ${14:true}",
      "\t#wait: ${15:true}"
    ]
  },
  "ntnx_recovery_plan_jobs_info": {
    "prefix": "ntnx_recovery_plan_jobs_info",
    "description": "recovery plan jobs info module",
    "body": [
      "nutanix.ncp.ntnx_recovery_plan_jobs_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#job_uuid: ${6:}",
      "\t#kind: ${7:recovery_plan_job}",
      "\t#length: ${8:}",
      "\t#nutanix_port: ${9:9440}",
      "\t#offset: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:ASCENDING|DESCENDING}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_recovery_plans": {
    "prefix": "ntnx_recovery_plans",
    "description": "module which supports recovery_plans CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_recovery_plans:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#desc: ${4:}",
      "\t#floating_ip_assignments: ${5:}",
      "\t#name: ${6:}",
      "\t#network_mappings: ${7:}",
      "\t#network_type: ${8:STRETCH|NON_STRETCH}",
      "\t#nutanix_port: ${9:9440}",
      "\t#plan_uuid: ${10:}",
      "\t#primary_location: ${11:}",
      "\t#recovery_location: ${12:}",
      "\t#stages: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#validate_certs: ${15:true}",
      "\t#wait: ${16:true}"
    ]
  },
  "ntnx_recovery_plans_info": {
    "prefix": "ntnx_recovery_plans_info",
    "description": "recovery plan info module",
    "body": [
      "nutanix.ncp.ntnx_recovery_plans_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:recovery_plan}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#plan_uuid: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:ASCENDING|DESCENDING}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_roles": {
    "prefix": "ntnx_roles",
    "description": "module which supports role CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_roles:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#desc: ${4:}",
      "\t#name: ${5:}",
      "\t#nutanix_port: ${6:9440}",
      "\t#permissions: ${7:}",
      "\t#role_uuid: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_roles_info": {
    "prefix": "ntnx_roles_info",
    "description": "role info module",
    "body": [
      "nutanix.ncp.ntnx_roles_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:role}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#role_uuid: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_security_rules": {
    "prefix": "ntnx_security_rules",
    "description": "security_rule module which suports security_rule CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_security_rules:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#allow_ipv6_traffic: ${4:}",
      "\t#app_rule: ${5:}",
      "\t#isolation_rule: ${6:}",
      "\t#name: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#policy_hitlog: ${9:}",
      "\t#quarantine_rule: ${10:}",
      "\t#security_rule_uuid: ${11:}",
      "\t#state: ${12:#present|absent}",
      "\t#validate_certs: ${13:true}",
      "\t#vdi_rule: ${14:}",
      "\t#wait: ${15:true}"
    ]
  },
  "ntnx_security_rules_info": {
    "prefix": "ntnx_security_rules_info",
    "description": "security_rule info module",
    "body": [
      "nutanix.ncp.ntnx_security_rules_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:network_security_rule}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#security_rule_uuid: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:ASCENDING|DESCENDING}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_service_groups": {
    "prefix": "ntnx_service_groups",
    "description": "service_groups module which suports service_groups CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_service_groups:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#desc: ${4:}",
      "\t#name: ${5:}",
      "\t#nutanix_port: ${6:9440}",
      "\t#service_details: ${7:}",
      "\t#service_group_uuid: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}",
      "\t#wait: ${11:true}"
    ]
  },
  "ntnx_service_groups_info": {
    "prefix": "ntnx_service_groups_info",
    "description": "service_group info module",
    "body": [
      "nutanix.ncp.ntnx_service_groups_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:service_group}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#service_group_uuid: ${10:}",
      "\t#sort_attribute: ${11:}",
      "\t#sort_order: ${12:ASCENDING|DESCENDING}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_static_routes": {
    "prefix": "ntnx_static_routes",
    "description": "module for create/update static routes of vpc",
    "body": [
      "nutanix.ncp.ntnx_static_routes:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\tvpc_uuid: ${4:}",
      "\t#nutanix_port: ${5:9440}",
      "\t#remove_all_routes: ${6:false}",
      "\t#state: ${7:#present|absent}",
      "\t#static_routes: ${8:}",
      "\t#validate_certs: ${9:true}",
      "\t#wait: ${10:true}"
    ]
  },
  "ntnx_static_routes_info": {
    "prefix": "ntnx_static_routes_info",
    "description": "static routes info module",
    "body": [
      "nutanix.ncp.ntnx_static_routes_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\tvpc_uuid: ${4:}",
      "\t#nutanix_port: ${5:9440}",
      "\t#state: ${6:#present|absent}",
      "\t#validate_certs: ${7:true}",
      "\t#wait: ${8:true}"
    ]
  },
  "ntnx_subnets": {
    "prefix": "ntnx_subnets",
    "description": "subnets module which supports subnet CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_subnets:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#external_subnet: ${4:}",
      "\t#name: ${5:}",
      "\t#nutanix_port: ${6:9440}",
      "\t#overlay_subnet: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#subnet_uuid: ${9:}",
      "\t#validate_certs: ${10:true}",
      "\t#vlan_subnet: ${11:}",
      "\t#wait: ${12:true}"
    ]
  },
  "ntnx_subnets_info": {
    "prefix": "ntnx_subnets_info",
    "description": "subnet info module",
    "body": [
      "nutanix.ncp.ntnx_subnets_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:subnet}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#sort_attribute: ${10:}",
      "\t#sort_order: ${11:}",
      "\t#subnet_uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_user_groups": {
    "prefix": "ntnx_user_groups",
    "description": "user_groups module which supports pc user_groups management create delete operations",
    "body": [
      "nutanix.ncp.ntnx_user_groups:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#categories: ${4:}",
      "\t#distinguished_name: ${5:}",
      "\t#idp: ${6:}",
      "\t#nutanix_port: ${7:9440}",
      "\t#project: ${8:}",
      "\t#remove_categories: ${9:false}",
      "\t#state: ${10:#present|absent}",
      "\t#user_group_uuid: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#wait: ${13:true}"
    ]
  },
  "ntnx_user_groups_info": {
    "prefix": "ntnx_user_groups_info",
    "description": "User Groups info module",
    "body": [
      "nutanix.ncp.ntnx_user_groups_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:user_group}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#sort_attribute: ${10:}",
      "\t#sort_order: ${11:}",
      "\t#usergroup_uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_users": {
    "prefix": "ntnx_users",
    "description": "users module which supports pc users management create delete operations",
    "body": [
      "nutanix.ncp.ntnx_users:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#categories: ${4:}",
      "\t#directory_service_uuid: ${5:}",
      "\t#identity_provider_uuid: ${6:}",
      "\t#nutanix_port: ${7:9440}",
      "\t#principal_name: ${8:}",
      "\t#project: ${9:}",
      "\t#remove_categories: ${10:false}",
      "\t#state: ${11:#present|absent}",
      "\t#user_uuid: ${12:}",
      "\t#username: ${13:}",
      "\t#validate_certs: ${14:true}",
      "\t#wait: ${15:true}"
    ]
  },
  "ntnx_users_info": {
    "prefix": "ntnx_users_info",
    "description": "users info module",
    "body": [
      "nutanix.ncp.ntnx_users_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:user}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#sort_attribute: ${10:}",
      "\t#sort_order: ${11:}",
      "\t#user_uuid: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "ntnx_vms": {
    "prefix": "ntnx_vms",
    "description": "VM module which supports VM CRUD states",
    "body": [
      "nutanix.ncp.ntnx_vms:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#boot_config: ${4:}",
      "\t#categories: ${5:}",
      "\t#cluster: ${6:}",
      "\t#cores_per_vcpu: ${7:}",
      "\t#desc: ${8:}",
      "\t#disks: ${9:}",
      "\t#force_power_off: ${10:false}",
      "\t#guest_customization: ${11:}",
      "\t#memory_gb: ${12:}",
      "\t#name: ${13:}",
      "\t#networks: ${14:}",
      "\t#nutanix_port: ${15:9440}",
      "\t#project: ${16:}",
      "\t#remove_categories: ${17:false}",
      "\t#state: ${18:#present|absent|power_on|power_off|soft_shutdown|hard_poweroff}",
      "\t#timezone: ${19:UTC}",
      "\t#validate_certs: ${20:true}",
      "\t#vcpus: ${21:}",
      "\t#vm_uuid: ${22:}",
      "\t#wait: ${23:true}"
    ]
  },
  "ntnx_vms_clone": {
    "prefix": "ntnx_vms_clone",
    "description": "VM module which supports VM clone operations",
    "body": [
      "nutanix.ncp.ntnx_vms_clone:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\tsrc_vm_uuid: ${4:}",
      "\t#boot_config: ${5:}",
      "\t#categories: ${6:}",
      "\t#cluster: ${7:}",
      "\t#cores_per_vcpu: ${8:}",
      "\t#force_power_off: ${9:false}",
      "\t#guest_customization: ${10:}",
      "\t#memory_gb: ${11:}",
      "\t#name: ${12:}",
      "\t#networks: ${13:}",
      "\t#nutanix_port: ${14:9440}",
      "\t#project: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#timezone: ${17:UTC}",
      "\t#validate_certs: ${18:true}",
      "\t#vcpus: ${19:}",
      "\t#wait: ${20:true}"
    ]
  },
  "ntnx_vms_info": {
    "prefix": "ntnx_vms_info",
    "description": "VM  info module",
    "body": [
      "nutanix.ncp.ntnx_vms_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:vm}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#sort_attribute: ${10:}",
      "\t#sort_order: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#vm_uuid: ${13:}"
    ]
  },
  "ntnx_vms_ova": {
    "prefix": "ntnx_vms_ova",
    "description": "VM module which supports ova creation",
    "body": [
      "nutanix.ncp.ntnx_vms_ova:",
      "\tfile_format: ${1:QCOW2|VMDK}",
      "\tname: ${2:}",
      "\tnutanix_host: ${3:}",
      "\tnutanix_password: ${4:}",
      "\tnutanix_username: ${5:}",
      "\tsrc_vm_uuid: ${6:}",
      "\t#nutanix_port: ${7:9440}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:true}",
      "\t#wait: ${10:true}"
    ]
  },
  "ntnx_vpcs": {
    "prefix": "ntnx_vpcs",
    "description": "Virtual Private Cloud (VPC) module which supports vpc CRUD operations",
    "body": [
      "nutanix.ncp.ntnx_vpcs:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#dns_servers: ${4:}",
      "\t#external_subnets: ${5:}",
      "\t#name: ${6:}",
      "\t#nutanix_port: ${7:9440}",
      "\t#routable_ips: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}",
      "\t#vpc_uuid: ${11:}",
      "\t#wait: ${12:true}"
    ]
  },
  "ntnx_vpcs_info": {
    "prefix": "ntnx_vpcs_info",
    "description": "vpc info module",
    "body": [
      "nutanix.ncp.ntnx_vpcs_info:",
      "\tnutanix_host: ${1:}",
      "\tnutanix_password: ${2:}",
      "\tnutanix_username: ${3:}",
      "\t#custom_filter: ${4:}",
      "\t#filter: ${5:}",
      "\t#kind: ${6:vpc}",
      "\t#length: ${7:}",
      "\t#nutanix_port: ${8:9440}",
      "\t#offset: ${9:}",
      "\t#sort_attribute: ${10:}",
      "\t#sort_order: ${11:}",
      "\t#validate_certs: ${12:true}",
      "\t#vpc_uuid: ${13:}"
    ]
  },
  "activation_key": {
    "prefix": "activation_key",
    "description": "Manage Activation Keys",
    "body": [
      "theforeman.foreman.activation_key:",
      "\tname: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#auto_attach: ${6:}",
      "\t#content_overrides: ${7:}",
      "\t#content_view: ${8:}",
      "\t#description: ${9:}",
      "\t#host_collections: ${10:}",
      "\t#lifecycle_environment: ${11:}",
      "\t#max_hosts: ${12:}",
      "\t#new_name: ${13:}",
      "\t#purpose_addons: ${14:}",
      "\t#purpose_role: ${15:}",
      "\t#purpose_usage: ${16:}",
      "\t#release_version: ${17:}",
      "\t#service_level: ${18:Self-Support|Standard|Premium}",
      "\t#state: ${19:#present|present_with_defaults|absent|copied}",
      "\t#subscriptions: ${20:}",
      "\t#unlimited_hosts: ${21:}",
      "\t#validate_certs: ${22:true}"
    ]
  },
  "architecture": {
    "prefix": "architecture",
    "description": "Manage Architectures",
    "body": [
      "theforeman.foreman.architecture:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#operatingsystems: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#updated_name: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "auth_source_ldap": {
    "prefix": "auth_source_ldap",
    "description": "Manage LDAP Authentication Sources",
    "body": [
      "theforeman.foreman.auth_source_ldap:",
      "\thost: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#account: ${6:}",
      "\t#account_password: ${7:}",
      "\t#attr_firstname: ${8:}",
      "\t#attr_lastname: ${9:}",
      "\t#attr_login: ${10:}",
      "\t#attr_mail: ${11:}",
      "\t#attr_photo: ${12:}",
      "\t#base_dn: ${13:}",
      "\t#groups_base: ${14:}",
      "\t#ldap_filter: ${15:}",
      "\t#locations: ${16:}",
      "\t#onthefly_register: ${17:}",
      "\t#organizations: ${18:}",
      "\t#port: ${19:389}",
      "\t#server_type: ${20:free_ipa|active_directory|posix}",
      "\t#state: ${21:#present|absent}",
      "\t#tls: ${22:}",
      "\t#use_netgroups: ${23:}",
      "\t#usergroup_sync: ${24:}",
      "\t#validate_certs: ${25:true}"
    ]
  },
  "bookmark": {
    "prefix": "bookmark",
    "description": "Manage Bookmarks",
    "body": [
      "theforeman.foreman.bookmark:",
      "\tcontroller: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#public: ${6:true}",
      "\t#query: ${7:}",
      "\t#state: ${8:#present|present_with_defaults|absent}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "compute_attribute": {
    "prefix": "compute_attribute",
    "description": "Manage Compute Attributes",
    "body": [
      "theforeman.foreman.compute_attribute:",
      "\tcompute_profile: ${1:}",
      "\tcompute_resource: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#validate_certs: ${7:true}",
      "\t#vm_attrs: ${8:}"
    ]
  },
  "compute_profile": {
    "prefix": "compute_profile",
    "description": "Manage Compute Profiles",
    "body": [
      "theforeman.foreman.compute_profile:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#compute_attributes: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#updated_name: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "compute_resource": {
    "prefix": "compute_resource",
    "description": "Manage Compute Resources",
    "body": [
      "theforeman.foreman.compute_resource:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#description: ${5:}",
      "\t#locations: ${6:}",
      "\t#organizations: ${7:}",
      "\t#provider: ${8:vmware|libvirt|ovirt|proxmox|EC2|AzureRm|GCE|Openstack}",
      "\t#provider_params: ${9:}",
      "\t#state: ${10:#present|present_with_defaults|absent}",
      "\t#updated_name: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "config_group": {
    "prefix": "config_group",
    "description": "Manage (Puppet) Config Groups",
    "body": [
      "theforeman.foreman.config_group:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#puppetclasses: ${5:}",
      "\t#state: ${6:#present|absent}",
      "\t#updated_name: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "content_credential": {
    "prefix": "content_credential",
    "description": "Manage Content Credentials",
    "body": [
      "theforeman.foreman.content_credential:",
      "\tname: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#content: ${6:}",
      "\t#content_type: ${7:gpg_key|cert}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "content_export_info": {
    "prefix": "content_export_info",
    "description": "List content exports",
    "body": [
      "theforeman.foreman.content_export_info:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#content_view: ${5:}",
      "\t#content_view_version: ${6:}",
      "\t#destination_server: ${7:}",
      "\t#id: ${8:}",
      "\t#location: ${9:}",
      "\t#search: ${10:}",
      "\t#type: ${11:complete|incremental}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "content_export_library": {
    "prefix": "content_export_library",
    "description": "Manage library content exports",
    "body": [
      "theforeman.foreman.content_export_library:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#chunk_size_gb: ${5:}",
      "\t#destination_server: ${6:}",
      "\t#fail_on_missing_content: ${7:}",
      "\t#format: ${8:syncable|importable}",
      "\t#from_history_id: ${9:}",
      "\t#incremental: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "content_export_repository": {
    "prefix": "content_export_repository",
    "description": "Manage repository content exports",
    "body": [
      "theforeman.foreman.content_export_repository:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tproduct: ${3:}",
      "\trepository: ${4:}",
      "\tserver_url: ${5:}",
      "\tusername: ${6:}",
      "\t#chunk_size_gb: ${7:}",
      "\t#format: ${8:syncable|importable}",
      "\t#from_history_id: ${9:}",
      "\t#incremental: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "content_export_version": {
    "prefix": "content_export_version",
    "description": "Manage content view version content exports",
    "body": [
      "theforeman.foreman.content_export_version:",
      "\tcontent_view: ${1:}",
      "\tcontent_view_version: ${2:}",
      "\torganization: ${3:}",
      "\tpassword: ${4:}",
      "\tserver_url: ${5:}",
      "\tusername: ${6:}",
      "\t#chunk_size_gb: ${7:}",
      "\t#destination_server: ${8:}",
      "\t#fail_on_missing_content: ${9:}",
      "\t#format: ${10:syncable|importable}",
      "\t#from_history_id: ${11:}",
      "\t#incremental: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "content_upload": {
    "prefix": "content_upload",
    "description": "Upload content to a repository",
    "body": [
      "theforeman.foreman.content_upload:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tproduct: ${3:}",
      "\trepository: ${4:}",
      "\tserver_url: ${5:}",
      "\tsrc: ${6:}",
      "\tusername: ${7:}",
      "\t#ostree_repository_name: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "content_view": {
    "prefix": "content_view",
    "description": "Manage Content Views",
    "body": [
      "theforeman.foreman.content_view:",
      "\tname: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#auto_publish: ${6:false}",
      "\t#components: ${7:}",
      "\t#composite: ${8:false}",
      "\t#description: ${9:}",
      "\t#import_only: ${10:}",
      "\t#label: ${11:}",
      "\t#repositories: ${12:}",
      "\t#solve_dependencies: ${13:}",
      "\t#state: ${14:#present|present_with_defaults|absent}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "content_view_filter": {
    "prefix": "content_view_filter",
    "description": "Manage Content View Filters",
    "body": [
      "theforeman.foreman.content_view_filter:",
      "\tcontent_view: ${1:}",
      "\tfilter_type: ${2:rpm|package_group|erratum|docker|modulemd|deb}",
      "\tname: ${3:}",
      "\torganization: ${4:}",
      "\tpassword: ${5:}",
      "\tserver_url: ${6:}",
      "\tusername: ${7:}",
      "\t#description: ${8:}",
      "\t#inclusion: ${9:false}",
      "\t#original_module_streams: ${10:}",
      "\t#original_packages: ${11:}",
      "\t#repositories: ${12:[]}",
      "\t#state: ${13:#present|absent}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "content_view_filter_info": {
    "prefix": "content_view_filter_info",
    "description": "Fetch information about a Content View Filter",
    "body": [
      "theforeman.foreman.content_view_filter_info:",
      "\tcontent_view: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#location: ${6:}",
      "\t#name: ${7:}",
      "\t#search: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "content_view_filter_rule": {
    "prefix": "content_view_filter_rule",
    "description": "Manage content view filter rules",
    "body": [
      "theforeman.foreman.content_view_filter_rule:",
      "\tcontent_view: ${1:}",
      "\tcontent_view_filter: ${2:}",
      "\torganization: ${3:}",
      "\tpassword: ${4:}",
      "\tserver_url: ${5:}",
      "\tusername: ${6:}",
      "\t#architecture: ${7:}",
      "\t#context: ${8:}",
      "\t#date_type: ${9:issued|#updated}",
      "\t#end_date: ${10:}",
      "\t#errata_id: ${11:}",
      "\t#max_version: ${12:}",
      "\t#min_version: ${13:}",
      "\t#name: ${14:}",
      "\t#start_date: ${15:}",
      "\t#state: ${16:#present|absent}",
      "\t#stream: ${17:}",
      "\t#types: ${18:['bugfix', 'enhancement', 'security']}",
      "\t#validate_certs: ${19:true}",
      "\t#version: ${20:}"
    ]
  },
  "content_view_filter_rule_info": {
    "prefix": "content_view_filter_rule_info",
    "description": "Fetch information about a Content View Filter Rule",
    "body": [
      "theforeman.foreman.content_view_filter_rule_info:",
      "\tcontent_view: ${1:}",
      "\tcontent_view_filter: ${2:}",
      "\torganization: ${3:}",
      "\tpassword: ${4:}",
      "\tserver_url: ${5:}",
      "\tusername: ${6:}",
      "\t#errata_id: ${7:}",
      "\t#location: ${8:}",
      "\t#name: ${9:}",
      "\t#search: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "content_view_info": {
    "prefix": "content_view_info",
    "description": "Fetch information about Content Views",
    "body": [
      "theforeman.foreman.content_view_info:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#location: ${4:}",
      "\t#name: ${5:}",
      "\t#organization: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "content_view_version": {
    "prefix": "content_view_version",
    "description": "Manage Content View Versions",
    "body": [
      "theforeman.foreman.content_view_version:",
      "\tcontent_view: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#current_lifecycle_environment: ${6:}",
      "\t#description: ${7:}",
      "\t#force_promote: ${8:false}",
      "\t#force_yum_metadata_regeneration: ${9:false}",
      "\t#lifecycle_environments: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#validate_certs: ${12:true}",
      "\t#version: ${13:}"
    ]
  },
  "content_view_version_info": {
    "prefix": "content_view_version_info",
    "description": "Fetch information about Content Views",
    "body": [
      "theforeman.foreman.content_view_version_info:",
      "\tcontent_view: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#location: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "discovery_rule": {
    "prefix": "discovery_rule",
    "description": "Manage Host Discovery Rules",
    "body": [
      "theforeman.foreman.discovery_rule:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#enabled: ${5:}",
      "\t#hostgroup: ${6:}",
      "\t#hostname: ${7:}",
      "\t#locations: ${8:}",
      "\t#max_count: ${9:}",
      "\t#organizations: ${10:}",
      "\t#priority: ${11:}",
      "\t#search: ${12:}",
      "\t#state: ${13:#present|absent}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "domain": {
    "prefix": "domain",
    "description": "Manage Domains",
    "body": [
      "theforeman.foreman.domain:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#description: ${5:}",
      "\t#dns_proxy: ${6:}",
      "\t#locations: ${7:}",
      "\t#organizations: ${8:}",
      "\t#parameters: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#updated_name: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "domain_info": {
    "prefix": "domain_info",
    "description": "Fetch information about Domains",
    "body": [
      "theforeman.foreman.domain_info:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#location: ${4:}",
      "\t#name: ${5:}",
      "\t#organization: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "external_usergroup": {
    "prefix": "external_usergroup",
    "description": "Manage External User Groups",
    "body": [
      "theforeman.foreman.external_usergroup:",
      "\tauth_source: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusergroup: ${5:}",
      "\tusername: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "global_parameter": {
    "prefix": "global_parameter",
    "description": "Manage Global Parameters",
    "body": [
      "theforeman.foreman.global_parameter:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#hidden_value: ${5:}",
      "\t#parameter_type: ${6:#string|boolean|integer|real|array|hash|yaml|json}",
      "\t#state: ${7:#present|present_with_defaults|absent}",
      "\t#updated_name: ${8:}",
      "\t#validate_certs: ${9:true}",
      "\t#value: ${10:}"
    ]
  },
  "hardware_model": {
    "prefix": "hardware_model",
    "description": "Manage Hardware Models",
    "body": [
      "theforeman.foreman.hardware_model:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#hardware_model: ${5:}",
      "\t#info: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#validate_certs: ${8:true}",
      "\t#vendor_class: ${9:}"
    ]
  },
  "host": {
    "prefix": "host",
    "description": "Manage Hosts",
    "body": [
      "theforeman.foreman.host:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#activation_keys: ${5:}",
      "\t#architecture: ${6:}",
      "\t#build: ${7:}",
      "\t#comment: ${8:}",
      "\t#compute_attributes: ${9:}",
      "\t#compute_profile: ${10:}",
      "\t#compute_resource: ${11:}",
      "\t#config_groups: ${12:}",
      "\t#content_source: ${13:}",
      "\t#content_view: ${14:}",
      "\t#domain: ${15:}",
      "\t#enabled: ${16:}",
      "\t#environment: ${17:}",
      "\t#hostgroup: ${18:}",
      "\t#image: ${19:}",
      "\t#interfaces_attributes: ${20:}",
      "\t#ip: ${21:}",
      "\t#kickstart_repository: ${22:}",
      "\t#lifecycle_environment: ${23:}",
      "\t#location: ${24:}",
      "\t#mac: ${25:}",
      "\t#managed: ${26:}",
      "\t#medium: ${27:}",
      "\t#openscap_proxy: ${28:}",
      "\t#operatingsystem: ${29:}",
      "\t#organization: ${30:}",
      "\t#owner: ${31:}",
      "\t#owner_group: ${32:}",
      "\t#parameters: ${33:}",
      "\t#provision_method: ${34:build|image|bootdisk}",
      "\t#ptable: ${35:}",
      "\t#puppet_ca_proxy: ${36:}",
      "\t#puppet_proxy: ${37:}",
      "\t#puppetclasses: ${38:}",
      "\t#pxe_loader: ${39:PXELinux BIOS|PXELinux UEFI|Grub UEFI|Grub2 BIOS|Grub2 ELF|Grub2 UEFI|Grub2 UEFI SecureBoot|Grub2 UEFI HTTP|Grub2 UEFI HTTPS|Grub2 UEFI HTTPS SecureBoot|iPXE Embedded|iPXE UEFI HTTP|iPXE Chain BIOS|iPXE Chain UEFI|None}",
      "\t#realm: ${40:}",
      "\t#root_pass: ${41:}",
      "\t#state: ${42:#present|absent}",
      "\t#subnet: ${43:}",
      "\t#subnet6: ${44:}",
      "\t#validate_certs: ${45:true}"
    ]
  },
  "host_collection": {
    "prefix": "host_collection",
    "description": "Manage Host Collections",
    "body": [
      "theforeman.foreman.host_collection:",
      "\tname: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#description: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#updated_name: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "host_errata_info": {
    "prefix": "host_errata_info",
    "description": "Fetch information about Host Errata",
    "body": [
      "theforeman.foreman.host_errata_info:",
      "\thost: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#content_view: ${5:}",
      "\t#lifecycle_environment: ${6:}",
      "\t#location: ${7:}",
      "\t#organization: ${8:}",
      "\t#search: ${9:}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "host_info": {
    "prefix": "host_info",
    "description": "Fetch information about Hosts",
    "body": [
      "theforeman.foreman.host_info:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#location: ${4:}",
      "\t#name: ${5:}",
      "\t#organization: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "host_power": {
    "prefix": "host_power",
    "description": "Manage Power State of Hosts",
    "body": [
      "theforeman.foreman.host_power:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#state: ${5:on|start|off|stop|soft|reboot|cycle|reset|#state|status}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "hostgroup": {
    "prefix": "hostgroup",
    "description": "Manage Hostgroups",
    "body": [
      "theforeman.foreman.hostgroup:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#activation_keys: ${5:}",
      "\t#ansible_roles: ${6:}",
      "\t#architecture: ${7:}",
      "\t#compute_profile: ${8:}",
      "\t#compute_resource: ${9:}",
      "\t#config_groups: ${10:}",
      "\t#content_source: ${11:}",
      "\t#content_view: ${12:}",
      "\t#description: ${13:}",
      "\t#domain: ${14:}",
      "\t#environment: ${15:}",
      "\t#kickstart_repository: ${16:}",
      "\t#lifecycle_environment: ${17:}",
      "\t#locations: ${18:}",
      "\t#medium: ${19:}",
      "\t#openscap_proxy: ${20:}",
      "\t#operatingsystem: ${21:}",
      "\t#organization: ${22:}",
      "\t#organizations: ${23:}",
      "\t#parameters: ${24:}",
      "\t#parent: ${25:}",
      "\t#ptable: ${26:}",
      "\t#puppet_ca_proxy: ${27:}",
      "\t#puppet_proxy: ${28:}",
      "\t#puppetclasses: ${29:}",
      "\t#pxe_loader: ${30:PXELinux BIOS|PXELinux UEFI|Grub UEFI|Grub2 BIOS|Grub2 ELF|Grub2 UEFI|Grub2 UEFI SecureBoot|Grub2 UEFI HTTP|Grub2 UEFI HTTPS|Grub2 UEFI HTTPS SecureBoot|iPXE Embedded|iPXE UEFI HTTP|iPXE Chain BIOS|iPXE Chain UEFI|None}",
      "\t#realm: ${31:}",
      "\t#root_pass: ${32:}",
      "\t#state: ${33:#present|absent}",
      "\t#subnet: ${34:}",
      "\t#subnet6: ${35:}",
      "\t#updated_name: ${36:}",
      "\t#validate_certs: ${37:true}"
    ]
  },
  "hostgroup_info": {
    "prefix": "hostgroup_info",
    "description": "Get information about hostgroup(s)",
    "body": [
      "theforeman.foreman.hostgroup_info:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#location: ${4:}",
      "\t#name: ${5:}",
      "\t#organization: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "http_proxy": {
    "prefix": "http_proxy",
    "description": "Manage HTTP Proxies",
    "body": [
      "theforeman.foreman.http_proxy:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#locations: ${5:}",
      "\t#organizations: ${6:}",
      "\t#proxy_password: ${7:}",
      "\t#proxy_username: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#url: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "image": {
    "prefix": "image",
    "description": "Manage Images",
    "body": [
      "theforeman.foreman.image:",
      "\tarchitecture: ${1:}",
      "\tcompute_resource: ${2:}",
      "\timage_username: ${3:}",
      "\tname: ${4:}",
      "\toperatingsystem: ${5:}",
      "\tpassword: ${6:}",
      "\tserver_url: ${7:}",
      "\tusername: ${8:}",
      "\tuuid: ${9:}",
      "\t#image_password: ${10:}",
      "\t#state: ${11:#present|absent}",
      "\t#user_data: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "installation_medium": {
    "prefix": "installation_medium",
    "description": "Manage Installation Media",
    "body": [
      "theforeman.foreman.installation_medium:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#locations: ${5:}",
      "\t#operatingsystems: ${6:}",
      "\t#organizations: ${7:}",
      "\t#os_family: ${8:AIX|Altlinux|Archlinux|Coreos|Debian|Fcos|Freebsd|Gentoo|Junos|NXOS|Rancheros|Redhat|Rhcos|Solaris|Suse|VRP|Windows|Xenserver}",
      "\t#path: ${9:}",
      "\t#state: ${10:#present|present_with_defaults|absent}",
      "\t#updated_name: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "job_invocation": {
    "prefix": "job_invocation",
    "description": "Invoke Remote Execution Jobs",
    "body": [
      "theforeman.foreman.job_invocation:",
      "\tjob_template: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#bookmark: ${5:}",
      "\t#command: ${6:}",
      "\t#concurrency_control: ${7:}",
      "\t#description_format: ${8:}",
      "\t#execution_timeout_interval: ${9:}",
      "\t#inputs: ${10:}",
      "\t#randomized_ordering: ${11:}",
      "\t#recurrence: ${12:}",
      "\t#scheduling: ${13:}",
      "\t#search_query: ${14:}",
      "\t#ssh: ${15:}",
      "\t#targeting_type: ${16:#static_query|dynamic_query}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "job_template": {
    "prefix": "job_template",
    "description": "Manage Job Templates",
    "body": [
      "theforeman.foreman.job_template:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#audit_comment: ${4:}",
      "\t#description_format: ${5:}",
      "\t#file_name: ${6:}",
      "\t#job_category: ${7:}",
      "\t#locations: ${8:}",
      "\t#locked: ${9:false}",
      "\t#name: ${10:}",
      "\t#organizations: ${11:}",
      "\t#provider_type: ${12:}",
      "\t#snippet: ${13:}",
      "\t#state: ${14:#present|present_with_defaults|absent}",
      "\t#template: ${15:}",
      "\t#template_inputs: ${16:}",
      "\t#validate_certs: ${17:true}"
    ]
  },
  "lifecycle_environment": {
    "prefix": "lifecycle_environment",
    "description": "Manage Lifecycle Environments",
    "body": [
      "theforeman.foreman.lifecycle_environment:",
      "\tname: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#description: ${6:}",
      "\t#label: ${7:}",
      "\t#prior: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "location": {
    "prefix": "location",
    "description": "Manage Locations",
    "body": [
      "theforeman.foreman.location:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#ignore_types: ${5:}",
      "\t#organizations: ${6:}",
      "\t#parameters: ${7:}",
      "\t#parent: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "operatingsystem": {
    "prefix": "operatingsystem",
    "description": "Manage Operating Systems",
    "body": [
      "theforeman.foreman.operatingsystem:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#architectures: ${5:}",
      "\t#description: ${6:}",
      "\t#major: ${7:}",
      "\t#media: ${8:}",
      "\t#minor: ${9:}",
      "\t#os_family: ${10:AIX|Altlinux|Archlinux|Coreos|Debian|Fcos|Freebsd|Gentoo|Junos|NXOS|Rancheros|Redhat|Rhcos|Solaris|Suse|VRP|Windows|Xenserver}",
      "\t#parameters: ${11:}",
      "\t#password_hash: ${12:MD5|SHA256|SHA512|Base64|Base64-Windows}",
      "\t#provisioning_templates: ${13:}",
      "\t#ptables: ${14:}",
      "\t#release_name: ${15:}",
      "\t#state: ${16:#present|present_with_defaults|absent}",
      "\t#updated_name: ${17:}",
      "\t#validate_certs: ${18:true}"
    ]
  },
  "organization": {
    "prefix": "organization",
    "description": "Manage Organizations",
    "body": [
      "theforeman.foreman.organization:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#description: ${5:}",
      "\t#ignore_types: ${6:}",
      "\t#label: ${7:}",
      "\t#parameters: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "organization_info": {
    "prefix": "organization_info",
    "description": "Get information about organization(s)",
    "body": [
      "theforeman.foreman.organization_info:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#location: ${4:}",
      "\t#name: ${5:}",
      "\t#organization: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "os_default_template": {
    "prefix": "os_default_template",
    "description": "Manage Default Template Associations To Operating Systems",
    "body": [
      "theforeman.foreman.os_default_template:",
      "\toperatingsystem: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\ttemplate_kind: ${4:Bootdisk|cloud-init|finish|host_init_config|iPXE|job_template|kexec|POAP|provision|PXEGrub|PXEGrub2|PXELinux|registration|script|user_data|ZTP}",
      "\tusername: ${5:}",
      "\t#provisioning_template: ${6:}",
      "\t#state: ${7:#present|present_with_defaults|absent}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "partition_table": {
    "prefix": "partition_table",
    "description": "Manage Partition Table Templates",
    "body": [
      "theforeman.foreman.partition_table:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#file_name: ${4:}",
      "\t#layout: ${5:}",
      "\t#locations: ${6:}",
      "\t#locked: ${7:}",
      "\t#name: ${8:}",
      "\t#organizations: ${9:}",
      "\t#os_family: ${10:AIX|Altlinux|Archlinux|Coreos|Debian|Fcos|Freebsd|Gentoo|Junos|NXOS|Rancheros|Redhat|Rhcos|Solaris|Suse|VRP|Windows|Xenserver}",
      "\t#state: ${11:#present|present_with_defaults|absent}",
      "\t#updated_name: ${12:}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "product": {
    "prefix": "product",
    "description": "Manage Products",
    "body": [
      "theforeman.foreman.product:",
      "\tname: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#description: ${6:}",
      "\t#gpg_key: ${7:}",
      "\t#label: ${8:}",
      "\t#ssl_ca_cert: ${9:}",
      "\t#ssl_client_cert: ${10:}",
      "\t#ssl_client_key: ${11:}",
      "\t#state: ${12:#present|present_with_defaults|absent}",
      "\t#sync_plan: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "provisioning_template": {
    "prefix": "provisioning_template",
    "description": "Manage Provisioning Templates",
    "body": [
      "theforeman.foreman.provisioning_template:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#audit_comment: ${4:}",
      "\t#file_name: ${5:}",
      "\t#kind: ${6:Bootdisk|cloud-init|finish|host_init_config|iPXE|job_template|kexec|POAP|provision|PXEGrub|PXEGrub2|PXELinux|registration|script|snippet|user_data|ZTP}",
      "\t#locations: ${7:}",
      "\t#locked: ${8:}",
      "\t#name: ${9:}",
      "\t#operatingsystems: ${10:}",
      "\t#organizations: ${11:}",
      "\t#state: ${12:#present|present_with_defaults|absent}",
      "\t#template: ${13:}",
      "\t#updated_name: ${14:}",
      "\t#validate_certs: ${15:true}"
    ]
  },
  "puppet_environment": {
    "prefix": "puppet_environment",
    "description": "Manage Puppet Environments",
    "body": [
      "theforeman.foreman.puppet_environment:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#locations: ${5:}",
      "\t#organizations: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "puppetclasses_import": {
    "prefix": "puppetclasses_import",
    "description": "Import Puppet Classes from a Proxy",
    "body": [
      "theforeman.foreman.puppetclasses_import:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tsmart_proxy: ${3:}",
      "\tusername: ${4:}",
      "\t#environment: ${5:}",
      "\t#except: ${6:new|updated|obsolete}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "realm": {
    "prefix": "realm",
    "description": "Manage Realms",
    "body": [
      "theforeman.foreman.realm:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\trealm_proxy: ${3:}",
      "\trealm_type: ${4:Red Hat Identity Management|FreeIPA|Active Directory}",
      "\tserver_url: ${5:}",
      "\tusername: ${6:}",
      "\t#locations: ${7:}",
      "\t#organizations: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "redhat_manifest": {
    "prefix": "redhat_manifest",
    "description": "Interact with a Red Hat Satellite Subscription Manifest",
    "body": [
      "theforeman.foreman.redhat_manifest:",
      "\tpassword: ${1:}",
      "\tusername: ${2:}",
      "\t#content_access_mode: ${3:org_environment|#entitlement}",
      "\t#name: ${4:}",
      "\t#path: ${5:}",
      "\t#pool_id: ${6:}",
      "\t#pool_state: ${7:#present|absent}",
      "\t#portal: ${8:https://subscription.rhsm.redhat.com}",
      "\t#quantity: ${9:1}",
      "\t#state: ${10:#present|absent}",
      "\t#uuid: ${11:}",
      "\t#validate_certs: ${12:true}"
    ]
  },
  "registration_command": {
    "prefix": "registration_command",
    "description": "Manage Registration Command",
    "body": [
      "theforeman.foreman.registration_command:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#activation_keys: ${4:}",
      "\t#force: ${5:}",
      "\t#hostgroup: ${6:}",
      "\t#ignore_subman_errors: ${7:}",
      "\t#insecure: ${8:}",
      "\t#jwt_expiration: ${9:}",
      "\t#lifecycle_environment: ${10:}",
      "\t#location: ${11:}",
      "\t#operatingsystem: ${12:}",
      "\t#organization: ${13:}",
      "\t#packages: ${14:}",
      "\t#remote_execution_interface: ${15:}",
      "\t#repo: ${16:}",
      "\t#repo_gpg_key_url: ${17:}",
      "\t#setup_insights: ${18:}",
      "\t#setup_remote_execution: ${19:}",
      "\t#setup_remote_execution_pull: ${20:}",
      "\t#smart_proxy: ${21:}",
      "\t#update_packages: ${22:}",
      "\t#validate_certs: ${23:true}"
    ]
  },
  "repository": {
    "prefix": "repository",
    "description": "Manage Repositories",
    "body": [
      "theforeman.foreman.repository:",
      "\tcontent_type: ${1:deb|docker|file|ostree|puppet|yum|ansible_collection}",
      "\tname: ${2:}",
      "\torganization: ${3:}",
      "\tpassword: ${4:}",
      "\tproduct: ${5:}",
      "\tserver_url: ${6:}",
      "\tusername: ${7:}",
      "\t#ansible_collection_requirements: ${8:}",
      "\t#arch: ${9:}",
      "\t#auto_enabled: ${10:}",
      "\t#checksum_type: ${11:sha1|sha256}",
      "\t#deb_architectures: ${12:}",
      "\t#deb_components: ${13:}",
      "\t#deb_errata_url: ${14:}",
      "\t#deb_releases: ${15:}",
      "\t#description: ${16:}",
      "\t#docker_tags_whitelist: ${17:}",
      "\t#docker_upstream_name: ${18:}",
      "\t#download_concurrency: ${19:}",
      "\t#download_policy: ${20:background|immediate|on_demand}",
      "\t#exclude_tags: ${21:}",
      "\t#gpg_key: ${22:}",
      "\t#http_proxy: ${23:}",
      "\t#http_proxy_policy: ${24:global_default_http_proxy|none|use_selected_http_proxy}",
      "\t#ignorable_content: ${25:}",
      "\t#ignore_global_proxy: ${26:}",
      "\t#include_tags: ${27:}",
      "\t#label: ${28:}",
      "\t#mirror_on_sync: ${29:}",
      "\t#mirroring_policy: ${30:additive|mirror_content_only|mirror_complete}",
      "\t#os_versions: ${31:rhel-6|rhel-7|rhel-8|rhel-9}",
      "\t#ssl_ca_cert: ${32:}",
      "\t#ssl_client_cert: ${33:}",
      "\t#ssl_client_key: ${34:}",
      "\t#state: ${35:#present|present_with_defaults|absent}",
      "\t#unprotected: ${36:}",
      "\t#upstream_password: ${37:}",
      "\t#upstream_username: ${38:}",
      "\t#url: ${39:}",
      "\t#validate_certs: ${40:true}",
      "\t#verify_ssl_on_sync: ${41:}"
    ]
  },
  "repository_info": {
    "prefix": "repository_info",
    "description": "Fetch information about Repositories",
    "body": [
      "theforeman.foreman.repository_info:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tproduct: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#location: ${6:}",
      "\t#name: ${7:}",
      "\t#search: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "repository_set": {
    "prefix": "repository_set",
    "description": "Enable/disable Red Hat Repositories available through subscriptions",
    "body": [
      "theforeman.foreman.repository_set:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#all_repositories: ${5:}",
      "\t#label: ${6:}",
      "\t#name: ${7:}",
      "\t#product: ${8:}",
      "\t#repositories: ${9:}",
      "\t#state: ${10:#enabled|disabled}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "repository_set_info": {
    "prefix": "repository_set_info",
    "description": "Fetch information about Red Hat Repositories",
    "body": [
      "theforeman.foreman.repository_set_info:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#location: ${5:}",
      "\t#name: ${6:}",
      "\t#product: ${7:}",
      "\t#search: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "repository_sync": {
    "prefix": "repository_sync",
    "description": "Sync a Repository or Product",
    "body": [
      "theforeman.foreman.repository_sync:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tproduct: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#repository: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "resource_info": {
    "prefix": "resource_info",
    "description": "Gather information about resources",
    "body": [
      "theforeman.foreman.resource_info:",
      "\tpassword: ${1:}",
      "\tresource: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#full_details: ${5:false}",
      "\t#organization: ${6:}",
      "\t#params: ${7:}",
      "\t#search: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "role": {
    "prefix": "role",
    "description": "Manage Roles",
    "body": [
      "theforeman.foreman.role:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#description: ${5:}",
      "\t#filters: ${6:}",
      "\t#locations: ${7:}",
      "\t#organizations: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "scap_content": {
    "prefix": "scap_content",
    "description": "Manage SCAP content",
    "body": [
      "theforeman.foreman.scap_content:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\ttitle: ${3:}",
      "\tusername: ${4:}",
      "\t#locations: ${5:}",
      "\t#organizations: ${6:}",
      "\t#original_filename: ${7:}",
      "\t#scap_file: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#updated_title: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "scap_tailoring_file": {
    "prefix": "scap_tailoring_file",
    "description": "Manage SCAP Tailoring Files",
    "body": [
      "theforeman.foreman.scap_tailoring_file:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#locations: ${5:}",
      "\t#organizations: ${6:}",
      "\t#original_filename: ${7:}",
      "\t#scap_file: ${8:}",
      "\t#state: ${9:#present|absent}",
      "\t#updated_name: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "scc_account": {
    "prefix": "scc_account",
    "description": "Manage SUSE Customer Center Accounts",
    "body": [
      "theforeman.foreman.scc_account:",
      "\tname: ${1:}",
      "\torganization: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#base_url: ${6:}",
      "\t#interval: ${7:never|daily|weekly|monthly}",
      "\t#login: ${8:}",
      "\t#scc_account_password: ${9:}",
      "\t#state: ${10:#present|absent|synced}",
      "\t#sync_date: ${11:}",
      "\t#test_connection: ${12:false}",
      "\t#updated_name: ${13:}",
      "\t#validate_certs: ${14:true}"
    ]
  },
  "scc_product": {
    "prefix": "scc_product",
    "description": "Subscribe SUSE Customer Center Account Products",
    "body": [
      "theforeman.foreman.scc_product:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tscc_account: ${3:}",
      "\tscc_product: ${4:}",
      "\tserver_url: ${5:}",
      "\tusername: ${6:}",
      "\t#validate_certs: ${7:true}"
    ]
  },
  "setting": {
    "prefix": "setting",
    "description": "Manage Settings",
    "body": [
      "theforeman.foreman.setting:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#validate_certs: ${5:true}",
      "\t#value: ${6:}"
    ]
  },
  "setting_info": {
    "prefix": "setting_info",
    "description": "Fetch information about Settings",
    "body": [
      "theforeman.foreman.setting_info:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#location: ${4:}",
      "\t#name: ${5:}",
      "\t#organization: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "smart_class_parameter": {
    "prefix": "smart_class_parameter",
    "description": "Manage Smart Class Parameters",
    "body": [
      "theforeman.foreman.smart_class_parameter:",
      "\tparameter: ${1:}",
      "\tpassword: ${2:}",
      "\tpuppetclass_name: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#avoid_duplicates: ${6:}",
      "\t#default_value: ${7:}",
      "\t#description: ${8:}",
      "\t#hidden_value: ${9:}",
      "\t#merge_default: ${10:}",
      "\t#merge_overrides: ${11:}",
      "\t#omit: ${12:}",
      "\t#override: ${13:}",
      "\t#override_value_order: ${14:}",
      "\t#override_values: ${15:}",
      "\t#parameter_type: ${16:string|boolean|integer|real|array|hash|yaml|json|none}",
      "\t#required: ${17:}",
      "\t#state: ${18:#present|present_with_defaults}",
      "\t#validate_certs: ${19:true}",
      "\t#validator_rule: ${20:}",
      "\t#validator_type: ${21:regexp|list}"
    ]
  },
  "smart_class_parameter_override_value": {
    "prefix": "smart_class_parameter_override_value",
    "description": "Manage Smart Class Parameter Override Values",
    "body": [
      "theforeman.foreman.smart_class_parameter_override_value:",
      "\tmatch: ${1:}",
      "\tpassword: ${2:}",
      "\tpuppetclass: ${3:}",
      "\tserver_url: ${4:}",
      "\tsmart_class_parameter: ${5:}",
      "\tusername: ${6:}",
      "\t#omit: ${7:}",
      "\t#state: ${8:#present|absent}",
      "\t#validate_certs: ${9:true}",
      "\t#value: ${10:}"
    ]
  },
  "smart_proxy": {
    "prefix": "smart_proxy",
    "description": "Manage Smart Proxies",
    "body": [
      "theforeman.foreman.smart_proxy:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\turl: ${4:}",
      "\tusername: ${5:}",
      "\t#download_policy: ${6:background|immediate|on_demand|streamed|inherit}",
      "\t#lifecycle_environments: ${7:}",
      "\t#locations: ${8:}",
      "\t#organizations: ${9:}",
      "\t#state: ${10:#present|absent}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "snapshot": {
    "prefix": "snapshot",
    "description": "Manage Snapshots",
    "body": [
      "theforeman.foreman.snapshot:",
      "\thost: ${1:}",
      "\tname: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#description: ${6:}",
      "\t#id: ${7:}",
      "\t#include_ram: ${8:}",
      "\t#state: ${9:#present|reverted|absent|new_snapshot}",
      "\t#validate_certs: ${10:true}"
    ]
  },
  "snapshot_info": {
    "prefix": "snapshot_info",
    "description": "Fetch information about Foreman Snapshots",
    "body": [
      "theforeman.foreman.snapshot_info:",
      "\thost: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#location: ${5:}",
      "\t#name: ${6:}",
      "\t#organization: ${7:}",
      "\t#search: ${8:}",
      "\t#validate_certs: ${9:true}"
    ]
  },
  "status_info": {
    "prefix": "status_info",
    "description": "Get status info",
    "body": [
      "theforeman.foreman.status_info:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#validate_certs: ${4:true}"
    ]
  },
  "subnet": {
    "prefix": "subnet",
    "description": "Manage Subnets",
    "body": [
      "theforeman.foreman.subnet:",
      "\tname: ${1:}",
      "\tnetwork: ${2:}",
      "\tpassword: ${3:}",
      "\tserver_url: ${4:}",
      "\tusername: ${5:}",
      "\t#bmc_proxy: ${6:}",
      "\t#boot_mode: ${7:#DHCP|Static}",
      "\t#cidr: ${8:}",
      "\t#description: ${9:}",
      "\t#dhcp_proxy: ${10:}",
      "\t#discovery_proxy: ${11:}",
      "\t#dns_primary: ${12:}",
      "\t#dns_proxy: ${13:}",
      "\t#dns_secondary: ${14:}",
      "\t#domains: ${15:}",
      "\t#externalipam_group: ${16:}",
      "\t#externalipam_proxy: ${17:}",
      "\t#from_ip: ${18:}",
      "\t#gateway: ${19:}",
      "\t#httpboot_proxy: ${20:}",
      "\t#ipam: ${21:#DHCP|Internal DB|Random DB|EUI-64|External IPAM|None}",
      "\t#locations: ${22:}",
      "\t#mask: ${23:}",
      "\t#mtu: ${24:}",
      "\t#network_type: ${25:#IPv4|IPv6}",
      "\t#organizations: ${26:}",
      "\t#parameters: ${27:}",
      "\t#remote_execution_proxies: ${28:}",
      "\t#state: ${29:#present|absent}",
      "\t#template_proxy: ${30:}",
      "\t#tftp_proxy: ${31:}",
      "\t#to_ip: ${32:}",
      "\t#updated_name: ${33:}",
      "\t#validate_certs: ${34:true}",
      "\t#vlanid: ${35:}"
    ]
  },
  "subnet_info": {
    "prefix": "subnet_info",
    "description": "Fetch information about Subnets",
    "body": [
      "theforeman.foreman.subnet_info:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#location: ${4:}",
      "\t#name: ${5:}",
      "\t#organization: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "subscription_info": {
    "prefix": "subscription_info",
    "description": "Fetch information about Subscriptions",
    "body": [
      "theforeman.foreman.subscription_info:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#location: ${5:}",
      "\t#name: ${6:}",
      "\t#search: ${7:}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "subscription_manifest": {
    "prefix": "subscription_manifest",
    "description": "Manage Subscription Manifests",
    "body": [
      "theforeman.foreman.subscription_manifest:",
      "\torganization: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#manifest_path: ${5:}",
      "\t#repository_url: ${6:}",
      "\t#state: ${7:absent|#present|refreshed}",
      "\t#validate_certs: ${8:true}"
    ]
  },
  "sync_plan": {
    "prefix": "sync_plan",
    "description": "Manage Sync Plans",
    "body": [
      "theforeman.foreman.sync_plan:",
      "\tenabled: ${1:}",
      "\tinterval: ${2:hourly|daily|weekly|custom cron}",
      "\tname: ${3:}",
      "\torganization: ${4:}",
      "\tpassword: ${5:}",
      "\tserver_url: ${6:}",
      "\tsync_date: ${7:}",
      "\tusername: ${8:}",
      "\t#cron_expression: ${9:}",
      "\t#description: ${10:}",
      "\t#products: ${11:}",
      "\t#state: ${12:#present|present_with_defaults|absent}",
      "\t#validate_certs: ${13:true}"
    ]
  },
  "templates_import": {
    "prefix": "templates_import",
    "description": "Sync Templates from a repository",
    "body": [
      "theforeman.foreman.templates_import:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\tusername: ${3:}",
      "\t#associate: ${4:always|new|never}",
      "\t#branch: ${5:}",
      "\t#dirname: ${6:}",
      "\t#filter: ${7:}",
      "\t#force: ${8:}",
      "\t#locations: ${9:}",
      "\t#lock: ${10:}",
      "\t#negate: ${11:}",
      "\t#organizations: ${12:}",
      "\t#prefix: ${13:}",
      "\t#repo: ${14:}",
      "\t#validate_certs: ${15:true}",
      "\t#verbose: ${16:}"
    ]
  },
  "user": {
    "prefix": "user",
    "description": "Manage Users",
    "body": [
      "theforeman.foreman.user:",
      "\tlogin: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#admin: ${5:false}",
      "\t#auth_source: ${6:}",
      "\t#default_location: ${7:}",
      "\t#default_organization: ${8:}",
      "\t#description: ${9:}",
      "\t#firstname: ${10:}",
      "\t#lastname: ${11:}",
      "\t#locale: ${12:ca|de|en|en_GB|es|fr|gl|it|ja|ko|nl_NL|pl|pt_BR|ru|sv_SE|zh_CN|zh_TW}",
      "\t#locations: ${13:}",
      "\t#mail: ${14:}",
      "\t#organizations: ${15:}",
      "\t#roles: ${16:}",
      "\t#state: ${17:#present|absent}",
      "\t#timezone: ${18:International Date Line West|American Samoa|Midway Island|Hawaii|Alaska|Pacific Time (US & Canada)|Tijuana|Arizona|Chihuahua|Mazatlan|Mountain Time (US & Canada)|Central America|Central Time (US & Canada)|Guadalajara|Mexico City|Monterrey|Saskatchewan|Bogota|Eastern Time (US & Canada)|Indiana (East)|Lima|Quito|Atlantic Time (Canada)|Caracas|Georgetown|La Paz|Puerto Rico|Santiago|Newfoundland|Brasilia|Buenos Aires|Greenland|Montevideo|Mid-Atlantic|Azores|Cape Verde Is.|Dublin|Edinburgh|Lisbon|London|Monrovia|UTC|Amsterdam|Belgrade|Berlin|Bern|Bratislava|Brussels|Budapest|Casablanca|Copenhagen|Ljubljana|Madrid|Paris|Prague|Rome|Sarajevo|Skopje|Stockholm|Vienna|Warsaw|West Central Africa|Zagreb|Zurich|Athens|Bucharest|Cairo|Harare|Helsinki|Jerusalem|Kaliningrad|Kyiv|Pretoria|Riga|Sofia|Tallinn|Vilnius|Baghdad|Istanbul|Kuwait|Minsk|Moscow|Nairobi|Riyadh|St. Petersburg|Tehran|Abu Dhabi|Baku|Muscat|Samara|Tbilisi|Volgograd|Yerevan|Kabul|Ekaterinburg|Islamabad|Karachi|Tashkent|Chennai|Kolkata|Mumbai|New Delhi|Sri Jayawardenepura|Kathmandu|Almaty|Astana|Dhaka|Urumqi|Rangoon|Bangkok|Hanoi|Jakarta|Krasnoyarsk|Novosibirsk|Beijing|Chongqing|Hong Kong|Irkutsk|Kuala Lumpur|Perth|Singapore|Taipei|Ulaanbaatar|Osaka|Sapporo|Seoul|Tokyo|Yakutsk|Adelaide|Darwin|Brisbane|Canberra|Guam|Hobart|Melbourne|Port Moresby|Sydney|Vladivostok|Magadan|New Caledonia|Solomon Is.|Srednekolymsk|Auckland|Fiji|Kamchatka|Marshall Is.|Wellington|Chatham Is.|Nuku'alofa|Samoa|Tokelau Is.}",
      "\t#user_password: ${19:}",
      "\t#validate_certs: ${20:true}"
    ]
  },
  "usergroup": {
    "prefix": "usergroup",
    "description": "Manage User Groups",
    "body": [
      "theforeman.foreman.usergroup:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#admin: ${5:false}",
      "\t#roles: ${6:}",
      "\t#state: ${7:#present|absent}",
      "\t#updated_name: ${8:}",
      "\t#usergroups: ${9:}",
      "\t#users: ${10:}",
      "\t#validate_certs: ${11:true}"
    ]
  },
  "wait_for_task": {
    "prefix": "wait_for_task",
    "description": "Wait for a task",
    "body": [
      "theforeman.foreman.wait_for_task:",
      "\tpassword: ${1:}",
      "\tserver_url: ${2:}",
      "\ttask: ${3:}",
      "\tusername: ${4:}",
      "\t#timeout: ${5:60}",
      "\t#validate_certs: ${6:true}"
    ]
  },
  "webhook": {
    "prefix": "webhook",
    "description": "Manage Webhooks",
    "body": [
      "theforeman.foreman.webhook:",
      "\tname: ${1:}",
      "\tpassword: ${2:}",
      "\tserver_url: ${3:}",
      "\tusername: ${4:}",
      "\t#enabled: ${5:}",
      "\t#event: ${6:}",
      "\t#http_content_type: ${7:}",
      "\t#http_headers: ${8:}",
      "\t#http_method: ${9:POST|GET|PUT|DELETE|PATCH}",
      "\t#locations: ${10:}",
      "\t#organizations: ${11:}",
      "\t#proxy_authorization: ${12:}",
      "\t#ssl_ca_certs: ${13:}",
      "\t#state: ${14:#present|absent}",
      "\t#target_url: ${15:}",
      "\t#validate_certs: ${16:true}",
      "\t#verify_ssl: ${17:}",
      "\t#webhook_password: ${18:}",
      "\t#webhook_template: ${19:}",
      "\t#webhook_username: ${20:}"
    ]
  }
}
